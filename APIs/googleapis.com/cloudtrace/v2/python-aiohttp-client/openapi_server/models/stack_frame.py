# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.module import Module
from openapi_server.models.truncatable_string import TruncatableString
from openapi_server import util


class StackFrame(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_number: str=None, file_name: TruncatableString=None, function_name: TruncatableString=None, line_number: str=None, load_module: Module=None, original_function_name: TruncatableString=None, source_version: TruncatableString=None):
        """StackFrame - a model defined in OpenAPI

        :param column_number: The column_number of this StackFrame.
        :param file_name: The file_name of this StackFrame.
        :param function_name: The function_name of this StackFrame.
        :param line_number: The line_number of this StackFrame.
        :param load_module: The load_module of this StackFrame.
        :param original_function_name: The original_function_name of this StackFrame.
        :param source_version: The source_version of this StackFrame.
        """
        self.openapi_types = {
            'column_number': str,
            'file_name': TruncatableString,
            'function_name': TruncatableString,
            'line_number': str,
            'load_module': Module,
            'original_function_name': TruncatableString,
            'source_version': TruncatableString
        }

        self.attribute_map = {
            'column_number': 'columnNumber',
            'file_name': 'fileName',
            'function_name': 'functionName',
            'line_number': 'lineNumber',
            'load_module': 'loadModule',
            'original_function_name': 'originalFunctionName',
            'source_version': 'sourceVersion'
        }

        self._column_number = column_number
        self._file_name = file_name
        self._function_name = function_name
        self._line_number = line_number
        self._load_module = load_module
        self._original_function_name = original_function_name
        self._source_version = source_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackFrame':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StackFrame of this StackFrame.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_number(self):
        """Gets the column_number of this StackFrame.

        The column number where the function call appears, if available. This is important in JavaScript because of its anonymous functions.

        :return: The column_number of this StackFrame.
        :rtype: str
        """
        return self._column_number

    @column_number.setter
    def column_number(self, column_number):
        """Sets the column_number of this StackFrame.

        The column number where the function call appears, if available. This is important in JavaScript because of its anonymous functions.

        :param column_number: The column_number of this StackFrame.
        :type column_number: str
        """

        self._column_number = column_number

    @property
    def file_name(self):
        """Gets the file_name of this StackFrame.


        :return: The file_name of this StackFrame.
        :rtype: TruncatableString
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this StackFrame.


        :param file_name: The file_name of this StackFrame.
        :type file_name: TruncatableString
        """

        self._file_name = file_name

    @property
    def function_name(self):
        """Gets the function_name of this StackFrame.


        :return: The function_name of this StackFrame.
        :rtype: TruncatableString
        """
        return self._function_name

    @function_name.setter
    def function_name(self, function_name):
        """Sets the function_name of this StackFrame.


        :param function_name: The function_name of this StackFrame.
        :type function_name: TruncatableString
        """

        self._function_name = function_name

    @property
    def line_number(self):
        """Gets the line_number of this StackFrame.

        The line number in `file_name` where the function call appears.

        :return: The line_number of this StackFrame.
        :rtype: str
        """
        return self._line_number

    @line_number.setter
    def line_number(self, line_number):
        """Sets the line_number of this StackFrame.

        The line number in `file_name` where the function call appears.

        :param line_number: The line_number of this StackFrame.
        :type line_number: str
        """

        self._line_number = line_number

    @property
    def load_module(self):
        """Gets the load_module of this StackFrame.


        :return: The load_module of this StackFrame.
        :rtype: Module
        """
        return self._load_module

    @load_module.setter
    def load_module(self, load_module):
        """Sets the load_module of this StackFrame.


        :param load_module: The load_module of this StackFrame.
        :type load_module: Module
        """

        self._load_module = load_module

    @property
    def original_function_name(self):
        """Gets the original_function_name of this StackFrame.


        :return: The original_function_name of this StackFrame.
        :rtype: TruncatableString
        """
        return self._original_function_name

    @original_function_name.setter
    def original_function_name(self, original_function_name):
        """Sets the original_function_name of this StackFrame.


        :param original_function_name: The original_function_name of this StackFrame.
        :type original_function_name: TruncatableString
        """

        self._original_function_name = original_function_name

    @property
    def source_version(self):
        """Gets the source_version of this StackFrame.


        :return: The source_version of this StackFrame.
        :rtype: TruncatableString
        """
        return self._source_version

    @source_version.setter
    def source_version(self, source_version):
        """Sets the source_version of this StackFrame.


        :param source_version: The source_version of this StackFrame.
        :type source_version: TruncatableString
        """

        self._source_version = source_version
