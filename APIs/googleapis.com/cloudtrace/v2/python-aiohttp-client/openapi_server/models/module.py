# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.truncatable_string import TruncatableString
from openapi_server import util


class Module(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_id: TruncatableString=None, module: TruncatableString=None):
        """Module - a model defined in OpenAPI

        :param build_id: The build_id of this Module.
        :param module: The module of this Module.
        """
        self.openapi_types = {
            'build_id': TruncatableString,
            'module': TruncatableString
        }

        self.attribute_map = {
            'build_id': 'buildId',
            'module': 'module'
        }

        self._build_id = build_id
        self._module = module

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Module':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Module of this Module.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_id(self):
        """Gets the build_id of this Module.


        :return: The build_id of this Module.
        :rtype: TruncatableString
        """
        return self._build_id

    @build_id.setter
    def build_id(self, build_id):
        """Sets the build_id of this Module.


        :param build_id: The build_id of this Module.
        :type build_id: TruncatableString
        """

        self._build_id = build_id

    @property
    def module(self):
        """Gets the module of this Module.


        :return: The module of this Module.
        :rtype: TruncatableString
        """
        return self._module

    @module.setter
    def module(self, module):
        """Sets the module of this Module.


        :param module: The module of this Module.
        :type module: TruncatableString
        """

        self._module = module
