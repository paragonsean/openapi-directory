# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stack_frame import StackFrame
from openapi_server import util


class StackFrames(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dropped_frames_count: int=None, frame: List[StackFrame]=None):
        """StackFrames - a model defined in OpenAPI

        :param dropped_frames_count: The dropped_frames_count of this StackFrames.
        :param frame: The frame of this StackFrames.
        """
        self.openapi_types = {
            'dropped_frames_count': int,
            'frame': List[StackFrame]
        }

        self.attribute_map = {
            'dropped_frames_count': 'droppedFramesCount',
            'frame': 'frame'
        }

        self._dropped_frames_count = dropped_frames_count
        self._frame = frame

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StackFrames':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StackFrames of this StackFrames.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dropped_frames_count(self):
        """Gets the dropped_frames_count of this StackFrames.

        The number of stack frames that were dropped because there were too many stack frames. If this value is 0, then no stack frames were dropped.

        :return: The dropped_frames_count of this StackFrames.
        :rtype: int
        """
        return self._dropped_frames_count

    @dropped_frames_count.setter
    def dropped_frames_count(self, dropped_frames_count):
        """Sets the dropped_frames_count of this StackFrames.

        The number of stack frames that were dropped because there were too many stack frames. If this value is 0, then no stack frames were dropped.

        :param dropped_frames_count: The dropped_frames_count of this StackFrames.
        :type dropped_frames_count: int
        """

        self._dropped_frames_count = dropped_frames_count

    @property
    def frame(self):
        """Gets the frame of this StackFrames.

        Stack frames in this call stack.

        :return: The frame of this StackFrames.
        :rtype: List[StackFrame]
        """
        return self._frame

    @frame.setter
    def frame(self, frame):
        """Sets the frame of this StackFrames.

        Stack frames in this call stack.

        :param frame: The frame of this StackFrames.
        :type frame: List[StackFrame]
        """

        self._frame = frame
