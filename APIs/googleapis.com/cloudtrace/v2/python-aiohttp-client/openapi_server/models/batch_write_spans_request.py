# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.span import Span
from openapi_server import util


class BatchWriteSpansRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, spans: List[Span]=None):
        """BatchWriteSpansRequest - a model defined in OpenAPI

        :param spans: The spans of this BatchWriteSpansRequest.
        """
        self.openapi_types = {
            'spans': List[Span]
        }

        self.attribute_map = {
            'spans': 'spans'
        }

        self._spans = spans

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchWriteSpansRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchWriteSpansRequest of this BatchWriteSpansRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def spans(self):
        """Gets the spans of this BatchWriteSpansRequest.

        Required. A list of new spans. The span names must not match existing spans, otherwise the results are undefined.

        :return: The spans of this BatchWriteSpansRequest.
        :rtype: List[Span]
        """
        return self._spans

    @spans.setter
    def spans(self, spans):
        """Sets the spans of this BatchWriteSpansRequest.

        Required. A list of new spans. The span names must not match existing spans, otherwise the results are undefined.

        :param spans: The spans of this BatchWriteSpansRequest.
        :type spans: List[Span]
        """

        self._spans = spans
