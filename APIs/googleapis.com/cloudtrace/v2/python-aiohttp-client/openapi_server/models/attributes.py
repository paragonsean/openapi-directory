# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribute_value import AttributeValue
from openapi_server import util


class Attributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_map: Dict[str, AttributeValue]=None, dropped_attributes_count: int=None):
        """Attributes - a model defined in OpenAPI

        :param attribute_map: The attribute_map of this Attributes.
        :param dropped_attributes_count: The dropped_attributes_count of this Attributes.
        """
        self.openapi_types = {
            'attribute_map': Dict[str, AttributeValue],
            'dropped_attributes_count': int
        }

        self.attribute_map = {
            'attribute_map': 'attributeMap',
            'dropped_attributes_count': 'droppedAttributesCount'
        }

        self._attribute_map = attribute_map
        self._dropped_attributes_count = dropped_attributes_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attributes of this Attributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_map(self):
        """Gets the attribute_map of this Attributes.

        A set of attributes. Each attribute's key can be up to 128 bytes long. The value can be a string up to 256 bytes, a signed 64-bit integer, or the boolean values `true` or `false`. For example: \"/instance_id\": { \"string_value\": { \"value\": \"my-instance\" } } \"/http/request_bytes\": { \"int_value\": 300 } \"example.com/myattribute\": { \"bool_value\": false }

        :return: The attribute_map of this Attributes.
        :rtype: Dict[str, AttributeValue]
        """
        return self._attribute_map

    @attribute_map.setter
    def attribute_map(self, attribute_map):
        """Sets the attribute_map of this Attributes.

        A set of attributes. Each attribute's key can be up to 128 bytes long. The value can be a string up to 256 bytes, a signed 64-bit integer, or the boolean values `true` or `false`. For example: \"/instance_id\": { \"string_value\": { \"value\": \"my-instance\" } } \"/http/request_bytes\": { \"int_value\": 300 } \"example.com/myattribute\": { \"bool_value\": false }

        :param attribute_map: The attribute_map of this Attributes.
        :type attribute_map: Dict[str, AttributeValue]
        """

        self._attribute_map = attribute_map

    @property
    def dropped_attributes_count(self):
        """Gets the dropped_attributes_count of this Attributes.

        The number of attributes that were discarded. Attributes can be discarded because their keys are too long or because there are too many attributes. If this value is 0 then all attributes are valid.

        :return: The dropped_attributes_count of this Attributes.
        :rtype: int
        """
        return self._dropped_attributes_count

    @dropped_attributes_count.setter
    def dropped_attributes_count(self, dropped_attributes_count):
        """Sets the dropped_attributes_count of this Attributes.

        The number of attributes that were discarded. Attributes can be discarded because their keys are too long or because there are too many attributes. If this value is 0 then all attributes are valid.

        :param dropped_attributes_count: The dropped_attributes_count of this Attributes.
        :type dropped_attributes_count: int
        """

        self._dropped_attributes_count = dropped_attributes_count
