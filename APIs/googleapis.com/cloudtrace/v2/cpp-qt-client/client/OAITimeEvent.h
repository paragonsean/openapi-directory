/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeEvent.h
 *
 * A time-stamped annotation or message event in the Span.
 */

#ifndef OAITimeEvent_H
#define OAITimeEvent_H

#include <QJsonObject>

#include "OAIAnnotation.h"
#include "OAIMessageEvent.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnnotation;
class OAIMessageEvent;

class OAITimeEvent : public OAIObject {
public:
    OAITimeEvent();
    OAITimeEvent(QString json);
    ~OAITimeEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAnnotation getAnnotation() const;
    void setAnnotation(const OAIAnnotation &annotation);
    bool is_annotation_Set() const;
    bool is_annotation_Valid() const;

    OAIMessageEvent getMessageEvent() const;
    void setMessageEvent(const OAIMessageEvent &message_event);
    bool is_message_event_Set() const;
    bool is_message_event_Valid() const;

    QString getTime() const;
    void setTime(const QString &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAnnotation m_annotation;
    bool m_annotation_isSet;
    bool m_annotation_isValid;

    OAIMessageEvent m_message_event;
    bool m_message_event_isSet;
    bool m_message_event_isValid;

    QString m_time;
    bool m_time_isSet;
    bool m_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeEvent)

#endif // OAITimeEvent_H
