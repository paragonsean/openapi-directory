/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISpan.h
 *
 * A span represents a single operation within a trace. Spans can be nested to form a trace tree. Often, a trace contains a root span that describes the end-to-end latency, and one or more subspans for its sub-operations. A trace can also contain multiple root spans, or none at all. Spans do not need to be contiguous. There might be gaps or overlaps between spans in a trace.
 */

#ifndef OAISpan_H
#define OAISpan_H

#include <QJsonObject>

#include "OAIAttributes.h"
#include "OAILinks.h"
#include "OAIStackTrace.h"
#include "OAIStatus.h"
#include "OAITimeEvents.h"
#include "OAITruncatableString.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttributes;
class OAITruncatableString;
class OAILinks;
class OAIStackTrace;
class OAIStatus;
class OAITimeEvents;

class OAISpan : public OAIObject {
public:
    OAISpan();
    OAISpan(QString json);
    ~OAISpan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAttributes getAttributes() const;
    void setAttributes(const OAIAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    qint32 getChildSpanCount() const;
    void setChildSpanCount(const qint32 &child_span_count);
    bool is_child_span_count_Set() const;
    bool is_child_span_count_Valid() const;

    OAITruncatableString getDisplayName() const;
    void setDisplayName(const OAITruncatableString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAILinks getLinks() const;
    void setLinks(const OAILinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParentSpanId() const;
    void setParentSpanId(const QString &parent_span_id);
    bool is_parent_span_id_Set() const;
    bool is_parent_span_id_Valid() const;

    bool isSameProcessAsParentSpan() const;
    void setSameProcessAsParentSpan(const bool &same_process_as_parent_span);
    bool is_same_process_as_parent_span_Set() const;
    bool is_same_process_as_parent_span_Valid() const;

    QString getSpanId() const;
    void setSpanId(const QString &span_id);
    bool is_span_id_Set() const;
    bool is_span_id_Valid() const;

    QString getSpanKind() const;
    void setSpanKind(const QString &span_kind);
    bool is_span_kind_Set() const;
    bool is_span_kind_Valid() const;

    OAIStackTrace getStackTrace() const;
    void setStackTrace(const OAIStackTrace &stack_trace);
    bool is_stack_trace_Set() const;
    bool is_stack_trace_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAITimeEvents getTimeEvents() const;
    void setTimeEvents(const OAITimeEvents &time_events);
    bool is_time_events_Set() const;
    bool is_time_events_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    qint32 m_child_span_count;
    bool m_child_span_count_isSet;
    bool m_child_span_count_isValid;

    OAITruncatableString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAILinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_parent_span_id;
    bool m_parent_span_id_isSet;
    bool m_parent_span_id_isValid;

    bool m_same_process_as_parent_span;
    bool m_same_process_as_parent_span_isSet;
    bool m_same_process_as_parent_span_isValid;

    QString m_span_id;
    bool m_span_id_isSet;
    bool m_span_id_isValid;

    QString m_span_kind;
    bool m_span_kind_isSet;
    bool m_span_kind_isValid;

    OAIStackTrace m_stack_trace;
    bool m_stack_trace_isSet;
    bool m_stack_trace_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAITimeEvents m_time_events;
    bool m_time_events_isSet;
    bool m_time_events_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISpan)

#endif // OAISpan_H
