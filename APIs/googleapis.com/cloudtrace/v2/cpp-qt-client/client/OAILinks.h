/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILinks.h
 *
 * A collection of links, which are references from this span to a span in the same or different trace.
 */

#ifndef OAILinks_H
#define OAILinks_H

#include <QJsonObject>

#include "OAILink.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILink;

class OAILinks : public OAIObject {
public:
    OAILinks();
    OAILinks(QString json);
    ~OAILinks() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDroppedLinksCount() const;
    void setDroppedLinksCount(const qint32 &dropped_links_count);
    bool is_dropped_links_count_Set() const;
    bool is_dropped_links_count_Valid() const;

    QList<OAILink> getLink() const;
    void setLink(const QList<OAILink> &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_dropped_links_count;
    bool m_dropped_links_count_isSet;
    bool m_dropped_links_count_isValid;

    QList<OAILink> m_link;
    bool m_link_isSet;
    bool m_link_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILinks)

#endif // OAILinks_H
