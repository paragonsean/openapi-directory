/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStackTrace.h
 *
 * A call stack appearing in a trace.
 */

#ifndef OAIStackTrace_H
#define OAIStackTrace_H

#include <QJsonObject>

#include "OAIStackFrames.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStackFrames;

class OAIStackTrace : public OAIObject {
public:
    OAIStackTrace();
    OAIStackTrace(QString json);
    ~OAIStackTrace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStackFrames getStackFrames() const;
    void setStackFrames(const OAIStackFrames &stack_frames);
    bool is_stack_frames_Set() const;
    bool is_stack_frames_Valid() const;

    QString getStackTraceHashId() const;
    void setStackTraceHashId(const QString &stack_trace_hash_id);
    bool is_stack_trace_hash_id_Set() const;
    bool is_stack_trace_hash_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStackFrames m_stack_frames;
    bool m_stack_frames_isSet;
    bool m_stack_frames_isValid;

    QString m_stack_trace_hash_id;
    bool m_stack_trace_hash_id_isSet;
    bool m_stack_trace_hash_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStackTrace)

#endif // OAIStackTrace_H
