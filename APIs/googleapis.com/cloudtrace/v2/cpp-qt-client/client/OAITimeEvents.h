/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeEvents.h
 *
 * A collection of &#x60;TimeEvent&#x60;s. A &#x60;TimeEvent&#x60; is a time-stamped annotation on the span, consisting of either user-supplied key:value pairs, or details of a message sent/received between Spans.
 */

#ifndef OAITimeEvents_H
#define OAITimeEvents_H

#include <QJsonObject>

#include "OAITimeEvent.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeEvent;

class OAITimeEvents : public OAIObject {
public:
    OAITimeEvents();
    OAITimeEvents(QString json);
    ~OAITimeEvents() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDroppedAnnotationsCount() const;
    void setDroppedAnnotationsCount(const qint32 &dropped_annotations_count);
    bool is_dropped_annotations_count_Set() const;
    bool is_dropped_annotations_count_Valid() const;

    qint32 getDroppedMessageEventsCount() const;
    void setDroppedMessageEventsCount(const qint32 &dropped_message_events_count);
    bool is_dropped_message_events_count_Set() const;
    bool is_dropped_message_events_count_Valid() const;

    QList<OAITimeEvent> getTimeEvent() const;
    void setTimeEvent(const QList<OAITimeEvent> &time_event);
    bool is_time_event_Set() const;
    bool is_time_event_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_dropped_annotations_count;
    bool m_dropped_annotations_count_isSet;
    bool m_dropped_annotations_count_isValid;

    qint32 m_dropped_message_events_count;
    bool m_dropped_message_events_count_isSet;
    bool m_dropped_message_events_count_isValid;

    QList<OAITimeEvent> m_time_event;
    bool m_time_event_isSet;
    bool m_time_event_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeEvents)

#endif // OAITimeEvents_H
