/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnnotation.h
 *
 * Text annotation with a set of attributes.
 */

#ifndef OAIAnnotation_H
#define OAIAnnotation_H

#include <QJsonObject>

#include "OAIAttributes.h"
#include "OAITruncatableString.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttributes;
class OAITruncatableString;

class OAIAnnotation : public OAIObject {
public:
    OAIAnnotation();
    OAIAnnotation(QString json);
    ~OAIAnnotation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAttributes getAttributes() const;
    void setAttributes(const OAIAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAITruncatableString getDescription() const;
    void setDescription(const OAITruncatableString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAITruncatableString m_description;
    bool m_description_isSet;
    bool m_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnnotation)

#endif // OAIAnnotation_H
