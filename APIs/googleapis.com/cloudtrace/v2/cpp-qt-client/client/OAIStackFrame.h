/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStackFrame.h
 *
 * Represents a single stack frame in a stack trace.
 */

#ifndef OAIStackFrame_H
#define OAIStackFrame_H

#include <QJsonObject>

#include "OAIModule.h"
#include "OAITruncatableString.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITruncatableString;
class OAIModule;

class OAIStackFrame : public OAIObject {
public:
    OAIStackFrame();
    OAIStackFrame(QString json);
    ~OAIStackFrame() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColumnNumber() const;
    void setColumnNumber(const QString &column_number);
    bool is_column_number_Set() const;
    bool is_column_number_Valid() const;

    OAITruncatableString getFileName() const;
    void setFileName(const OAITruncatableString &file_name);
    bool is_file_name_Set() const;
    bool is_file_name_Valid() const;

    OAITruncatableString getFunctionName() const;
    void setFunctionName(const OAITruncatableString &function_name);
    bool is_function_name_Set() const;
    bool is_function_name_Valid() const;

    QString getLineNumber() const;
    void setLineNumber(const QString &line_number);
    bool is_line_number_Set() const;
    bool is_line_number_Valid() const;

    OAIModule getLoadModule() const;
    void setLoadModule(const OAIModule &load_module);
    bool is_load_module_Set() const;
    bool is_load_module_Valid() const;

    OAITruncatableString getOriginalFunctionName() const;
    void setOriginalFunctionName(const OAITruncatableString &original_function_name);
    bool is_original_function_name_Set() const;
    bool is_original_function_name_Valid() const;

    OAITruncatableString getSourceVersion() const;
    void setSourceVersion(const OAITruncatableString &source_version);
    bool is_source_version_Set() const;
    bool is_source_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_column_number;
    bool m_column_number_isSet;
    bool m_column_number_isValid;

    OAITruncatableString m_file_name;
    bool m_file_name_isSet;
    bool m_file_name_isValid;

    OAITruncatableString m_function_name;
    bool m_function_name_isSet;
    bool m_function_name_isValid;

    QString m_line_number;
    bool m_line_number_isSet;
    bool m_line_number_isValid;

    OAIModule m_load_module;
    bool m_load_module_isSet;
    bool m_load_module_isValid;

    OAITruncatableString m_original_function_name;
    bool m_original_function_name_isSet;
    bool m_original_function_name_isValid;

    OAITruncatableString m_source_version;
    bool m_source_version_isSet;
    bool m_source_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStackFrame)

#endif // OAIStackFrame_H
