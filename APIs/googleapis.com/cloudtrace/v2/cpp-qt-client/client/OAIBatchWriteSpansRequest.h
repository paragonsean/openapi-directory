/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchWriteSpansRequest.h
 *
 * The request message for the &#x60;BatchWriteSpans&#x60; method.
 */

#ifndef OAIBatchWriteSpansRequest_H
#define OAIBatchWriteSpansRequest_H

#include <QJsonObject>

#include "OAISpan.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISpan;

class OAIBatchWriteSpansRequest : public OAIObject {
public:
    OAIBatchWriteSpansRequest();
    OAIBatchWriteSpansRequest(QString json);
    ~OAIBatchWriteSpansRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISpan> getSpans() const;
    void setSpans(const QList<OAISpan> &spans);
    bool is_spans_Set() const;
    bool is_spans_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISpan> m_spans;
    bool m_spans_isSet;
    bool m_spans_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchWriteSpansRequest)

#endif // OAIBatchWriteSpansRequest_H
