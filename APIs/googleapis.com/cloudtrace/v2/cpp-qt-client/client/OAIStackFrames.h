/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStackFrames.h
 *
 * A collection of stack frames, which can be truncated.
 */

#ifndef OAIStackFrames_H
#define OAIStackFrames_H

#include <QJsonObject>

#include "OAIStackFrame.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStackFrame;

class OAIStackFrames : public OAIObject {
public:
    OAIStackFrames();
    OAIStackFrames(QString json);
    ~OAIStackFrames() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDroppedFramesCount() const;
    void setDroppedFramesCount(const qint32 &dropped_frames_count);
    bool is_dropped_frames_count_Set() const;
    bool is_dropped_frames_count_Valid() const;

    QList<OAIStackFrame> getFrame() const;
    void setFrame(const QList<OAIStackFrame> &frame);
    bool is_frame_Set() const;
    bool is_frame_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_dropped_frames_count;
    bool m_dropped_frames_count_isSet;
    bool m_dropped_frames_count_isValid;

    QList<OAIStackFrame> m_frame;
    bool m_frame_isSet;
    bool m_frame_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStackFrames)

#endif // OAIStackFrames_H
