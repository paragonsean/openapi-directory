/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchWriteSpansRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchWriteSpansRequest::OAIBatchWriteSpansRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchWriteSpansRequest::OAIBatchWriteSpansRequest() {
    this->initializeModel();
}

OAIBatchWriteSpansRequest::~OAIBatchWriteSpansRequest() {}

void OAIBatchWriteSpansRequest::initializeModel() {

    m_spans_isSet = false;
    m_spans_isValid = false;
}

void OAIBatchWriteSpansRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchWriteSpansRequest::fromJsonObject(QJsonObject json) {

    m_spans_isValid = ::OpenAPI::fromJsonValue(m_spans, json[QString("spans")]);
    m_spans_isSet = !json[QString("spans")].isNull() && m_spans_isValid;
}

QString OAIBatchWriteSpansRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchWriteSpansRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_spans.size() > 0) {
        obj.insert(QString("spans"), ::OpenAPI::toJsonValue(m_spans));
    }
    return obj;
}

QList<OAISpan> OAIBatchWriteSpansRequest::getSpans() const {
    return m_spans;
}
void OAIBatchWriteSpansRequest::setSpans(const QList<OAISpan> &spans) {
    m_spans = spans;
    m_spans_isSet = true;
}

bool OAIBatchWriteSpansRequest::is_spans_Set() const{
    return m_spans_isSet;
}

bool OAIBatchWriteSpansRequest::is_spans_Valid() const{
    return m_spans_isValid;
}

bool OAIBatchWriteSpansRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_spans.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchWriteSpansRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
