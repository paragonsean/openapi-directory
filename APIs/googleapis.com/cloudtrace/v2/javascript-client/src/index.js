/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Annotation from './model/Annotation';
import AttributeValue from './model/AttributeValue';
import Attributes from './model/Attributes';
import BatchWriteSpansRequest from './model/BatchWriteSpansRequest';
import Link from './model/Link';
import Links from './model/Links';
import MessageEvent from './model/MessageEvent';
import Module from './model/Module';
import Span from './model/Span';
import StackFrame from './model/StackFrame';
import StackFrames from './model/StackFrames';
import StackTrace from './model/StackTrace';
import Status from './model/Status';
import TimeEvent from './model/TimeEvent';
import TimeEvents from './model/TimeEvents';
import TruncatableString from './model/TruncatableString';
import ProjectsApi from './api/ProjectsApi';


/**
* Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudTraceApi = require('index'); // See note below*.
* var xxxSvc = new CloudTraceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudTraceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudTraceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudTraceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Annotation model constructor.
     * @property {module:model/Annotation}
     */
    Annotation,

    /**
     * The AttributeValue model constructor.
     * @property {module:model/AttributeValue}
     */
    AttributeValue,

    /**
     * The Attributes model constructor.
     * @property {module:model/Attributes}
     */
    Attributes,

    /**
     * The BatchWriteSpansRequest model constructor.
     * @property {module:model/BatchWriteSpansRequest}
     */
    BatchWriteSpansRequest,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The Links model constructor.
     * @property {module:model/Links}
     */
    Links,

    /**
     * The MessageEvent model constructor.
     * @property {module:model/MessageEvent}
     */
    MessageEvent,

    /**
     * The Module model constructor.
     * @property {module:model/Module}
     */
    Module,

    /**
     * The Span model constructor.
     * @property {module:model/Span}
     */
    Span,

    /**
     * The StackFrame model constructor.
     * @property {module:model/StackFrame}
     */
    StackFrame,

    /**
     * The StackFrames model constructor.
     * @property {module:model/StackFrames}
     */
    StackFrames,

    /**
     * The StackTrace model constructor.
     * @property {module:model/StackTrace}
     */
    StackTrace,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The TimeEvent model constructor.
     * @property {module:model/TimeEvent}
     */
    TimeEvent,

    /**
     * The TimeEvents model constructor.
     * @property {module:model/TimeEvents}
     */
    TimeEvents,

    /**
     * The TruncatableString model constructor.
     * @property {module:model/TruncatableString}
     */
    TruncatableString,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
