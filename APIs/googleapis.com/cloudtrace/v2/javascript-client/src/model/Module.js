/**
 * Cloud Trace API
 * Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TruncatableString from './TruncatableString';

/**
 * The Module model module.
 * @module model/Module
 * @version v2
 */
class Module {
    /**
     * Constructs a new <code>Module</code>.
     * Binary module.
     * @alias module:model/Module
     */
    constructor() { 
        
        Module.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Module</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Module} obj Optional instance to populate.
     * @return {module:model/Module} The populated <code>Module</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Module();

            if (data.hasOwnProperty('buildId')) {
                obj['buildId'] = TruncatableString.constructFromObject(data['buildId']);
            }
            if (data.hasOwnProperty('module')) {
                obj['module'] = TruncatableString.constructFromObject(data['module']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Module</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Module</code>.
     */
    static validateJSON(data) {
        // validate the optional field `buildId`
        if (data['buildId']) { // data not null
          TruncatableString.validateJSON(data['buildId']);
        }
        // validate the optional field `module`
        if (data['module']) { // data not null
          TruncatableString.validateJSON(data['module']);
        }

        return true;
    }


}



/**
 * @member {module:model/TruncatableString} buildId
 */
Module.prototype['buildId'] = undefined;

/**
 * @member {module:model/TruncatableString} module
 */
Module.prototype['module'] = undefined;






export default Module;

