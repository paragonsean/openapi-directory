/**
 * Cloud OS Login API
 * You can use OS Login to manage access to your VM instances using IAM roles.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PosixAccount from './PosixAccount';
import SecurityKey from './SecurityKey';
import SshPublicKey from './SshPublicKey';

/**
 * The LoginProfile model module.
 * @module model/LoginProfile
 * @version v1beta
 */
class LoginProfile {
    /**
     * Constructs a new <code>LoginProfile</code>.
     * The user profile information used for logging in to a virtual machine on Google Compute Engine.
     * @alias module:model/LoginProfile
     */
    constructor() { 
        
        LoginProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoginProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoginProfile} obj Optional instance to populate.
     * @return {module:model/LoginProfile} The populated <code>LoginProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoginProfile();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('posixAccounts')) {
                obj['posixAccounts'] = ApiClient.convertToType(data['posixAccounts'], [PosixAccount]);
            }
            if (data.hasOwnProperty('securityKeys')) {
                obj['securityKeys'] = ApiClient.convertToType(data['securityKeys'], [SecurityKey]);
            }
            if (data.hasOwnProperty('sshPublicKeys')) {
                obj['sshPublicKeys'] = ApiClient.convertToType(data['sshPublicKeys'], {'String': SshPublicKey});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoginProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoginProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['posixAccounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['posixAccounts'])) {
                throw new Error("Expected the field `posixAccounts` to be an array in the JSON data but got " + data['posixAccounts']);
            }
            // validate the optional field `posixAccounts` (array)
            for (const item of data['posixAccounts']) {
                PosixAccount.validateJSON(item);
            };
        }
        if (data['securityKeys']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['securityKeys'])) {
                throw new Error("Expected the field `securityKeys` to be an array in the JSON data but got " + data['securityKeys']);
            }
            // validate the optional field `securityKeys` (array)
            for (const item of data['securityKeys']) {
                SecurityKey.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. A unique user ID.
 * @member {String} name
 */
LoginProfile.prototype['name'] = undefined;

/**
 * The list of POSIX accounts associated with the user.
 * @member {Array.<module:model/PosixAccount>} posixAccounts
 */
LoginProfile.prototype['posixAccounts'] = undefined;

/**
 * The registered security key credentials for a user.
 * @member {Array.<module:model/SecurityKey>} securityKeys
 */
LoginProfile.prototype['securityKeys'] = undefined;

/**
 * A map from SSH public key fingerprint to the associated key object.
 * @member {Object.<String, module:model/SshPublicKey>} sshPublicKeys
 */
LoginProfile.prototype['sshPublicKeys'] = undefined;






export default LoginProfile;

