/**
 * Cloud OS Login API
 * You can use OS Login to manage access to your VM instances using IAM roles.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPosixAccount.h
 *
 * The POSIX account information associated with a Google account.
 */

#ifndef OAIPosixAccount_H
#define OAIPosixAccount_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPosixAccount : public OAIObject {
public:
    OAIPosixAccount();
    OAIPosixAccount(QString json);
    ~OAIPosixAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getGecos() const;
    void setGecos(const QString &gecos);
    bool is_gecos_Set() const;
    bool is_gecos_Valid() const;

    QString getGid() const;
    void setGid(const QString &gid);
    bool is_gid_Set() const;
    bool is_gid_Valid() const;

    QString getHomeDirectory() const;
    void setHomeDirectory(const QString &home_directory);
    bool is_home_directory_Set() const;
    bool is_home_directory_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOperatingSystemType() const;
    void setOperatingSystemType(const QString &operating_system_type);
    bool is_operating_system_type_Set() const;
    bool is_operating_system_type_Valid() const;

    bool isPrimary() const;
    void setPrimary(const bool &primary);
    bool is_primary_Set() const;
    bool is_primary_Valid() const;

    QString getShell() const;
    void setShell(const QString &shell);
    bool is_shell_Set() const;
    bool is_shell_Valid() const;

    QString getSystemId() const;
    void setSystemId(const QString &system_id);
    bool is_system_id_Set() const;
    bool is_system_id_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_gecos;
    bool m_gecos_isSet;
    bool m_gecos_isValid;

    QString m_gid;
    bool m_gid_isSet;
    bool m_gid_isValid;

    QString m_home_directory;
    bool m_home_directory_isSet;
    bool m_home_directory_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_operating_system_type;
    bool m_operating_system_type_isSet;
    bool m_operating_system_type_isValid;

    bool m_primary;
    bool m_primary_isSet;
    bool m_primary_isValid;

    QString m_shell;
    bool m_shell_isSet;
    bool m_shell_isValid;

    QString m_system_id;
    bool m_system_id_isSet;
    bool m_system_id_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPosixAccount)

#endif // OAIPosixAccount_H
