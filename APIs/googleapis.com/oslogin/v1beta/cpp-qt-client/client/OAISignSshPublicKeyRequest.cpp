/**
 * Cloud OS Login API
 * You can use OS Login to manage access to your VM instances using IAM roles.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISignSshPublicKeyRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISignSshPublicKeyRequest::OAISignSshPublicKeyRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISignSshPublicKeyRequest::OAISignSshPublicKeyRequest() {
    this->initializeModel();
}

OAISignSshPublicKeyRequest::~OAISignSshPublicKeyRequest() {}

void OAISignSshPublicKeyRequest::initializeModel() {

    m_ssh_public_key_isSet = false;
    m_ssh_public_key_isValid = false;
}

void OAISignSshPublicKeyRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISignSshPublicKeyRequest::fromJsonObject(QJsonObject json) {

    m_ssh_public_key_isValid = ::OpenAPI::fromJsonValue(m_ssh_public_key, json[QString("sshPublicKey")]);
    m_ssh_public_key_isSet = !json[QString("sshPublicKey")].isNull() && m_ssh_public_key_isValid;
}

QString OAISignSshPublicKeyRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISignSshPublicKeyRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_ssh_public_key_isSet) {
        obj.insert(QString("sshPublicKey"), ::OpenAPI::toJsonValue(m_ssh_public_key));
    }
    return obj;
}

QString OAISignSshPublicKeyRequest::getSshPublicKey() const {
    return m_ssh_public_key;
}
void OAISignSshPublicKeyRequest::setSshPublicKey(const QString &ssh_public_key) {
    m_ssh_public_key = ssh_public_key;
    m_ssh_public_key_isSet = true;
}

bool OAISignSshPublicKeyRequest::is_ssh_public_key_Set() const{
    return m_ssh_public_key_isSet;
}

bool OAISignSshPublicKeyRequest::is_ssh_public_key_Valid() const{
    return m_ssh_public_key_isValid;
}

bool OAISignSshPublicKeyRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ssh_public_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISignSshPublicKeyRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
