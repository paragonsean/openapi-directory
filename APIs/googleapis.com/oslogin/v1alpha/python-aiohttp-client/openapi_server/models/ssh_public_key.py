# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SshPublicKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiration_time_usec: str=None, fingerprint: str=None, key: str=None, name: str=None):
        """SshPublicKey - a model defined in OpenAPI

        :param expiration_time_usec: The expiration_time_usec of this SshPublicKey.
        :param fingerprint: The fingerprint of this SshPublicKey.
        :param key: The key of this SshPublicKey.
        :param name: The name of this SshPublicKey.
        """
        self.openapi_types = {
            'expiration_time_usec': str,
            'fingerprint': str,
            'key': str,
            'name': str
        }

        self.attribute_map = {
            'expiration_time_usec': 'expirationTimeUsec',
            'fingerprint': 'fingerprint',
            'key': 'key',
            'name': 'name'
        }

        self._expiration_time_usec = expiration_time_usec
        self._fingerprint = fingerprint
        self._key = key
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SshPublicKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SshPublicKey of this SshPublicKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiration_time_usec(self):
        """Gets the expiration_time_usec of this SshPublicKey.

        An expiration time in microseconds since epoch.

        :return: The expiration_time_usec of this SshPublicKey.
        :rtype: str
        """
        return self._expiration_time_usec

    @expiration_time_usec.setter
    def expiration_time_usec(self, expiration_time_usec):
        """Sets the expiration_time_usec of this SshPublicKey.

        An expiration time in microseconds since epoch.

        :param expiration_time_usec: The expiration_time_usec of this SshPublicKey.
        :type expiration_time_usec: str
        """

        self._expiration_time_usec = expiration_time_usec

    @property
    def fingerprint(self):
        """Gets the fingerprint of this SshPublicKey.

        Output only. The SHA-256 fingerprint of the SSH public key.

        :return: The fingerprint of this SshPublicKey.
        :rtype: str
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint):
        """Sets the fingerprint of this SshPublicKey.

        Output only. The SHA-256 fingerprint of the SSH public key.

        :param fingerprint: The fingerprint of this SshPublicKey.
        :type fingerprint: str
        """

        self._fingerprint = fingerprint

    @property
    def key(self):
        """Gets the key of this SshPublicKey.

        Public key text in SSH format, defined by RFC4253 section 6.6.

        :return: The key of this SshPublicKey.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this SshPublicKey.

        Public key text in SSH format, defined by RFC4253 section 6.6.

        :param key: The key of this SshPublicKey.
        :type key: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this SshPublicKey.

        Output only. The canonical resource name.

        :return: The name of this SshPublicKey.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SshPublicKey.

        Output only. The canonical resource name.

        :param name: The name of this SshPublicKey.
        :type name: str
        """

        self._name = name
