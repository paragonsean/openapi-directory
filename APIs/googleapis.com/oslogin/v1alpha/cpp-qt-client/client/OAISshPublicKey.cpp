/**
 * Cloud OS Login API
 * You can use OS Login to manage access to your VM instances using IAM roles.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISshPublicKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISshPublicKey::OAISshPublicKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISshPublicKey::OAISshPublicKey() {
    this->initializeModel();
}

OAISshPublicKey::~OAISshPublicKey() {}

void OAISshPublicKey::initializeModel() {

    m_expiration_time_usec_isSet = false;
    m_expiration_time_usec_isValid = false;

    m_fingerprint_isSet = false;
    m_fingerprint_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAISshPublicKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISshPublicKey::fromJsonObject(QJsonObject json) {

    m_expiration_time_usec_isValid = ::OpenAPI::fromJsonValue(m_expiration_time_usec, json[QString("expirationTimeUsec")]);
    m_expiration_time_usec_isSet = !json[QString("expirationTimeUsec")].isNull() && m_expiration_time_usec_isValid;

    m_fingerprint_isValid = ::OpenAPI::fromJsonValue(m_fingerprint, json[QString("fingerprint")]);
    m_fingerprint_isSet = !json[QString("fingerprint")].isNull() && m_fingerprint_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAISshPublicKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISshPublicKey::asJsonObject() const {
    QJsonObject obj;
    if (m_expiration_time_usec_isSet) {
        obj.insert(QString("expirationTimeUsec"), ::OpenAPI::toJsonValue(m_expiration_time_usec));
    }
    if (m_fingerprint_isSet) {
        obj.insert(QString("fingerprint"), ::OpenAPI::toJsonValue(m_fingerprint));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAISshPublicKey::getExpirationTimeUsec() const {
    return m_expiration_time_usec;
}
void OAISshPublicKey::setExpirationTimeUsec(const QString &expiration_time_usec) {
    m_expiration_time_usec = expiration_time_usec;
    m_expiration_time_usec_isSet = true;
}

bool OAISshPublicKey::is_expiration_time_usec_Set() const{
    return m_expiration_time_usec_isSet;
}

bool OAISshPublicKey::is_expiration_time_usec_Valid() const{
    return m_expiration_time_usec_isValid;
}

QString OAISshPublicKey::getFingerprint() const {
    return m_fingerprint;
}
void OAISshPublicKey::setFingerprint(const QString &fingerprint) {
    m_fingerprint = fingerprint;
    m_fingerprint_isSet = true;
}

bool OAISshPublicKey::is_fingerprint_Set() const{
    return m_fingerprint_isSet;
}

bool OAISshPublicKey::is_fingerprint_Valid() const{
    return m_fingerprint_isValid;
}

QString OAISshPublicKey::getKey() const {
    return m_key;
}
void OAISshPublicKey::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAISshPublicKey::is_key_Set() const{
    return m_key_isSet;
}

bool OAISshPublicKey::is_key_Valid() const{
    return m_key_isValid;
}

QString OAISshPublicKey::getName() const {
    return m_name;
}
void OAISshPublicKey::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISshPublicKey::is_name_Set() const{
    return m_name_isSet;
}

bool OAISshPublicKey::is_name_Valid() const{
    return m_name_isValid;
}

bool OAISshPublicKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expiration_time_usec_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fingerprint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISshPublicKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
