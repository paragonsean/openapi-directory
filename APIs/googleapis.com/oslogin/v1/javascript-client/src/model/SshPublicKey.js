/**
 * Cloud OS Login API
 * You can use OS Login to manage access to your VM instances using IAM roles.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SshPublicKey model module.
 * @module model/SshPublicKey
 * @version v1
 */
class SshPublicKey {
    /**
     * Constructs a new <code>SshPublicKey</code>.
     * The SSH public key information associated with a Google account.
     * @alias module:model/SshPublicKey
     */
    constructor() { 
        
        SshPublicKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SshPublicKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SshPublicKey} obj Optional instance to populate.
     * @return {module:model/SshPublicKey} The populated <code>SshPublicKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SshPublicKey();

            if (data.hasOwnProperty('expirationTimeUsec')) {
                obj['expirationTimeUsec'] = ApiClient.convertToType(data['expirationTimeUsec'], 'String');
            }
            if (data.hasOwnProperty('fingerprint')) {
                obj['fingerprint'] = ApiClient.convertToType(data['fingerprint'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SshPublicKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SshPublicKey</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['expirationTimeUsec'] && !(typeof data['expirationTimeUsec'] === 'string' || data['expirationTimeUsec'] instanceof String)) {
            throw new Error("Expected the field `expirationTimeUsec` to be a primitive type in the JSON string but got " + data['expirationTimeUsec']);
        }
        // ensure the json data is a string
        if (data['fingerprint'] && !(typeof data['fingerprint'] === 'string' || data['fingerprint'] instanceof String)) {
            throw new Error("Expected the field `fingerprint` to be a primitive type in the JSON string but got " + data['fingerprint']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * An expiration time in microseconds since epoch.
 * @member {String} expirationTimeUsec
 */
SshPublicKey.prototype['expirationTimeUsec'] = undefined;

/**
 * Output only. The SHA-256 fingerprint of the SSH public key.
 * @member {String} fingerprint
 */
SshPublicKey.prototype['fingerprint'] = undefined;

/**
 * Public key text in SSH format, defined by RFC4253 section 6.6.
 * @member {String} key
 */
SshPublicKey.prototype['key'] = undefined;

/**
 * Output only. The canonical resource name.
 * @member {String} name
 */
SshPublicKey.prototype['name'] = undefined;






export default SshPublicKey;

