# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.posix_account import PosixAccount
from openapi_server.models.ssh_public_key import SshPublicKey
from openapi_server import util


class LoginProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, posix_accounts: List[PosixAccount]=None, ssh_public_keys: Dict[str, SshPublicKey]=None):
        """LoginProfile - a model defined in OpenAPI

        :param name: The name of this LoginProfile.
        :param posix_accounts: The posix_accounts of this LoginProfile.
        :param ssh_public_keys: The ssh_public_keys of this LoginProfile.
        """
        self.openapi_types = {
            'name': str,
            'posix_accounts': List[PosixAccount],
            'ssh_public_keys': Dict[str, SshPublicKey]
        }

        self.attribute_map = {
            'name': 'name',
            'posix_accounts': 'posixAccounts',
            'ssh_public_keys': 'sshPublicKeys'
        }

        self._name = name
        self._posix_accounts = posix_accounts
        self._ssh_public_keys = ssh_public_keys

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoginProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoginProfile of this LoginProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this LoginProfile.

        Required. A unique user ID.

        :return: The name of this LoginProfile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LoginProfile.

        Required. A unique user ID.

        :param name: The name of this LoginProfile.
        :type name: str
        """

        self._name = name

    @property
    def posix_accounts(self):
        """Gets the posix_accounts of this LoginProfile.

        The list of POSIX accounts associated with the user.

        :return: The posix_accounts of this LoginProfile.
        :rtype: List[PosixAccount]
        """
        return self._posix_accounts

    @posix_accounts.setter
    def posix_accounts(self, posix_accounts):
        """Sets the posix_accounts of this LoginProfile.

        The list of POSIX accounts associated with the user.

        :param posix_accounts: The posix_accounts of this LoginProfile.
        :type posix_accounts: List[PosixAccount]
        """

        self._posix_accounts = posix_accounts

    @property
    def ssh_public_keys(self):
        """Gets the ssh_public_keys of this LoginProfile.

        A map from SSH public key fingerprint to the associated key object.

        :return: The ssh_public_keys of this LoginProfile.
        :rtype: Dict[str, SshPublicKey]
        """
        return self._ssh_public_keys

    @ssh_public_keys.setter
    def ssh_public_keys(self, ssh_public_keys):
        """Sets the ssh_public_keys of this LoginProfile.

        A map from SSH public key fingerprint to the associated key object.

        :param ssh_public_keys: The ssh_public_keys of this LoginProfile.
        :type ssh_public_keys: Dict[str, SshPublicKey]
        """

        self._ssh_public_keys = ssh_public_keys
