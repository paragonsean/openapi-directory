/**
 * Cloud OS Login API
 * You can use OS Login to manage access to your VM instances using IAM roles.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoginProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoginProfile::OAILoginProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoginProfile::OAILoginProfile() {
    this->initializeModel();
}

OAILoginProfile::~OAILoginProfile() {}

void OAILoginProfile::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_posix_accounts_isSet = false;
    m_posix_accounts_isValid = false;

    m_ssh_public_keys_isSet = false;
    m_ssh_public_keys_isValid = false;
}

void OAILoginProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoginProfile::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_posix_accounts_isValid = ::OpenAPI::fromJsonValue(m_posix_accounts, json[QString("posixAccounts")]);
    m_posix_accounts_isSet = !json[QString("posixAccounts")].isNull() && m_posix_accounts_isValid;

    m_ssh_public_keys_isValid = ::OpenAPI::fromJsonValue(m_ssh_public_keys, json[QString("sshPublicKeys")]);
    m_ssh_public_keys_isSet = !json[QString("sshPublicKeys")].isNull() && m_ssh_public_keys_isValid;
}

QString OAILoginProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoginProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_posix_accounts.size() > 0) {
        obj.insert(QString("posixAccounts"), ::OpenAPI::toJsonValue(m_posix_accounts));
    }
    if (m_ssh_public_keys.size() > 0) {
        obj.insert(QString("sshPublicKeys"), ::OpenAPI::toJsonValue(m_ssh_public_keys));
    }
    return obj;
}

QString OAILoginProfile::getName() const {
    return m_name;
}
void OAILoginProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILoginProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAILoginProfile::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIPosixAccount> OAILoginProfile::getPosixAccounts() const {
    return m_posix_accounts;
}
void OAILoginProfile::setPosixAccounts(const QList<OAIPosixAccount> &posix_accounts) {
    m_posix_accounts = posix_accounts;
    m_posix_accounts_isSet = true;
}

bool OAILoginProfile::is_posix_accounts_Set() const{
    return m_posix_accounts_isSet;
}

bool OAILoginProfile::is_posix_accounts_Valid() const{
    return m_posix_accounts_isValid;
}

QMap<QString, OAISshPublicKey> OAILoginProfile::getSshPublicKeys() const {
    return m_ssh_public_keys;
}
void OAILoginProfile::setSshPublicKeys(const QMap<QString, OAISshPublicKey> &ssh_public_keys) {
    m_ssh_public_keys = ssh_public_keys;
    m_ssh_public_keys_isSet = true;
}

bool OAILoginProfile::is_ssh_public_keys_Set() const{
    return m_ssh_public_keys_isSet;
}

bool OAILoginProfile::is_ssh_public_keys_Valid() const{
    return m_ssh_public_keys_isValid;
}

bool OAILoginProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_posix_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssh_public_keys.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoginProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
