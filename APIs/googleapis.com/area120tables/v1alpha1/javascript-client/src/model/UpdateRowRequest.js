/**
 * Area120 Tables API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Row from './Row';

/**
 * The UpdateRowRequest model module.
 * @module model/UpdateRowRequest
 * @version v1alpha1
 */
class UpdateRowRequest {
    /**
     * Constructs a new <code>UpdateRowRequest</code>.
     * Request message for TablesService.UpdateRow.
     * @alias module:model/UpdateRowRequest
     */
    constructor() { 
        
        UpdateRowRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateRowRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateRowRequest} obj Optional instance to populate.
     * @return {module:model/UpdateRowRequest} The populated <code>UpdateRowRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateRowRequest();

            if (data.hasOwnProperty('row')) {
                obj['row'] = Row.constructFromObject(data['row']);
            }
            if (data.hasOwnProperty('updateMask')) {
                obj['updateMask'] = ApiClient.convertToType(data['updateMask'], 'String');
            }
            if (data.hasOwnProperty('view')) {
                obj['view'] = ApiClient.convertToType(data['view'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateRowRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateRowRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `row`
        if (data['row']) { // data not null
          Row.validateJSON(data['row']);
        }
        // ensure the json data is a string
        if (data['updateMask'] && !(typeof data['updateMask'] === 'string' || data['updateMask'] instanceof String)) {
            throw new Error("Expected the field `updateMask` to be a primitive type in the JSON string but got " + data['updateMask']);
        }
        // ensure the json data is a string
        if (data['view'] && !(typeof data['view'] === 'string' || data['view'] instanceof String)) {
            throw new Error("Expected the field `view` to be a primitive type in the JSON string but got " + data['view']);
        }

        return true;
    }


}



/**
 * @member {module:model/Row} row
 */
UpdateRowRequest.prototype['row'] = undefined;

/**
 * The list of fields to update.
 * @member {String} updateMask
 */
UpdateRowRequest.prototype['updateMask'] = undefined;

/**
 * Optional. Column key to use for values in the row. Defaults to user entered name.
 * @member {module:model/UpdateRowRequest.ViewEnum} view
 */
UpdateRowRequest.prototype['view'] = undefined;





/**
 * Allowed values for the <code>view</code> property.
 * @enum {String}
 * @readonly
 */
UpdateRowRequest['ViewEnum'] = {

    /**
     * value: "VIEW_UNSPECIFIED"
     * @const
     */
    "VIEW_UNSPECIFIED": "VIEW_UNSPECIFIED",

    /**
     * value: "COLUMN_ID_VIEW"
     * @const
     */
    "COLUMN_ID_VIEW": "COLUMN_ID_VIEW"
};



export default UpdateRowRequest;

