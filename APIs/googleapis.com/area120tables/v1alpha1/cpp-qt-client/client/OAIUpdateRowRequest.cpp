/**
 * Area120 Tables API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateRowRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateRowRequest::OAIUpdateRowRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateRowRequest::OAIUpdateRowRequest() {
    this->initializeModel();
}

OAIUpdateRowRequest::~OAIUpdateRowRequest() {}

void OAIUpdateRowRequest::initializeModel() {

    m_row_isSet = false;
    m_row_isValid = false;

    m_update_mask_isSet = false;
    m_update_mask_isValid = false;

    m_view_isSet = false;
    m_view_isValid = false;
}

void OAIUpdateRowRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateRowRequest::fromJsonObject(QJsonObject json) {

    m_row_isValid = ::OpenAPI::fromJsonValue(m_row, json[QString("row")]);
    m_row_isSet = !json[QString("row")].isNull() && m_row_isValid;

    m_update_mask_isValid = ::OpenAPI::fromJsonValue(m_update_mask, json[QString("updateMask")]);
    m_update_mask_isSet = !json[QString("updateMask")].isNull() && m_update_mask_isValid;

    m_view_isValid = ::OpenAPI::fromJsonValue(m_view, json[QString("view")]);
    m_view_isSet = !json[QString("view")].isNull() && m_view_isValid;
}

QString OAIUpdateRowRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateRowRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_row.isSet()) {
        obj.insert(QString("row"), ::OpenAPI::toJsonValue(m_row));
    }
    if (m_update_mask_isSet) {
        obj.insert(QString("updateMask"), ::OpenAPI::toJsonValue(m_update_mask));
    }
    if (m_view_isSet) {
        obj.insert(QString("view"), ::OpenAPI::toJsonValue(m_view));
    }
    return obj;
}

OAIRow OAIUpdateRowRequest::getRow() const {
    return m_row;
}
void OAIUpdateRowRequest::setRow(const OAIRow &row) {
    m_row = row;
    m_row_isSet = true;
}

bool OAIUpdateRowRequest::is_row_Set() const{
    return m_row_isSet;
}

bool OAIUpdateRowRequest::is_row_Valid() const{
    return m_row_isValid;
}

QString OAIUpdateRowRequest::getUpdateMask() const {
    return m_update_mask;
}
void OAIUpdateRowRequest::setUpdateMask(const QString &update_mask) {
    m_update_mask = update_mask;
    m_update_mask_isSet = true;
}

bool OAIUpdateRowRequest::is_update_mask_Set() const{
    return m_update_mask_isSet;
}

bool OAIUpdateRowRequest::is_update_mask_Valid() const{
    return m_update_mask_isValid;
}

QString OAIUpdateRowRequest::getView() const {
    return m_view;
}
void OAIUpdateRowRequest::setView(const QString &view) {
    m_view = view;
    m_view_isSet = true;
}

bool OAIUpdateRowRequest::is_view_Set() const{
    return m_view_isSet;
}

bool OAIUpdateRowRequest::is_view_Valid() const{
    return m_view_isValid;
}

bool OAIUpdateRowRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_row.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_view_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateRowRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
