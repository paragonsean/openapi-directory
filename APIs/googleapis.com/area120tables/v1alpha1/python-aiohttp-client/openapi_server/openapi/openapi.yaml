openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Area120 Tables API
  version: v1alpha1
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://area120tables.googleapis.com/$discovery/rest?version=v1alpha1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: area120tables
externalDocs:
  url: https://support.google.com/area120-tables/answer/10011390
servers:
- url: https://area120tables.googleapis.com/
tags:
- name: tables
- name: workspaces
paths:
  /v1alpha1/tables:
    get:
      description: Lists tables for the user.
      operationId: area120tables_tables_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Sorting order for the list of tables on createTime/updateTime.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of tables to return. The service may return\
          \ fewer than this value. If unspecified, at most 20 tables are returned.\
          \ The maximum value is 100; values above 100 are coerced to 100."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A page token, received from a previous `ListTables` call. Provide\
          \ this to retrieve the subsequent page. When paginating, all other parameters\
          \ provided to `ListTables` must match the call that provided the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTablesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/drive.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/drive.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - tables
      x-openapi-router-controller: openapi_server.controllers.tables_controller
  /v1alpha1/workspaces:
    get:
      description: Lists workspaces for the user.
      operationId: area120tables_workspaces_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of workspaces to return. The service may\
          \ return fewer than this value. If unspecified, at most 10 workspaces are\
          \ returned. The maximum value is 25; values above 25 are coerced to 25."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A page token, received from a previous `ListWorkspaces` call.\
          \ Provide this to retrieve the subsequent page. When paginating, all other\
          \ parameters provided to `ListWorkspaces` must match the call that provided\
          \ the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/drive.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/drive.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - workspaces
      x-openapi-router-controller: openapi_server.controllers.workspaces_controller
  /v1alpha1/{name}:
    delete:
      description: Deletes a row.
      operationId: area120tables_tables_rows_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the row to delete. Format: tables/{table}/rows/{row}"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - tables
      x-openapi-router-controller: openapi_server.controllers.tables_controller
    get:
      description: Gets a workspace. Returns NOT_FOUND if the workspace does not exist.
      operationId: area120tables_workspaces_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the workspace to retrieve. Format: workspaces/{workspace}"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Column key to use for values in the row. Defaults to
          user entered name.
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_UNSPECIFIED
          - COLUMN_ID_VIEW
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/drive.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/drive.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - workspaces
      x-openapi-router-controller: openapi_server.controllers.workspaces_controller
    patch:
      description: Updates a row.
      operationId: area120tables_tables_rows_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`.\
          \ The name is ignored when creating a row."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The list of fields to update.
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Column key to use for values in the row. Defaults to
          user entered name.
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_UNSPECIFIED
          - COLUMN_ID_VIEW
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - tables
      x-openapi-router-controller: openapi_server.controllers.tables_controller
      x-codegen-request-body-name: body
  /v1alpha1/{parent}/rows:
    get:
      description: Lists rows in a table. Returns NOT_FOUND if the table does not
        exist.
      operationId: area120tables_tables_rows_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent table. Format: tables/{table}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. Filter to only include resources matching the requirements.\
          \ For more information, see [Filtering list results](https://support.google.com/area120-tables/answer/10503371)."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Sorting order for the list of rows on createTime/updateTime.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of rows to return. The service may return\
          \ fewer than this value. If unspecified, at most 50 rows are returned. The\
          \ maximum value is 1,000; values above 1,000 are coerced to 1,000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "A page token, received from a previous `ListRows` call. Provide\
          \ this to retrieve the subsequent page. When paginating, all other parameters\
          \ provided to `ListRows` must match the call that provided the page token."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: Optional. Column key to use for values in the row. Defaults to
          user entered name.
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_UNSPECIFIED
          - COLUMN_ID_VIEW
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRowsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/drive.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/drive.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - tables
      x-openapi-router-controller: openapi_server.controllers.tables_controller
    post:
      description: Creates a row.
      operationId: area120tables_tables_rows_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent table where this row will be created. Format:\
          \ tables/{table}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. Column key to use for values in the row. Defaults to
          user entered name.
        explode: true
        in: query
        name: view
        required: false
        schema:
          enum:
          - VIEW_UNSPECIFIED
          - COLUMN_ID_VIEW
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - tables
      x-openapi-router-controller: openapi_server.controllers.tables_controller
      x-codegen-request-body-name: body
  /v1alpha1/{parent}/rows:batchCreate:
    post:
      description: Creates multiple rows.
      operationId: area120tables_tables_rows_batch_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent table where the rows will be created. Format:\
          \ tables/{table}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateRowsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateRowsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - tables
      x-openapi-router-controller: openapi_server.controllers.tables_controller
      x-codegen-request-body-name: body
  /v1alpha1/{parent}/rows:batchDelete:
    post:
      description: Deletes multiple rows.
      operationId: area120tables_tables_rows_batch_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent table shared by all rows being deleted.\
          \ Format: tables/{table}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteRowsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - tables
      x-openapi-router-controller: openapi_server.controllers.tables_controller
      x-codegen-request-body-name: body
  /v1alpha1/{parent}/rows:batchUpdate:
    post:
      description: Updates multiple rows.
      operationId: area120tables_tables_rows_batch_update
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent table shared by all rows being updated.\
          \ Format: tables/{table}"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateRowsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateRowsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/drive
        Oauth2c:
        - https://www.googleapis.com/auth/drive
      - Oauth2:
        - https://www.googleapis.com/auth/drive.file
        Oauth2c:
        - https://www.googleapis.com/auth/drive.file
      - Oauth2:
        - https://www.googleapis.com/auth/spreadsheets
        Oauth2c:
        - https://www.googleapis.com/auth/spreadsheets
      - Oauth2:
        - https://www.googleapis.com/auth/tables
        Oauth2c:
        - https://www.googleapis.com/auth/tables
      tags:
      - tables
      x-openapi-router-controller: openapi_server.controllers.tables_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    BatchCreateRowsRequest:
      description: Request message for TablesService.BatchCreateRows.
      example:
        requests:
        - parent: parent
          view: VIEW_UNSPECIFIED
          row:
            createTime: createTime
            values:
              key: ""
            name: name
            updateTime: updateTime
        - parent: parent
          view: VIEW_UNSPECIFIED
          row:
            createTime: createTime
            values:
              key: ""
            name: name
            updateTime: updateTime
      properties:
        requests:
          description: Required. The request message specifying the rows to create.
            A maximum of 500 rows can be created in a single batch.
          items:
            $ref: '#/components/schemas/CreateRowRequest'
          title: requests
          type: array
      title: BatchCreateRowsRequest
      type: object
    BatchCreateRowsResponse:
      description: Response message for TablesService.BatchCreateRows.
      example:
        rows:
        - createTime: createTime
          values:
            key: ""
          name: name
          updateTime: updateTime
        - createTime: createTime
          values:
            key: ""
          name: name
          updateTime: updateTime
      properties:
        rows:
          description: The created rows.
          items:
            $ref: '#/components/schemas/Row'
          title: rows
          type: array
      title: BatchCreateRowsResponse
      type: object
    BatchDeleteRowsRequest:
      description: Request message for TablesService.BatchDeleteRows
      example:
        names:
        - names
        - names
      properties:
        names:
          description: "Required. The names of the rows to delete. All rows must belong\
            \ to the parent table or else the entire batch will fail. A maximum of\
            \ 500 rows can be deleted in a batch. Format: tables/{table}/rows/{row}"
          items:
            type: string
          title: names
          type: array
      title: BatchDeleteRowsRequest
      type: object
    BatchUpdateRowsRequest:
      description: Request message for TablesService.BatchUpdateRows.
      example:
        requests:
        - view: VIEW_UNSPECIFIED
          row:
            createTime: createTime
            values:
              key: ""
            name: name
            updateTime: updateTime
          updateMask: updateMask
        - view: VIEW_UNSPECIFIED
          row:
            createTime: createTime
            values:
              key: ""
            name: name
            updateTime: updateTime
          updateMask: updateMask
      properties:
        requests:
          description: Required. The request messages specifying the rows to update.
            A maximum of 500 rows can be modified in a single batch.
          items:
            $ref: '#/components/schemas/UpdateRowRequest'
          title: requests
          type: array
      title: BatchUpdateRowsRequest
      type: object
    BatchUpdateRowsResponse:
      description: Response message for TablesService.BatchUpdateRows.
      example:
        rows:
        - createTime: createTime
          values:
            key: ""
          name: name
          updateTime: updateTime
        - createTime: createTime
          values:
            key: ""
          name: name
          updateTime: updateTime
      properties:
        rows:
          description: The updated rows.
          items:
            $ref: '#/components/schemas/Row'
          title: rows
          type: array
      title: BatchUpdateRowsResponse
      type: object
    ColumnDescription:
      description: Details on a column in the table.
      example:
        dateDetails:
          hasTime: true
        multipleValuesDisallowed: true
        readonly: true
        relationshipDetails:
          linkedTable: linkedTable
        dataType: dataType
        name: name
        id: id
        lookupDetails:
          relationshipColumnId: relationshipColumnId
          relationshipColumn: relationshipColumn
        labels:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        dataType:
          description: "Data type of the column Supported types are auto_id, boolean,\
            \ boolean_list, creator, create_timestamp, date, dropdown, location, integer,\
            \ integer_list, number, number_list, person, person_list, tags, check_list,\
            \ text, text_list, update_timestamp, updater, relationship, file_attachment_list.\
            \ These types directly map to the column types supported on Tables website."
          title: dataType
          type: string
        dateDetails:
          $ref: '#/components/schemas/DateDetails'
        id:
          description: Internal id for a column.
          title: id
          type: string
        labels:
          description: Optional. Range of labeled values for the column. Some columns
            like tags and drop-downs limit the values to a set of possible values.
            We return the range of values in such cases to help clients implement
            better user data validation.
          items:
            $ref: '#/components/schemas/LabeledItem'
          title: labels
          type: array
        lookupDetails:
          $ref: '#/components/schemas/LookupDetails'
        multipleValuesDisallowed:
          description: Optional. Indicates whether or not multiple values are allowed
            for array types where such a restriction is possible.
          title: multipleValuesDisallowed
          type: boolean
        name:
          description: column name
          title: name
          type: string
        readonly:
          description: Optional. Indicates that values for the column cannot be set
            by the user.
          title: readonly
          type: boolean
        relationshipDetails:
          $ref: '#/components/schemas/RelationshipDetails'
      title: ColumnDescription
      type: object
    CreateRowRequest:
      description: Request message for TablesService.CreateRow.
      example:
        parent: parent
        view: VIEW_UNSPECIFIED
        row:
          createTime: createTime
          values:
            key: ""
          name: name
          updateTime: updateTime
      properties:
        parent:
          description: "Required. The parent table where this row will be created.\
            \ Format: tables/{table}"
          title: parent
          type: string
        row:
          $ref: '#/components/schemas/Row'
        view:
          description: Optional. Column key to use for values in the row. Defaults
            to user entered name.
          enum:
          - VIEW_UNSPECIFIED
          - COLUMN_ID_VIEW
          title: view
          type: string
      title: CreateRowRequest
      type: object
    DateDetails:
      description: Details about a date column.
      example:
        hasTime: true
      properties:
        hasTime:
          description: Whether the date column includes time.
          title: hasTime
          type: boolean
      title: DateDetails
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    LabeledItem:
      description: A single item in a labeled column.
      example:
        name: name
        id: id
      properties:
        id:
          description: Internal id associated with the item.
          title: id
          type: string
        name:
          description: Display string as entered by user.
          title: name
          type: string
      title: LabeledItem
      type: object
    ListRowsResponse:
      description: Response message for TablesService.ListRows.
      example:
        nextPageToken: nextPageToken
        rows:
        - createTime: createTime
          values:
            key: ""
          name: name
          updateTime: updateTime
        - createTime: createTime
          values:
            key: ""
          name: name
          updateTime: updateTime
      properties:
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is empty, there are no subsequent pages."
          title: nextPageToken
          type: string
        rows:
          description: The rows from the specified table.
          items:
            $ref: '#/components/schemas/Row'
          title: rows
          type: array
      title: ListRowsResponse
      type: object
    ListTablesResponse:
      description: Response message for TablesService.ListTables.
      example:
        tables:
        - createTime: createTime
          columns:
          - dateDetails:
              hasTime: true
            multipleValuesDisallowed: true
            readonly: true
            relationshipDetails:
              linkedTable: linkedTable
            dataType: dataType
            name: name
            id: id
            lookupDetails:
              relationshipColumnId: relationshipColumnId
              relationshipColumn: relationshipColumn
            labels:
            - name: name
              id: id
            - name: name
              id: id
          - dateDetails:
              hasTime: true
            multipleValuesDisallowed: true
            readonly: true
            relationshipDetails:
              linkedTable: linkedTable
            dataType: dataType
            name: name
            id: id
            lookupDetails:
              relationshipColumnId: relationshipColumnId
              relationshipColumn: relationshipColumn
            labels:
            - name: name
              id: id
            - name: name
              id: id
          displayName: displayName
          name: name
          timeZone: timeZone
          savedViews:
          - name: name
            id: id
          - name: name
            id: id
          updateTime: updateTime
        - createTime: createTime
          columns:
          - dateDetails:
              hasTime: true
            multipleValuesDisallowed: true
            readonly: true
            relationshipDetails:
              linkedTable: linkedTable
            dataType: dataType
            name: name
            id: id
            lookupDetails:
              relationshipColumnId: relationshipColumnId
              relationshipColumn: relationshipColumn
            labels:
            - name: name
              id: id
            - name: name
              id: id
          - dateDetails:
              hasTime: true
            multipleValuesDisallowed: true
            readonly: true
            relationshipDetails:
              linkedTable: linkedTable
            dataType: dataType
            name: name
            id: id
            lookupDetails:
              relationshipColumnId: relationshipColumnId
              relationshipColumn: relationshipColumn
            labels:
            - name: name
              id: id
            - name: name
              id: id
          displayName: displayName
          name: name
          timeZone: timeZone
          savedViews:
          - name: name
            id: id
          - name: name
            id: id
          updateTime: updateTime
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is empty, there are no subsequent pages."
          title: nextPageToken
          type: string
        tables:
          description: The list of tables.
          items:
            $ref: '#/components/schemas/Table'
          title: tables
          type: array
      title: ListTablesResponse
      type: object
    ListWorkspacesResponse:
      description: Response message for TablesService.ListWorkspaces.
      example:
        nextPageToken: nextPageToken
        workspaces:
        - tables:
          - createTime: createTime
            columns:
            - dateDetails:
                hasTime: true
              multipleValuesDisallowed: true
              readonly: true
              relationshipDetails:
                linkedTable: linkedTable
              dataType: dataType
              name: name
              id: id
              lookupDetails:
                relationshipColumnId: relationshipColumnId
                relationshipColumn: relationshipColumn
              labels:
              - name: name
                id: id
              - name: name
                id: id
            - dateDetails:
                hasTime: true
              multipleValuesDisallowed: true
              readonly: true
              relationshipDetails:
                linkedTable: linkedTable
              dataType: dataType
              name: name
              id: id
              lookupDetails:
                relationshipColumnId: relationshipColumnId
                relationshipColumn: relationshipColumn
              labels:
              - name: name
                id: id
              - name: name
                id: id
            displayName: displayName
            name: name
            timeZone: timeZone
            savedViews:
            - name: name
              id: id
            - name: name
              id: id
            updateTime: updateTime
          - createTime: createTime
            columns:
            - dateDetails:
                hasTime: true
              multipleValuesDisallowed: true
              readonly: true
              relationshipDetails:
                linkedTable: linkedTable
              dataType: dataType
              name: name
              id: id
              lookupDetails:
                relationshipColumnId: relationshipColumnId
                relationshipColumn: relationshipColumn
              labels:
              - name: name
                id: id
              - name: name
                id: id
            - dateDetails:
                hasTime: true
              multipleValuesDisallowed: true
              readonly: true
              relationshipDetails:
                linkedTable: linkedTable
              dataType: dataType
              name: name
              id: id
              lookupDetails:
                relationshipColumnId: relationshipColumnId
                relationshipColumn: relationshipColumn
              labels:
              - name: name
                id: id
              - name: name
                id: id
            displayName: displayName
            name: name
            timeZone: timeZone
            savedViews:
            - name: name
              id: id
            - name: name
              id: id
            updateTime: updateTime
          createTime: createTime
          displayName: displayName
          name: name
          updateTime: updateTime
        - tables:
          - createTime: createTime
            columns:
            - dateDetails:
                hasTime: true
              multipleValuesDisallowed: true
              readonly: true
              relationshipDetails:
                linkedTable: linkedTable
              dataType: dataType
              name: name
              id: id
              lookupDetails:
                relationshipColumnId: relationshipColumnId
                relationshipColumn: relationshipColumn
              labels:
              - name: name
                id: id
              - name: name
                id: id
            - dateDetails:
                hasTime: true
              multipleValuesDisallowed: true
              readonly: true
              relationshipDetails:
                linkedTable: linkedTable
              dataType: dataType
              name: name
              id: id
              lookupDetails:
                relationshipColumnId: relationshipColumnId
                relationshipColumn: relationshipColumn
              labels:
              - name: name
                id: id
              - name: name
                id: id
            displayName: displayName
            name: name
            timeZone: timeZone
            savedViews:
            - name: name
              id: id
            - name: name
              id: id
            updateTime: updateTime
          - createTime: createTime
            columns:
            - dateDetails:
                hasTime: true
              multipleValuesDisallowed: true
              readonly: true
              relationshipDetails:
                linkedTable: linkedTable
              dataType: dataType
              name: name
              id: id
              lookupDetails:
                relationshipColumnId: relationshipColumnId
                relationshipColumn: relationshipColumn
              labels:
              - name: name
                id: id
              - name: name
                id: id
            - dateDetails:
                hasTime: true
              multipleValuesDisallowed: true
              readonly: true
              relationshipDetails:
                linkedTable: linkedTable
              dataType: dataType
              name: name
              id: id
              lookupDetails:
                relationshipColumnId: relationshipColumnId
                relationshipColumn: relationshipColumn
              labels:
              - name: name
                id: id
              - name: name
                id: id
            displayName: displayName
            name: name
            timeZone: timeZone
            savedViews:
            - name: name
              id: id
            - name: name
              id: id
            updateTime: updateTime
          createTime: createTime
          displayName: displayName
          name: name
          updateTime: updateTime
      properties:
        nextPageToken:
          description: "A token, which can be sent as `page_token` to retrieve the\
            \ next page. If this field is empty, there are no subsequent pages."
          title: nextPageToken
          type: string
        workspaces:
          description: The list of workspaces.
          items:
            $ref: '#/components/schemas/Workspace'
          title: workspaces
          type: array
      title: ListWorkspacesResponse
      type: object
    LookupDetails:
      description: Details about a lookup column whose value comes from the associated
        relationship.
      example:
        relationshipColumnId: relationshipColumnId
        relationshipColumn: relationshipColumn
      properties:
        relationshipColumn:
          description: The name of the relationship column associated with the lookup.
          title: relationshipColumn
          type: string
        relationshipColumnId:
          description: The id of the relationship column.
          title: relationshipColumnId
          type: string
      title: LookupDetails
      type: object
    RelationshipDetails:
      description: Details about a relationship column.
      example:
        linkedTable: linkedTable
      properties:
        linkedTable:
          description: The name of the table this relationship is linked to.
          title: linkedTable
          type: string
      title: RelationshipDetails
      type: object
    Row:
      description: A single row in a table.
      example:
        createTime: createTime
        values:
          key: ""
        name: name
        updateTime: updateTime
      properties:
        createTime:
          description: Time when the row was created.
          format: google-datetime
          title: createTime
          type: string
        name:
          description: "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`.\
            \ The name is ignored when creating a row."
          title: name
          type: string
        updateTime:
          description: Time when the row was last updated.
          format: google-datetime
          title: updateTime
          type: string
        values:
          additionalProperties: {}
          description: The values of the row. This is a map of column key to value.
            Key is user entered name(default) or the internal column id based on the
            view in the request.
          title: values
          type: object
      title: Row
      type: object
    SavedView:
      description: "A saved view of a table. NextId: 3"
      example:
        name: name
        id: id
      properties:
        id:
          description: Internal id associated with the saved view.
          title: id
          type: string
        name:
          description: Display name of the saved view.
          title: name
          type: string
      title: SavedView
      type: object
    Table:
      description: "A single table. NextId: 8"
      example:
        createTime: createTime
        columns:
        - dateDetails:
            hasTime: true
          multipleValuesDisallowed: true
          readonly: true
          relationshipDetails:
            linkedTable: linkedTable
          dataType: dataType
          name: name
          id: id
          lookupDetails:
            relationshipColumnId: relationshipColumnId
            relationshipColumn: relationshipColumn
          labels:
          - name: name
            id: id
          - name: name
            id: id
        - dateDetails:
            hasTime: true
          multipleValuesDisallowed: true
          readonly: true
          relationshipDetails:
            linkedTable: linkedTable
          dataType: dataType
          name: name
          id: id
          lookupDetails:
            relationshipColumnId: relationshipColumnId
            relationshipColumn: relationshipColumn
          labels:
          - name: name
            id: id
          - name: name
            id: id
        displayName: displayName
        name: name
        timeZone: timeZone
        savedViews:
        - name: name
          id: id
        - name: name
          id: id
        updateTime: updateTime
      properties:
        columns:
          description: List of columns in this table. Order of columns matches the
            display order.
          items:
            $ref: '#/components/schemas/ColumnDescription'
          title: columns
          type: array
        createTime:
          description: Time when the table was created.
          format: google-datetime
          title: createTime
          type: string
        displayName:
          description: The human readable title of the table.
          title: displayName
          type: string
        name:
          description: "The resource name of the table. Table names have the form\
            \ `tables/{table}`."
          title: name
          type: string
        savedViews:
          description: Saved views for this table.
          items:
            $ref: '#/components/schemas/SavedView'
          title: savedViews
          type: array
        timeZone:
          description: "The time zone of the table. IANA Time Zone Database time zone,\
            \ e.g. \"America/New_York\"."
          title: timeZone
          type: string
        updateTime:
          description: Time when the table was last updated excluding updates to individual
            rows
          format: google-datetime
          title: updateTime
          type: string
      title: Table
      type: object
    UpdateRowRequest:
      description: Request message for TablesService.UpdateRow.
      example:
        view: VIEW_UNSPECIFIED
        row:
          createTime: createTime
          values:
            key: ""
          name: name
          updateTime: updateTime
        updateMask: updateMask
      properties:
        row:
          $ref: '#/components/schemas/Row'
        updateMask:
          description: The list of fields to update.
          format: google-fieldmask
          title: updateMask
          type: string
        view:
          description: Optional. Column key to use for values in the row. Defaults
            to user entered name.
          enum:
          - VIEW_UNSPECIFIED
          - COLUMN_ID_VIEW
          title: view
          type: string
      title: UpdateRowRequest
      type: object
    Workspace:
      description: A single workspace.
      example:
        tables:
        - createTime: createTime
          columns:
          - dateDetails:
              hasTime: true
            multipleValuesDisallowed: true
            readonly: true
            relationshipDetails:
              linkedTable: linkedTable
            dataType: dataType
            name: name
            id: id
            lookupDetails:
              relationshipColumnId: relationshipColumnId
              relationshipColumn: relationshipColumn
            labels:
            - name: name
              id: id
            - name: name
              id: id
          - dateDetails:
              hasTime: true
            multipleValuesDisallowed: true
            readonly: true
            relationshipDetails:
              linkedTable: linkedTable
            dataType: dataType
            name: name
            id: id
            lookupDetails:
              relationshipColumnId: relationshipColumnId
              relationshipColumn: relationshipColumn
            labels:
            - name: name
              id: id
            - name: name
              id: id
          displayName: displayName
          name: name
          timeZone: timeZone
          savedViews:
          - name: name
            id: id
          - name: name
            id: id
          updateTime: updateTime
        - createTime: createTime
          columns:
          - dateDetails:
              hasTime: true
            multipleValuesDisallowed: true
            readonly: true
            relationshipDetails:
              linkedTable: linkedTable
            dataType: dataType
            name: name
            id: id
            lookupDetails:
              relationshipColumnId: relationshipColumnId
              relationshipColumn: relationshipColumn
            labels:
            - name: name
              id: id
            - name: name
              id: id
          - dateDetails:
              hasTime: true
            multipleValuesDisallowed: true
            readonly: true
            relationshipDetails:
              linkedTable: linkedTable
            dataType: dataType
            name: name
            id: id
            lookupDetails:
              relationshipColumnId: relationshipColumnId
              relationshipColumn: relationshipColumn
            labels:
            - name: name
              id: id
            - name: name
              id: id
          displayName: displayName
          name: name
          timeZone: timeZone
          savedViews:
          - name: name
            id: id
          - name: name
            id: id
          updateTime: updateTime
        createTime: createTime
        displayName: displayName
        name: name
        updateTime: updateTime
      properties:
        createTime:
          description: Time when the workspace was created.
          format: google-datetime
          title: createTime
          type: string
        displayName:
          description: The human readable title of the workspace.
          title: displayName
          type: string
        name:
          description: "The resource name of the workspace. Workspace names have the\
            \ form `workspaces/{workspace}`."
          title: name
          type: string
        tables:
          description: The list of tables in the workspace.
          items:
            $ref: '#/components/schemas/Table'
          title: tables
          type: array
        updateTime:
          description: Time when the workspace was last updated.
          format: google-datetime
          title: updateTime
          type: string
      title: Workspace
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/drive: "See, edit, create, and delete\
              \ all of your Google Drive files"
            https://www.googleapis.com/auth/drive.file: "See, edit, create, and delete\
              \ only the specific Google Drive files you use with this app"
            https://www.googleapis.com/auth/drive.readonly: See and download all your
              Google Drive files
            https://www.googleapis.com/auth/spreadsheets: "See, edit, create, and\
              \ delete all your Google Sheets spreadsheets"
            https://www.googleapis.com/auth/spreadsheets.readonly: See all your Google
              Sheets spreadsheets
            https://www.googleapis.com/auth/tables: "See, edit, create, and delete\
              \ your tables in Tables by Area 120"
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/drive: "See, edit, create, and delete\
              \ all of your Google Drive files"
            https://www.googleapis.com/auth/drive.file: "See, edit, create, and delete\
              \ only the specific Google Drive files you use with this app"
            https://www.googleapis.com/auth/drive.readonly: See and download all your
              Google Drive files
            https://www.googleapis.com/auth/spreadsheets: "See, edit, create, and\
              \ delete all your Google Sheets spreadsheets"
            https://www.googleapis.com/auth/spreadsheets.readonly: See all your Google
              Sheets spreadsheets
            https://www.googleapis.com/auth/tables: "See, edit, create, and delete\
              \ your tables in Tables by Area 120"
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
