# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.column_description import ColumnDescription
from openapi_server.models.saved_view import SavedView
from openapi_server import util


class Table(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[ColumnDescription]=None, create_time: str=None, display_name: str=None, name: str=None, saved_views: List[SavedView]=None, time_zone: str=None, update_time: str=None):
        """Table - a model defined in OpenAPI

        :param columns: The columns of this Table.
        :param create_time: The create_time of this Table.
        :param display_name: The display_name of this Table.
        :param name: The name of this Table.
        :param saved_views: The saved_views of this Table.
        :param time_zone: The time_zone of this Table.
        :param update_time: The update_time of this Table.
        """
        self.openapi_types = {
            'columns': List[ColumnDescription],
            'create_time': str,
            'display_name': str,
            'name': str,
            'saved_views': List[SavedView],
            'time_zone': str,
            'update_time': str
        }

        self.attribute_map = {
            'columns': 'columns',
            'create_time': 'createTime',
            'display_name': 'displayName',
            'name': 'name',
            'saved_views': 'savedViews',
            'time_zone': 'timeZone',
            'update_time': 'updateTime'
        }

        self._columns = columns
        self._create_time = create_time
        self._display_name = display_name
        self._name = name
        self._saved_views = saved_views
        self._time_zone = time_zone
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Table':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Table of this Table.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this Table.

        List of columns in this table. Order of columns matches the display order.

        :return: The columns of this Table.
        :rtype: List[ColumnDescription]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this Table.

        List of columns in this table. Order of columns matches the display order.

        :param columns: The columns of this Table.
        :type columns: List[ColumnDescription]
        """

        self._columns = columns

    @property
    def create_time(self):
        """Gets the create_time of this Table.

        Time when the table was created.

        :return: The create_time of this Table.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this Table.

        Time when the table was created.

        :param create_time: The create_time of this Table.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this Table.

        The human readable title of the table.

        :return: The display_name of this Table.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Table.

        The human readable title of the table.

        :param display_name: The display_name of this Table.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this Table.

        The resource name of the table. Table names have the form `tables/{table}`.

        :return: The name of this Table.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Table.

        The resource name of the table. Table names have the form `tables/{table}`.

        :param name: The name of this Table.
        :type name: str
        """

        self._name = name

    @property
    def saved_views(self):
        """Gets the saved_views of this Table.

        Saved views for this table.

        :return: The saved_views of this Table.
        :rtype: List[SavedView]
        """
        return self._saved_views

    @saved_views.setter
    def saved_views(self, saved_views):
        """Sets the saved_views of this Table.

        Saved views for this table.

        :param saved_views: The saved_views of this Table.
        :type saved_views: List[SavedView]
        """

        self._saved_views = saved_views

    @property
    def time_zone(self):
        """Gets the time_zone of this Table.

        The time zone of the table. IANA Time Zone Database time zone, e.g. \"America/New_York\".

        :return: The time_zone of this Table.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this Table.

        The time zone of the table. IANA Time Zone Database time zone, e.g. \"America/New_York\".

        :param time_zone: The time_zone of this Table.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def update_time(self):
        """Gets the update_time of this Table.

        Time when the table was last updated excluding updates to individual rows

        :return: The update_time of this Table.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this Table.

        Time when the table was last updated excluding updates to individual rows

        :param update_time: The update_time of this Table.
        :type update_time: str
        """

        self._update_time = update_time
