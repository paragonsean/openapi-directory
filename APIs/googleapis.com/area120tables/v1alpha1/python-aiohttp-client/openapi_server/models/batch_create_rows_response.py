# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.row import Row
from openapi_server import util


class BatchCreateRowsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rows: List[Row]=None):
        """BatchCreateRowsResponse - a model defined in OpenAPI

        :param rows: The rows of this BatchCreateRowsResponse.
        """
        self.openapi_types = {
            'rows': List[Row]
        }

        self.attribute_map = {
            'rows': 'rows'
        }

        self._rows = rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchCreateRowsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchCreateRowsResponse of this BatchCreateRowsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rows(self):
        """Gets the rows of this BatchCreateRowsResponse.

        The created rows.

        :return: The rows of this BatchCreateRowsResponse.
        :rtype: List[Row]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this BatchCreateRowsResponse.

        The created rows.

        :param rows: The rows of this BatchCreateRowsResponse.
        :type rows: List[Row]
        """

        self._rows = rows
