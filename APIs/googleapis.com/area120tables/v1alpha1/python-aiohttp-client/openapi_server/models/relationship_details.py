# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RelationshipDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, linked_table: str=None):
        """RelationshipDetails - a model defined in OpenAPI

        :param linked_table: The linked_table of this RelationshipDetails.
        """
        self.openapi_types = {
            'linked_table': str
        }

        self.attribute_map = {
            'linked_table': 'linkedTable'
        }

        self._linked_table = linked_table

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelationshipDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RelationshipDetails of this RelationshipDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linked_table(self):
        """Gets the linked_table of this RelationshipDetails.

        The name of the table this relationship is linked to.

        :return: The linked_table of this RelationshipDetails.
        :rtype: str
        """
        return self._linked_table

    @linked_table.setter
    def linked_table(self, linked_table):
        """Sets the linked_table of this RelationshipDetails.

        The name of the table this relationship is linked to.

        :param linked_table: The linked_table of this RelationshipDetails.
        :type linked_table: str
        """

        self._linked_table = linked_table
