# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LookupDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, relationship_column: str=None, relationship_column_id: str=None):
        """LookupDetails - a model defined in OpenAPI

        :param relationship_column: The relationship_column of this LookupDetails.
        :param relationship_column_id: The relationship_column_id of this LookupDetails.
        """
        self.openapi_types = {
            'relationship_column': str,
            'relationship_column_id': str
        }

        self.attribute_map = {
            'relationship_column': 'relationshipColumn',
            'relationship_column_id': 'relationshipColumnId'
        }

        self._relationship_column = relationship_column
        self._relationship_column_id = relationship_column_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LookupDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LookupDetails of this LookupDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def relationship_column(self):
        """Gets the relationship_column of this LookupDetails.

        The name of the relationship column associated with the lookup.

        :return: The relationship_column of this LookupDetails.
        :rtype: str
        """
        return self._relationship_column

    @relationship_column.setter
    def relationship_column(self, relationship_column):
        """Sets the relationship_column of this LookupDetails.

        The name of the relationship column associated with the lookup.

        :param relationship_column: The relationship_column of this LookupDetails.
        :type relationship_column: str
        """

        self._relationship_column = relationship_column

    @property
    def relationship_column_id(self):
        """Gets the relationship_column_id of this LookupDetails.

        The id of the relationship column.

        :return: The relationship_column_id of this LookupDetails.
        :rtype: str
        """
        return self._relationship_column_id

    @relationship_column_id.setter
    def relationship_column_id(self, relationship_column_id):
        """Sets the relationship_column_id of this LookupDetails.

        The id of the relationship column.

        :param relationship_column_id: The relationship_column_id of this LookupDetails.
        :type relationship_column_id: str
        """

        self._relationship_column_id = relationship_column_id
