# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Row(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, name: str=None, update_time: str=None, values: Dict[str, object]=None):
        """Row - a model defined in OpenAPI

        :param create_time: The create_time of this Row.
        :param name: The name of this Row.
        :param update_time: The update_time of this Row.
        :param values: The values of this Row.
        """
        self.openapi_types = {
            'create_time': str,
            'name': str,
            'update_time': str,
            'values': Dict[str, object]
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'name': 'name',
            'update_time': 'updateTime',
            'values': 'values'
        }

        self._create_time = create_time
        self._name = name
        self._update_time = update_time
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Row':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Row of this Row.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this Row.

        Time when the row was created.

        :return: The create_time of this Row.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this Row.

        Time when the row was created.

        :param create_time: The create_time of this Row.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def name(self):
        """Gets the name of this Row.

        The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.

        :return: The name of this Row.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Row.

        The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.

        :param name: The name of this Row.
        :type name: str
        """

        self._name = name

    @property
    def update_time(self):
        """Gets the update_time of this Row.

        Time when the row was last updated.

        :return: The update_time of this Row.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this Row.

        Time when the row was last updated.

        :param update_time: The update_time of this Row.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def values(self):
        """Gets the values of this Row.

        The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request.

        :return: The values of this Row.
        :rtype: Dict[str, object]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this Row.

        The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request.

        :param values: The values of this Row.
        :type values: Dict[str, object]
        """

        self._values = values
