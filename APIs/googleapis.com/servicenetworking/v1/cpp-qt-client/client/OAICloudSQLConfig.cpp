/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudSQLConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudSQLConfig::OAICloudSQLConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudSQLConfig::OAICloudSQLConfig() {
    this->initializeModel();
}

OAICloudSQLConfig::~OAICloudSQLConfig() {}

void OAICloudSQLConfig::initializeModel() {

    m_service_isSet = false;
    m_service_isValid = false;

    m_umbrella_network_isSet = false;
    m_umbrella_network_isValid = false;

    m_umbrella_project_isSet = false;
    m_umbrella_project_isValid = false;
}

void OAICloudSQLConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudSQLConfig::fromJsonObject(QJsonObject json) {

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("service")]);
    m_service_isSet = !json[QString("service")].isNull() && m_service_isValid;

    m_umbrella_network_isValid = ::OpenAPI::fromJsonValue(m_umbrella_network, json[QString("umbrellaNetwork")]);
    m_umbrella_network_isSet = !json[QString("umbrellaNetwork")].isNull() && m_umbrella_network_isValid;

    m_umbrella_project_isValid = ::OpenAPI::fromJsonValue(m_umbrella_project, json[QString("umbrellaProject")]);
    m_umbrella_project_isSet = !json[QString("umbrellaProject")].isNull() && m_umbrella_project_isValid;
}

QString OAICloudSQLConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudSQLConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_service_isSet) {
        obj.insert(QString("service"), ::OpenAPI::toJsonValue(m_service));
    }
    if (m_umbrella_network_isSet) {
        obj.insert(QString("umbrellaNetwork"), ::OpenAPI::toJsonValue(m_umbrella_network));
    }
    if (m_umbrella_project_isSet) {
        obj.insert(QString("umbrellaProject"), ::OpenAPI::toJsonValue(m_umbrella_project));
    }
    return obj;
}

QString OAICloudSQLConfig::getService() const {
    return m_service;
}
void OAICloudSQLConfig::setService(const QString &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAICloudSQLConfig::is_service_Set() const{
    return m_service_isSet;
}

bool OAICloudSQLConfig::is_service_Valid() const{
    return m_service_isValid;
}

QString OAICloudSQLConfig::getUmbrellaNetwork() const {
    return m_umbrella_network;
}
void OAICloudSQLConfig::setUmbrellaNetwork(const QString &umbrella_network) {
    m_umbrella_network = umbrella_network;
    m_umbrella_network_isSet = true;
}

bool OAICloudSQLConfig::is_umbrella_network_Set() const{
    return m_umbrella_network_isSet;
}

bool OAICloudSQLConfig::is_umbrella_network_Valid() const{
    return m_umbrella_network_isValid;
}

QString OAICloudSQLConfig::getUmbrellaProject() const {
    return m_umbrella_project;
}
void OAICloudSQLConfig::setUmbrellaProject(const QString &umbrella_project) {
    m_umbrella_project = umbrella_project;
    m_umbrella_project_isSet = true;
}

bool OAICloudSQLConfig::is_umbrella_project_Set() const{
    return m_umbrella_project_isSet;
}

bool OAICloudSQLConfig::is_umbrella_project_Valid() const{
    return m_umbrella_project_isValid;
}

bool OAICloudSQLConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_umbrella_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_umbrella_project_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudSQLConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
