/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBilling.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBilling::OAIBilling(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBilling::OAIBilling() {
    this->initializeModel();
}

OAIBilling::~OAIBilling() {}

void OAIBilling::initializeModel() {

    m_consumer_destinations_isSet = false;
    m_consumer_destinations_isValid = false;
}

void OAIBilling::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBilling::fromJsonObject(QJsonObject json) {

    m_consumer_destinations_isValid = ::OpenAPI::fromJsonValue(m_consumer_destinations, json[QString("consumerDestinations")]);
    m_consumer_destinations_isSet = !json[QString("consumerDestinations")].isNull() && m_consumer_destinations_isValid;
}

QString OAIBilling::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBilling::asJsonObject() const {
    QJsonObject obj;
    if (m_consumer_destinations.size() > 0) {
        obj.insert(QString("consumerDestinations"), ::OpenAPI::toJsonValue(m_consumer_destinations));
    }
    return obj;
}

QList<OAIBillingDestination> OAIBilling::getConsumerDestinations() const {
    return m_consumer_destinations;
}
void OAIBilling::setConsumerDestinations(const QList<OAIBillingDestination> &consumer_destinations) {
    m_consumer_destinations = consumer_destinations;
    m_consumer_destinations_isSet = true;
}

bool OAIBilling::is_consumer_destinations_Set() const{
    return m_consumer_destinations_isSet;
}

bool OAIBilling::is_consumer_destinations_Valid() const{
    return m_consumer_destinations_isValid;
}

bool OAIBilling::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_consumer_destinations.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBilling::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
