/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJwtLocation.h
 *
 * Specifies a location to extract JWT from an API request.
 */

#ifndef OAIJwtLocation_H
#define OAIJwtLocation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJwtLocation : public OAIObject {
public:
    OAIJwtLocation();
    OAIJwtLocation(QString json);
    ~OAIJwtLocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCookie() const;
    void setCookie(const QString &cookie);
    bool is_cookie_Set() const;
    bool is_cookie_Valid() const;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QString getValuePrefix() const;
    void setValuePrefix(const QString &value_prefix);
    bool is_value_prefix_Set() const;
    bool is_value_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cookie;
    bool m_cookie_isSet;
    bool m_cookie_isValid;

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QString m_value_prefix;
    bool m_value_prefix_isSet;
    bool m_value_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJwtLocation)

#endif // OAIJwtLocation_H
