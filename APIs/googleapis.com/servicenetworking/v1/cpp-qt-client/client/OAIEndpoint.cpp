/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndpoint::OAIEndpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndpoint::OAIEndpoint() {
    this->initializeModel();
}

OAIEndpoint::~OAIEndpoint() {}

void OAIEndpoint::initializeModel() {

    m_aliases_isSet = false;
    m_aliases_isValid = false;

    m_allow_cors_isSet = false;
    m_allow_cors_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_target_isSet = false;
    m_target_isValid = false;
}

void OAIEndpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndpoint::fromJsonObject(QJsonObject json) {

    m_aliases_isValid = ::OpenAPI::fromJsonValue(m_aliases, json[QString("aliases")]);
    m_aliases_isSet = !json[QString("aliases")].isNull() && m_aliases_isValid;

    m_allow_cors_isValid = ::OpenAPI::fromJsonValue(m_allow_cors, json[QString("allowCors")]);
    m_allow_cors_isSet = !json[QString("allowCors")].isNull() && m_allow_cors_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("target")]);
    m_target_isSet = !json[QString("target")].isNull() && m_target_isValid;
}

QString OAIEndpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_aliases.size() > 0) {
        obj.insert(QString("aliases"), ::OpenAPI::toJsonValue(m_aliases));
    }
    if (m_allow_cors_isSet) {
        obj.insert(QString("allowCors"), ::OpenAPI::toJsonValue(m_allow_cors));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_target_isSet) {
        obj.insert(QString("target"), ::OpenAPI::toJsonValue(m_target));
    }
    return obj;
}

QList<QString> OAIEndpoint::getAliases() const {
    return m_aliases;
}
void OAIEndpoint::setAliases(const QList<QString> &aliases) {
    m_aliases = aliases;
    m_aliases_isSet = true;
}

bool OAIEndpoint::is_aliases_Set() const{
    return m_aliases_isSet;
}

bool OAIEndpoint::is_aliases_Valid() const{
    return m_aliases_isValid;
}

bool OAIEndpoint::isAllowCors() const {
    return m_allow_cors;
}
void OAIEndpoint::setAllowCors(const bool &allow_cors) {
    m_allow_cors = allow_cors;
    m_allow_cors_isSet = true;
}

bool OAIEndpoint::is_allow_cors_Set() const{
    return m_allow_cors_isSet;
}

bool OAIEndpoint::is_allow_cors_Valid() const{
    return m_allow_cors_isValid;
}

QString OAIEndpoint::getName() const {
    return m_name;
}
void OAIEndpoint::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEndpoint::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEndpoint::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIEndpoint::getTarget() const {
    return m_target;
}
void OAIEndpoint::setTarget(const QString &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAIEndpoint::is_target_Set() const{
    return m_target_isSet;
}

bool OAIEndpoint::is_target_Valid() const{
    return m_target_isValid;
}

bool OAIEndpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aliases.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_cors_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
