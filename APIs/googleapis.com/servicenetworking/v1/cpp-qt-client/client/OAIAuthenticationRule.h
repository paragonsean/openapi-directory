/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthenticationRule.h
 *
 * Authentication rules for the service. By default, if a method has any authentication requirements, every request must include a valid credential matching one of the requirements. It&#39;s an error to include more than one kind of credential in a single request. If a method doesn&#39;t have any auth requirements, request credentials will be ignored.
 */

#ifndef OAIAuthenticationRule_H
#define OAIAuthenticationRule_H

#include <QJsonObject>

#include "OAIAuthRequirement.h"
#include "OAIOAuthRequirements.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOAuthRequirements;
class OAIAuthRequirement;

class OAIAuthenticationRule : public OAIObject {
public:
    OAIAuthenticationRule();
    OAIAuthenticationRule(QString json);
    ~OAIAuthenticationRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowWithoutCredential() const;
    void setAllowWithoutCredential(const bool &allow_without_credential);
    bool is_allow_without_credential_Set() const;
    bool is_allow_without_credential_Valid() const;

    OAIOAuthRequirements getOauth() const;
    void setOauth(const OAIOAuthRequirements &oauth);
    bool is_oauth_Set() const;
    bool is_oauth_Valid() const;

    QList<OAIAuthRequirement> getRequirements() const;
    void setRequirements(const QList<OAIAuthRequirement> &requirements);
    bool is_requirements_Set() const;
    bool is_requirements_Valid() const;

    QString getSelector() const;
    void setSelector(const QString &selector);
    bool is_selector_Set() const;
    bool is_selector_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_without_credential;
    bool m_allow_without_credential_isSet;
    bool m_allow_without_credential_isValid;

    OAIOAuthRequirements m_oauth;
    bool m_oauth_isSet;
    bool m_oauth_isValid;

    QList<OAIAuthRequirement> m_requirements;
    bool m_requirements_isSet;
    bool m_requirements_isValid;

    QString m_selector;
    bool m_selector_isSet;
    bool m_selector_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthenticationRule)

#endif // OAIAuthenticationRule_H
