/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddDnsZoneRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddDnsZoneRequest::OAIAddDnsZoneRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddDnsZoneRequest::OAIAddDnsZoneRequest() {
    this->initializeModel();
}

OAIAddDnsZoneRequest::~OAIAddDnsZoneRequest() {}

void OAIAddDnsZoneRequest::initializeModel() {

    m_consumer_network_isSet = false;
    m_consumer_network_isValid = false;

    m_dns_suffix_isSet = false;
    m_dns_suffix_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIAddDnsZoneRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddDnsZoneRequest::fromJsonObject(QJsonObject json) {

    m_consumer_network_isValid = ::OpenAPI::fromJsonValue(m_consumer_network, json[QString("consumerNetwork")]);
    m_consumer_network_isSet = !json[QString("consumerNetwork")].isNull() && m_consumer_network_isValid;

    m_dns_suffix_isValid = ::OpenAPI::fromJsonValue(m_dns_suffix, json[QString("dnsSuffix")]);
    m_dns_suffix_isSet = !json[QString("dnsSuffix")].isNull() && m_dns_suffix_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIAddDnsZoneRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddDnsZoneRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_consumer_network_isSet) {
        obj.insert(QString("consumerNetwork"), ::OpenAPI::toJsonValue(m_consumer_network));
    }
    if (m_dns_suffix_isSet) {
        obj.insert(QString("dnsSuffix"), ::OpenAPI::toJsonValue(m_dns_suffix));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIAddDnsZoneRequest::getConsumerNetwork() const {
    return m_consumer_network;
}
void OAIAddDnsZoneRequest::setConsumerNetwork(const QString &consumer_network) {
    m_consumer_network = consumer_network;
    m_consumer_network_isSet = true;
}

bool OAIAddDnsZoneRequest::is_consumer_network_Set() const{
    return m_consumer_network_isSet;
}

bool OAIAddDnsZoneRequest::is_consumer_network_Valid() const{
    return m_consumer_network_isValid;
}

QString OAIAddDnsZoneRequest::getDnsSuffix() const {
    return m_dns_suffix;
}
void OAIAddDnsZoneRequest::setDnsSuffix(const QString &dns_suffix) {
    m_dns_suffix = dns_suffix;
    m_dns_suffix_isSet = true;
}

bool OAIAddDnsZoneRequest::is_dns_suffix_Set() const{
    return m_dns_suffix_isSet;
}

bool OAIAddDnsZoneRequest::is_dns_suffix_Valid() const{
    return m_dns_suffix_isValid;
}

QString OAIAddDnsZoneRequest::getName() const {
    return m_name;
}
void OAIAddDnsZoneRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAddDnsZoneRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAddDnsZoneRequest::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIAddDnsZoneRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_consumer_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dns_suffix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddDnsZoneRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
