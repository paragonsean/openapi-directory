/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConsumerProject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConsumerProject::OAIConsumerProject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConsumerProject::OAIConsumerProject() {
    this->initializeModel();
}

OAIConsumerProject::~OAIConsumerProject() {}

void OAIConsumerProject::initializeModel() {

    m_project_num_isSet = false;
    m_project_num_isValid = false;
}

void OAIConsumerProject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConsumerProject::fromJsonObject(QJsonObject json) {

    m_project_num_isValid = ::OpenAPI::fromJsonValue(m_project_num, json[QString("projectNum")]);
    m_project_num_isSet = !json[QString("projectNum")].isNull() && m_project_num_isValid;
}

QString OAIConsumerProject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConsumerProject::asJsonObject() const {
    QJsonObject obj;
    if (m_project_num_isSet) {
        obj.insert(QString("projectNum"), ::OpenAPI::toJsonValue(m_project_num));
    }
    return obj;
}

QString OAIConsumerProject::getProjectNum() const {
    return m_project_num;
}
void OAIConsumerProject::setProjectNum(const QString &project_num) {
    m_project_num = project_num;
    m_project_num_isSet = true;
}

bool OAIConsumerProject::is_project_num_Set() const{
    return m_project_num_isSet;
}

bool OAIConsumerProject::is_project_num_Valid() const{
    return m_project_num_isValid;
}

bool OAIConsumerProject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_num_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConsumerProject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
