/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRangeReservation.h
 *
 * Represents a range reservation.
 */

#ifndef OAIRangeReservation_H
#define OAIRangeReservation_H

#include <QJsonObject>

#include "OAISubnetwork.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISubnetwork;

class OAIRangeReservation : public OAIObject {
public:
    OAIRangeReservation();
    OAIRangeReservation(QString json);
    ~OAIRangeReservation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIpPrefixLength() const;
    void setIpPrefixLength(const qint32 &ip_prefix_length);
    bool is_ip_prefix_length_Set() const;
    bool is_ip_prefix_length_Valid() const;

    QList<QString> getRequestedRanges() const;
    void setRequestedRanges(const QList<QString> &requested_ranges);
    bool is_requested_ranges_Set() const;
    bool is_requested_ranges_Valid() const;

    QList<qint32> getSecondaryRangeIpPrefixLengths() const;
    void setSecondaryRangeIpPrefixLengths(const QList<qint32> &secondary_range_ip_prefix_lengths);
    bool is_secondary_range_ip_prefix_lengths_Set() const;
    bool is_secondary_range_ip_prefix_lengths_Valid() const;

    QList<OAISubnetwork> getSubnetworkCandidates() const;
    void setSubnetworkCandidates(const QList<OAISubnetwork> &subnetwork_candidates);
    bool is_subnetwork_candidates_Set() const;
    bool is_subnetwork_candidates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_ip_prefix_length;
    bool m_ip_prefix_length_isSet;
    bool m_ip_prefix_length_isValid;

    QList<QString> m_requested_ranges;
    bool m_requested_ranges_isSet;
    bool m_requested_ranges_isValid;

    QList<qint32> m_secondary_range_ip_prefix_lengths;
    bool m_secondary_range_ip_prefix_lengths_isSet;
    bool m_secondary_range_ip_prefix_lengths_isValid;

    QList<OAISubnetwork> m_subnetwork_candidates;
    bool m_subnetwork_candidates_isSet;
    bool m_subnetwork_candidates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRangeReservation)

#endif // OAIRangeReservation_H
