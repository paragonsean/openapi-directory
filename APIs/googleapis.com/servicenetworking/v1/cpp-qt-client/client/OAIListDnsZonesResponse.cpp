/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListDnsZonesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListDnsZonesResponse::OAIListDnsZonesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListDnsZonesResponse::OAIListDnsZonesResponse() {
    this->initializeModel();
}

OAIListDnsZonesResponse::~OAIListDnsZonesResponse() {}

void OAIListDnsZonesResponse::initializeModel() {

    m_dns_zone_pairs_isSet = false;
    m_dns_zone_pairs_isValid = false;
}

void OAIListDnsZonesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListDnsZonesResponse::fromJsonObject(QJsonObject json) {

    m_dns_zone_pairs_isValid = ::OpenAPI::fromJsonValue(m_dns_zone_pairs, json[QString("dnsZonePairs")]);
    m_dns_zone_pairs_isSet = !json[QString("dnsZonePairs")].isNull() && m_dns_zone_pairs_isValid;
}

QString OAIListDnsZonesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListDnsZonesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_dns_zone_pairs.size() > 0) {
        obj.insert(QString("dnsZonePairs"), ::OpenAPI::toJsonValue(m_dns_zone_pairs));
    }
    return obj;
}

QList<OAIDnsZonePair> OAIListDnsZonesResponse::getDnsZonePairs() const {
    return m_dns_zone_pairs;
}
void OAIListDnsZonesResponse::setDnsZonePairs(const QList<OAIDnsZonePair> &dns_zone_pairs) {
    m_dns_zone_pairs = dns_zone_pairs;
    m_dns_zone_pairs_isSet = true;
}

bool OAIListDnsZonesResponse::is_dns_zone_pairs_Set() const{
    return m_dns_zone_pairs_isSet;
}

bool OAIListDnsZonesResponse::is_dns_zone_pairs_Valid() const{
    return m_dns_zone_pairs_isValid;
}

bool OAIListDnsZonesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dns_zone_pairs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListDnsZonesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
