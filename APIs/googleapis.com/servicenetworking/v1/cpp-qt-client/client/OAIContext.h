/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContext.h
 *
 * &#x60;Context&#x60; defines which contexts an API requests. Example: context: rules: - selector: \&quot;*\&quot; requested: - google.rpc.context.ProjectContext - google.rpc.context.OriginContext The above specifies that all methods in the API request &#x60;google.rpc.context.ProjectContext&#x60; and &#x60;google.rpc.context.OriginContext&#x60;. Available context types are defined in package &#x60;google.rpc.context&#x60;. This also provides mechanism to allowlist any protobuf message extension that can be sent in grpc metadata using “x-goog-ext--bin” and “x-goog-ext--jspb” format. For example, list any service specific protobuf types that can appear in grpc metadata as follows in your yaml file: Example: context: rules: - selector: \&quot;google.example.library.v1.LibraryService.CreateBook\&quot; allowed_request_extensions: - google.foo.v1.NewExtension allowed_response_extensions: - google.foo.v1.NewExtension You can also specify extension ID instead of fully qualified extension name here.
 */

#ifndef OAIContext_H
#define OAIContext_H

#include <QJsonObject>

#include "OAIContextRule.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContextRule;

class OAIContext : public OAIObject {
public:
    OAIContext();
    OAIContext(QString json);
    ~OAIContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIContextRule> getRules() const;
    void setRules(const QList<OAIContextRule> &rules);
    bool is_rules_Set() const;
    bool is_rules_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIContextRule> m_rules;
    bool m_rules_isSet;
    bool m_rules_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContext)

#endif // OAIContext_H
