# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dns_zone_pair import DnsZonePair
from openapi_server import util


class ListDnsZonesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dns_zone_pairs: List[DnsZonePair]=None):
        """ListDnsZonesResponse - a model defined in OpenAPI

        :param dns_zone_pairs: The dns_zone_pairs of this ListDnsZonesResponse.
        """
        self.openapi_types = {
            'dns_zone_pairs': List[DnsZonePair]
        }

        self.attribute_map = {
            'dns_zone_pairs': 'dnsZonePairs'
        }

        self._dns_zone_pairs = dns_zone_pairs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDnsZonesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDnsZonesResponse of this ListDnsZonesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dns_zone_pairs(self):
        """Gets the dns_zone_pairs of this ListDnsZonesResponse.

        All pairs of private DNS zones in the shared producer host project and the matching peering zones in the consumer project..

        :return: The dns_zone_pairs of this ListDnsZonesResponse.
        :rtype: List[DnsZonePair]
        """
        return self._dns_zone_pairs

    @dns_zone_pairs.setter
    def dns_zone_pairs(self, dns_zone_pairs):
        """Sets the dns_zone_pairs of this ListDnsZonesResponse.

        All pairs of private DNS zones in the shared producer host project and the matching peering zones in the consumer project..

        :param dns_zone_pairs: The dns_zone_pairs of this ListDnsZonesResponse.
        :type dns_zone_pairs: List[DnsZonePair]
        """

        self._dns_zone_pairs = dns_zone_pairs
