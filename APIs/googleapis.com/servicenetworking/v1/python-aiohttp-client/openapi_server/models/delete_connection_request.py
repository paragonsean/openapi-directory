# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteConnectionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumer_network: str=None):
        """DeleteConnectionRequest - a model defined in OpenAPI

        :param consumer_network: The consumer_network of this DeleteConnectionRequest.
        """
        self.openapi_types = {
            'consumer_network': str
        }

        self.attribute_map = {
            'consumer_network': 'consumerNetwork'
        }

        self._consumer_network = consumer_network

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteConnectionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteConnectionRequest of this DeleteConnectionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumer_network(self):
        """Gets the consumer_network of this DeleteConnectionRequest.

        Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is a network name.

        :return: The consumer_network of this DeleteConnectionRequest.
        :rtype: str
        """
        return self._consumer_network

    @consumer_network.setter
    def consumer_network(self, consumer_network):
        """Sets the consumer_network of this DeleteConnectionRequest.

        Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is a network name.

        :param consumer_network: The consumer_network of this DeleteConnectionRequest.
        :type consumer_network: str
        """

        self._consumer_network = consumer_network
