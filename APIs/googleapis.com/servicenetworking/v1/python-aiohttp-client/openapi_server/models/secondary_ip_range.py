# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SecondaryIpRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_cidr_range: str=None, range_name: str=None):
        """SecondaryIpRange - a model defined in OpenAPI

        :param ip_cidr_range: The ip_cidr_range of this SecondaryIpRange.
        :param range_name: The range_name of this SecondaryIpRange.
        """
        self.openapi_types = {
            'ip_cidr_range': str,
            'range_name': str
        }

        self.attribute_map = {
            'ip_cidr_range': 'ipCidrRange',
            'range_name': 'rangeName'
        }

        self._ip_cidr_range = ip_cidr_range
        self._range_name = range_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecondaryIpRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecondaryIpRange of this SecondaryIpRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_cidr_range(self):
        """Gets the ip_cidr_range of this SecondaryIpRange.

        Secondary IP CIDR range in `x.x.x.x/y` format.

        :return: The ip_cidr_range of this SecondaryIpRange.
        :rtype: str
        """
        return self._ip_cidr_range

    @ip_cidr_range.setter
    def ip_cidr_range(self, ip_cidr_range):
        """Sets the ip_cidr_range of this SecondaryIpRange.

        Secondary IP CIDR range in `x.x.x.x/y` format.

        :param ip_cidr_range: The ip_cidr_range of this SecondaryIpRange.
        :type ip_cidr_range: str
        """

        self._ip_cidr_range = ip_cidr_range

    @property
    def range_name(self):
        """Gets the range_name of this SecondaryIpRange.

        Name of the secondary IP range.

        :return: The range_name of this SecondaryIpRange.
        :rtype: str
        """
        return self._range_name

    @range_name.setter
    def range_name(self, range_name):
        """Sets the range_name of this SecondaryIpRange.

        Name of the secondary IP range.

        :param range_name: The range_name of this SecondaryIpRange.
        :type range_name: str
        """

        self._range_name = range_name
