# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.documentation_rule import DocumentationRule
from openapi_server.models.page import Page
from openapi_server import util


class Documentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documentation_root_url: str=None, overview: str=None, pages: List[Page]=None, rules: List[DocumentationRule]=None, section_overrides: List[Page]=None, service_root_url: str=None, summary: str=None):
        """Documentation - a model defined in OpenAPI

        :param documentation_root_url: The documentation_root_url of this Documentation.
        :param overview: The overview of this Documentation.
        :param pages: The pages of this Documentation.
        :param rules: The rules of this Documentation.
        :param section_overrides: The section_overrides of this Documentation.
        :param service_root_url: The service_root_url of this Documentation.
        :param summary: The summary of this Documentation.
        """
        self.openapi_types = {
            'documentation_root_url': str,
            'overview': str,
            'pages': List[Page],
            'rules': List[DocumentationRule],
            'section_overrides': List[Page],
            'service_root_url': str,
            'summary': str
        }

        self.attribute_map = {
            'documentation_root_url': 'documentationRootUrl',
            'overview': 'overview',
            'pages': 'pages',
            'rules': 'rules',
            'section_overrides': 'sectionOverrides',
            'service_root_url': 'serviceRootUrl',
            'summary': 'summary'
        }

        self._documentation_root_url = documentation_root_url
        self._overview = overview
        self._pages = pages
        self._rules = rules
        self._section_overrides = section_overrides
        self._service_root_url = service_root_url
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Documentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Documentation of this Documentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documentation_root_url(self):
        """Gets the documentation_root_url of this Documentation.

        The URL to the root of documentation.

        :return: The documentation_root_url of this Documentation.
        :rtype: str
        """
        return self._documentation_root_url

    @documentation_root_url.setter
    def documentation_root_url(self, documentation_root_url):
        """Sets the documentation_root_url of this Documentation.

        The URL to the root of documentation.

        :param documentation_root_url: The documentation_root_url of this Documentation.
        :type documentation_root_url: str
        """

        self._documentation_root_url = documentation_root_url

    @property
    def overview(self):
        """Gets the overview of this Documentation.

        Declares a single overview page. For example: documentation: summary: ... overview: (== include overview.md ==) This is a shortcut for the following declaration (using pages style): documentation: summary: ... pages: - name: Overview content: (== include overview.md ==) Note: you cannot specify both `overview` field and `pages` field.

        :return: The overview of this Documentation.
        :rtype: str
        """
        return self._overview

    @overview.setter
    def overview(self, overview):
        """Sets the overview of this Documentation.

        Declares a single overview page. For example: documentation: summary: ... overview: (== include overview.md ==) This is a shortcut for the following declaration (using pages style): documentation: summary: ... pages: - name: Overview content: (== include overview.md ==) Note: you cannot specify both `overview` field and `pages` field.

        :param overview: The overview of this Documentation.
        :type overview: str
        """

        self._overview = overview

    @property
    def pages(self):
        """Gets the pages of this Documentation.

        The top level pages for the documentation set.

        :return: The pages of this Documentation.
        :rtype: List[Page]
        """
        return self._pages

    @pages.setter
    def pages(self, pages):
        """Sets the pages of this Documentation.

        The top level pages for the documentation set.

        :param pages: The pages of this Documentation.
        :type pages: List[Page]
        """

        self._pages = pages

    @property
    def rules(self):
        """Gets the rules of this Documentation.

        A list of documentation rules that apply to individual API elements. **NOTE:** All service configuration rules follow \"last one wins\" order.

        :return: The rules of this Documentation.
        :rtype: List[DocumentationRule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this Documentation.

        A list of documentation rules that apply to individual API elements. **NOTE:** All service configuration rules follow \"last one wins\" order.

        :param rules: The rules of this Documentation.
        :type rules: List[DocumentationRule]
        """

        self._rules = rules

    @property
    def section_overrides(self):
        """Gets the section_overrides of this Documentation.

        Specifies section and content to override boilerplate content provided by go/api-docgen. Currently overrides following sections: 1. rest.service.client_libraries

        :return: The section_overrides of this Documentation.
        :rtype: List[Page]
        """
        return self._section_overrides

    @section_overrides.setter
    def section_overrides(self, section_overrides):
        """Sets the section_overrides of this Documentation.

        Specifies section and content to override boilerplate content provided by go/api-docgen. Currently overrides following sections: 1. rest.service.client_libraries

        :param section_overrides: The section_overrides of this Documentation.
        :type section_overrides: List[Page]
        """

        self._section_overrides = section_overrides

    @property
    def service_root_url(self):
        """Gets the service_root_url of this Documentation.

        Specifies the service root url if the default one (the service name from the yaml file) is not suitable. This can be seen in any fully specified service urls as well as sections that show a base that other urls are relative to.

        :return: The service_root_url of this Documentation.
        :rtype: str
        """
        return self._service_root_url

    @service_root_url.setter
    def service_root_url(self, service_root_url):
        """Sets the service_root_url of this Documentation.

        Specifies the service root url if the default one (the service name from the yaml file) is not suitable. This can be seen in any fully specified service urls as well as sections that show a base that other urls are relative to.

        :param service_root_url: The service_root_url of this Documentation.
        :type service_root_url: str
        """

        self._service_root_url = service_root_url

    @property
    def summary(self):
        """Gets the summary of this Documentation.

        A short description of what the service does. The summary must be plain text. It becomes the overview of the service displayed in Google Cloud Console. NOTE: This field is equivalent to the standard field `description`.

        :return: The summary of this Documentation.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this Documentation.

        A short description of what the service does. The summary must be plain text. It becomes the overview of the service displayed in Google Cloud Console. NOTE: This field is equivalent to the standard field `description`.

        :param summary: The summary of this Documentation.
        :type summary: str
        """

        self._summary = summary
