# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddDnsZoneRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumer_network: str=None, dns_suffix: str=None, name: str=None):
        """AddDnsZoneRequest - a model defined in OpenAPI

        :param consumer_network: The consumer_network of this AddDnsZoneRequest.
        :param dns_suffix: The dns_suffix of this AddDnsZoneRequest.
        :param name: The name of this AddDnsZoneRequest.
        """
        self.openapi_types = {
            'consumer_network': str,
            'dns_suffix': str,
            'name': str
        }

        self.attribute_map = {
            'consumer_network': 'consumerNetwork',
            'dns_suffix': 'dnsSuffix',
            'name': 'name'
        }

        self._consumer_network = consumer_network
        self._dns_suffix = dns_suffix
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddDnsZoneRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddDnsZoneRequest of this AddDnsZoneRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumer_network(self):
        """Gets the consumer_network of this AddDnsZoneRequest.

        Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name.

        :return: The consumer_network of this AddDnsZoneRequest.
        :rtype: str
        """
        return self._consumer_network

    @consumer_network.setter
    def consumer_network(self, consumer_network):
        """Sets the consumer_network of this AddDnsZoneRequest.

        Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name.

        :param consumer_network: The consumer_network of this AddDnsZoneRequest.
        :type consumer_network: str
        """

        self._consumer_network = consumer_network

    @property
    def dns_suffix(self):
        """Gets the dns_suffix of this AddDnsZoneRequest.

        Required. The DNS name suffix for the zones e.g. `example.com.`. Cloud DNS requires that a DNS suffix ends with a trailing dot.

        :return: The dns_suffix of this AddDnsZoneRequest.
        :rtype: str
        """
        return self._dns_suffix

    @dns_suffix.setter
    def dns_suffix(self, dns_suffix):
        """Sets the dns_suffix of this AddDnsZoneRequest.

        Required. The DNS name suffix for the zones e.g. `example.com.`. Cloud DNS requires that a DNS suffix ends with a trailing dot.

        :param dns_suffix: The dns_suffix of this AddDnsZoneRequest.
        :type dns_suffix: str
        """

        self._dns_suffix = dns_suffix

    @property
    def name(self):
        """Gets the name of this AddDnsZoneRequest.

        Required. The name for both the private zone in the shared producer host project and the peering zone in the consumer project. Must be unique within both projects. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.

        :return: The name of this AddDnsZoneRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AddDnsZoneRequest.

        Required. The name for both the private zone in the shared producer host project and the peering zone in the consumer project. Must be unique within both projects. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.

        :param name: The name of this AddDnsZoneRequest.
        :type name: str
        """

        self._name = name
