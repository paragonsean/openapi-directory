# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.peered_dns_domain import PeeredDnsDomain
from openapi_server import util


class ListPeeredDnsDomainsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, peered_dns_domains: List[PeeredDnsDomain]=None):
        """ListPeeredDnsDomainsResponse - a model defined in OpenAPI

        :param peered_dns_domains: The peered_dns_domains of this ListPeeredDnsDomainsResponse.
        """
        self.openapi_types = {
            'peered_dns_domains': List[PeeredDnsDomain]
        }

        self.attribute_map = {
            'peered_dns_domains': 'peeredDnsDomains'
        }

        self._peered_dns_domains = peered_dns_domains

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListPeeredDnsDomainsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListPeeredDnsDomainsResponse of this ListPeeredDnsDomainsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def peered_dns_domains(self):
        """Gets the peered_dns_domains of this ListPeeredDnsDomainsResponse.

        The list of peered DNS domains.

        :return: The peered_dns_domains of this ListPeeredDnsDomainsResponse.
        :rtype: List[PeeredDnsDomain]
        """
        return self._peered_dns_domains

    @peered_dns_domains.setter
    def peered_dns_domains(self, peered_dns_domains):
        """Sets the peered_dns_domains of this ListPeeredDnsDomainsResponse.

        The list of peered DNS domains.

        :param peered_dns_domains: The peered_dns_domains of this ListPeeredDnsDomainsResponse.
        :type peered_dns_domains: List[PeeredDnsDomain]
        """

        self._peered_dns_domains = peered_dns_domains
