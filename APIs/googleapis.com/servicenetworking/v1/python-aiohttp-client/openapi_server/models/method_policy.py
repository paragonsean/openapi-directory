# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_policy import FieldPolicy
from openapi_server import util


class MethodPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_policies: List[FieldPolicy]=None, selector: str=None):
        """MethodPolicy - a model defined in OpenAPI

        :param request_policies: The request_policies of this MethodPolicy.
        :param selector: The selector of this MethodPolicy.
        """
        self.openapi_types = {
            'request_policies': List[FieldPolicy],
            'selector': str
        }

        self.attribute_map = {
            'request_policies': 'requestPolicies',
            'selector': 'selector'
        }

        self._request_policies = request_policies
        self._selector = selector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MethodPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MethodPolicy of this MethodPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_policies(self):
        """Gets the request_policies of this MethodPolicy.

        Policies that are applicable to the request message.

        :return: The request_policies of this MethodPolicy.
        :rtype: List[FieldPolicy]
        """
        return self._request_policies

    @request_policies.setter
    def request_policies(self, request_policies):
        """Sets the request_policies of this MethodPolicy.

        Policies that are applicable to the request message.

        :param request_policies: The request_policies of this MethodPolicy.
        :type request_policies: List[FieldPolicy]
        """

        self._request_policies = request_policies

    @property
    def selector(self):
        """Gets the selector of this MethodPolicy.

        Selects a method to which these policies should be enforced, for example, \"google.pubsub.v1.Subscriber.CreateSubscription\". Refer to selector for syntax details. NOTE: This field must not be set in the proto annotation. It will be automatically filled by the service config compiler .

        :return: The selector of this MethodPolicy.
        :rtype: str
        """
        return self._selector

    @selector.setter
    def selector(self, selector):
        """Sets the selector of this MethodPolicy.

        Selects a method to which these policies should be enforced, for example, \"google.pubsub.v1.Subscriber.CreateSubscription\". Refer to selector for syntax details. NOTE: This field must not be set in the proto annotation. It will be automatically filled by the service config compiler .

        :param selector: The selector of this MethodPolicy.
        :type selector: str
        """

        self._selector = selector
