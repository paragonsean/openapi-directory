/*
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a subnet that was created or discovered by a private access management service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:16.869716-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudServicenetworkingV1betaSubnetwork {
  public static final String SERIALIZED_NAME_IP_CIDR_RANGE = "ipCidrRange";
  @SerializedName(SERIALIZED_NAME_IP_CIDR_RANGE)
  private String ipCidrRange;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_OUTSIDE_ALLOCATION = "outsideAllocation";
  @SerializedName(SERIALIZED_NAME_OUTSIDE_ALLOCATION)
  private Boolean outsideAllocation;

  public GoogleCloudServicenetworkingV1betaSubnetwork() {
  }

  public GoogleCloudServicenetworkingV1betaSubnetwork ipCidrRange(String ipCidrRange) {
    this.ipCidrRange = ipCidrRange;
    return this;
  }

  /**
   * Subnetwork CIDR range in &#x60;10.x.x.x/y&#x60; format.
   * @return ipCidrRange
   */
  @javax.annotation.Nullable
  public String getIpCidrRange() {
    return ipCidrRange;
  }

  public void setIpCidrRange(String ipCidrRange) {
    this.ipCidrRange = ipCidrRange;
  }


  public GoogleCloudServicenetworkingV1betaSubnetwork name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Subnetwork name. See https://cloud.google.com/compute/docs/vpc/
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudServicenetworkingV1betaSubnetwork network(String network) {
    this.network = network;
    return this;
  }

  /**
   * In the Shared VPC host project, the VPC network that&#39;s peered with the consumer network. For example: &#x60;projects/1234321/global/networks/host-network&#x60;
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }


  public GoogleCloudServicenetworkingV1betaSubnetwork outsideAllocation(Boolean outsideAllocation) {
    this.outsideAllocation = outsideAllocation;
    return this;
  }

  /**
   * This is a discovered subnet that is not within the current consumer allocated ranges.
   * @return outsideAllocation
   */
  @javax.annotation.Nullable
  public Boolean getOutsideAllocation() {
    return outsideAllocation;
  }

  public void setOutsideAllocation(Boolean outsideAllocation) {
    this.outsideAllocation = outsideAllocation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudServicenetworkingV1betaSubnetwork googleCloudServicenetworkingV1betaSubnetwork = (GoogleCloudServicenetworkingV1betaSubnetwork) o;
    return Objects.equals(this.ipCidrRange, googleCloudServicenetworkingV1betaSubnetwork.ipCidrRange) &&
        Objects.equals(this.name, googleCloudServicenetworkingV1betaSubnetwork.name) &&
        Objects.equals(this.network, googleCloudServicenetworkingV1betaSubnetwork.network) &&
        Objects.equals(this.outsideAllocation, googleCloudServicenetworkingV1betaSubnetwork.outsideAllocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipCidrRange, name, network, outsideAllocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudServicenetworkingV1betaSubnetwork {\n");
    sb.append("    ipCidrRange: ").append(toIndentedString(ipCidrRange)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    outsideAllocation: ").append(toIndentedString(outsideAllocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ipCidrRange");
    openapiFields.add("name");
    openapiFields.add("network");
    openapiFields.add("outsideAllocation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudServicenetworkingV1betaSubnetwork
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudServicenetworkingV1betaSubnetwork.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudServicenetworkingV1betaSubnetwork is not found in the empty JSON string", GoogleCloudServicenetworkingV1betaSubnetwork.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudServicenetworkingV1betaSubnetwork.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudServicenetworkingV1betaSubnetwork` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ipCidrRange") != null && !jsonObj.get("ipCidrRange").isJsonNull()) && !jsonObj.get("ipCidrRange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipCidrRange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipCidrRange").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudServicenetworkingV1betaSubnetwork.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudServicenetworkingV1betaSubnetwork' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudServicenetworkingV1betaSubnetwork> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudServicenetworkingV1betaSubnetwork.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudServicenetworkingV1betaSubnetwork>() {
           @Override
           public void write(JsonWriter out, GoogleCloudServicenetworkingV1betaSubnetwork value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudServicenetworkingV1betaSubnetwork read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudServicenetworkingV1betaSubnetwork given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudServicenetworkingV1betaSubnetwork
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudServicenetworkingV1betaSubnetwork
   */
  public static GoogleCloudServicenetworkingV1betaSubnetwork fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudServicenetworkingV1betaSubnetwork.class);
  }

  /**
   * Convert an instance of GoogleCloudServicenetworkingV1betaSubnetwork to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

