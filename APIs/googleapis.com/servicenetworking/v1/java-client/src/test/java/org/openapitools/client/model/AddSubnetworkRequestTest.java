/*
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SecondaryIpRangeSpec;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AddSubnetworkRequest
 */
public class AddSubnetworkRequestTest {
    private final AddSubnetworkRequest model = new AddSubnetworkRequest();

    /**
     * Model tests for AddSubnetworkRequest
     */
    @Test
    public void testAddSubnetworkRequest() {
        // TODO: test AddSubnetworkRequest
    }

    /**
     * Test the property 'allowSubnetCidrRoutesOverlap'
     */
    @Test
    public void allowSubnetCidrRoutesOverlapTest() {
        // TODO: test allowSubnetCidrRoutesOverlap
    }

    /**
     * Test the property 'checkServiceNetworkingUsePermission'
     */
    @Test
    public void checkServiceNetworkingUsePermissionTest() {
        // TODO: test checkServiceNetworkingUsePermission
    }

    /**
     * Test the property 'computeIdempotencyWindow'
     */
    @Test
    public void computeIdempotencyWindowTest() {
        // TODO: test computeIdempotencyWindow
    }

    /**
     * Test the property 'consumer'
     */
    @Test
    public void consumerTest() {
        // TODO: test consumer
    }

    /**
     * Test the property 'consumerNetwork'
     */
    @Test
    public void consumerNetworkTest() {
        // TODO: test consumerNetwork
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'internalRange'
     */
    @Test
    public void internalRangeTest() {
        // TODO: test internalRange
    }

    /**
     * Test the property 'ipPrefixLength'
     */
    @Test
    public void ipPrefixLengthTest() {
        // TODO: test ipPrefixLength
    }

    /**
     * Test the property 'outsideAllocationPublicIpRange'
     */
    @Test
    public void outsideAllocationPublicIpRangeTest() {
        // TODO: test outsideAllocationPublicIpRange
    }

    /**
     * Test the property 'privateIpv6GoogleAccess'
     */
    @Test
    public void privateIpv6GoogleAccessTest() {
        // TODO: test privateIpv6GoogleAccess
    }

    /**
     * Test the property 'purpose'
     */
    @Test
    public void purposeTest() {
        // TODO: test purpose
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'requestedAddress'
     */
    @Test
    public void requestedAddressTest() {
        // TODO: test requestedAddress
    }

    /**
     * Test the property 'requestedRanges'
     */
    @Test
    public void requestedRangesTest() {
        // TODO: test requestedRanges
    }

    /**
     * Test the property 'role'
     */
    @Test
    public void roleTest() {
        // TODO: test role
    }

    /**
     * Test the property 'secondaryIpRangeSpecs'
     */
    @Test
    public void secondaryIpRangeSpecsTest() {
        // TODO: test secondaryIpRangeSpecs
    }

    /**
     * Test the property 'subnetwork'
     */
    @Test
    public void subnetworkTest() {
        // TODO: test subnetwork
    }

    /**
     * Test the property 'subnetworkUsers'
     */
    @Test
    public void subnetworkUsersTest() {
        // TODO: test subnetworkUsers
    }

    /**
     * Test the property 'useCustomComputeIdempotencyWindow'
     */
    @Test
    public void useCustomComputeIdempotencyWindowTest() {
        // TODO: test useCustomComputeIdempotencyWindow
    }

}
