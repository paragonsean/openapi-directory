/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VpcServiceControls model module.
 * @module model/VpcServiceControls
 * @version v1
 */
class VpcServiceControls {
    /**
     * Constructs a new <code>VpcServiceControls</code>.
     * Response for the get VPC Service Controls request.
     * @alias module:model/VpcServiceControls
     */
    constructor() { 
        
        VpcServiceControls.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpcServiceControls</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpcServiceControls} obj Optional instance to populate.
     * @return {module:model/VpcServiceControls} The populated <code>VpcServiceControls</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpcServiceControls();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpcServiceControls</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpcServiceControls</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Output only. Indicates whether the VPC Service Controls are enabled or disabled for the connection. If the consumer called the EnableVpcServiceControls method, then this is true. If the consumer called DisableVpcServiceControls, then this is false. The default is false.
 * @member {Boolean} enabled
 */
VpcServiceControls.prototype['enabled'] = undefined;






export default VpcServiceControls;

