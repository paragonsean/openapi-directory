/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddDnsZoneRequest model module.
 * @module model/AddDnsZoneRequest
 * @version v1
 */
class AddDnsZoneRequest {
    /**
     * Constructs a new <code>AddDnsZoneRequest</code>.
     * Request to add a private managed DNS zone in the shared producer host project and a matching DNS peering zone in the consumer project.
     * @alias module:model/AddDnsZoneRequest
     */
    constructor() { 
        
        AddDnsZoneRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddDnsZoneRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddDnsZoneRequest} obj Optional instance to populate.
     * @return {module:model/AddDnsZoneRequest} The populated <code>AddDnsZoneRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddDnsZoneRequest();

            if (data.hasOwnProperty('consumerNetwork')) {
                obj['consumerNetwork'] = ApiClient.convertToType(data['consumerNetwork'], 'String');
            }
            if (data.hasOwnProperty('dnsSuffix')) {
                obj['dnsSuffix'] = ApiClient.convertToType(data['dnsSuffix'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddDnsZoneRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddDnsZoneRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['consumerNetwork'] && !(typeof data['consumerNetwork'] === 'string' || data['consumerNetwork'] instanceof String)) {
            throw new Error("Expected the field `consumerNetwork` to be a primitive type in the JSON string but got " + data['consumerNetwork']);
        }
        // ensure the json data is a string
        if (data['dnsSuffix'] && !(typeof data['dnsSuffix'] === 'string' || data['dnsSuffix'] instanceof String)) {
            throw new Error("Expected the field `dnsSuffix` to be a primitive type in the JSON string but got " + data['dnsSuffix']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name.
 * @member {String} consumerNetwork
 */
AddDnsZoneRequest.prototype['consumerNetwork'] = undefined;

/**
 * Required. The DNS name suffix for the zones e.g. `example.com.`. Cloud DNS requires that a DNS suffix ends with a trailing dot.
 * @member {String} dnsSuffix
 */
AddDnsZoneRequest.prototype['dnsSuffix'] = undefined;

/**
 * Required. The name for both the private zone in the shared producer host project and the peering zone in the consumer project. Must be unique within both projects. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.
 * @member {String} name
 */
AddDnsZoneRequest.prototype['name'] = undefined;






export default AddDnsZoneRequest;

