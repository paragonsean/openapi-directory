/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConsumerProject from './ConsumerProject';
import RangeReservation from './RangeReservation';

/**
 * The ValidateConsumerConfigRequest model module.
 * @module model/ValidateConsumerConfigRequest
 * @version v1
 */
class ValidateConsumerConfigRequest {
    /**
     * Constructs a new <code>ValidateConsumerConfigRequest</code>.
     * @alias module:model/ValidateConsumerConfigRequest
     */
    constructor() { 
        
        ValidateConsumerConfigRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ValidateConsumerConfigRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidateConsumerConfigRequest} obj Optional instance to populate.
     * @return {module:model/ValidateConsumerConfigRequest} The populated <code>ValidateConsumerConfigRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidateConsumerConfigRequest();

            if (data.hasOwnProperty('checkServiceNetworkingUsePermission')) {
                obj['checkServiceNetworkingUsePermission'] = ApiClient.convertToType(data['checkServiceNetworkingUsePermission'], 'Boolean');
            }
            if (data.hasOwnProperty('consumerNetwork')) {
                obj['consumerNetwork'] = ApiClient.convertToType(data['consumerNetwork'], 'String');
            }
            if (data.hasOwnProperty('consumerProject')) {
                obj['consumerProject'] = ConsumerProject.constructFromObject(data['consumerProject']);
            }
            if (data.hasOwnProperty('rangeReservation')) {
                obj['rangeReservation'] = RangeReservation.constructFromObject(data['rangeReservation']);
            }
            if (data.hasOwnProperty('validateNetwork')) {
                obj['validateNetwork'] = ApiClient.convertToType(data['validateNetwork'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidateConsumerConfigRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidateConsumerConfigRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['consumerNetwork'] && !(typeof data['consumerNetwork'] === 'string' || data['consumerNetwork'] instanceof String)) {
            throw new Error("Expected the field `consumerNetwork` to be a primitive type in the JSON string but got " + data['consumerNetwork']);
        }
        // validate the optional field `consumerProject`
        if (data['consumerProject']) { // data not null
          ConsumerProject.validateJSON(data['consumerProject']);
        }
        // validate the optional field `rangeReservation`
        if (data['rangeReservation']) { // data not null
          RangeReservation.validateJSON(data['rangeReservation']);
        }

        return true;
    }


}



/**
 * Optional. The IAM permission check determines whether the consumer project has 'servicenetworking.services.use' permission or not.
 * @member {Boolean} checkServiceNetworkingUsePermission
 */
ValidateConsumerConfigRequest.prototype['checkServiceNetworkingUsePermission'] = undefined;

/**
 * Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is network name.
 * @member {String} consumerNetwork
 */
ValidateConsumerConfigRequest.prototype['consumerNetwork'] = undefined;

/**
 * @member {module:model/ConsumerProject} consumerProject
 */
ValidateConsumerConfigRequest.prototype['consumerProject'] = undefined;

/**
 * @member {module:model/RangeReservation} rangeReservation
 */
ValidateConsumerConfigRequest.prototype['rangeReservation'] = undefined;

/**
 * The validations will be performed in the order listed in the ValidationError enum. The first failure will return. If a validation is not requested, then the next one will be performed. SERVICE_NETWORKING_NOT_ENABLED and NETWORK_NOT_PEERED checks are performed for all requests where validation is requested. NETWORK_NOT_FOUND and NETWORK_DISCONNECTED checks are done for requests that have validate_network set to true.
 * @member {Boolean} validateNetwork
 */
ValidateConsumerConfigRequest.prototype['validateNetwork'] = undefined;






export default ValidateConsumerConfigRequest;

