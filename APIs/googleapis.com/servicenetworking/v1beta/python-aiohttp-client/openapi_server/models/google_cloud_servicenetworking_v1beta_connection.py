# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudServicenetworkingV1betaConnection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network: str=None, peering: str=None, reserved_peering_ranges: List[str]=None, service: str=None):
        """GoogleCloudServicenetworkingV1betaConnection - a model defined in OpenAPI

        :param network: The network of this GoogleCloudServicenetworkingV1betaConnection.
        :param peering: The peering of this GoogleCloudServicenetworkingV1betaConnection.
        :param reserved_peering_ranges: The reserved_peering_ranges of this GoogleCloudServicenetworkingV1betaConnection.
        :param service: The service of this GoogleCloudServicenetworkingV1betaConnection.
        """
        self.openapi_types = {
            'network': str,
            'peering': str,
            'reserved_peering_ranges': List[str],
            'service': str
        }

        self.attribute_map = {
            'network': 'network',
            'peering': 'peering',
            'reserved_peering_ranges': 'reservedPeeringRanges',
            'service': 'service'
        }

        self._network = network
        self._peering = peering
        self._reserved_peering_ranges = reserved_peering_ranges
        self._service = service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudServicenetworkingV1betaConnection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudServicenetworkingV1betaConnection of this GoogleCloudServicenetworkingV1betaConnection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network(self):
        """Gets the network of this GoogleCloudServicenetworkingV1betaConnection.

        The name of service consumer's VPC network that's connected with service producer network, in the following format: `projects/{project}/global/networks/{network}`. `{project}` is a project number, such as in `12345` that includes the VPC service consumer's VPC network. `{network}` is the name of the service consumer's VPC network.

        :return: The network of this GoogleCloudServicenetworkingV1betaConnection.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GoogleCloudServicenetworkingV1betaConnection.

        The name of service consumer's VPC network that's connected with service producer network, in the following format: `projects/{project}/global/networks/{network}`. `{project}` is a project number, such as in `12345` that includes the VPC service consumer's VPC network. `{network}` is the name of the service consumer's VPC network.

        :param network: The network of this GoogleCloudServicenetworkingV1betaConnection.
        :type network: str
        """

        self._network = network

    @property
    def peering(self):
        """Gets the peering of this GoogleCloudServicenetworkingV1betaConnection.

        Output only. The name of the VPC Network Peering connection that was created by the service producer.

        :return: The peering of this GoogleCloudServicenetworkingV1betaConnection.
        :rtype: str
        """
        return self._peering

    @peering.setter
    def peering(self, peering):
        """Sets the peering of this GoogleCloudServicenetworkingV1betaConnection.

        Output only. The name of the VPC Network Peering connection that was created by the service producer.

        :param peering: The peering of this GoogleCloudServicenetworkingV1betaConnection.
        :type peering: str
        """

        self._peering = peering

    @property
    def reserved_peering_ranges(self):
        """Gets the reserved_peering_ranges of this GoogleCloudServicenetworkingV1betaConnection.

        The name of one or more allocated IP address ranges for this service producer of type `PEERING`. Note that invoking this method with a different range when connection is already established will not modify already provisioned service producer subnetworks.

        :return: The reserved_peering_ranges of this GoogleCloudServicenetworkingV1betaConnection.
        :rtype: List[str]
        """
        return self._reserved_peering_ranges

    @reserved_peering_ranges.setter
    def reserved_peering_ranges(self, reserved_peering_ranges):
        """Sets the reserved_peering_ranges of this GoogleCloudServicenetworkingV1betaConnection.

        The name of one or more allocated IP address ranges for this service producer of type `PEERING`. Note that invoking this method with a different range when connection is already established will not modify already provisioned service producer subnetworks.

        :param reserved_peering_ranges: The reserved_peering_ranges of this GoogleCloudServicenetworkingV1betaConnection.
        :type reserved_peering_ranges: List[str]
        """

        self._reserved_peering_ranges = reserved_peering_ranges

    @property
    def service(self):
        """Gets the service of this GoogleCloudServicenetworkingV1betaConnection.

        Output only. The name of the peering service that's associated with this connection, in the following format: `services/{service name}`.

        :return: The service of this GoogleCloudServicenetworkingV1betaConnection.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this GoogleCloudServicenetworkingV1betaConnection.

        Output only. The name of the peering service that's associated with this connection, in the following format: `services/{service name}`.

        :param service: The service of this GoogleCloudServicenetworkingV1betaConnection.
        :type service: str
        """

        self._service = service
