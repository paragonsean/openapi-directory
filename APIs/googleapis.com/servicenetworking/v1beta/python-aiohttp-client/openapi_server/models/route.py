# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Route(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dest_range: str=None, name: str=None, network: str=None, next_hop_gateway: str=None):
        """Route - a model defined in OpenAPI

        :param dest_range: The dest_range of this Route.
        :param name: The name of this Route.
        :param network: The network of this Route.
        :param next_hop_gateway: The next_hop_gateway of this Route.
        """
        self.openapi_types = {
            'dest_range': str,
            'name': str,
            'network': str,
            'next_hop_gateway': str
        }

        self.attribute_map = {
            'dest_range': 'destRange',
            'name': 'name',
            'network': 'network',
            'next_hop_gateway': 'nextHopGateway'
        }

        self._dest_range = dest_range
        self._name = name
        self._network = network
        self._next_hop_gateway = next_hop_gateway

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Route':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Route of this Route.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dest_range(self):
        """Gets the dest_range of this Route.

        Destination CIDR range that this route applies to.

        :return: The dest_range of this Route.
        :rtype: str
        """
        return self._dest_range

    @dest_range.setter
    def dest_range(self, dest_range):
        """Sets the dest_range of this Route.

        Destination CIDR range that this route applies to.

        :param dest_range: The dest_range of this Route.
        :type dest_range: str
        """

        self._dest_range = dest_range

    @property
    def name(self):
        """Gets the name of this Route.

        Route name. See https://cloud.google.com/vpc/docs/routes

        :return: The name of this Route.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Route.

        Route name. See https://cloud.google.com/vpc/docs/routes

        :param name: The name of this Route.
        :type name: str
        """

        self._name = name

    @property
    def network(self):
        """Gets the network of this Route.

        Fully-qualified URL of the VPC network in the producer host tenant project that this route applies to. For example: `projects/123456/global/networks/host-network`

        :return: The network of this Route.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this Route.

        Fully-qualified URL of the VPC network in the producer host tenant project that this route applies to. For example: `projects/123456/global/networks/host-network`

        :param network: The network of this Route.
        :type network: str
        """

        self._network = network

    @property
    def next_hop_gateway(self):
        """Gets the next_hop_gateway of this Route.

        Fully-qualified URL of the gateway that should handle matching packets that this route applies to. For example: `projects/123456/global/gateways/default-internet-gateway`

        :return: The next_hop_gateway of this Route.
        :rtype: str
        """
        return self._next_hop_gateway

    @next_hop_gateway.setter
    def next_hop_gateway(self, next_hop_gateway):
        """Sets the next_hop_gateway of this Route.

        Fully-qualified URL of the gateway that should handle matching packets that this route applies to. For example: `projects/123456/global/gateways/default-internet-gateway`

        :param next_hop_gateway: The next_hop_gateway of this Route.
        :type next_hop_gateway: str
        """

        self._next_hop_gateway = next_hop_gateway
