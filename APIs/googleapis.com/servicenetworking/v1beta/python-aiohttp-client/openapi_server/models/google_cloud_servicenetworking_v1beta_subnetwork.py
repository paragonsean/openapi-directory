# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudServicenetworkingV1betaSubnetwork(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_cidr_range: str=None, name: str=None, network: str=None, outside_allocation: bool=None):
        """GoogleCloudServicenetworkingV1betaSubnetwork - a model defined in OpenAPI

        :param ip_cidr_range: The ip_cidr_range of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :param name: The name of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :param network: The network of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :param outside_allocation: The outside_allocation of this GoogleCloudServicenetworkingV1betaSubnetwork.
        """
        self.openapi_types = {
            'ip_cidr_range': str,
            'name': str,
            'network': str,
            'outside_allocation': bool
        }

        self.attribute_map = {
            'ip_cidr_range': 'ipCidrRange',
            'name': 'name',
            'network': 'network',
            'outside_allocation': 'outsideAllocation'
        }

        self._ip_cidr_range = ip_cidr_range
        self._name = name
        self._network = network
        self._outside_allocation = outside_allocation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudServicenetworkingV1betaSubnetwork':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudServicenetworkingV1betaSubnetwork of this GoogleCloudServicenetworkingV1betaSubnetwork.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_cidr_range(self):
        """Gets the ip_cidr_range of this GoogleCloudServicenetworkingV1betaSubnetwork.

        Subnetwork CIDR range in `10.x.x.x/y` format.

        :return: The ip_cidr_range of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :rtype: str
        """
        return self._ip_cidr_range

    @ip_cidr_range.setter
    def ip_cidr_range(self, ip_cidr_range):
        """Sets the ip_cidr_range of this GoogleCloudServicenetworkingV1betaSubnetwork.

        Subnetwork CIDR range in `10.x.x.x/y` format.

        :param ip_cidr_range: The ip_cidr_range of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :type ip_cidr_range: str
        """

        self._ip_cidr_range = ip_cidr_range

    @property
    def name(self):
        """Gets the name of this GoogleCloudServicenetworkingV1betaSubnetwork.

        Subnetwork name. See https://cloud.google.com/compute/docs/vpc/

        :return: The name of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudServicenetworkingV1betaSubnetwork.

        Subnetwork name. See https://cloud.google.com/compute/docs/vpc/

        :param name: The name of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :type name: str
        """

        self._name = name

    @property
    def network(self):
        """Gets the network of this GoogleCloudServicenetworkingV1betaSubnetwork.

        In the Shared VPC host project, the VPC network that's peered with the consumer network. For example: `projects/1234321/global/networks/host-network`

        :return: The network of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GoogleCloudServicenetworkingV1betaSubnetwork.

        In the Shared VPC host project, the VPC network that's peered with the consumer network. For example: `projects/1234321/global/networks/host-network`

        :param network: The network of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :type network: str
        """

        self._network = network

    @property
    def outside_allocation(self):
        """Gets the outside_allocation of this GoogleCloudServicenetworkingV1betaSubnetwork.

        This is a discovered subnet that is not within the current consumer allocated ranges.

        :return: The outside_allocation of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :rtype: bool
        """
        return self._outside_allocation

    @outside_allocation.setter
    def outside_allocation(self, outside_allocation):
        """Sets the outside_allocation of this GoogleCloudServicenetworkingV1betaSubnetwork.

        This is a discovered subnet that is not within the current consumer allocated ranges.

        :param outside_allocation: The outside_allocation of this GoogleCloudServicenetworkingV1betaSubnetwork.
        :type outside_allocation: bool
        """

        self._outside_allocation = outside_allocation
