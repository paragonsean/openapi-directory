/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudServicenetworkingV1betaSubnetwork.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudServicenetworkingV1betaSubnetwork::OAIGoogleCloudServicenetworkingV1betaSubnetwork(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudServicenetworkingV1betaSubnetwork::OAIGoogleCloudServicenetworkingV1betaSubnetwork() {
    this->initializeModel();
}

OAIGoogleCloudServicenetworkingV1betaSubnetwork::~OAIGoogleCloudServicenetworkingV1betaSubnetwork() {}

void OAIGoogleCloudServicenetworkingV1betaSubnetwork::initializeModel() {

    m_ip_cidr_range_isSet = false;
    m_ip_cidr_range_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_outside_allocation_isSet = false;
    m_outside_allocation_isValid = false;
}

void OAIGoogleCloudServicenetworkingV1betaSubnetwork::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudServicenetworkingV1betaSubnetwork::fromJsonObject(QJsonObject json) {

    m_ip_cidr_range_isValid = ::OpenAPI::fromJsonValue(m_ip_cidr_range, json[QString("ipCidrRange")]);
    m_ip_cidr_range_isSet = !json[QString("ipCidrRange")].isNull() && m_ip_cidr_range_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_outside_allocation_isValid = ::OpenAPI::fromJsonValue(m_outside_allocation, json[QString("outsideAllocation")]);
    m_outside_allocation_isSet = !json[QString("outsideAllocation")].isNull() && m_outside_allocation_isValid;
}

QString OAIGoogleCloudServicenetworkingV1betaSubnetwork::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudServicenetworkingV1betaSubnetwork::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_cidr_range_isSet) {
        obj.insert(QString("ipCidrRange"), ::OpenAPI::toJsonValue(m_ip_cidr_range));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_outside_allocation_isSet) {
        obj.insert(QString("outsideAllocation"), ::OpenAPI::toJsonValue(m_outside_allocation));
    }
    return obj;
}

QString OAIGoogleCloudServicenetworkingV1betaSubnetwork::getIpCidrRange() const {
    return m_ip_cidr_range;
}
void OAIGoogleCloudServicenetworkingV1betaSubnetwork::setIpCidrRange(const QString &ip_cidr_range) {
    m_ip_cidr_range = ip_cidr_range;
    m_ip_cidr_range_isSet = true;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::is_ip_cidr_range_Set() const{
    return m_ip_cidr_range_isSet;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::is_ip_cidr_range_Valid() const{
    return m_ip_cidr_range_isValid;
}

QString OAIGoogleCloudServicenetworkingV1betaSubnetwork::getName() const {
    return m_name;
}
void OAIGoogleCloudServicenetworkingV1betaSubnetwork::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudServicenetworkingV1betaSubnetwork::getNetwork() const {
    return m_network;
}
void OAIGoogleCloudServicenetworkingV1betaSubnetwork::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::is_network_Set() const{
    return m_network_isSet;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::is_network_Valid() const{
    return m_network_isValid;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::isOutsideAllocation() const {
    return m_outside_allocation;
}
void OAIGoogleCloudServicenetworkingV1betaSubnetwork::setOutsideAllocation(const bool &outside_allocation) {
    m_outside_allocation = outside_allocation;
    m_outside_allocation_isSet = true;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::is_outside_allocation_Set() const{
    return m_outside_allocation_isSet;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::is_outside_allocation_Valid() const{
    return m_outside_allocation_isValid;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_cidr_range_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outside_allocation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudServicenetworkingV1betaSubnetwork::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
