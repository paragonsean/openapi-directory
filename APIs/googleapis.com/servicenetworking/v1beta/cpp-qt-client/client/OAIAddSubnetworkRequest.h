/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddSubnetworkRequest.h
 *
 * Request to create a subnetwork in a previously peered service network.
 */

#ifndef OAIAddSubnetworkRequest_H
#define OAIAddSubnetworkRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAddSubnetworkRequest : public OAIObject {
public:
    OAIAddSubnetworkRequest();
    OAIAddSubnetworkRequest(QString json);
    ~OAIAddSubnetworkRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConsumer() const;
    void setConsumer(const QString &consumer);
    bool is_consumer_Set() const;
    bool is_consumer_Valid() const;

    QString getConsumerNetwork() const;
    void setConsumerNetwork(const QString &consumer_network);
    bool is_consumer_network_Set() const;
    bool is_consumer_network_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getIpPrefixLength() const;
    void setIpPrefixLength(const qint32 &ip_prefix_length);
    bool is_ip_prefix_length_Set() const;
    bool is_ip_prefix_length_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getRequestedAddress() const;
    void setRequestedAddress(const QString &requested_address);
    bool is_requested_address_Set() const;
    bool is_requested_address_Valid() const;

    QString getSubnetwork() const;
    void setSubnetwork(const QString &subnetwork);
    bool is_subnetwork_Set() const;
    bool is_subnetwork_Valid() const;

    QList<QString> getSubnetworkUsers() const;
    void setSubnetworkUsers(const QList<QString> &subnetwork_users);
    bool is_subnetwork_users_Set() const;
    bool is_subnetwork_users_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_consumer;
    bool m_consumer_isSet;
    bool m_consumer_isValid;

    QString m_consumer_network;
    bool m_consumer_network_isSet;
    bool m_consumer_network_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_ip_prefix_length;
    bool m_ip_prefix_length_isSet;
    bool m_ip_prefix_length_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_requested_address;
    bool m_requested_address_isSet;
    bool m_requested_address_isValid;

    QString m_subnetwork;
    bool m_subnetwork_isSet;
    bool m_subnetwork_isValid;

    QList<QString> m_subnetwork_users;
    bool m_subnetwork_users_isSet;
    bool m_subnetwork_users_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddSubnetworkRequest)

#endif // OAIAddSubnetworkRequest_H
