/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFieldPolicy.h
 *
 * Google API Policy Annotation This message defines a simple API policy annotation that can be used to annotate API request and response message fields with applicable policies. One field may have multiple applicable policies that must all be satisfied before a request can be processed. This policy annotation is used to generate the overall policy that will be used for automatic runtime policy enforcement and documentation generation.
 */

#ifndef OAIFieldPolicy_H
#define OAIFieldPolicy_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFieldPolicy : public OAIObject {
public:
    OAIFieldPolicy();
    OAIFieldPolicy(QString json);
    ~OAIFieldPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourcePermission() const;
    void setResourcePermission(const QString &resource_permission);
    bool is_resource_permission_Set() const;
    bool is_resource_permission_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QString getSelector() const;
    void setSelector(const QString &selector);
    bool is_selector_Set() const;
    bool is_selector_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_permission;
    bool m_resource_permission_isSet;
    bool m_resource_permission_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QString m_selector;
    bool m_selector_isSet;
    bool m_selector_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFieldPolicy)

#endif // OAIFieldPolicy_H
