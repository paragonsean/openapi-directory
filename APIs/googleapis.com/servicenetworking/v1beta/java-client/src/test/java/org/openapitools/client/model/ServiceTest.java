/*
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Api;
import org.openapitools.client.model.Authentication;
import org.openapitools.client.model.Backend;
import org.openapitools.client.model.Billing;
import org.openapitools.client.model.Context;
import org.openapitools.client.model.Control;
import org.openapitools.client.model.CustomError;
import org.openapitools.client.model.Documentation;
import org.openapitools.client.model.Endpoint;
import org.openapitools.client.model.Http;
import org.openapitools.client.model.LogDescriptor;
import org.openapitools.client.model.Logging;
import org.openapitools.client.model.MetricDescriptor;
import org.openapitools.client.model.ModelEnum;
import org.openapitools.client.model.MonitoredResourceDescriptor;
import org.openapitools.client.model.Monitoring;
import org.openapitools.client.model.Publishing;
import org.openapitools.client.model.Quota;
import org.openapitools.client.model.SourceInfo;
import org.openapitools.client.model.SystemParameters;
import org.openapitools.client.model.Type;
import org.openapitools.client.model.Usage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Service
 */
public class ServiceTest {
    private final Service model = new Service();

    /**
     * Model tests for Service
     */
    @Test
    public void testService() {
        // TODO: test Service
    }

    /**
     * Test the property 'apis'
     */
    @Test
    public void apisTest() {
        // TODO: test apis
    }

    /**
     * Test the property 'authentication'
     */
    @Test
    public void authenticationTest() {
        // TODO: test authentication
    }

    /**
     * Test the property 'backend'
     */
    @Test
    public void backendTest() {
        // TODO: test backend
    }

    /**
     * Test the property 'billing'
     */
    @Test
    public void billingTest() {
        // TODO: test billing
    }

    /**
     * Test the property 'configVersion'
     */
    @Test
    public void configVersionTest() {
        // TODO: test configVersion
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'control'
     */
    @Test
    public void controlTest() {
        // TODO: test control
    }

    /**
     * Test the property 'customError'
     */
    @Test
    public void customErrorTest() {
        // TODO: test customError
    }

    /**
     * Test the property 'documentation'
     */
    @Test
    public void documentationTest() {
        // TODO: test documentation
    }

    /**
     * Test the property 'endpoints'
     */
    @Test
    public void endpointsTest() {
        // TODO: test endpoints
    }

    /**
     * Test the property 'enums'
     */
    @Test
    public void enumsTest() {
        // TODO: test enums
    }

    /**
     * Test the property 'http'
     */
    @Test
    public void httpTest() {
        // TODO: test http
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'logging'
     */
    @Test
    public void loggingTest() {
        // TODO: test logging
    }

    /**
     * Test the property 'logs'
     */
    @Test
    public void logsTest() {
        // TODO: test logs
    }

    /**
     * Test the property 'metrics'
     */
    @Test
    public void metricsTest() {
        // TODO: test metrics
    }

    /**
     * Test the property 'monitoredResources'
     */
    @Test
    public void monitoredResourcesTest() {
        // TODO: test monitoredResources
    }

    /**
     * Test the property 'monitoring'
     */
    @Test
    public void monitoringTest() {
        // TODO: test monitoring
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'producerProjectId'
     */
    @Test
    public void producerProjectIdTest() {
        // TODO: test producerProjectId
    }

    /**
     * Test the property 'publishing'
     */
    @Test
    public void publishingTest() {
        // TODO: test publishing
    }

    /**
     * Test the property 'quota'
     */
    @Test
    public void quotaTest() {
        // TODO: test quota
    }

    /**
     * Test the property 'sourceInfo'
     */
    @Test
    public void sourceInfoTest() {
        // TODO: test sourceInfo
    }

    /**
     * Test the property 'systemParameters'
     */
    @Test
    public void systemParametersTest() {
        // TODO: test systemParameters
    }

    /**
     * Test the property 'systemTypes'
     */
    @Test
    public void systemTypesTest() {
        // TODO: test systemTypes
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'types'
     */
    @Test
    public void typesTest() {
        // TODO: test types
    }

    /**
     * Test the property 'usage'
     */
    @Test
    public void usageTest() {
        // TODO: test usage
    }

}
