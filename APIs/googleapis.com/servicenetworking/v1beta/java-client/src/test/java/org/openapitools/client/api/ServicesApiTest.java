/*
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddSubnetworkRequest;
import org.openapitools.client.model.GoogleCloudServicenetworkingV1betaConnection;
import org.openapitools.client.model.ListConnectionsResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.SearchRangeRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServicesApi
 */
@Disabled
public class ServicesApiTest {

    private final ServicesApi api = new ServicesApi();

    /**
     * For service producers, provisions a new subnet in a peered service&#39;s shared VPC network in the requested region and with the requested size that&#39;s expressed as a CIDR range (number of leading bits of ipV4 network mask). The method checks against the assigned allocated ranges to find a non-conflicting IP address range. The method will reuse a subnet if subsequent calls contain the same subnet name, region, and prefix length. This method will make producer&#39;s tenant project to be a shared VPC service project as needed. The response from the &#x60;get&#x60; operation will be of type &#x60;Subnetwork&#x60; if the operation successfully completes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicenetworkingServicesAddSubnetworkTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        AddSubnetworkRequest addSubnetworkRequest = null;
        Operation response = api.servicenetworkingServicesAddSubnetwork(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, addSubnetworkRequest);
        // TODO: test validations
    }

    /**
     * Creates a private connection that establishes a VPC Network Peering connection to a VPC network in the service producer&#39;s organization. The administrator of the service consumer&#39;s VPC network invokes this method. The administrator must assign one or more allocated IP ranges for provisioning subnetworks in the service producer&#39;s VPC network. This connection is used for all supported services in the service producer&#39;s organization, so it only needs to be invoked once. The response from the &#x60;get&#x60; operation will be of type &#x60;Connection&#x60; if the operation successfully completes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicenetworkingServicesConnectionsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudServicenetworkingV1betaConnection googleCloudServicenetworkingV1betaConnection = null;
        Operation response = api.servicenetworkingServicesConnectionsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudServicenetworkingV1betaConnection);
        // TODO: test validations
    }

    /**
     * List the private connections that are configured in a service consumer&#39;s VPC network.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicenetworkingServicesConnectionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String network = null;
        ListConnectionsResponse response = api.servicenetworkingServicesConnectionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, network);
        // TODO: test validations
    }

    /**
     * Service producers can use this method to find a currently unused range within consumer allocated ranges. This returned range is not reserved, and not guaranteed to remain unused. It will validate previously provided allocated ranges, find non-conflicting sub-range of requested size (expressed in number of leading bits of ipv4 network mask, as in CIDR range notation). Operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicenetworkingServicesSearchRangeTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SearchRangeRequest searchRangeRequest = null;
        Operation response = api.servicenetworkingServicesSearchRange(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, searchRangeRequest);
        // TODO: test validations
    }

    /**
     * Updates the allocated ranges that are assigned to a connection. The response from the &#x60;get&#x60; operation will be of type &#x60;Connection&#x60; if the operation successfully completes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicenetworkingServicesUpdateConnectionsTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean force = null;
        String updateMask = null;
        GoogleCloudServicenetworkingV1betaConnection googleCloudServicenetworkingV1betaConnection = null;
        Operation response = api.servicenetworkingServicesUpdateConnections(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, force, updateMask, googleCloudServicenetworkingV1betaConnection);
        // TODO: test validations
    }

}
