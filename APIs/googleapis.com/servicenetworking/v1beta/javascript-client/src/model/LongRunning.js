/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LongRunning model module.
 * @module model/LongRunning
 * @version v1beta
 */
class LongRunning {
    /**
     * Constructs a new <code>LongRunning</code>.
     * Describes settings to use when generating API methods that use the long-running operation pattern. All default values below are from those used in the client library generators (e.g. [Java](https://github.com/googleapis/gapic-generator-java/blob/04c2faa191a9b5a10b92392fe8482279c4404803/src/main/java/com/google/api/generator/gapic/composer/common/RetrySettingsComposer.java)).
     * @alias module:model/LongRunning
     */
    constructor() { 
        
        LongRunning.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LongRunning</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LongRunning} obj Optional instance to populate.
     * @return {module:model/LongRunning} The populated <code>LongRunning</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LongRunning();

            if (data.hasOwnProperty('initialPollDelay')) {
                obj['initialPollDelay'] = ApiClient.convertToType(data['initialPollDelay'], 'String');
            }
            if (data.hasOwnProperty('maxPollDelay')) {
                obj['maxPollDelay'] = ApiClient.convertToType(data['maxPollDelay'], 'String');
            }
            if (data.hasOwnProperty('pollDelayMultiplier')) {
                obj['pollDelayMultiplier'] = ApiClient.convertToType(data['pollDelayMultiplier'], 'Number');
            }
            if (data.hasOwnProperty('totalPollTimeout')) {
                obj['totalPollTimeout'] = ApiClient.convertToType(data['totalPollTimeout'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LongRunning</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LongRunning</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['initialPollDelay'] && !(typeof data['initialPollDelay'] === 'string' || data['initialPollDelay'] instanceof String)) {
            throw new Error("Expected the field `initialPollDelay` to be a primitive type in the JSON string but got " + data['initialPollDelay']);
        }
        // ensure the json data is a string
        if (data['maxPollDelay'] && !(typeof data['maxPollDelay'] === 'string' || data['maxPollDelay'] instanceof String)) {
            throw new Error("Expected the field `maxPollDelay` to be a primitive type in the JSON string but got " + data['maxPollDelay']);
        }
        // ensure the json data is a string
        if (data['totalPollTimeout'] && !(typeof data['totalPollTimeout'] === 'string' || data['totalPollTimeout'] instanceof String)) {
            throw new Error("Expected the field `totalPollTimeout` to be a primitive type in the JSON string but got " + data['totalPollTimeout']);
        }

        return true;
    }


}



/**
 * Initial delay after which the first poll request will be made. Default value: 5 seconds.
 * @member {String} initialPollDelay
 */
LongRunning.prototype['initialPollDelay'] = undefined;

/**
 * Maximum time between two subsequent poll requests. Default value: 45 seconds.
 * @member {String} maxPollDelay
 */
LongRunning.prototype['maxPollDelay'] = undefined;

/**
 * Multiplier to gradually increase delay between subsequent polls until it reaches max_poll_delay. Default value: 1.5.
 * @member {Number} pollDelayMultiplier
 */
LongRunning.prototype['pollDelayMultiplier'] = undefined;

/**
 * Total polling timeout. Default value: 5 minutes.
 * @member {String} totalPollTimeout
 */
LongRunning.prototype['totalPollTimeout'] = undefined;






export default LongRunning;

