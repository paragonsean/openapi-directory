/**
 * Service Networking API
 * Provides automatic management of network configurations necessary for certain services.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudSQLConfig from './CloudSQLConfig';
import GoogleCloudServicenetworkingV1ConsumerConfigReservedRange from './GoogleCloudServicenetworkingV1ConsumerConfigReservedRange';

/**
 * The ConsumerConfig model module.
 * @module model/ConsumerConfig
 * @version v1beta
 */
class ConsumerConfig {
    /**
     * Constructs a new <code>ConsumerConfig</code>.
     * Configuration information for a private service access connection.
     * @alias module:model/ConsumerConfig
     */
    constructor() { 
        
        ConsumerConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConsumerConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConsumerConfig} obj Optional instance to populate.
     * @return {module:model/ConsumerConfig} The populated <code>ConsumerConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConsumerConfig();

            if (data.hasOwnProperty('cloudsqlConfigs')) {
                obj['cloudsqlConfigs'] = ApiClient.convertToType(data['cloudsqlConfigs'], [CloudSQLConfig]);
            }
            if (data.hasOwnProperty('consumerExportCustomRoutes')) {
                obj['consumerExportCustomRoutes'] = ApiClient.convertToType(data['consumerExportCustomRoutes'], 'Boolean');
            }
            if (data.hasOwnProperty('consumerExportSubnetRoutesWithPublicIp')) {
                obj['consumerExportSubnetRoutesWithPublicIp'] = ApiClient.convertToType(data['consumerExportSubnetRoutesWithPublicIp'], 'Boolean');
            }
            if (data.hasOwnProperty('consumerImportCustomRoutes')) {
                obj['consumerImportCustomRoutes'] = ApiClient.convertToType(data['consumerImportCustomRoutes'], 'Boolean');
            }
            if (data.hasOwnProperty('consumerImportSubnetRoutesWithPublicIp')) {
                obj['consumerImportSubnetRoutesWithPublicIp'] = ApiClient.convertToType(data['consumerImportSubnetRoutesWithPublicIp'], 'Boolean');
            }
            if (data.hasOwnProperty('producerExportCustomRoutes')) {
                obj['producerExportCustomRoutes'] = ApiClient.convertToType(data['producerExportCustomRoutes'], 'Boolean');
            }
            if (data.hasOwnProperty('producerExportSubnetRoutesWithPublicIp')) {
                obj['producerExportSubnetRoutesWithPublicIp'] = ApiClient.convertToType(data['producerExportSubnetRoutesWithPublicIp'], 'Boolean');
            }
            if (data.hasOwnProperty('producerImportCustomRoutes')) {
                obj['producerImportCustomRoutes'] = ApiClient.convertToType(data['producerImportCustomRoutes'], 'Boolean');
            }
            if (data.hasOwnProperty('producerImportSubnetRoutesWithPublicIp')) {
                obj['producerImportSubnetRoutesWithPublicIp'] = ApiClient.convertToType(data['producerImportSubnetRoutesWithPublicIp'], 'Boolean');
            }
            if (data.hasOwnProperty('producerNetwork')) {
                obj['producerNetwork'] = ApiClient.convertToType(data['producerNetwork'], 'String');
            }
            if (data.hasOwnProperty('reservedRanges')) {
                obj['reservedRanges'] = ApiClient.convertToType(data['reservedRanges'], [GoogleCloudServicenetworkingV1ConsumerConfigReservedRange]);
            }
            if (data.hasOwnProperty('usedIpRanges')) {
                obj['usedIpRanges'] = ApiClient.convertToType(data['usedIpRanges'], ['String']);
            }
            if (data.hasOwnProperty('vpcScReferenceArchitectureEnabled')) {
                obj['vpcScReferenceArchitectureEnabled'] = ApiClient.convertToType(data['vpcScReferenceArchitectureEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConsumerConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConsumerConfig</code>.
     */
    static validateJSON(data) {
        if (data['cloudsqlConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['cloudsqlConfigs'])) {
                throw new Error("Expected the field `cloudsqlConfigs` to be an array in the JSON data but got " + data['cloudsqlConfigs']);
            }
            // validate the optional field `cloudsqlConfigs` (array)
            for (const item of data['cloudsqlConfigs']) {
                CloudSQLConfig.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['producerNetwork'] && !(typeof data['producerNetwork'] === 'string' || data['producerNetwork'] instanceof String)) {
            throw new Error("Expected the field `producerNetwork` to be a primitive type in the JSON string but got " + data['producerNetwork']);
        }
        if (data['reservedRanges']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reservedRanges'])) {
                throw new Error("Expected the field `reservedRanges` to be an array in the JSON data but got " + data['reservedRanges']);
            }
            // validate the optional field `reservedRanges` (array)
            for (const item of data['reservedRanges']) {
                GoogleCloudServicenetworkingV1ConsumerConfigReservedRange.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['usedIpRanges'])) {
            throw new Error("Expected the field `usedIpRanges` to be an array in the JSON data but got " + data['usedIpRanges']);
        }

        return true;
    }


}



/**
 * Represents one or multiple Cloud SQL configurations.
 * @member {Array.<module:model/CloudSQLConfig>} cloudsqlConfigs
 */
ConsumerConfig.prototype['cloudsqlConfigs'] = undefined;

/**
 * Export custom routes flag value for peering from consumer to producer.
 * @member {Boolean} consumerExportCustomRoutes
 */
ConsumerConfig.prototype['consumerExportCustomRoutes'] = undefined;

/**
 * Export subnet routes with public ip flag value for peering from consumer to producer.
 * @member {Boolean} consumerExportSubnetRoutesWithPublicIp
 */
ConsumerConfig.prototype['consumerExportSubnetRoutesWithPublicIp'] = undefined;

/**
 * Import custom routes flag value for peering from consumer to producer.
 * @member {Boolean} consumerImportCustomRoutes
 */
ConsumerConfig.prototype['consumerImportCustomRoutes'] = undefined;

/**
 * Import subnet routes with public ip flag value for peering from consumer to producer.
 * @member {Boolean} consumerImportSubnetRoutesWithPublicIp
 */
ConsumerConfig.prototype['consumerImportSubnetRoutesWithPublicIp'] = undefined;

/**
 * Export custom routes flag value for peering from producer to consumer.
 * @member {Boolean} producerExportCustomRoutes
 */
ConsumerConfig.prototype['producerExportCustomRoutes'] = undefined;

/**
 * Export subnet routes with public ip flag value for peering from producer to consumer.
 * @member {Boolean} producerExportSubnetRoutesWithPublicIp
 */
ConsumerConfig.prototype['producerExportSubnetRoutesWithPublicIp'] = undefined;

/**
 * Import custom routes flag value for peering from producer to consumer.
 * @member {Boolean} producerImportCustomRoutes
 */
ConsumerConfig.prototype['producerImportCustomRoutes'] = undefined;

/**
 * Import subnet routes with public ip flag value for peering from producer to consumer.
 * @member {Boolean} producerImportSubnetRoutesWithPublicIp
 */
ConsumerConfig.prototype['producerImportSubnetRoutesWithPublicIp'] = undefined;

/**
 * Output only. The VPC host network that is used to host managed service instances. In the format, projects/{project}/global/networks/{network} where {project} is the project number e.g. '12345' and {network} is the network name.
 * @member {String} producerNetwork
 */
ConsumerConfig.prototype['producerNetwork'] = undefined;

/**
 * Output only. The reserved ranges associated with this private service access connection.
 * @member {Array.<module:model/GoogleCloudServicenetworkingV1ConsumerConfigReservedRange>} reservedRanges
 */
ConsumerConfig.prototype['reservedRanges'] = undefined;

/**
 * Output only. The IP ranges already in use by consumer or producer
 * @member {Array.<String>} usedIpRanges
 */
ConsumerConfig.prototype['usedIpRanges'] = undefined;

/**
 * Output only. Indicates whether the VPC Service Controls reference architecture is configured for the producer VPC host network.
 * @member {Boolean} vpcScReferenceArchitectureEnabled
 */
ConsumerConfig.prototype['vpcScReferenceArchitectureEnabled'] = undefined;






export default ConsumerConfig;

