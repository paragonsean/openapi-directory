openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Firebase Hosting REST API enables programmatic and customizable
    management and deployments to your Firebase-hosted sites. Use this REST API to
    create and manage channels and sites as well as to deploy new or updated hosting
    configurations and content files.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Firebase Hosting API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://firebasehosting.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: firebasehosting
externalDocs:
  url: https://firebase.google.com/docs/hosting/
servers:
- url: https://firebasehosting.googleapis.com/
tags:
- name: operations
- name: projects
paths:
  /v1/{name}:
    delete:
      description: "DeleteOperation is a part of the google.longrunning.Operations\
        \ interface, but is not implemented for CustomDomain resources."
      operationId: firebasehosting.projects.sites.customDomains.operations.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be deleted.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - projects
      x-accepts:
      - application/json
    get:
      description: "Lists operations that match the specified filter in the request.\
        \ If the server doesn't support this method, it returns `UNIMPLEMENTED`."
      operationId: firebasehosting.operations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation's parent resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The standard list filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The standard list page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: The standard list page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Successful response
      tags:
      - operations
      x-accepts:
      - application/json
  /v1/{name}:cancel:
    post:
      description: "CancelOperation is a part of the google.longrunning.Operations\
        \ interface, but is not implemented for CustomDomain resources."
      operationId: firebasehosting.projects.sites.customDomains.operations.cancel
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be cancelled.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    CertVerification:
      description: A set of ACME challenges you can use to allow Hosting to create
        an SSL certificate for your domain name before directing traffic to Hosting
        servers. Use either the DNS or HTTP challenge; it's not necessary to provide
        both.
      properties:
        dns:
          $ref: '#/components/schemas/DnsUpdates'
        http:
          $ref: '#/components/schemas/HttpUpdate'
      type: object
    CustomDomainMetadata:
      description: Metadata associated with a`CustomDomain` operation.
      properties:
        certState:
          description: The `CertState` of the domain name's SSL certificate.
          enum:
          - CERT_STATE_UNSPECIFIED
          - CERT_PREPARING
          - CERT_VALIDATING
          - CERT_PROPAGATING
          - CERT_ACTIVE
          - CERT_EXPIRING_SOON
          - CERT_EXPIRED
          type: string
        hostState:
          description: The `HostState` of the domain name this `CustomDomain` refers
            to.
          enum:
          - HOST_STATE_UNSPECIFIED
          - HOST_UNHOSTED
          - HOST_UNREACHABLE
          - HOST_MISMATCH
          - HOST_CONFLICT
          - HOST_ACTIVE
          type: string
        issues:
          description: A list of issues that are currently preventing Hosting from
            completing the operation. These are generally DNS-related issues that
            Hosting encounters when querying a domain name's records or attempting
            to mint an SSL certificate.
          items:
            $ref: '#/components/schemas/Status'
          type: array
        liveMigrationSteps:
          description: "A set of DNS record updates and ACME challenges that allow\
            \ you to transition domain names to Firebase Hosting with zero downtime.\
            \ These updates allow Hosting to create an SSL certificate and establish\
            \ ownership for your custom domain before Hosting begins serving traffic\
            \ on it. If your domain name is already in active use with another provider,\
            \ add one of the challenges and make the recommended DNS updates. After\
            \ adding challenges and adjusting DNS records as necessary, wait for the\
            \ `ownershipState` to be `OWNERSHIP_ACTIVE` and the `certState` to be\
            \ `CERT_ACTIVE` before sending traffic to Hosting."
          items:
            $ref: '#/components/schemas/LiveMigrationStep'
          type: array
        ownershipState:
          description: The `OwnershipState` of the domain name this `CustomDomain`
            refers to.
          enum:
          - OWNERSHIP_STATE_UNSPECIFIED
          - OWNERSHIP_MISSING
          - OWNERSHIP_UNREACHABLE
          - OWNERSHIP_MISMATCH
          - OWNERSHIP_CONFLICT
          - OWNERSHIP_PENDING
          - OWNERSHIP_ACTIVE
          type: string
        quickSetupUpdates:
          $ref: '#/components/schemas/DnsUpdates'
      type: object
    DnsRecord:
      description: "DNS records are resource records that define how systems and services\
        \ should behave when handling requests for a domain name. For example, when\
        \ you add `A` records to your domain name's DNS records, you're informing\
        \ other systems (such as your users' web browsers) to contact those IPv4 addresses\
        \ to retrieve resources relevant to your domain name (such as your Hosting\
        \ site files)."
      properties:
        domainName:
          description: "Output only. The domain name the record pertains to, e.g.\
            \ `foo.bar.com.`."
          readOnly: true
          type: string
        rdata:
          description: "Output only. The data of the record. The meaning of the value\
            \ depends on record type: - A and AAAA: IP addresses for the domain name.\
            \ - CNAME: Another domain to check for records. - TXT: Arbitrary text\
            \ strings associated with the domain name. Hosting uses TXT records to\
            \ determine which Firebase projects have permission to act on the domain\
            \ name's behalf. - CAA: The record's flags, tag, and value, e.g. `0 issue\
            \ \"pki.goog\"`."
          readOnly: true
          type: string
        requiredAction:
          description: Output only. An enum that indicates the a required action for
            this record.
          enum:
          - NONE
          - ADD
          - REMOVE
          readOnly: true
          type: string
        type:
          description: "Output only. The record's type, which determines what data\
            \ the record contains."
          enum:
          - TYPE_UNSPECIFIED
          - A
          - CNAME
          - TXT
          - AAAA
          - CAA
          readOnly: true
          type: string
      type: object
    DnsRecordSet:
      description: A set of DNS records relevant to the setup and maintenance of a
        custom domain in Firebase Hosting.
      properties:
        checkError:
          $ref: '#/components/schemas/Status'
        domainName:
          description: Output only. The domain name the record set pertains to.
          readOnly: true
          type: string
        records:
          description: Output only. Records on the domain.
          items:
            $ref: '#/components/schemas/DnsRecord'
          readOnly: true
          type: array
      type: object
    DnsUpdates:
      description: "A set of DNS record updates that you should make to allow Hosting\
        \ to serve secure content in response to requests against your domain name.\
        \ These updates present the current state of your domain name's DNS records\
        \ when Hosting last queried them, and the desired set of records that Hosting\
        \ needs to see before your custom domain can be fully active."
      properties:
        checkTime:
          description: The last time Hosting checked your custom domain's DNS records.
          format: google-datetime
          type: string
        desired:
          description: The set of DNS records Hosting needs to serve secure content
            on the domain.
          items:
            $ref: '#/components/schemas/DnsRecordSet'
          type: array
        discovered:
          description: The set of DNS records Hosting discovered when inspecting a
            domain.
          items:
            $ref: '#/components/schemas/DnsRecordSet'
          type: array
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    HttpUpdate:
      description: "A file you can add to your existing, non-Hosting hosting service\
        \ that confirms your intent to allow Hosting's Certificate Authorities to\
        \ create an SSL certificate for your domain."
      properties:
        checkError:
          $ref: '#/components/schemas/Status'
        desired:
          description: Output only. A text string to serve at the path.
          readOnly: true
          type: string
        discovered:
          description: Output only. Whether Hosting was able to find the required
            file contents on the specified path during its last check.
          readOnly: true
          type: string
        lastCheckTime:
          description: Output only. The last time Hosting systems checked for the
            file contents.
          format: google-datetime
          readOnly: true
          type: string
        path:
          description: Output only. The path to the file.
          readOnly: true
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      example:
        operations:
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    LiveMigrationStep:
      description: "A set of updates including ACME challenges and DNS records that\
        \ allow Hosting to create an SSL certificate and establish project ownership\
        \ for your domain name before you direct traffic to Hosting servers. Use these\
        \ updates to facilitate zero downtime migrations to Hosting from other services.\
        \ After you've made the recommended updates, check your custom domain's `ownershipState`\
        \ and `certState`. To avoid downtime, they should be `OWNERSHIP_ACTIVE` and\
        \ `CERT_ACTIVE`, respectively, before you update your `A` and `AAAA` records."
      properties:
        certVerification:
          $ref: '#/components/schemas/CertVerification'
        dnsUpdates:
          $ref: '#/components/schemas/DnsUpdates'
        issues:
          description: Output only. Issues that prevent the current step from completing.
          items:
            $ref: '#/components/schemas/Status'
          readOnly: true
          type: array
        state:
          description: "Output only. The state of the live migration step, indicates\
            \ whether you should work to complete the step now, in the future, or\
            \ have already completed it."
          enum:
          - STATE_UNSPECIFIED
          - PREPARING
          - PENDING
          - INCOMPLETE
          - PROCESSING
          - COMPLETE
          readOnly: true
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          type: object
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/firebase: View and administer all your
              Firebase data and settings
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/firebase: View and administer all your
              Firebase data and settings
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

