# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class HttpUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_error: Status=None, desired: str=None, discovered: str=None, last_check_time: str=None, path: str=None):
        """HttpUpdate - a model defined in OpenAPI

        :param check_error: The check_error of this HttpUpdate.
        :param desired: The desired of this HttpUpdate.
        :param discovered: The discovered of this HttpUpdate.
        :param last_check_time: The last_check_time of this HttpUpdate.
        :param path: The path of this HttpUpdate.
        """
        self.openapi_types = {
            'check_error': Status,
            'desired': str,
            'discovered': str,
            'last_check_time': str,
            'path': str
        }

        self.attribute_map = {
            'check_error': 'checkError',
            'desired': 'desired',
            'discovered': 'discovered',
            'last_check_time': 'lastCheckTime',
            'path': 'path'
        }

        self._check_error = check_error
        self._desired = desired
        self._discovered = discovered
        self._last_check_time = last_check_time
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpUpdate of this HttpUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_error(self):
        """Gets the check_error of this HttpUpdate.


        :return: The check_error of this HttpUpdate.
        :rtype: Status
        """
        return self._check_error

    @check_error.setter
    def check_error(self, check_error):
        """Sets the check_error of this HttpUpdate.


        :param check_error: The check_error of this HttpUpdate.
        :type check_error: Status
        """

        self._check_error = check_error

    @property
    def desired(self):
        """Gets the desired of this HttpUpdate.

        Output only. A text string to serve at the path.

        :return: The desired of this HttpUpdate.
        :rtype: str
        """
        return self._desired

    @desired.setter
    def desired(self, desired):
        """Sets the desired of this HttpUpdate.

        Output only. A text string to serve at the path.

        :param desired: The desired of this HttpUpdate.
        :type desired: str
        """

        self._desired = desired

    @property
    def discovered(self):
        """Gets the discovered of this HttpUpdate.

        Output only. Whether Hosting was able to find the required file contents on the specified path during its last check.

        :return: The discovered of this HttpUpdate.
        :rtype: str
        """
        return self._discovered

    @discovered.setter
    def discovered(self, discovered):
        """Sets the discovered of this HttpUpdate.

        Output only. Whether Hosting was able to find the required file contents on the specified path during its last check.

        :param discovered: The discovered of this HttpUpdate.
        :type discovered: str
        """

        self._discovered = discovered

    @property
    def last_check_time(self):
        """Gets the last_check_time of this HttpUpdate.

        Output only. The last time Hosting systems checked for the file contents.

        :return: The last_check_time of this HttpUpdate.
        :rtype: str
        """
        return self._last_check_time

    @last_check_time.setter
    def last_check_time(self, last_check_time):
        """Sets the last_check_time of this HttpUpdate.

        Output only. The last time Hosting systems checked for the file contents.

        :param last_check_time: The last_check_time of this HttpUpdate.
        :type last_check_time: str
        """

        self._last_check_time = last_check_time

    @property
    def path(self):
        """Gets the path of this HttpUpdate.

        Output only. The path to the file.

        :return: The path of this HttpUpdate.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this HttpUpdate.

        Output only. The path to the file.

        :param path: The path of this HttpUpdate.
        :type path: str
        """

        self._path = path
