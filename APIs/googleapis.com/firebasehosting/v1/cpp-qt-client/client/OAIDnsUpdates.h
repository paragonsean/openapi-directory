/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDnsUpdates.h
 *
 * A set of DNS record updates that you should make to allow Hosting to serve secure content in response to requests against your domain name. These updates present the current state of your domain name&#39;s DNS records when Hosting last queried them, and the desired set of records that Hosting needs to see before your custom domain can be fully active.
 */

#ifndef OAIDnsUpdates_H
#define OAIDnsUpdates_H

#include <QJsonObject>

#include "OAIDnsRecordSet.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDnsRecordSet;

class OAIDnsUpdates : public OAIObject {
public:
    OAIDnsUpdates();
    OAIDnsUpdates(QString json);
    ~OAIDnsUpdates() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCheckTime() const;
    void setCheckTime(const QString &check_time);
    bool is_check_time_Set() const;
    bool is_check_time_Valid() const;

    QList<OAIDnsRecordSet> getDesired() const;
    void setDesired(const QList<OAIDnsRecordSet> &desired);
    bool is_desired_Set() const;
    bool is_desired_Valid() const;

    QList<OAIDnsRecordSet> getDiscovered() const;
    void setDiscovered(const QList<OAIDnsRecordSet> &discovered);
    bool is_discovered_Set() const;
    bool is_discovered_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_check_time;
    bool m_check_time_isSet;
    bool m_check_time_isValid;

    QList<OAIDnsRecordSet> m_desired;
    bool m_desired_isSet;
    bool m_desired_isValid;

    QList<OAIDnsRecordSet> m_discovered;
    bool m_discovered_isSet;
    bool m_discovered_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDnsUpdates)

#endif // OAIDnsUpdates_H
