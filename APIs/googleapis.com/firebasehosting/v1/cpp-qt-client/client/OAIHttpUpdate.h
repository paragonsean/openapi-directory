/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpUpdate.h
 *
 * A file you can add to your existing, non-Hosting hosting service that confirms your intent to allow Hosting&#39;s Certificate Authorities to create an SSL certificate for your domain.
 */

#ifndef OAIHttpUpdate_H
#define OAIHttpUpdate_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;

class OAIHttpUpdate : public OAIObject {
public:
    OAIHttpUpdate();
    OAIHttpUpdate(QString json);
    ~OAIHttpUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStatus getCheckError() const;
    void setCheckError(const OAIStatus &check_error);
    bool is_check_error_Set() const;
    bool is_check_error_Valid() const;

    QString getDesired() const;
    void setDesired(const QString &desired);
    bool is_desired_Set() const;
    bool is_desired_Valid() const;

    QString getDiscovered() const;
    void setDiscovered(const QString &discovered);
    bool is_discovered_Set() const;
    bool is_discovered_Valid() const;

    QString getLastCheckTime() const;
    void setLastCheckTime(const QString &last_check_time);
    bool is_last_check_time_Set() const;
    bool is_last_check_time_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStatus m_check_error;
    bool m_check_error_isSet;
    bool m_check_error_isValid;

    QString m_desired;
    bool m_desired_isSet;
    bool m_desired_isValid;

    QString m_discovered;
    bool m_discovered_isSet;
    bool m_discovered_isValid;

    QString m_last_check_time;
    bool m_last_check_time_isSet;
    bool m_last_check_time_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpUpdate)

#endif // OAIHttpUpdate_H
