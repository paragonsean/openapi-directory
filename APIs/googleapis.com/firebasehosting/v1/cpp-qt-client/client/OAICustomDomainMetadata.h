/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomDomainMetadata.h
 *
 * Metadata associated with a&#x60;CustomDomain&#x60; operation.
 */

#ifndef OAICustomDomainMetadata_H
#define OAICustomDomainMetadata_H

#include <QJsonObject>

#include "OAIDnsUpdates.h"
#include "OAILiveMigrationStep.h"
#include "OAIStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;
class OAILiveMigrationStep;
class OAIDnsUpdates;

class OAICustomDomainMetadata : public OAIObject {
public:
    OAICustomDomainMetadata();
    OAICustomDomainMetadata(QString json);
    ~OAICustomDomainMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCertState() const;
    void setCertState(const QString &cert_state);
    bool is_cert_state_Set() const;
    bool is_cert_state_Valid() const;

    QString getHostState() const;
    void setHostState(const QString &host_state);
    bool is_host_state_Set() const;
    bool is_host_state_Valid() const;

    QList<OAIStatus> getIssues() const;
    void setIssues(const QList<OAIStatus> &issues);
    bool is_issues_Set() const;
    bool is_issues_Valid() const;

    QList<OAILiveMigrationStep> getLiveMigrationSteps() const;
    void setLiveMigrationSteps(const QList<OAILiveMigrationStep> &live_migration_steps);
    bool is_live_migration_steps_Set() const;
    bool is_live_migration_steps_Valid() const;

    QString getOwnershipState() const;
    void setOwnershipState(const QString &ownership_state);
    bool is_ownership_state_Set() const;
    bool is_ownership_state_Valid() const;

    OAIDnsUpdates getQuickSetupUpdates() const;
    void setQuickSetupUpdates(const OAIDnsUpdates &quick_setup_updates);
    bool is_quick_setup_updates_Set() const;
    bool is_quick_setup_updates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cert_state;
    bool m_cert_state_isSet;
    bool m_cert_state_isValid;

    QString m_host_state;
    bool m_host_state_isSet;
    bool m_host_state_isValid;

    QList<OAIStatus> m_issues;
    bool m_issues_isSet;
    bool m_issues_isValid;

    QList<OAILiveMigrationStep> m_live_migration_steps;
    bool m_live_migration_steps_isSet;
    bool m_live_migration_steps_isValid;

    QString m_ownership_state;
    bool m_ownership_state_isSet;
    bool m_ownership_state_isValid;

    OAIDnsUpdates m_quick_setup_updates;
    bool m_quick_setup_updates_isSet;
    bool m_quick_setup_updates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomDomainMetadata)

#endif // OAICustomDomainMetadata_H
