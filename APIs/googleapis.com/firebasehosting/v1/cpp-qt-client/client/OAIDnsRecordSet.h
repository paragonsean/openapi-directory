/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDnsRecordSet.h
 *
 * A set of DNS records relevant to the setup and maintenance of a custom domain in Firebase Hosting.
 */

#ifndef OAIDnsRecordSet_H
#define OAIDnsRecordSet_H

#include <QJsonObject>

#include "OAIDnsRecord.h"
#include "OAIStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStatus;
class OAIDnsRecord;

class OAIDnsRecordSet : public OAIObject {
public:
    OAIDnsRecordSet();
    OAIDnsRecordSet(QString json);
    ~OAIDnsRecordSet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStatus getCheckError() const;
    void setCheckError(const OAIStatus &check_error);
    bool is_check_error_Set() const;
    bool is_check_error_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QList<OAIDnsRecord> getRecords() const;
    void setRecords(const QList<OAIDnsRecord> &records);
    bool is_records_Set() const;
    bool is_records_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStatus m_check_error;
    bool m_check_error_isSet;
    bool m_check_error_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QList<OAIDnsRecord> m_records;
    bool m_records_isSet;
    bool m_records_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDnsRecordSet)

#endif // OAIDnsRecordSet_H
