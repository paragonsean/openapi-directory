/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PopulateVersionFilesRequest model module.
 * @module model/PopulateVersionFilesRequest
 * @version v1beta1
 */
class PopulateVersionFilesRequest {
    /**
     * Constructs a new <code>PopulateVersionFilesRequest</code>.
     * @alias module:model/PopulateVersionFilesRequest
     */
    constructor() { 
        
        PopulateVersionFilesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PopulateVersionFilesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PopulateVersionFilesRequest} obj Optional instance to populate.
     * @return {module:model/PopulateVersionFilesRequest} The populated <code>PopulateVersionFilesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PopulateVersionFilesRequest();

            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PopulateVersionFilesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PopulateVersionFilesRequest</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A set of file paths to the hashes corresponding to assets that should be added to the version. A file path to an empty hash will remove the path from the version. Calculate a hash by Gzipping the file then taking the SHA256 hash of the newly compressed file.
 * @member {Object.<String, String>} files
 */
PopulateVersionFilesRequest.prototype['files'] = undefined;






export default PopulateVersionFilesRequest;

