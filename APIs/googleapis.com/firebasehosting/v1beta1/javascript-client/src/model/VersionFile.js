/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VersionFile model module.
 * @module model/VersionFile
 * @version v1beta1
 */
class VersionFile {
    /**
     * Constructs a new <code>VersionFile</code>.
     * A static content file that is part of a version.
     * @alias module:model/VersionFile
     */
    constructor() { 
        
        VersionFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VersionFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionFile} obj Optional instance to populate.
     * @return {module:model/VersionFile} The populated <code>VersionFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionFile();

            if (data.hasOwnProperty('hash')) {
                obj['hash'] = ApiClient.convertToType(data['hash'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VersionFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VersionFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hash'] && !(typeof data['hash'] === 'string' || data['hash'] instanceof String)) {
            throw new Error("Expected the field `hash` to be a primitive type in the JSON string but got " + data['hash']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The SHA256 content hash of the file.
 * @member {String} hash
 */
VersionFile.prototype['hash'] = undefined;

/**
 * The URI at which the file's content should display.
 * @member {String} path
 */
VersionFile.prototype['path'] = undefined;

/**
 * Output only. The current status of a particular file in the specified version. The value will be either `pending upload` or `uploaded`.
 * @member {module:model/VersionFile.StatusEnum} status
 */
VersionFile.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
VersionFile['StatusEnum'] = {

    /**
     * value: "STATUS_UNSPECIFIED"
     * @const
     */
    "STATUS_UNSPECIFIED": "STATUS_UNSPECIFIED",

    /**
     * value: "EXPECTED"
     * @const
     */
    "EXPECTED": "EXPECTED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE"
};



export default VersionFile;

