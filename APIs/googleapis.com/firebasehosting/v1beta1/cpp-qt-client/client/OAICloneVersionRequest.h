/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloneVersionRequest.h
 *
 * 
 */

#ifndef OAICloneVersionRequest_H
#define OAICloneVersionRequest_H

#include <QJsonObject>

#include "OAIPathFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPathFilter;

class OAICloneVersionRequest : public OAIObject {
public:
    OAICloneVersionRequest();
    OAICloneVersionRequest(QString json);
    ~OAICloneVersionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPathFilter getExclude() const;
    void setExclude(const OAIPathFilter &exclude);
    bool is_exclude_Set() const;
    bool is_exclude_Valid() const;

    bool isFinalize() const;
    void setFinalize(const bool &finalize);
    bool is_finalize_Set() const;
    bool is_finalize_Valid() const;

    OAIPathFilter getInclude() const;
    void setInclude(const OAIPathFilter &include);
    bool is_include_Set() const;
    bool is_include_Valid() const;

    QString getSourceVersion() const;
    void setSourceVersion(const QString &source_version);
    bool is_source_version_Set() const;
    bool is_source_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPathFilter m_exclude;
    bool m_exclude_isSet;
    bool m_exclude_isValid;

    bool m_finalize;
    bool m_finalize_isSet;
    bool m_finalize_isValid;

    OAIPathFilter m_include;
    bool m_include_isSet;
    bool m_include_isValid;

    QString m_source_version;
    bool m_source_version_isSet;
    bool m_source_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloneVersionRequest)

#endif // OAICloneVersionRequest_H
