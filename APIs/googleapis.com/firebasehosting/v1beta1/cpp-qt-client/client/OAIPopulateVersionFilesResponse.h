/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPopulateVersionFilesResponse.h
 *
 * 
 */

#ifndef OAIPopulateVersionFilesResponse_H
#define OAIPopulateVersionFilesResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPopulateVersionFilesResponse : public OAIObject {
public:
    OAIPopulateVersionFilesResponse();
    OAIPopulateVersionFilesResponse(QString json);
    ~OAIPopulateVersionFilesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getUploadRequiredHashes() const;
    void setUploadRequiredHashes(const QList<QString> &upload_required_hashes);
    bool is_upload_required_hashes_Set() const;
    bool is_upload_required_hashes_Valid() const;

    QString getUploadUrl() const;
    void setUploadUrl(const QString &upload_url);
    bool is_upload_url_Set() const;
    bool is_upload_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_upload_required_hashes;
    bool m_upload_required_hashes_isSet;
    bool m_upload_required_hashes_isValid;

    QString m_upload_url;
    bool m_upload_url_isSet;
    bool m_upload_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPopulateVersionFilesResponse)

#endif // OAIPopulateVersionFilesResponse_H
