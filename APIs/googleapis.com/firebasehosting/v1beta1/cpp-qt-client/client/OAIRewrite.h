/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRewrite.h
 *
 * A [&#x60;Rewrite&#x60;](https://firebase.google.com/docs/hosting/full-config#rewrites) specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
 */

#ifndef OAIRewrite_H
#define OAIRewrite_H

#include <QJsonObject>

#include "OAICloudRunRewrite.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICloudRunRewrite;

class OAIRewrite : public OAIObject {
public:
    OAIRewrite();
    OAIRewrite(QString json);
    ~OAIRewrite() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDynamicLinks() const;
    void setDynamicLinks(const bool &dynamic_links);
    bool is_dynamic_links_Set() const;
    bool is_dynamic_links_Valid() const;

    QString getFunction() const;
    void setFunction(const QString &function);
    bool is_function_Set() const;
    bool is_function_Valid() const;

    QString getFunctionRegion() const;
    void setFunctionRegion(const QString &function_region);
    bool is_function_region_Set() const;
    bool is_function_region_Valid() const;

    QString getGlob() const;
    void setGlob(const QString &glob);
    bool is_glob_Set() const;
    bool is_glob_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getRegex() const;
    void setRegex(const QString &regex);
    bool is_regex_Set() const;
    bool is_regex_Valid() const;

    OAICloudRunRewrite getRun() const;
    void setRun(const OAICloudRunRewrite &run);
    bool is_run_Set() const;
    bool is_run_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_dynamic_links;
    bool m_dynamic_links_isSet;
    bool m_dynamic_links_isValid;

    QString m_function;
    bool m_function_isSet;
    bool m_function_isValid;

    QString m_function_region;
    bool m_function_region_isSet;
    bool m_function_region_isValid;

    QString m_glob;
    bool m_glob_isSet;
    bool m_glob_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_regex;
    bool m_regex_isSet;
    bool m_regex_isValid;

    OAICloudRunRewrite m_run;
    bool m_run_isSet;
    bool m_run_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRewrite)

#endif // OAIRewrite_H
