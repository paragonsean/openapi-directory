/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRedirect.h
 *
 * A [&#x60;Redirect&#x60;](https://firebase.google.com/docs/hosting/full-config#redirects) specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond with a redirect to the specified destination path.
 */

#ifndef OAIRedirect_H
#define OAIRedirect_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRedirect : public OAIObject {
public:
    OAIRedirect();
    OAIRedirect(QString json);
    ~OAIRedirect() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGlob() const;
    void setGlob(const QString &glob);
    bool is_glob_Set() const;
    bool is_glob_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getRegex() const;
    void setRegex(const QString &regex);
    bool is_regex_Set() const;
    bool is_regex_Valid() const;

    qint32 getStatusCode() const;
    void setStatusCode(const qint32 &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_glob;
    bool m_glob_isSet;
    bool m_glob_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_regex;
    bool m_regex_isSet;
    bool m_regex_isValid;

    qint32 m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRedirect)

#endif // OAIRedirect_H
