/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISiteConfig.h
 *
 * A &#x60;SiteConfig&#x60; contains metadata associated with a specific site that controls Firebase Hosting serving behavior
 */

#ifndef OAISiteConfig_H
#define OAISiteConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISiteConfig : public OAIObject {
public:
    OAISiteConfig();
    OAISiteConfig(QString json);
    ~OAISiteConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCloudLoggingEnabled() const;
    void setCloudLoggingEnabled(const bool &cloud_logging_enabled);
    bool is_cloud_logging_enabled_Set() const;
    bool is_cloud_logging_enabled_Valid() const;

    QString getMaxVersions() const;
    void setMaxVersions(const QString &max_versions);
    bool is_max_versions_Set() const;
    bool is_max_versions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_cloud_logging_enabled;
    bool m_cloud_logging_enabled_isSet;
    bool m_cloud_logging_enabled_isValid;

    QString m_max_versions;
    bool m_max_versions_isSet;
    bool m_max_versions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISiteConfig)

#endif // OAISiteConfig_H
