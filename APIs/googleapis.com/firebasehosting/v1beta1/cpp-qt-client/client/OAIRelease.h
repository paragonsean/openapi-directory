/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRelease.h
 *
 *  A &#x60;Release&#x60; is a particular [collection of configurations and files](sites.versions) that is set to be public at a particular time.
 */

#ifndef OAIRelease_H
#define OAIRelease_H

#include <QJsonObject>

#include "OAIActingUser.h"
#include "OAIVersion.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActingUser;
class OAIVersion;

class OAIRelease : public OAIObject {
public:
    OAIRelease();
    OAIRelease(QString json);
    ~OAIRelease() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReleaseTime() const;
    void setReleaseTime(const QString &release_time);
    bool is_release_time_Set() const;
    bool is_release_time_Valid() const;

    OAIActingUser getReleaseUser() const;
    void setReleaseUser(const OAIActingUser &release_user);
    bool is_release_user_Set() const;
    bool is_release_user_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIVersion getVersion() const;
    void setVersion(const OAIVersion &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_release_time;
    bool m_release_time_isSet;
    bool m_release_time_isValid;

    OAIActingUser m_release_user;
    bool m_release_user_isSet;
    bool m_release_user_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIVersion m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRelease)

#endif // OAIRelease_H
