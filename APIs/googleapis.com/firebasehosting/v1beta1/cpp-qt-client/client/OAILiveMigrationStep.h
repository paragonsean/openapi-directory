/**
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILiveMigrationStep.h
 *
 * A set of updates including ACME challenges and DNS records that allow Hosting to create an SSL certificate and establish project ownership for your domain name before you direct traffic to Hosting servers. Use these updates to facilitate zero downtime migrations to Hosting from other services. After you&#39;ve made the recommended updates, check your custom domain&#39;s &#x60;ownershipState&#x60; and &#x60;certState&#x60;. To avoid downtime, they should be &#x60;OWNERSHIP_ACTIVE&#x60; and &#x60;CERT_ACTIVE&#x60;, respectively, before you update your &#x60;A&#x60; and &#x60;AAAA&#x60; records.
 */

#ifndef OAILiveMigrationStep_H
#define OAILiveMigrationStep_H

#include <QJsonObject>

#include "OAICertVerification.h"
#include "OAIDnsUpdates.h"
#include "OAIStatus.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICertVerification;
class OAIDnsUpdates;
class OAIStatus;

class OAILiveMigrationStep : public OAIObject {
public:
    OAILiveMigrationStep();
    OAILiveMigrationStep(QString json);
    ~OAILiveMigrationStep() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICertVerification getCertVerification() const;
    void setCertVerification(const OAICertVerification &cert_verification);
    bool is_cert_verification_Set() const;
    bool is_cert_verification_Valid() const;

    OAIDnsUpdates getDnsUpdates() const;
    void setDnsUpdates(const OAIDnsUpdates &dns_updates);
    bool is_dns_updates_Set() const;
    bool is_dns_updates_Valid() const;

    QList<OAIStatus> getIssues() const;
    void setIssues(const QList<OAIStatus> &issues);
    bool is_issues_Set() const;
    bool is_issues_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICertVerification m_cert_verification;
    bool m_cert_verification_isSet;
    bool m_cert_verification_isValid;

    OAIDnsUpdates m_dns_updates;
    bool m_dns_updates_isSet;
    bool m_dns_updates_isValid;

    QList<OAIStatus> m_issues;
    bool m_issues_isSet;
    bool m_issues_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILiveMigrationStep)

#endif // OAILiveMigrationStep_H
