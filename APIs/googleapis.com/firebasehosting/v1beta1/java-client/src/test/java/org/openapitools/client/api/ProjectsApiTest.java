/*
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CustomDomain;
import org.openapitools.client.model.ListCustomDomainsResponse;
import org.openapitools.client.model.ListOperationsResponse;
import org.openapitools.client.model.ListSitesResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.Site;
import org.openapitools.client.model.UndeleteCustomDomainRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Creates a new Hosting Site in the specified parent Firebase project. Note that Hosting sites can take several minutes to propagate through Firebase systems.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firebasehostingProjectsSitesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String siteId = null;
        Boolean validateOnly = null;
        Site site = null;
        Site response = api.firebasehostingProjectsSitesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, siteId, validateOnly, site);
        // TODO: test validations
    }

    /**
     * Creates a &#x60;CustomDomain&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firebasehostingProjectsSitesCustomDomainsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String customDomainId = null;
        Boolean validateOnly = null;
        CustomDomain customDomain = null;
        Operation response = api.firebasehostingProjectsSitesCustomDomainsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, customDomainId, validateOnly, customDomain);
        // TODO: test validations
    }

    /**
     * Lists each &#x60;CustomDomain&#x60; associated with the specified parent Hosting site. Returns &#x60;CustomDomain&#x60;s in a consistent, but undefined, order to facilitate pagination.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firebasehostingProjectsSitesCustomDomainsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        Boolean showDeleted = null;
        ListCustomDomainsResponse response = api.firebasehostingProjectsSitesCustomDomainsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, showDeleted);
        // TODO: test validations
    }

    /**
     * Lists operations that match the specified filter in the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firebasehostingProjectsSitesCustomDomainsOperationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        ListOperationsResponse response = api.firebasehostingProjectsSitesCustomDomainsOperationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Undeletes the specified &#x60;CustomDomain&#x60; if it has been soft-deleted. Hosting retains soft-deleted custom domains for around 30 days before permanently deleting them.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firebasehostingProjectsSitesCustomDomainsUndeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        UndeleteCustomDomainRequest undeleteCustomDomainRequest = null;
        Operation response = api.firebasehostingProjectsSitesCustomDomainsUndelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, undeleteCustomDomainRequest);
        // TODO: test validations
    }

    /**
     * Lists each Hosting Site associated with the specified parent Firebase project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void firebasehostingProjectsSitesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        ListSitesResponse response = api.firebasehostingProjectsSitesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

}
