/*
 * Firebase Hosting API
 * The Firebase Hosting REST API enables programmatic and customizable management and deployments to your Firebase-hosted sites. Use this REST API to create and manage channels and sites as well as to deploy new or updated hosting configurations and content files.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.Certificate;
import org.openapitools.client.model.DnsUpdates;
import org.openapitools.client.model.Status;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CustomDomain
 */
public class CustomDomainTest {
    private final CustomDomain model = new CustomDomain();

    /**
     * Model tests for CustomDomain
     */
    @Test
    public void testCustomDomain() {
        // TODO: test CustomDomain
    }

    /**
     * Test the property 'annotations'
     */
    @Test
    public void annotationsTest() {
        // TODO: test annotations
    }

    /**
     * Test the property 'cert'
     */
    @Test
    public void certTest() {
        // TODO: test cert
    }

    /**
     * Test the property 'certPreference'
     */
    @Test
    public void certPreferenceTest() {
        // TODO: test certPreference
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'deleteTime'
     */
    @Test
    public void deleteTimeTest() {
        // TODO: test deleteTime
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'expireTime'
     */
    @Test
    public void expireTimeTest() {
        // TODO: test expireTime
    }

    /**
     * Test the property 'hostState'
     */
    @Test
    public void hostStateTest() {
        // TODO: test hostState
    }

    /**
     * Test the property 'issues'
     */
    @Test
    public void issuesTest() {
        // TODO: test issues
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'ownershipState'
     */
    @Test
    public void ownershipStateTest() {
        // TODO: test ownershipState
    }

    /**
     * Test the property 'reconciling'
     */
    @Test
    public void reconcilingTest() {
        // TODO: test reconciling
    }

    /**
     * Test the property 'redirectTarget'
     */
    @Test
    public void redirectTargetTest() {
        // TODO: test redirectTarget
    }

    /**
     * Test the property 'requiredDnsUpdates'
     */
    @Test
    public void requiredDnsUpdatesTest() {
        // TODO: test requiredDnsUpdates
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

}
