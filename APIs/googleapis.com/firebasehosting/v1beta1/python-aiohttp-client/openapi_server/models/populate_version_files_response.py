# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PopulateVersionFilesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upload_required_hashes: List[str]=None, upload_url: str=None):
        """PopulateVersionFilesResponse - a model defined in OpenAPI

        :param upload_required_hashes: The upload_required_hashes of this PopulateVersionFilesResponse.
        :param upload_url: The upload_url of this PopulateVersionFilesResponse.
        """
        self.openapi_types = {
            'upload_required_hashes': List[str],
            'upload_url': str
        }

        self.attribute_map = {
            'upload_required_hashes': 'uploadRequiredHashes',
            'upload_url': 'uploadUrl'
        }

        self._upload_required_hashes = upload_required_hashes
        self._upload_url = upload_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PopulateVersionFilesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PopulateVersionFilesResponse of this PopulateVersionFilesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upload_required_hashes(self):
        """Gets the upload_required_hashes of this PopulateVersionFilesResponse.

        The content hashes of the specified files that need to be uploaded to the specified URL.

        :return: The upload_required_hashes of this PopulateVersionFilesResponse.
        :rtype: List[str]
        """
        return self._upload_required_hashes

    @upload_required_hashes.setter
    def upload_required_hashes(self, upload_required_hashes):
        """Sets the upload_required_hashes of this PopulateVersionFilesResponse.

        The content hashes of the specified files that need to be uploaded to the specified URL.

        :param upload_required_hashes: The upload_required_hashes of this PopulateVersionFilesResponse.
        :type upload_required_hashes: List[str]
        """

        self._upload_required_hashes = upload_required_hashes

    @property
    def upload_url(self):
        """Gets the upload_url of this PopulateVersionFilesResponse.

        The URL to which the files should be uploaded, in the format: \"https://upload-firebasehosting.googleapis.com/upload/sites/SITE_ID /versions/VERSION_ID/files\" Perform a multipart `POST` of the Gzipped file contents to the URL using a forward slash and the hash of the file appended to the end.

        :return: The upload_url of this PopulateVersionFilesResponse.
        :rtype: str
        """
        return self._upload_url

    @upload_url.setter
    def upload_url(self, upload_url):
        """Sets the upload_url of this PopulateVersionFilesResponse.

        The URL to which the files should be uploaded, in the format: \"https://upload-firebasehosting.googleapis.com/upload/sites/SITE_ID /versions/VERSION_ID/files\" Perform a multipart `POST` of the Gzipped file contents to the URL using a forward slash and the hash of the file appended to the end.

        :param upload_url: The upload_url of this PopulateVersionFilesResponse.
        :type upload_url: str
        """

        self._upload_url = upload_url
