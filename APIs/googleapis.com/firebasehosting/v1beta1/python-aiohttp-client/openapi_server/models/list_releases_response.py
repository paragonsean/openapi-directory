# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.release import Release
from openapi_server import util


class ListReleasesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, releases: List[Release]=None):
        """ListReleasesResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListReleasesResponse.
        :param releases: The releases of this ListReleasesResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'releases': List[Release]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'releases': 'releases'
        }

        self._next_page_token = next_page_token
        self._releases = releases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListReleasesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListReleasesResponse of this ListReleasesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListReleasesResponse.

        The pagination token, if more results exist beyond the ones in this response. Include this token in your next call to `ListReleases`. Page tokens are short-lived and should not be stored.

        :return: The next_page_token of this ListReleasesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListReleasesResponse.

        The pagination token, if more results exist beyond the ones in this response. Include this token in your next call to `ListReleases`. Page tokens are short-lived and should not be stored.

        :param next_page_token: The next_page_token of this ListReleasesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def releases(self):
        """Gets the releases of this ListReleasesResponse.

        The list of hashes of files that still need to be uploaded, if any exist.

        :return: The releases of this ListReleasesResponse.
        :rtype: List[Release]
        """
        return self._releases

    @releases.setter
    def releases(self, releases):
        """Sets the releases of this ListReleasesResponse.

        The list of hashes of files that still need to be uploaded, if any exist.

        :param releases: The releases of this ListReleasesResponse.
        :type releases: List[Release]
        """

        self._releases = releases
