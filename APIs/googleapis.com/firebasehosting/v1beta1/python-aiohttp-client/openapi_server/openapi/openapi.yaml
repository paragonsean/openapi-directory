openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Firebase Hosting REST API enables programmatic and customizable
    management and deployments to your Firebase-hosted sites. Use this REST API to
    create and manage channels and sites as well as to deploy new or updated hosting
    configurations and content files.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Firebase Hosting API
  version: v1beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://firebasehosting.googleapis.com/$discovery/rest?version=v1beta1
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: firebasehosting
externalDocs:
  url: https://firebase.google.com/docs/hosting/
servers:
- url: https://firebasehosting.googleapis.com/
tags:
- name: projects
- name: sites
paths:
  /v1beta1/{name}:
    delete:
      description: Deletes the specified version.
      operationId: firebasehosting_sites_versions_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The fully-qualified resource name for the version,\
          \ in the format: sites/SITE_ID/versions/VERSION_ID"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "If true, the request succeeds even if the `CustomDomain` doesn't\
          \ exist."
        explode: true
        in: query
        name: allowMissing
        required: false
        schema:
          type: boolean
        style: form
      - description: "A tag that represents the state of the `CustomDomain` as you\
          \ know it. If present, the supplied tag must match the current value on\
          \ your `CustomDomain`, or the request fails."
        explode: true
        in: query
        name: etag
        required: false
        schema:
          type: string
        style: form
      - description: "If true, Hosting validates that it's possible to complete your\
          \ request but doesn't actually delete the `CustomDomain`."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    get:
      description: Get the specified version that has been created for the specified
        site. This can include versions that were created for the default `live` channel
        or for any active preview channels for the specified site.
      operationId: firebasehosting_sites_versions_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The fully-qualified resource name for the version,\
          \ in the format: sites/SITE_ID/versions/VERSION_ID"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    patch:
      description: " Updates the specified metadata for the specified version. This\
        \ method will fail with `FAILED_PRECONDITION` in the event of an invalid state\
        \ transition. The supported [state](../sites.versions#versionstatus) transitions\
        \ for a version are from `CREATED` to `FINALIZED`. Use [`DeleteVersion`](delete)\
        \ to set the status of a version to `DELETED`."
      operationId: firebasehosting_sites_versions_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The fully-qualified resource name for the version, in the format:\
          \ sites/ SITE_ID/versions/VERSION_ID This name is provided in the response\
          \ body when you call [`CreateVersion`](sites.versions/create)."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "A set of field names from your [version](../sites.versions)\
          \ that you want to update. A field will be overwritten if, and only if,\
          \ it's in the mask. If a mask is not provided then a default mask of only\
          \ [`status`](../sites.versions#Version.FIELDS.status) will be used."
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      - description: "If true, Hosting validates that it's possible to complete your\
          \ request but doesn't actually create or update the `CustomDomain`."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
      x-codegen-request-body-name: body
    put:
      description: "Updates the specified domain mapping, creating the mapping as\
        \ if it does not exist."
      operationId: firebasehosting_sites_domains_update
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the domain association to update or create,\
          \ if an association doesn't already exist."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
      x-codegen-request-body-name: body
  /v1beta1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request.
      operationId: firebasehosting_projects_sites_custom_domains_operations_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation's parent resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The standard list filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The standard list page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: The standard list page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1beta1/{name}:undelete:
    post:
      description: Undeletes the specified `CustomDomain` if it has been soft-deleted.
        Hosting retains soft-deleted custom domains for around 30 days before permanently
        deleting them.
      operationId: firebasehosting_projects_sites_custom_domains_undelete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The name of the `CustomDomain` to delete.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteCustomDomainRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta1/{parent}/channels:
    get:
      description: Lists the channels for the specified site. All sites have a default
        `live` channel.
      operationId: firebasehosting_sites_channels_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The site for which to list channels, in the format:\
          \ sites/SITE_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of channels to return. The service may return\
          \ a lower number if fewer channels exist than this maximum number. If unspecified,\
          \ defaults to 10. The maximum value is 100; values above 100 will be coerced\
          \ to 100."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token from a previous call to `ListChannels` that tells the
          server where to resume listing.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      description: Creates a new channel in the specified site.
      operationId: firebasehosting_sites_channels_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The site in which to create this channel, in the format:\
          \ sites/ SITE_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: Required. Immutable. A unique ID within the site that identifies
          the channel.
        explode: true
        in: query
        name: channelId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
      x-codegen-request-body-name: body
  /v1beta1/{parent}/customDomains:
    get:
      description: "Lists each `CustomDomain` associated with the specified parent\
        \ Hosting site. Returns `CustomDomain`s in a consistent, but undefined, order\
        \ to facilitate pagination."
      operationId: firebasehosting_projects_sites_custom_domains_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. The Firebase Hosting `Site` with `CustomDomain` entities
          you'd like to list.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The max number of `CustomDomain` entities to return in a request.
          Defaults to 10.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token from a previous call to `ListCustomDomains` that tells
          the server where to resume listing.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "If true, the request returns soft-deleted `CustomDomain`s that\
          \ haven't been fully-deleted yet. To restore deleted `CustomDomain`s, make\
          \ an `UndeleteCustomDomain` request."
        explode: true
        in: query
        name: showDeleted
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomDomainsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Creates a `CustomDomain`.
      operationId: firebasehosting_projects_sites_custom_domains_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The custom domain's parent, specifically a Firebase\
          \ Hosting `Site`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. The ID of the `CustomDomain`, which is the domain\
          \ name you'd like to use with Firebase Hosting."
        explode: true
        in: query
        name: customDomainId
        required: false
        schema:
          type: string
        style: form
      - description: "If true, Hosting validates that it's possible to complete your\
          \ request but doesn't actually create a new `CustomDomain`."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDomain'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta1/{parent}/domains:
    get:
      description: Lists the domains for the specified site.
      operationId: firebasehosting_sites_domains_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent for which to list domains, in the format:\
          \ sites/ site-name"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The page size to return. Defaults to 50.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The next_page_token from a previous request, if provided."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      description: Creates a domain mapping on the specified site.
      operationId: firebasehosting_sites_domains_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The parent to create the domain association for, in\
          \ the format: sites/site-name"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
      x-codegen-request-body-name: body
  /v1beta1/{parent}/files:
    get:
      description: Lists the remaining files to be uploaded for the specified version.
      operationId: firebasehosting_sites_versions_files_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The version for which to list files, in the format:\
          \ sites/SITE_ID /versions/VERSION_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of version files to return. The service may\
          \ return a lower number if fewer version files exist than this maximum number.\
          \ If unspecified, defaults to 1000."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token from a previous call to `ListVersionFiles` that tells
          the server where to resume listing.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: ' The type of files that should be listed for the specified version.'
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - STATUS_UNSPECIFIED
          - EXPECTED
          - ACTIVE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionFilesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
  /v1beta1/{parent}/releases:
    get:
      description: "Lists the releases that have been created for the specified site\
        \ or channel. When used to list releases for a site, this list includes releases\
        \ for both the default `live` channel and any active preview channels for\
        \ the specified site."
      operationId: firebasehosting_sites_releases_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The site or channel for which to list releases, in\
          \ either of the following formats: - sites/SITE_ID - sites/SITE_ID/channels/CHANNEL_ID "
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of releases to return. The service may return\
          \ a lower number if fewer releases exist than this maximum number. If unspecified,\
          \ defaults to 100."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token from a previous call to `releases.list` or `channels.releases.list`
          that tells the server where to resume listing.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      description: "Creates a new release, which makes the content of the specified\
        \ version actively display on the appropriate URL(s)."
      operationId: firebasehosting_sites_releases_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The site or channel to which the release belongs,\
          \ in either of the following formats: - sites/SITE_ID - sites/SITE_ID/channels/CHANNEL_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: " The unique identifier for a version, in the format: sites/SITE_ID/versions/\
          \ VERSION_ID The SITE_ID in this version identifier must match the SITE_ID\
          \ in the `parent` parameter. This query parameter must be empty if the `type`\
          \ field in the request body is `SITE_DISABLE`."
        explode: true
        in: query
        name: versionName
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
      x-codegen-request-body-name: body
  /v1beta1/{parent}/sites:
    get:
      description: Lists each Hosting Site associated with the specified parent Firebase
        project.
      operationId: firebasehosting_projects_sites_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The Firebase project for which to list sites, in the\
          \ format: projects/PROJECT_IDENTIFIER Refer to the `Site` [`name`](../projects#Site.FIELDS.name)\
          \ field for details about PROJECT_IDENTIFIER values."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional. The maximum number of sites to return. The service\
          \ may return a lower number if fewer sites exist than this maximum number.\
          \ If unspecified, defaults to 40."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Optional. A token from a previous call to `ListSites` that tells
          the server where to resume listing.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSitesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Creates a new Hosting Site in the specified parent Firebase project.
        Note that Hosting sites can take several minutes to propagate through Firebase
        systems.
      operationId: firebasehosting_projects_sites_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The Firebase project in which to create a Hosting\
          \ site, in the format: projects/PROJECT_IDENTIFIER Refer to the `Site` [`name`](../projects#Site.FIELDS.name)\
          \ field for details about PROJECT_IDENTIFIER values."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. Immutable. A globally unique identifier for the Hosting\
          \ site. This identifier is used to construct the Firebase-provisioned subdomains\
          \ for the site, so it must also be a valid domain name label."
        explode: true
        in: query
        name: siteId
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. If set, validates that the site_id is available and\
          \ that the request would succeed, returning the expected resulting site\
          \ or error."
        explode: true
        in: query
        name: validateOnly
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1beta1/{parent}/versions:
    get:
      description: Lists the versions that have been created for the specified site.
        This list includes versions for both the default `live` channel and any active
        preview channels for the specified site.
      operationId: firebasehosting_sites_versions_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The site or channel for which to list versions, in\
          \ either of the following formats: - sites/SITE_ID - sites/SITE_ID/channels/CHANNEL_ID "
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "A filter string used to return a subset of versions in the response.\
          \ The currently supported fields for filtering are: `name`, `status`, and\
          \ `create_time`. Learn more about filtering in Google's [AIP 160 standard](https://google.aip.dev/160)."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of versions to return. The service may return\
          \ a lower number if fewer versions exist than this maximum number. If unspecified,\
          \ defaults to 25. The maximum value is 100; values above 100 will be coerced\
          \ to 100."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A token from a previous call to `ListVersions` that tells the
          server where to resume listing.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform.read-only
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform.read-only
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      - Oauth2:
        - https://www.googleapis.com/auth/firebase.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/firebase.readonly
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
    post:
      description: Creates a new version for the specified site.
      operationId: firebasehosting_sites_versions_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The site in which to create the version, in the format:\
          \ sites/ SITE_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: The self-reported size of the version. This value is used for
          a pre-emptive quota check for legacy version uploads.
        explode: true
        in: query
        name: sizeBytes
        required: false
        schema:
          type: string
        style: form
      - description: "A unique id for the new version. This is was only specified\
          \ for legacy version creations, and should be blank."
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
      x-codegen-request-body-name: body
  /v1beta1/{parent}/versions:clone:
    post:
      description: Creates a new version on the specified target site using the content
        of the specified version.
      operationId: firebasehosting_sites_versions_clone
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The target site for the cloned version, in the format:\
          \ sites/ SITE_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneVersionRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
      x-codegen-request-body-name: body
  /v1beta1/{parent}:populateFiles:
    post:
      description: ' Adds content files to the specified version. Each file must be
        under 2 GB.'
      operationId: firebasehosting_sites_versions_populate_files
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The version to which to add files, in the format:\
          \ sites/SITE_ID /versions/VERSION_ID"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopulateVersionFilesRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulateVersionFilesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/firebase
        Oauth2c:
        - https://www.googleapis.com/auth/firebase
      tags:
      - sites
      x-openapi-router-controller: openapi_server.controllers.sites_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    ActingUser:
      description: "Contains metadata about the user who performed an action, such\
        \ as creating a release or finalizing a version."
      example:
        imageUrl: imageUrl
        email: email
      properties:
        email:
          description: The email address of the user when the user performed the action.
          title: email
          type: string
        imageUrl:
          description: A profile image URL for the user. May not be present if the
            user has changed their email address or deleted their account.
          title: imageUrl
          type: string
      title: ActingUser
      type: object
    CertDnsChallenge:
      description: Represents a DNS certificate challenge.
      example:
        domainName: domainName
        token: token
      properties:
        domainName:
          description: The domain name upon which the DNS challenge must be satisfied.
          title: domainName
          type: string
        token:
          description: The value that must be present as a TXT record on the domain
            name to satisfy the challenge.
          title: token
          type: string
      title: CertDnsChallenge
      type: object
    CertHttpChallenge:
      description: Represents an HTTP certificate challenge.
      example:
        path: path
        token: token
      properties:
        path:
          description: The URL path on which to serve the specified token to satisfy
            the certificate challenge.
          title: path
          type: string
        token:
          description: The token to serve at the specified URL path to satisfy the
            certificate challenge.
          title: token
          type: string
      title: CertHttpChallenge
      type: object
    CertVerification:
      description: A set of ACME challenges you can use to allow Hosting to create
        an SSL certificate for your domain name before directing traffic to Hosting
        servers. Use either the DNS or HTTP challenge; it's not necessary to provide
        both.
      example:
        dns:
          discovered:
          - records:
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            domainName: domainName
            checkError:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
          - records:
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            domainName: domainName
            checkError:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
          checkTime: checkTime
          desired:
          - records:
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            domainName: domainName
            checkError:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
          - records:
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            domainName: domainName
            checkError:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
        http:
          path: path
          discovered: discovered
          lastCheckTime: lastCheckTime
          desired: desired
          checkError:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
      properties:
        dns:
          $ref: '#/components/schemas/DnsUpdates'
        http:
          $ref: '#/components/schemas/HttpUpdate'
      title: CertVerification
      type: object
    Certificate:
      description: "An SSL certificate used to provide end-to-end encryption for requests\
        \ against your domain name. A `Certificate` can be an actual SSL certificate\
        \ or, for newly-created custom domains, Hosting's intent to create one."
      example:
        expireTime: expireTime
        createTime: createTime
        state: CERT_STATE_UNSPECIFIED
        type: TYPE_UNSPECIFIED
        issues:
        - code: 0
          details:
          - key: ""
          - key: ""
          message: message
        - code: 0
          details:
          - key: ""
          - key: ""
          message: message
        verification:
          dns:
            discovered:
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
            checkTime: checkTime
            desired:
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
          http:
            path: path
            discovered: discovered
            lastCheckTime: lastCheckTime
            desired: desired
            checkError:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
      properties:
        createTime:
          description: "Output only. The certificate's creation time. For `TEMPORARY`\
            \ certs this is the time Hosting first generated challenges for your domain\
            \ name. For all other cert types, it's the time the actual cert was created."
          format: google-datetime
          readOnly: true
          title: createTime
          type: string
        expireTime:
          description: "Output only. The certificate's expiration time. After this\
            \ time, the cert can no longer be used to provide secure communication\
            \ between Hosting and your site's visitors."
          format: google-datetime
          readOnly: true
          title: expireTime
          type: string
        issues:
          description: Output only. A set of errors Hosting encountered when attempting
            to create a cert for your domain name. Resolve these issues to ensure
            Hosting is able to provide secure communication with your site's visitors.
          items:
            $ref: '#/components/schemas/Status'
          readOnly: true
          title: issues
          type: array
        state:
          description: "Output only. The state of the certificate. Only the `CERT_ACTIVE`\
            \ and `CERT_EXPIRING_SOON` states provide SSL coverage for a domain name.\
            \ If the state is `PROPAGATING` and Hosting had an active cert for the\
            \ domain name before, that formerly-active cert provides SSL coverage\
            \ for the domain name until the current cert propagates."
          enum:
          - CERT_STATE_UNSPECIFIED
          - CERT_PREPARING
          - CERT_VALIDATING
          - CERT_PROPAGATING
          - CERT_ACTIVE
          - CERT_EXPIRING_SOON
          - CERT_EXPIRED
          readOnly: true
          title: state
          type: string
        type:
          description: Output only. The certificate's type.
          enum:
          - TYPE_UNSPECIFIED
          - TEMPORARY
          - GROUPED
          - PROJECT_GROUPED
          - DEDICATED
          readOnly: true
          title: type
          type: string
        verification:
          $ref: '#/components/schemas/CertVerification'
      title: Certificate
      type: object
    Channel:
      description: A `Channel` represents a stream of releases for a site. All sites
        have a default `live` channel that serves content to the Firebase-provided
        subdomains and any connected custom domains.
      example:
        expireTime: expireTime
        createTime: createTime
        release:
          releaseTime: releaseTime
          name: name
          releaseUser:
            imageUrl: imageUrl
            email: email
          message: message
          type: TYPE_UNSPECIFIED
          version:
            createTime: createTime
            deleteTime: deleteTime
            deleteUser:
              imageUrl: imageUrl
              email: email
            name: name
            createUser:
              imageUrl: imageUrl
              email: email
            finalizeUser:
              imageUrl: imageUrl
              email: email
            config:
              headers:
              - headers:
                  key: headers
                regex: regex
                glob: glob
              - headers:
                  key: headers
                regex: regex
                glob: glob
              rewrites:
              - functionRegion: functionRegion
                path: path
                dynamicLinks: true
                regex: regex
                function: function
                glob: glob
                run:
                  tag: tag
                  region: region
                  serviceId: serviceId
              - functionRegion: functionRegion
                path: path
                dynamicLinks: true
                regex: regex
                function: function
                glob: glob
                run:
                  tag: tag
                  region: region
                  serviceId: serviceId
              redirects:
              - regex: regex
                glob: glob
                location: location
                statusCode: 0
              - regex: regex
                glob: glob
                location: location
                statusCode: 0
              appAssociation: AUTO
              cleanUrls: true
              trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
              i18n:
                root: root
            fileCount: fileCount
            finalizeTime: finalizeTime
            versionBytes: versionBytes
            labels:
              key: labels
            status: VERSION_STATUS_UNSPECIFIED
        name: name
        retainedReleaseCount: 0
        updateTime: updateTime
        ttl: ttl
        url: url
        labels:
          key: labels
      properties:
        createTime:
          description: Output only. The time at which the channel was created.
          format: google-datetime
          readOnly: true
          title: createTime
          type: string
        expireTime:
          description: "The time at which the channel will be automatically deleted.\
            \ If null, the channel will not be automatically deleted. This field is\
            \ present in the output whether it's set directly or via the `ttl` field."
          format: google-datetime
          title: expireTime
          type: string
        labels:
          additionalProperties:
            type: string
          description: Text labels used for extra metadata and/or filtering.
          title: labels
          type: object
        name:
          description: "The fully-qualified resource name for the channel, in the\
            \ format: sites/ SITE_ID/channels/CHANNEL_ID"
          title: name
          type: string
        release:
          $ref: '#/components/schemas/Release'
        retainedReleaseCount:
          description: The number of previous releases to retain on the channel for
            rollback or other purposes. Must be a number between 1-100. Defaults to
            10 for new channels.
          format: int32
          title: retainedReleaseCount
          type: integer
        ttl:
          description: Input only. A time-to-live for this channel. Sets `expire_time`
            to the provided duration past the time of the request.
          format: google-duration
          title: ttl
          type: string
        updateTime:
          description: Output only. The time at which the channel was last updated.
          format: google-datetime
          readOnly: true
          title: updateTime
          type: string
        url:
          description: "Output only. The URL at which the content of this channel's\
            \ current release can be viewed. This URL is a Firebase-provided subdomain\
            \ of `web.app`. The content of this channel's current release can also\
            \ be viewed at the Firebase-provided subdomain of `firebaseapp.com`. If\
            \ this channel is the `live` channel for the Hosting site, then the content\
            \ of this channel's current release can also be viewed at any connected\
            \ custom domains."
          readOnly: true
          title: url
          type: string
      title: Channel
      type: object
    CloneVersionRequest:
      example:
        include:
          regexes:
          - regexes
          - regexes
        sourceVersion: sourceVersion
        exclude:
          regexes:
          - regexes
          - regexes
        finalize: true
      properties:
        exclude:
          $ref: '#/components/schemas/PathFilter'
        finalize:
          description: "If true, the call to `CloneVersion` immediately finalizes\
            \ the version after cloning is complete. If false, the cloned version\
            \ will have a status of `CREATED`. Use [`UpdateVersion`](patch) to set\
            \ the status of the version to `FINALIZED`."
          title: finalize
          type: boolean
        include:
          $ref: '#/components/schemas/PathFilter'
        sourceVersion:
          description: "Required. The unique identifier for the version to be cloned,\
            \ in the format: sites/SITE_ID/versions/VERSION_ID"
          title: sourceVersion
          type: string
      title: CloneVersionRequest
      type: object
    CloudRunRewrite:
      description: "A configured rewrite that directs requests to a Cloud Run service.\
        \ If the Cloud Run service does not exist when setting or updating your Firebase\
        \ Hosting configuration, then the request fails. Any errors from the Cloud\
        \ Run service are passed to the end user (for example, if you delete a service,\
        \ any requests directed to that service receive a `404` error)."
      example:
        tag: tag
        region: region
        serviceId: serviceId
      properties:
        region:
          description: Optional. User-provided region where the Cloud Run service
            is hosted. Defaults to `us-central1` if not supplied.
          title: region
          type: string
        serviceId:
          description: Required. User-defined ID of the Cloud Run service.
          title: serviceId
          type: string
        tag:
          description: "Optional. User-provided TrafficConfig tag to send traffic\
            \ to. When omitted, traffic is sent to the service-wide URI"
          title: tag
          type: string
      title: CloudRunRewrite
      type: object
    CustomDomain:
      description: A `CustomDomain` is an entity that links a domain name to a Firebase
        Hosting site. Add a `CustomDomain` to your site to allow Hosting to serve
        the site's content in response to requests against your domain name.
      example:
        ownershipState: OWNERSHIP_STATE_UNSPECIFIED
        annotations:
          key: annotations
        reconciling: true
        cert:
          expireTime: expireTime
          createTime: createTime
          state: CERT_STATE_UNSPECIFIED
          type: TYPE_UNSPECIFIED
          issues:
          - code: 0
            details:
            - key: ""
            - key: ""
            message: message
          - code: 0
            details:
            - key: ""
            - key: ""
            message: message
          verification:
            dns:
              discovered:
              - records:
                - domainName: domainName
                  rdata: rdata
                  type: TYPE_UNSPECIFIED
                  requiredAction: NONE
                - domainName: domainName
                  rdata: rdata
                  type: TYPE_UNSPECIFIED
                  requiredAction: NONE
                domainName: domainName
                checkError:
                  code: 0
                  details:
                  - key: ""
                  - key: ""
                  message: message
              - records:
                - domainName: domainName
                  rdata: rdata
                  type: TYPE_UNSPECIFIED
                  requiredAction: NONE
                - domainName: domainName
                  rdata: rdata
                  type: TYPE_UNSPECIFIED
                  requiredAction: NONE
                domainName: domainName
                checkError:
                  code: 0
                  details:
                  - key: ""
                  - key: ""
                  message: message
              checkTime: checkTime
              desired:
              - records:
                - domainName: domainName
                  rdata: rdata
                  type: TYPE_UNSPECIFIED
                  requiredAction: NONE
                - domainName: domainName
                  rdata: rdata
                  type: TYPE_UNSPECIFIED
                  requiredAction: NONE
                domainName: domainName
                checkError:
                  code: 0
                  details:
                  - key: ""
                  - key: ""
                  message: message
              - records:
                - domainName: domainName
                  rdata: rdata
                  type: TYPE_UNSPECIFIED
                  requiredAction: NONE
                - domainName: domainName
                  rdata: rdata
                  type: TYPE_UNSPECIFIED
                  requiredAction: NONE
                domainName: domainName
                checkError:
                  code: 0
                  details:
                  - key: ""
                  - key: ""
                  message: message
            http:
              path: path
              discovered: discovered
              lastCheckTime: lastCheckTime
              desired: desired
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
        updateTime: updateTime
        redirectTarget: redirectTarget
        issues:
        - code: 0
          details:
          - key: ""
          - key: ""
          message: message
        - code: 0
          details:
          - key: ""
          - key: ""
          message: message
        labels:
          key: labels
        requiredDnsUpdates:
          discovered:
          - records:
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            domainName: domainName
            checkError:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
          - records:
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            domainName: domainName
            checkError:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
          checkTime: checkTime
          desired:
          - records:
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            domainName: domainName
            checkError:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
          - records:
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            - domainName: domainName
              rdata: rdata
              type: TYPE_UNSPECIFIED
              requiredAction: NONE
            domainName: domainName
            checkError:
              code: 0
              details:
              - key: ""
              - key: ""
              message: message
        expireTime: expireTime
        createTime: createTime
        deleteTime: deleteTime
        name: name
        etag: etag
        certPreference: TYPE_UNSPECIFIED
        hostState: HOST_STATE_UNSPECIFIED
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Annotations you can add to leave both human- and machine-readable
            metadata about your `CustomDomain`.
          title: annotations
          type: object
        cert:
          $ref: '#/components/schemas/Certificate'
        certPreference:
          description: "A field that lets you specify which SSL certificate type Hosting\
            \ creates for your domain name. Spark plan custom domains only have access\
            \ to the `GROUPED` cert type, while Blaze plan domains can select any\
            \ option."
          enum:
          - TYPE_UNSPECIFIED
          - TEMPORARY
          - GROUPED
          - PROJECT_GROUPED
          - DEDICATED
          title: certPreference
          type: string
        createTime:
          description: Output only. The custom domain's create time.
          format: google-datetime
          readOnly: true
          title: createTime
          type: string
        deleteTime:
          description: "Output only. The time the `CustomDomain` was deleted; null\
            \ for custom domains that haven't been deleted. Deleted custom domains\
            \ persist for approximately 30 days, after which time Hosting removes\
            \ them completely. To restore a deleted custom domain, make an `UndeleteCustomDomain`\
            \ request."
          format: google-datetime
          readOnly: true
          title: deleteTime
          type: string
        etag:
          description: "Output only. A string that represents the current state of\
            \ the `CustomDomain` and allows you to confirm its initial state in requests\
            \ that would modify it. Use the tag to ensure consistency when making\
            \ `UpdateCustomDomain`, `DeleteCustomDomain`, and `UndeleteCustomDomain`\
            \ requests."
          readOnly: true
          title: etag
          type: string
        expireTime:
          description: Output only. The minimum time before a soft-deleted `CustomDomain`
            is completely removed from Hosting; null for custom domains that haven't
            been deleted.
          format: google-datetime
          readOnly: true
          title: expireTime
          type: string
        hostState:
          description: Output only. The `HostState` of the domain name this `CustomDomain`
            refers to.
          enum:
          - HOST_STATE_UNSPECIFIED
          - HOST_UNHOSTED
          - HOST_UNREACHABLE
          - HOST_MISMATCH
          - HOST_CONFLICT
          - HOST_ACTIVE
          readOnly: true
          title: hostState
          type: string
        issues:
          description: Output only. A set of errors Hosting systems encountered when
            trying to establish Hosting's ability to serve secure content for your
            domain name. Resolve these issues to ensure your `CustomDomain` behaves
            properly.
          items:
            $ref: '#/components/schemas/Status'
          readOnly: true
          title: issues
          type: array
        labels:
          additionalProperties:
            type: string
          description: Labels used for extra metadata and/or filtering.
          title: labels
          type: object
        name:
          description: Output only. The fully-qualified name of the `CustomDomain`.
          readOnly: true
          title: name
          type: string
        ownershipState:
          description: Output only. The `OwnershipState` of the domain name this `CustomDomain`
            refers to.
          enum:
          - OWNERSHIP_STATE_UNSPECIFIED
          - OWNERSHIP_MISSING
          - OWNERSHIP_UNREACHABLE
          - OWNERSHIP_MISMATCH
          - OWNERSHIP_CONFLICT
          - OWNERSHIP_PENDING
          - OWNERSHIP_ACTIVE
          readOnly: true
          title: ownershipState
          type: string
        reconciling:
          description: "Output only. A field that, if true, indicates that Hosting's\
            \ systems are attmepting to make the custom domain's state match your\
            \ preferred state. This is most frequently `true` when initially provisioning\
            \ a `CustomDomain` after a `CreateCustomDomain` request or when creating\
            \ a new SSL certificate to match an updated `cert_preference` after an\
            \ `UpdateCustomDomain` request."
          readOnly: true
          title: reconciling
          type: boolean
        redirectTarget:
          description: "A domain name that this `CustomDomain` should direct traffic\
            \ towards. If specified, Hosting will respond to requests against this\
            \ custom domain with an HTTP 301 code, and route traffic to the specified\
            \ `redirect_target` instead."
          title: redirectTarget
          type: string
        requiredDnsUpdates:
          $ref: '#/components/schemas/DnsUpdates'
        updateTime:
          description: Output only. The last time the `CustomDomain` was updated.
          format: google-datetime
          readOnly: true
          title: updateTime
          type: string
      title: CustomDomain
      type: object
    CustomDomainMetadata:
      description: Metadata associated with a`CustomDomain` operation.
      properties:
        certState:
          description: The `CertState` of the domain name's SSL certificate.
          enum:
          - CERT_STATE_UNSPECIFIED
          - CERT_PREPARING
          - CERT_VALIDATING
          - CERT_PROPAGATING
          - CERT_ACTIVE
          - CERT_EXPIRING_SOON
          - CERT_EXPIRED
          type: string
        hostState:
          description: The `HostState` of the domain name this `CustomDomain` refers
            to.
          enum:
          - HOST_STATE_UNSPECIFIED
          - HOST_UNHOSTED
          - HOST_UNREACHABLE
          - HOST_MISMATCH
          - HOST_CONFLICT
          - HOST_ACTIVE
          type: string
        issues:
          description: A list of issues that are currently preventing Hosting from
            completing the operation. These are generally DNS-related issues that
            Hosting encounters when querying a domain name's records or attempting
            to mint an SSL certificate.
          items:
            $ref: '#/components/schemas/Status'
          type: array
        liveMigrationSteps:
          description: "A set of DNS record updates and ACME challenges that allow\
            \ you to transition domain names to Firebase Hosting with zero downtime.\
            \ These updates allow Hosting to create an SSL certificate and establish\
            \ ownership for your custom domain before Hosting begins serving traffic\
            \ on it. If your domain name is already in active use with another provider,\
            \ add one of the challenges and make the recommended DNS updates. After\
            \ adding challenges and adjusting DNS records as necessary, wait for the\
            \ `ownershipState` to be `OWNERSHIP_ACTIVE` and the `certState` to be\
            \ `CERT_ACTIVE` before sending traffic to Hosting."
          items:
            $ref: '#/components/schemas/LiveMigrationStep'
          type: array
        ownershipState:
          description: The `OwnershipState` of the domain name this `CustomDomain`
            refers to.
          enum:
          - OWNERSHIP_STATE_UNSPECIFIED
          - OWNERSHIP_MISSING
          - OWNERSHIP_UNREACHABLE
          - OWNERSHIP_MISMATCH
          - OWNERSHIP_CONFLICT
          - OWNERSHIP_PENDING
          - OWNERSHIP_ACTIVE
          type: string
        quickSetupUpdates:
          $ref: '#/components/schemas/DnsUpdates'
      type: object
    DnsRecord:
      description: "DNS records are resource records that define how systems and services\
        \ should behave when handling requests for a domain name. For example, when\
        \ you add `A` records to your domain name's DNS records, you're informing\
        \ other systems (such as your users' web browsers) to contact those IPv4 addresses\
        \ to retrieve resources relevant to your domain name (such as your Hosting\
        \ site files)."
      example:
        domainName: domainName
        rdata: rdata
        type: TYPE_UNSPECIFIED
        requiredAction: NONE
      properties:
        domainName:
          description: "Output only. The domain name the record pertains to, e.g.\
            \ `foo.bar.com.`."
          readOnly: true
          title: domainName
          type: string
        rdata:
          description: "Output only. The data of the record. The meaning of the value\
            \ depends on record type: - A and AAAA: IP addresses for the domain name.\
            \ - CNAME: Another domain to check for records. - TXT: Arbitrary text\
            \ strings associated with the domain name. Hosting uses TXT records to\
            \ determine which Firebase projects have permission to act on the domain\
            \ name's behalf. - CAA: The record's flags, tag, and value, e.g. `0 issue\
            \ \"pki.goog\"`."
          readOnly: true
          title: rdata
          type: string
        requiredAction:
          description: Output only. An enum that indicates the a required action for
            this record.
          enum:
          - NONE
          - ADD
          - REMOVE
          readOnly: true
          title: requiredAction
          type: string
        type:
          description: "Output only. The record's type, which determines what data\
            \ the record contains."
          enum:
          - TYPE_UNSPECIFIED
          - A
          - CNAME
          - TXT
          - AAAA
          - CAA
          readOnly: true
          title: type
          type: string
      title: DnsRecord
      type: object
    DnsRecordSet:
      description: A set of DNS records relevant to the setup and maintenance of a
        custom domain in Firebase Hosting.
      example:
        records:
        - domainName: domainName
          rdata: rdata
          type: TYPE_UNSPECIFIED
          requiredAction: NONE
        - domainName: domainName
          rdata: rdata
          type: TYPE_UNSPECIFIED
          requiredAction: NONE
        domainName: domainName
        checkError:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
      properties:
        checkError:
          $ref: '#/components/schemas/Status'
        domainName:
          description: Output only. The domain name the record set pertains to.
          readOnly: true
          title: domainName
          type: string
        records:
          description: Output only. Records on the domain.
          items:
            $ref: '#/components/schemas/DnsRecord'
          readOnly: true
          title: records
          type: array
      title: DnsRecordSet
      type: object
    DnsUpdates:
      description: "A set of DNS record updates that you should make to allow Hosting\
        \ to serve secure content in response to requests against your domain name.\
        \ These updates present the current state of your domain name's DNS records\
        \ when Hosting last queried them, and the desired set of records that Hosting\
        \ needs to see before your custom domain can be fully active."
      example:
        discovered:
        - records:
          - domainName: domainName
            rdata: rdata
            type: TYPE_UNSPECIFIED
            requiredAction: NONE
          - domainName: domainName
            rdata: rdata
            type: TYPE_UNSPECIFIED
            requiredAction: NONE
          domainName: domainName
          checkError:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
        - records:
          - domainName: domainName
            rdata: rdata
            type: TYPE_UNSPECIFIED
            requiredAction: NONE
          - domainName: domainName
            rdata: rdata
            type: TYPE_UNSPECIFIED
            requiredAction: NONE
          domainName: domainName
          checkError:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
        checkTime: checkTime
        desired:
        - records:
          - domainName: domainName
            rdata: rdata
            type: TYPE_UNSPECIFIED
            requiredAction: NONE
          - domainName: domainName
            rdata: rdata
            type: TYPE_UNSPECIFIED
            requiredAction: NONE
          domainName: domainName
          checkError:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
        - records:
          - domainName: domainName
            rdata: rdata
            type: TYPE_UNSPECIFIED
            requiredAction: NONE
          - domainName: domainName
            rdata: rdata
            type: TYPE_UNSPECIFIED
            requiredAction: NONE
          domainName: domainName
          checkError:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
      properties:
        checkTime:
          description: The last time Hosting checked your custom domain's DNS records.
          format: google-datetime
          title: checkTime
          type: string
        desired:
          description: The set of DNS records Hosting needs to serve secure content
            on the domain.
          items:
            $ref: '#/components/schemas/DnsRecordSet'
          title: desired
          type: array
        discovered:
          description: The set of DNS records Hosting discovered when inspecting a
            domain.
          items:
            $ref: '#/components/schemas/DnsRecordSet'
          title: discovered
          type: array
      title: DnsUpdates
      type: object
    Domain:
      description: The intended behavior and status information of a domain.
      example:
        site: site
        domainName: domainName
        provisioning:
          dnsStatus: DNS_STATUS_UNSPECIFIED
          certChallengeDns:
            domainName: domainName
            token: token
          expectedIps:
          - expectedIps
          - expectedIps
          certChallengeHttp:
            path: path
            token: token
          certStatus: CERT_STATUS_UNSPECIFIED
          discoveredIps:
          - discoveredIps
          - discoveredIps
          dnsFetchTime: dnsFetchTime
          certChallengeDiscoveredTxt:
          - certChallengeDiscoveredTxt
          - certChallengeDiscoveredTxt
        updateTime: updateTime
        domainRedirect:
          domainName: domainName
          type: REDIRECT_TYPE_UNSPECIFIED
        status: DOMAIN_STATUS_UNSPECIFIED
      properties:
        domainName:
          description: Required. The domain name of the association.
          title: domainName
          type: string
        domainRedirect:
          $ref: '#/components/schemas/DomainRedirect'
        provisioning:
          $ref: '#/components/schemas/DomainProvisioning'
        site:
          description: Required. The site name of the association.
          title: site
          type: string
        status:
          description: Output only. Additional status of the domain association.
          enum:
          - DOMAIN_STATUS_UNSPECIFIED
          - DOMAIN_CHANGE_PENDING
          - DOMAIN_ACTIVE
          - DOMAIN_VERIFICATION_REQUIRED
          - DOMAIN_VERIFICATION_LOST
          title: status
          type: string
          x-enumDeprecated:
          - false
          - true
          - false
          - false
          - false
        updateTime:
          description: Output only. The time at which the domain was last updated.
          format: google-datetime
          title: updateTime
          type: string
      title: Domain
      type: object
    DomainProvisioning:
      description: The current certificate provisioning status information for a domain.
      example:
        dnsStatus: DNS_STATUS_UNSPECIFIED
        certChallengeDns:
          domainName: domainName
          token: token
        expectedIps:
        - expectedIps
        - expectedIps
        certChallengeHttp:
          path: path
          token: token
        certStatus: CERT_STATUS_UNSPECIFIED
        discoveredIps:
        - discoveredIps
        - discoveredIps
        dnsFetchTime: dnsFetchTime
        certChallengeDiscoveredTxt:
        - certChallengeDiscoveredTxt
        - certChallengeDiscoveredTxt
      properties:
        certChallengeDiscoveredTxt:
          description: The TXT records (for the certificate challenge) that were found
            at the last DNS fetch.
          items:
            type: string
          title: certChallengeDiscoveredTxt
          type: array
        certChallengeDns:
          $ref: '#/components/schemas/CertDnsChallenge'
        certChallengeHttp:
          $ref: '#/components/schemas/CertHttpChallenge'
        certStatus:
          description: The certificate provisioning status; updated when Firebase
            Hosting provisions an SSL certificate for the domain.
          enum:
          - CERT_STATUS_UNSPECIFIED
          - CERT_PENDING
          - CERT_MISSING
          - CERT_PROCESSING
          - CERT_PROPAGATING
          - CERT_ACTIVE
          - CERT_ERROR
          title: certStatus
          type: string
        discoveredIps:
          description: The IPs found at the last DNS fetch.
          items:
            type: string
          title: discoveredIps
          type: array
        dnsFetchTime:
          description: The time at which the last DNS fetch occurred.
          format: google-datetime
          title: dnsFetchTime
          type: string
        dnsStatus:
          description: The DNS record match status as of the last DNS fetch.
          enum:
          - DNS_STATUS_UNSPECIFIED
          - DNS_PENDING
          - DNS_MISSING
          - DNS_PARTIAL_MATCH
          - DNS_MATCH
          - DNS_EXTRANEOUS_MATCH
          title: dnsStatus
          type: string
        expectedIps:
          description: The list of IPs to which the domain is expected to resolve.
          items:
            type: string
          title: expectedIps
          type: array
      title: DomainProvisioning
      type: object
    DomainRedirect:
      description: Defines the behavior of a domain-level redirect. Domain redirects
        preserve the path of the redirect but replace the requested domain with the
        one specified in the redirect configuration.
      example:
        domainName: domainName
        type: REDIRECT_TYPE_UNSPECIFIED
      properties:
        domainName:
          description: Required. The domain name to redirect to.
          title: domainName
          type: string
        type:
          description: Required. The redirect status code.
          enum:
          - REDIRECT_TYPE_UNSPECIFIED
          - MOVED_PERMANENTLY
          title: type
          type: string
      title: DomainRedirect
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Header:
      description: "A [`Header`](https://firebase.google.com/docs/hosting/full-config#headers)\
        \ specifies a URL pattern that, if matched to the request URL path, triggers\
        \ Hosting to apply the specified custom response headers."
      example:
        headers:
          key: headers
        regex: regex
        glob: glob
      properties:
        glob:
          description: "The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching)\
            \ to match against the request URL path."
          title: glob
          type: string
        headers:
          additionalProperties:
            type: string
          description: Required. The additional headers to add to the response.
          title: headers
          type: object
        regex:
          description: The user-supplied RE2 regular expression to match against the
            request URL path.
          title: regex
          type: string
      title: Header
      type: object
    HttpUpdate:
      description: "A file you can add to your existing, non-Hosting hosting service\
        \ that confirms your intent to allow Hosting's Certificate Authorities to\
        \ create an SSL certificate for your domain."
      example:
        path: path
        discovered: discovered
        lastCheckTime: lastCheckTime
        desired: desired
        checkError:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
      properties:
        checkError:
          $ref: '#/components/schemas/Status'
        desired:
          description: Output only. A text string to serve at the path.
          readOnly: true
          title: desired
          type: string
        discovered:
          description: Output only. Whether Hosting was able to find the required
            file contents on the specified path during its last check.
          readOnly: true
          title: discovered
          type: string
        lastCheckTime:
          description: Output only. The last time Hosting systems checked for the
            file contents.
          format: google-datetime
          readOnly: true
          title: lastCheckTime
          type: string
        path:
          description: Output only. The path to the file.
          readOnly: true
          title: path
          type: string
      title: HttpUpdate
      type: object
    I18nConfig:
      description: "If provided, i18n rewrites are enabled."
      example:
        root: root
      properties:
        root:
          description: Required. The user-supplied path where country and language
            specific content will be looked for within the public directory.
          title: root
          type: string
      title: I18nConfig
      type: object
    ListChannelsResponse:
      example:
        channels:
        - expireTime: expireTime
          createTime: createTime
          release:
            releaseTime: releaseTime
            name: name
            releaseUser:
              imageUrl: imageUrl
              email: email
            message: message
            type: TYPE_UNSPECIFIED
            version:
              createTime: createTime
              deleteTime: deleteTime
              deleteUser:
                imageUrl: imageUrl
                email: email
              name: name
              createUser:
                imageUrl: imageUrl
                email: email
              finalizeUser:
                imageUrl: imageUrl
                email: email
              config:
                headers:
                - headers:
                    key: headers
                  regex: regex
                  glob: glob
                - headers:
                    key: headers
                  regex: regex
                  glob: glob
                rewrites:
                - functionRegion: functionRegion
                  path: path
                  dynamicLinks: true
                  regex: regex
                  function: function
                  glob: glob
                  run:
                    tag: tag
                    region: region
                    serviceId: serviceId
                - functionRegion: functionRegion
                  path: path
                  dynamicLinks: true
                  regex: regex
                  function: function
                  glob: glob
                  run:
                    tag: tag
                    region: region
                    serviceId: serviceId
                redirects:
                - regex: regex
                  glob: glob
                  location: location
                  statusCode: 0
                - regex: regex
                  glob: glob
                  location: location
                  statusCode: 0
                appAssociation: AUTO
                cleanUrls: true
                trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
                i18n:
                  root: root
              fileCount: fileCount
              finalizeTime: finalizeTime
              versionBytes: versionBytes
              labels:
                key: labels
              status: VERSION_STATUS_UNSPECIFIED
          name: name
          retainedReleaseCount: 0
          updateTime: updateTime
          ttl: ttl
          url: url
          labels:
            key: labels
        - expireTime: expireTime
          createTime: createTime
          release:
            releaseTime: releaseTime
            name: name
            releaseUser:
              imageUrl: imageUrl
              email: email
            message: message
            type: TYPE_UNSPECIFIED
            version:
              createTime: createTime
              deleteTime: deleteTime
              deleteUser:
                imageUrl: imageUrl
                email: email
              name: name
              createUser:
                imageUrl: imageUrl
                email: email
              finalizeUser:
                imageUrl: imageUrl
                email: email
              config:
                headers:
                - headers:
                    key: headers
                  regex: regex
                  glob: glob
                - headers:
                    key: headers
                  regex: regex
                  glob: glob
                rewrites:
                - functionRegion: functionRegion
                  path: path
                  dynamicLinks: true
                  regex: regex
                  function: function
                  glob: glob
                  run:
                    tag: tag
                    region: region
                    serviceId: serviceId
                - functionRegion: functionRegion
                  path: path
                  dynamicLinks: true
                  regex: regex
                  function: function
                  glob: glob
                  run:
                    tag: tag
                    region: region
                    serviceId: serviceId
                redirects:
                - regex: regex
                  glob: glob
                  location: location
                  statusCode: 0
                - regex: regex
                  glob: glob
                  location: location
                  statusCode: 0
                appAssociation: AUTO
                cleanUrls: true
                trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
                i18n:
                  root: root
              fileCount: fileCount
              finalizeTime: finalizeTime
              versionBytes: versionBytes
              labels:
                key: labels
              status: VERSION_STATUS_UNSPECIFIED
          name: name
          retainedReleaseCount: 0
          updateTime: updateTime
          ttl: ttl
          url: url
          labels:
            key: labels
        nextPageToken: nextPageToken
      properties:
        channels:
          description: The list of channels.
          items:
            $ref: '#/components/schemas/Channel'
          title: channels
          type: array
        nextPageToken:
          description: "The pagination token, if more results exist beyond the ones\
            \ in this response. Include this token in your next call to `ListChannels`.\
            \ Page tokens are short-lived and should not be stored."
          title: nextPageToken
          type: string
      title: ListChannelsResponse
      type: object
    ListCustomDomainsResponse:
      description: The response from `ListCustomDomains`.
      example:
        customDomains:
        - ownershipState: OWNERSHIP_STATE_UNSPECIFIED
          annotations:
            key: annotations
          reconciling: true
          cert:
            expireTime: expireTime
            createTime: createTime
            state: CERT_STATE_UNSPECIFIED
            type: TYPE_UNSPECIFIED
            issues:
            - code: 0
              details:
              - key: ""
              - key: ""
              message: message
            - code: 0
              details:
              - key: ""
              - key: ""
              message: message
            verification:
              dns:
                discovered:
                - records:
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  domainName: domainName
                  checkError:
                    code: 0
                    details:
                    - key: ""
                    - key: ""
                    message: message
                - records:
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  domainName: domainName
                  checkError:
                    code: 0
                    details:
                    - key: ""
                    - key: ""
                    message: message
                checkTime: checkTime
                desired:
                - records:
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  domainName: domainName
                  checkError:
                    code: 0
                    details:
                    - key: ""
                    - key: ""
                    message: message
                - records:
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  domainName: domainName
                  checkError:
                    code: 0
                    details:
                    - key: ""
                    - key: ""
                    message: message
              http:
                path: path
                discovered: discovered
                lastCheckTime: lastCheckTime
                desired: desired
                checkError:
                  code: 0
                  details:
                  - key: ""
                  - key: ""
                  message: message
          updateTime: updateTime
          redirectTarget: redirectTarget
          issues:
          - code: 0
            details:
            - key: ""
            - key: ""
            message: message
          - code: 0
            details:
            - key: ""
            - key: ""
            message: message
          labels:
            key: labels
          requiredDnsUpdates:
            discovered:
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
            checkTime: checkTime
            desired:
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
          expireTime: expireTime
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          certPreference: TYPE_UNSPECIFIED
          hostState: HOST_STATE_UNSPECIFIED
        - ownershipState: OWNERSHIP_STATE_UNSPECIFIED
          annotations:
            key: annotations
          reconciling: true
          cert:
            expireTime: expireTime
            createTime: createTime
            state: CERT_STATE_UNSPECIFIED
            type: TYPE_UNSPECIFIED
            issues:
            - code: 0
              details:
              - key: ""
              - key: ""
              message: message
            - code: 0
              details:
              - key: ""
              - key: ""
              message: message
            verification:
              dns:
                discovered:
                - records:
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  domainName: domainName
                  checkError:
                    code: 0
                    details:
                    - key: ""
                    - key: ""
                    message: message
                - records:
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  domainName: domainName
                  checkError:
                    code: 0
                    details:
                    - key: ""
                    - key: ""
                    message: message
                checkTime: checkTime
                desired:
                - records:
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  domainName: domainName
                  checkError:
                    code: 0
                    details:
                    - key: ""
                    - key: ""
                    message: message
                - records:
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  - domainName: domainName
                    rdata: rdata
                    type: TYPE_UNSPECIFIED
                    requiredAction: NONE
                  domainName: domainName
                  checkError:
                    code: 0
                    details:
                    - key: ""
                    - key: ""
                    message: message
              http:
                path: path
                discovered: discovered
                lastCheckTime: lastCheckTime
                desired: desired
                checkError:
                  code: 0
                  details:
                  - key: ""
                  - key: ""
                  message: message
          updateTime: updateTime
          redirectTarget: redirectTarget
          issues:
          - code: 0
            details:
            - key: ""
            - key: ""
            message: message
          - code: 0
            details:
            - key: ""
            - key: ""
            message: message
          labels:
            key: labels
          requiredDnsUpdates:
            discovered:
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
            checkTime: checkTime
            desired:
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
            - records:
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              - domainName: domainName
                rdata: rdata
                type: TYPE_UNSPECIFIED
                requiredAction: NONE
              domainName: domainName
              checkError:
                code: 0
                details:
                - key: ""
                - key: ""
                message: message
          expireTime: expireTime
          createTime: createTime
          deleteTime: deleteTime
          name: name
          etag: etag
          certPreference: TYPE_UNSPECIFIED
          hostState: HOST_STATE_UNSPECIFIED
        nextPageToken: nextPageToken
      properties:
        customDomains:
          description: A list of `CustomDomain` entities associated with the specified
            Firebase `Site`.
          items:
            $ref: '#/components/schemas/CustomDomain'
          title: customDomains
          type: array
        nextPageToken:
          description: "The pagination token, if more results exist beyond the ones\
            \ in this response. Include this token in your next call to `ListCustomDomains`.\
            \ Page tokens are short-lived and should not be stored."
          title: nextPageToken
          type: string
      title: ListCustomDomainsResponse
      type: object
    ListDomainsResponse:
      description: The response to listing Domains.
      example:
        nextPageToken: nextPageToken
        domains:
        - site: site
          domainName: domainName
          provisioning:
            dnsStatus: DNS_STATUS_UNSPECIFIED
            certChallengeDns:
              domainName: domainName
              token: token
            expectedIps:
            - expectedIps
            - expectedIps
            certChallengeHttp:
              path: path
              token: token
            certStatus: CERT_STATUS_UNSPECIFIED
            discoveredIps:
            - discoveredIps
            - discoveredIps
            dnsFetchTime: dnsFetchTime
            certChallengeDiscoveredTxt:
            - certChallengeDiscoveredTxt
            - certChallengeDiscoveredTxt
          updateTime: updateTime
          domainRedirect:
            domainName: domainName
            type: REDIRECT_TYPE_UNSPECIFIED
          status: DOMAIN_STATUS_UNSPECIFIED
        - site: site
          domainName: domainName
          provisioning:
            dnsStatus: DNS_STATUS_UNSPECIFIED
            certChallengeDns:
              domainName: domainName
              token: token
            expectedIps:
            - expectedIps
            - expectedIps
            certChallengeHttp:
              path: path
              token: token
            certStatus: CERT_STATUS_UNSPECIFIED
            discoveredIps:
            - discoveredIps
            - discoveredIps
            dnsFetchTime: dnsFetchTime
            certChallengeDiscoveredTxt:
            - certChallengeDiscoveredTxt
            - certChallengeDiscoveredTxt
          updateTime: updateTime
          domainRedirect:
            domainName: domainName
            type: REDIRECT_TYPE_UNSPECIFIED
          status: DOMAIN_STATUS_UNSPECIFIED
      properties:
        domains:
          description: "The list of domains, if any exist."
          items:
            $ref: '#/components/schemas/Domain'
          title: domains
          type: array
        nextPageToken:
          description: "The pagination token, if more results exist."
          title: nextPageToken
          type: string
      title: ListDomainsResponse
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      example:
        operations:
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The standard List next-page token.
          title: nextPageToken
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          title: operations
          type: array
      title: ListOperationsResponse
      type: object
    ListReleasesResponse:
      example:
        nextPageToken: nextPageToken
        releases:
        - releaseTime: releaseTime
          name: name
          releaseUser:
            imageUrl: imageUrl
            email: email
          message: message
          type: TYPE_UNSPECIFIED
          version:
            createTime: createTime
            deleteTime: deleteTime
            deleteUser:
              imageUrl: imageUrl
              email: email
            name: name
            createUser:
              imageUrl: imageUrl
              email: email
            finalizeUser:
              imageUrl: imageUrl
              email: email
            config:
              headers:
              - headers:
                  key: headers
                regex: regex
                glob: glob
              - headers:
                  key: headers
                regex: regex
                glob: glob
              rewrites:
              - functionRegion: functionRegion
                path: path
                dynamicLinks: true
                regex: regex
                function: function
                glob: glob
                run:
                  tag: tag
                  region: region
                  serviceId: serviceId
              - functionRegion: functionRegion
                path: path
                dynamicLinks: true
                regex: regex
                function: function
                glob: glob
                run:
                  tag: tag
                  region: region
                  serviceId: serviceId
              redirects:
              - regex: regex
                glob: glob
                location: location
                statusCode: 0
              - regex: regex
                glob: glob
                location: location
                statusCode: 0
              appAssociation: AUTO
              cleanUrls: true
              trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
              i18n:
                root: root
            fileCount: fileCount
            finalizeTime: finalizeTime
            versionBytes: versionBytes
            labels:
              key: labels
            status: VERSION_STATUS_UNSPECIFIED
        - releaseTime: releaseTime
          name: name
          releaseUser:
            imageUrl: imageUrl
            email: email
          message: message
          type: TYPE_UNSPECIFIED
          version:
            createTime: createTime
            deleteTime: deleteTime
            deleteUser:
              imageUrl: imageUrl
              email: email
            name: name
            createUser:
              imageUrl: imageUrl
              email: email
            finalizeUser:
              imageUrl: imageUrl
              email: email
            config:
              headers:
              - headers:
                  key: headers
                regex: regex
                glob: glob
              - headers:
                  key: headers
                regex: regex
                glob: glob
              rewrites:
              - functionRegion: functionRegion
                path: path
                dynamicLinks: true
                regex: regex
                function: function
                glob: glob
                run:
                  tag: tag
                  region: region
                  serviceId: serviceId
              - functionRegion: functionRegion
                path: path
                dynamicLinks: true
                regex: regex
                function: function
                glob: glob
                run:
                  tag: tag
                  region: region
                  serviceId: serviceId
              redirects:
              - regex: regex
                glob: glob
                location: location
                statusCode: 0
              - regex: regex
                glob: glob
                location: location
                statusCode: 0
              appAssociation: AUTO
              cleanUrls: true
              trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
              i18n:
                root: root
            fileCount: fileCount
            finalizeTime: finalizeTime
            versionBytes: versionBytes
            labels:
              key: labels
            status: VERSION_STATUS_UNSPECIFIED
      properties:
        nextPageToken:
          description: "The pagination token, if more results exist beyond the ones\
            \ in this response. Include this token in your next call to `ListReleases`.\
            \ Page tokens are short-lived and should not be stored."
          title: nextPageToken
          type: string
        releases:
          description: "The list of hashes of files that still need to be uploaded,\
            \ if any exist."
          items:
            $ref: '#/components/schemas/Release'
          title: releases
          type: array
      title: ListReleasesResponse
      type: object
    ListSitesResponse:
      example:
        nextPageToken: nextPageToken
        sites:
        - appId: appId
          name: name
          type: TYPE_UNSPECIFIED
          defaultUrl: defaultUrl
          labels:
            key: labels
        - appId: appId
          name: name
          type: TYPE_UNSPECIFIED
          defaultUrl: defaultUrl
          labels:
            key: labels
      properties:
        nextPageToken:
          description: "The pagination token, if more results exist beyond the ones\
            \ in this response. Include this token in your next call to `ListSites`.\
            \ Page tokens are short-lived and should not be stored."
          title: nextPageToken
          type: string
        sites:
          description: A list of Site objects associated with the specified Firebase
            project.
          items:
            $ref: '#/components/schemas/Site'
          title: sites
          type: array
      title: ListSitesResponse
      type: object
    ListVersionFilesResponse:
      example:
        nextPageToken: nextPageToken
        files:
        - path: path
          hash: hash
          status: STATUS_UNSPECIFIED
        - path: path
          hash: hash
          status: STATUS_UNSPECIFIED
      properties:
        files:
          description: ' The list of paths to the hashes of the files in the specified
            version.'
          items:
            $ref: '#/components/schemas/VersionFile'
          title: files
          type: array
        nextPageToken:
          description: "The pagination token, if more results exist beyond the ones\
            \ in this response. Include this token in your next call to `ListVersionFiles`.\
            \ Page tokens are short-lived and should not be stored."
          title: nextPageToken
          type: string
      title: ListVersionFilesResponse
      type: object
    ListVersionsResponse:
      example:
        versions:
        - createTime: createTime
          deleteTime: deleteTime
          deleteUser:
            imageUrl: imageUrl
            email: email
          name: name
          createUser:
            imageUrl: imageUrl
            email: email
          finalizeUser:
            imageUrl: imageUrl
            email: email
          config:
            headers:
            - headers:
                key: headers
              regex: regex
              glob: glob
            - headers:
                key: headers
              regex: regex
              glob: glob
            rewrites:
            - functionRegion: functionRegion
              path: path
              dynamicLinks: true
              regex: regex
              function: function
              glob: glob
              run:
                tag: tag
                region: region
                serviceId: serviceId
            - functionRegion: functionRegion
              path: path
              dynamicLinks: true
              regex: regex
              function: function
              glob: glob
              run:
                tag: tag
                region: region
                serviceId: serviceId
            redirects:
            - regex: regex
              glob: glob
              location: location
              statusCode: 0
            - regex: regex
              glob: glob
              location: location
              statusCode: 0
            appAssociation: AUTO
            cleanUrls: true
            trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
            i18n:
              root: root
          fileCount: fileCount
          finalizeTime: finalizeTime
          versionBytes: versionBytes
          labels:
            key: labels
          status: VERSION_STATUS_UNSPECIFIED
        - createTime: createTime
          deleteTime: deleteTime
          deleteUser:
            imageUrl: imageUrl
            email: email
          name: name
          createUser:
            imageUrl: imageUrl
            email: email
          finalizeUser:
            imageUrl: imageUrl
            email: email
          config:
            headers:
            - headers:
                key: headers
              regex: regex
              glob: glob
            - headers:
                key: headers
              regex: regex
              glob: glob
            rewrites:
            - functionRegion: functionRegion
              path: path
              dynamicLinks: true
              regex: regex
              function: function
              glob: glob
              run:
                tag: tag
                region: region
                serviceId: serviceId
            - functionRegion: functionRegion
              path: path
              dynamicLinks: true
              regex: regex
              function: function
              glob: glob
              run:
                tag: tag
                region: region
                serviceId: serviceId
            redirects:
            - regex: regex
              glob: glob
              location: location
              statusCode: 0
            - regex: regex
              glob: glob
              location: location
              statusCode: 0
            appAssociation: AUTO
            cleanUrls: true
            trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
            i18n:
              root: root
          fileCount: fileCount
          finalizeTime: finalizeTime
          versionBytes: versionBytes
          labels:
            key: labels
          status: VERSION_STATUS_UNSPECIFIED
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: "The pagination token, if more results exist beyond the ones\
            \ in this response. Include this token in your next call to `ListVersions`.\
            \ Page tokens are short-lived and should not be stored."
          title: nextPageToken
          type: string
        versions:
          description: "The list of versions, if any exist."
          items:
            $ref: '#/components/schemas/Version'
          title: versions
          type: array
      title: ListVersionsResponse
      type: object
    LiveMigrationStep:
      description: "A set of updates including ACME challenges and DNS records that\
        \ allow Hosting to create an SSL certificate and establish project ownership\
        \ for your domain name before you direct traffic to Hosting servers. Use these\
        \ updates to facilitate zero downtime migrations to Hosting from other services.\
        \ After you've made the recommended updates, check your custom domain's `ownershipState`\
        \ and `certState`. To avoid downtime, they should be `OWNERSHIP_ACTIVE` and\
        \ `CERT_ACTIVE`, respectively, before you update your `A` and `AAAA` records."
      properties:
        certVerification:
          $ref: '#/components/schemas/CertVerification'
        dnsUpdates:
          $ref: '#/components/schemas/DnsUpdates'
        issues:
          description: Output only. Issues that prevent the current step from completing.
          items:
            $ref: '#/components/schemas/Status'
          readOnly: true
          title: issues
          type: array
        state:
          description: "Output only. The state of the live migration step, indicates\
            \ whether you should work to complete the step now, in the future, or\
            \ have already completed it."
          enum:
          - STATE_UNSPECIFIED
          - PREPARING
          - PENDING
          - INCOMPLETE
          - PROCESSING
          - COMPLETE
          readOnly: true
          title: state
          type: string
      title: LiveMigrationStep
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          title: done
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          title: metadata
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          title: name
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          title: response
          type: object
      title: Operation
      type: object
    PathFilter:
      description: A representation of filter path.
      example:
        regexes:
        - regexes
        - regexes
      properties:
        regexes:
          description: An array of RegEx values by which to filter.
          items:
            type: string
          title: regexes
          type: array
      title: PathFilter
      type: object
    PopulateVersionFilesRequest:
      example:
        files:
          key: files
      properties:
        files:
          additionalProperties:
            type: string
          description: A set of file paths to the hashes corresponding to assets that
            should be added to the version. A file path to an empty hash will remove
            the path from the version. Calculate a hash by Gzipping the file then
            taking the SHA256 hash of the newly compressed file.
          title: files
          type: object
      title: PopulateVersionFilesRequest
      type: object
    PopulateVersionFilesResponse:
      example:
        uploadUrl: uploadUrl
        uploadRequiredHashes:
        - uploadRequiredHashes
        - uploadRequiredHashes
      properties:
        uploadRequiredHashes:
          description: The content hashes of the specified files that need to be uploaded
            to the specified URL.
          items:
            type: string
          title: uploadRequiredHashes
          type: array
        uploadUrl:
          description: "The URL to which the files should be uploaded, in the format:\
            \ \"https://upload-firebasehosting.googleapis.com/upload/sites/SITE_ID\
            \ /versions/VERSION_ID/files\" Perform a multipart `POST` of the Gzipped\
            \ file contents to the URL using a forward slash and the hash of the file\
            \ appended to the end."
          title: uploadUrl
          type: string
      title: PopulateVersionFilesResponse
      type: object
    Redirect:
      description: "A [`Redirect`](https://firebase.google.com/docs/hosting/full-config#redirects)\
        \ specifies a URL pattern that, if matched to the request URL path, triggers\
        \ Hosting to respond with a redirect to the specified destination path."
      example:
        regex: regex
        glob: glob
        location: location
        statusCode: 0
      properties:
        glob:
          description: "The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching)\
            \ to match against the request URL path."
          title: glob
          type: string
        location:
          description: "Required. The value to put in the HTTP location header of\
            \ the response. The location can contain capture group values from the\
            \ pattern using a `:` prefix to identify the segment and an optional `*`\
            \ to capture the rest of the URL. For example: \"glob\": \"/:capture*\"\
            , \"statusCode\": 301, \"location\": \"https://example.com/foo/:capture\""
          title: location
          type: string
        regex:
          description: The user-supplied RE2 regular expression to match against the
            request URL path.
          title: regex
          type: string
        statusCode:
          description: Required. The status HTTP code to return in the response. It
            must be a valid 3xx status code.
          format: int32
          title: statusCode
          type: integer
      title: Redirect
      type: object
    Release:
      description: " A `Release` is a particular [collection of configurations and\
        \ files](sites.versions) that is set to be public at a particular time."
      example:
        releaseTime: releaseTime
        name: name
        releaseUser:
          imageUrl: imageUrl
          email: email
        message: message
        type: TYPE_UNSPECIFIED
        version:
          createTime: createTime
          deleteTime: deleteTime
          deleteUser:
            imageUrl: imageUrl
            email: email
          name: name
          createUser:
            imageUrl: imageUrl
            email: email
          finalizeUser:
            imageUrl: imageUrl
            email: email
          config:
            headers:
            - headers:
                key: headers
              regex: regex
              glob: glob
            - headers:
                key: headers
              regex: regex
              glob: glob
            rewrites:
            - functionRegion: functionRegion
              path: path
              dynamicLinks: true
              regex: regex
              function: function
              glob: glob
              run:
                tag: tag
                region: region
                serviceId: serviceId
            - functionRegion: functionRegion
              path: path
              dynamicLinks: true
              regex: regex
              function: function
              glob: glob
              run:
                tag: tag
                region: region
                serviceId: serviceId
            redirects:
            - regex: regex
              glob: glob
              location: location
              statusCode: 0
            - regex: regex
              glob: glob
              location: location
              statusCode: 0
            appAssociation: AUTO
            cleanUrls: true
            trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
            i18n:
              root: root
          fileCount: fileCount
          finalizeTime: finalizeTime
          versionBytes: versionBytes
          labels:
            key: labels
          status: VERSION_STATUS_UNSPECIFIED
      properties:
        message:
          description: The deploy description when the release was created. The value
            can be up to 512 characters.
          title: message
          type: string
        name:
          description: "Output only. The unique identifier for the release, in either\
            \ of the following formats: - sites/SITE_ID/releases/RELEASE_ID - sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID\
            \ This name is provided in the response body when you call [`releases.create`](sites.releases/create)\
            \ or [`channels.releases.create`](sites.channels.releases/create)."
          title: name
          type: string
        releaseTime:
          description: Output only. The time at which the version is set to be public.
          format: google-datetime
          title: releaseTime
          type: string
        releaseUser:
          $ref: '#/components/schemas/ActingUser'
        type:
          description: Explains the reason for the release. Specify a value for this
            field only when creating a `SITE_DISABLE` type release.
          enum:
          - TYPE_UNSPECIFIED
          - DEPLOY
          - ROLLBACK
          - SITE_DISABLE
          title: type
          type: string
        version:
          $ref: '#/components/schemas/Version'
      title: Release
      type: object
    Rewrite:
      description: "A [`Rewrite`](https://firebase.google.com/docs/hosting/full-config#rewrites)\
        \ specifies a URL pattern that, if matched to the request URL path, triggers\
        \ Hosting to respond as if the service were given the specified destination\
        \ URL."
      example:
        functionRegion: functionRegion
        path: path
        dynamicLinks: true
        regex: regex
        function: function
        glob: glob
        run:
          tag: tag
          region: region
          serviceId: serviceId
      properties:
        dynamicLinks:
          description: The request will be forwarded to Firebase Dynamic Links.
          title: dynamicLinks
          type: boolean
        function:
          description: The function to proxy requests to. Must match the exported
            function name exactly.
          title: function
          type: string
        functionRegion:
          description: "Optional. Specify a Cloud region for rewritten Functions invocations.\
            \ If not provided, defaults to us-central1."
          title: functionRegion
          type: string
        glob:
          description: "The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching)\
            \ to match against the request URL path."
          title: glob
          type: string
        path:
          description: The URL path to rewrite the request to.
          title: path
          type: string
        regex:
          description: The user-supplied RE2 regular expression to match against the
            request URL path.
          title: regex
          type: string
        run:
          $ref: '#/components/schemas/CloudRunRewrite'
      title: Rewrite
      type: object
    ServingConfig:
      description: "The configuration for how incoming requests to a site should be\
        \ routed and processed before serving content. The URL request paths are matched\
        \ against the specified URL patterns in the configuration, then Hosting applies\
        \ the applicable configuration according to a specific [priority order](https://firebase.google.com/docs/hosting/full-config#hosting_priority_order)."
      example:
        headers:
        - headers:
            key: headers
          regex: regex
          glob: glob
        - headers:
            key: headers
          regex: regex
          glob: glob
        rewrites:
        - functionRegion: functionRegion
          path: path
          dynamicLinks: true
          regex: regex
          function: function
          glob: glob
          run:
            tag: tag
            region: region
            serviceId: serviceId
        - functionRegion: functionRegion
          path: path
          dynamicLinks: true
          regex: regex
          function: function
          glob: glob
          run:
            tag: tag
            region: region
            serviceId: serviceId
        redirects:
        - regex: regex
          glob: glob
          location: location
          statusCode: 0
        - regex: regex
          glob: glob
          location: location
          statusCode: 0
        appAssociation: AUTO
        cleanUrls: true
        trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
        i18n:
          root: root
      properties:
        appAssociation:
          description: How to handle well known App Association files.
          enum:
          - AUTO
          - NONE
          title: appAssociation
          type: string
        cleanUrls:
          description: Defines whether to drop the file extension from uploaded files.
          title: cleanUrls
          type: boolean
        headers:
          description: "An array of objects, where each object specifies a URL pattern\
            \ that, if matched to the request URL path, triggers Hosting to apply\
            \ the specified custom response headers."
          items:
            $ref: '#/components/schemas/Header'
          title: headers
          type: array
        i18n:
          $ref: '#/components/schemas/I18nConfig'
        redirects:
          description: "An array of objects (called redirect rules), where each rule\
            \ specifies a URL pattern that, if matched to the request URL path, triggers\
            \ Hosting to respond with a redirect to the specified destination path."
          items:
            $ref: '#/components/schemas/Redirect'
          title: redirects
          type: array
        rewrites:
          description: "An array of objects (called rewrite rules), where each rule\
            \ specifies a URL pattern that, if matched to the request URL path, triggers\
            \ Hosting to respond as if the service were given the specified destination\
            \ URL."
          items:
            $ref: '#/components/schemas/Rewrite'
          title: rewrites
          type: array
        trailingSlashBehavior:
          description: Defines how to handle a trailing slash in the URL path.
          enum:
          - TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
          - ADD
          - REMOVE
          title: trailingSlashBehavior
          type: string
      title: ServingConfig
      type: object
    Site:
      description: A `Site` represents a Firebase Hosting site.
      example:
        appId: appId
        name: name
        type: TYPE_UNSPECIFIED
        defaultUrl: defaultUrl
        labels:
          key: labels
      properties:
        appId:
          description: "Optional. The [ID of a Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id)\
            \ associated with the Hosting site."
          title: appId
          type: string
        defaultUrl:
          description: Output only. The default URL for the Hosting site.
          readOnly: true
          title: defaultUrl
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. User-specified labels for the Hosting site.
          title: labels
          type: object
        name:
          description: "Output only. The fully-qualified resource name of the Hosting\
            \ site, in the format: projects/PROJECT_IDENTIFIER/sites/SITE_ID PROJECT_IDENTIFIER:\
            \ the Firebase project's [`ProjectNumber`](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_number)\
            \ ***(recommended)*** or its [`ProjectId`](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_id).\
            \ Learn more about using project identifiers in Google's [AIP 2510 standard](https://google.aip.dev/cloud/2510)."
          readOnly: true
          title: name
          type: string
        type:
          description: "Output only. The type of Hosting site. Every Firebase project\
            \ has a `DEFAULT_SITE`, which is created when Hosting is provisioned for\
            \ the project. All additional sites are `USER_SITE`."
          enum:
          - TYPE_UNSPECIFIED
          - DEFAULT_SITE
          - USER_SITE
          readOnly: true
          title: type
          type: string
      title: Site
      type: object
    SiteConfig:
      description: A `SiteConfig` contains metadata associated with a specific site
        that controls Firebase Hosting serving behavior
      properties:
        cloudLoggingEnabled:
          description: Whether or not web requests made by site visitors are logged
            via Cloud Logging.
          type: boolean
        maxVersions:
          description: "The number of FINALIZED versions that will be held for a site\
            \ before automatic deletion. When a new version is deployed, content for\
            \ versions in storage in excess of this number will be deleted, and will\
            \ no longer be billed for storage usage. Oldest versions will be deleted\
            \ first; sites are created with an unlimited number of max_versions by\
            \ default."
          format: int64
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          title: code
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          title: details
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          title: message
          type: string
      title: Status
      type: object
    UndeleteCustomDomainRequest:
      description: The request sent to `UndeleteCustomDomain`.
      example:
        validateOnly: true
        etag: etag
      properties:
        etag:
          description: "A tag that represents the state of the `CustomDomain` as you\
            \ know it. If present, the supplied tag must match the current value on\
            \ your `CustomDomain`, or the request fails."
          title: etag
          type: string
        validateOnly:
          description: "If true, Hosting validates that it's possible to complete\
            \ your request but doesn't actually delete the `CustomDomain`."
          title: validateOnly
          type: boolean
      title: UndeleteCustomDomainRequest
      type: object
    Version:
      description: A `Version` is a configuration and a collection of static files
        which determine how a site is displayed.
      example:
        createTime: createTime
        deleteTime: deleteTime
        deleteUser:
          imageUrl: imageUrl
          email: email
        name: name
        createUser:
          imageUrl: imageUrl
          email: email
        finalizeUser:
          imageUrl: imageUrl
          email: email
        config:
          headers:
          - headers:
              key: headers
            regex: regex
            glob: glob
          - headers:
              key: headers
            regex: regex
            glob: glob
          rewrites:
          - functionRegion: functionRegion
            path: path
            dynamicLinks: true
            regex: regex
            function: function
            glob: glob
            run:
              tag: tag
              region: region
              serviceId: serviceId
          - functionRegion: functionRegion
            path: path
            dynamicLinks: true
            regex: regex
            function: function
            glob: glob
            run:
              tag: tag
              region: region
              serviceId: serviceId
          redirects:
          - regex: regex
            glob: glob
            location: location
            statusCode: 0
          - regex: regex
            glob: glob
            location: location
            statusCode: 0
          appAssociation: AUTO
          cleanUrls: true
          trailingSlashBehavior: TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
          i18n:
            root: root
        fileCount: fileCount
        finalizeTime: finalizeTime
        versionBytes: versionBytes
        labels:
          key: labels
        status: VERSION_STATUS_UNSPECIFIED
      properties:
        config:
          $ref: '#/components/schemas/ServingConfig'
        createTime:
          description: Output only. The time at which the version was created.
          format: google-datetime
          title: createTime
          type: string
        createUser:
          $ref: '#/components/schemas/ActingUser'
        deleteTime:
          description: Output only. The time at which the version was `DELETED`.
          format: google-datetime
          title: deleteTime
          type: string
        deleteUser:
          $ref: '#/components/schemas/ActingUser'
        fileCount:
          description: Output only. The total number of files associated with the
            version. This value is calculated after a version is `FINALIZED`.
          format: int64
          title: fileCount
          type: string
        finalizeTime:
          description: Output only. The time at which the version was `FINALIZED`.
          format: google-datetime
          title: finalizeTime
          type: string
        finalizeUser:
          $ref: '#/components/schemas/ActingUser'
        labels:
          additionalProperties:
            type: string
          description: The labels used for extra metadata and/or filtering.
          title: labels
          type: object
        name:
          description: "The fully-qualified resource name for the version, in the\
            \ format: sites/ SITE_ID/versions/VERSION_ID This name is provided in\
            \ the response body when you call [`CreateVersion`](sites.versions/create)."
          title: name
          type: string
        status:
          description: "The deploy status of the version. For a successful deploy,\
            \ call [`CreateVersion`](sites.versions/create) to make a new version\
            \ (`CREATED` status), [upload all desired files](sites.versions/populateFiles)\
            \ to the version, then [update](sites.versions/patch) the version to the\
            \ `FINALIZED` status. Note that if you leave the version in the `CREATED`\
            \ state for more than 12 hours, the system will automatically mark the\
            \ version as `ABANDONED`. You can also change the status of a version\
            \ to `DELETED` by calling [`DeleteVersion`](sites.versions/delete)."
          enum:
          - VERSION_STATUS_UNSPECIFIED
          - CREATED
          - FINALIZED
          - DELETED
          - ABANDONED
          - EXPIRED
          - CLONING
          title: status
          type: string
        versionBytes:
          description: Output only. The total stored bytesize of the version. This
            value is calculated after a version is `FINALIZED`.
          format: int64
          title: versionBytes
          type: string
      title: Version
      type: object
    VersionFile:
      description: A static content file that is part of a version.
      example:
        path: path
        hash: hash
        status: STATUS_UNSPECIFIED
      properties:
        hash:
          description: The SHA256 content hash of the file.
          title: hash
          type: string
        path:
          description: The URI at which the file's content should display.
          title: path
          type: string
        status:
          description: Output only. The current status of a particular file in the
            specified version. The value will be either `pending upload` or `uploaded`.
          enum:
          - STATUS_UNSPECIFIED
          - EXPECTED
          - ACTIVE
          title: status
          type: string
      title: VersionFile
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data
              across Google Cloud services and see the email address of your Google
              Account
            https://www.googleapis.com/auth/firebase: View and administer all your
              Firebase data and settings
            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase
              data and settings
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data
              across Google Cloud services and see the email address of your Google
              Account
            https://www.googleapis.com/auth/firebase: View and administer all your
              Firebase data and settings
            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase
              data and settings
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
