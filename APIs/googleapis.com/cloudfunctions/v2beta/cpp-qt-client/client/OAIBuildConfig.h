/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuildConfig.h
 *
 * Describes the Build step of the function that builds a container from the given source.
 */

#ifndef OAIBuildConfig_H
#define OAIBuildConfig_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIOnDeployUpdatePolicy.h"
#include "OAISource.h"
#include "OAISourceProvenance.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOnDeployUpdatePolicy;
class OAISource;
class OAISourceProvenance;

class OAIBuildConfig : public OAIObject {
public:
    OAIBuildConfig();
    OAIBuildConfig(QString json);
    ~OAIBuildConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAutomaticUpdatePolicy() const;
    void setAutomaticUpdatePolicy(const OAIObject &automatic_update_policy);
    bool is_automatic_update_policy_Set() const;
    bool is_automatic_update_policy_Valid() const;

    QString getBuild() const;
    void setBuild(const QString &build);
    bool is_build_Set() const;
    bool is_build_Valid() const;

    QString getDockerRegistry() const;
    void setDockerRegistry(const QString &docker_registry);
    bool is_docker_registry_Set() const;
    bool is_docker_registry_Valid() const;

    QString getDockerRepository() const;
    void setDockerRepository(const QString &docker_repository);
    bool is_docker_repository_Set() const;
    bool is_docker_repository_Valid() const;

    QString getEntryPoint() const;
    void setEntryPoint(const QString &entry_point);
    bool is_entry_point_Set() const;
    bool is_entry_point_Valid() const;

    QMap<QString, QString> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QMap<QString, QString> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    OAIOnDeployUpdatePolicy getOnDeployUpdatePolicy() const;
    void setOnDeployUpdatePolicy(const OAIOnDeployUpdatePolicy &on_deploy_update_policy);
    bool is_on_deploy_update_policy_Set() const;
    bool is_on_deploy_update_policy_Valid() const;

    QString getRuntime() const;
    void setRuntime(const QString &runtime);
    bool is_runtime_Set() const;
    bool is_runtime_Valid() const;

    QString getServiceAccount() const;
    void setServiceAccount(const QString &service_account);
    bool is_service_account_Set() const;
    bool is_service_account_Valid() const;

    OAISource getSource() const;
    void setSource(const OAISource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAISourceProvenance getSourceProvenance() const;
    void setSourceProvenance(const OAISourceProvenance &source_provenance);
    bool is_source_provenance_Set() const;
    bool is_source_provenance_Valid() const;

    QString getSourceToken() const;
    void setSourceToken(const QString &source_token);
    bool is_source_token_Set() const;
    bool is_source_token_Valid() const;

    QString getWorkerPool() const;
    void setWorkerPool(const QString &worker_pool);
    bool is_worker_pool_Set() const;
    bool is_worker_pool_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_automatic_update_policy;
    bool m_automatic_update_policy_isSet;
    bool m_automatic_update_policy_isValid;

    QString m_build;
    bool m_build_isSet;
    bool m_build_isValid;

    QString m_docker_registry;
    bool m_docker_registry_isSet;
    bool m_docker_registry_isValid;

    QString m_docker_repository;
    bool m_docker_repository_isSet;
    bool m_docker_repository_isValid;

    QString m_entry_point;
    bool m_entry_point_isSet;
    bool m_entry_point_isValid;

    QMap<QString, QString> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    OAIOnDeployUpdatePolicy m_on_deploy_update_policy;
    bool m_on_deploy_update_policy_isSet;
    bool m_on_deploy_update_policy_isValid;

    QString m_runtime;
    bool m_runtime_isSet;
    bool m_runtime_isValid;

    QString m_service_account;
    bool m_service_account_isSet;
    bool m_service_account_isValid;

    OAISource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAISourceProvenance m_source_provenance;
    bool m_source_provenance_isSet;
    bool m_source_provenance_isValid;

    QString m_source_token;
    bool m_source_token_isSet;
    bool m_source_token_isValid;

    QString m_worker_pool;
    bool m_worker_pool_isSet;
    bool m_worker_pool_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuildConfig)

#endif // OAIBuildConfig_H
