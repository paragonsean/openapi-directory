/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v2beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceConfig.h
 *
 * Describes the Service being deployed. Currently Supported : Cloud Run (fully managed).
 */

#ifndef OAIServiceConfig_H
#define OAIServiceConfig_H

#include <QJsonObject>

#include "OAISecretEnvVar.h"
#include "OAISecretVolume.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISecretEnvVar;
class OAISecretVolume;

class OAIServiceConfig : public OAIObject {
public:
    OAIServiceConfig();
    OAIServiceConfig(QString json);
    ~OAIServiceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllTrafficOnLatestRevision() const;
    void setAllTrafficOnLatestRevision(const bool &all_traffic_on_latest_revision);
    bool is_all_traffic_on_latest_revision_Set() const;
    bool is_all_traffic_on_latest_revision_Valid() const;

    QString getAvailableCpu() const;
    void setAvailableCpu(const QString &available_cpu);
    bool is_available_cpu_Set() const;
    bool is_available_cpu_Valid() const;

    QString getAvailableMemory() const;
    void setAvailableMemory(const QString &available_memory);
    bool is_available_memory_Set() const;
    bool is_available_memory_Valid() const;

    QMap<QString, QString> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QMap<QString, QString> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    QString getIngressSettings() const;
    void setIngressSettings(const QString &ingress_settings);
    bool is_ingress_settings_Set() const;
    bool is_ingress_settings_Valid() const;

    qint32 getMaxInstanceCount() const;
    void setMaxInstanceCount(const qint32 &max_instance_count);
    bool is_max_instance_count_Set() const;
    bool is_max_instance_count_Valid() const;

    qint32 getMaxInstanceRequestConcurrency() const;
    void setMaxInstanceRequestConcurrency(const qint32 &max_instance_request_concurrency);
    bool is_max_instance_request_concurrency_Set() const;
    bool is_max_instance_request_concurrency_Valid() const;

    qint32 getMinInstanceCount() const;
    void setMinInstanceCount(const qint32 &min_instance_count);
    bool is_min_instance_count_Set() const;
    bool is_min_instance_count_Valid() const;

    QString getRevision() const;
    void setRevision(const QString &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    QList<OAISecretEnvVar> getSecretEnvironmentVariables() const;
    void setSecretEnvironmentVariables(const QList<OAISecretEnvVar> &secret_environment_variables);
    bool is_secret_environment_variables_Set() const;
    bool is_secret_environment_variables_Valid() const;

    QList<OAISecretVolume> getSecretVolumes() const;
    void setSecretVolumes(const QList<OAISecretVolume> &secret_volumes);
    bool is_secret_volumes_Set() const;
    bool is_secret_volumes_Valid() const;

    QString getSecurityLevel() const;
    void setSecurityLevel(const QString &security_level);
    bool is_security_level_Set() const;
    bool is_security_level_Valid() const;

    QString getService() const;
    void setService(const QString &service);
    bool is_service_Set() const;
    bool is_service_Valid() const;

    QString getServiceAccountEmail() const;
    void setServiceAccountEmail(const QString &service_account_email);
    bool is_service_account_email_Set() const;
    bool is_service_account_email_Valid() const;

    qint32 getTimeoutSeconds() const;
    void setTimeoutSeconds(const qint32 &timeout_seconds);
    bool is_timeout_seconds_Set() const;
    bool is_timeout_seconds_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    QString getVpcConnector() const;
    void setVpcConnector(const QString &vpc_connector);
    bool is_vpc_connector_Set() const;
    bool is_vpc_connector_Valid() const;

    QString getVpcConnectorEgressSettings() const;
    void setVpcConnectorEgressSettings(const QString &vpc_connector_egress_settings);
    bool is_vpc_connector_egress_settings_Set() const;
    bool is_vpc_connector_egress_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_all_traffic_on_latest_revision;
    bool m_all_traffic_on_latest_revision_isSet;
    bool m_all_traffic_on_latest_revision_isValid;

    QString m_available_cpu;
    bool m_available_cpu_isSet;
    bool m_available_cpu_isValid;

    QString m_available_memory;
    bool m_available_memory_isSet;
    bool m_available_memory_isValid;

    QMap<QString, QString> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    QString m_ingress_settings;
    bool m_ingress_settings_isSet;
    bool m_ingress_settings_isValid;

    qint32 m_max_instance_count;
    bool m_max_instance_count_isSet;
    bool m_max_instance_count_isValid;

    qint32 m_max_instance_request_concurrency;
    bool m_max_instance_request_concurrency_isSet;
    bool m_max_instance_request_concurrency_isValid;

    qint32 m_min_instance_count;
    bool m_min_instance_count_isSet;
    bool m_min_instance_count_isValid;

    QString m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;

    QList<OAISecretEnvVar> m_secret_environment_variables;
    bool m_secret_environment_variables_isSet;
    bool m_secret_environment_variables_isValid;

    QList<OAISecretVolume> m_secret_volumes;
    bool m_secret_volumes_isSet;
    bool m_secret_volumes_isValid;

    QString m_security_level;
    bool m_security_level_isSet;
    bool m_security_level_isValid;

    QString m_service;
    bool m_service_isSet;
    bool m_service_isValid;

    QString m_service_account_email;
    bool m_service_account_email_isSet;
    bool m_service_account_email_isValid;

    qint32 m_timeout_seconds;
    bool m_timeout_seconds_isSet;
    bool m_timeout_seconds_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    QString m_vpc_connector;
    bool m_vpc_connector_isSet;
    bool m_vpc_connector_isValid;

    QString m_vpc_connector_egress_settings;
    bool m_vpc_connector_egress_settings_isSet;
    bool m_vpc_connector_egress_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceConfig)

#endif // OAIServiceConfig_H
