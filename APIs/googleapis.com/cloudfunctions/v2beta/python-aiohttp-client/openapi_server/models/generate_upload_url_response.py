# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.storage_source import StorageSource
from openapi_server import util


class GenerateUploadUrlResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, storage_source: StorageSource=None, upload_url: str=None):
        """GenerateUploadUrlResponse - a model defined in OpenAPI

        :param storage_source: The storage_source of this GenerateUploadUrlResponse.
        :param upload_url: The upload_url of this GenerateUploadUrlResponse.
        """
        self.openapi_types = {
            'storage_source': StorageSource,
            'upload_url': str
        }

        self.attribute_map = {
            'storage_source': 'storageSource',
            'upload_url': 'uploadUrl'
        }

        self._storage_source = storage_source
        self._upload_url = upload_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateUploadUrlResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateUploadUrlResponse of this GenerateUploadUrlResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def storage_source(self):
        """Gets the storage_source of this GenerateUploadUrlResponse.


        :return: The storage_source of this GenerateUploadUrlResponse.
        :rtype: StorageSource
        """
        return self._storage_source

    @storage_source.setter
    def storage_source(self, storage_source):
        """Sets the storage_source of this GenerateUploadUrlResponse.


        :param storage_source: The storage_source of this GenerateUploadUrlResponse.
        :type storage_source: StorageSource
        """

        self._storage_source = storage_source

    @property
    def upload_url(self):
        """Gets the upload_url of this GenerateUploadUrlResponse.

        The generated Google Cloud Storage signed URL that should be used for a function source code upload. The uploaded file should be a zip archive which contains a function.

        :return: The upload_url of this GenerateUploadUrlResponse.
        :rtype: str
        """
        return self._upload_url

    @upload_url.setter
    def upload_url(self, upload_url):
        """Sets the upload_url of this GenerateUploadUrlResponse.

        The generated Google Cloud Storage signed URL that should be used for a function source code upload. The uploaded file should be a zip archive which contains a function.

        :param upload_url: The upload_url of this GenerateUploadUrlResponse.
        :type upload_url: str
        """

        self._upload_url = upload_url
