/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildConfig from './BuildConfig';
import EventTrigger from './EventTrigger';
import ServiceConfig from './ServiceConfig';

/**
 * The UpgradeInfo model module.
 * @module model/UpgradeInfo
 * @version v2beta
 */
class UpgradeInfo {
    /**
     * Constructs a new <code>UpgradeInfo</code>.
     * Information related to: * A function&#39;s eligibility for 1st Gen to 2nd Gen migration * Current state of migration for function undergoing migration.
     * @alias module:model/UpgradeInfo
     */
    constructor() { 
        
        UpgradeInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpgradeInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpgradeInfo} obj Optional instance to populate.
     * @return {module:model/UpgradeInfo} The populated <code>UpgradeInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpgradeInfo();

            if (data.hasOwnProperty('buildConfig')) {
                obj['buildConfig'] = BuildConfig.constructFromObject(data['buildConfig']);
            }
            if (data.hasOwnProperty('eventTrigger')) {
                obj['eventTrigger'] = EventTrigger.constructFromObject(data['eventTrigger']);
            }
            if (data.hasOwnProperty('serviceConfig')) {
                obj['serviceConfig'] = ServiceConfig.constructFromObject(data['serviceConfig']);
            }
            if (data.hasOwnProperty('upgradeState')) {
                obj['upgradeState'] = ApiClient.convertToType(data['upgradeState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpgradeInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpgradeInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `buildConfig`
        if (data['buildConfig']) { // data not null
          BuildConfig.validateJSON(data['buildConfig']);
        }
        // validate the optional field `eventTrigger`
        if (data['eventTrigger']) { // data not null
          EventTrigger.validateJSON(data['eventTrigger']);
        }
        // validate the optional field `serviceConfig`
        if (data['serviceConfig']) { // data not null
          ServiceConfig.validateJSON(data['serviceConfig']);
        }
        // ensure the json data is a string
        if (data['upgradeState'] && !(typeof data['upgradeState'] === 'string' || data['upgradeState'] instanceof String)) {
            throw new Error("Expected the field `upgradeState` to be a primitive type in the JSON string but got " + data['upgradeState']);
        }

        return true;
    }


}



/**
 * @member {module:model/BuildConfig} buildConfig
 */
UpgradeInfo.prototype['buildConfig'] = undefined;

/**
 * @member {module:model/EventTrigger} eventTrigger
 */
UpgradeInfo.prototype['eventTrigger'] = undefined;

/**
 * @member {module:model/ServiceConfig} serviceConfig
 */
UpgradeInfo.prototype['serviceConfig'] = undefined;

/**
 * UpgradeState of the function
 * @member {module:model/UpgradeInfo.UpgradeStateEnum} upgradeState
 */
UpgradeInfo.prototype['upgradeState'] = undefined;





/**
 * Allowed values for the <code>upgradeState</code> property.
 * @enum {String}
 * @readonly
 */
UpgradeInfo['UpgradeStateEnum'] = {

    /**
     * value: "UPGRADE_STATE_UNSPECIFIED"
     * @const
     */
    "UPGRADE_STATE_UNSPECIFIED": "UPGRADE_STATE_UNSPECIFIED",

    /**
     * value: "ELIGIBLE_FOR_2ND_GEN_UPGRADE"
     * @const
     */
    "ELIGIBLE_FOR_2ND_GEN_UPGRADE": "ELIGIBLE_FOR_2ND_GEN_UPGRADE",

    /**
     * value: "UPGRADE_OPERATION_IN_PROGRESS"
     * @const
     */
    "UPGRADE_OPERATION_IN_PROGRESS": "UPGRADE_OPERATION_IN_PROGRESS",

    /**
     * value: "SETUP_FUNCTION_UPGRADE_CONFIG_SUCCESSFUL"
     * @const
     */
    "SETUP_FUNCTION_UPGRADE_CONFIG_SUCCESSFUL": "SETUP_FUNCTION_UPGRADE_CONFIG_SUCCESSFUL",

    /**
     * value: "SETUP_FUNCTION_UPGRADE_CONFIG_ERROR"
     * @const
     */
    "SETUP_FUNCTION_UPGRADE_CONFIG_ERROR": "SETUP_FUNCTION_UPGRADE_CONFIG_ERROR",

    /**
     * value: "ABORT_FUNCTION_UPGRADE_ERROR"
     * @const
     */
    "ABORT_FUNCTION_UPGRADE_ERROR": "ABORT_FUNCTION_UPGRADE_ERROR",

    /**
     * value: "REDIRECT_FUNCTION_UPGRADE_TRAFFIC_SUCCESSFUL"
     * @const
     */
    "REDIRECT_FUNCTION_UPGRADE_TRAFFIC_SUCCESSFUL": "REDIRECT_FUNCTION_UPGRADE_TRAFFIC_SUCCESSFUL",

    /**
     * value: "REDIRECT_FUNCTION_UPGRADE_TRAFFIC_ERROR"
     * @const
     */
    "REDIRECT_FUNCTION_UPGRADE_TRAFFIC_ERROR": "REDIRECT_FUNCTION_UPGRADE_TRAFFIC_ERROR",

    /**
     * value: "ROLLBACK_FUNCTION_UPGRADE_TRAFFIC_ERROR"
     * @const
     */
    "ROLLBACK_FUNCTION_UPGRADE_TRAFFIC_ERROR": "ROLLBACK_FUNCTION_UPGRADE_TRAFFIC_ERROR",

    /**
     * value: "COMMIT_FUNCTION_UPGRADE_ERROR"
     * @const
     */
    "COMMIT_FUNCTION_UPGRADE_ERROR": "COMMIT_FUNCTION_UPGRADE_ERROR"
};



export default UpgradeInfo;

