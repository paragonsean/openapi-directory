/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v2beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildConfig from './BuildConfig';
import EventTrigger from './EventTrigger';
import GoogleCloudFunctionsV2betaStateMessage from './GoogleCloudFunctionsV2betaStateMessage';
import ServiceConfig from './ServiceConfig';
import UpgradeInfo from './UpgradeInfo';

/**
 * The Function model module.
 * @module model/Function
 * @version v2beta
 */
class Function {
    /**
     * Constructs a new <code>Function</code>.
     * Describes a Cloud Function that contains user computation executed in response to an event. It encapsulates function and trigger configurations.
     * @alias module:model/Function
     */
    constructor() { 
        
        Function.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Function</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Function} obj Optional instance to populate.
     * @return {module:model/Function} The populated <code>Function</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Function();

            if (data.hasOwnProperty('buildConfig')) {
                obj['buildConfig'] = BuildConfig.constructFromObject(data['buildConfig']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('eventTrigger')) {
                obj['eventTrigger'] = EventTrigger.constructFromObject(data['eventTrigger']);
            }
            if (data.hasOwnProperty('kmsKeyName')) {
                obj['kmsKeyName'] = ApiClient.convertToType(data['kmsKeyName'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('satisfiesPzs')) {
                obj['satisfiesPzs'] = ApiClient.convertToType(data['satisfiesPzs'], 'Boolean');
            }
            if (data.hasOwnProperty('serviceConfig')) {
                obj['serviceConfig'] = ServiceConfig.constructFromObject(data['serviceConfig']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stateMessages')) {
                obj['stateMessages'] = ApiClient.convertToType(data['stateMessages'], [GoogleCloudFunctionsV2betaStateMessage]);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('upgradeInfo')) {
                obj['upgradeInfo'] = UpgradeInfo.constructFromObject(data['upgradeInfo']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Function</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Function</code>.
     */
    static validateJSON(data) {
        // validate the optional field `buildConfig`
        if (data['buildConfig']) { // data not null
          BuildConfig.validateJSON(data['buildConfig']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['environment'] && !(typeof data['environment'] === 'string' || data['environment'] instanceof String)) {
            throw new Error("Expected the field `environment` to be a primitive type in the JSON string but got " + data['environment']);
        }
        // validate the optional field `eventTrigger`
        if (data['eventTrigger']) { // data not null
          EventTrigger.validateJSON(data['eventTrigger']);
        }
        // ensure the json data is a string
        if (data['kmsKeyName'] && !(typeof data['kmsKeyName'] === 'string' || data['kmsKeyName'] instanceof String)) {
            throw new Error("Expected the field `kmsKeyName` to be a primitive type in the JSON string but got " + data['kmsKeyName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `serviceConfig`
        if (data['serviceConfig']) { // data not null
          ServiceConfig.validateJSON(data['serviceConfig']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        if (data['stateMessages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['stateMessages'])) {
                throw new Error("Expected the field `stateMessages` to be an array in the JSON data but got " + data['stateMessages']);
            }
            // validate the optional field `stateMessages` (array)
            for (const item of data['stateMessages']) {
                GoogleCloudFunctionsV2betaStateMessage.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `upgradeInfo`
        if (data['upgradeInfo']) { // data not null
          UpgradeInfo.validateJSON(data['upgradeInfo']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {module:model/BuildConfig} buildConfig
 */
Function.prototype['buildConfig'] = undefined;

/**
 * Output only. The create timestamp of a Cloud Function. This is only applicable to 2nd Gen functions.
 * @member {String} createTime
 */
Function.prototype['createTime'] = undefined;

/**
 * User-provided description of a function.
 * @member {String} description
 */
Function.prototype['description'] = undefined;

/**
 * Describe whether the function is 1st Gen or 2nd Gen.
 * @member {module:model/Function.EnvironmentEnum} environment
 */
Function.prototype['environment'] = undefined;

/**
 * @member {module:model/EventTrigger} eventTrigger
 */
Function.prototype['eventTrigger'] = undefined;

/**
 * [Preview] Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources. It must match the pattern `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
 * @member {String} kmsKeyName
 */
Function.prototype['kmsKeyName'] = undefined;

/**
 * Labels associated with this Cloud Function.
 * @member {Object.<String, String>} labels
 */
Function.prototype['labels'] = undefined;

/**
 * A user-defined name of the function. Function names must be unique globally and match pattern `projects/_*_/locations/_*_/functions/_*`
 * @member {String} name
 */
Function.prototype['name'] = undefined;

/**
 * Output only. Reserved for future use.
 * @member {Boolean} satisfiesPzs
 */
Function.prototype['satisfiesPzs'] = undefined;

/**
 * @member {module:model/ServiceConfig} serviceConfig
 */
Function.prototype['serviceConfig'] = undefined;

/**
 * Output only. State of the function.
 * @member {module:model/Function.StateEnum} state
 */
Function.prototype['state'] = undefined;

/**
 * Output only. State Messages for this Cloud Function.
 * @member {Array.<module:model/GoogleCloudFunctionsV2betaStateMessage>} stateMessages
 */
Function.prototype['stateMessages'] = undefined;

/**
 * Output only. The last update timestamp of a Cloud Function.
 * @member {String} updateTime
 */
Function.prototype['updateTime'] = undefined;

/**
 * @member {module:model/UpgradeInfo} upgradeInfo
 */
Function.prototype['upgradeInfo'] = undefined;

/**
 * Output only. The deployed url for the function.
 * @member {String} url
 */
Function.prototype['url'] = undefined;





/**
 * Allowed values for the <code>environment</code> property.
 * @enum {String}
 * @readonly
 */
Function['EnvironmentEnum'] = {

    /**
     * value: "ENVIRONMENT_UNSPECIFIED"
     * @const
     */
    "ENVIRONMENT_UNSPECIFIED": "ENVIRONMENT_UNSPECIFIED",

    /**
     * value: "GEN_1"
     * @const
     */
    "GEN_1": "GEN_1",

    /**
     * value: "GEN_2"
     * @const
     */
    "GEN_2": "GEN_2"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Function['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "DEPLOYING"
     * @const
     */
    "DEPLOYING": "DEPLOYING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN"
};



export default Function;

