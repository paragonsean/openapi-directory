/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudFunction.h
 *
 * Describes a Cloud Function that contains user computation executed in response to an event. It encapsulate function and triggers configurations.
 */

#ifndef OAICloudFunction_H
#define OAICloudFunction_H

#include <QJsonObject>

#include "OAIEventTrigger.h"
#include "OAIHttpsTrigger.h"
#include "OAIObject.h"
#include "OAIOnDeployUpdatePolicy.h"
#include "OAISecretEnvVar.h"
#include "OAISecretVolume.h"
#include "OAISourceRepository.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventTrigger;
class OAIHttpsTrigger;
class OAIOnDeployUpdatePolicy;
class OAISecretEnvVar;
class OAISecretVolume;
class OAISourceRepository;

class OAICloudFunction : public OAIObject {
public:
    OAICloudFunction();
    OAICloudFunction(QString json);
    ~OAICloudFunction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAutomaticUpdatePolicy() const;
    void setAutomaticUpdatePolicy(const OAIObject &automatic_update_policy);
    bool is_automatic_update_policy_Set() const;
    bool is_automatic_update_policy_Valid() const;

    qint32 getAvailableMemoryMb() const;
    void setAvailableMemoryMb(const qint32 &available_memory_mb);
    bool is_available_memory_mb_Set() const;
    bool is_available_memory_mb_Valid() const;

    QMap<QString, QString> getBuildEnvironmentVariables() const;
    void setBuildEnvironmentVariables(const QMap<QString, QString> &build_environment_variables);
    bool is_build_environment_variables_Set() const;
    bool is_build_environment_variables_Valid() const;

    QString getBuildId() const;
    void setBuildId(const QString &build_id);
    bool is_build_id_Set() const;
    bool is_build_id_Valid() const;

    QString getBuildName() const;
    void setBuildName(const QString &build_name);
    bool is_build_name_Set() const;
    bool is_build_name_Valid() const;

    QString getBuildServiceAccount() const;
    void setBuildServiceAccount(const QString &build_service_account);
    bool is_build_service_account_Set() const;
    bool is_build_service_account_Valid() const;

    QString getBuildWorkerPool() const;
    void setBuildWorkerPool(const QString &build_worker_pool);
    bool is_build_worker_pool_Set() const;
    bool is_build_worker_pool_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDockerRegistry() const;
    void setDockerRegistry(const QString &docker_registry);
    bool is_docker_registry_Set() const;
    bool is_docker_registry_Valid() const;

    QString getDockerRepository() const;
    void setDockerRepository(const QString &docker_repository);
    bool is_docker_repository_Set() const;
    bool is_docker_repository_Valid() const;

    QString getEntryPoint() const;
    void setEntryPoint(const QString &entry_point);
    bool is_entry_point_Set() const;
    bool is_entry_point_Valid() const;

    QMap<QString, QString> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QMap<QString, QString> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    OAIEventTrigger getEventTrigger() const;
    void setEventTrigger(const OAIEventTrigger &event_trigger);
    bool is_event_trigger_Set() const;
    bool is_event_trigger_Valid() const;

    OAIHttpsTrigger getHttpsTrigger() const;
    void setHttpsTrigger(const OAIHttpsTrigger &https_trigger);
    bool is_https_trigger_Set() const;
    bool is_https_trigger_Valid() const;

    QString getIngressSettings() const;
    void setIngressSettings(const QString &ingress_settings);
    bool is_ingress_settings_Set() const;
    bool is_ingress_settings_Valid() const;

    QString getKmsKeyName() const;
    void setKmsKeyName(const QString &kms_key_name);
    bool is_kms_key_name_Set() const;
    bool is_kms_key_name_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    qint32 getMaxInstances() const;
    void setMaxInstances(const qint32 &max_instances);
    bool is_max_instances_Set() const;
    bool is_max_instances_Valid() const;

    qint32 getMinInstances() const;
    void setMinInstances(const qint32 &min_instances);
    bool is_min_instances_Set() const;
    bool is_min_instances_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    Q_DECL_DEPRECATED QString getNetwork() const;
    Q_DECL_DEPRECATED void setNetwork(const QString &network);
    Q_DECL_DEPRECATED bool is_network_Set() const;
    Q_DECL_DEPRECATED bool is_network_Valid() const;

    OAIOnDeployUpdatePolicy getOnDeployUpdatePolicy() const;
    void setOnDeployUpdatePolicy(const OAIOnDeployUpdatePolicy &on_deploy_update_policy);
    bool is_on_deploy_update_policy_Set() const;
    bool is_on_deploy_update_policy_Valid() const;

    QString getRuntime() const;
    void setRuntime(const QString &runtime);
    bool is_runtime_Set() const;
    bool is_runtime_Valid() const;

    QList<OAISecretEnvVar> getSecretEnvironmentVariables() const;
    void setSecretEnvironmentVariables(const QList<OAISecretEnvVar> &secret_environment_variables);
    bool is_secret_environment_variables_Set() const;
    bool is_secret_environment_variables_Valid() const;

    QList<OAISecretVolume> getSecretVolumes() const;
    void setSecretVolumes(const QList<OAISecretVolume> &secret_volumes);
    bool is_secret_volumes_Set() const;
    bool is_secret_volumes_Valid() const;

    QString getServiceAccountEmail() const;
    void setServiceAccountEmail(const QString &service_account_email);
    bool is_service_account_email_Set() const;
    bool is_service_account_email_Valid() const;

    QString getSourceArchiveUrl() const;
    void setSourceArchiveUrl(const QString &source_archive_url);
    bool is_source_archive_url_Set() const;
    bool is_source_archive_url_Valid() const;

    OAISourceRepository getSourceRepository() const;
    void setSourceRepository(const OAISourceRepository &source_repository);
    bool is_source_repository_Set() const;
    bool is_source_repository_Valid() const;

    QString getSourceToken() const;
    void setSourceToken(const QString &source_token);
    bool is_source_token_Set() const;
    bool is_source_token_Valid() const;

    QString getSourceUploadUrl() const;
    void setSourceUploadUrl(const QString &source_upload_url);
    bool is_source_upload_url_Set() const;
    bool is_source_upload_url_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTimeout() const;
    void setTimeout(const QString &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QString getVersionId() const;
    void setVersionId(const QString &version_id);
    bool is_version_id_Set() const;
    bool is_version_id_Valid() const;

    QString getVpcConnector() const;
    void setVpcConnector(const QString &vpc_connector);
    bool is_vpc_connector_Set() const;
    bool is_vpc_connector_Valid() const;

    QString getVpcConnectorEgressSettings() const;
    void setVpcConnectorEgressSettings(const QString &vpc_connector_egress_settings);
    bool is_vpc_connector_egress_settings_Set() const;
    bool is_vpc_connector_egress_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_automatic_update_policy;
    bool m_automatic_update_policy_isSet;
    bool m_automatic_update_policy_isValid;

    qint32 m_available_memory_mb;
    bool m_available_memory_mb_isSet;
    bool m_available_memory_mb_isValid;

    QMap<QString, QString> m_build_environment_variables;
    bool m_build_environment_variables_isSet;
    bool m_build_environment_variables_isValid;

    QString m_build_id;
    bool m_build_id_isSet;
    bool m_build_id_isValid;

    QString m_build_name;
    bool m_build_name_isSet;
    bool m_build_name_isValid;

    QString m_build_service_account;
    bool m_build_service_account_isSet;
    bool m_build_service_account_isValid;

    QString m_build_worker_pool;
    bool m_build_worker_pool_isSet;
    bool m_build_worker_pool_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_docker_registry;
    bool m_docker_registry_isSet;
    bool m_docker_registry_isValid;

    QString m_docker_repository;
    bool m_docker_repository_isSet;
    bool m_docker_repository_isValid;

    QString m_entry_point;
    bool m_entry_point_isSet;
    bool m_entry_point_isValid;

    QMap<QString, QString> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    OAIEventTrigger m_event_trigger;
    bool m_event_trigger_isSet;
    bool m_event_trigger_isValid;

    OAIHttpsTrigger m_https_trigger;
    bool m_https_trigger_isSet;
    bool m_https_trigger_isValid;

    QString m_ingress_settings;
    bool m_ingress_settings_isSet;
    bool m_ingress_settings_isValid;

    QString m_kms_key_name;
    bool m_kms_key_name_isSet;
    bool m_kms_key_name_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    qint32 m_max_instances;
    bool m_max_instances_isSet;
    bool m_max_instances_isValid;

    qint32 m_min_instances;
    bool m_min_instances_isSet;
    bool m_min_instances_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    OAIOnDeployUpdatePolicy m_on_deploy_update_policy;
    bool m_on_deploy_update_policy_isSet;
    bool m_on_deploy_update_policy_isValid;

    QString m_runtime;
    bool m_runtime_isSet;
    bool m_runtime_isValid;

    QList<OAISecretEnvVar> m_secret_environment_variables;
    bool m_secret_environment_variables_isSet;
    bool m_secret_environment_variables_isValid;

    QList<OAISecretVolume> m_secret_volumes;
    bool m_secret_volumes_isSet;
    bool m_secret_volumes_isValid;

    QString m_service_account_email;
    bool m_service_account_email_isSet;
    bool m_service_account_email_isValid;

    QString m_source_archive_url;
    bool m_source_archive_url_isSet;
    bool m_source_archive_url_isValid;

    OAISourceRepository m_source_repository;
    bool m_source_repository_isSet;
    bool m_source_repository_isValid;

    QString m_source_token;
    bool m_source_token_isSet;
    bool m_source_token_isValid;

    QString m_source_upload_url;
    bool m_source_upload_url_isSet;
    bool m_source_upload_url_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QString m_version_id;
    bool m_version_id_isSet;
    bool m_version_id_isValid;

    QString m_vpc_connector;
    bool m_vpc_connector_isSet;
    bool m_vpc_connector_isValid;

    QString m_vpc_connector_egress_settings;
    bool m_vpc_connector_egress_settings_isSet;
    bool m_vpc_connector_egress_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudFunction)

#endif // OAICloudFunction_H
