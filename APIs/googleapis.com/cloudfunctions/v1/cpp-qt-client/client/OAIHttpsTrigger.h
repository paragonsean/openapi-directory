/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHttpsTrigger.h
 *
 * Describes HttpsTrigger, could be used to connect web hooks to function.
 */

#ifndef OAIHttpsTrigger_H
#define OAIHttpsTrigger_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHttpsTrigger : public OAIObject {
public:
    OAIHttpsTrigger();
    OAIHttpsTrigger(QString json);
    ~OAIHttpsTrigger() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSecurityLevel() const;
    void setSecurityLevel(const QString &security_level);
    bool is_security_level_Set() const;
    bool is_security_level_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_security_level;
    bool m_security_level_isSet;
    bool m_security_level_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHttpsTrigger)

#endif // OAIHttpsTrigger_H
