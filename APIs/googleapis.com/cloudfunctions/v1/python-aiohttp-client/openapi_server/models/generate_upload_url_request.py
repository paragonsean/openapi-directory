# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GenerateUploadUrlRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kms_key_name: str=None):
        """GenerateUploadUrlRequest - a model defined in OpenAPI

        :param kms_key_name: The kms_key_name of this GenerateUploadUrlRequest.
        """
        self.openapi_types = {
            'kms_key_name': str
        }

        self.attribute_map = {
            'kms_key_name': 'kmsKeyName'
        }

        self._kms_key_name = kms_key_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateUploadUrlRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateUploadUrlRequest of this GenerateUploadUrlRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kms_key_name(self):
        """Gets the kms_key_name of this GenerateUploadUrlRequest.

        Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function source code objects in intermediate Cloud Storage buckets. When you generate an upload url and upload your source code, it gets copied to an intermediate Cloud Storage bucket. The source code is then copied to a versioned directory in the sources bucket in the consumer project during the function deployment. It must match the pattern `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`. The Google Cloud Functions service account (service-{project_number}@gcf-admin-robot.iam.gserviceaccount.com) must be granted the role 'Cloud KMS CryptoKey Encrypter/Decrypter (roles/cloudkms.cryptoKeyEncrypterDecrypter)' on the Key/KeyRing/Project/Organization (least access preferred). GCF will delegate access to the Google Storage service account in the internal project.

        :return: The kms_key_name of this GenerateUploadUrlRequest.
        :rtype: str
        """
        return self._kms_key_name

    @kms_key_name.setter
    def kms_key_name(self, kms_key_name):
        """Sets the kms_key_name of this GenerateUploadUrlRequest.

        Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function source code objects in intermediate Cloud Storage buckets. When you generate an upload url and upload your source code, it gets copied to an intermediate Cloud Storage bucket. The source code is then copied to a versioned directory in the sources bucket in the consumer project during the function deployment. It must match the pattern `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`. The Google Cloud Functions service account (service-{project_number}@gcf-admin-robot.iam.gserviceaccount.com) must be granted the role 'Cloud KMS CryptoKey Encrypter/Decrypter (roles/cloudkms.cryptoKeyEncrypterDecrypter)' on the Key/KeyRing/Project/Organization (least access preferred). GCF will delegate access to the Google Storage service account in the internal project.

        :param kms_key_name: The kms_key_name of this GenerateUploadUrlRequest.
        :type kms_key_name: str
        """

        self._kms_key_name = kms_key_name
