# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repo_source import RepoSource
from openapi_server.models.storage_source import StorageSource
from openapi_server import util


class Source(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, git_uri: str=None, repo_source: RepoSource=None, storage_source: StorageSource=None):
        """Source - a model defined in OpenAPI

        :param git_uri: The git_uri of this Source.
        :param repo_source: The repo_source of this Source.
        :param storage_source: The storage_source of this Source.
        """
        self.openapi_types = {
            'git_uri': str,
            'repo_source': RepoSource,
            'storage_source': StorageSource
        }

        self.attribute_map = {
            'git_uri': 'gitUri',
            'repo_source': 'repoSource',
            'storage_source': 'storageSource'
        }

        self._git_uri = git_uri
        self._repo_source = repo_source
        self._storage_source = storage_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Source':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Source of this Source.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def git_uri(self):
        """Gets the git_uri of this Source.

        If provided, get the source from GitHub repository. This option is valid only for GCF 1st Gen function. Example: https://github.com///blob//

        :return: The git_uri of this Source.
        :rtype: str
        """
        return self._git_uri

    @git_uri.setter
    def git_uri(self, git_uri):
        """Sets the git_uri of this Source.

        If provided, get the source from GitHub repository. This option is valid only for GCF 1st Gen function. Example: https://github.com///blob//

        :param git_uri: The git_uri of this Source.
        :type git_uri: str
        """

        self._git_uri = git_uri

    @property
    def repo_source(self):
        """Gets the repo_source of this Source.


        :return: The repo_source of this Source.
        :rtype: RepoSource
        """
        return self._repo_source

    @repo_source.setter
    def repo_source(self, repo_source):
        """Sets the repo_source of this Source.


        :param repo_source: The repo_source of this Source.
        :type repo_source: RepoSource
        """

        self._repo_source = repo_source

    @property
    def storage_source(self):
        """Gets the storage_source of this Source.


        :return: The storage_source of this Source.
        :rtype: StorageSource
        """
        return self._storage_source

    @storage_source.setter
    def storage_source(self, storage_source):
        """Sets the storage_source of this Source.


        :param storage_source: The storage_source of this Source.
        :type storage_source: StorageSource
        """

        self._storage_source = storage_source
