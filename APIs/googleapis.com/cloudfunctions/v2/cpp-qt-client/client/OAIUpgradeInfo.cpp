/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpgradeInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpgradeInfo::OAIUpgradeInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpgradeInfo::OAIUpgradeInfo() {
    this->initializeModel();
}

OAIUpgradeInfo::~OAIUpgradeInfo() {}

void OAIUpgradeInfo::initializeModel() {

    m_build_config_isSet = false;
    m_build_config_isValid = false;

    m_event_trigger_isSet = false;
    m_event_trigger_isValid = false;

    m_service_config_isSet = false;
    m_service_config_isValid = false;

    m_upgrade_state_isSet = false;
    m_upgrade_state_isValid = false;
}

void OAIUpgradeInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpgradeInfo::fromJsonObject(QJsonObject json) {

    m_build_config_isValid = ::OpenAPI::fromJsonValue(m_build_config, json[QString("buildConfig")]);
    m_build_config_isSet = !json[QString("buildConfig")].isNull() && m_build_config_isValid;

    m_event_trigger_isValid = ::OpenAPI::fromJsonValue(m_event_trigger, json[QString("eventTrigger")]);
    m_event_trigger_isSet = !json[QString("eventTrigger")].isNull() && m_event_trigger_isValid;

    m_service_config_isValid = ::OpenAPI::fromJsonValue(m_service_config, json[QString("serviceConfig")]);
    m_service_config_isSet = !json[QString("serviceConfig")].isNull() && m_service_config_isValid;

    m_upgrade_state_isValid = ::OpenAPI::fromJsonValue(m_upgrade_state, json[QString("upgradeState")]);
    m_upgrade_state_isSet = !json[QString("upgradeState")].isNull() && m_upgrade_state_isValid;
}

QString OAIUpgradeInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpgradeInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_build_config.isSet()) {
        obj.insert(QString("buildConfig"), ::OpenAPI::toJsonValue(m_build_config));
    }
    if (m_event_trigger.isSet()) {
        obj.insert(QString("eventTrigger"), ::OpenAPI::toJsonValue(m_event_trigger));
    }
    if (m_service_config.isSet()) {
        obj.insert(QString("serviceConfig"), ::OpenAPI::toJsonValue(m_service_config));
    }
    if (m_upgrade_state_isSet) {
        obj.insert(QString("upgradeState"), ::OpenAPI::toJsonValue(m_upgrade_state));
    }
    return obj;
}

OAIBuildConfig OAIUpgradeInfo::getBuildConfig() const {
    return m_build_config;
}
void OAIUpgradeInfo::setBuildConfig(const OAIBuildConfig &build_config) {
    m_build_config = build_config;
    m_build_config_isSet = true;
}

bool OAIUpgradeInfo::is_build_config_Set() const{
    return m_build_config_isSet;
}

bool OAIUpgradeInfo::is_build_config_Valid() const{
    return m_build_config_isValid;
}

OAIEventTrigger OAIUpgradeInfo::getEventTrigger() const {
    return m_event_trigger;
}
void OAIUpgradeInfo::setEventTrigger(const OAIEventTrigger &event_trigger) {
    m_event_trigger = event_trigger;
    m_event_trigger_isSet = true;
}

bool OAIUpgradeInfo::is_event_trigger_Set() const{
    return m_event_trigger_isSet;
}

bool OAIUpgradeInfo::is_event_trigger_Valid() const{
    return m_event_trigger_isValid;
}

OAIServiceConfig OAIUpgradeInfo::getServiceConfig() const {
    return m_service_config;
}
void OAIUpgradeInfo::setServiceConfig(const OAIServiceConfig &service_config) {
    m_service_config = service_config;
    m_service_config_isSet = true;
}

bool OAIUpgradeInfo::is_service_config_Set() const{
    return m_service_config_isSet;
}

bool OAIUpgradeInfo::is_service_config_Valid() const{
    return m_service_config_isValid;
}

QString OAIUpgradeInfo::getUpgradeState() const {
    return m_upgrade_state;
}
void OAIUpgradeInfo::setUpgradeState(const QString &upgrade_state) {
    m_upgrade_state = upgrade_state;
    m_upgrade_state_isSet = true;
}

bool OAIUpgradeInfo::is_upgrade_state_Set() const{
    return m_upgrade_state_isSet;
}

bool OAIUpgradeInfo::is_upgrade_state_Valid() const{
    return m_upgrade_state_isValid;
}

bool OAIUpgradeInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_build_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_trigger.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_upgrade_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpgradeInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
