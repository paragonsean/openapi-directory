/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceProvenance.h
 *
 * Provenance of the source. Ways to find the original source, or verify that some source was used for this build.
 */

#ifndef OAISourceProvenance_H
#define OAISourceProvenance_H

#include <QJsonObject>

#include "OAIRepoSource.h"
#include "OAIStorageSource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRepoSource;
class OAIStorageSource;

class OAISourceProvenance : public OAIObject {
public:
    OAISourceProvenance();
    OAISourceProvenance(QString json);
    ~OAISourceProvenance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGitUri() const;
    void setGitUri(const QString &git_uri);
    bool is_git_uri_Set() const;
    bool is_git_uri_Valid() const;

    OAIRepoSource getResolvedRepoSource() const;
    void setResolvedRepoSource(const OAIRepoSource &resolved_repo_source);
    bool is_resolved_repo_source_Set() const;
    bool is_resolved_repo_source_Valid() const;

    OAIStorageSource getResolvedStorageSource() const;
    void setResolvedStorageSource(const OAIStorageSource &resolved_storage_source);
    bool is_resolved_storage_source_Set() const;
    bool is_resolved_storage_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_git_uri;
    bool m_git_uri_isSet;
    bool m_git_uri_isValid;

    OAIRepoSource m_resolved_repo_source;
    bool m_resolved_repo_source_isSet;
    bool m_resolved_repo_source_isValid;

    OAIStorageSource m_resolved_storage_source;
    bool m_resolved_storage_source_isSet;
    bool m_resolved_storage_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceProvenance)

#endif // OAISourceProvenance_H
