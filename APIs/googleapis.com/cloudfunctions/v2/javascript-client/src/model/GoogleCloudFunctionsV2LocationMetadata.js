/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudFunctionsV2LocationMetadata model module.
 * @module model/GoogleCloudFunctionsV2LocationMetadata
 * @version v2
 */
class GoogleCloudFunctionsV2LocationMetadata {
    /**
     * Constructs a new <code>GoogleCloudFunctionsV2LocationMetadata</code>.
     * Extra GCF specific location information.
     * @alias module:model/GoogleCloudFunctionsV2LocationMetadata
     */
    constructor() { 
        
        GoogleCloudFunctionsV2LocationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudFunctionsV2LocationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudFunctionsV2LocationMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudFunctionsV2LocationMetadata} The populated <code>GoogleCloudFunctionsV2LocationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudFunctionsV2LocationMetadata();

            if (data.hasOwnProperty('environments')) {
                obj['environments'] = ApiClient.convertToType(data['environments'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudFunctionsV2LocationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudFunctionsV2LocationMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['environments'])) {
            throw new Error("Expected the field `environments` to be an array in the JSON data but got " + data['environments']);
        }

        return true;
    }


}



/**
 * The Cloud Function environments this location supports.
 * @member {Array.<module:model/GoogleCloudFunctionsV2LocationMetadata.EnvironmentsEnum>} environments
 */
GoogleCloudFunctionsV2LocationMetadata.prototype['environments'] = undefined;





/**
 * Allowed values for the <code>environments</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudFunctionsV2LocationMetadata['EnvironmentsEnum'] = {

    /**
     * value: "ENVIRONMENT_UNSPECIFIED"
     * @const
     */
    "ENVIRONMENT_UNSPECIFIED": "ENVIRONMENT_UNSPECIFIED",

    /**
     * value: "GEN_1"
     * @const
     */
    "GEN_1": "GEN_1",

    /**
     * value: "GEN_2"
     * @const
     */
    "GEN_2": "GEN_2"
};



export default GoogleCloudFunctionsV2LocationMetadata;

