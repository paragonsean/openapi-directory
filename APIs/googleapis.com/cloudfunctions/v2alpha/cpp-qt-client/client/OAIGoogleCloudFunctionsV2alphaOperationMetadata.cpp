/**
 * Cloud Functions API
 * Manages lightweight user-provided functions executed in response to events.
 *
 * The version of the OpenAPI document: v2alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudFunctionsV2alphaOperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudFunctionsV2alphaOperationMetadata::OAIGoogleCloudFunctionsV2alphaOperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudFunctionsV2alphaOperationMetadata::OAIGoogleCloudFunctionsV2alphaOperationMetadata() {
    this->initializeModel();
}

OAIGoogleCloudFunctionsV2alphaOperationMetadata::~OAIGoogleCloudFunctionsV2alphaOperationMetadata() {}

void OAIGoogleCloudFunctionsV2alphaOperationMetadata::initializeModel() {

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_cancel_requested_isSet = false;
    m_cancel_requested_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_operation_type_isSet = false;
    m_operation_type_isValid = false;

    m_request_resource_isSet = false;
    m_request_resource_isValid = false;

    m_source_token_isSet = false;
    m_source_token_isValid = false;

    m_stages_isSet = false;
    m_stages_isValid = false;

    m_status_detail_isSet = false;
    m_status_detail_isValid = false;

    m_target_isSet = false;
    m_target_isValid = false;

    m_verb_isSet = false;
    m_verb_isValid = false;
}

void OAIGoogleCloudFunctionsV2alphaOperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudFunctionsV2alphaOperationMetadata::fromJsonObject(QJsonObject json) {

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("apiVersion")]);
    m_api_version_isSet = !json[QString("apiVersion")].isNull() && m_api_version_isValid;

    m_cancel_requested_isValid = ::OpenAPI::fromJsonValue(m_cancel_requested, json[QString("cancelRequested")]);
    m_cancel_requested_isSet = !json[QString("cancelRequested")].isNull() && m_cancel_requested_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_operation_type_isValid = ::OpenAPI::fromJsonValue(m_operation_type, json[QString("operationType")]);
    m_operation_type_isSet = !json[QString("operationType")].isNull() && m_operation_type_isValid;

    m_request_resource_isValid = ::OpenAPI::fromJsonValue(m_request_resource, json[QString("requestResource")]);
    m_request_resource_isSet = !json[QString("requestResource")].isNull() && m_request_resource_isValid;

    m_source_token_isValid = ::OpenAPI::fromJsonValue(m_source_token, json[QString("sourceToken")]);
    m_source_token_isSet = !json[QString("sourceToken")].isNull() && m_source_token_isValid;

    m_stages_isValid = ::OpenAPI::fromJsonValue(m_stages, json[QString("stages")]);
    m_stages_isSet = !json[QString("stages")].isNull() && m_stages_isValid;

    m_status_detail_isValid = ::OpenAPI::fromJsonValue(m_status_detail, json[QString("statusDetail")]);
    m_status_detail_isSet = !json[QString("statusDetail")].isNull() && m_status_detail_isValid;

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("target")]);
    m_target_isSet = !json[QString("target")].isNull() && m_target_isValid;

    m_verb_isValid = ::OpenAPI::fromJsonValue(m_verb, json[QString("verb")]);
    m_verb_isSet = !json[QString("verb")].isNull() && m_verb_isValid;
}

QString OAIGoogleCloudFunctionsV2alphaOperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudFunctionsV2alphaOperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_api_version_isSet) {
        obj.insert(QString("apiVersion"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_cancel_requested_isSet) {
        obj.insert(QString("cancelRequested"), ::OpenAPI::toJsonValue(m_cancel_requested));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_operation_type_isSet) {
        obj.insert(QString("operationType"), ::OpenAPI::toJsonValue(m_operation_type));
    }
    if (m_request_resource.size() > 0) {
        obj.insert(QString("requestResource"), ::OpenAPI::toJsonValue(m_request_resource));
    }
    if (m_source_token_isSet) {
        obj.insert(QString("sourceToken"), ::OpenAPI::toJsonValue(m_source_token));
    }
    if (m_stages.size() > 0) {
        obj.insert(QString("stages"), ::OpenAPI::toJsonValue(m_stages));
    }
    if (m_status_detail_isSet) {
        obj.insert(QString("statusDetail"), ::OpenAPI::toJsonValue(m_status_detail));
    }
    if (m_target_isSet) {
        obj.insert(QString("target"), ::OpenAPI::toJsonValue(m_target));
    }
    if (m_verb_isSet) {
        obj.insert(QString("verb"), ::OpenAPI::toJsonValue(m_verb));
    }
    return obj;
}

QString OAIGoogleCloudFunctionsV2alphaOperationMetadata::getApiVersion() const {
    return m_api_version;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_api_version_Valid() const{
    return m_api_version_isValid;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::isCancelRequested() const {
    return m_cancel_requested;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setCancelRequested(const bool &cancel_requested) {
    m_cancel_requested = cancel_requested;
    m_cancel_requested_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_cancel_requested_Set() const{
    return m_cancel_requested_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_cancel_requested_Valid() const{
    return m_cancel_requested_isValid;
}

QString OAIGoogleCloudFunctionsV2alphaOperationMetadata::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudFunctionsV2alphaOperationMetadata::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudFunctionsV2alphaOperationMetadata::getOperationType() const {
    return m_operation_type;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setOperationType(const QString &operation_type) {
    m_operation_type = operation_type;
    m_operation_type_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_operation_type_Set() const{
    return m_operation_type_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_operation_type_Valid() const{
    return m_operation_type_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudFunctionsV2alphaOperationMetadata::getRequestResource() const {
    return m_request_resource;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setRequestResource(const QMap<QString, QJsonValue> &request_resource) {
    m_request_resource = request_resource;
    m_request_resource_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_request_resource_Set() const{
    return m_request_resource_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_request_resource_Valid() const{
    return m_request_resource_isValid;
}

QString OAIGoogleCloudFunctionsV2alphaOperationMetadata::getSourceToken() const {
    return m_source_token;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setSourceToken(const QString &source_token) {
    m_source_token = source_token;
    m_source_token_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_source_token_Set() const{
    return m_source_token_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_source_token_Valid() const{
    return m_source_token_isValid;
}

QList<OAIGoogleCloudFunctionsV2alphaStage> OAIGoogleCloudFunctionsV2alphaOperationMetadata::getStages() const {
    return m_stages;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setStages(const QList<OAIGoogleCloudFunctionsV2alphaStage> &stages) {
    m_stages = stages;
    m_stages_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_stages_Set() const{
    return m_stages_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_stages_Valid() const{
    return m_stages_isValid;
}

QString OAIGoogleCloudFunctionsV2alphaOperationMetadata::getStatusDetail() const {
    return m_status_detail;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setStatusDetail(const QString &status_detail) {
    m_status_detail = status_detail;
    m_status_detail_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_status_detail_Set() const{
    return m_status_detail_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_status_detail_Valid() const{
    return m_status_detail_isValid;
}

QString OAIGoogleCloudFunctionsV2alphaOperationMetadata::getTarget() const {
    return m_target;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setTarget(const QString &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_target_Set() const{
    return m_target_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_target_Valid() const{
    return m_target_isValid;
}

QString OAIGoogleCloudFunctionsV2alphaOperationMetadata::getVerb() const {
    return m_verb;
}
void OAIGoogleCloudFunctionsV2alphaOperationMetadata::setVerb(const QString &verb) {
    m_verb = verb;
    m_verb_isSet = true;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_verb_Set() const{
    return m_verb_isSet;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::is_verb_Valid() const{
    return m_verb_isValid;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancel_requested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_resource.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verb_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudFunctionsV2alphaOperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
