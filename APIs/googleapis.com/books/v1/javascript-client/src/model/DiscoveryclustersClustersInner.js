/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiscoveryclustersClustersInnerBannerWithContentContainer from './DiscoveryclustersClustersInnerBannerWithContentContainer';
import Volume from './Volume';

/**
 * The DiscoveryclustersClustersInner model module.
 * @module model/DiscoveryclustersClustersInner
 * @version v1
 */
class DiscoveryclustersClustersInner {
    /**
     * Constructs a new <code>DiscoveryclustersClustersInner</code>.
     * @alias module:model/DiscoveryclustersClustersInner
     */
    constructor() { 
        
        DiscoveryclustersClustersInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiscoveryclustersClustersInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiscoveryclustersClustersInner} obj Optional instance to populate.
     * @return {module:model/DiscoveryclustersClustersInner} The populated <code>DiscoveryclustersClustersInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiscoveryclustersClustersInner();

            if (data.hasOwnProperty('banner_with_content_container')) {
                obj['banner_with_content_container'] = DiscoveryclustersClustersInnerBannerWithContentContainer.constructFromObject(data['banner_with_content_container']);
            }
            if (data.hasOwnProperty('subTitle')) {
                obj['subTitle'] = ApiClient.convertToType(data['subTitle'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('totalVolumes')) {
                obj['totalVolumes'] = ApiClient.convertToType(data['totalVolumes'], 'Number');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('volumes')) {
                obj['volumes'] = ApiClient.convertToType(data['volumes'], [Volume]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiscoveryclustersClustersInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiscoveryclustersClustersInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `banner_with_content_container`
        if (data['banner_with_content_container']) { // data not null
          DiscoveryclustersClustersInnerBannerWithContentContainer.validateJSON(data['banner_with_content_container']);
        }
        // ensure the json data is a string
        if (data['subTitle'] && !(typeof data['subTitle'] === 'string' || data['subTitle'] instanceof String)) {
            throw new Error("Expected the field `subTitle` to be a primitive type in the JSON string but got " + data['subTitle']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        if (data['volumes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['volumes'])) {
                throw new Error("Expected the field `volumes` to be an array in the JSON data but got " + data['volumes']);
            }
            // validate the optional field `volumes` (array)
            for (const item of data['volumes']) {
                Volume.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/DiscoveryclustersClustersInnerBannerWithContentContainer} banner_with_content_container
 */
DiscoveryclustersClustersInner.prototype['banner_with_content_container'] = undefined;

/**
 * @member {String} subTitle
 */
DiscoveryclustersClustersInner.prototype['subTitle'] = undefined;

/**
 * @member {String} title
 */
DiscoveryclustersClustersInner.prototype['title'] = undefined;

/**
 * @member {Number} totalVolumes
 */
DiscoveryclustersClustersInner.prototype['totalVolumes'] = undefined;

/**
 * @member {String} uid
 */
DiscoveryclustersClustersInner.prototype['uid'] = undefined;

/**
 * @member {Array.<module:model/Volume>} volumes
 */
DiscoveryclustersClustersInner.prototype['volumes'] = undefined;






export default DiscoveryclustersClustersInner;

