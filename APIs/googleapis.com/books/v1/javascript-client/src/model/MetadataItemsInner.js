/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetadataItemsInner model module.
 * @module model/MetadataItemsInner
 * @version v1
 */
class MetadataItemsInner {
    /**
     * Constructs a new <code>MetadataItemsInner</code>.
     * @alias module:model/MetadataItemsInner
     */
    constructor() { 
        
        MetadataItemsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MetadataItemsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetadataItemsInner} obj Optional instance to populate.
     * @return {module:model/MetadataItemsInner} The populated <code>MetadataItemsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetadataItemsInner();

            if (data.hasOwnProperty('download_url')) {
                obj['download_url'] = ApiClient.convertToType(data['download_url'], 'String');
            }
            if (data.hasOwnProperty('encrypted_key')) {
                obj['encrypted_key'] = ApiClient.convertToType(data['encrypted_key'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MetadataItemsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MetadataItemsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['download_url'] && !(typeof data['download_url'] === 'string' || data['download_url'] instanceof String)) {
            throw new Error("Expected the field `download_url` to be a primitive type in the JSON string but got " + data['download_url']);
        }
        // ensure the json data is a string
        if (data['encrypted_key'] && !(typeof data['encrypted_key'] === 'string' || data['encrypted_key'] instanceof String)) {
            throw new Error("Expected the field `encrypted_key` to be a primitive type in the JSON string but got " + data['encrypted_key']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * @member {String} download_url
 */
MetadataItemsInner.prototype['download_url'] = undefined;

/**
 * @member {String} encrypted_key
 */
MetadataItemsInner.prototype['encrypted_key'] = undefined;

/**
 * @member {String} language
 */
MetadataItemsInner.prototype['language'] = undefined;

/**
 * @member {String} size
 */
MetadataItemsInner.prototype['size'] = undefined;

/**
 * @member {String} version
 */
MetadataItemsInner.prototype['version'] = undefined;






export default MetadataItemsInner;

