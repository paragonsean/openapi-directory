/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DictlayerdataDictWordsInnerDerivativesInner from './DictlayerdataDictWordsInnerDerivativesInner';
import DictlayerdataDictWordsInnerSensesInner from './DictlayerdataDictWordsInnerSensesInner';
import DictlayerdataDictWordsInnerSource from './DictlayerdataDictWordsInnerSource';

/**
 * The DictlayerdataDictWordsInner model module.
 * @module model/DictlayerdataDictWordsInner
 * @version v1
 */
class DictlayerdataDictWordsInner {
    /**
     * Constructs a new <code>DictlayerdataDictWordsInner</code>.
     * @alias module:model/DictlayerdataDictWordsInner
     */
    constructor() { 
        
        DictlayerdataDictWordsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DictlayerdataDictWordsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DictlayerdataDictWordsInner} obj Optional instance to populate.
     * @return {module:model/DictlayerdataDictWordsInner} The populated <code>DictlayerdataDictWordsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DictlayerdataDictWordsInner();

            if (data.hasOwnProperty('derivatives')) {
                obj['derivatives'] = ApiClient.convertToType(data['derivatives'], [DictlayerdataDictWordsInnerDerivativesInner]);
            }
            if (data.hasOwnProperty('examples')) {
                obj['examples'] = ApiClient.convertToType(data['examples'], [DictlayerdataDictWordsInnerDerivativesInner]);
            }
            if (data.hasOwnProperty('senses')) {
                obj['senses'] = ApiClient.convertToType(data['senses'], [DictlayerdataDictWordsInnerSensesInner]);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = DictlayerdataDictWordsInnerSource.constructFromObject(data['source']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DictlayerdataDictWordsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DictlayerdataDictWordsInner</code>.
     */
    static validateJSON(data) {
        if (data['derivatives']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['derivatives'])) {
                throw new Error("Expected the field `derivatives` to be an array in the JSON data but got " + data['derivatives']);
            }
            // validate the optional field `derivatives` (array)
            for (const item of data['derivatives']) {
                DictlayerdataDictWordsInnerDerivativesInner.validateJSON(item);
            };
        }
        if (data['examples']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['examples'])) {
                throw new Error("Expected the field `examples` to be an array in the JSON data but got " + data['examples']);
            }
            // validate the optional field `examples` (array)
            for (const item of data['examples']) {
                DictlayerdataDictWordsInnerDerivativesInner.validateJSON(item);
            };
        }
        if (data['senses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['senses'])) {
                throw new Error("Expected the field `senses` to be an array in the JSON data but got " + data['senses']);
            }
            // validate the optional field `senses` (array)
            for (const item of data['senses']) {
                DictlayerdataDictWordsInnerSensesInner.validateJSON(item);
            };
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          DictlayerdataDictWordsInnerSource.validateJSON(data['source']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/DictlayerdataDictWordsInnerDerivativesInner>} derivatives
 */
DictlayerdataDictWordsInner.prototype['derivatives'] = undefined;

/**
 * @member {Array.<module:model/DictlayerdataDictWordsInnerDerivativesInner>} examples
 */
DictlayerdataDictWordsInner.prototype['examples'] = undefined;

/**
 * @member {Array.<module:model/DictlayerdataDictWordsInnerSensesInner>} senses
 */
DictlayerdataDictWordsInner.prototype['senses'] = undefined;

/**
 * @member {module:model/DictlayerdataDictWordsInnerSource} source
 */
DictlayerdataDictWordsInner.prototype['source'] = undefined;






export default DictlayerdataDictWordsInner;

