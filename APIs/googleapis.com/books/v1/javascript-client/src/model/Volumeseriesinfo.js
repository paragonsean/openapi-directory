/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VolumeseriesinfoVolumeSeriesInner from './VolumeseriesinfoVolumeSeriesInner';

/**
 * The Volumeseriesinfo model module.
 * @module model/Volumeseriesinfo
 * @version v1
 */
class Volumeseriesinfo {
    /**
     * Constructs a new <code>Volumeseriesinfo</code>.
     * @alias module:model/Volumeseriesinfo
     */
    constructor() { 
        
        Volumeseriesinfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Volumeseriesinfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Volumeseriesinfo} obj Optional instance to populate.
     * @return {module:model/Volumeseriesinfo} The populated <code>Volumeseriesinfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Volumeseriesinfo();

            if (data.hasOwnProperty('bookDisplayNumber')) {
                obj['bookDisplayNumber'] = ApiClient.convertToType(data['bookDisplayNumber'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('shortSeriesBookTitle')) {
                obj['shortSeriesBookTitle'] = ApiClient.convertToType(data['shortSeriesBookTitle'], 'String');
            }
            if (data.hasOwnProperty('volumeSeries')) {
                obj['volumeSeries'] = ApiClient.convertToType(data['volumeSeries'], [VolumeseriesinfoVolumeSeriesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Volumeseriesinfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Volumeseriesinfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bookDisplayNumber'] && !(typeof data['bookDisplayNumber'] === 'string' || data['bookDisplayNumber'] instanceof String)) {
            throw new Error("Expected the field `bookDisplayNumber` to be a primitive type in the JSON string but got " + data['bookDisplayNumber']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['shortSeriesBookTitle'] && !(typeof data['shortSeriesBookTitle'] === 'string' || data['shortSeriesBookTitle'] instanceof String)) {
            throw new Error("Expected the field `shortSeriesBookTitle` to be a primitive type in the JSON string but got " + data['shortSeriesBookTitle']);
        }
        if (data['volumeSeries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['volumeSeries'])) {
                throw new Error("Expected the field `volumeSeries` to be an array in the JSON data but got " + data['volumeSeries']);
            }
            // validate the optional field `volumeSeries` (array)
            for (const item of data['volumeSeries']) {
                VolumeseriesinfoVolumeSeriesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.
 * @member {String} bookDisplayNumber
 */
Volumeseriesinfo.prototype['bookDisplayNumber'] = undefined;

/**
 * Resource type.
 * @member {String} kind
 */
Volumeseriesinfo.prototype['kind'] = undefined;

/**
 * Short book title in the context of the series.
 * @member {String} shortSeriesBookTitle
 */
Volumeseriesinfo.prototype['shortSeriesBookTitle'] = undefined;

/**
 * @member {Array.<module:model/VolumeseriesinfoVolumeSeriesInner>} volumeSeries
 */
Volumeseriesinfo.prototype['volumeSeries'] = undefined;






export default Volumeseriesinfo;

