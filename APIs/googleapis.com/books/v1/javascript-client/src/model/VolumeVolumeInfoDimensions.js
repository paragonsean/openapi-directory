/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VolumeVolumeInfoDimensions model module.
 * @module model/VolumeVolumeInfoDimensions
 * @version v1
 */
class VolumeVolumeInfoDimensions {
    /**
     * Constructs a new <code>VolumeVolumeInfoDimensions</code>.
     * Physical dimensions of this volume.
     * @alias module:model/VolumeVolumeInfoDimensions
     */
    constructor() { 
        
        VolumeVolumeInfoDimensions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VolumeVolumeInfoDimensions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VolumeVolumeInfoDimensions} obj Optional instance to populate.
     * @return {module:model/VolumeVolumeInfoDimensions} The populated <code>VolumeVolumeInfoDimensions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VolumeVolumeInfoDimensions();

            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'String');
            }
            if (data.hasOwnProperty('thickness')) {
                obj['thickness'] = ApiClient.convertToType(data['thickness'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VolumeVolumeInfoDimensions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VolumeVolumeInfoDimensions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['height'] && !(typeof data['height'] === 'string' || data['height'] instanceof String)) {
            throw new Error("Expected the field `height` to be a primitive type in the JSON string but got " + data['height']);
        }
        // ensure the json data is a string
        if (data['thickness'] && !(typeof data['thickness'] === 'string' || data['thickness'] instanceof String)) {
            throw new Error("Expected the field `thickness` to be a primitive type in the JSON string but got " + data['thickness']);
        }
        // ensure the json data is a string
        if (data['width'] && !(typeof data['width'] === 'string' || data['width'] instanceof String)) {
            throw new Error("Expected the field `width` to be a primitive type in the JSON string but got " + data['width']);
        }

        return true;
    }


}



/**
 * Height or length of this volume (in cm).
 * @member {String} height
 */
VolumeVolumeInfoDimensions.prototype['height'] = undefined;

/**
 * Thickness of this volume (in cm).
 * @member {String} thickness
 */
VolumeVolumeInfoDimensions.prototype['thickness'] = undefined;

/**
 * Width of this volume (in cm).
 * @member {String} width
 */
VolumeVolumeInfoDimensions.prototype['width'] = undefined;






export default VolumeVolumeInfoDimensions;

