/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DiscoveryclustersClustersInnerBannerWithContentContainer model module.
 * @module model/DiscoveryclustersClustersInnerBannerWithContentContainer
 * @version v1
 */
class DiscoveryclustersClustersInnerBannerWithContentContainer {
    /**
     * Constructs a new <code>DiscoveryclustersClustersInnerBannerWithContentContainer</code>.
     * @alias module:model/DiscoveryclustersClustersInnerBannerWithContentContainer
     */
    constructor() { 
        
        DiscoveryclustersClustersInnerBannerWithContentContainer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiscoveryclustersClustersInnerBannerWithContentContainer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiscoveryclustersClustersInnerBannerWithContentContainer} obj Optional instance to populate.
     * @return {module:model/DiscoveryclustersClustersInnerBannerWithContentContainer} The populated <code>DiscoveryclustersClustersInnerBannerWithContentContainer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiscoveryclustersClustersInnerBannerWithContentContainer();

            if (data.hasOwnProperty('fillColorArgb')) {
                obj['fillColorArgb'] = ApiClient.convertToType(data['fillColorArgb'], 'String');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('maskColorArgb')) {
                obj['maskColorArgb'] = ApiClient.convertToType(data['maskColorArgb'], 'String');
            }
            if (data.hasOwnProperty('moreButtonText')) {
                obj['moreButtonText'] = ApiClient.convertToType(data['moreButtonText'], 'String');
            }
            if (data.hasOwnProperty('moreButtonUrl')) {
                obj['moreButtonUrl'] = ApiClient.convertToType(data['moreButtonUrl'], 'String');
            }
            if (data.hasOwnProperty('textColorArgb')) {
                obj['textColorArgb'] = ApiClient.convertToType(data['textColorArgb'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiscoveryclustersClustersInnerBannerWithContentContainer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiscoveryclustersClustersInnerBannerWithContentContainer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fillColorArgb'] && !(typeof data['fillColorArgb'] === 'string' || data['fillColorArgb'] instanceof String)) {
            throw new Error("Expected the field `fillColorArgb` to be a primitive type in the JSON string but got " + data['fillColorArgb']);
        }
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['maskColorArgb'] && !(typeof data['maskColorArgb'] === 'string' || data['maskColorArgb'] instanceof String)) {
            throw new Error("Expected the field `maskColorArgb` to be a primitive type in the JSON string but got " + data['maskColorArgb']);
        }
        // ensure the json data is a string
        if (data['moreButtonText'] && !(typeof data['moreButtonText'] === 'string' || data['moreButtonText'] instanceof String)) {
            throw new Error("Expected the field `moreButtonText` to be a primitive type in the JSON string but got " + data['moreButtonText']);
        }
        // ensure the json data is a string
        if (data['moreButtonUrl'] && !(typeof data['moreButtonUrl'] === 'string' || data['moreButtonUrl'] instanceof String)) {
            throw new Error("Expected the field `moreButtonUrl` to be a primitive type in the JSON string but got " + data['moreButtonUrl']);
        }
        // ensure the json data is a string
        if (data['textColorArgb'] && !(typeof data['textColorArgb'] === 'string' || data['textColorArgb'] instanceof String)) {
            throw new Error("Expected the field `textColorArgb` to be a primitive type in the JSON string but got " + data['textColorArgb']);
        }

        return true;
    }


}



/**
 * @member {String} fillColorArgb
 */
DiscoveryclustersClustersInnerBannerWithContentContainer.prototype['fillColorArgb'] = undefined;

/**
 * @member {String} imageUrl
 */
DiscoveryclustersClustersInnerBannerWithContentContainer.prototype['imageUrl'] = undefined;

/**
 * @member {String} maskColorArgb
 */
DiscoveryclustersClustersInnerBannerWithContentContainer.prototype['maskColorArgb'] = undefined;

/**
 * @member {String} moreButtonText
 */
DiscoveryclustersClustersInnerBannerWithContentContainer.prototype['moreButtonText'] = undefined;

/**
 * @member {String} moreButtonUrl
 */
DiscoveryclustersClustersInnerBannerWithContentContainer.prototype['moreButtonUrl'] = undefined;

/**
 * @member {String} textColorArgb
 */
DiscoveryclustersClustersInnerBannerWithContentContainer.prototype['textColorArgb'] = undefined;






export default DiscoveryclustersClustersInnerBannerWithContentContainer;

