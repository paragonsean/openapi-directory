/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SeriesSeriesInnerSeriesSubscriptionReleaseInfo from './SeriesSeriesInnerSeriesSubscriptionReleaseInfo';

/**
 * The SeriesSeriesInner model module.
 * @module model/SeriesSeriesInner
 * @version v1
 */
class SeriesSeriesInner {
    /**
     * Constructs a new <code>SeriesSeriesInner</code>.
     * @alias module:model/SeriesSeriesInner
     */
    constructor() { 
        
        SeriesSeriesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SeriesSeriesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SeriesSeriesInner} obj Optional instance to populate.
     * @return {module:model/SeriesSeriesInner} The populated <code>SeriesSeriesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SeriesSeriesInner();

            if (data.hasOwnProperty('bannerImageUrl')) {
                obj['bannerImageUrl'] = ApiClient.convertToType(data['bannerImageUrl'], 'String');
            }
            if (data.hasOwnProperty('eligibleForSubscription')) {
                obj['eligibleForSubscription'] = ApiClient.convertToType(data['eligibleForSubscription'], 'Boolean');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('isComplete')) {
                obj['isComplete'] = ApiClient.convertToType(data['isComplete'], 'Boolean');
            }
            if (data.hasOwnProperty('seriesFormatType')) {
                obj['seriesFormatType'] = ApiClient.convertToType(data['seriesFormatType'], 'String');
            }
            if (data.hasOwnProperty('seriesId')) {
                obj['seriesId'] = ApiClient.convertToType(data['seriesId'], 'String');
            }
            if (data.hasOwnProperty('seriesSubscriptionReleaseInfo')) {
                obj['seriesSubscriptionReleaseInfo'] = SeriesSeriesInnerSeriesSubscriptionReleaseInfo.constructFromObject(data['seriesSubscriptionReleaseInfo']);
            }
            if (data.hasOwnProperty('seriesType')) {
                obj['seriesType'] = ApiClient.convertToType(data['seriesType'], 'String');
            }
            if (data.hasOwnProperty('subscriptionId')) {
                obj['subscriptionId'] = ApiClient.convertToType(data['subscriptionId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SeriesSeriesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SeriesSeriesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bannerImageUrl'] && !(typeof data['bannerImageUrl'] === 'string' || data['bannerImageUrl'] instanceof String)) {
            throw new Error("Expected the field `bannerImageUrl` to be a primitive type in the JSON string but got " + data['bannerImageUrl']);
        }
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['seriesFormatType'] && !(typeof data['seriesFormatType'] === 'string' || data['seriesFormatType'] instanceof String)) {
            throw new Error("Expected the field `seriesFormatType` to be a primitive type in the JSON string but got " + data['seriesFormatType']);
        }
        // ensure the json data is a string
        if (data['seriesId'] && !(typeof data['seriesId'] === 'string' || data['seriesId'] instanceof String)) {
            throw new Error("Expected the field `seriesId` to be a primitive type in the JSON string but got " + data['seriesId']);
        }
        // validate the optional field `seriesSubscriptionReleaseInfo`
        if (data['seriesSubscriptionReleaseInfo']) { // data not null
          SeriesSeriesInnerSeriesSubscriptionReleaseInfo.validateJSON(data['seriesSubscriptionReleaseInfo']);
        }
        // ensure the json data is a string
        if (data['seriesType'] && !(typeof data['seriesType'] === 'string' || data['seriesType'] instanceof String)) {
            throw new Error("Expected the field `seriesType` to be a primitive type in the JSON string but got " + data['seriesType']);
        }
        // ensure the json data is a string
        if (data['subscriptionId'] && !(typeof data['subscriptionId'] === 'string' || data['subscriptionId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionId` to be a primitive type in the JSON string but got " + data['subscriptionId']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {String} bannerImageUrl
 */
SeriesSeriesInner.prototype['bannerImageUrl'] = undefined;

/**
 * @member {Boolean} eligibleForSubscription
 */
SeriesSeriesInner.prototype['eligibleForSubscription'] = undefined;

/**
 * @member {String} imageUrl
 */
SeriesSeriesInner.prototype['imageUrl'] = undefined;

/**
 * @member {Boolean} isComplete
 */
SeriesSeriesInner.prototype['isComplete'] = undefined;

/**
 * @member {String} seriesFormatType
 */
SeriesSeriesInner.prototype['seriesFormatType'] = undefined;

/**
 * @member {String} seriesId
 */
SeriesSeriesInner.prototype['seriesId'] = undefined;

/**
 * @member {module:model/SeriesSeriesInnerSeriesSubscriptionReleaseInfo} seriesSubscriptionReleaseInfo
 */
SeriesSeriesInner.prototype['seriesSubscriptionReleaseInfo'] = undefined;

/**
 * @member {String} seriesType
 */
SeriesSeriesInner.prototype['seriesType'] = undefined;

/**
 * @member {String} subscriptionId
 */
SeriesSeriesInner.prototype['subscriptionId'] = undefined;

/**
 * @member {String} title
 */
SeriesSeriesInner.prototype['title'] = undefined;






export default SeriesSeriesInner;

