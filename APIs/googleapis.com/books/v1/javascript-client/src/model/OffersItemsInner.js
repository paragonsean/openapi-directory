/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OffersItemsInnerItemsInner from './OffersItemsInnerItemsInner';

/**
 * The OffersItemsInner model module.
 * @module model/OffersItemsInner
 * @version v1
 */
class OffersItemsInner {
    /**
     * Constructs a new <code>OffersItemsInner</code>.
     * @alias module:model/OffersItemsInner
     */
    constructor() { 
        
        OffersItemsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OffersItemsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OffersItemsInner} obj Optional instance to populate.
     * @return {module:model/OffersItemsInner} The populated <code>OffersItemsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OffersItemsInner();

            if (data.hasOwnProperty('artUrl')) {
                obj['artUrl'] = ApiClient.convertToType(data['artUrl'], 'String');
            }
            if (data.hasOwnProperty('gservicesKey')) {
                obj['gservicesKey'] = ApiClient.convertToType(data['gservicesKey'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [OffersItemsInnerItemsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OffersItemsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OffersItemsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['artUrl'] && !(typeof data['artUrl'] === 'string' || data['artUrl'] instanceof String)) {
            throw new Error("Expected the field `artUrl` to be a primitive type in the JSON string but got " + data['artUrl']);
        }
        // ensure the json data is a string
        if (data['gservicesKey'] && !(typeof data['gservicesKey'] === 'string' || data['gservicesKey'] instanceof String)) {
            throw new Error("Expected the field `gservicesKey` to be a primitive type in the JSON string but got " + data['gservicesKey']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                OffersItemsInnerItemsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} artUrl
 */
OffersItemsInner.prototype['artUrl'] = undefined;

/**
 * @member {String} gservicesKey
 */
OffersItemsInner.prototype['gservicesKey'] = undefined;

/**
 * @member {String} id
 */
OffersItemsInner.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/OffersItemsInnerItemsInner>} items
 */
OffersItemsInner.prototype['items'] = undefined;






export default OffersItemsInner;

