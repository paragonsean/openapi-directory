/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReadingPosition model module.
 * @module model/ReadingPosition
 * @version v1
 */
class ReadingPosition {
    /**
     * Constructs a new <code>ReadingPosition</code>.
     * @alias module:model/ReadingPosition
     */
    constructor() { 
        
        ReadingPosition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReadingPosition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReadingPosition} obj Optional instance to populate.
     * @return {module:model/ReadingPosition} The populated <code>ReadingPosition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReadingPosition();

            if (data.hasOwnProperty('epubCfiPosition')) {
                obj['epubCfiPosition'] = ApiClient.convertToType(data['epubCfiPosition'], 'String');
            }
            if (data.hasOwnProperty('gbImagePosition')) {
                obj['gbImagePosition'] = ApiClient.convertToType(data['gbImagePosition'], 'String');
            }
            if (data.hasOwnProperty('gbTextPosition')) {
                obj['gbTextPosition'] = ApiClient.convertToType(data['gbTextPosition'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('pdfPosition')) {
                obj['pdfPosition'] = ApiClient.convertToType(data['pdfPosition'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'String');
            }
            if (data.hasOwnProperty('volumeId')) {
                obj['volumeId'] = ApiClient.convertToType(data['volumeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReadingPosition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReadingPosition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['epubCfiPosition'] && !(typeof data['epubCfiPosition'] === 'string' || data['epubCfiPosition'] instanceof String)) {
            throw new Error("Expected the field `epubCfiPosition` to be a primitive type in the JSON string but got " + data['epubCfiPosition']);
        }
        // ensure the json data is a string
        if (data['gbImagePosition'] && !(typeof data['gbImagePosition'] === 'string' || data['gbImagePosition'] instanceof String)) {
            throw new Error("Expected the field `gbImagePosition` to be a primitive type in the JSON string but got " + data['gbImagePosition']);
        }
        // ensure the json data is a string
        if (data['gbTextPosition'] && !(typeof data['gbTextPosition'] === 'string' || data['gbTextPosition'] instanceof String)) {
            throw new Error("Expected the field `gbTextPosition` to be a primitive type in the JSON string but got " + data['gbTextPosition']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['pdfPosition'] && !(typeof data['pdfPosition'] === 'string' || data['pdfPosition'] instanceof String)) {
            throw new Error("Expected the field `pdfPosition` to be a primitive type in the JSON string but got " + data['pdfPosition']);
        }
        // ensure the json data is a string
        if (data['updated'] && !(typeof data['updated'] === 'string' || data['updated'] instanceof String)) {
            throw new Error("Expected the field `updated` to be a primitive type in the JSON string but got " + data['updated']);
        }
        // ensure the json data is a string
        if (data['volumeId'] && !(typeof data['volumeId'] === 'string' || data['volumeId'] instanceof String)) {
            throw new Error("Expected the field `volumeId` to be a primitive type in the JSON string but got " + data['volumeId']);
        }

        return true;
    }


}



/**
 * Position in an EPUB as a CFI.
 * @member {String} epubCfiPosition
 */
ReadingPosition.prototype['epubCfiPosition'] = undefined;

/**
 * Position in a volume for image-based content.
 * @member {String} gbImagePosition
 */
ReadingPosition.prototype['gbImagePosition'] = undefined;

/**
 * Position in a volume for text-based content.
 * @member {String} gbTextPosition
 */
ReadingPosition.prototype['gbTextPosition'] = undefined;

/**
 * Resource type for a reading position.
 * @member {String} kind
 */
ReadingPosition.prototype['kind'] = undefined;

/**
 * Position in a PDF file.
 * @member {String} pdfPosition
 */
ReadingPosition.prototype['pdfPosition'] = undefined;

/**
 * Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).
 * @member {String} updated
 */
ReadingPosition.prototype['updated'] = undefined;

/**
 * Volume id associated with this reading position.
 * @member {String} volumeId
 */
ReadingPosition.prototype['volumeId'] = undefined;






export default ReadingPosition;

