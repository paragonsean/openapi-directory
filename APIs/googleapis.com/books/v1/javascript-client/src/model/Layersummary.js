/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Layersummary model module.
 * @module model/Layersummary
 * @version v1
 */
class Layersummary {
    /**
     * Constructs a new <code>Layersummary</code>.
     * @alias module:model/Layersummary
     */
    constructor() { 
        
        Layersummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Layersummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Layersummary} obj Optional instance to populate.
     * @return {module:model/Layersummary} The populated <code>Layersummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Layersummary();

            if (data.hasOwnProperty('annotationCount')) {
                obj['annotationCount'] = ApiClient.convertToType(data['annotationCount'], 'Number');
            }
            if (data.hasOwnProperty('annotationTypes')) {
                obj['annotationTypes'] = ApiClient.convertToType(data['annotationTypes'], ['String']);
            }
            if (data.hasOwnProperty('annotationsDataLink')) {
                obj['annotationsDataLink'] = ApiClient.convertToType(data['annotationsDataLink'], 'String');
            }
            if (data.hasOwnProperty('annotationsLink')) {
                obj['annotationsLink'] = ApiClient.convertToType(data['annotationsLink'], 'String');
            }
            if (data.hasOwnProperty('contentVersion')) {
                obj['contentVersion'] = ApiClient.convertToType(data['contentVersion'], 'String');
            }
            if (data.hasOwnProperty('dataCount')) {
                obj['dataCount'] = ApiClient.convertToType(data['dataCount'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('layerId')) {
                obj['layerId'] = ApiClient.convertToType(data['layerId'], 'String');
            }
            if (data.hasOwnProperty('selfLink')) {
                obj['selfLink'] = ApiClient.convertToType(data['selfLink'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'String');
            }
            if (data.hasOwnProperty('volumeAnnotationsVersion')) {
                obj['volumeAnnotationsVersion'] = ApiClient.convertToType(data['volumeAnnotationsVersion'], 'String');
            }
            if (data.hasOwnProperty('volumeId')) {
                obj['volumeId'] = ApiClient.convertToType(data['volumeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Layersummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Layersummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['annotationTypes'])) {
            throw new Error("Expected the field `annotationTypes` to be an array in the JSON data but got " + data['annotationTypes']);
        }
        // ensure the json data is a string
        if (data['annotationsDataLink'] && !(typeof data['annotationsDataLink'] === 'string' || data['annotationsDataLink'] instanceof String)) {
            throw new Error("Expected the field `annotationsDataLink` to be a primitive type in the JSON string but got " + data['annotationsDataLink']);
        }
        // ensure the json data is a string
        if (data['annotationsLink'] && !(typeof data['annotationsLink'] === 'string' || data['annotationsLink'] instanceof String)) {
            throw new Error("Expected the field `annotationsLink` to be a primitive type in the JSON string but got " + data['annotationsLink']);
        }
        // ensure the json data is a string
        if (data['contentVersion'] && !(typeof data['contentVersion'] === 'string' || data['contentVersion'] instanceof String)) {
            throw new Error("Expected the field `contentVersion` to be a primitive type in the JSON string but got " + data['contentVersion']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['layerId'] && !(typeof data['layerId'] === 'string' || data['layerId'] instanceof String)) {
            throw new Error("Expected the field `layerId` to be a primitive type in the JSON string but got " + data['layerId']);
        }
        // ensure the json data is a string
        if (data['selfLink'] && !(typeof data['selfLink'] === 'string' || data['selfLink'] instanceof String)) {
            throw new Error("Expected the field `selfLink` to be a primitive type in the JSON string but got " + data['selfLink']);
        }
        // ensure the json data is a string
        if (data['updated'] && !(typeof data['updated'] === 'string' || data['updated'] instanceof String)) {
            throw new Error("Expected the field `updated` to be a primitive type in the JSON string but got " + data['updated']);
        }
        // ensure the json data is a string
        if (data['volumeAnnotationsVersion'] && !(typeof data['volumeAnnotationsVersion'] === 'string' || data['volumeAnnotationsVersion'] instanceof String)) {
            throw new Error("Expected the field `volumeAnnotationsVersion` to be a primitive type in the JSON string but got " + data['volumeAnnotationsVersion']);
        }
        // ensure the json data is a string
        if (data['volumeId'] && !(typeof data['volumeId'] === 'string' || data['volumeId'] instanceof String)) {
            throw new Error("Expected the field `volumeId` to be a primitive type in the JSON string but got " + data['volumeId']);
        }

        return true;
    }


}



/**
 * The number of annotations for this layer.
 * @member {Number} annotationCount
 */
Layersummary.prototype['annotationCount'] = undefined;

/**
 * The list of annotation types contained for this layer.
 * @member {Array.<String>} annotationTypes
 */
Layersummary.prototype['annotationTypes'] = undefined;

/**
 * Link to get data for this annotation.
 * @member {String} annotationsDataLink
 */
Layersummary.prototype['annotationsDataLink'] = undefined;

/**
 * The link to get the annotations for this layer.
 * @member {String} annotationsLink
 */
Layersummary.prototype['annotationsLink'] = undefined;

/**
 * The content version this resource is for.
 * @member {String} contentVersion
 */
Layersummary.prototype['contentVersion'] = undefined;

/**
 * The number of data items for this layer.
 * @member {Number} dataCount
 */
Layersummary.prototype['dataCount'] = undefined;

/**
 * Unique id of this layer summary.
 * @member {String} id
 */
Layersummary.prototype['id'] = undefined;

/**
 * Resource Type
 * @member {String} kind
 */
Layersummary.prototype['kind'] = undefined;

/**
 * The layer id for this summary.
 * @member {String} layerId
 */
Layersummary.prototype['layerId'] = undefined;

/**
 * URL to this resource.
 * @member {String} selfLink
 */
Layersummary.prototype['selfLink'] = undefined;

/**
 * Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).
 * @member {String} updated
 */
Layersummary.prototype['updated'] = undefined;

/**
 * The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
 * @member {String} volumeAnnotationsVersion
 */
Layersummary.prototype['volumeAnnotationsVersion'] = undefined;

/**
 * The volume id this resource is for.
 * @member {String} volumeId
 */
Layersummary.prototype['volumeId'] = undefined;






export default Layersummary;

