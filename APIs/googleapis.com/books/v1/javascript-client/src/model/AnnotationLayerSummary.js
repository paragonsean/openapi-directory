/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnnotationLayerSummary model module.
 * @module model/AnnotationLayerSummary
 * @version v1
 */
class AnnotationLayerSummary {
    /**
     * Constructs a new <code>AnnotationLayerSummary</code>.
     * @alias module:model/AnnotationLayerSummary
     */
    constructor() { 
        
        AnnotationLayerSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnnotationLayerSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnnotationLayerSummary} obj Optional instance to populate.
     * @return {module:model/AnnotationLayerSummary} The populated <code>AnnotationLayerSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnnotationLayerSummary();

            if (data.hasOwnProperty('allowedCharacterCount')) {
                obj['allowedCharacterCount'] = ApiClient.convertToType(data['allowedCharacterCount'], 'Number');
            }
            if (data.hasOwnProperty('limitType')) {
                obj['limitType'] = ApiClient.convertToType(data['limitType'], 'String');
            }
            if (data.hasOwnProperty('remainingCharacterCount')) {
                obj['remainingCharacterCount'] = ApiClient.convertToType(data['remainingCharacterCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnnotationLayerSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnnotationLayerSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['limitType'] && !(typeof data['limitType'] === 'string' || data['limitType'] instanceof String)) {
            throw new Error("Expected the field `limitType` to be a primitive type in the JSON string but got " + data['limitType']);
        }

        return true;
    }


}



/**
 * Maximum allowed characters on this layer, especially for the \"copy\" layer.
 * @member {Number} allowedCharacterCount
 */
AnnotationLayerSummary.prototype['allowedCharacterCount'] = undefined;

/**
 * Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.
 * @member {String} limitType
 */
AnnotationLayerSummary.prototype['limitType'] = undefined;

/**
 * Remaining allowed characters on this layer, especially for the \"copy\" layer.
 * @member {Number} remainingCharacterCount
 */
AnnotationLayerSummary.prototype['remainingCharacterCount'] = undefined;






export default AnnotationLayerSummary;

