/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GeolayerdataCommon model module.
 * @module model/GeolayerdataCommon
 * @version v1
 */
class GeolayerdataCommon {
    /**
     * Constructs a new <code>GeolayerdataCommon</code>.
     * @alias module:model/GeolayerdataCommon
     */
    constructor() { 
        
        GeolayerdataCommon.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GeolayerdataCommon</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeolayerdataCommon} obj Optional instance to populate.
     * @return {module:model/GeolayerdataCommon} The populated <code>GeolayerdataCommon</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeolayerdataCommon();

            if (data.hasOwnProperty('lang')) {
                obj['lang'] = ApiClient.convertToType(data['lang'], 'String');
            }
            if (data.hasOwnProperty('previewImageUrl')) {
                obj['previewImageUrl'] = ApiClient.convertToType(data['previewImageUrl'], 'String');
            }
            if (data.hasOwnProperty('snippet')) {
                obj['snippet'] = ApiClient.convertToType(data['snippet'], 'String');
            }
            if (data.hasOwnProperty('snippetUrl')) {
                obj['snippetUrl'] = ApiClient.convertToType(data['snippetUrl'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GeolayerdataCommon</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GeolayerdataCommon</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lang'] && !(typeof data['lang'] === 'string' || data['lang'] instanceof String)) {
            throw new Error("Expected the field `lang` to be a primitive type in the JSON string but got " + data['lang']);
        }
        // ensure the json data is a string
        if (data['previewImageUrl'] && !(typeof data['previewImageUrl'] === 'string' || data['previewImageUrl'] instanceof String)) {
            throw new Error("Expected the field `previewImageUrl` to be a primitive type in the JSON string but got " + data['previewImageUrl']);
        }
        // ensure the json data is a string
        if (data['snippet'] && !(typeof data['snippet'] === 'string' || data['snippet'] instanceof String)) {
            throw new Error("Expected the field `snippet` to be a primitive type in the JSON string but got " + data['snippet']);
        }
        // ensure the json data is a string
        if (data['snippetUrl'] && !(typeof data['snippetUrl'] === 'string' || data['snippetUrl'] instanceof String)) {
            throw new Error("Expected the field `snippetUrl` to be a primitive type in the JSON string but got " + data['snippetUrl']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * The language of the information url and description.
 * @member {String} lang
 */
GeolayerdataCommon.prototype['lang'] = undefined;

/**
 * The URL for the preview image information.
 * @member {String} previewImageUrl
 */
GeolayerdataCommon.prototype['previewImageUrl'] = undefined;

/**
 * The description for this location.
 * @member {String} snippet
 */
GeolayerdataCommon.prototype['snippet'] = undefined;

/**
 * The URL for information for this location. Ex: wikipedia link.
 * @member {String} snippetUrl
 */
GeolayerdataCommon.prototype['snippetUrl'] = undefined;

/**
 * The display title and localized canonical name to use when searching for this entity on Google search.
 * @member {String} title
 */
GeolayerdataCommon.prototype['title'] = undefined;






export default GeolayerdataCommon;

