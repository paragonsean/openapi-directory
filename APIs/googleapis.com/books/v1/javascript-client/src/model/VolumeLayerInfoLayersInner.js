/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VolumeLayerInfoLayersInner model module.
 * @module model/VolumeLayerInfoLayersInner
 * @version v1
 */
class VolumeLayerInfoLayersInner {
    /**
     * Constructs a new <code>VolumeLayerInfoLayersInner</code>.
     * @alias module:model/VolumeLayerInfoLayersInner
     */
    constructor() { 
        
        VolumeLayerInfoLayersInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VolumeLayerInfoLayersInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VolumeLayerInfoLayersInner} obj Optional instance to populate.
     * @return {module:model/VolumeLayerInfoLayersInner} The populated <code>VolumeLayerInfoLayersInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VolumeLayerInfoLayersInner();

            if (data.hasOwnProperty('layerId')) {
                obj['layerId'] = ApiClient.convertToType(data['layerId'], 'String');
            }
            if (data.hasOwnProperty('volumeAnnotationsVersion')) {
                obj['volumeAnnotationsVersion'] = ApiClient.convertToType(data['volumeAnnotationsVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VolumeLayerInfoLayersInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VolumeLayerInfoLayersInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['layerId'] && !(typeof data['layerId'] === 'string' || data['layerId'] instanceof String)) {
            throw new Error("Expected the field `layerId` to be a primitive type in the JSON string but got " + data['layerId']);
        }
        // ensure the json data is a string
        if (data['volumeAnnotationsVersion'] && !(typeof data['volumeAnnotationsVersion'] === 'string' || data['volumeAnnotationsVersion'] instanceof String)) {
            throw new Error("Expected the field `volumeAnnotationsVersion` to be a primitive type in the JSON string but got " + data['volumeAnnotationsVersion']);
        }

        return true;
    }


}



/**
 * The layer id of this layer (e.g. \"geo\").
 * @member {String} layerId
 */
VolumeLayerInfoLayersInner.prototype['layerId'] = undefined;

/**
 * The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
 * @member {String} volumeAnnotationsVersion
 */
VolumeLayerInfoLayersInner.prototype['volumeAnnotationsVersion'] = undefined;






export default VolumeLayerInfoLayersInner;

