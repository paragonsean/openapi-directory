/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DownloadAccesses from '../model/DownloadAccesses';
import RequestAccessData from '../model/RequestAccessData';
import Usersettings from '../model/Usersettings';
import Volumes from '../model/Volumes';

/**
* Myconfig service.
* @module api/MyconfigApi
* @version v1
*/
export default class MyconfigApi {

    /**
    * Constructs a new MyconfigApi. 
    * @alias module:api/MyconfigApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the booksMyconfigGetUserSettings operation.
     * @callback module:api/MyconfigApi~booksMyconfigGetUserSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Usersettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the current settings for the user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [country] Unused. Added only to workaround TEX mandatory request template requirement
     * @param {module:api/MyconfigApi~booksMyconfigGetUserSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Usersettings}
     */
    booksMyconfigGetUserSettings(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'country': opts['country']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Usersettings;
      return this.apiClient.callApi(
        '/books/v1/myconfig/getUserSettings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksMyconfigReleaseDownloadAccess operation.
     * @callback module:api/MyconfigApi~booksMyconfigReleaseDownloadAccessCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DownloadAccesses} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Release downloaded content access restriction.
     * @param {String} cpksver The device/version ID from which to release the restriction.
     * @param {Array.<String>} volumeIds The volume(s) to release restrictions for.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [locale] ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
     * @param {String} [source] String to identify the originator of this request.
     * @param {module:api/MyconfigApi~booksMyconfigReleaseDownloadAccessCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DownloadAccesses}
     */
    booksMyconfigReleaseDownloadAccess(cpksver, volumeIds, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'cpksver' is set
      if (cpksver === undefined || cpksver === null) {
        throw new Error("Missing the required parameter 'cpksver' when calling booksMyconfigReleaseDownloadAccess");
      }
      // verify the required parameter 'volumeIds' is set
      if (volumeIds === undefined || volumeIds === null) {
        throw new Error("Missing the required parameter 'volumeIds' when calling booksMyconfigReleaseDownloadAccess");
      }

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'cpksver': cpksver,
        'volumeIds': this.apiClient.buildCollectionParam(volumeIds, 'multi'),
        'locale': opts['locale'],
        'source': opts['source']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DownloadAccesses;
      return this.apiClient.callApi(
        '/books/v1/myconfig/releaseDownloadAccess', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksMyconfigRequestAccess operation.
     * @callback module:api/MyconfigApi~booksMyconfigRequestAccessCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RequestAccessData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request concurrent and download access restrictions.
     * @param {String} cpksver The device/version ID from which to request the restrictions.
     * @param {String} nonce The client nonce value.
     * @param {String} source String to identify the originator of this request.
     * @param {String} volumeId The volume to request concurrent/download restrictions for.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [licenseTypes] The type of access license to request. If not specified, the default is BOTH.
     * @param {String} [locale] ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
     * @param {module:api/MyconfigApi~booksMyconfigRequestAccessCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RequestAccessData}
     */
    booksMyconfigRequestAccess(cpksver, nonce, source, volumeId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'cpksver' is set
      if (cpksver === undefined || cpksver === null) {
        throw new Error("Missing the required parameter 'cpksver' when calling booksMyconfigRequestAccess");
      }
      // verify the required parameter 'nonce' is set
      if (nonce === undefined || nonce === null) {
        throw new Error("Missing the required parameter 'nonce' when calling booksMyconfigRequestAccess");
      }
      // verify the required parameter 'source' is set
      if (source === undefined || source === null) {
        throw new Error("Missing the required parameter 'source' when calling booksMyconfigRequestAccess");
      }
      // verify the required parameter 'volumeId' is set
      if (volumeId === undefined || volumeId === null) {
        throw new Error("Missing the required parameter 'volumeId' when calling booksMyconfigRequestAccess");
      }

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'cpksver': cpksver,
        'nonce': nonce,
        'source': source,
        'volumeId': volumeId,
        'licenseTypes': opts['licenseTypes'],
        'locale': opts['locale']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RequestAccessData;
      return this.apiClient.callApi(
        '/books/v1/myconfig/requestAccess', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksMyconfigSyncVolumeLicenses operation.
     * @callback module:api/MyconfigApi~booksMyconfigSyncVolumeLicensesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Volumes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request downloaded content access for specified volumes on the My eBooks shelf.
     * @param {String} cpksver The device/version ID from which to release the restriction.
     * @param {String} nonce The client nonce value.
     * @param {String} source String to identify the originator of this request.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Array.<module:model/String>} [features] List of features supported by the client, i.e., 'RENTALS'
     * @param {Boolean} [includeNonComicsSeries] Set to true to include non-comics series. Defaults to false.
     * @param {String} [locale] ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
     * @param {Boolean} [showPreorders] Set to true to show pre-ordered books. Defaults to false.
     * @param {Array.<String>} [volumeIds] The volume(s) to request download restrictions for.
     * @param {module:api/MyconfigApi~booksMyconfigSyncVolumeLicensesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Volumes}
     */
    booksMyconfigSyncVolumeLicenses(cpksver, nonce, source, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'cpksver' is set
      if (cpksver === undefined || cpksver === null) {
        throw new Error("Missing the required parameter 'cpksver' when calling booksMyconfigSyncVolumeLicenses");
      }
      // verify the required parameter 'nonce' is set
      if (nonce === undefined || nonce === null) {
        throw new Error("Missing the required parameter 'nonce' when calling booksMyconfigSyncVolumeLicenses");
      }
      // verify the required parameter 'source' is set
      if (source === undefined || source === null) {
        throw new Error("Missing the required parameter 'source' when calling booksMyconfigSyncVolumeLicenses");
      }

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'cpksver': cpksver,
        'nonce': nonce,
        'source': source,
        'features': this.apiClient.buildCollectionParam(opts['features'], 'multi'),
        'includeNonComicsSeries': opts['includeNonComicsSeries'],
        'locale': opts['locale'],
        'showPreorders': opts['showPreorders'],
        'volumeIds': this.apiClient.buildCollectionParam(opts['volumeIds'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Volumes;
      return this.apiClient.callApi(
        '/books/v1/myconfig/syncVolumeLicenses', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksMyconfigUpdateUserSettings operation.
     * @callback module:api/MyconfigApi~booksMyconfigUpdateUserSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Usersettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/Usersettings} [usersettings] 
     * @param {module:api/MyconfigApi~booksMyconfigUpdateUserSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Usersettings}
     */
    booksMyconfigUpdateUserSettings(opts, callback) {
      opts = opts || {};
      let postBody = opts['usersettings'];

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Usersettings;
      return this.apiClient.callApi(
        '/books/v1/myconfig/updateUserSettings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
