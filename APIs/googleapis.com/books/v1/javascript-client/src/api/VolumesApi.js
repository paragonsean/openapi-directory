/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BooksVolumesRecommendedRateResponse from '../model/BooksVolumesRecommendedRateResponse';
import Volume from '../model/Volume';
import Volumes from '../model/Volumes';

/**
* Volumes service.
* @module api/VolumesApi
* @version v1
*/
export default class VolumesApi {

    /**
    * Constructs a new VolumesApi. 
    * @alias module:api/VolumesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the booksVolumesAssociatedList operation.
     * @callback module:api/VolumesApi~booksVolumesAssociatedListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Volumes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of associated books.
     * @param {String} volumeId ID of the source volume.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [association] Association type.
     * @param {String} [locale] ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.
     * @param {module:model/String} [maxAllowedMaturityRating] The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
     * @param {String} [source] String to identify the originator of this request.
     * @param {module:api/VolumesApi~booksVolumesAssociatedListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Volumes}
     */
    booksVolumesAssociatedList(volumeId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'volumeId' is set
      if (volumeId === undefined || volumeId === null) {
        throw new Error("Missing the required parameter 'volumeId' when calling booksVolumesAssociatedList");
      }

      let pathParams = {
        'volumeId': volumeId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'association': opts['association'],
        'locale': opts['locale'],
        'maxAllowedMaturityRating': opts['maxAllowedMaturityRating'],
        'source': opts['source']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Volumes;
      return this.apiClient.callApi(
        '/books/v1/volumes/{volumeId}/associated', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksVolumesGet operation.
     * @callback module:api/VolumesApi~booksVolumesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Volume} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets volume information for a single volume.
     * @param {String} volumeId ID of volume to retrieve.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [country] ISO-3166-1 code to override the IP-based location.
     * @param {Boolean} [includeNonComicsSeries] Set to true to include non-comics series. Defaults to false.
     * @param {String} [partner] Brand results for partner ID.
     * @param {module:model/String} [projection] Restrict information returned to a set of selected fields.
     * @param {String} [source] string to identify the originator of this request.
     * @param {Boolean} [userLibraryConsistentRead] 
     * @param {module:api/VolumesApi~booksVolumesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Volume}
     */
    booksVolumesGet(volumeId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'volumeId' is set
      if (volumeId === undefined || volumeId === null) {
        throw new Error("Missing the required parameter 'volumeId' when calling booksVolumesGet");
      }

      let pathParams = {
        'volumeId': volumeId
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'country': opts['country'],
        'includeNonComicsSeries': opts['includeNonComicsSeries'],
        'partner': opts['partner'],
        'projection': opts['projection'],
        'source': opts['source'],
        'user_library_consistent_read': opts['userLibraryConsistentRead']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Volume;
      return this.apiClient.callApi(
        '/books/v1/volumes/{volumeId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksVolumesList operation.
     * @callback module:api/VolumesApi~booksVolumesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Volumes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Performs a book search.
     * @param {String} q Full-text search query string.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/String} [download] Restrict to volumes by download availability.
     * @param {module:model/String} [filter] Filter search results.
     * @param {String} [langRestrict] Restrict results to books with this language code.
     * @param {module:model/String} [libraryRestrict] Restrict search to this user's library.
     * @param {module:model/String} [maxAllowedMaturityRating] The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
     * @param {Number} [maxResults] Maximum number of results to return.
     * @param {module:model/String} [orderBy] Sort search results.
     * @param {String} [partner] Restrict and brand results for partner ID.
     * @param {module:model/String} [printType] Restrict to books or magazines.
     * @param {module:model/String} [projection] Restrict information returned to a set of selected fields.
     * @param {Boolean} [showPreorders] Set to true to show books available for preorder. Defaults to false.
     * @param {String} [source] String to identify the originator of this request.
     * @param {Number} [startIndex] Index of the first result to return (starts at 0)
     * @param {module:api/VolumesApi~booksVolumesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Volumes}
     */
    booksVolumesList(q, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'q' is set
      if (q === undefined || q === null) {
        throw new Error("Missing the required parameter 'q' when calling booksVolumesList");
      }

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'q': q,
        'download': opts['download'],
        'filter': opts['filter'],
        'langRestrict': opts['langRestrict'],
        'libraryRestrict': opts['libraryRestrict'],
        'maxAllowedMaturityRating': opts['maxAllowedMaturityRating'],
        'maxResults': opts['maxResults'],
        'orderBy': opts['orderBy'],
        'partner': opts['partner'],
        'printType': opts['printType'],
        'projection': opts['projection'],
        'showPreorders': opts['showPreorders'],
        'source': opts['source'],
        'startIndex': opts['startIndex']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Volumes;
      return this.apiClient.callApi(
        '/books/v1/volumes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksVolumesMybooksList operation.
     * @callback module:api/VolumesApi~booksVolumesMybooksListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Volumes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of books in My Library.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Array.<module:model/String>} [acquireMethod] How the book was acquired
     * @param {String} [country] ISO-3166-1 code to override the IP-based location.
     * @param {String} [locale] ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.
     * @param {Number} [maxResults] Maximum number of results to return.
     * @param {Array.<module:model/String>} [processingState] The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.
     * @param {String} [source] String to identify the originator of this request.
     * @param {Number} [startIndex] Index of the first result to return (starts at 0)
     * @param {module:api/VolumesApi~booksVolumesMybooksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Volumes}
     */
    booksVolumesMybooksList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'acquireMethod': this.apiClient.buildCollectionParam(opts['acquireMethod'], 'multi'),
        'country': opts['country'],
        'locale': opts['locale'],
        'maxResults': opts['maxResults'],
        'processingState': this.apiClient.buildCollectionParam(opts['processingState'], 'multi'),
        'source': opts['source'],
        'startIndex': opts['startIndex']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Volumes;
      return this.apiClient.callApi(
        '/books/v1/volumes/mybooks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksVolumesRecommendedList operation.
     * @callback module:api/VolumesApi~booksVolumesRecommendedListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Volumes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of recommended books for the current user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [locale] ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.
     * @param {module:model/String} [maxAllowedMaturityRating] The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
     * @param {String} [source] String to identify the originator of this request.
     * @param {module:api/VolumesApi~booksVolumesRecommendedListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Volumes}
     */
    booksVolumesRecommendedList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'locale': opts['locale'],
        'maxAllowedMaturityRating': opts['maxAllowedMaturityRating'],
        'source': opts['source']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Volumes;
      return this.apiClient.callApi(
        '/books/v1/volumes/recommended', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksVolumesRecommendedRate operation.
     * @callback module:api/VolumesApi~booksVolumesRecommendedRateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BooksVolumesRecommendedRateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Rate a recommended book for the current user.
     * @param {module:model/String} rating Rating to be given to the volume.
     * @param {String} volumeId ID of the source volume.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [locale] ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.
     * @param {String} [source] String to identify the originator of this request.
     * @param {module:api/VolumesApi~booksVolumesRecommendedRateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BooksVolumesRecommendedRateResponse}
     */
    booksVolumesRecommendedRate(rating, volumeId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'rating' is set
      if (rating === undefined || rating === null) {
        throw new Error("Missing the required parameter 'rating' when calling booksVolumesRecommendedRate");
      }
      // verify the required parameter 'volumeId' is set
      if (volumeId === undefined || volumeId === null) {
        throw new Error("Missing the required parameter 'volumeId' when calling booksVolumesRecommendedRate");
      }

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'rating': rating,
        'volumeId': volumeId,
        'locale': opts['locale'],
        'source': opts['source']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BooksVolumesRecommendedRateResponse;
      return this.apiClient.callApi(
        '/books/v1/volumes/recommended/rate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the booksVolumesUseruploadedList operation.
     * @callback module:api/VolumesApi~booksVolumesUseruploadedListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Volumes} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of books uploaded by the current user.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [locale] ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.
     * @param {Number} [maxResults] Maximum number of results to return.
     * @param {Array.<module:model/String>} [processingState] The processing state of the user uploaded volumes to be returned.
     * @param {String} [source] String to identify the originator of this request.
     * @param {Number} [startIndex] Index of the first result to return (starts at 0)
     * @param {Array.<String>} [volumeId] The ids of the volumes to be returned. If not specified all that match the processingState are returned.
     * @param {module:api/VolumesApi~booksVolumesUseruploadedListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Volumes}
     */
    booksVolumesUseruploadedList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'locale': opts['locale'],
        'maxResults': opts['maxResults'],
        'processingState': this.apiClient.buildCollectionParam(opts['processingState'], 'multi'),
        'source': opts['source'],
        'startIndex': opts['startIndex'],
        'volumeId': this.apiClient.buildCollectionParam(opts['volumeId'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Volumes;
      return this.apiClient.callApi(
        '/books/v1/volumes/useruploaded', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
