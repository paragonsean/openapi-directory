/*
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.UsersettingsNotificationMatchMyInterests;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UsersettingsNotification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:01.065249-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UsersettingsNotification {
  public static final String SERIALIZED_NAME_MATCH_MY_INTERESTS = "matchMyInterests";
  @SerializedName(SERIALIZED_NAME_MATCH_MY_INTERESTS)
  private UsersettingsNotificationMatchMyInterests matchMyInterests;

  public static final String SERIALIZED_NAME_MORE_FROM_AUTHORS = "moreFromAuthors";
  @SerializedName(SERIALIZED_NAME_MORE_FROM_AUTHORS)
  private UsersettingsNotificationMatchMyInterests moreFromAuthors;

  public static final String SERIALIZED_NAME_MORE_FROM_SERIES = "moreFromSeries";
  @SerializedName(SERIALIZED_NAME_MORE_FROM_SERIES)
  private UsersettingsNotificationMatchMyInterests moreFromSeries;

  public static final String SERIALIZED_NAME_PRICE_DROP = "priceDrop";
  @SerializedName(SERIALIZED_NAME_PRICE_DROP)
  private UsersettingsNotificationMatchMyInterests priceDrop;

  public static final String SERIALIZED_NAME_REWARD_EXPIRATIONS = "rewardExpirations";
  @SerializedName(SERIALIZED_NAME_REWARD_EXPIRATIONS)
  private UsersettingsNotificationMatchMyInterests rewardExpirations;

  public UsersettingsNotification() {
  }

  public UsersettingsNotification matchMyInterests(UsersettingsNotificationMatchMyInterests matchMyInterests) {
    this.matchMyInterests = matchMyInterests;
    return this;
  }

  /**
   * Get matchMyInterests
   * @return matchMyInterests
   */
  @javax.annotation.Nullable
  public UsersettingsNotificationMatchMyInterests getMatchMyInterests() {
    return matchMyInterests;
  }

  public void setMatchMyInterests(UsersettingsNotificationMatchMyInterests matchMyInterests) {
    this.matchMyInterests = matchMyInterests;
  }


  public UsersettingsNotification moreFromAuthors(UsersettingsNotificationMatchMyInterests moreFromAuthors) {
    this.moreFromAuthors = moreFromAuthors;
    return this;
  }

  /**
   * Get moreFromAuthors
   * @return moreFromAuthors
   */
  @javax.annotation.Nullable
  public UsersettingsNotificationMatchMyInterests getMoreFromAuthors() {
    return moreFromAuthors;
  }

  public void setMoreFromAuthors(UsersettingsNotificationMatchMyInterests moreFromAuthors) {
    this.moreFromAuthors = moreFromAuthors;
  }


  public UsersettingsNotification moreFromSeries(UsersettingsNotificationMatchMyInterests moreFromSeries) {
    this.moreFromSeries = moreFromSeries;
    return this;
  }

  /**
   * Get moreFromSeries
   * @return moreFromSeries
   */
  @javax.annotation.Nullable
  public UsersettingsNotificationMatchMyInterests getMoreFromSeries() {
    return moreFromSeries;
  }

  public void setMoreFromSeries(UsersettingsNotificationMatchMyInterests moreFromSeries) {
    this.moreFromSeries = moreFromSeries;
  }


  public UsersettingsNotification priceDrop(UsersettingsNotificationMatchMyInterests priceDrop) {
    this.priceDrop = priceDrop;
    return this;
  }

  /**
   * Get priceDrop
   * @return priceDrop
   */
  @javax.annotation.Nullable
  public UsersettingsNotificationMatchMyInterests getPriceDrop() {
    return priceDrop;
  }

  public void setPriceDrop(UsersettingsNotificationMatchMyInterests priceDrop) {
    this.priceDrop = priceDrop;
  }


  public UsersettingsNotification rewardExpirations(UsersettingsNotificationMatchMyInterests rewardExpirations) {
    this.rewardExpirations = rewardExpirations;
    return this;
  }

  /**
   * Get rewardExpirations
   * @return rewardExpirations
   */
  @javax.annotation.Nullable
  public UsersettingsNotificationMatchMyInterests getRewardExpirations() {
    return rewardExpirations;
  }

  public void setRewardExpirations(UsersettingsNotificationMatchMyInterests rewardExpirations) {
    this.rewardExpirations = rewardExpirations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersettingsNotification usersettingsNotification = (UsersettingsNotification) o;
    return Objects.equals(this.matchMyInterests, usersettingsNotification.matchMyInterests) &&
        Objects.equals(this.moreFromAuthors, usersettingsNotification.moreFromAuthors) &&
        Objects.equals(this.moreFromSeries, usersettingsNotification.moreFromSeries) &&
        Objects.equals(this.priceDrop, usersettingsNotification.priceDrop) &&
        Objects.equals(this.rewardExpirations, usersettingsNotification.rewardExpirations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(matchMyInterests, moreFromAuthors, moreFromSeries, priceDrop, rewardExpirations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersettingsNotification {\n");
    sb.append("    matchMyInterests: ").append(toIndentedString(matchMyInterests)).append("\n");
    sb.append("    moreFromAuthors: ").append(toIndentedString(moreFromAuthors)).append("\n");
    sb.append("    moreFromSeries: ").append(toIndentedString(moreFromSeries)).append("\n");
    sb.append("    priceDrop: ").append(toIndentedString(priceDrop)).append("\n");
    sb.append("    rewardExpirations: ").append(toIndentedString(rewardExpirations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("matchMyInterests");
    openapiFields.add("moreFromAuthors");
    openapiFields.add("moreFromSeries");
    openapiFields.add("priceDrop");
    openapiFields.add("rewardExpirations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UsersettingsNotification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UsersettingsNotification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsersettingsNotification is not found in the empty JSON string", UsersettingsNotification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UsersettingsNotification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UsersettingsNotification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `matchMyInterests`
      if (jsonObj.get("matchMyInterests") != null && !jsonObj.get("matchMyInterests").isJsonNull()) {
        UsersettingsNotificationMatchMyInterests.validateJsonElement(jsonObj.get("matchMyInterests"));
      }
      // validate the optional field `moreFromAuthors`
      if (jsonObj.get("moreFromAuthors") != null && !jsonObj.get("moreFromAuthors").isJsonNull()) {
        UsersettingsNotificationMatchMyInterests.validateJsonElement(jsonObj.get("moreFromAuthors"));
      }
      // validate the optional field `moreFromSeries`
      if (jsonObj.get("moreFromSeries") != null && !jsonObj.get("moreFromSeries").isJsonNull()) {
        UsersettingsNotificationMatchMyInterests.validateJsonElement(jsonObj.get("moreFromSeries"));
      }
      // validate the optional field `priceDrop`
      if (jsonObj.get("priceDrop") != null && !jsonObj.get("priceDrop").isJsonNull()) {
        UsersettingsNotificationMatchMyInterests.validateJsonElement(jsonObj.get("priceDrop"));
      }
      // validate the optional field `rewardExpirations`
      if (jsonObj.get("rewardExpirations") != null && !jsonObj.get("rewardExpirations").isJsonNull()) {
        UsersettingsNotificationMatchMyInterests.validateJsonElement(jsonObj.get("rewardExpirations"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsersettingsNotification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsersettingsNotification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsersettingsNotification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsersettingsNotification.class));

       return (TypeAdapter<T>) new TypeAdapter<UsersettingsNotification>() {
           @Override
           public void write(JsonWriter out, UsersettingsNotification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UsersettingsNotification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UsersettingsNotification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UsersettingsNotification
   * @throws IOException if the JSON string is invalid with respect to UsersettingsNotification
   */
  public static UsersettingsNotification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsersettingsNotification.class);
  }

  /**
   * Convert an instance of UsersettingsNotification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

