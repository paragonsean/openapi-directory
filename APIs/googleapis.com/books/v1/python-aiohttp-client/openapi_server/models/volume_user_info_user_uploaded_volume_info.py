# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VolumeUserInfoUserUploadedVolumeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, processing_state: str=None):
        """VolumeUserInfoUserUploadedVolumeInfo - a model defined in OpenAPI

        :param processing_state: The processing_state of this VolumeUserInfoUserUploadedVolumeInfo.
        """
        self.openapi_types = {
            'processing_state': str
        }

        self.attribute_map = {
            'processing_state': 'processingState'
        }

        self._processing_state = processing_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VolumeUserInfoUserUploadedVolumeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Volume_userInfo_userUploadedVolumeInfo of this VolumeUserInfoUserUploadedVolumeInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def processing_state(self):
        """Gets the processing_state of this VolumeUserInfoUserUploadedVolumeInfo.


        :return: The processing_state of this VolumeUserInfoUserUploadedVolumeInfo.
        :rtype: str
        """
        return self._processing_state

    @processing_state.setter
    def processing_state(self, processing_state):
        """Sets the processing_state of this VolumeUserInfoUserUploadedVolumeInfo.


        :param processing_state: The processing_state of this VolumeUserInfoUserUploadedVolumeInfo.
        :type processing_state: str
        """

        self._processing_state = processing_state
