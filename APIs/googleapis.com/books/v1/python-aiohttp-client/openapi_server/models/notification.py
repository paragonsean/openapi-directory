# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Notification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, crm_experiment_ids: List[str]=None, doc_id: str=None, doc_type: str=None, dont_show_notification: bool=None, icon_url: str=None, is_document_mature: bool=None, kind: str=None, notification_group: str=None, notification_type: str=None, pcampaign_id: str=None, reason: str=None, show_notification_settings_action: bool=None, target_url: str=None, time_to_expire_ms: str=None, title: str=None):
        """Notification - a model defined in OpenAPI

        :param body: The body of this Notification.
        :param crm_experiment_ids: The crm_experiment_ids of this Notification.
        :param doc_id: The doc_id of this Notification.
        :param doc_type: The doc_type of this Notification.
        :param dont_show_notification: The dont_show_notification of this Notification.
        :param icon_url: The icon_url of this Notification.
        :param is_document_mature: The is_document_mature of this Notification.
        :param kind: The kind of this Notification.
        :param notification_group: The notification_group of this Notification.
        :param notification_type: The notification_type of this Notification.
        :param pcampaign_id: The pcampaign_id of this Notification.
        :param reason: The reason of this Notification.
        :param show_notification_settings_action: The show_notification_settings_action of this Notification.
        :param target_url: The target_url of this Notification.
        :param time_to_expire_ms: The time_to_expire_ms of this Notification.
        :param title: The title of this Notification.
        """
        self.openapi_types = {
            'body': str,
            'crm_experiment_ids': List[str],
            'doc_id': str,
            'doc_type': str,
            'dont_show_notification': bool,
            'icon_url': str,
            'is_document_mature': bool,
            'kind': str,
            'notification_group': str,
            'notification_type': str,
            'pcampaign_id': str,
            'reason': str,
            'show_notification_settings_action': bool,
            'target_url': str,
            'time_to_expire_ms': str,
            'title': str
        }

        self.attribute_map = {
            'body': 'body',
            'crm_experiment_ids': 'crmExperimentIds',
            'doc_id': 'doc_id',
            'doc_type': 'doc_type',
            'dont_show_notification': 'dont_show_notification',
            'icon_url': 'iconUrl',
            'is_document_mature': 'is_document_mature',
            'kind': 'kind',
            'notification_group': 'notificationGroup',
            'notification_type': 'notification_type',
            'pcampaign_id': 'pcampaign_id',
            'reason': 'reason',
            'show_notification_settings_action': 'show_notification_settings_action',
            'target_url': 'targetUrl',
            'time_to_expire_ms': 'timeToExpireMs',
            'title': 'title'
        }

        self._body = body
        self._crm_experiment_ids = crm_experiment_ids
        self._doc_id = doc_id
        self._doc_type = doc_type
        self._dont_show_notification = dont_show_notification
        self._icon_url = icon_url
        self._is_document_mature = is_document_mature
        self._kind = kind
        self._notification_group = notification_group
        self._notification_type = notification_type
        self._pcampaign_id = pcampaign_id
        self._reason = reason
        self._show_notification_settings_action = show_notification_settings_action
        self._target_url = target_url
        self._time_to_expire_ms = time_to_expire_ms
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Notification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Notification of this Notification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this Notification.


        :return: The body of this Notification.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this Notification.


        :param body: The body of this Notification.
        :type body: str
        """

        self._body = body

    @property
    def crm_experiment_ids(self):
        """Gets the crm_experiment_ids of this Notification.

        The list of crm experiment ids.

        :return: The crm_experiment_ids of this Notification.
        :rtype: List[str]
        """
        return self._crm_experiment_ids

    @crm_experiment_ids.setter
    def crm_experiment_ids(self, crm_experiment_ids):
        """Sets the crm_experiment_ids of this Notification.

        The list of crm experiment ids.

        :param crm_experiment_ids: The crm_experiment_ids of this Notification.
        :type crm_experiment_ids: List[str]
        """

        self._crm_experiment_ids = crm_experiment_ids

    @property
    def doc_id(self):
        """Gets the doc_id of this Notification.


        :return: The doc_id of this Notification.
        :rtype: str
        """
        return self._doc_id

    @doc_id.setter
    def doc_id(self, doc_id):
        """Sets the doc_id of this Notification.


        :param doc_id: The doc_id of this Notification.
        :type doc_id: str
        """

        self._doc_id = doc_id

    @property
    def doc_type(self):
        """Gets the doc_type of this Notification.


        :return: The doc_type of this Notification.
        :rtype: str
        """
        return self._doc_type

    @doc_type.setter
    def doc_type(self, doc_type):
        """Sets the doc_type of this Notification.


        :param doc_type: The doc_type of this Notification.
        :type doc_type: str
        """

        self._doc_type = doc_type

    @property
    def dont_show_notification(self):
        """Gets the dont_show_notification of this Notification.


        :return: The dont_show_notification of this Notification.
        :rtype: bool
        """
        return self._dont_show_notification

    @dont_show_notification.setter
    def dont_show_notification(self, dont_show_notification):
        """Sets the dont_show_notification of this Notification.


        :param dont_show_notification: The dont_show_notification of this Notification.
        :type dont_show_notification: bool
        """

        self._dont_show_notification = dont_show_notification

    @property
    def icon_url(self):
        """Gets the icon_url of this Notification.


        :return: The icon_url of this Notification.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this Notification.


        :param icon_url: The icon_url of this Notification.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def is_document_mature(self):
        """Gets the is_document_mature of this Notification.


        :return: The is_document_mature of this Notification.
        :rtype: bool
        """
        return self._is_document_mature

    @is_document_mature.setter
    def is_document_mature(self, is_document_mature):
        """Sets the is_document_mature of this Notification.


        :param is_document_mature: The is_document_mature of this Notification.
        :type is_document_mature: bool
        """

        self._is_document_mature = is_document_mature

    @property
    def kind(self):
        """Gets the kind of this Notification.

        Resource type.

        :return: The kind of this Notification.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Notification.

        Resource type.

        :param kind: The kind of this Notification.
        :type kind: str
        """

        self._kind = kind

    @property
    def notification_group(self):
        """Gets the notification_group of this Notification.


        :return: The notification_group of this Notification.
        :rtype: str
        """
        return self._notification_group

    @notification_group.setter
    def notification_group(self, notification_group):
        """Sets the notification_group of this Notification.


        :param notification_group: The notification_group of this Notification.
        :type notification_group: str
        """

        self._notification_group = notification_group

    @property
    def notification_type(self):
        """Gets the notification_type of this Notification.


        :return: The notification_type of this Notification.
        :rtype: str
        """
        return self._notification_type

    @notification_type.setter
    def notification_type(self, notification_type):
        """Sets the notification_type of this Notification.


        :param notification_type: The notification_type of this Notification.
        :type notification_type: str
        """

        self._notification_type = notification_type

    @property
    def pcampaign_id(self):
        """Gets the pcampaign_id of this Notification.


        :return: The pcampaign_id of this Notification.
        :rtype: str
        """
        return self._pcampaign_id

    @pcampaign_id.setter
    def pcampaign_id(self, pcampaign_id):
        """Sets the pcampaign_id of this Notification.


        :param pcampaign_id: The pcampaign_id of this Notification.
        :type pcampaign_id: str
        """

        self._pcampaign_id = pcampaign_id

    @property
    def reason(self):
        """Gets the reason of this Notification.


        :return: The reason of this Notification.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this Notification.


        :param reason: The reason of this Notification.
        :type reason: str
        """

        self._reason = reason

    @property
    def show_notification_settings_action(self):
        """Gets the show_notification_settings_action of this Notification.


        :return: The show_notification_settings_action of this Notification.
        :rtype: bool
        """
        return self._show_notification_settings_action

    @show_notification_settings_action.setter
    def show_notification_settings_action(self, show_notification_settings_action):
        """Sets the show_notification_settings_action of this Notification.


        :param show_notification_settings_action: The show_notification_settings_action of this Notification.
        :type show_notification_settings_action: bool
        """

        self._show_notification_settings_action = show_notification_settings_action

    @property
    def target_url(self):
        """Gets the target_url of this Notification.


        :return: The target_url of this Notification.
        :rtype: str
        """
        return self._target_url

    @target_url.setter
    def target_url(self, target_url):
        """Sets the target_url of this Notification.


        :param target_url: The target_url of this Notification.
        :type target_url: str
        """

        self._target_url = target_url

    @property
    def time_to_expire_ms(self):
        """Gets the time_to_expire_ms of this Notification.


        :return: The time_to_expire_ms of this Notification.
        :rtype: str
        """
        return self._time_to_expire_ms

    @time_to_expire_ms.setter
    def time_to_expire_ms(self, time_to_expire_ms):
        """Sets the time_to_expire_ms of this Notification.


        :param time_to_expire_ms: The time_to_expire_ms of this Notification.
        :type time_to_expire_ms: str
        """

        self._time_to_expire_ms = time_to_expire_ms

    @property
    def title(self):
        """Gets the title of this Notification.


        :return: The title of this Notification.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Notification.


        :param title: The title of this Notification.
        :type title: str
        """

        self._title = title
