# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dictlayerdata_dict_words_inner_derivatives_inner import DictlayerdataDictWordsInnerDerivativesInner
from openapi_server.models.dictlayerdata_dict_words_inner_derivatives_inner_source import DictlayerdataDictWordsInnerDerivativesInnerSource
from openapi_server.models.dictlayerdata_dict_words_inner_senses_inner_conjugations_inner import DictlayerdataDictWordsInnerSensesInnerConjugationsInner
from openapi_server.models.dictlayerdata_dict_words_inner_senses_inner_definitions_inner import DictlayerdataDictWordsInnerSensesInnerDefinitionsInner
from openapi_server import util


class DictlayerdataDictWordsInnerSensesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conjugations: List[DictlayerdataDictWordsInnerSensesInnerConjugationsInner]=None, definitions: List[DictlayerdataDictWordsInnerSensesInnerDefinitionsInner]=None, part_of_speech: str=None, pronunciation: str=None, pronunciation_url: str=None, source: DictlayerdataDictWordsInnerDerivativesInnerSource=None, syllabification: str=None, synonyms: List[DictlayerdataDictWordsInnerDerivativesInner]=None):
        """DictlayerdataDictWordsInnerSensesInner - a model defined in OpenAPI

        :param conjugations: The conjugations of this DictlayerdataDictWordsInnerSensesInner.
        :param definitions: The definitions of this DictlayerdataDictWordsInnerSensesInner.
        :param part_of_speech: The part_of_speech of this DictlayerdataDictWordsInnerSensesInner.
        :param pronunciation: The pronunciation of this DictlayerdataDictWordsInnerSensesInner.
        :param pronunciation_url: The pronunciation_url of this DictlayerdataDictWordsInnerSensesInner.
        :param source: The source of this DictlayerdataDictWordsInnerSensesInner.
        :param syllabification: The syllabification of this DictlayerdataDictWordsInnerSensesInner.
        :param synonyms: The synonyms of this DictlayerdataDictWordsInnerSensesInner.
        """
        self.openapi_types = {
            'conjugations': List[DictlayerdataDictWordsInnerSensesInnerConjugationsInner],
            'definitions': List[DictlayerdataDictWordsInnerSensesInnerDefinitionsInner],
            'part_of_speech': str,
            'pronunciation': str,
            'pronunciation_url': str,
            'source': DictlayerdataDictWordsInnerDerivativesInnerSource,
            'syllabification': str,
            'synonyms': List[DictlayerdataDictWordsInnerDerivativesInner]
        }

        self.attribute_map = {
            'conjugations': 'conjugations',
            'definitions': 'definitions',
            'part_of_speech': 'partOfSpeech',
            'pronunciation': 'pronunciation',
            'pronunciation_url': 'pronunciationUrl',
            'source': 'source',
            'syllabification': 'syllabification',
            'synonyms': 'synonyms'
        }

        self._conjugations = conjugations
        self._definitions = definitions
        self._part_of_speech = part_of_speech
        self._pronunciation = pronunciation
        self._pronunciation_url = pronunciation_url
        self._source = source
        self._syllabification = syllabification
        self._synonyms = synonyms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DictlayerdataDictWordsInnerSensesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Dictlayerdata_dict_words_inner_senses_inner of this DictlayerdataDictWordsInnerSensesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conjugations(self):
        """Gets the conjugations of this DictlayerdataDictWordsInnerSensesInner.


        :return: The conjugations of this DictlayerdataDictWordsInnerSensesInner.
        :rtype: List[DictlayerdataDictWordsInnerSensesInnerConjugationsInner]
        """
        return self._conjugations

    @conjugations.setter
    def conjugations(self, conjugations):
        """Sets the conjugations of this DictlayerdataDictWordsInnerSensesInner.


        :param conjugations: The conjugations of this DictlayerdataDictWordsInnerSensesInner.
        :type conjugations: List[DictlayerdataDictWordsInnerSensesInnerConjugationsInner]
        """

        self._conjugations = conjugations

    @property
    def definitions(self):
        """Gets the definitions of this DictlayerdataDictWordsInnerSensesInner.


        :return: The definitions of this DictlayerdataDictWordsInnerSensesInner.
        :rtype: List[DictlayerdataDictWordsInnerSensesInnerDefinitionsInner]
        """
        return self._definitions

    @definitions.setter
    def definitions(self, definitions):
        """Sets the definitions of this DictlayerdataDictWordsInnerSensesInner.


        :param definitions: The definitions of this DictlayerdataDictWordsInnerSensesInner.
        :type definitions: List[DictlayerdataDictWordsInnerSensesInnerDefinitionsInner]
        """

        self._definitions = definitions

    @property
    def part_of_speech(self):
        """Gets the part_of_speech of this DictlayerdataDictWordsInnerSensesInner.


        :return: The part_of_speech of this DictlayerdataDictWordsInnerSensesInner.
        :rtype: str
        """
        return self._part_of_speech

    @part_of_speech.setter
    def part_of_speech(self, part_of_speech):
        """Sets the part_of_speech of this DictlayerdataDictWordsInnerSensesInner.


        :param part_of_speech: The part_of_speech of this DictlayerdataDictWordsInnerSensesInner.
        :type part_of_speech: str
        """

        self._part_of_speech = part_of_speech

    @property
    def pronunciation(self):
        """Gets the pronunciation of this DictlayerdataDictWordsInnerSensesInner.


        :return: The pronunciation of this DictlayerdataDictWordsInnerSensesInner.
        :rtype: str
        """
        return self._pronunciation

    @pronunciation.setter
    def pronunciation(self, pronunciation):
        """Sets the pronunciation of this DictlayerdataDictWordsInnerSensesInner.


        :param pronunciation: The pronunciation of this DictlayerdataDictWordsInnerSensesInner.
        :type pronunciation: str
        """

        self._pronunciation = pronunciation

    @property
    def pronunciation_url(self):
        """Gets the pronunciation_url of this DictlayerdataDictWordsInnerSensesInner.


        :return: The pronunciation_url of this DictlayerdataDictWordsInnerSensesInner.
        :rtype: str
        """
        return self._pronunciation_url

    @pronunciation_url.setter
    def pronunciation_url(self, pronunciation_url):
        """Sets the pronunciation_url of this DictlayerdataDictWordsInnerSensesInner.


        :param pronunciation_url: The pronunciation_url of this DictlayerdataDictWordsInnerSensesInner.
        :type pronunciation_url: str
        """

        self._pronunciation_url = pronunciation_url

    @property
    def source(self):
        """Gets the source of this DictlayerdataDictWordsInnerSensesInner.


        :return: The source of this DictlayerdataDictWordsInnerSensesInner.
        :rtype: DictlayerdataDictWordsInnerDerivativesInnerSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this DictlayerdataDictWordsInnerSensesInner.


        :param source: The source of this DictlayerdataDictWordsInnerSensesInner.
        :type source: DictlayerdataDictWordsInnerDerivativesInnerSource
        """

        self._source = source

    @property
    def syllabification(self):
        """Gets the syllabification of this DictlayerdataDictWordsInnerSensesInner.


        :return: The syllabification of this DictlayerdataDictWordsInnerSensesInner.
        :rtype: str
        """
        return self._syllabification

    @syllabification.setter
    def syllabification(self, syllabification):
        """Sets the syllabification of this DictlayerdataDictWordsInnerSensesInner.


        :param syllabification: The syllabification of this DictlayerdataDictWordsInnerSensesInner.
        :type syllabification: str
        """

        self._syllabification = syllabification

    @property
    def synonyms(self):
        """Gets the synonyms of this DictlayerdataDictWordsInnerSensesInner.


        :return: The synonyms of this DictlayerdataDictWordsInnerSensesInner.
        :rtype: List[DictlayerdataDictWordsInnerDerivativesInner]
        """
        return self._synonyms

    @synonyms.setter
    def synonyms(self, synonyms):
        """Sets the synonyms of this DictlayerdataDictWordsInnerSensesInner.


        :param synonyms: The synonyms of this DictlayerdataDictWordsInnerSensesInner.
        :type synonyms: List[DictlayerdataDictWordsInnerDerivativesInner]
        """

        self._synonyms = synonyms
