# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BooksCloudloadingResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: str=None, processing_state: str=None, title: str=None, volume_id: str=None):
        """BooksCloudloadingResource - a model defined in OpenAPI

        :param author: The author of this BooksCloudloadingResource.
        :param processing_state: The processing_state of this BooksCloudloadingResource.
        :param title: The title of this BooksCloudloadingResource.
        :param volume_id: The volume_id of this BooksCloudloadingResource.
        """
        self.openapi_types = {
            'author': str,
            'processing_state': str,
            'title': str,
            'volume_id': str
        }

        self.attribute_map = {
            'author': 'author',
            'processing_state': 'processingState',
            'title': 'title',
            'volume_id': 'volumeId'
        }

        self._author = author
        self._processing_state = processing_state
        self._title = title
        self._volume_id = volume_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BooksCloudloadingResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BooksCloudloadingResource of this BooksCloudloadingResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this BooksCloudloadingResource.


        :return: The author of this BooksCloudloadingResource.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this BooksCloudloadingResource.


        :param author: The author of this BooksCloudloadingResource.
        :type author: str
        """

        self._author = author

    @property
    def processing_state(self):
        """Gets the processing_state of this BooksCloudloadingResource.


        :return: The processing_state of this BooksCloudloadingResource.
        :rtype: str
        """
        return self._processing_state

    @processing_state.setter
    def processing_state(self, processing_state):
        """Sets the processing_state of this BooksCloudloadingResource.


        :param processing_state: The processing_state of this BooksCloudloadingResource.
        :type processing_state: str
        """

        self._processing_state = processing_state

    @property
    def title(self):
        """Gets the title of this BooksCloudloadingResource.


        :return: The title of this BooksCloudloadingResource.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this BooksCloudloadingResource.


        :param title: The title of this BooksCloudloadingResource.
        :type title: str
        """

        self._title = title

    @property
    def volume_id(self):
        """Gets the volume_id of this BooksCloudloadingResource.


        :return: The volume_id of this BooksCloudloadingResource.
        :rtype: str
        """
        return self._volume_id

    @volume_id.setter
    def volume_id(self, volume_id):
        """Sets the volume_id of this BooksCloudloadingResource.


        :param volume_id: The volume_id of this BooksCloudloadingResource.
        :type volume_id: str
        """

        self._volume_id = volume_id
