# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GeolayerdataCommon(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lang: str=None, preview_image_url: str=None, snippet: str=None, snippet_url: str=None, title: str=None):
        """GeolayerdataCommon - a model defined in OpenAPI

        :param lang: The lang of this GeolayerdataCommon.
        :param preview_image_url: The preview_image_url of this GeolayerdataCommon.
        :param snippet: The snippet of this GeolayerdataCommon.
        :param snippet_url: The snippet_url of this GeolayerdataCommon.
        :param title: The title of this GeolayerdataCommon.
        """
        self.openapi_types = {
            'lang': str,
            'preview_image_url': str,
            'snippet': str,
            'snippet_url': str,
            'title': str
        }

        self.attribute_map = {
            'lang': 'lang',
            'preview_image_url': 'previewImageUrl',
            'snippet': 'snippet',
            'snippet_url': 'snippetUrl',
            'title': 'title'
        }

        self._lang = lang
        self._preview_image_url = preview_image_url
        self._snippet = snippet
        self._snippet_url = snippet_url
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeolayerdataCommon':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Geolayerdata_common of this GeolayerdataCommon.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lang(self):
        """Gets the lang of this GeolayerdataCommon.

        The language of the information url and description.

        :return: The lang of this GeolayerdataCommon.
        :rtype: str
        """
        return self._lang

    @lang.setter
    def lang(self, lang):
        """Sets the lang of this GeolayerdataCommon.

        The language of the information url and description.

        :param lang: The lang of this GeolayerdataCommon.
        :type lang: str
        """

        self._lang = lang

    @property
    def preview_image_url(self):
        """Gets the preview_image_url of this GeolayerdataCommon.

        The URL for the preview image information.

        :return: The preview_image_url of this GeolayerdataCommon.
        :rtype: str
        """
        return self._preview_image_url

    @preview_image_url.setter
    def preview_image_url(self, preview_image_url):
        """Sets the preview_image_url of this GeolayerdataCommon.

        The URL for the preview image information.

        :param preview_image_url: The preview_image_url of this GeolayerdataCommon.
        :type preview_image_url: str
        """

        self._preview_image_url = preview_image_url

    @property
    def snippet(self):
        """Gets the snippet of this GeolayerdataCommon.

        The description for this location.

        :return: The snippet of this GeolayerdataCommon.
        :rtype: str
        """
        return self._snippet

    @snippet.setter
    def snippet(self, snippet):
        """Sets the snippet of this GeolayerdataCommon.

        The description for this location.

        :param snippet: The snippet of this GeolayerdataCommon.
        :type snippet: str
        """

        self._snippet = snippet

    @property
    def snippet_url(self):
        """Gets the snippet_url of this GeolayerdataCommon.

        The URL for information for this location. Ex: wikipedia link.

        :return: The snippet_url of this GeolayerdataCommon.
        :rtype: str
        """
        return self._snippet_url

    @snippet_url.setter
    def snippet_url(self, snippet_url):
        """Sets the snippet_url of this GeolayerdataCommon.

        The URL for information for this location. Ex: wikipedia link.

        :param snippet_url: The snippet_url of this GeolayerdataCommon.
        :type snippet_url: str
        """

        self._snippet_url = snippet_url

    @property
    def title(self):
        """Gets the title of this GeolayerdataCommon.

        The display title and localized canonical name to use when searching for this entity on Google search.

        :return: The title of this GeolayerdataCommon.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GeolayerdataCommon.

        The display title and localized canonical name to use when searching for this entity on Google search.

        :param title: The title of this GeolayerdataCommon.
        :type title: str
        """

        self._title = title
