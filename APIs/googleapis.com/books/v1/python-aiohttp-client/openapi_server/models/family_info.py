# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.family_info_membership import FamilyInfoMembership
from openapi_server import util


class FamilyInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, membership: FamilyInfoMembership=None):
        """FamilyInfo - a model defined in OpenAPI

        :param kind: The kind of this FamilyInfo.
        :param membership: The membership of this FamilyInfo.
        """
        self.openapi_types = {
            'kind': str,
            'membership': FamilyInfoMembership
        }

        self.attribute_map = {
            'kind': 'kind',
            'membership': 'membership'
        }

        self._kind = kind
        self._membership = membership

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FamilyInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FamilyInfo of this FamilyInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this FamilyInfo.

        Resource type.

        :return: The kind of this FamilyInfo.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this FamilyInfo.

        Resource type.

        :param kind: The kind of this FamilyInfo.
        :type kind: str
        """

        self._kind = kind

    @property
    def membership(self):
        """Gets the membership of this FamilyInfo.


        :return: The membership of this FamilyInfo.
        :rtype: FamilyInfoMembership
        """
        return self._membership

    @membership.setter
    def membership(self, membership):
        """Sets the membership of this FamilyInfo.


        :param membership: The membership of this FamilyInfo.
        :type membership: FamilyInfoMembership
        """

        self._membership = membership
