# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.volume_layer_info_layers_inner import VolumeLayerInfoLayersInner
from openapi_server import util


class VolumeLayerInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, layers: List[VolumeLayerInfoLayersInner]=None):
        """VolumeLayerInfo - a model defined in OpenAPI

        :param layers: The layers of this VolumeLayerInfo.
        """
        self.openapi_types = {
            'layers': List[VolumeLayerInfoLayersInner]
        }

        self.attribute_map = {
            'layers': 'layers'
        }

        self._layers = layers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VolumeLayerInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Volume_layerInfo of this VolumeLayerInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def layers(self):
        """Gets the layers of this VolumeLayerInfo.

        A layer should appear here if and only if the layer exists for this book.

        :return: The layers of this VolumeLayerInfo.
        :rtype: List[VolumeLayerInfoLayersInner]
        """
        return self._layers

    @layers.setter
    def layers(self, layers):
        """Sets the layers of this VolumeLayerInfo.

        A layer should appear here if and only if the layer exists for this book.

        :param layers: The layers of this VolumeLayerInfo.
        :type layers: List[VolumeLayerInfoLayersInner]
        """

        self._layers = layers
