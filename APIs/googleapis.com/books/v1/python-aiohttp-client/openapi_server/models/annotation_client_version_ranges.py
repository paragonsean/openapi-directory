# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.books_annotations_range import BooksAnnotationsRange
from openapi_server import util


class AnnotationClientVersionRanges(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cfi_range: BooksAnnotationsRange=None, content_version: str=None, gb_image_range: BooksAnnotationsRange=None, gb_text_range: BooksAnnotationsRange=None, image_cfi_range: BooksAnnotationsRange=None):
        """AnnotationClientVersionRanges - a model defined in OpenAPI

        :param cfi_range: The cfi_range of this AnnotationClientVersionRanges.
        :param content_version: The content_version of this AnnotationClientVersionRanges.
        :param gb_image_range: The gb_image_range of this AnnotationClientVersionRanges.
        :param gb_text_range: The gb_text_range of this AnnotationClientVersionRanges.
        :param image_cfi_range: The image_cfi_range of this AnnotationClientVersionRanges.
        """
        self.openapi_types = {
            'cfi_range': BooksAnnotationsRange,
            'content_version': str,
            'gb_image_range': BooksAnnotationsRange,
            'gb_text_range': BooksAnnotationsRange,
            'image_cfi_range': BooksAnnotationsRange
        }

        self.attribute_map = {
            'cfi_range': 'cfiRange',
            'content_version': 'contentVersion',
            'gb_image_range': 'gbImageRange',
            'gb_text_range': 'gbTextRange',
            'image_cfi_range': 'imageCfiRange'
        }

        self._cfi_range = cfi_range
        self._content_version = content_version
        self._gb_image_range = gb_image_range
        self._gb_text_range = gb_text_range
        self._image_cfi_range = image_cfi_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotationClientVersionRanges':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Annotation_clientVersionRanges of this AnnotationClientVersionRanges.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cfi_range(self):
        """Gets the cfi_range of this AnnotationClientVersionRanges.


        :return: The cfi_range of this AnnotationClientVersionRanges.
        :rtype: BooksAnnotationsRange
        """
        return self._cfi_range

    @cfi_range.setter
    def cfi_range(self, cfi_range):
        """Sets the cfi_range of this AnnotationClientVersionRanges.


        :param cfi_range: The cfi_range of this AnnotationClientVersionRanges.
        :type cfi_range: BooksAnnotationsRange
        """

        self._cfi_range = cfi_range

    @property
    def content_version(self):
        """Gets the content_version of this AnnotationClientVersionRanges.

        Content version the client sent in.

        :return: The content_version of this AnnotationClientVersionRanges.
        :rtype: str
        """
        return self._content_version

    @content_version.setter
    def content_version(self, content_version):
        """Sets the content_version of this AnnotationClientVersionRanges.

        Content version the client sent in.

        :param content_version: The content_version of this AnnotationClientVersionRanges.
        :type content_version: str
        """

        self._content_version = content_version

    @property
    def gb_image_range(self):
        """Gets the gb_image_range of this AnnotationClientVersionRanges.


        :return: The gb_image_range of this AnnotationClientVersionRanges.
        :rtype: BooksAnnotationsRange
        """
        return self._gb_image_range

    @gb_image_range.setter
    def gb_image_range(self, gb_image_range):
        """Sets the gb_image_range of this AnnotationClientVersionRanges.


        :param gb_image_range: The gb_image_range of this AnnotationClientVersionRanges.
        :type gb_image_range: BooksAnnotationsRange
        """

        self._gb_image_range = gb_image_range

    @property
    def gb_text_range(self):
        """Gets the gb_text_range of this AnnotationClientVersionRanges.


        :return: The gb_text_range of this AnnotationClientVersionRanges.
        :rtype: BooksAnnotationsRange
        """
        return self._gb_text_range

    @gb_text_range.setter
    def gb_text_range(self, gb_text_range):
        """Sets the gb_text_range of this AnnotationClientVersionRanges.


        :param gb_text_range: The gb_text_range of this AnnotationClientVersionRanges.
        :type gb_text_range: BooksAnnotationsRange
        """

        self._gb_text_range = gb_text_range

    @property
    def image_cfi_range(self):
        """Gets the image_cfi_range of this AnnotationClientVersionRanges.


        :return: The image_cfi_range of this AnnotationClientVersionRanges.
        :rtype: BooksAnnotationsRange
        """
        return self._image_cfi_range

    @image_cfi_range.setter
    def image_cfi_range(self, image_cfi_range):
        """Sets the image_cfi_range of this AnnotationClientVersionRanges.


        :param image_cfi_range: The image_cfi_range of this AnnotationClientVersionRanges.
        :type image_cfi_range: BooksAnnotationsRange
        """

        self._image_cfi_range = image_cfi_range
