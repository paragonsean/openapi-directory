# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.offers_items_inner_items_inner import OffersItemsInnerItemsInner
from openapi_server import util


class OffersItemsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, art_url: str=None, gservices_key: str=None, id: str=None, items: List[OffersItemsInnerItemsInner]=None):
        """OffersItemsInner - a model defined in OpenAPI

        :param art_url: The art_url of this OffersItemsInner.
        :param gservices_key: The gservices_key of this OffersItemsInner.
        :param id: The id of this OffersItemsInner.
        :param items: The items of this OffersItemsInner.
        """
        self.openapi_types = {
            'art_url': str,
            'gservices_key': str,
            'id': str,
            'items': List[OffersItemsInnerItemsInner]
        }

        self.attribute_map = {
            'art_url': 'artUrl',
            'gservices_key': 'gservicesKey',
            'id': 'id',
            'items': 'items'
        }

        self._art_url = art_url
        self._gservices_key = gservices_key
        self._id = id
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OffersItemsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Offers_items_inner of this OffersItemsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def art_url(self):
        """Gets the art_url of this OffersItemsInner.


        :return: The art_url of this OffersItemsInner.
        :rtype: str
        """
        return self._art_url

    @art_url.setter
    def art_url(self, art_url):
        """Sets the art_url of this OffersItemsInner.


        :param art_url: The art_url of this OffersItemsInner.
        :type art_url: str
        """

        self._art_url = art_url

    @property
    def gservices_key(self):
        """Gets the gservices_key of this OffersItemsInner.


        :return: The gservices_key of this OffersItemsInner.
        :rtype: str
        """
        return self._gservices_key

    @gservices_key.setter
    def gservices_key(self, gservices_key):
        """Sets the gservices_key of this OffersItemsInner.


        :param gservices_key: The gservices_key of this OffersItemsInner.
        :type gservices_key: str
        """

        self._gservices_key = gservices_key

    @property
    def id(self):
        """Gets the id of this OffersItemsInner.


        :return: The id of this OffersItemsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OffersItemsInner.


        :param id: The id of this OffersItemsInner.
        :type id: str
        """

        self._id = id

    @property
    def items(self):
        """Gets the items of this OffersItemsInner.


        :return: The items of this OffersItemsInner.
        :rtype: List[OffersItemsInnerItemsInner]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this OffersItemsInner.


        :param items: The items of this OffersItemsInner.
        :type items: List[OffersItemsInnerItemsInner]
        """

        self._items = items
