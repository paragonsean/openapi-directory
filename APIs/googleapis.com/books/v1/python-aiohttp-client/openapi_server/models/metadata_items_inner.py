# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetadataItemsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, download_url: str=None, encrypted_key: str=None, language: str=None, size: str=None, version: str=None):
        """MetadataItemsInner - a model defined in OpenAPI

        :param download_url: The download_url of this MetadataItemsInner.
        :param encrypted_key: The encrypted_key of this MetadataItemsInner.
        :param language: The language of this MetadataItemsInner.
        :param size: The size of this MetadataItemsInner.
        :param version: The version of this MetadataItemsInner.
        """
        self.openapi_types = {
            'download_url': str,
            'encrypted_key': str,
            'language': str,
            'size': str,
            'version': str
        }

        self.attribute_map = {
            'download_url': 'download_url',
            'encrypted_key': 'encrypted_key',
            'language': 'language',
            'size': 'size',
            'version': 'version'
        }

        self._download_url = download_url
        self._encrypted_key = encrypted_key
        self._language = language
        self._size = size
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetadataItemsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Metadata_items_inner of this MetadataItemsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def download_url(self):
        """Gets the download_url of this MetadataItemsInner.


        :return: The download_url of this MetadataItemsInner.
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this MetadataItemsInner.


        :param download_url: The download_url of this MetadataItemsInner.
        :type download_url: str
        """

        self._download_url = download_url

    @property
    def encrypted_key(self):
        """Gets the encrypted_key of this MetadataItemsInner.


        :return: The encrypted_key of this MetadataItemsInner.
        :rtype: str
        """
        return self._encrypted_key

    @encrypted_key.setter
    def encrypted_key(self, encrypted_key):
        """Sets the encrypted_key of this MetadataItemsInner.


        :param encrypted_key: The encrypted_key of this MetadataItemsInner.
        :type encrypted_key: str
        """

        self._encrypted_key = encrypted_key

    @property
    def language(self):
        """Gets the language of this MetadataItemsInner.


        :return: The language of this MetadataItemsInner.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this MetadataItemsInner.


        :param language: The language of this MetadataItemsInner.
        :type language: str
        """

        self._language = language

    @property
    def size(self):
        """Gets the size of this MetadataItemsInner.


        :return: The size of this MetadataItemsInner.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this MetadataItemsInner.


        :param size: The size of this MetadataItemsInner.
        :type size: str
        """

        self._size = size

    @property
    def version(self):
        """Gets the version of this MetadataItemsInner.


        :return: The version of this MetadataItemsInner.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this MetadataItemsInner.


        :param version: The version of this MetadataItemsInner.
        :type version: str
        """

        self._version = version
