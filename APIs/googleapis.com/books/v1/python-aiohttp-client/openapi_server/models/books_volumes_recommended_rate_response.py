# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BooksVolumesRecommendedRateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consistency_token: str=None):
        """BooksVolumesRecommendedRateResponse - a model defined in OpenAPI

        :param consistency_token: The consistency_token of this BooksVolumesRecommendedRateResponse.
        """
        self.openapi_types = {
            'consistency_token': str
        }

        self.attribute_map = {
            'consistency_token': 'consistency_token'
        }

        self._consistency_token = consistency_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BooksVolumesRecommendedRateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BooksVolumesRecommendedRateResponse of this BooksVolumesRecommendedRateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consistency_token(self):
        """Gets the consistency_token of this BooksVolumesRecommendedRateResponse.


        :return: The consistency_token of this BooksVolumesRecommendedRateResponse.
        :rtype: str
        """
        return self._consistency_token

    @consistency_token.setter
    def consistency_token(self, consistency_token):
        """Sets the consistency_token of this BooksVolumesRecommendedRateResponse.


        :param consistency_token: The consistency_token of this BooksVolumesRecommendedRateResponse.
        :type consistency_token: str
        """

        self._consistency_token = consistency_token
