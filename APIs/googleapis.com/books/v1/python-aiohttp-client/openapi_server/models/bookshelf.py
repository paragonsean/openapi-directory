# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Bookshelf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access: str=None, created: str=None, description: str=None, id: int=None, kind: str=None, self_link: str=None, title: str=None, updated: str=None, volume_count: int=None, volumes_last_updated: str=None):
        """Bookshelf - a model defined in OpenAPI

        :param access: The access of this Bookshelf.
        :param created: The created of this Bookshelf.
        :param description: The description of this Bookshelf.
        :param id: The id of this Bookshelf.
        :param kind: The kind of this Bookshelf.
        :param self_link: The self_link of this Bookshelf.
        :param title: The title of this Bookshelf.
        :param updated: The updated of this Bookshelf.
        :param volume_count: The volume_count of this Bookshelf.
        :param volumes_last_updated: The volumes_last_updated of this Bookshelf.
        """
        self.openapi_types = {
            'access': str,
            'created': str,
            'description': str,
            'id': int,
            'kind': str,
            'self_link': str,
            'title': str,
            'updated': str,
            'volume_count': int,
            'volumes_last_updated': str
        }

        self.attribute_map = {
            'access': 'access',
            'created': 'created',
            'description': 'description',
            'id': 'id',
            'kind': 'kind',
            'self_link': 'selfLink',
            'title': 'title',
            'updated': 'updated',
            'volume_count': 'volumeCount',
            'volumes_last_updated': 'volumesLastUpdated'
        }

        self._access = access
        self._created = created
        self._description = description
        self._id = id
        self._kind = kind
        self._self_link = self_link
        self._title = title
        self._updated = updated
        self._volume_count = volume_count
        self._volumes_last_updated = volumes_last_updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Bookshelf':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Bookshelf of this Bookshelf.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access(self):
        """Gets the access of this Bookshelf.

        Whether this bookshelf is PUBLIC or PRIVATE.

        :return: The access of this Bookshelf.
        :rtype: str
        """
        return self._access

    @access.setter
    def access(self, access):
        """Sets the access of this Bookshelf.

        Whether this bookshelf is PUBLIC or PRIVATE.

        :param access: The access of this Bookshelf.
        :type access: str
        """

        self._access = access

    @property
    def created(self):
        """Gets the created of this Bookshelf.

        Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).

        :return: The created of this Bookshelf.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Bookshelf.

        Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).

        :param created: The created of this Bookshelf.
        :type created: str
        """

        self._created = created

    @property
    def description(self):
        """Gets the description of this Bookshelf.

        Description of this bookshelf.

        :return: The description of this Bookshelf.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Bookshelf.

        Description of this bookshelf.

        :param description: The description of this Bookshelf.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this Bookshelf.

        Id of this bookshelf, only unique by user.

        :return: The id of this Bookshelf.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Bookshelf.

        Id of this bookshelf, only unique by user.

        :param id: The id of this Bookshelf.
        :type id: int
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Bookshelf.

        Resource type for bookshelf metadata.

        :return: The kind of this Bookshelf.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Bookshelf.

        Resource type for bookshelf metadata.

        :param kind: The kind of this Bookshelf.
        :type kind: str
        """

        self._kind = kind

    @property
    def self_link(self):
        """Gets the self_link of this Bookshelf.

        URL to this resource.

        :return: The self_link of this Bookshelf.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this Bookshelf.

        URL to this resource.

        :param self_link: The self_link of this Bookshelf.
        :type self_link: str
        """

        self._self_link = self_link

    @property
    def title(self):
        """Gets the title of this Bookshelf.

        Title of this bookshelf.

        :return: The title of this Bookshelf.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Bookshelf.

        Title of this bookshelf.

        :param title: The title of this Bookshelf.
        :type title: str
        """

        self._title = title

    @property
    def updated(self):
        """Gets the updated of this Bookshelf.

        Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).

        :return: The updated of this Bookshelf.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Bookshelf.

        Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).

        :param updated: The updated of this Bookshelf.
        :type updated: str
        """

        self._updated = updated

    @property
    def volume_count(self):
        """Gets the volume_count of this Bookshelf.

        Number of volumes in this bookshelf.

        :return: The volume_count of this Bookshelf.
        :rtype: int
        """
        return self._volume_count

    @volume_count.setter
    def volume_count(self, volume_count):
        """Sets the volume_count of this Bookshelf.

        Number of volumes in this bookshelf.

        :param volume_count: The volume_count of this Bookshelf.
        :type volume_count: int
        """

        self._volume_count = volume_count

    @property
    def volumes_last_updated(self):
        """Gets the volumes_last_updated of this Bookshelf.

        Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).

        :return: The volumes_last_updated of this Bookshelf.
        :rtype: str
        """
        return self._volumes_last_updated

    @volumes_last_updated.setter
    def volumes_last_updated(self, volumes_last_updated):
        """Sets the volumes_last_updated of this Bookshelf.

        Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).

        :param volumes_last_updated: The volumes_last_updated of this Bookshelf.
        :type volumes_last_updated: str
        """

        self._volumes_last_updated = volumes_last_updated
