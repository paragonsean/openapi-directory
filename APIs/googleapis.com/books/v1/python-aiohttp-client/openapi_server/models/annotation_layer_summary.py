# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnnotationLayerSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_character_count: int=None, limit_type: str=None, remaining_character_count: int=None):
        """AnnotationLayerSummary - a model defined in OpenAPI

        :param allowed_character_count: The allowed_character_count of this AnnotationLayerSummary.
        :param limit_type: The limit_type of this AnnotationLayerSummary.
        :param remaining_character_count: The remaining_character_count of this AnnotationLayerSummary.
        """
        self.openapi_types = {
            'allowed_character_count': int,
            'limit_type': str,
            'remaining_character_count': int
        }

        self.attribute_map = {
            'allowed_character_count': 'allowedCharacterCount',
            'limit_type': 'limitType',
            'remaining_character_count': 'remainingCharacterCount'
        }

        self._allowed_character_count = allowed_character_count
        self._limit_type = limit_type
        self._remaining_character_count = remaining_character_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotationLayerSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Annotation_layerSummary of this AnnotationLayerSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_character_count(self):
        """Gets the allowed_character_count of this AnnotationLayerSummary.

        Maximum allowed characters on this layer, especially for the \"copy\" layer.

        :return: The allowed_character_count of this AnnotationLayerSummary.
        :rtype: int
        """
        return self._allowed_character_count

    @allowed_character_count.setter
    def allowed_character_count(self, allowed_character_count):
        """Sets the allowed_character_count of this AnnotationLayerSummary.

        Maximum allowed characters on this layer, especially for the \"copy\" layer.

        :param allowed_character_count: The allowed_character_count of this AnnotationLayerSummary.
        :type allowed_character_count: int
        """

        self._allowed_character_count = allowed_character_count

    @property
    def limit_type(self):
        """Gets the limit_type of this AnnotationLayerSummary.

        Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.

        :return: The limit_type of this AnnotationLayerSummary.
        :rtype: str
        """
        return self._limit_type

    @limit_type.setter
    def limit_type(self, limit_type):
        """Sets the limit_type of this AnnotationLayerSummary.

        Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.

        :param limit_type: The limit_type of this AnnotationLayerSummary.
        :type limit_type: str
        """

        self._limit_type = limit_type

    @property
    def remaining_character_count(self):
        """Gets the remaining_character_count of this AnnotationLayerSummary.

        Remaining allowed characters on this layer, especially for the \"copy\" layer.

        :return: The remaining_character_count of this AnnotationLayerSummary.
        :rtype: int
        """
        return self._remaining_character_count

    @remaining_character_count.setter
    def remaining_character_count(self, remaining_character_count):
        """Sets the remaining_character_count of this AnnotationLayerSummary.

        Remaining allowed characters on this layer, especially for the \"copy\" layer.

        :param remaining_character_count: The remaining_character_count of this AnnotationLayerSummary.
        :type remaining_character_count: int
        """

        self._remaining_character_count = remaining_character_count
