# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.volume_sale_info_offers_inner_list_price import VolumeSaleInfoOffersInnerListPrice
from openapi_server.models.volume_sale_info_offers_inner_rental_duration import VolumeSaleInfoOffersInnerRentalDuration
from openapi_server.models.volume_sale_info_offers_inner_retail_price import VolumeSaleInfoOffersInnerRetailPrice
from openapi_server import util


class VolumeSaleInfoOffersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, finsky_offer_type: int=None, giftable: bool=None, list_price: VolumeSaleInfoOffersInnerListPrice=None, rental_duration: VolumeSaleInfoOffersInnerRentalDuration=None, retail_price: VolumeSaleInfoOffersInnerRetailPrice=None):
        """VolumeSaleInfoOffersInner - a model defined in OpenAPI

        :param finsky_offer_type: The finsky_offer_type of this VolumeSaleInfoOffersInner.
        :param giftable: The giftable of this VolumeSaleInfoOffersInner.
        :param list_price: The list_price of this VolumeSaleInfoOffersInner.
        :param rental_duration: The rental_duration of this VolumeSaleInfoOffersInner.
        :param retail_price: The retail_price of this VolumeSaleInfoOffersInner.
        """
        self.openapi_types = {
            'finsky_offer_type': int,
            'giftable': bool,
            'list_price': VolumeSaleInfoOffersInnerListPrice,
            'rental_duration': VolumeSaleInfoOffersInnerRentalDuration,
            'retail_price': VolumeSaleInfoOffersInnerRetailPrice
        }

        self.attribute_map = {
            'finsky_offer_type': 'finskyOfferType',
            'giftable': 'giftable',
            'list_price': 'listPrice',
            'rental_duration': 'rentalDuration',
            'retail_price': 'retailPrice'
        }

        self._finsky_offer_type = finsky_offer_type
        self._giftable = giftable
        self._list_price = list_price
        self._rental_duration = rental_duration
        self._retail_price = retail_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VolumeSaleInfoOffersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Volume_saleInfo_offers_inner of this VolumeSaleInfoOffersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def finsky_offer_type(self):
        """Gets the finsky_offer_type of this VolumeSaleInfoOffersInner.

        The finsky offer type (e.g., PURCHASE=0 RENTAL=3)

        :return: The finsky_offer_type of this VolumeSaleInfoOffersInner.
        :rtype: int
        """
        return self._finsky_offer_type

    @finsky_offer_type.setter
    def finsky_offer_type(self, finsky_offer_type):
        """Sets the finsky_offer_type of this VolumeSaleInfoOffersInner.

        The finsky offer type (e.g., PURCHASE=0 RENTAL=3)

        :param finsky_offer_type: The finsky_offer_type of this VolumeSaleInfoOffersInner.
        :type finsky_offer_type: int
        """

        self._finsky_offer_type = finsky_offer_type

    @property
    def giftable(self):
        """Gets the giftable of this VolumeSaleInfoOffersInner.

        Indicates whether the offer is giftable.

        :return: The giftable of this VolumeSaleInfoOffersInner.
        :rtype: bool
        """
        return self._giftable

    @giftable.setter
    def giftable(self, giftable):
        """Sets the giftable of this VolumeSaleInfoOffersInner.

        Indicates whether the offer is giftable.

        :param giftable: The giftable of this VolumeSaleInfoOffersInner.
        :type giftable: bool
        """

        self._giftable = giftable

    @property
    def list_price(self):
        """Gets the list_price of this VolumeSaleInfoOffersInner.


        :return: The list_price of this VolumeSaleInfoOffersInner.
        :rtype: VolumeSaleInfoOffersInnerListPrice
        """
        return self._list_price

    @list_price.setter
    def list_price(self, list_price):
        """Sets the list_price of this VolumeSaleInfoOffersInner.


        :param list_price: The list_price of this VolumeSaleInfoOffersInner.
        :type list_price: VolumeSaleInfoOffersInnerListPrice
        """

        self._list_price = list_price

    @property
    def rental_duration(self):
        """Gets the rental_duration of this VolumeSaleInfoOffersInner.


        :return: The rental_duration of this VolumeSaleInfoOffersInner.
        :rtype: VolumeSaleInfoOffersInnerRentalDuration
        """
        return self._rental_duration

    @rental_duration.setter
    def rental_duration(self, rental_duration):
        """Sets the rental_duration of this VolumeSaleInfoOffersInner.


        :param rental_duration: The rental_duration of this VolumeSaleInfoOffersInner.
        :type rental_duration: VolumeSaleInfoOffersInnerRentalDuration
        """

        self._rental_duration = rental_duration

    @property
    def retail_price(self):
        """Gets the retail_price of this VolumeSaleInfoOffersInner.


        :return: The retail_price of this VolumeSaleInfoOffersInner.
        :rtype: VolumeSaleInfoOffersInnerRetailPrice
        """
        return self._retail_price

    @retail_price.setter
    def retail_price(self, retail_price):
        """Sets the retail_price of this VolumeSaleInfoOffersInner.


        :param retail_price: The retail_price of this VolumeSaleInfoOffersInner.
        :type retail_price: VolumeSaleInfoOffersInnerRetailPrice
        """

        self._retail_price = retail_price
