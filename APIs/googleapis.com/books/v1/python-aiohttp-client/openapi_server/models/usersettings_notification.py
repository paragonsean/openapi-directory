# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.usersettings_notification_match_my_interests import UsersettingsNotificationMatchMyInterests
from openapi_server import util


class UsersettingsNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, match_my_interests: UsersettingsNotificationMatchMyInterests=None, more_from_authors: UsersettingsNotificationMatchMyInterests=None, more_from_series: UsersettingsNotificationMatchMyInterests=None, price_drop: UsersettingsNotificationMatchMyInterests=None, reward_expirations: UsersettingsNotificationMatchMyInterests=None):
        """UsersettingsNotification - a model defined in OpenAPI

        :param match_my_interests: The match_my_interests of this UsersettingsNotification.
        :param more_from_authors: The more_from_authors of this UsersettingsNotification.
        :param more_from_series: The more_from_series of this UsersettingsNotification.
        :param price_drop: The price_drop of this UsersettingsNotification.
        :param reward_expirations: The reward_expirations of this UsersettingsNotification.
        """
        self.openapi_types = {
            'match_my_interests': UsersettingsNotificationMatchMyInterests,
            'more_from_authors': UsersettingsNotificationMatchMyInterests,
            'more_from_series': UsersettingsNotificationMatchMyInterests,
            'price_drop': UsersettingsNotificationMatchMyInterests,
            'reward_expirations': UsersettingsNotificationMatchMyInterests
        }

        self.attribute_map = {
            'match_my_interests': 'matchMyInterests',
            'more_from_authors': 'moreFromAuthors',
            'more_from_series': 'moreFromSeries',
            'price_drop': 'priceDrop',
            'reward_expirations': 'rewardExpirations'
        }

        self._match_my_interests = match_my_interests
        self._more_from_authors = more_from_authors
        self._more_from_series = more_from_series
        self._price_drop = price_drop
        self._reward_expirations = reward_expirations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersettingsNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Usersettings_notification of this UsersettingsNotification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def match_my_interests(self):
        """Gets the match_my_interests of this UsersettingsNotification.


        :return: The match_my_interests of this UsersettingsNotification.
        :rtype: UsersettingsNotificationMatchMyInterests
        """
        return self._match_my_interests

    @match_my_interests.setter
    def match_my_interests(self, match_my_interests):
        """Sets the match_my_interests of this UsersettingsNotification.


        :param match_my_interests: The match_my_interests of this UsersettingsNotification.
        :type match_my_interests: UsersettingsNotificationMatchMyInterests
        """

        self._match_my_interests = match_my_interests

    @property
    def more_from_authors(self):
        """Gets the more_from_authors of this UsersettingsNotification.


        :return: The more_from_authors of this UsersettingsNotification.
        :rtype: UsersettingsNotificationMatchMyInterests
        """
        return self._more_from_authors

    @more_from_authors.setter
    def more_from_authors(self, more_from_authors):
        """Sets the more_from_authors of this UsersettingsNotification.


        :param more_from_authors: The more_from_authors of this UsersettingsNotification.
        :type more_from_authors: UsersettingsNotificationMatchMyInterests
        """

        self._more_from_authors = more_from_authors

    @property
    def more_from_series(self):
        """Gets the more_from_series of this UsersettingsNotification.


        :return: The more_from_series of this UsersettingsNotification.
        :rtype: UsersettingsNotificationMatchMyInterests
        """
        return self._more_from_series

    @more_from_series.setter
    def more_from_series(self, more_from_series):
        """Sets the more_from_series of this UsersettingsNotification.


        :param more_from_series: The more_from_series of this UsersettingsNotification.
        :type more_from_series: UsersettingsNotificationMatchMyInterests
        """

        self._more_from_series = more_from_series

    @property
    def price_drop(self):
        """Gets the price_drop of this UsersettingsNotification.


        :return: The price_drop of this UsersettingsNotification.
        :rtype: UsersettingsNotificationMatchMyInterests
        """
        return self._price_drop

    @price_drop.setter
    def price_drop(self, price_drop):
        """Sets the price_drop of this UsersettingsNotification.


        :param price_drop: The price_drop of this UsersettingsNotification.
        :type price_drop: UsersettingsNotificationMatchMyInterests
        """

        self._price_drop = price_drop

    @property
    def reward_expirations(self):
        """Gets the reward_expirations of this UsersettingsNotification.


        :return: The reward_expirations of this UsersettingsNotification.
        :rtype: UsersettingsNotificationMatchMyInterests
        """
        return self._reward_expirations

    @reward_expirations.setter
    def reward_expirations(self, reward_expirations):
        """Sets the reward_expirations of this UsersettingsNotification.


        :param reward_expirations: The reward_expirations of this UsersettingsNotification.
        :type reward_expirations: UsersettingsNotificationMatchMyInterests
        """

        self._reward_expirations = reward_expirations
