# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.geolayerdata_common import GeolayerdataCommon
from openapi_server.models.geolayerdata_geo import GeolayerdataGeo
from openapi_server import util


class Geolayerdata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, common: GeolayerdataCommon=None, geo: GeolayerdataGeo=None, kind: str=None):
        """Geolayerdata - a model defined in OpenAPI

        :param common: The common of this Geolayerdata.
        :param geo: The geo of this Geolayerdata.
        :param kind: The kind of this Geolayerdata.
        """
        self.openapi_types = {
            'common': GeolayerdataCommon,
            'geo': GeolayerdataGeo,
            'kind': str
        }

        self.attribute_map = {
            'common': 'common',
            'geo': 'geo',
            'kind': 'kind'
        }

        self._common = common
        self._geo = geo
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Geolayerdata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Geolayerdata of this Geolayerdata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def common(self):
        """Gets the common of this Geolayerdata.


        :return: The common of this Geolayerdata.
        :rtype: GeolayerdataCommon
        """
        return self._common

    @common.setter
    def common(self, common):
        """Sets the common of this Geolayerdata.


        :param common: The common of this Geolayerdata.
        :type common: GeolayerdataCommon
        """

        self._common = common

    @property
    def geo(self):
        """Gets the geo of this Geolayerdata.


        :return: The geo of this Geolayerdata.
        :rtype: GeolayerdataGeo
        """
        return self._geo

    @geo.setter
    def geo(self, geo):
        """Sets the geo of this Geolayerdata.


        :param geo: The geo of this Geolayerdata.
        :type geo: GeolayerdataGeo
        """

        self._geo = geo

    @property
    def kind(self):
        """Gets the kind of this Geolayerdata.


        :return: The kind of this Geolayerdata.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Geolayerdata.


        :param kind: The kind of this Geolayerdata.
        :type kind: str
        """

        self._kind = kind
