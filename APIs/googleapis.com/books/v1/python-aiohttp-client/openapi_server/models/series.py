# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.series_series_inner import SeriesSeriesInner
from openapi_server import util


class Series(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, series: List[SeriesSeriesInner]=None):
        """Series - a model defined in OpenAPI

        :param kind: The kind of this Series.
        :param series: The series of this Series.
        """
        self.openapi_types = {
            'kind': str,
            'series': List[SeriesSeriesInner]
        }

        self.attribute_map = {
            'kind': 'kind',
            'series': 'series'
        }

        self._kind = kind
        self._series = series

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Series':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Series of this Series.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this Series.

        Resource type.

        :return: The kind of this Series.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Series.

        Resource type.

        :param kind: The kind of this Series.
        :type kind: str
        """

        self._kind = kind

    @property
    def series(self):
        """Gets the series of this Series.


        :return: The series of this Series.
        :rtype: List[SeriesSeriesInner]
        """
        return self._series

    @series.setter
    def series(self, series):
        """Sets the series of this Series.


        :param series: The series of this Series.
        :type series: List[SeriesSeriesInner]
        """

        self._series = series
