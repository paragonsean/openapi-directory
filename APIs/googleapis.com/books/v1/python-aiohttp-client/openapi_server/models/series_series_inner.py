# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.series_series_inner_series_subscription_release_info import SeriesSeriesInnerSeriesSubscriptionReleaseInfo
from openapi_server import util


class SeriesSeriesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, banner_image_url: str=None, eligible_for_subscription: bool=None, image_url: str=None, is_complete: bool=None, series_format_type: str=None, series_id: str=None, series_subscription_release_info: SeriesSeriesInnerSeriesSubscriptionReleaseInfo=None, series_type: str=None, subscription_id: str=None, title: str=None):
        """SeriesSeriesInner - a model defined in OpenAPI

        :param banner_image_url: The banner_image_url of this SeriesSeriesInner.
        :param eligible_for_subscription: The eligible_for_subscription of this SeriesSeriesInner.
        :param image_url: The image_url of this SeriesSeriesInner.
        :param is_complete: The is_complete of this SeriesSeriesInner.
        :param series_format_type: The series_format_type of this SeriesSeriesInner.
        :param series_id: The series_id of this SeriesSeriesInner.
        :param series_subscription_release_info: The series_subscription_release_info of this SeriesSeriesInner.
        :param series_type: The series_type of this SeriesSeriesInner.
        :param subscription_id: The subscription_id of this SeriesSeriesInner.
        :param title: The title of this SeriesSeriesInner.
        """
        self.openapi_types = {
            'banner_image_url': str,
            'eligible_for_subscription': bool,
            'image_url': str,
            'is_complete': bool,
            'series_format_type': str,
            'series_id': str,
            'series_subscription_release_info': SeriesSeriesInnerSeriesSubscriptionReleaseInfo,
            'series_type': str,
            'subscription_id': str,
            'title': str
        }

        self.attribute_map = {
            'banner_image_url': 'bannerImageUrl',
            'eligible_for_subscription': 'eligibleForSubscription',
            'image_url': 'imageUrl',
            'is_complete': 'isComplete',
            'series_format_type': 'seriesFormatType',
            'series_id': 'seriesId',
            'series_subscription_release_info': 'seriesSubscriptionReleaseInfo',
            'series_type': 'seriesType',
            'subscription_id': 'subscriptionId',
            'title': 'title'
        }

        self._banner_image_url = banner_image_url
        self._eligible_for_subscription = eligible_for_subscription
        self._image_url = image_url
        self._is_complete = is_complete
        self._series_format_type = series_format_type
        self._series_id = series_id
        self._series_subscription_release_info = series_subscription_release_info
        self._series_type = series_type
        self._subscription_id = subscription_id
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SeriesSeriesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Series_series_inner of this SeriesSeriesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def banner_image_url(self):
        """Gets the banner_image_url of this SeriesSeriesInner.


        :return: The banner_image_url of this SeriesSeriesInner.
        :rtype: str
        """
        return self._banner_image_url

    @banner_image_url.setter
    def banner_image_url(self, banner_image_url):
        """Sets the banner_image_url of this SeriesSeriesInner.


        :param banner_image_url: The banner_image_url of this SeriesSeriesInner.
        :type banner_image_url: str
        """

        self._banner_image_url = banner_image_url

    @property
    def eligible_for_subscription(self):
        """Gets the eligible_for_subscription of this SeriesSeriesInner.


        :return: The eligible_for_subscription of this SeriesSeriesInner.
        :rtype: bool
        """
        return self._eligible_for_subscription

    @eligible_for_subscription.setter
    def eligible_for_subscription(self, eligible_for_subscription):
        """Sets the eligible_for_subscription of this SeriesSeriesInner.


        :param eligible_for_subscription: The eligible_for_subscription of this SeriesSeriesInner.
        :type eligible_for_subscription: bool
        """

        self._eligible_for_subscription = eligible_for_subscription

    @property
    def image_url(self):
        """Gets the image_url of this SeriesSeriesInner.


        :return: The image_url of this SeriesSeriesInner.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this SeriesSeriesInner.


        :param image_url: The image_url of this SeriesSeriesInner.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def is_complete(self):
        """Gets the is_complete of this SeriesSeriesInner.


        :return: The is_complete of this SeriesSeriesInner.
        :rtype: bool
        """
        return self._is_complete

    @is_complete.setter
    def is_complete(self, is_complete):
        """Sets the is_complete of this SeriesSeriesInner.


        :param is_complete: The is_complete of this SeriesSeriesInner.
        :type is_complete: bool
        """

        self._is_complete = is_complete

    @property
    def series_format_type(self):
        """Gets the series_format_type of this SeriesSeriesInner.


        :return: The series_format_type of this SeriesSeriesInner.
        :rtype: str
        """
        return self._series_format_type

    @series_format_type.setter
    def series_format_type(self, series_format_type):
        """Sets the series_format_type of this SeriesSeriesInner.


        :param series_format_type: The series_format_type of this SeriesSeriesInner.
        :type series_format_type: str
        """

        self._series_format_type = series_format_type

    @property
    def series_id(self):
        """Gets the series_id of this SeriesSeriesInner.


        :return: The series_id of this SeriesSeriesInner.
        :rtype: str
        """
        return self._series_id

    @series_id.setter
    def series_id(self, series_id):
        """Sets the series_id of this SeriesSeriesInner.


        :param series_id: The series_id of this SeriesSeriesInner.
        :type series_id: str
        """

        self._series_id = series_id

    @property
    def series_subscription_release_info(self):
        """Gets the series_subscription_release_info of this SeriesSeriesInner.


        :return: The series_subscription_release_info of this SeriesSeriesInner.
        :rtype: SeriesSeriesInnerSeriesSubscriptionReleaseInfo
        """
        return self._series_subscription_release_info

    @series_subscription_release_info.setter
    def series_subscription_release_info(self, series_subscription_release_info):
        """Sets the series_subscription_release_info of this SeriesSeriesInner.


        :param series_subscription_release_info: The series_subscription_release_info of this SeriesSeriesInner.
        :type series_subscription_release_info: SeriesSeriesInnerSeriesSubscriptionReleaseInfo
        """

        self._series_subscription_release_info = series_subscription_release_info

    @property
    def series_type(self):
        """Gets the series_type of this SeriesSeriesInner.


        :return: The series_type of this SeriesSeriesInner.
        :rtype: str
        """
        return self._series_type

    @series_type.setter
    def series_type(self, series_type):
        """Sets the series_type of this SeriesSeriesInner.


        :param series_type: The series_type of this SeriesSeriesInner.
        :type series_type: str
        """

        self._series_type = series_type

    @property
    def subscription_id(self):
        """Gets the subscription_id of this SeriesSeriesInner.


        :return: The subscription_id of this SeriesSeriesInner.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this SeriesSeriesInner.


        :param subscription_id: The subscription_id of this SeriesSeriesInner.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def title(self):
        """Gets the title of this SeriesSeriesInner.


        :return: The title of this SeriesSeriesInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SeriesSeriesInner.


        :param title: The title of this SeriesSeriesInner.
        :type title: str
        """

        self._title = title
