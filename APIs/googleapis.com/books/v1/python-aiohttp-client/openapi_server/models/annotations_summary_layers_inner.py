# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnnotationsSummaryLayersInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_character_count: int=None, layer_id: str=None, limit_type: str=None, remaining_character_count: int=None, updated: str=None):
        """AnnotationsSummaryLayersInner - a model defined in OpenAPI

        :param allowed_character_count: The allowed_character_count of this AnnotationsSummaryLayersInner.
        :param layer_id: The layer_id of this AnnotationsSummaryLayersInner.
        :param limit_type: The limit_type of this AnnotationsSummaryLayersInner.
        :param remaining_character_count: The remaining_character_count of this AnnotationsSummaryLayersInner.
        :param updated: The updated of this AnnotationsSummaryLayersInner.
        """
        self.openapi_types = {
            'allowed_character_count': int,
            'layer_id': str,
            'limit_type': str,
            'remaining_character_count': int,
            'updated': str
        }

        self.attribute_map = {
            'allowed_character_count': 'allowedCharacterCount',
            'layer_id': 'layerId',
            'limit_type': 'limitType',
            'remaining_character_count': 'remainingCharacterCount',
            'updated': 'updated'
        }

        self._allowed_character_count = allowed_character_count
        self._layer_id = layer_id
        self._limit_type = limit_type
        self._remaining_character_count = remaining_character_count
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotationsSummaryLayersInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnnotationsSummary_layers_inner of this AnnotationsSummaryLayersInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_character_count(self):
        """Gets the allowed_character_count of this AnnotationsSummaryLayersInner.


        :return: The allowed_character_count of this AnnotationsSummaryLayersInner.
        :rtype: int
        """
        return self._allowed_character_count

    @allowed_character_count.setter
    def allowed_character_count(self, allowed_character_count):
        """Sets the allowed_character_count of this AnnotationsSummaryLayersInner.


        :param allowed_character_count: The allowed_character_count of this AnnotationsSummaryLayersInner.
        :type allowed_character_count: int
        """

        self._allowed_character_count = allowed_character_count

    @property
    def layer_id(self):
        """Gets the layer_id of this AnnotationsSummaryLayersInner.


        :return: The layer_id of this AnnotationsSummaryLayersInner.
        :rtype: str
        """
        return self._layer_id

    @layer_id.setter
    def layer_id(self, layer_id):
        """Sets the layer_id of this AnnotationsSummaryLayersInner.


        :param layer_id: The layer_id of this AnnotationsSummaryLayersInner.
        :type layer_id: str
        """

        self._layer_id = layer_id

    @property
    def limit_type(self):
        """Gets the limit_type of this AnnotationsSummaryLayersInner.


        :return: The limit_type of this AnnotationsSummaryLayersInner.
        :rtype: str
        """
        return self._limit_type

    @limit_type.setter
    def limit_type(self, limit_type):
        """Sets the limit_type of this AnnotationsSummaryLayersInner.


        :param limit_type: The limit_type of this AnnotationsSummaryLayersInner.
        :type limit_type: str
        """

        self._limit_type = limit_type

    @property
    def remaining_character_count(self):
        """Gets the remaining_character_count of this AnnotationsSummaryLayersInner.


        :return: The remaining_character_count of this AnnotationsSummaryLayersInner.
        :rtype: int
        """
        return self._remaining_character_count

    @remaining_character_count.setter
    def remaining_character_count(self, remaining_character_count):
        """Sets the remaining_character_count of this AnnotationsSummaryLayersInner.


        :param remaining_character_count: The remaining_character_count of this AnnotationsSummaryLayersInner.
        :type remaining_character_count: int
        """

        self._remaining_character_count = remaining_character_count

    @property
    def updated(self):
        """Gets the updated of this AnnotationsSummaryLayersInner.


        :return: The updated of this AnnotationsSummaryLayersInner.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this AnnotationsSummaryLayersInner.


        :param updated: The updated of this AnnotationsSummaryLayersInner.
        :type updated: str
        """

        self._updated = updated
