# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Layersummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_count: int=None, annotation_types: List[str]=None, annotations_data_link: str=None, annotations_link: str=None, content_version: str=None, data_count: int=None, id: str=None, kind: str=None, layer_id: str=None, self_link: str=None, updated: str=None, volume_annotations_version: str=None, volume_id: str=None):
        """Layersummary - a model defined in OpenAPI

        :param annotation_count: The annotation_count of this Layersummary.
        :param annotation_types: The annotation_types of this Layersummary.
        :param annotations_data_link: The annotations_data_link of this Layersummary.
        :param annotations_link: The annotations_link of this Layersummary.
        :param content_version: The content_version of this Layersummary.
        :param data_count: The data_count of this Layersummary.
        :param id: The id of this Layersummary.
        :param kind: The kind of this Layersummary.
        :param layer_id: The layer_id of this Layersummary.
        :param self_link: The self_link of this Layersummary.
        :param updated: The updated of this Layersummary.
        :param volume_annotations_version: The volume_annotations_version of this Layersummary.
        :param volume_id: The volume_id of this Layersummary.
        """
        self.openapi_types = {
            'annotation_count': int,
            'annotation_types': List[str],
            'annotations_data_link': str,
            'annotations_link': str,
            'content_version': str,
            'data_count': int,
            'id': str,
            'kind': str,
            'layer_id': str,
            'self_link': str,
            'updated': str,
            'volume_annotations_version': str,
            'volume_id': str
        }

        self.attribute_map = {
            'annotation_count': 'annotationCount',
            'annotation_types': 'annotationTypes',
            'annotations_data_link': 'annotationsDataLink',
            'annotations_link': 'annotationsLink',
            'content_version': 'contentVersion',
            'data_count': 'dataCount',
            'id': 'id',
            'kind': 'kind',
            'layer_id': 'layerId',
            'self_link': 'selfLink',
            'updated': 'updated',
            'volume_annotations_version': 'volumeAnnotationsVersion',
            'volume_id': 'volumeId'
        }

        self._annotation_count = annotation_count
        self._annotation_types = annotation_types
        self._annotations_data_link = annotations_data_link
        self._annotations_link = annotations_link
        self._content_version = content_version
        self._data_count = data_count
        self._id = id
        self._kind = kind
        self._layer_id = layer_id
        self._self_link = self_link
        self._updated = updated
        self._volume_annotations_version = volume_annotations_version
        self._volume_id = volume_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Layersummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Layersummary of this Layersummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_count(self):
        """Gets the annotation_count of this Layersummary.

        The number of annotations for this layer.

        :return: The annotation_count of this Layersummary.
        :rtype: int
        """
        return self._annotation_count

    @annotation_count.setter
    def annotation_count(self, annotation_count):
        """Sets the annotation_count of this Layersummary.

        The number of annotations for this layer.

        :param annotation_count: The annotation_count of this Layersummary.
        :type annotation_count: int
        """

        self._annotation_count = annotation_count

    @property
    def annotation_types(self):
        """Gets the annotation_types of this Layersummary.

        The list of annotation types contained for this layer.

        :return: The annotation_types of this Layersummary.
        :rtype: List[str]
        """
        return self._annotation_types

    @annotation_types.setter
    def annotation_types(self, annotation_types):
        """Sets the annotation_types of this Layersummary.

        The list of annotation types contained for this layer.

        :param annotation_types: The annotation_types of this Layersummary.
        :type annotation_types: List[str]
        """

        self._annotation_types = annotation_types

    @property
    def annotations_data_link(self):
        """Gets the annotations_data_link of this Layersummary.

        Link to get data for this annotation.

        :return: The annotations_data_link of this Layersummary.
        :rtype: str
        """
        return self._annotations_data_link

    @annotations_data_link.setter
    def annotations_data_link(self, annotations_data_link):
        """Sets the annotations_data_link of this Layersummary.

        Link to get data for this annotation.

        :param annotations_data_link: The annotations_data_link of this Layersummary.
        :type annotations_data_link: str
        """

        self._annotations_data_link = annotations_data_link

    @property
    def annotations_link(self):
        """Gets the annotations_link of this Layersummary.

        The link to get the annotations for this layer.

        :return: The annotations_link of this Layersummary.
        :rtype: str
        """
        return self._annotations_link

    @annotations_link.setter
    def annotations_link(self, annotations_link):
        """Sets the annotations_link of this Layersummary.

        The link to get the annotations for this layer.

        :param annotations_link: The annotations_link of this Layersummary.
        :type annotations_link: str
        """

        self._annotations_link = annotations_link

    @property
    def content_version(self):
        """Gets the content_version of this Layersummary.

        The content version this resource is for.

        :return: The content_version of this Layersummary.
        :rtype: str
        """
        return self._content_version

    @content_version.setter
    def content_version(self, content_version):
        """Sets the content_version of this Layersummary.

        The content version this resource is for.

        :param content_version: The content_version of this Layersummary.
        :type content_version: str
        """

        self._content_version = content_version

    @property
    def data_count(self):
        """Gets the data_count of this Layersummary.

        The number of data items for this layer.

        :return: The data_count of this Layersummary.
        :rtype: int
        """
        return self._data_count

    @data_count.setter
    def data_count(self, data_count):
        """Sets the data_count of this Layersummary.

        The number of data items for this layer.

        :param data_count: The data_count of this Layersummary.
        :type data_count: int
        """

        self._data_count = data_count

    @property
    def id(self):
        """Gets the id of this Layersummary.

        Unique id of this layer summary.

        :return: The id of this Layersummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Layersummary.

        Unique id of this layer summary.

        :param id: The id of this Layersummary.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Layersummary.

        Resource Type

        :return: The kind of this Layersummary.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Layersummary.

        Resource Type

        :param kind: The kind of this Layersummary.
        :type kind: str
        """

        self._kind = kind

    @property
    def layer_id(self):
        """Gets the layer_id of this Layersummary.

        The layer id for this summary.

        :return: The layer_id of this Layersummary.
        :rtype: str
        """
        return self._layer_id

    @layer_id.setter
    def layer_id(self, layer_id):
        """Sets the layer_id of this Layersummary.

        The layer id for this summary.

        :param layer_id: The layer_id of this Layersummary.
        :type layer_id: str
        """

        self._layer_id = layer_id

    @property
    def self_link(self):
        """Gets the self_link of this Layersummary.

        URL to this resource.

        :return: The self_link of this Layersummary.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this Layersummary.

        URL to this resource.

        :param self_link: The self_link of this Layersummary.
        :type self_link: str
        """

        self._self_link = self_link

    @property
    def updated(self):
        """Gets the updated of this Layersummary.

        Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).

        :return: The updated of this Layersummary.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Layersummary.

        Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).

        :param updated: The updated of this Layersummary.
        :type updated: str
        """

        self._updated = updated

    @property
    def volume_annotations_version(self):
        """Gets the volume_annotations_version of this Layersummary.

        The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.

        :return: The volume_annotations_version of this Layersummary.
        :rtype: str
        """
        return self._volume_annotations_version

    @volume_annotations_version.setter
    def volume_annotations_version(self, volume_annotations_version):
        """Sets the volume_annotations_version of this Layersummary.

        The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.

        :param volume_annotations_version: The volume_annotations_version of this Layersummary.
        :type volume_annotations_version: str
        """

        self._volume_annotations_version = volume_annotations_version

    @property
    def volume_id(self):
        """Gets the volume_id of this Layersummary.

        The volume id this resource is for.

        :return: The volume_id of this Layersummary.
        :rtype: str
        """
        return self._volume_id

    @volume_id.setter
    def volume_id(self, volume_id):
        """Sets the volume_id of this Layersummary.

        The volume id this resource is for.

        :param volume_id: The volume_id of this Layersummary.
        :type volume_id: str
        """

        self._volume_id = volume_id
