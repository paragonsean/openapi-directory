# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.review_author import ReviewAuthor
from openapi_server.models.review_source import ReviewSource
from openapi_server import util


class Review(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: ReviewAuthor=None, content: str=None, _date: str=None, full_text_url: str=None, kind: str=None, rating: str=None, source: ReviewSource=None, title: str=None, type: str=None, volume_id: str=None):
        """Review - a model defined in OpenAPI

        :param author: The author of this Review.
        :param content: The content of this Review.
        :param _date: The _date of this Review.
        :param full_text_url: The full_text_url of this Review.
        :param kind: The kind of this Review.
        :param rating: The rating of this Review.
        :param source: The source of this Review.
        :param title: The title of this Review.
        :param type: The type of this Review.
        :param volume_id: The volume_id of this Review.
        """
        self.openapi_types = {
            'author': ReviewAuthor,
            'content': str,
            '_date': str,
            'full_text_url': str,
            'kind': str,
            'rating': str,
            'source': ReviewSource,
            'title': str,
            'type': str,
            'volume_id': str
        }

        self.attribute_map = {
            'author': 'author',
            'content': 'content',
            '_date': 'date',
            'full_text_url': 'fullTextUrl',
            'kind': 'kind',
            'rating': 'rating',
            'source': 'source',
            'title': 'title',
            'type': 'type',
            'volume_id': 'volumeId'
        }

        self._author = author
        self._content = content
        self.__date = _date
        self._full_text_url = full_text_url
        self._kind = kind
        self._rating = rating
        self._source = source
        self._title = title
        self._type = type
        self._volume_id = volume_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Review':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Review of this Review.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this Review.


        :return: The author of this Review.
        :rtype: ReviewAuthor
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this Review.


        :param author: The author of this Review.
        :type author: ReviewAuthor
        """

        self._author = author

    @property
    def content(self):
        """Gets the content of this Review.

        Review text.

        :return: The content of this Review.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this Review.

        Review text.

        :param content: The content of this Review.
        :type content: str
        """

        self._content = content

    @property
    def _date(self):
        """Gets the _date of this Review.

        Date of this review.

        :return: The _date of this Review.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Review.

        Date of this review.

        :param _date: The _date of this Review.
        :type _date: str
        """

        self.__date = _date

    @property
    def full_text_url(self):
        """Gets the full_text_url of this Review.

        URL for the full review text, for reviews gathered from the web.

        :return: The full_text_url of this Review.
        :rtype: str
        """
        return self._full_text_url

    @full_text_url.setter
    def full_text_url(self, full_text_url):
        """Sets the full_text_url of this Review.

        URL for the full review text, for reviews gathered from the web.

        :param full_text_url: The full_text_url of this Review.
        :type full_text_url: str
        """

        self._full_text_url = full_text_url

    @property
    def kind(self):
        """Gets the kind of this Review.

        Resource type for a review.

        :return: The kind of this Review.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Review.

        Resource type for a review.

        :param kind: The kind of this Review.
        :type kind: str
        """

        self._kind = kind

    @property
    def rating(self):
        """Gets the rating of this Review.

        Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.

        :return: The rating of this Review.
        :rtype: str
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this Review.

        Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.

        :param rating: The rating of this Review.
        :type rating: str
        """

        self._rating = rating

    @property
    def source(self):
        """Gets the source of this Review.


        :return: The source of this Review.
        :rtype: ReviewSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this Review.


        :param source: The source of this Review.
        :type source: ReviewSource
        """

        self._source = source

    @property
    def title(self):
        """Gets the title of this Review.

        Title for this review.

        :return: The title of this Review.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Review.

        Title for this review.

        :param title: The title of this Review.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this Review.

        Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.

        :return: The type of this Review.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Review.

        Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.

        :param type: The type of this Review.
        :type type: str
        """

        self._type = type

    @property
    def volume_id(self):
        """Gets the volume_id of this Review.

        Volume that this review is for.

        :return: The volume_id of this Review.
        :rtype: str
        """
        return self._volume_id

    @volume_id.setter
    def volume_id(self, volume_id):
        """Sets the volume_id of this Review.

        Volume that this review is for.

        :param volume_id: The volume_id of this Review.
        :type volume_id: str
        """

        self._volume_id = volume_id
