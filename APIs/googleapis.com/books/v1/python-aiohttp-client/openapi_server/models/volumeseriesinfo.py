# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.volumeseriesinfo_volume_series_inner import VolumeseriesinfoVolumeSeriesInner
from openapi_server import util


class Volumeseriesinfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, book_display_number: str=None, kind: str=None, short_series_book_title: str=None, volume_series: List[VolumeseriesinfoVolumeSeriesInner]=None):
        """Volumeseriesinfo - a model defined in OpenAPI

        :param book_display_number: The book_display_number of this Volumeseriesinfo.
        :param kind: The kind of this Volumeseriesinfo.
        :param short_series_book_title: The short_series_book_title of this Volumeseriesinfo.
        :param volume_series: The volume_series of this Volumeseriesinfo.
        """
        self.openapi_types = {
            'book_display_number': str,
            'kind': str,
            'short_series_book_title': str,
            'volume_series': List[VolumeseriesinfoVolumeSeriesInner]
        }

        self.attribute_map = {
            'book_display_number': 'bookDisplayNumber',
            'kind': 'kind',
            'short_series_book_title': 'shortSeriesBookTitle',
            'volume_series': 'volumeSeries'
        }

        self._book_display_number = book_display_number
        self._kind = kind
        self._short_series_book_title = short_series_book_title
        self._volume_series = volume_series

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Volumeseriesinfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Volumeseriesinfo of this Volumeseriesinfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def book_display_number(self):
        """Gets the book_display_number of this Volumeseriesinfo.

        The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.

        :return: The book_display_number of this Volumeseriesinfo.
        :rtype: str
        """
        return self._book_display_number

    @book_display_number.setter
    def book_display_number(self, book_display_number):
        """Sets the book_display_number of this Volumeseriesinfo.

        The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.

        :param book_display_number: The book_display_number of this Volumeseriesinfo.
        :type book_display_number: str
        """

        self._book_display_number = book_display_number

    @property
    def kind(self):
        """Gets the kind of this Volumeseriesinfo.

        Resource type.

        :return: The kind of this Volumeseriesinfo.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Volumeseriesinfo.

        Resource type.

        :param kind: The kind of this Volumeseriesinfo.
        :type kind: str
        """

        self._kind = kind

    @property
    def short_series_book_title(self):
        """Gets the short_series_book_title of this Volumeseriesinfo.

        Short book title in the context of the series.

        :return: The short_series_book_title of this Volumeseriesinfo.
        :rtype: str
        """
        return self._short_series_book_title

    @short_series_book_title.setter
    def short_series_book_title(self, short_series_book_title):
        """Sets the short_series_book_title of this Volumeseriesinfo.

        Short book title in the context of the series.

        :param short_series_book_title: The short_series_book_title of this Volumeseriesinfo.
        :type short_series_book_title: str
        """

        self._short_series_book_title = short_series_book_title

    @property
    def volume_series(self):
        """Gets the volume_series of this Volumeseriesinfo.


        :return: The volume_series of this Volumeseriesinfo.
        :rtype: List[VolumeseriesinfoVolumeSeriesInner]
        """
        return self._volume_series

    @volume_series.setter
    def volume_series(self, volume_series):
        """Sets the volume_series of this Volumeseriesinfo.


        :param volume_series: The volume_series of this Volumeseriesinfo.
        :type volume_series: List[VolumeseriesinfoVolumeSeriesInner]
        """

        self._volume_series = volume_series
