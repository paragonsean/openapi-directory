# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.discoveryclusters_clusters_inner import DiscoveryclustersClustersInner
from openapi_server import util


class Discoveryclusters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clusters: List[DiscoveryclustersClustersInner]=None, kind: str=None, total_clusters: int=None):
        """Discoveryclusters - a model defined in OpenAPI

        :param clusters: The clusters of this Discoveryclusters.
        :param kind: The kind of this Discoveryclusters.
        :param total_clusters: The total_clusters of this Discoveryclusters.
        """
        self.openapi_types = {
            'clusters': List[DiscoveryclustersClustersInner],
            'kind': str,
            'total_clusters': int
        }

        self.attribute_map = {
            'clusters': 'clusters',
            'kind': 'kind',
            'total_clusters': 'totalClusters'
        }

        self._clusters = clusters
        self._kind = kind
        self._total_clusters = total_clusters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Discoveryclusters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Discoveryclusters of this Discoveryclusters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clusters(self):
        """Gets the clusters of this Discoveryclusters.


        :return: The clusters of this Discoveryclusters.
        :rtype: List[DiscoveryclustersClustersInner]
        """
        return self._clusters

    @clusters.setter
    def clusters(self, clusters):
        """Sets the clusters of this Discoveryclusters.


        :param clusters: The clusters of this Discoveryclusters.
        :type clusters: List[DiscoveryclustersClustersInner]
        """

        self._clusters = clusters

    @property
    def kind(self):
        """Gets the kind of this Discoveryclusters.

        Resorce type.

        :return: The kind of this Discoveryclusters.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Discoveryclusters.

        Resorce type.

        :param kind: The kind of this Discoveryclusters.
        :type kind: str
        """

        self._kind = kind

    @property
    def total_clusters(self):
        """Gets the total_clusters of this Discoveryclusters.


        :return: The total_clusters of this Discoveryclusters.
        :rtype: int
        """
        return self._total_clusters

    @total_clusters.setter
    def total_clusters(self, total_clusters):
        """Sets the total_clusters of this Discoveryclusters.


        :param total_clusters: The total_clusters of this Discoveryclusters.
        :type total_clusters: int
        """

        self._total_clusters = total_clusters
