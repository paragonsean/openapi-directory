/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscoveryclusters_clusters_inner_banner_with_content_container.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscoveryclusters_clusters_inner_banner_with_content_container::OAIDiscoveryclusters_clusters_inner_banner_with_content_container(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscoveryclusters_clusters_inner_banner_with_content_container::OAIDiscoveryclusters_clusters_inner_banner_with_content_container() {
    this->initializeModel();
}

OAIDiscoveryclusters_clusters_inner_banner_with_content_container::~OAIDiscoveryclusters_clusters_inner_banner_with_content_container() {}

void OAIDiscoveryclusters_clusters_inner_banner_with_content_container::initializeModel() {

    m_fill_color_argb_isSet = false;
    m_fill_color_argb_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;

    m_mask_color_argb_isSet = false;
    m_mask_color_argb_isValid = false;

    m_more_button_text_isSet = false;
    m_more_button_text_isValid = false;

    m_more_button_url_isSet = false;
    m_more_button_url_isValid = false;

    m_text_color_argb_isSet = false;
    m_text_color_argb_isValid = false;
}

void OAIDiscoveryclusters_clusters_inner_banner_with_content_container::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscoveryclusters_clusters_inner_banner_with_content_container::fromJsonObject(QJsonObject json) {

    m_fill_color_argb_isValid = ::OpenAPI::fromJsonValue(m_fill_color_argb, json[QString("fillColorArgb")]);
    m_fill_color_argb_isSet = !json[QString("fillColorArgb")].isNull() && m_fill_color_argb_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("imageUrl")]);
    m_image_url_isSet = !json[QString("imageUrl")].isNull() && m_image_url_isValid;

    m_mask_color_argb_isValid = ::OpenAPI::fromJsonValue(m_mask_color_argb, json[QString("maskColorArgb")]);
    m_mask_color_argb_isSet = !json[QString("maskColorArgb")].isNull() && m_mask_color_argb_isValid;

    m_more_button_text_isValid = ::OpenAPI::fromJsonValue(m_more_button_text, json[QString("moreButtonText")]);
    m_more_button_text_isSet = !json[QString("moreButtonText")].isNull() && m_more_button_text_isValid;

    m_more_button_url_isValid = ::OpenAPI::fromJsonValue(m_more_button_url, json[QString("moreButtonUrl")]);
    m_more_button_url_isSet = !json[QString("moreButtonUrl")].isNull() && m_more_button_url_isValid;

    m_text_color_argb_isValid = ::OpenAPI::fromJsonValue(m_text_color_argb, json[QString("textColorArgb")]);
    m_text_color_argb_isSet = !json[QString("textColorArgb")].isNull() && m_text_color_argb_isValid;
}

QString OAIDiscoveryclusters_clusters_inner_banner_with_content_container::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscoveryclusters_clusters_inner_banner_with_content_container::asJsonObject() const {
    QJsonObject obj;
    if (m_fill_color_argb_isSet) {
        obj.insert(QString("fillColorArgb"), ::OpenAPI::toJsonValue(m_fill_color_argb));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("imageUrl"), ::OpenAPI::toJsonValue(m_image_url));
    }
    if (m_mask_color_argb_isSet) {
        obj.insert(QString("maskColorArgb"), ::OpenAPI::toJsonValue(m_mask_color_argb));
    }
    if (m_more_button_text_isSet) {
        obj.insert(QString("moreButtonText"), ::OpenAPI::toJsonValue(m_more_button_text));
    }
    if (m_more_button_url_isSet) {
        obj.insert(QString("moreButtonUrl"), ::OpenAPI::toJsonValue(m_more_button_url));
    }
    if (m_text_color_argb_isSet) {
        obj.insert(QString("textColorArgb"), ::OpenAPI::toJsonValue(m_text_color_argb));
    }
    return obj;
}

QString OAIDiscoveryclusters_clusters_inner_banner_with_content_container::getFillColorArgb() const {
    return m_fill_color_argb;
}
void OAIDiscoveryclusters_clusters_inner_banner_with_content_container::setFillColorArgb(const QString &fill_color_argb) {
    m_fill_color_argb = fill_color_argb;
    m_fill_color_argb_isSet = true;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_fill_color_argb_Set() const{
    return m_fill_color_argb_isSet;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_fill_color_argb_Valid() const{
    return m_fill_color_argb_isValid;
}

QString OAIDiscoveryclusters_clusters_inner_banner_with_content_container::getImageUrl() const {
    return m_image_url;
}
void OAIDiscoveryclusters_clusters_inner_banner_with_content_container::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_image_url_Valid() const{
    return m_image_url_isValid;
}

QString OAIDiscoveryclusters_clusters_inner_banner_with_content_container::getMaskColorArgb() const {
    return m_mask_color_argb;
}
void OAIDiscoveryclusters_clusters_inner_banner_with_content_container::setMaskColorArgb(const QString &mask_color_argb) {
    m_mask_color_argb = mask_color_argb;
    m_mask_color_argb_isSet = true;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_mask_color_argb_Set() const{
    return m_mask_color_argb_isSet;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_mask_color_argb_Valid() const{
    return m_mask_color_argb_isValid;
}

QString OAIDiscoveryclusters_clusters_inner_banner_with_content_container::getMoreButtonText() const {
    return m_more_button_text;
}
void OAIDiscoveryclusters_clusters_inner_banner_with_content_container::setMoreButtonText(const QString &more_button_text) {
    m_more_button_text = more_button_text;
    m_more_button_text_isSet = true;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_more_button_text_Set() const{
    return m_more_button_text_isSet;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_more_button_text_Valid() const{
    return m_more_button_text_isValid;
}

QString OAIDiscoveryclusters_clusters_inner_banner_with_content_container::getMoreButtonUrl() const {
    return m_more_button_url;
}
void OAIDiscoveryclusters_clusters_inner_banner_with_content_container::setMoreButtonUrl(const QString &more_button_url) {
    m_more_button_url = more_button_url;
    m_more_button_url_isSet = true;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_more_button_url_Set() const{
    return m_more_button_url_isSet;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_more_button_url_Valid() const{
    return m_more_button_url_isValid;
}

QString OAIDiscoveryclusters_clusters_inner_banner_with_content_container::getTextColorArgb() const {
    return m_text_color_argb;
}
void OAIDiscoveryclusters_clusters_inner_banner_with_content_container::setTextColorArgb(const QString &text_color_argb) {
    m_text_color_argb = text_color_argb;
    m_text_color_argb_isSet = true;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_text_color_argb_Set() const{
    return m_text_color_argb_isSet;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::is_text_color_argb_Valid() const{
    return m_text_color_argb_isValid;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fill_color_argb_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mask_color_argb_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_more_button_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_more_button_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_color_argb_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscoveryclusters_clusters_inner_banner_with_content_container::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
