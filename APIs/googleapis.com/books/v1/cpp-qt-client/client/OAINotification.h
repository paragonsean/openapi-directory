/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotification.h
 *
 * 
 */

#ifndef OAINotification_H
#define OAINotification_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINotification : public OAIObject {
public:
    OAINotification();
    OAINotification(QString json);
    ~OAINotification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QList<QString> getCrmExperimentIds() const;
    void setCrmExperimentIds(const QList<QString> &crm_experiment_ids);
    bool is_crm_experiment_ids_Set() const;
    bool is_crm_experiment_ids_Valid() const;

    QString getDocId() const;
    void setDocId(const QString &doc_id);
    bool is_doc_id_Set() const;
    bool is_doc_id_Valid() const;

    QString getDocType() const;
    void setDocType(const QString &doc_type);
    bool is_doc_type_Set() const;
    bool is_doc_type_Valid() const;

    bool isDontShowNotification() const;
    void setDontShowNotification(const bool &dont_show_notification);
    bool is_dont_show_notification_Set() const;
    bool is_dont_show_notification_Valid() const;

    QString getIconUrl() const;
    void setIconUrl(const QString &icon_url);
    bool is_icon_url_Set() const;
    bool is_icon_url_Valid() const;

    bool isIsDocumentMature() const;
    void setIsDocumentMature(const bool &is_document_mature);
    bool is_is_document_mature_Set() const;
    bool is_is_document_mature_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getNotificationGroup() const;
    void setNotificationGroup(const QString &notification_group);
    bool is_notification_group_Set() const;
    bool is_notification_group_Valid() const;

    QString getNotificationType() const;
    void setNotificationType(const QString &notification_type);
    bool is_notification_type_Set() const;
    bool is_notification_type_Valid() const;

    QString getPcampaignId() const;
    void setPcampaignId(const QString &pcampaign_id);
    bool is_pcampaign_id_Set() const;
    bool is_pcampaign_id_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    bool isShowNotificationSettingsAction() const;
    void setShowNotificationSettingsAction(const bool &show_notification_settings_action);
    bool is_show_notification_settings_action_Set() const;
    bool is_show_notification_settings_action_Valid() const;

    QString getTargetUrl() const;
    void setTargetUrl(const QString &target_url);
    bool is_target_url_Set() const;
    bool is_target_url_Valid() const;

    QString getTimeToExpireMs() const;
    void setTimeToExpireMs(const QString &time_to_expire_ms);
    bool is_time_to_expire_ms_Set() const;
    bool is_time_to_expire_ms_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QList<QString> m_crm_experiment_ids;
    bool m_crm_experiment_ids_isSet;
    bool m_crm_experiment_ids_isValid;

    QString m_doc_id;
    bool m_doc_id_isSet;
    bool m_doc_id_isValid;

    QString m_doc_type;
    bool m_doc_type_isSet;
    bool m_doc_type_isValid;

    bool m_dont_show_notification;
    bool m_dont_show_notification_isSet;
    bool m_dont_show_notification_isValid;

    QString m_icon_url;
    bool m_icon_url_isSet;
    bool m_icon_url_isValid;

    bool m_is_document_mature;
    bool m_is_document_mature_isSet;
    bool m_is_document_mature_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_notification_group;
    bool m_notification_group_isSet;
    bool m_notification_group_isValid;

    QString m_notification_type;
    bool m_notification_type_isSet;
    bool m_notification_type_isValid;

    QString m_pcampaign_id;
    bool m_pcampaign_id_isSet;
    bool m_pcampaign_id_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    bool m_show_notification_settings_action;
    bool m_show_notification_settings_action_isSet;
    bool m_show_notification_settings_action_isValid;

    QString m_target_url;
    bool m_target_url_isSet;
    bool m_target_url_isValid;

    QString m_time_to_expire_ms;
    bool m_time_to_expire_ms_isSet;
    bool m_time_to_expire_ms_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotification)

#endif // OAINotification_H
