/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDictlayerdata_dict_source.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDictlayerdata_dict_source::OAIDictlayerdata_dict_source(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDictlayerdata_dict_source::OAIDictlayerdata_dict_source() {
    this->initializeModel();
}

OAIDictlayerdata_dict_source::~OAIDictlayerdata_dict_source() {}

void OAIDictlayerdata_dict_source::initializeModel() {

    m_attribution_isSet = false;
    m_attribution_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIDictlayerdata_dict_source::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDictlayerdata_dict_source::fromJsonObject(QJsonObject json) {

    m_attribution_isValid = ::OpenAPI::fromJsonValue(m_attribution, json[QString("attribution")]);
    m_attribution_isSet = !json[QString("attribution")].isNull() && m_attribution_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIDictlayerdata_dict_source::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDictlayerdata_dict_source::asJsonObject() const {
    QJsonObject obj;
    if (m_attribution_isSet) {
        obj.insert(QString("attribution"), ::OpenAPI::toJsonValue(m_attribution));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIDictlayerdata_dict_source::getAttribution() const {
    return m_attribution;
}
void OAIDictlayerdata_dict_source::setAttribution(const QString &attribution) {
    m_attribution = attribution;
    m_attribution_isSet = true;
}

bool OAIDictlayerdata_dict_source::is_attribution_Set() const{
    return m_attribution_isSet;
}

bool OAIDictlayerdata_dict_source::is_attribution_Valid() const{
    return m_attribution_isValid;
}

QString OAIDictlayerdata_dict_source::getUrl() const {
    return m_url;
}
void OAIDictlayerdata_dict_source::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIDictlayerdata_dict_source::is_url_Set() const{
    return m_url_isSet;
}

bool OAIDictlayerdata_dict_source::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIDictlayerdata_dict_source::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribution_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDictlayerdata_dict_source::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
