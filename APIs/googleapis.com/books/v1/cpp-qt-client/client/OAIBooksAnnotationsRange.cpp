/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBooksAnnotationsRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBooksAnnotationsRange::OAIBooksAnnotationsRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBooksAnnotationsRange::OAIBooksAnnotationsRange() {
    this->initializeModel();
}

OAIBooksAnnotationsRange::~OAIBooksAnnotationsRange() {}

void OAIBooksAnnotationsRange::initializeModel() {

    m_end_offset_isSet = false;
    m_end_offset_isValid = false;

    m_end_position_isSet = false;
    m_end_position_isValid = false;

    m_start_offset_isSet = false;
    m_start_offset_isValid = false;

    m_start_position_isSet = false;
    m_start_position_isValid = false;
}

void OAIBooksAnnotationsRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBooksAnnotationsRange::fromJsonObject(QJsonObject json) {

    m_end_offset_isValid = ::OpenAPI::fromJsonValue(m_end_offset, json[QString("endOffset")]);
    m_end_offset_isSet = !json[QString("endOffset")].isNull() && m_end_offset_isValid;

    m_end_position_isValid = ::OpenAPI::fromJsonValue(m_end_position, json[QString("endPosition")]);
    m_end_position_isSet = !json[QString("endPosition")].isNull() && m_end_position_isValid;

    m_start_offset_isValid = ::OpenAPI::fromJsonValue(m_start_offset, json[QString("startOffset")]);
    m_start_offset_isSet = !json[QString("startOffset")].isNull() && m_start_offset_isValid;

    m_start_position_isValid = ::OpenAPI::fromJsonValue(m_start_position, json[QString("startPosition")]);
    m_start_position_isSet = !json[QString("startPosition")].isNull() && m_start_position_isValid;
}

QString OAIBooksAnnotationsRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBooksAnnotationsRange::asJsonObject() const {
    QJsonObject obj;
    if (m_end_offset_isSet) {
        obj.insert(QString("endOffset"), ::OpenAPI::toJsonValue(m_end_offset));
    }
    if (m_end_position_isSet) {
        obj.insert(QString("endPosition"), ::OpenAPI::toJsonValue(m_end_position));
    }
    if (m_start_offset_isSet) {
        obj.insert(QString("startOffset"), ::OpenAPI::toJsonValue(m_start_offset));
    }
    if (m_start_position_isSet) {
        obj.insert(QString("startPosition"), ::OpenAPI::toJsonValue(m_start_position));
    }
    return obj;
}

QString OAIBooksAnnotationsRange::getEndOffset() const {
    return m_end_offset;
}
void OAIBooksAnnotationsRange::setEndOffset(const QString &end_offset) {
    m_end_offset = end_offset;
    m_end_offset_isSet = true;
}

bool OAIBooksAnnotationsRange::is_end_offset_Set() const{
    return m_end_offset_isSet;
}

bool OAIBooksAnnotationsRange::is_end_offset_Valid() const{
    return m_end_offset_isValid;
}

QString OAIBooksAnnotationsRange::getEndPosition() const {
    return m_end_position;
}
void OAIBooksAnnotationsRange::setEndPosition(const QString &end_position) {
    m_end_position = end_position;
    m_end_position_isSet = true;
}

bool OAIBooksAnnotationsRange::is_end_position_Set() const{
    return m_end_position_isSet;
}

bool OAIBooksAnnotationsRange::is_end_position_Valid() const{
    return m_end_position_isValid;
}

QString OAIBooksAnnotationsRange::getStartOffset() const {
    return m_start_offset;
}
void OAIBooksAnnotationsRange::setStartOffset(const QString &start_offset) {
    m_start_offset = start_offset;
    m_start_offset_isSet = true;
}

bool OAIBooksAnnotationsRange::is_start_offset_Set() const{
    return m_start_offset_isSet;
}

bool OAIBooksAnnotationsRange::is_start_offset_Valid() const{
    return m_start_offset_isValid;
}

QString OAIBooksAnnotationsRange::getStartPosition() const {
    return m_start_position;
}
void OAIBooksAnnotationsRange::setStartPosition(const QString &start_position) {
    m_start_position = start_position;
    m_start_position_isSet = true;
}

bool OAIBooksAnnotationsRange::is_start_position_Set() const{
    return m_start_position_isSet;
}

bool OAIBooksAnnotationsRange::is_start_position_Valid() const{
    return m_start_position_isValid;
}

bool OAIBooksAnnotationsRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_position_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBooksAnnotationsRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
