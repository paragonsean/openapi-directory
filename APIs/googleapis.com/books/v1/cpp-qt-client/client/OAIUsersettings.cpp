/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUsersettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUsersettings::OAIUsersettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUsersettings::OAIUsersettings() {
    this->initializeModel();
}

OAIUsersettings::~OAIUsersettings() {}

void OAIUsersettings::initializeModel() {

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_notes_export_isSet = false;
    m_notes_export_isValid = false;

    m_notification_isSet = false;
    m_notification_isValid = false;
}

void OAIUsersettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUsersettings::fromJsonObject(QJsonObject json) {

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_notes_export_isValid = ::OpenAPI::fromJsonValue(m_notes_export, json[QString("notesExport")]);
    m_notes_export_isSet = !json[QString("notesExport")].isNull() && m_notes_export_isValid;

    m_notification_isValid = ::OpenAPI::fromJsonValue(m_notification, json[QString("notification")]);
    m_notification_isSet = !json[QString("notification")].isNull() && m_notification_isValid;
}

QString OAIUsersettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUsersettings::asJsonObject() const {
    QJsonObject obj;
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_notes_export.isSet()) {
        obj.insert(QString("notesExport"), ::OpenAPI::toJsonValue(m_notes_export));
    }
    if (m_notification.isSet()) {
        obj.insert(QString("notification"), ::OpenAPI::toJsonValue(m_notification));
    }
    return obj;
}

QString OAIUsersettings::getKind() const {
    return m_kind;
}
void OAIUsersettings::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIUsersettings::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIUsersettings::is_kind_Valid() const{
    return m_kind_isValid;
}

OAIUsersettings_notesExport OAIUsersettings::getNotesExport() const {
    return m_notes_export;
}
void OAIUsersettings::setNotesExport(const OAIUsersettings_notesExport &notes_export) {
    m_notes_export = notes_export;
    m_notes_export_isSet = true;
}

bool OAIUsersettings::is_notes_export_Set() const{
    return m_notes_export_isSet;
}

bool OAIUsersettings::is_notes_export_Valid() const{
    return m_notes_export_isValid;
}

OAIUsersettings_notification OAIUsersettings::getNotification() const {
    return m_notification;
}
void OAIUsersettings::setNotification(const OAIUsersettings_notification &notification) {
    m_notification = notification;
    m_notification_isSet = true;
}

bool OAIUsersettings::is_notification_Set() const{
    return m_notification_isSet;
}

bool OAIUsersettings::is_notification_Valid() const{
    return m_notification_isValid;
}

bool OAIUsersettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_export.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUsersettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
