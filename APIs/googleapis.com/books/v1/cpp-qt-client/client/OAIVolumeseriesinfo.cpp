/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVolumeseriesinfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVolumeseriesinfo::OAIVolumeseriesinfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVolumeseriesinfo::OAIVolumeseriesinfo() {
    this->initializeModel();
}

OAIVolumeseriesinfo::~OAIVolumeseriesinfo() {}

void OAIVolumeseriesinfo::initializeModel() {

    m_book_display_number_isSet = false;
    m_book_display_number_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_short_series_book_title_isSet = false;
    m_short_series_book_title_isValid = false;

    m_volume_series_isSet = false;
    m_volume_series_isValid = false;
}

void OAIVolumeseriesinfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVolumeseriesinfo::fromJsonObject(QJsonObject json) {

    m_book_display_number_isValid = ::OpenAPI::fromJsonValue(m_book_display_number, json[QString("bookDisplayNumber")]);
    m_book_display_number_isSet = !json[QString("bookDisplayNumber")].isNull() && m_book_display_number_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_short_series_book_title_isValid = ::OpenAPI::fromJsonValue(m_short_series_book_title, json[QString("shortSeriesBookTitle")]);
    m_short_series_book_title_isSet = !json[QString("shortSeriesBookTitle")].isNull() && m_short_series_book_title_isValid;

    m_volume_series_isValid = ::OpenAPI::fromJsonValue(m_volume_series, json[QString("volumeSeries")]);
    m_volume_series_isSet = !json[QString("volumeSeries")].isNull() && m_volume_series_isValid;
}

QString OAIVolumeseriesinfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVolumeseriesinfo::asJsonObject() const {
    QJsonObject obj;
    if (m_book_display_number_isSet) {
        obj.insert(QString("bookDisplayNumber"), ::OpenAPI::toJsonValue(m_book_display_number));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_short_series_book_title_isSet) {
        obj.insert(QString("shortSeriesBookTitle"), ::OpenAPI::toJsonValue(m_short_series_book_title));
    }
    if (m_volume_series.size() > 0) {
        obj.insert(QString("volumeSeries"), ::OpenAPI::toJsonValue(m_volume_series));
    }
    return obj;
}

QString OAIVolumeseriesinfo::getBookDisplayNumber() const {
    return m_book_display_number;
}
void OAIVolumeseriesinfo::setBookDisplayNumber(const QString &book_display_number) {
    m_book_display_number = book_display_number;
    m_book_display_number_isSet = true;
}

bool OAIVolumeseriesinfo::is_book_display_number_Set() const{
    return m_book_display_number_isSet;
}

bool OAIVolumeseriesinfo::is_book_display_number_Valid() const{
    return m_book_display_number_isValid;
}

QString OAIVolumeseriesinfo::getKind() const {
    return m_kind;
}
void OAIVolumeseriesinfo::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIVolumeseriesinfo::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIVolumeseriesinfo::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIVolumeseriesinfo::getShortSeriesBookTitle() const {
    return m_short_series_book_title;
}
void OAIVolumeseriesinfo::setShortSeriesBookTitle(const QString &short_series_book_title) {
    m_short_series_book_title = short_series_book_title;
    m_short_series_book_title_isSet = true;
}

bool OAIVolumeseriesinfo::is_short_series_book_title_Set() const{
    return m_short_series_book_title_isSet;
}

bool OAIVolumeseriesinfo::is_short_series_book_title_Valid() const{
    return m_short_series_book_title_isValid;
}

QList<OAIVolumeseriesinfo_volumeSeries_inner> OAIVolumeseriesinfo::getVolumeSeries() const {
    return m_volume_series;
}
void OAIVolumeseriesinfo::setVolumeSeries(const QList<OAIVolumeseriesinfo_volumeSeries_inner> &volume_series) {
    m_volume_series = volume_series;
    m_volume_series_isSet = true;
}

bool OAIVolumeseriesinfo::is_volume_series_Set() const{
    return m_volume_series_isSet;
}

bool OAIVolumeseriesinfo::is_volume_series_Valid() const{
    return m_volume_series_isValid;
}

bool OAIVolumeseriesinfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_book_display_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_series_book_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_volume_series.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVolumeseriesinfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
