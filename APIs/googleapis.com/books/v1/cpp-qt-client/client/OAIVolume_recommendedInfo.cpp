/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVolume_recommendedInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVolume_recommendedInfo::OAIVolume_recommendedInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVolume_recommendedInfo::OAIVolume_recommendedInfo() {
    this->initializeModel();
}

OAIVolume_recommendedInfo::~OAIVolume_recommendedInfo() {}

void OAIVolume_recommendedInfo::initializeModel() {

    m_explanation_isSet = false;
    m_explanation_isValid = false;
}

void OAIVolume_recommendedInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVolume_recommendedInfo::fromJsonObject(QJsonObject json) {

    m_explanation_isValid = ::OpenAPI::fromJsonValue(m_explanation, json[QString("explanation")]);
    m_explanation_isSet = !json[QString("explanation")].isNull() && m_explanation_isValid;
}

QString OAIVolume_recommendedInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVolume_recommendedInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_explanation_isSet) {
        obj.insert(QString("explanation"), ::OpenAPI::toJsonValue(m_explanation));
    }
    return obj;
}

QString OAIVolume_recommendedInfo::getExplanation() const {
    return m_explanation;
}
void OAIVolume_recommendedInfo::setExplanation(const QString &explanation) {
    m_explanation = explanation;
    m_explanation_isSet = true;
}

bool OAIVolume_recommendedInfo::is_explanation_Set() const{
    return m_explanation_isSet;
}

bool OAIVolume_recommendedInfo::is_explanation_Valid() const{
    return m_explanation_isValid;
}

bool OAIVolume_recommendedInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_explanation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVolume_recommendedInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
