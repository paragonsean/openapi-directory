/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiscoveryclusters_clusters_inner.h
 *
 * 
 */

#ifndef OAIDiscoveryclusters_clusters_inner_H
#define OAIDiscoveryclusters_clusters_inner_H

#include <QJsonObject>

#include "OAIDiscoveryclusters_clusters_inner_banner_with_content_container.h"
#include "OAIVolume.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiscoveryclusters_clusters_inner_banner_with_content_container;
class OAIVolume;

class OAIDiscoveryclusters_clusters_inner : public OAIObject {
public:
    OAIDiscoveryclusters_clusters_inner();
    OAIDiscoveryclusters_clusters_inner(QString json);
    ~OAIDiscoveryclusters_clusters_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDiscoveryclusters_clusters_inner_banner_with_content_container getBannerWithContentContainer() const;
    void setBannerWithContentContainer(const OAIDiscoveryclusters_clusters_inner_banner_with_content_container &banner_with_content_container);
    bool is_banner_with_content_container_Set() const;
    bool is_banner_with_content_container_Valid() const;

    QString getSubTitle() const;
    void setSubTitle(const QString &sub_title);
    bool is_sub_title_Set() const;
    bool is_sub_title_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    qint32 getTotalVolumes() const;
    void setTotalVolumes(const qint32 &total_volumes);
    bool is_total_volumes_Set() const;
    bool is_total_volumes_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QList<OAIVolume> getVolumes() const;
    void setVolumes(const QList<OAIVolume> &volumes);
    bool is_volumes_Set() const;
    bool is_volumes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDiscoveryclusters_clusters_inner_banner_with_content_container m_banner_with_content_container;
    bool m_banner_with_content_container_isSet;
    bool m_banner_with_content_container_isValid;

    QString m_sub_title;
    bool m_sub_title_isSet;
    bool m_sub_title_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    qint32 m_total_volumes;
    bool m_total_volumes_isSet;
    bool m_total_volumes_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QList<OAIVolume> m_volumes;
    bool m_volumes_isSet;
    bool m_volumes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiscoveryclusters_clusters_inner)

#endif // OAIDiscoveryclusters_clusters_inner_H
