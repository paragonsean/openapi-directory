/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVolume_userInfo.h
 *
 * User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)
 */

#ifndef OAIVolume_userInfo_H
#define OAIVolume_userInfo_H

#include <QJsonObject>

#include "OAIReadingPosition.h"
#include "OAIReview.h"
#include "OAIVolume_userInfo_copy.h"
#include "OAIVolume_userInfo_familySharing.h"
#include "OAIVolume_userInfo_rentalPeriod.h"
#include "OAIVolume_userInfo_userUploadedVolumeInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVolume_userInfo_copy;
class OAIVolume_userInfo_familySharing;
class OAIReadingPosition;
class OAIVolume_userInfo_rentalPeriod;
class OAIReview;
class OAIVolume_userInfo_userUploadedVolumeInfo;

class OAIVolume_userInfo : public OAIObject {
public:
    OAIVolume_userInfo();
    OAIVolume_userInfo(QString json);
    ~OAIVolume_userInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcquiredTime() const;
    void setAcquiredTime(const QString &acquired_time);
    bool is_acquired_time_Set() const;
    bool is_acquired_time_Valid() const;

    qint32 getAcquisitionType() const;
    void setAcquisitionType(const qint32 &acquisition_type);
    bool is_acquisition_type_Set() const;
    bool is_acquisition_type_Valid() const;

    OAIVolume_userInfo_copy getCopy() const;
    void setCopy(const OAIVolume_userInfo_copy &copy);
    bool is_copy_Set() const;
    bool is_copy_Valid() const;

    qint32 getEntitlementType() const;
    void setEntitlementType(const qint32 &entitlement_type);
    bool is_entitlement_type_Set() const;
    bool is_entitlement_type_Valid() const;

    OAIVolume_userInfo_familySharing getFamilySharing() const;
    void setFamilySharing(const OAIVolume_userInfo_familySharing &family_sharing);
    bool is_family_sharing_Set() const;
    bool is_family_sharing_Valid() const;

    bool isIsFamilySharedFromUser() const;
    void setIsFamilySharedFromUser(const bool &is_family_shared_from_user);
    bool is_is_family_shared_from_user_Set() const;
    bool is_is_family_shared_from_user_Valid() const;

    bool isIsFamilySharedToUser() const;
    void setIsFamilySharedToUser(const bool &is_family_shared_to_user);
    bool is_is_family_shared_to_user_Set() const;
    bool is_is_family_shared_to_user_Valid() const;

    bool isIsFamilySharingAllowed() const;
    void setIsFamilySharingAllowed(const bool &is_family_sharing_allowed);
    bool is_is_family_sharing_allowed_Set() const;
    bool is_is_family_sharing_allowed_Valid() const;

    bool isIsFamilySharingDisabledByFop() const;
    void setIsFamilySharingDisabledByFop(const bool &is_family_sharing_disabled_by_fop);
    bool is_is_family_sharing_disabled_by_fop_Set() const;
    bool is_is_family_sharing_disabled_by_fop_Valid() const;

    bool isIsInMyBooks() const;
    void setIsInMyBooks(const bool &is_in_my_books);
    bool is_is_in_my_books_Set() const;
    bool is_is_in_my_books_Valid() const;

    bool isIsPreordered() const;
    void setIsPreordered(const bool &is_preordered);
    bool is_is_preordered_Set() const;
    bool is_is_preordered_Valid() const;

    bool isIsPurchased() const;
    void setIsPurchased(const bool &is_purchased);
    bool is_is_purchased_Set() const;
    bool is_is_purchased_Valid() const;

    bool isIsUploaded() const;
    void setIsUploaded(const bool &is_uploaded);
    bool is_is_uploaded_Set() const;
    bool is_is_uploaded_Valid() const;

    OAIReadingPosition getReadingPosition() const;
    void setReadingPosition(const OAIReadingPosition &reading_position);
    bool is_reading_position_Set() const;
    bool is_reading_position_Valid() const;

    OAIVolume_userInfo_rentalPeriod getRentalPeriod() const;
    void setRentalPeriod(const OAIVolume_userInfo_rentalPeriod &rental_period);
    bool is_rental_period_Set() const;
    bool is_rental_period_Valid() const;

    QString getRentalState() const;
    void setRentalState(const QString &rental_state);
    bool is_rental_state_Set() const;
    bool is_rental_state_Valid() const;

    OAIReview getReview() const;
    void setReview(const OAIReview &review);
    bool is_review_Set() const;
    bool is_review_Valid() const;

    QString getUpdated() const;
    void setUpdated(const QString &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    OAIVolume_userInfo_userUploadedVolumeInfo getUserUploadedVolumeInfo() const;
    void setUserUploadedVolumeInfo(const OAIVolume_userInfo_userUploadedVolumeInfo &user_uploaded_volume_info);
    bool is_user_uploaded_volume_info_Set() const;
    bool is_user_uploaded_volume_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_acquired_time;
    bool m_acquired_time_isSet;
    bool m_acquired_time_isValid;

    qint32 m_acquisition_type;
    bool m_acquisition_type_isSet;
    bool m_acquisition_type_isValid;

    OAIVolume_userInfo_copy m_copy;
    bool m_copy_isSet;
    bool m_copy_isValid;

    qint32 m_entitlement_type;
    bool m_entitlement_type_isSet;
    bool m_entitlement_type_isValid;

    OAIVolume_userInfo_familySharing m_family_sharing;
    bool m_family_sharing_isSet;
    bool m_family_sharing_isValid;

    bool m_is_family_shared_from_user;
    bool m_is_family_shared_from_user_isSet;
    bool m_is_family_shared_from_user_isValid;

    bool m_is_family_shared_to_user;
    bool m_is_family_shared_to_user_isSet;
    bool m_is_family_shared_to_user_isValid;

    bool m_is_family_sharing_allowed;
    bool m_is_family_sharing_allowed_isSet;
    bool m_is_family_sharing_allowed_isValid;

    bool m_is_family_sharing_disabled_by_fop;
    bool m_is_family_sharing_disabled_by_fop_isSet;
    bool m_is_family_sharing_disabled_by_fop_isValid;

    bool m_is_in_my_books;
    bool m_is_in_my_books_isSet;
    bool m_is_in_my_books_isValid;

    bool m_is_preordered;
    bool m_is_preordered_isSet;
    bool m_is_preordered_isValid;

    bool m_is_purchased;
    bool m_is_purchased_isSet;
    bool m_is_purchased_isValid;

    bool m_is_uploaded;
    bool m_is_uploaded_isSet;
    bool m_is_uploaded_isValid;

    OAIReadingPosition m_reading_position;
    bool m_reading_position_isSet;
    bool m_reading_position_isValid;

    OAIVolume_userInfo_rentalPeriod m_rental_period;
    bool m_rental_period_isSet;
    bool m_rental_period_isValid;

    QString m_rental_state;
    bool m_rental_state_isSet;
    bool m_rental_state_isValid;

    OAIReview m_review;
    bool m_review_isSet;
    bool m_review_isValid;

    QString m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    OAIVolume_userInfo_userUploadedVolumeInfo m_user_uploaded_volume_info;
    bool m_user_uploaded_volume_info_isSet;
    bool m_user_uploaded_volume_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVolume_userInfo)

#endif // OAIVolume_userInfo_H
