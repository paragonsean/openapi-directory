/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVolume_accessInfo_pdf.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVolume_accessInfo_pdf::OAIVolume_accessInfo_pdf(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVolume_accessInfo_pdf::OAIVolume_accessInfo_pdf() {
    this->initializeModel();
}

OAIVolume_accessInfo_pdf::~OAIVolume_accessInfo_pdf() {}

void OAIVolume_accessInfo_pdf::initializeModel() {

    m_acs_token_link_isSet = false;
    m_acs_token_link_isValid = false;

    m_download_link_isSet = false;
    m_download_link_isValid = false;

    m_is_available_isSet = false;
    m_is_available_isValid = false;
}

void OAIVolume_accessInfo_pdf::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVolume_accessInfo_pdf::fromJsonObject(QJsonObject json) {

    m_acs_token_link_isValid = ::OpenAPI::fromJsonValue(m_acs_token_link, json[QString("acsTokenLink")]);
    m_acs_token_link_isSet = !json[QString("acsTokenLink")].isNull() && m_acs_token_link_isValid;

    m_download_link_isValid = ::OpenAPI::fromJsonValue(m_download_link, json[QString("downloadLink")]);
    m_download_link_isSet = !json[QString("downloadLink")].isNull() && m_download_link_isValid;

    m_is_available_isValid = ::OpenAPI::fromJsonValue(m_is_available, json[QString("isAvailable")]);
    m_is_available_isSet = !json[QString("isAvailable")].isNull() && m_is_available_isValid;
}

QString OAIVolume_accessInfo_pdf::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVolume_accessInfo_pdf::asJsonObject() const {
    QJsonObject obj;
    if (m_acs_token_link_isSet) {
        obj.insert(QString("acsTokenLink"), ::OpenAPI::toJsonValue(m_acs_token_link));
    }
    if (m_download_link_isSet) {
        obj.insert(QString("downloadLink"), ::OpenAPI::toJsonValue(m_download_link));
    }
    if (m_is_available_isSet) {
        obj.insert(QString("isAvailable"), ::OpenAPI::toJsonValue(m_is_available));
    }
    return obj;
}

QString OAIVolume_accessInfo_pdf::getAcsTokenLink() const {
    return m_acs_token_link;
}
void OAIVolume_accessInfo_pdf::setAcsTokenLink(const QString &acs_token_link) {
    m_acs_token_link = acs_token_link;
    m_acs_token_link_isSet = true;
}

bool OAIVolume_accessInfo_pdf::is_acs_token_link_Set() const{
    return m_acs_token_link_isSet;
}

bool OAIVolume_accessInfo_pdf::is_acs_token_link_Valid() const{
    return m_acs_token_link_isValid;
}

QString OAIVolume_accessInfo_pdf::getDownloadLink() const {
    return m_download_link;
}
void OAIVolume_accessInfo_pdf::setDownloadLink(const QString &download_link) {
    m_download_link = download_link;
    m_download_link_isSet = true;
}

bool OAIVolume_accessInfo_pdf::is_download_link_Set() const{
    return m_download_link_isSet;
}

bool OAIVolume_accessInfo_pdf::is_download_link_Valid() const{
    return m_download_link_isValid;
}

bool OAIVolume_accessInfo_pdf::isIsAvailable() const {
    return m_is_available;
}
void OAIVolume_accessInfo_pdf::setIsAvailable(const bool &is_available) {
    m_is_available = is_available;
    m_is_available_isSet = true;
}

bool OAIVolume_accessInfo_pdf::is_is_available_Set() const{
    return m_is_available_isSet;
}

bool OAIVolume_accessInfo_pdf::is_is_available_Valid() const{
    return m_is_available_isValid;
}

bool OAIVolume_accessInfo_pdf::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_acs_token_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_available_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVolume_accessInfo_pdf::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
