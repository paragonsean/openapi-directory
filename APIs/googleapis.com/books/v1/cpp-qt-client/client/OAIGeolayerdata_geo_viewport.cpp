/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeolayerdata_geo_viewport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeolayerdata_geo_viewport::OAIGeolayerdata_geo_viewport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeolayerdata_geo_viewport::OAIGeolayerdata_geo_viewport() {
    this->initializeModel();
}

OAIGeolayerdata_geo_viewport::~OAIGeolayerdata_geo_viewport() {}

void OAIGeolayerdata_geo_viewport::initializeModel() {

    m_hi_isSet = false;
    m_hi_isValid = false;

    m_lo_isSet = false;
    m_lo_isValid = false;
}

void OAIGeolayerdata_geo_viewport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeolayerdata_geo_viewport::fromJsonObject(QJsonObject json) {

    m_hi_isValid = ::OpenAPI::fromJsonValue(m_hi, json[QString("hi")]);
    m_hi_isSet = !json[QString("hi")].isNull() && m_hi_isValid;

    m_lo_isValid = ::OpenAPI::fromJsonValue(m_lo, json[QString("lo")]);
    m_lo_isSet = !json[QString("lo")].isNull() && m_lo_isValid;
}

QString OAIGeolayerdata_geo_viewport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeolayerdata_geo_viewport::asJsonObject() const {
    QJsonObject obj;
    if (m_hi.isSet()) {
        obj.insert(QString("hi"), ::OpenAPI::toJsonValue(m_hi));
    }
    if (m_lo.isSet()) {
        obj.insert(QString("lo"), ::OpenAPI::toJsonValue(m_lo));
    }
    return obj;
}

OAIGeolayerdata_geo_viewport_hi OAIGeolayerdata_geo_viewport::getHi() const {
    return m_hi;
}
void OAIGeolayerdata_geo_viewport::setHi(const OAIGeolayerdata_geo_viewport_hi &hi) {
    m_hi = hi;
    m_hi_isSet = true;
}

bool OAIGeolayerdata_geo_viewport::is_hi_Set() const{
    return m_hi_isSet;
}

bool OAIGeolayerdata_geo_viewport::is_hi_Valid() const{
    return m_hi_isValid;
}

OAIGeolayerdata_geo_viewport_hi OAIGeolayerdata_geo_viewport::getLo() const {
    return m_lo;
}
void OAIGeolayerdata_geo_viewport::setLo(const OAIGeolayerdata_geo_viewport_hi &lo) {
    m_lo = lo;
    m_lo_isSet = true;
}

bool OAIGeolayerdata_geo_viewport::is_lo_Set() const{
    return m_lo_isSet;
}

bool OAIGeolayerdata_geo_viewport::is_lo_Valid() const{
    return m_lo_isValid;
}

bool OAIGeolayerdata_geo_viewport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hi.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lo.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeolayerdata_geo_viewport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
