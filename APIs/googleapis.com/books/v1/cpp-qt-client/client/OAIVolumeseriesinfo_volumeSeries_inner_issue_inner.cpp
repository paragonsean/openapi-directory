/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVolumeseriesinfo_volumeSeries_inner_issue_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::OAIVolumeseriesinfo_volumeSeries_inner_issue_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::OAIVolumeseriesinfo_volumeSeries_inner_issue_inner() {
    this->initializeModel();
}

OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::~OAIVolumeseriesinfo_volumeSeries_inner_issue_inner() {}

void OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::initializeModel() {

    m_issue_display_number_isSet = false;
    m_issue_display_number_isValid = false;

    m_issue_order_number_isSet = false;
    m_issue_order_number_isValid = false;
}

void OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::fromJsonObject(QJsonObject json) {

    m_issue_display_number_isValid = ::OpenAPI::fromJsonValue(m_issue_display_number, json[QString("issueDisplayNumber")]);
    m_issue_display_number_isSet = !json[QString("issueDisplayNumber")].isNull() && m_issue_display_number_isValid;

    m_issue_order_number_isValid = ::OpenAPI::fromJsonValue(m_issue_order_number, json[QString("issueOrderNumber")]);
    m_issue_order_number_isSet = !json[QString("issueOrderNumber")].isNull() && m_issue_order_number_isValid;
}

QString OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_issue_display_number_isSet) {
        obj.insert(QString("issueDisplayNumber"), ::OpenAPI::toJsonValue(m_issue_display_number));
    }
    if (m_issue_order_number_isSet) {
        obj.insert(QString("issueOrderNumber"), ::OpenAPI::toJsonValue(m_issue_order_number));
    }
    return obj;
}

QString OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::getIssueDisplayNumber() const {
    return m_issue_display_number;
}
void OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::setIssueDisplayNumber(const QString &issue_display_number) {
    m_issue_display_number = issue_display_number;
    m_issue_display_number_isSet = true;
}

bool OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::is_issue_display_number_Set() const{
    return m_issue_display_number_isSet;
}

bool OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::is_issue_display_number_Valid() const{
    return m_issue_display_number_isValid;
}

qint32 OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::getIssueOrderNumber() const {
    return m_issue_order_number;
}
void OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::setIssueOrderNumber(const qint32 &issue_order_number) {
    m_issue_order_number = issue_order_number;
    m_issue_order_number_isSet = true;
}

bool OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::is_issue_order_number_Set() const{
    return m_issue_order_number_isSet;
}

bool OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::is_issue_order_number_Valid() const{
    return m_issue_order_number_isValid;
}

bool OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_issue_display_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVolumeseriesinfo_volumeSeries_inner_issue_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
