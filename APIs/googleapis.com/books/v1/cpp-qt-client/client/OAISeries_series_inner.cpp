/**
 * Books API
 * The Google Books API allows clients to access the Google Books repository.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISeries_series_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISeries_series_inner::OAISeries_series_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISeries_series_inner::OAISeries_series_inner() {
    this->initializeModel();
}

OAISeries_series_inner::~OAISeries_series_inner() {}

void OAISeries_series_inner::initializeModel() {

    m_banner_image_url_isSet = false;
    m_banner_image_url_isValid = false;

    m_eligible_for_subscription_isSet = false;
    m_eligible_for_subscription_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;

    m_is_complete_isSet = false;
    m_is_complete_isValid = false;

    m_series_format_type_isSet = false;
    m_series_format_type_isValid = false;

    m_series_id_isSet = false;
    m_series_id_isValid = false;

    m_series_subscription_release_info_isSet = false;
    m_series_subscription_release_info_isValid = false;

    m_series_type_isSet = false;
    m_series_type_isValid = false;

    m_subscription_id_isSet = false;
    m_subscription_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAISeries_series_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISeries_series_inner::fromJsonObject(QJsonObject json) {

    m_banner_image_url_isValid = ::OpenAPI::fromJsonValue(m_banner_image_url, json[QString("bannerImageUrl")]);
    m_banner_image_url_isSet = !json[QString("bannerImageUrl")].isNull() && m_banner_image_url_isValid;

    m_eligible_for_subscription_isValid = ::OpenAPI::fromJsonValue(m_eligible_for_subscription, json[QString("eligibleForSubscription")]);
    m_eligible_for_subscription_isSet = !json[QString("eligibleForSubscription")].isNull() && m_eligible_for_subscription_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("imageUrl")]);
    m_image_url_isSet = !json[QString("imageUrl")].isNull() && m_image_url_isValid;

    m_is_complete_isValid = ::OpenAPI::fromJsonValue(m_is_complete, json[QString("isComplete")]);
    m_is_complete_isSet = !json[QString("isComplete")].isNull() && m_is_complete_isValid;

    m_series_format_type_isValid = ::OpenAPI::fromJsonValue(m_series_format_type, json[QString("seriesFormatType")]);
    m_series_format_type_isSet = !json[QString("seriesFormatType")].isNull() && m_series_format_type_isValid;

    m_series_id_isValid = ::OpenAPI::fromJsonValue(m_series_id, json[QString("seriesId")]);
    m_series_id_isSet = !json[QString("seriesId")].isNull() && m_series_id_isValid;

    m_series_subscription_release_info_isValid = ::OpenAPI::fromJsonValue(m_series_subscription_release_info, json[QString("seriesSubscriptionReleaseInfo")]);
    m_series_subscription_release_info_isSet = !json[QString("seriesSubscriptionReleaseInfo")].isNull() && m_series_subscription_release_info_isValid;

    m_series_type_isValid = ::OpenAPI::fromJsonValue(m_series_type, json[QString("seriesType")]);
    m_series_type_isSet = !json[QString("seriesType")].isNull() && m_series_type_isValid;

    m_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_subscription_id, json[QString("subscriptionId")]);
    m_subscription_id_isSet = !json[QString("subscriptionId")].isNull() && m_subscription_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAISeries_series_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISeries_series_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_banner_image_url_isSet) {
        obj.insert(QString("bannerImageUrl"), ::OpenAPI::toJsonValue(m_banner_image_url));
    }
    if (m_eligible_for_subscription_isSet) {
        obj.insert(QString("eligibleForSubscription"), ::OpenAPI::toJsonValue(m_eligible_for_subscription));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("imageUrl"), ::OpenAPI::toJsonValue(m_image_url));
    }
    if (m_is_complete_isSet) {
        obj.insert(QString("isComplete"), ::OpenAPI::toJsonValue(m_is_complete));
    }
    if (m_series_format_type_isSet) {
        obj.insert(QString("seriesFormatType"), ::OpenAPI::toJsonValue(m_series_format_type));
    }
    if (m_series_id_isSet) {
        obj.insert(QString("seriesId"), ::OpenAPI::toJsonValue(m_series_id));
    }
    if (m_series_subscription_release_info.isSet()) {
        obj.insert(QString("seriesSubscriptionReleaseInfo"), ::OpenAPI::toJsonValue(m_series_subscription_release_info));
    }
    if (m_series_type_isSet) {
        obj.insert(QString("seriesType"), ::OpenAPI::toJsonValue(m_series_type));
    }
    if (m_subscription_id_isSet) {
        obj.insert(QString("subscriptionId"), ::OpenAPI::toJsonValue(m_subscription_id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAISeries_series_inner::getBannerImageUrl() const {
    return m_banner_image_url;
}
void OAISeries_series_inner::setBannerImageUrl(const QString &banner_image_url) {
    m_banner_image_url = banner_image_url;
    m_banner_image_url_isSet = true;
}

bool OAISeries_series_inner::is_banner_image_url_Set() const{
    return m_banner_image_url_isSet;
}

bool OAISeries_series_inner::is_banner_image_url_Valid() const{
    return m_banner_image_url_isValid;
}

bool OAISeries_series_inner::isEligibleForSubscription() const {
    return m_eligible_for_subscription;
}
void OAISeries_series_inner::setEligibleForSubscription(const bool &eligible_for_subscription) {
    m_eligible_for_subscription = eligible_for_subscription;
    m_eligible_for_subscription_isSet = true;
}

bool OAISeries_series_inner::is_eligible_for_subscription_Set() const{
    return m_eligible_for_subscription_isSet;
}

bool OAISeries_series_inner::is_eligible_for_subscription_Valid() const{
    return m_eligible_for_subscription_isValid;
}

QString OAISeries_series_inner::getImageUrl() const {
    return m_image_url;
}
void OAISeries_series_inner::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAISeries_series_inner::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAISeries_series_inner::is_image_url_Valid() const{
    return m_image_url_isValid;
}

bool OAISeries_series_inner::isIsComplete() const {
    return m_is_complete;
}
void OAISeries_series_inner::setIsComplete(const bool &is_complete) {
    m_is_complete = is_complete;
    m_is_complete_isSet = true;
}

bool OAISeries_series_inner::is_is_complete_Set() const{
    return m_is_complete_isSet;
}

bool OAISeries_series_inner::is_is_complete_Valid() const{
    return m_is_complete_isValid;
}

QString OAISeries_series_inner::getSeriesFormatType() const {
    return m_series_format_type;
}
void OAISeries_series_inner::setSeriesFormatType(const QString &series_format_type) {
    m_series_format_type = series_format_type;
    m_series_format_type_isSet = true;
}

bool OAISeries_series_inner::is_series_format_type_Set() const{
    return m_series_format_type_isSet;
}

bool OAISeries_series_inner::is_series_format_type_Valid() const{
    return m_series_format_type_isValid;
}

QString OAISeries_series_inner::getSeriesId() const {
    return m_series_id;
}
void OAISeries_series_inner::setSeriesId(const QString &series_id) {
    m_series_id = series_id;
    m_series_id_isSet = true;
}

bool OAISeries_series_inner::is_series_id_Set() const{
    return m_series_id_isSet;
}

bool OAISeries_series_inner::is_series_id_Valid() const{
    return m_series_id_isValid;
}

OAISeries_series_inner_seriesSubscriptionReleaseInfo OAISeries_series_inner::getSeriesSubscriptionReleaseInfo() const {
    return m_series_subscription_release_info;
}
void OAISeries_series_inner::setSeriesSubscriptionReleaseInfo(const OAISeries_series_inner_seriesSubscriptionReleaseInfo &series_subscription_release_info) {
    m_series_subscription_release_info = series_subscription_release_info;
    m_series_subscription_release_info_isSet = true;
}

bool OAISeries_series_inner::is_series_subscription_release_info_Set() const{
    return m_series_subscription_release_info_isSet;
}

bool OAISeries_series_inner::is_series_subscription_release_info_Valid() const{
    return m_series_subscription_release_info_isValid;
}

QString OAISeries_series_inner::getSeriesType() const {
    return m_series_type;
}
void OAISeries_series_inner::setSeriesType(const QString &series_type) {
    m_series_type = series_type;
    m_series_type_isSet = true;
}

bool OAISeries_series_inner::is_series_type_Set() const{
    return m_series_type_isSet;
}

bool OAISeries_series_inner::is_series_type_Valid() const{
    return m_series_type_isValid;
}

QString OAISeries_series_inner::getSubscriptionId() const {
    return m_subscription_id;
}
void OAISeries_series_inner::setSubscriptionId(const QString &subscription_id) {
    m_subscription_id = subscription_id;
    m_subscription_id_isSet = true;
}

bool OAISeries_series_inner::is_subscription_id_Set() const{
    return m_subscription_id_isSet;
}

bool OAISeries_series_inner::is_subscription_id_Valid() const{
    return m_subscription_id_isValid;
}

QString OAISeries_series_inner::getTitle() const {
    return m_title;
}
void OAISeries_series_inner::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAISeries_series_inner::is_title_Set() const{
    return m_title_isSet;
}

bool OAISeries_series_inner::is_title_Valid() const{
    return m_title_isValid;
}

bool OAISeries_series_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_banner_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_eligible_for_subscription_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_complete_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_series_format_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_series_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_series_subscription_release_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_series_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISeries_series_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
