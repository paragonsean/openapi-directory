/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1SessionEventQueryDetail from './GoogleCloudDataplexV1SessionEventQueryDetail';

/**
 * The GoogleCloudDataplexV1SessionEvent model module.
 * @module model/GoogleCloudDataplexV1SessionEvent
 * @version v1
 */
class GoogleCloudDataplexV1SessionEvent {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1SessionEvent</code>.
     * These messages contain information about sessions within an environment. The monitored resource is &#39;Environment&#39;.
     * @alias module:model/GoogleCloudDataplexV1SessionEvent
     */
    constructor() { 
        
        GoogleCloudDataplexV1SessionEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1SessionEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1SessionEvent} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1SessionEvent} The populated <code>GoogleCloudDataplexV1SessionEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1SessionEvent();

            if (data.hasOwnProperty('eventSucceeded')) {
                obj['eventSucceeded'] = ApiClient.convertToType(data['eventSucceeded'], 'Boolean');
            }
            if (data.hasOwnProperty('fastStartupEnabled')) {
                obj['fastStartupEnabled'] = ApiClient.convertToType(data['fastStartupEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = GoogleCloudDataplexV1SessionEventQueryDetail.constructFromObject(data['query']);
            }
            if (data.hasOwnProperty('sessionId')) {
                obj['sessionId'] = ApiClient.convertToType(data['sessionId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('unassignedDuration')) {
                obj['unassignedDuration'] = ApiClient.convertToType(data['unassignedDuration'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1SessionEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1SessionEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // validate the optional field `query`
        if (data['query']) { // data not null
          GoogleCloudDataplexV1SessionEventQueryDetail.validateJSON(data['query']);
        }
        // ensure the json data is a string
        if (data['sessionId'] && !(typeof data['sessionId'] === 'string' || data['sessionId'] instanceof String)) {
            throw new Error("Expected the field `sessionId` to be a primitive type in the JSON string but got " + data['sessionId']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['unassignedDuration'] && !(typeof data['unassignedDuration'] === 'string' || data['unassignedDuration'] instanceof String)) {
            throw new Error("Expected the field `unassignedDuration` to be a primitive type in the JSON string but got " + data['unassignedDuration']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }

        return true;
    }


}



/**
 * The status of the event.
 * @member {Boolean} eventSucceeded
 */
GoogleCloudDataplexV1SessionEvent.prototype['eventSucceeded'] = undefined;

/**
 * If the session is associated with an environment with fast startup enabled, and was created before being assigned to a user.
 * @member {Boolean} fastStartupEnabled
 */
GoogleCloudDataplexV1SessionEvent.prototype['fastStartupEnabled'] = undefined;

/**
 * The log message.
 * @member {String} message
 */
GoogleCloudDataplexV1SessionEvent.prototype['message'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1SessionEventQueryDetail} query
 */
GoogleCloudDataplexV1SessionEvent.prototype['query'] = undefined;

/**
 * Unique identifier for the session.
 * @member {String} sessionId
 */
GoogleCloudDataplexV1SessionEvent.prototype['sessionId'] = undefined;

/**
 * The type of the event.
 * @member {module:model/GoogleCloudDataplexV1SessionEvent.TypeEnum} type
 */
GoogleCloudDataplexV1SessionEvent.prototype['type'] = undefined;

/**
 * The idle duration of a warm pooled session before it is assigned to user.
 * @member {String} unassignedDuration
 */
GoogleCloudDataplexV1SessionEvent.prototype['unassignedDuration'] = undefined;

/**
 * The information about the user that created the session. It will be the email address of the user.
 * @member {String} userId
 */
GoogleCloudDataplexV1SessionEvent.prototype['userId'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1SessionEvent['TypeEnum'] = {

    /**
     * value: "EVENT_TYPE_UNSPECIFIED"
     * @const
     */
    "EVENT_TYPE_UNSPECIFIED": "EVENT_TYPE_UNSPECIFIED",

    /**
     * value: "START"
     * @const
     */
    "START": "START",

    /**
     * value: "STOP"
     * @const
     */
    "STOP": "STOP",

    /**
     * value: "QUERY"
     * @const
     */
    "QUERY": "QUERY",

    /**
     * value: "CREATE"
     * @const
     */
    "CREATE": "CREATE"
};



export default GoogleCloudDataplexV1SessionEvent;

