/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1DataProfileResult from './GoogleCloudDataplexV1DataProfileResult';
import GoogleCloudDataplexV1DataProfileSpec from './GoogleCloudDataplexV1DataProfileSpec';
import GoogleCloudDataplexV1DataQualityResult from './GoogleCloudDataplexV1DataQualityResult';
import GoogleCloudDataplexV1DataQualitySpec from './GoogleCloudDataplexV1DataQualitySpec';
import GoogleCloudDataplexV1DataScanExecutionSpec from './GoogleCloudDataplexV1DataScanExecutionSpec';
import GoogleCloudDataplexV1DataScanExecutionStatus from './GoogleCloudDataplexV1DataScanExecutionStatus';
import GoogleCloudDataplexV1DataSource from './GoogleCloudDataplexV1DataSource';

/**
 * The GoogleCloudDataplexV1DataScan model module.
 * @module model/GoogleCloudDataplexV1DataScan
 * @version v1
 */
class GoogleCloudDataplexV1DataScan {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1DataScan</code>.
     * Represents a user-visible job which provides the insights for the related data source.For example: Data Quality: generates queries based on the rules and runs against the data to get data quality check results. Data Profile: analyzes the data in table(s) and generates insights about the structure, content and relationships (such as null percent, cardinality, min/max/mean, etc).
     * @alias module:model/GoogleCloudDataplexV1DataScan
     */
    constructor() { 
        
        GoogleCloudDataplexV1DataScan.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1DataScan</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1DataScan} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1DataScan} The populated <code>GoogleCloudDataplexV1DataScan</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1DataScan();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = GoogleCloudDataplexV1DataSource.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('dataProfileResult')) {
                obj['dataProfileResult'] = GoogleCloudDataplexV1DataProfileResult.constructFromObject(data['dataProfileResult']);
            }
            if (data.hasOwnProperty('dataProfileSpec')) {
                obj['dataProfileSpec'] = GoogleCloudDataplexV1DataProfileSpec.constructFromObject(data['dataProfileSpec']);
            }
            if (data.hasOwnProperty('dataQualityResult')) {
                obj['dataQualityResult'] = GoogleCloudDataplexV1DataQualityResult.constructFromObject(data['dataQualityResult']);
            }
            if (data.hasOwnProperty('dataQualitySpec')) {
                obj['dataQualitySpec'] = GoogleCloudDataplexV1DataQualitySpec.constructFromObject(data['dataQualitySpec']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('executionSpec')) {
                obj['executionSpec'] = GoogleCloudDataplexV1DataScanExecutionSpec.constructFromObject(data['executionSpec']);
            }
            if (data.hasOwnProperty('executionStatus')) {
                obj['executionStatus'] = GoogleCloudDataplexV1DataScanExecutionStatus.constructFromObject(data['executionStatus']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1DataScan</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1DataScan</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          GoogleCloudDataplexV1DataSource.validateJSON(data['data']);
        }
        // validate the optional field `dataProfileResult`
        if (data['dataProfileResult']) { // data not null
          GoogleCloudDataplexV1DataProfileResult.validateJSON(data['dataProfileResult']);
        }
        // validate the optional field `dataProfileSpec`
        if (data['dataProfileSpec']) { // data not null
          GoogleCloudDataplexV1DataProfileSpec.validateJSON(data['dataProfileSpec']);
        }
        // validate the optional field `dataQualityResult`
        if (data['dataQualityResult']) { // data not null
          GoogleCloudDataplexV1DataQualityResult.validateJSON(data['dataQualityResult']);
        }
        // validate the optional field `dataQualitySpec`
        if (data['dataQualitySpec']) { // data not null
          GoogleCloudDataplexV1DataQualitySpec.validateJSON(data['dataQualitySpec']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `executionSpec`
        if (data['executionSpec']) { // data not null
          GoogleCloudDataplexV1DataScanExecutionSpec.validateJSON(data['executionSpec']);
        }
        // validate the optional field `executionStatus`
        if (data['executionStatus']) { // data not null
          GoogleCloudDataplexV1DataScanExecutionStatus.validateJSON(data['executionStatus']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The time when the scan was created.
 * @member {String} createTime
 */
GoogleCloudDataplexV1DataScan.prototype['createTime'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataSource} data
 */
GoogleCloudDataplexV1DataScan.prototype['data'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataProfileResult} dataProfileResult
 */
GoogleCloudDataplexV1DataScan.prototype['dataProfileResult'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataProfileSpec} dataProfileSpec
 */
GoogleCloudDataplexV1DataScan.prototype['dataProfileSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataQualityResult} dataQualityResult
 */
GoogleCloudDataplexV1DataScan.prototype['dataQualityResult'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataQualitySpec} dataQualitySpec
 */
GoogleCloudDataplexV1DataScan.prototype['dataQualitySpec'] = undefined;

/**
 * Optional. Description of the scan. Must be between 1-1024 characters.
 * @member {String} description
 */
GoogleCloudDataplexV1DataScan.prototype['description'] = undefined;

/**
 * Optional. User friendly display name. Must be between 1-256 characters.
 * @member {String} displayName
 */
GoogleCloudDataplexV1DataScan.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataScanExecutionSpec} executionSpec
 */
GoogleCloudDataplexV1DataScan.prototype['executionSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataScanExecutionStatus} executionStatus
 */
GoogleCloudDataplexV1DataScan.prototype['executionStatus'] = undefined;

/**
 * Optional. User-defined labels for the scan.
 * @member {Object.<String, String>} labels
 */
GoogleCloudDataplexV1DataScan.prototype['labels'] = undefined;

/**
 * Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.
 * @member {String} name
 */
GoogleCloudDataplexV1DataScan.prototype['name'] = undefined;

/**
 * Output only. Current state of the DataScan.
 * @member {module:model/GoogleCloudDataplexV1DataScan.StateEnum} state
 */
GoogleCloudDataplexV1DataScan.prototype['state'] = undefined;

/**
 * Output only. The type of DataScan.
 * @member {module:model/GoogleCloudDataplexV1DataScan.TypeEnum} type
 */
GoogleCloudDataplexV1DataScan.prototype['type'] = undefined;

/**
 * Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.
 * @member {String} uid
 */
GoogleCloudDataplexV1DataScan.prototype['uid'] = undefined;

/**
 * Output only. The time when the scan was last updated.
 * @member {String} updateTime
 */
GoogleCloudDataplexV1DataScan.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1DataScan['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "ACTION_REQUIRED"
     * @const
     */
    "ACTION_REQUIRED": "ACTION_REQUIRED"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1DataScan['TypeEnum'] = {

    /**
     * value: "DATA_SCAN_TYPE_UNSPECIFIED"
     * @const
     */
    "SCAN_TYPE_UNSPECIFIED": "DATA_SCAN_TYPE_UNSPECIFIED",

    /**
     * value: "DATA_QUALITY"
     * @const
     */
    "QUALITY": "DATA_QUALITY",

    /**
     * value: "DATA_PROFILE"
     * @const
     */
    "PROFILE": "DATA_PROFILE"
};



export default GoogleCloudDataplexV1DataScan;

