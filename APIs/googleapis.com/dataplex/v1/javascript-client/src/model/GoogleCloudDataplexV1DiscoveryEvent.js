/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1DiscoveryEventActionDetails from './GoogleCloudDataplexV1DiscoveryEventActionDetails';
import GoogleCloudDataplexV1DiscoveryEventConfigDetails from './GoogleCloudDataplexV1DiscoveryEventConfigDetails';
import GoogleCloudDataplexV1DiscoveryEventEntityDetails from './GoogleCloudDataplexV1DiscoveryEventEntityDetails';
import GoogleCloudDataplexV1DiscoveryEventPartitionDetails from './GoogleCloudDataplexV1DiscoveryEventPartitionDetails';

/**
 * The GoogleCloudDataplexV1DiscoveryEvent model module.
 * @module model/GoogleCloudDataplexV1DiscoveryEvent
 * @version v1
 */
class GoogleCloudDataplexV1DiscoveryEvent {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1DiscoveryEvent</code>.
     * The payload associated with Discovery data processing.
     * @alias module:model/GoogleCloudDataplexV1DiscoveryEvent
     */
    constructor() { 
        
        GoogleCloudDataplexV1DiscoveryEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1DiscoveryEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1DiscoveryEvent} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1DiscoveryEvent} The populated <code>GoogleCloudDataplexV1DiscoveryEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1DiscoveryEvent();

            if (data.hasOwnProperty('action')) {
                obj['action'] = GoogleCloudDataplexV1DiscoveryEventActionDetails.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('assetId')) {
                obj['assetId'] = ApiClient.convertToType(data['assetId'], 'String');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = GoogleCloudDataplexV1DiscoveryEventConfigDetails.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('dataLocation')) {
                obj['dataLocation'] = ApiClient.convertToType(data['dataLocation'], 'String');
            }
            if (data.hasOwnProperty('entity')) {
                obj['entity'] = GoogleCloudDataplexV1DiscoveryEventEntityDetails.constructFromObject(data['entity']);
            }
            if (data.hasOwnProperty('lakeId')) {
                obj['lakeId'] = ApiClient.convertToType(data['lakeId'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('partition')) {
                obj['partition'] = GoogleCloudDataplexV1DiscoveryEventPartitionDetails.constructFromObject(data['partition']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('zoneId')) {
                obj['zoneId'] = ApiClient.convertToType(data['zoneId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1DiscoveryEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1DiscoveryEvent</code>.
     */
    static validateJSON(data) {
        // validate the optional field `action`
        if (data['action']) { // data not null
          GoogleCloudDataplexV1DiscoveryEventActionDetails.validateJSON(data['action']);
        }
        // ensure the json data is a string
        if (data['assetId'] && !(typeof data['assetId'] === 'string' || data['assetId'] instanceof String)) {
            throw new Error("Expected the field `assetId` to be a primitive type in the JSON string but got " + data['assetId']);
        }
        // validate the optional field `config`
        if (data['config']) { // data not null
          GoogleCloudDataplexV1DiscoveryEventConfigDetails.validateJSON(data['config']);
        }
        // ensure the json data is a string
        if (data['dataLocation'] && !(typeof data['dataLocation'] === 'string' || data['dataLocation'] instanceof String)) {
            throw new Error("Expected the field `dataLocation` to be a primitive type in the JSON string but got " + data['dataLocation']);
        }
        // validate the optional field `entity`
        if (data['entity']) { // data not null
          GoogleCloudDataplexV1DiscoveryEventEntityDetails.validateJSON(data['entity']);
        }
        // ensure the json data is a string
        if (data['lakeId'] && !(typeof data['lakeId'] === 'string' || data['lakeId'] instanceof String)) {
            throw new Error("Expected the field `lakeId` to be a primitive type in the JSON string but got " + data['lakeId']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // validate the optional field `partition`
        if (data['partition']) { // data not null
          GoogleCloudDataplexV1DiscoveryEventPartitionDetails.validateJSON(data['partition']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['zoneId'] && !(typeof data['zoneId'] === 'string' || data['zoneId'] instanceof String)) {
            throw new Error("Expected the field `zoneId` to be a primitive type in the JSON string but got " + data['zoneId']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDataplexV1DiscoveryEventActionDetails} action
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['action'] = undefined;

/**
 * The id of the associated asset.
 * @member {String} assetId
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['assetId'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DiscoveryEventConfigDetails} config
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['config'] = undefined;

/**
 * The data location associated with the event.
 * @member {String} dataLocation
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['dataLocation'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DiscoveryEventEntityDetails} entity
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['entity'] = undefined;

/**
 * The id of the associated lake.
 * @member {String} lakeId
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['lakeId'] = undefined;

/**
 * The log message.
 * @member {String} message
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['message'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DiscoveryEventPartitionDetails} partition
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['partition'] = undefined;

/**
 * The type of the event being logged.
 * @member {module:model/GoogleCloudDataplexV1DiscoveryEvent.TypeEnum} type
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['type'] = undefined;

/**
 * The id of the associated zone.
 * @member {String} zoneId
 */
GoogleCloudDataplexV1DiscoveryEvent.prototype['zoneId'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1DiscoveryEvent['TypeEnum'] = {

    /**
     * value: "EVENT_TYPE_UNSPECIFIED"
     * @const
     */
    "EVENT_TYPE_UNSPECIFIED": "EVENT_TYPE_UNSPECIFIED",

    /**
     * value: "CONFIG"
     * @const
     */
    "CONFIG": "CONFIG",

    /**
     * value: "ENTITY_CREATED"
     * @const
     */
    "ENTITY_CREATED": "ENTITY_CREATED",

    /**
     * value: "ENTITY_UPDATED"
     * @const
     */
    "ENTITY_UPDATED": "ENTITY_UPDATED",

    /**
     * value: "ENTITY_DELETED"
     * @const
     */
    "ENTITY_DELETED": "ENTITY_DELETED",

    /**
     * value: "PARTITION_CREATED"
     * @const
     */
    "PARTITION_CREATED": "PARTITION_CREATED",

    /**
     * value: "PARTITION_UPDATED"
     * @const
     */
    "PARTITION_UPDATED": "PARTITION_UPDATED",

    /**
     * value: "PARTITION_DELETED"
     * @const
     */
    "PARTITION_DELETED": "PARTITION_DELETED"
};



export default GoogleCloudDataplexV1DiscoveryEvent;

