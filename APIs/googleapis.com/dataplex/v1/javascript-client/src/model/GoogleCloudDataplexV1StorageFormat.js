/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1StorageFormatCsvOptions from './GoogleCloudDataplexV1StorageFormatCsvOptions';
import GoogleCloudDataplexV1StorageFormatIcebergOptions from './GoogleCloudDataplexV1StorageFormatIcebergOptions';
import GoogleCloudDataplexV1StorageFormatJsonOptions from './GoogleCloudDataplexV1StorageFormatJsonOptions';

/**
 * The GoogleCloudDataplexV1StorageFormat model module.
 * @module model/GoogleCloudDataplexV1StorageFormat
 * @version v1
 */
class GoogleCloudDataplexV1StorageFormat {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1StorageFormat</code>.
     * Describes the format of the data within its storage location.
     * @alias module:model/GoogleCloudDataplexV1StorageFormat
     */
    constructor() { 
        
        GoogleCloudDataplexV1StorageFormat.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1StorageFormat</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1StorageFormat} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1StorageFormat} The populated <code>GoogleCloudDataplexV1StorageFormat</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1StorageFormat();

            if (data.hasOwnProperty('compressionFormat')) {
                obj['compressionFormat'] = ApiClient.convertToType(data['compressionFormat'], 'String');
            }
            if (data.hasOwnProperty('csv')) {
                obj['csv'] = GoogleCloudDataplexV1StorageFormatCsvOptions.constructFromObject(data['csv']);
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('iceberg')) {
                obj['iceberg'] = GoogleCloudDataplexV1StorageFormatIcebergOptions.constructFromObject(data['iceberg']);
            }
            if (data.hasOwnProperty('json')) {
                obj['json'] = GoogleCloudDataplexV1StorageFormatJsonOptions.constructFromObject(data['json']);
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1StorageFormat</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1StorageFormat</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['compressionFormat'] && !(typeof data['compressionFormat'] === 'string' || data['compressionFormat'] instanceof String)) {
            throw new Error("Expected the field `compressionFormat` to be a primitive type in the JSON string but got " + data['compressionFormat']);
        }
        // validate the optional field `csv`
        if (data['csv']) { // data not null
          GoogleCloudDataplexV1StorageFormatCsvOptions.validateJSON(data['csv']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // validate the optional field `iceberg`
        if (data['iceberg']) { // data not null
          GoogleCloudDataplexV1StorageFormatIcebergOptions.validateJSON(data['iceberg']);
        }
        // validate the optional field `json`
        if (data['json']) { // data not null
          GoogleCloudDataplexV1StorageFormatJsonOptions.validateJSON(data['json']);
        }
        // ensure the json data is a string
        if (data['mimeType'] && !(typeof data['mimeType'] === 'string' || data['mimeType'] instanceof String)) {
            throw new Error("Expected the field `mimeType` to be a primitive type in the JSON string but got " + data['mimeType']);
        }

        return true;
    }


}



/**
 * Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed.
 * @member {module:model/GoogleCloudDataplexV1StorageFormat.CompressionFormatEnum} compressionFormat
 */
GoogleCloudDataplexV1StorageFormat.prototype['compressionFormat'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1StorageFormatCsvOptions} csv
 */
GoogleCloudDataplexV1StorageFormat.prototype['csv'] = undefined;

/**
 * Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type.
 * @member {module:model/GoogleCloudDataplexV1StorageFormat.FormatEnum} format
 */
GoogleCloudDataplexV1StorageFormat.prototype['format'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1StorageFormatIcebergOptions} iceberg
 */
GoogleCloudDataplexV1StorageFormat.prototype['iceberg'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1StorageFormatJsonOptions} json
 */
GoogleCloudDataplexV1StorageFormat.prototype['json'] = undefined;

/**
 * Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}
 * @member {String} mimeType
 */
GoogleCloudDataplexV1StorageFormat.prototype['mimeType'] = undefined;





/**
 * Allowed values for the <code>compressionFormat</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1StorageFormat['CompressionFormatEnum'] = {

    /**
     * value: "COMPRESSION_FORMAT_UNSPECIFIED"
     * @const
     */
    "COMPRESSION_FORMAT_UNSPECIFIED": "COMPRESSION_FORMAT_UNSPECIFIED",

    /**
     * value: "GZIP"
     * @const
     */
    "GZIP": "GZIP",

    /**
     * value: "BZIP2"
     * @const
     */
    "BZIP2": "BZIP2"
};


/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1StorageFormat['FormatEnum'] = {

    /**
     * value: "FORMAT_UNSPECIFIED"
     * @const
     */
    "FORMAT_UNSPECIFIED": "FORMAT_UNSPECIFIED",

    /**
     * value: "PARQUET"
     * @const
     */
    "PARQUET": "PARQUET",

    /**
     * value: "AVRO"
     * @const
     */
    "AVRO": "AVRO",

    /**
     * value: "ORC"
     * @const
     */
    "ORC": "ORC",

    /**
     * value: "CSV"
     * @const
     */
    "CSV": "CSV",

    /**
     * value: "JSON"
     * @const
     */
    "JSON": "JSON",

    /**
     * value: "IMAGE"
     * @const
     */
    "IMAGE": "IMAGE",

    /**
     * value: "AUDIO"
     * @const
     */
    "AUDIO": "AUDIO",

    /**
     * value: "VIDEO"
     * @const
     */
    "VIDEO": "VIDEO",

    /**
     * value: "TEXT"
     * @const
     */
    "TEXT": "TEXT",

    /**
     * value: "TFRECORD"
     * @const
     */
    "TFRECORD": "TFRECORD",

    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN"
};



export default GoogleCloudDataplexV1StorageFormat;

