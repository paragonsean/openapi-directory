/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime model module.
 * @module model/GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime
 * @version v1
 */
class GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime</code>.
     * Container Image Runtime Configuration used with Batch execution.
     * @alias module:model/GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime
     */
    constructor() { 
        
        GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime} The populated <code>GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime();

            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], 'String');
            }
            if (data.hasOwnProperty('javaJars')) {
                obj['javaJars'] = ApiClient.convertToType(data['javaJars'], ['String']);
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
            if (data.hasOwnProperty('pythonPackages')) {
                obj['pythonPackages'] = ApiClient.convertToType(data['pythonPackages'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['image'] && !(typeof data['image'] === 'string' || data['image'] instanceof String)) {
            throw new Error("Expected the field `image` to be a primitive type in the JSON string but got " + data['image']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['javaJars'])) {
            throw new Error("Expected the field `javaJars` to be an array in the JSON data but got " + data['javaJars']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['pythonPackages'])) {
            throw new Error("Expected the field `pythonPackages` to be an array in the JSON data but got " + data['pythonPackages']);
        }

        return true;
    }


}



/**
 * Optional. Container image to use.
 * @member {String} image
 */
GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.prototype['image'] = undefined;

/**
 * Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar
 * @member {Array.<String>} javaJars
 */
GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.prototype['javaJars'] = undefined;

/**
 * Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
 * @member {Object.<String, String>} properties
 */
GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.prototype['properties'] = undefined;

/**
 * Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz
 * @member {Array.<String>} pythonPackages
 */
GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.prototype['pythonPackages'] = undefined;






export default GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime;

