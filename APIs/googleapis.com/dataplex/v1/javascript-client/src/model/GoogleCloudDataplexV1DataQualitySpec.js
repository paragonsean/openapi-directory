/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1DataQualityRule from './GoogleCloudDataplexV1DataQualityRule';
import GoogleCloudDataplexV1DataQualitySpecPostScanActions from './GoogleCloudDataplexV1DataQualitySpecPostScanActions';

/**
 * The GoogleCloudDataplexV1DataQualitySpec model module.
 * @module model/GoogleCloudDataplexV1DataQualitySpec
 * @version v1
 */
class GoogleCloudDataplexV1DataQualitySpec {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1DataQualitySpec</code>.
     * DataQualityScan related setting.
     * @alias module:model/GoogleCloudDataplexV1DataQualitySpec
     */
    constructor() { 
        
        GoogleCloudDataplexV1DataQualitySpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1DataQualitySpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1DataQualitySpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1DataQualitySpec} The populated <code>GoogleCloudDataplexV1DataQualitySpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1DataQualitySpec();

            if (data.hasOwnProperty('postScanActions')) {
                obj['postScanActions'] = GoogleCloudDataplexV1DataQualitySpecPostScanActions.constructFromObject(data['postScanActions']);
            }
            if (data.hasOwnProperty('rowFilter')) {
                obj['rowFilter'] = ApiClient.convertToType(data['rowFilter'], 'String');
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [GoogleCloudDataplexV1DataQualityRule]);
            }
            if (data.hasOwnProperty('samplingPercent')) {
                obj['samplingPercent'] = ApiClient.convertToType(data['samplingPercent'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1DataQualitySpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1DataQualitySpec</code>.
     */
    static validateJSON(data) {
        // validate the optional field `postScanActions`
        if (data['postScanActions']) { // data not null
          GoogleCloudDataplexV1DataQualitySpecPostScanActions.validateJSON(data['postScanActions']);
        }
        // ensure the json data is a string
        if (data['rowFilter'] && !(typeof data['rowFilter'] === 'string' || data['rowFilter'] instanceof String)) {
            throw new Error("Expected the field `rowFilter` to be a primitive type in the JSON string but got " + data['rowFilter']);
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                GoogleCloudDataplexV1DataQualityRule.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDataplexV1DataQualitySpecPostScanActions} postScanActions
 */
GoogleCloudDataplexV1DataQualitySpec.prototype['postScanActions'] = undefined;

/**
 * Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10
 * @member {String} rowFilter
 */
GoogleCloudDataplexV1DataQualitySpec.prototype['rowFilter'] = undefined;

/**
 * Required. The list of rules to evaluate against a data source. At least one rule is required.
 * @member {Array.<module:model/GoogleCloudDataplexV1DataQualityRule>} rules
 */
GoogleCloudDataplexV1DataQualitySpec.prototype['rules'] = undefined;

/**
 * Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.
 * @member {Number} samplingPercent
 */
GoogleCloudDataplexV1DataQualitySpec.prototype['samplingPercent'] = undefined;






export default GoogleCloudDataplexV1DataQualitySpec;

