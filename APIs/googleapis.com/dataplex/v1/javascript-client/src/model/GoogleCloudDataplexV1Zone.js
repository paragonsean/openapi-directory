/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1AssetStatus from './GoogleCloudDataplexV1AssetStatus';
import GoogleCloudDataplexV1ZoneDiscoverySpec from './GoogleCloudDataplexV1ZoneDiscoverySpec';
import GoogleCloudDataplexV1ZoneResourceSpec from './GoogleCloudDataplexV1ZoneResourceSpec';

/**
 * The GoogleCloudDataplexV1Zone model module.
 * @module model/GoogleCloudDataplexV1Zone
 * @version v1
 */
class GoogleCloudDataplexV1Zone {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1Zone</code>.
     * A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.
     * @alias module:model/GoogleCloudDataplexV1Zone
     */
    constructor() { 
        
        GoogleCloudDataplexV1Zone.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1Zone</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1Zone} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1Zone} The populated <code>GoogleCloudDataplexV1Zone</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1Zone();

            if (data.hasOwnProperty('assetStatus')) {
                obj['assetStatus'] = GoogleCloudDataplexV1AssetStatus.constructFromObject(data['assetStatus']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('discoverySpec')) {
                obj['discoverySpec'] = GoogleCloudDataplexV1ZoneDiscoverySpec.constructFromObject(data['discoverySpec']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resourceSpec')) {
                obj['resourceSpec'] = GoogleCloudDataplexV1ZoneResourceSpec.constructFromObject(data['resourceSpec']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1Zone</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1Zone</code>.
     */
    static validateJSON(data) {
        // validate the optional field `assetStatus`
        if (data['assetStatus']) { // data not null
          GoogleCloudDataplexV1AssetStatus.validateJSON(data['assetStatus']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `discoverySpec`
        if (data['discoverySpec']) { // data not null
          GoogleCloudDataplexV1ZoneDiscoverySpec.validateJSON(data['discoverySpec']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `resourceSpec`
        if (data['resourceSpec']) { // data not null
          GoogleCloudDataplexV1ZoneResourceSpec.validateJSON(data['resourceSpec']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDataplexV1AssetStatus} assetStatus
 */
GoogleCloudDataplexV1Zone.prototype['assetStatus'] = undefined;

/**
 * Output only. The time when the zone was created.
 * @member {String} createTime
 */
GoogleCloudDataplexV1Zone.prototype['createTime'] = undefined;

/**
 * Optional. Description of the zone.
 * @member {String} description
 */
GoogleCloudDataplexV1Zone.prototype['description'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1ZoneDiscoverySpec} discoverySpec
 */
GoogleCloudDataplexV1Zone.prototype['discoverySpec'] = undefined;

/**
 * Optional. User friendly display name.
 * @member {String} displayName
 */
GoogleCloudDataplexV1Zone.prototype['displayName'] = undefined;

/**
 * Optional. User defined labels for the zone.
 * @member {Object.<String, String>} labels
 */
GoogleCloudDataplexV1Zone.prototype['labels'] = undefined;

/**
 * Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
 * @member {String} name
 */
GoogleCloudDataplexV1Zone.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1ZoneResourceSpec} resourceSpec
 */
GoogleCloudDataplexV1Zone.prototype['resourceSpec'] = undefined;

/**
 * Output only. Current state of the zone.
 * @member {module:model/GoogleCloudDataplexV1Zone.StateEnum} state
 */
GoogleCloudDataplexV1Zone.prototype['state'] = undefined;

/**
 * Required. Immutable. The type of the zone.
 * @member {module:model/GoogleCloudDataplexV1Zone.TypeEnum} type
 */
GoogleCloudDataplexV1Zone.prototype['type'] = undefined;

/**
 * Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
 * @member {String} uid
 */
GoogleCloudDataplexV1Zone.prototype['uid'] = undefined;

/**
 * Output only. The time when the zone was last updated.
 * @member {String} updateTime
 */
GoogleCloudDataplexV1Zone.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1Zone['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "ACTION_REQUIRED"
     * @const
     */
    "ACTION_REQUIRED": "ACTION_REQUIRED"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1Zone['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "RAW"
     * @const
     */
    "RAW": "RAW",

    /**
     * value: "CURATED"
     * @const
     */
    "CURATED": "CURATED"
};



export default GoogleCloudDataplexV1Zone;

