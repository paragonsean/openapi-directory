/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources model module.
 * @module model/GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources
 * @version v1
 */
class GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources</code>.
     * Batch compute resources associated with the task.
     * @alias module:model/GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources
     */
    constructor() { 
        
        GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources} The populated <code>GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources();

            if (data.hasOwnProperty('executorsCount')) {
                obj['executorsCount'] = ApiClient.convertToType(data['executorsCount'], 'Number');
            }
            if (data.hasOwnProperty('maxExecutorsCount')) {
                obj['maxExecutorsCount'] = ApiClient.convertToType(data['maxExecutorsCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Optional. Total number of job executors. Executor Count should be between 2 and 100. Default=2
 * @member {Number} executorsCount
 */
GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources.prototype['executorsCount'] = undefined;

/**
 * Optional. Max configurable executors. If max_executors_count > executors_count, then auto-scaling is enabled. Max Executor Count should be between 2 and 1000. Default=1000
 * @member {Number} maxExecutorsCount
 */
GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources.prototype['maxExecutorsCount'] = undefined;






export default GoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources;

