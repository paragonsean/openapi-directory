/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDataplexV1LakeMetastoreStatus model module.
 * @module model/GoogleCloudDataplexV1LakeMetastoreStatus
 * @version v1
 */
class GoogleCloudDataplexV1LakeMetastoreStatus {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1LakeMetastoreStatus</code>.
     * Status of Lake and Dataproc Metastore service instance association.
     * @alias module:model/GoogleCloudDataplexV1LakeMetastoreStatus
     */
    constructor() { 
        
        GoogleCloudDataplexV1LakeMetastoreStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1LakeMetastoreStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1LakeMetastoreStatus} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1LakeMetastoreStatus} The populated <code>GoogleCloudDataplexV1LakeMetastoreStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1LakeMetastoreStatus();

            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1LakeMetastoreStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1LakeMetastoreStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * The URI of the endpoint used to access the Metastore service.
 * @member {String} endpoint
 */
GoogleCloudDataplexV1LakeMetastoreStatus.prototype['endpoint'] = undefined;

/**
 * Additional information about the current status.
 * @member {String} message
 */
GoogleCloudDataplexV1LakeMetastoreStatus.prototype['message'] = undefined;

/**
 * Current state of association.
 * @member {module:model/GoogleCloudDataplexV1LakeMetastoreStatus.StateEnum} state
 */
GoogleCloudDataplexV1LakeMetastoreStatus.prototype['state'] = undefined;

/**
 * Last update time of the metastore status of the lake.
 * @member {String} updateTime
 */
GoogleCloudDataplexV1LakeMetastoreStatus.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1LakeMetastoreStatus['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "READY"
     * @const
     */
    "READY": "READY",

    /**
     * value: "UPDATING"
     * @const
     */
    "UPDATING": "UPDATING",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR"
};



export default GoogleCloudDataplexV1LakeMetastoreStatus;

