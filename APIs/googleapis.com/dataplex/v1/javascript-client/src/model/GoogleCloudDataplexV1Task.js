/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1TaskExecutionSpec from './GoogleCloudDataplexV1TaskExecutionSpec';
import GoogleCloudDataplexV1TaskExecutionStatus from './GoogleCloudDataplexV1TaskExecutionStatus';
import GoogleCloudDataplexV1TaskNotebookTaskConfig from './GoogleCloudDataplexV1TaskNotebookTaskConfig';
import GoogleCloudDataplexV1TaskSparkTaskConfig from './GoogleCloudDataplexV1TaskSparkTaskConfig';
import GoogleCloudDataplexV1TaskTriggerSpec from './GoogleCloudDataplexV1TaskTriggerSpec';

/**
 * The GoogleCloudDataplexV1Task model module.
 * @module model/GoogleCloudDataplexV1Task
 * @version v1
 */
class GoogleCloudDataplexV1Task {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1Task</code>.
     * A task represents a user-visible job.
     * @alias module:model/GoogleCloudDataplexV1Task
     */
    constructor() { 
        
        GoogleCloudDataplexV1Task.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1Task</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1Task} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1Task} The populated <code>GoogleCloudDataplexV1Task</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1Task();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('executionSpec')) {
                obj['executionSpec'] = GoogleCloudDataplexV1TaskExecutionSpec.constructFromObject(data['executionSpec']);
            }
            if (data.hasOwnProperty('executionStatus')) {
                obj['executionStatus'] = GoogleCloudDataplexV1TaskExecutionStatus.constructFromObject(data['executionStatus']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notebook')) {
                obj['notebook'] = GoogleCloudDataplexV1TaskNotebookTaskConfig.constructFromObject(data['notebook']);
            }
            if (data.hasOwnProperty('spark')) {
                obj['spark'] = GoogleCloudDataplexV1TaskSparkTaskConfig.constructFromObject(data['spark']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('triggerSpec')) {
                obj['triggerSpec'] = GoogleCloudDataplexV1TaskTriggerSpec.constructFromObject(data['triggerSpec']);
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1Task</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1Task</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `executionSpec`
        if (data['executionSpec']) { // data not null
          GoogleCloudDataplexV1TaskExecutionSpec.validateJSON(data['executionSpec']);
        }
        // validate the optional field `executionStatus`
        if (data['executionStatus']) { // data not null
          GoogleCloudDataplexV1TaskExecutionStatus.validateJSON(data['executionStatus']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `notebook`
        if (data['notebook']) { // data not null
          GoogleCloudDataplexV1TaskNotebookTaskConfig.validateJSON(data['notebook']);
        }
        // validate the optional field `spark`
        if (data['spark']) { // data not null
          GoogleCloudDataplexV1TaskSparkTaskConfig.validateJSON(data['spark']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `triggerSpec`
        if (data['triggerSpec']) { // data not null
          GoogleCloudDataplexV1TaskTriggerSpec.validateJSON(data['triggerSpec']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The time when the task was created.
 * @member {String} createTime
 */
GoogleCloudDataplexV1Task.prototype['createTime'] = undefined;

/**
 * Optional. Description of the task.
 * @member {String} description
 */
GoogleCloudDataplexV1Task.prototype['description'] = undefined;

/**
 * Optional. User friendly display name.
 * @member {String} displayName
 */
GoogleCloudDataplexV1Task.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1TaskExecutionSpec} executionSpec
 */
GoogleCloudDataplexV1Task.prototype['executionSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1TaskExecutionStatus} executionStatus
 */
GoogleCloudDataplexV1Task.prototype['executionStatus'] = undefined;

/**
 * Optional. User-defined labels for the task.
 * @member {Object.<String, String>} labels
 */
GoogleCloudDataplexV1Task.prototype['labels'] = undefined;

/**
 * Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.
 * @member {String} name
 */
GoogleCloudDataplexV1Task.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1TaskNotebookTaskConfig} notebook
 */
GoogleCloudDataplexV1Task.prototype['notebook'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1TaskSparkTaskConfig} spark
 */
GoogleCloudDataplexV1Task.prototype['spark'] = undefined;

/**
 * Output only. Current state of the task.
 * @member {module:model/GoogleCloudDataplexV1Task.StateEnum} state
 */
GoogleCloudDataplexV1Task.prototype['state'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1TaskTriggerSpec} triggerSpec
 */
GoogleCloudDataplexV1Task.prototype['triggerSpec'] = undefined;

/**
 * Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.
 * @member {String} uid
 */
GoogleCloudDataplexV1Task.prototype['uid'] = undefined;

/**
 * Output only. The time when the task was last updated.
 * @member {String} updateTime
 */
GoogleCloudDataplexV1Task.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1Task['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "ACTION_REQUIRED"
     * @const
     */
    "ACTION_REQUIRED": "ACTION_REQUIRED"
};



export default GoogleCloudDataplexV1Task;

