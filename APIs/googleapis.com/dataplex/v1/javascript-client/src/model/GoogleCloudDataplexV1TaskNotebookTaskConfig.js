/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1TaskInfrastructureSpec from './GoogleCloudDataplexV1TaskInfrastructureSpec';

/**
 * The GoogleCloudDataplexV1TaskNotebookTaskConfig model module.
 * @module model/GoogleCloudDataplexV1TaskNotebookTaskConfig
 * @version v1
 */
class GoogleCloudDataplexV1TaskNotebookTaskConfig {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1TaskNotebookTaskConfig</code>.
     * Config for running scheduled notebooks.
     * @alias module:model/GoogleCloudDataplexV1TaskNotebookTaskConfig
     */
    constructor() { 
        
        GoogleCloudDataplexV1TaskNotebookTaskConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1TaskNotebookTaskConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1TaskNotebookTaskConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1TaskNotebookTaskConfig} The populated <code>GoogleCloudDataplexV1TaskNotebookTaskConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1TaskNotebookTaskConfig();

            if (data.hasOwnProperty('archiveUris')) {
                obj['archiveUris'] = ApiClient.convertToType(data['archiveUris'], ['String']);
            }
            if (data.hasOwnProperty('fileUris')) {
                obj['fileUris'] = ApiClient.convertToType(data['fileUris'], ['String']);
            }
            if (data.hasOwnProperty('infrastructureSpec')) {
                obj['infrastructureSpec'] = GoogleCloudDataplexV1TaskInfrastructureSpec.constructFromObject(data['infrastructureSpec']);
            }
            if (data.hasOwnProperty('notebook')) {
                obj['notebook'] = ApiClient.convertToType(data['notebook'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1TaskNotebookTaskConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1TaskNotebookTaskConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['archiveUris'])) {
            throw new Error("Expected the field `archiveUris` to be an array in the JSON data but got " + data['archiveUris']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['fileUris'])) {
            throw new Error("Expected the field `fileUris` to be an array in the JSON data but got " + data['fileUris']);
        }
        // validate the optional field `infrastructureSpec`
        if (data['infrastructureSpec']) { // data not null
          GoogleCloudDataplexV1TaskInfrastructureSpec.validateJSON(data['infrastructureSpec']);
        }
        // ensure the json data is a string
        if (data['notebook'] && !(typeof data['notebook'] === 'string' || data['notebook'] instanceof String)) {
            throw new Error("Expected the field `notebook` to be a primitive type in the JSON string but got " + data['notebook']);
        }

        return true;
    }


}



/**
 * Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
 * @member {Array.<String>} archiveUris
 */
GoogleCloudDataplexV1TaskNotebookTaskConfig.prototype['archiveUris'] = undefined;

/**
 * Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
 * @member {Array.<String>} fileUris
 */
GoogleCloudDataplexV1TaskNotebookTaskConfig.prototype['fileUris'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1TaskInfrastructureSpec} infrastructureSpec
 */
GoogleCloudDataplexV1TaskNotebookTaskConfig.prototype['infrastructureSpec'] = undefined;

/**
 * Required. Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
 * @member {String} notebook
 */
GoogleCloudDataplexV1TaskNotebookTaskConfig.prototype['notebook'] = undefined;






export default GoogleCloudDataplexV1TaskNotebookTaskConfig;

