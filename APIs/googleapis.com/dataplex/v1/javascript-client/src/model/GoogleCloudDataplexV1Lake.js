/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1AssetStatus from './GoogleCloudDataplexV1AssetStatus';
import GoogleCloudDataplexV1LakeMetastore from './GoogleCloudDataplexV1LakeMetastore';
import GoogleCloudDataplexV1LakeMetastoreStatus from './GoogleCloudDataplexV1LakeMetastoreStatus';

/**
 * The GoogleCloudDataplexV1Lake model module.
 * @module model/GoogleCloudDataplexV1Lake
 * @version v1
 */
class GoogleCloudDataplexV1Lake {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1Lake</code>.
     * A lake is a centralized repository for managing enterprise data across the organization distributed across many cloud projects, and stored in a variety of storage services such as Google Cloud Storage and BigQuery. The resources attached to a lake are referred to as managed resources. Data within these managed resources can be structured or unstructured. A lake provides data admins with tools to organize, secure and manage their data at scale, and provides data scientists and data engineers an integrated experience to easily search, discover, analyze and transform data and associated metadata.
     * @alias module:model/GoogleCloudDataplexV1Lake
     */
    constructor() { 
        
        GoogleCloudDataplexV1Lake.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1Lake</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1Lake} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1Lake} The populated <code>GoogleCloudDataplexV1Lake</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1Lake();

            if (data.hasOwnProperty('assetStatus')) {
                obj['assetStatus'] = GoogleCloudDataplexV1AssetStatus.constructFromObject(data['assetStatus']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('metastore')) {
                obj['metastore'] = GoogleCloudDataplexV1LakeMetastore.constructFromObject(data['metastore']);
            }
            if (data.hasOwnProperty('metastoreStatus')) {
                obj['metastoreStatus'] = GoogleCloudDataplexV1LakeMetastoreStatus.constructFromObject(data['metastoreStatus']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1Lake</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1Lake</code>.
     */
    static validateJSON(data) {
        // validate the optional field `assetStatus`
        if (data['assetStatus']) { // data not null
          GoogleCloudDataplexV1AssetStatus.validateJSON(data['assetStatus']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `metastore`
        if (data['metastore']) { // data not null
          GoogleCloudDataplexV1LakeMetastore.validateJSON(data['metastore']);
        }
        // validate the optional field `metastoreStatus`
        if (data['metastoreStatus']) { // data not null
          GoogleCloudDataplexV1LakeMetastoreStatus.validateJSON(data['metastoreStatus']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDataplexV1AssetStatus} assetStatus
 */
GoogleCloudDataplexV1Lake.prototype['assetStatus'] = undefined;

/**
 * Output only. The time when the lake was created.
 * @member {String} createTime
 */
GoogleCloudDataplexV1Lake.prototype['createTime'] = undefined;

/**
 * Optional. Description of the lake.
 * @member {String} description
 */
GoogleCloudDataplexV1Lake.prototype['description'] = undefined;

/**
 * Optional. User friendly display name.
 * @member {String} displayName
 */
GoogleCloudDataplexV1Lake.prototype['displayName'] = undefined;

/**
 * Optional. User-defined labels for the lake.
 * @member {Object.<String, String>} labels
 */
GoogleCloudDataplexV1Lake.prototype['labels'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1LakeMetastore} metastore
 */
GoogleCloudDataplexV1Lake.prototype['metastore'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1LakeMetastoreStatus} metastoreStatus
 */
GoogleCloudDataplexV1Lake.prototype['metastoreStatus'] = undefined;

/**
 * Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.
 * @member {String} name
 */
GoogleCloudDataplexV1Lake.prototype['name'] = undefined;

/**
 * Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake.
 * @member {String} serviceAccount
 */
GoogleCloudDataplexV1Lake.prototype['serviceAccount'] = undefined;

/**
 * Output only. Current state of the lake.
 * @member {module:model/GoogleCloudDataplexV1Lake.StateEnum} state
 */
GoogleCloudDataplexV1Lake.prototype['state'] = undefined;

/**
 * Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.
 * @member {String} uid
 */
GoogleCloudDataplexV1Lake.prototype['uid'] = undefined;

/**
 * Output only. The time when the lake was last updated.
 * @member {String} updateTime
 */
GoogleCloudDataplexV1Lake.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1Lake['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "ACTION_REQUIRED"
     * @const
     */
    "ACTION_REQUIRED": "ACTION_REQUIRED"
};



export default GoogleCloudDataplexV1Lake;

