/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1DataQualityRuleRangeExpectation from './GoogleCloudDataplexV1DataQualityRuleRangeExpectation';
import GoogleCloudDataplexV1DataQualityRuleRegexExpectation from './GoogleCloudDataplexV1DataQualityRuleRegexExpectation';
import GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation from './GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation';
import GoogleCloudDataplexV1DataQualityRuleSetExpectation from './GoogleCloudDataplexV1DataQualityRuleSetExpectation';
import GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation from './GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation';
import GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation from './GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation';

/**
 * The GoogleCloudDataplexV1DataQualityRule model module.
 * @module model/GoogleCloudDataplexV1DataQualityRule
 * @version v1
 */
class GoogleCloudDataplexV1DataQualityRule {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1DataQualityRule</code>.
     * A rule captures data quality intent about a data source.
     * @alias module:model/GoogleCloudDataplexV1DataQualityRule
     */
    constructor() { 
        
        GoogleCloudDataplexV1DataQualityRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1DataQualityRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1DataQualityRule} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1DataQualityRule} The populated <code>GoogleCloudDataplexV1DataQualityRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1DataQualityRule();

            if (data.hasOwnProperty('column')) {
                obj['column'] = ApiClient.convertToType(data['column'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('dimension')) {
                obj['dimension'] = ApiClient.convertToType(data['dimension'], 'String');
            }
            if (data.hasOwnProperty('ignoreNull')) {
                obj['ignoreNull'] = ApiClient.convertToType(data['ignoreNull'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nonNullExpectation')) {
                obj['nonNullExpectation'] = ApiClient.convertToType(data['nonNullExpectation'], Object);
            }
            if (data.hasOwnProperty('rangeExpectation')) {
                obj['rangeExpectation'] = GoogleCloudDataplexV1DataQualityRuleRangeExpectation.constructFromObject(data['rangeExpectation']);
            }
            if (data.hasOwnProperty('regexExpectation')) {
                obj['regexExpectation'] = GoogleCloudDataplexV1DataQualityRuleRegexExpectation.constructFromObject(data['regexExpectation']);
            }
            if (data.hasOwnProperty('rowConditionExpectation')) {
                obj['rowConditionExpectation'] = GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation.constructFromObject(data['rowConditionExpectation']);
            }
            if (data.hasOwnProperty('setExpectation')) {
                obj['setExpectation'] = GoogleCloudDataplexV1DataQualityRuleSetExpectation.constructFromObject(data['setExpectation']);
            }
            if (data.hasOwnProperty('statisticRangeExpectation')) {
                obj['statisticRangeExpectation'] = GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation.constructFromObject(data['statisticRangeExpectation']);
            }
            if (data.hasOwnProperty('tableConditionExpectation')) {
                obj['tableConditionExpectation'] = GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation.constructFromObject(data['tableConditionExpectation']);
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
            if (data.hasOwnProperty('uniquenessExpectation')) {
                obj['uniquenessExpectation'] = ApiClient.convertToType(data['uniquenessExpectation'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1DataQualityRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1DataQualityRule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['column'] && !(typeof data['column'] === 'string' || data['column'] instanceof String)) {
            throw new Error("Expected the field `column` to be a primitive type in the JSON string but got " + data['column']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['dimension'] && !(typeof data['dimension'] === 'string' || data['dimension'] instanceof String)) {
            throw new Error("Expected the field `dimension` to be a primitive type in the JSON string but got " + data['dimension']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `rangeExpectation`
        if (data['rangeExpectation']) { // data not null
          GoogleCloudDataplexV1DataQualityRuleRangeExpectation.validateJSON(data['rangeExpectation']);
        }
        // validate the optional field `regexExpectation`
        if (data['regexExpectation']) { // data not null
          GoogleCloudDataplexV1DataQualityRuleRegexExpectation.validateJSON(data['regexExpectation']);
        }
        // validate the optional field `rowConditionExpectation`
        if (data['rowConditionExpectation']) { // data not null
          GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation.validateJSON(data['rowConditionExpectation']);
        }
        // validate the optional field `setExpectation`
        if (data['setExpectation']) { // data not null
          GoogleCloudDataplexV1DataQualityRuleSetExpectation.validateJSON(data['setExpectation']);
        }
        // validate the optional field `statisticRangeExpectation`
        if (data['statisticRangeExpectation']) { // data not null
          GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation.validateJSON(data['statisticRangeExpectation']);
        }
        // validate the optional field `tableConditionExpectation`
        if (data['tableConditionExpectation']) { // data not null
          GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation.validateJSON(data['tableConditionExpectation']);
        }

        return true;
    }


}



/**
 * Optional. The unnested column which this rule is evaluated against.
 * @member {String} column
 */
GoogleCloudDataplexV1DataQualityRule.prototype['column'] = undefined;

/**
 * Optional. Description of the rule. The maximum length is 1,024 characters.
 * @member {String} description
 */
GoogleCloudDataplexV1DataQualityRule.prototype['description'] = undefined;

/**
 * Required. The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are \"COMPLETENESS\", \"ACCURACY\", \"CONSISTENCY\", \"VALIDITY\", \"UNIQUENESS\", \"INTEGRITY\"
 * @member {String} dimension
 */
GoogleCloudDataplexV1DataQualityRule.prototype['dimension'] = undefined;

/**
 * Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.This field is only valid for the following type of rules: RangeExpectation RegexExpectation SetExpectation UniquenessExpectation
 * @member {Boolean} ignoreNull
 */
GoogleCloudDataplexV1DataQualityRule.prototype['ignoreNull'] = undefined;

/**
 * Optional. A mutable name for the rule. The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-). The maximum length is 63 characters. Must start with a letter. Must end with a number or a letter.
 * @member {String} name
 */
GoogleCloudDataplexV1DataQualityRule.prototype['name'] = undefined;

/**
 * Evaluates whether each column value is null.
 * @member {Object} nonNullExpectation
 */
GoogleCloudDataplexV1DataQualityRule.prototype['nonNullExpectation'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataQualityRuleRangeExpectation} rangeExpectation
 */
GoogleCloudDataplexV1DataQualityRule.prototype['rangeExpectation'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataQualityRuleRegexExpectation} regexExpectation
 */
GoogleCloudDataplexV1DataQualityRule.prototype['regexExpectation'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation} rowConditionExpectation
 */
GoogleCloudDataplexV1DataQualityRule.prototype['rowConditionExpectation'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataQualityRuleSetExpectation} setExpectation
 */
GoogleCloudDataplexV1DataQualityRule.prototype['setExpectation'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation} statisticRangeExpectation
 */
GoogleCloudDataplexV1DataQualityRule.prototype['statisticRangeExpectation'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation} tableConditionExpectation
 */
GoogleCloudDataplexV1DataQualityRule.prototype['tableConditionExpectation'] = undefined;

/**
 * Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).This field is only valid for row-level type rules.
 * @member {Number} threshold
 */
GoogleCloudDataplexV1DataQualityRule.prototype['threshold'] = undefined;

/**
 * Evaluates whether the column has duplicates.
 * @member {Object} uniquenessExpectation
 */
GoogleCloudDataplexV1DataQualityRule.prototype['uniquenessExpectation'] = undefined;






export default GoogleCloudDataplexV1DataQualityRule;

