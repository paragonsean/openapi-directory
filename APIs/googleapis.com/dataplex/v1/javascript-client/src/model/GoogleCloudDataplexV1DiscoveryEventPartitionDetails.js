/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDataplexV1DiscoveryEventPartitionDetails model module.
 * @module model/GoogleCloudDataplexV1DiscoveryEventPartitionDetails
 * @version v1
 */
class GoogleCloudDataplexV1DiscoveryEventPartitionDetails {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1DiscoveryEventPartitionDetails</code>.
     * Details about the partition.
     * @alias module:model/GoogleCloudDataplexV1DiscoveryEventPartitionDetails
     */
    constructor() { 
        
        GoogleCloudDataplexV1DiscoveryEventPartitionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1DiscoveryEventPartitionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1DiscoveryEventPartitionDetails} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1DiscoveryEventPartitionDetails} The populated <code>GoogleCloudDataplexV1DiscoveryEventPartitionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1DiscoveryEventPartitionDetails();

            if (data.hasOwnProperty('entity')) {
                obj['entity'] = ApiClient.convertToType(data['entity'], 'String');
            }
            if (data.hasOwnProperty('partition')) {
                obj['partition'] = ApiClient.convertToType(data['partition'], 'String');
            }
            if (data.hasOwnProperty('sampledDataLocations')) {
                obj['sampledDataLocations'] = ApiClient.convertToType(data['sampledDataLocations'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1DiscoveryEventPartitionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1DiscoveryEventPartitionDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['entity'] && !(typeof data['entity'] === 'string' || data['entity'] instanceof String)) {
            throw new Error("Expected the field `entity` to be a primitive type in the JSON string but got " + data['entity']);
        }
        // ensure the json data is a string
        if (data['partition'] && !(typeof data['partition'] === 'string' || data['partition'] instanceof String)) {
            throw new Error("Expected the field `partition` to be a primitive type in the JSON string but got " + data['partition']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sampledDataLocations'])) {
            throw new Error("Expected the field `sampledDataLocations` to be an array in the JSON data but got " + data['sampledDataLocations']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The name to the containing entity resource. The name is the fully-qualified resource name.
 * @member {String} entity
 */
GoogleCloudDataplexV1DiscoveryEventPartitionDetails.prototype['entity'] = undefined;

/**
 * The name to the partition resource. The name is the fully-qualified resource name.
 * @member {String} partition
 */
GoogleCloudDataplexV1DiscoveryEventPartitionDetails.prototype['partition'] = undefined;

/**
 * The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.
 * @member {Array.<String>} sampledDataLocations
 */
GoogleCloudDataplexV1DiscoveryEventPartitionDetails.prototype['sampledDataLocations'] = undefined;

/**
 * The type of the containing entity resource.
 * @member {module:model/GoogleCloudDataplexV1DiscoveryEventPartitionDetails.TypeEnum} type
 */
GoogleCloudDataplexV1DiscoveryEventPartitionDetails.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1DiscoveryEventPartitionDetails['TypeEnum'] = {

    /**
     * value: "ENTITY_TYPE_UNSPECIFIED"
     * @const
     */
    "ENTITY_TYPE_UNSPECIFIED": "ENTITY_TYPE_UNSPECIFIED",

    /**
     * value: "TABLE"
     * @const
     */
    "TABLE": "TABLE",

    /**
     * value: "FILESET"
     * @const
     */
    "FILESET": "FILESET"
};



export default GoogleCloudDataplexV1DiscoveryEventPartitionDetails;

