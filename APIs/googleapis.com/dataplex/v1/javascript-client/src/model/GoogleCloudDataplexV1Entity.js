/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1EntityCompatibilityStatus from './GoogleCloudDataplexV1EntityCompatibilityStatus';
import GoogleCloudDataplexV1Schema from './GoogleCloudDataplexV1Schema';
import GoogleCloudDataplexV1StorageAccess from './GoogleCloudDataplexV1StorageAccess';
import GoogleCloudDataplexV1StorageFormat from './GoogleCloudDataplexV1StorageFormat';

/**
 * The GoogleCloudDataplexV1Entity model module.
 * @module model/GoogleCloudDataplexV1Entity
 * @version v1
 */
class GoogleCloudDataplexV1Entity {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1Entity</code>.
     * Represents tables and fileset metadata contained within a zone.
     * @alias module:model/GoogleCloudDataplexV1Entity
     */
    constructor() { 
        
        GoogleCloudDataplexV1Entity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1Entity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1Entity} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1Entity} The populated <code>GoogleCloudDataplexV1Entity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1Entity();

            if (data.hasOwnProperty('access')) {
                obj['access'] = GoogleCloudDataplexV1StorageAccess.constructFromObject(data['access']);
            }
            if (data.hasOwnProperty('asset')) {
                obj['asset'] = ApiClient.convertToType(data['asset'], 'String');
            }
            if (data.hasOwnProperty('catalogEntry')) {
                obj['catalogEntry'] = ApiClient.convertToType(data['catalogEntry'], 'String');
            }
            if (data.hasOwnProperty('compatibility')) {
                obj['compatibility'] = GoogleCloudDataplexV1EntityCompatibilityStatus.constructFromObject(data['compatibility']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('dataPath')) {
                obj['dataPath'] = ApiClient.convertToType(data['dataPath'], 'String');
            }
            if (data.hasOwnProperty('dataPathPattern')) {
                obj['dataPathPattern'] = ApiClient.convertToType(data['dataPathPattern'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = GoogleCloudDataplexV1StorageFormat.constructFromObject(data['format']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = GoogleCloudDataplexV1Schema.constructFromObject(data['schema']);
            }
            if (data.hasOwnProperty('system')) {
                obj['system'] = ApiClient.convertToType(data['system'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1Entity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1Entity</code>.
     */
    static validateJSON(data) {
        // validate the optional field `access`
        if (data['access']) { // data not null
          GoogleCloudDataplexV1StorageAccess.validateJSON(data['access']);
        }
        // ensure the json data is a string
        if (data['asset'] && !(typeof data['asset'] === 'string' || data['asset'] instanceof String)) {
            throw new Error("Expected the field `asset` to be a primitive type in the JSON string but got " + data['asset']);
        }
        // ensure the json data is a string
        if (data['catalogEntry'] && !(typeof data['catalogEntry'] === 'string' || data['catalogEntry'] instanceof String)) {
            throw new Error("Expected the field `catalogEntry` to be a primitive type in the JSON string but got " + data['catalogEntry']);
        }
        // validate the optional field `compatibility`
        if (data['compatibility']) { // data not null
          GoogleCloudDataplexV1EntityCompatibilityStatus.validateJSON(data['compatibility']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['dataPath'] && !(typeof data['dataPath'] === 'string' || data['dataPath'] instanceof String)) {
            throw new Error("Expected the field `dataPath` to be a primitive type in the JSON string but got " + data['dataPath']);
        }
        // ensure the json data is a string
        if (data['dataPathPattern'] && !(typeof data['dataPathPattern'] === 'string' || data['dataPathPattern'] instanceof String)) {
            throw new Error("Expected the field `dataPathPattern` to be a primitive type in the JSON string but got " + data['dataPathPattern']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `format`
        if (data['format']) { // data not null
          GoogleCloudDataplexV1StorageFormat.validateJSON(data['format']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `schema`
        if (data['schema']) { // data not null
          GoogleCloudDataplexV1Schema.validateJSON(data['schema']);
        }
        // ensure the json data is a string
        if (data['system'] && !(typeof data['system'] === 'string' || data['system'] instanceof String)) {
            throw new Error("Expected the field `system` to be a primitive type in the JSON string but got " + data['system']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDataplexV1StorageAccess} access
 */
GoogleCloudDataplexV1Entity.prototype['access'] = undefined;

/**
 * Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.
 * @member {String} asset
 */
GoogleCloudDataplexV1Entity.prototype['asset'] = undefined;

/**
 * Output only. The name of the associated Data Catalog entry.
 * @member {String} catalogEntry
 */
GoogleCloudDataplexV1Entity.prototype['catalogEntry'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1EntityCompatibilityStatus} compatibility
 */
GoogleCloudDataplexV1Entity.prototype['compatibility'] = undefined;

/**
 * Output only. The time when the entity was created.
 * @member {String} createTime
 */
GoogleCloudDataplexV1Entity.prototype['createTime'] = undefined;

/**
 * Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.
 * @member {String} dataPath
 */
GoogleCloudDataplexV1Entity.prototype['dataPath'] = undefined;

/**
 * Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/_**_/_*.csv.
 * @member {String} dataPathPattern
 */
GoogleCloudDataplexV1Entity.prototype['dataPathPattern'] = undefined;

/**
 * Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.
 * @member {String} description
 */
GoogleCloudDataplexV1Entity.prototype['description'] = undefined;

/**
 * Optional. Display name must be shorter than or equal to 256 characters.
 * @member {String} displayName
 */
GoogleCloudDataplexV1Entity.prototype['displayName'] = undefined;

/**
 * Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.
 * @member {String} etag
 */
GoogleCloudDataplexV1Entity.prototype['etag'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1StorageFormat} format
 */
GoogleCloudDataplexV1Entity.prototype['format'] = undefined;

/**
 * Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores, and consist of 256 or fewer characters.
 * @member {String} id
 */
GoogleCloudDataplexV1Entity.prototype['id'] = undefined;

/**
 * Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.
 * @member {String} name
 */
GoogleCloudDataplexV1Entity.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1Schema} schema
 */
GoogleCloudDataplexV1Entity.prototype['schema'] = undefined;

/**
 * Required. Immutable. Identifies the storage system of the entity data.
 * @member {module:model/GoogleCloudDataplexV1Entity.SystemEnum} system
 */
GoogleCloudDataplexV1Entity.prototype['system'] = undefined;

/**
 * Required. Immutable. The type of entity.
 * @member {module:model/GoogleCloudDataplexV1Entity.TypeEnum} type
 */
GoogleCloudDataplexV1Entity.prototype['type'] = undefined;

/**
 * Output only. System generated unique ID for the Entity. This ID will be different if the Entity is deleted and re-created with the same name.
 * @member {String} uid
 */
GoogleCloudDataplexV1Entity.prototype['uid'] = undefined;

/**
 * Output only. The time when the entity was last updated.
 * @member {String} updateTime
 */
GoogleCloudDataplexV1Entity.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>system</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1Entity['SystemEnum'] = {

    /**
     * value: "STORAGE_SYSTEM_UNSPECIFIED"
     * @const
     */
    "STORAGE_SYSTEM_UNSPECIFIED": "STORAGE_SYSTEM_UNSPECIFIED",

    /**
     * value: "CLOUD_STORAGE"
     * @const
     */
    "CLOUD_STORAGE": "CLOUD_STORAGE",

    /**
     * value: "BIGQUERY"
     * @const
     */
    "BIGQUERY": "BIGQUERY"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1Entity['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "TABLE"
     * @const
     */
    "TABLE": "TABLE",

    /**
     * value: "FILESET"
     * @const
     */
    "FILESET": "FILESET"
};



export default GoogleCloudDataplexV1Entity;

