/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions from './GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions';
import GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions from './GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions';

/**
 * The GoogleCloudDataplexV1AssetDiscoverySpec model module.
 * @module model/GoogleCloudDataplexV1AssetDiscoverySpec
 * @version v1
 */
class GoogleCloudDataplexV1AssetDiscoverySpec {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1AssetDiscoverySpec</code>.
     * Settings to manage the metadata discovery and publishing for an asset.
     * @alias module:model/GoogleCloudDataplexV1AssetDiscoverySpec
     */
    constructor() { 
        
        GoogleCloudDataplexV1AssetDiscoverySpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1AssetDiscoverySpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1AssetDiscoverySpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1AssetDiscoverySpec} The populated <code>GoogleCloudDataplexV1AssetDiscoverySpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1AssetDiscoverySpec();

            if (data.hasOwnProperty('csvOptions')) {
                obj['csvOptions'] = GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.constructFromObject(data['csvOptions']);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('excludePatterns')) {
                obj['excludePatterns'] = ApiClient.convertToType(data['excludePatterns'], ['String']);
            }
            if (data.hasOwnProperty('includePatterns')) {
                obj['includePatterns'] = ApiClient.convertToType(data['includePatterns'], ['String']);
            }
            if (data.hasOwnProperty('jsonOptions')) {
                obj['jsonOptions'] = GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions.constructFromObject(data['jsonOptions']);
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = ApiClient.convertToType(data['schedule'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1AssetDiscoverySpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1AssetDiscoverySpec</code>.
     */
    static validateJSON(data) {
        // validate the optional field `csvOptions`
        if (data['csvOptions']) { // data not null
          GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.validateJSON(data['csvOptions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['excludePatterns'])) {
            throw new Error("Expected the field `excludePatterns` to be an array in the JSON data but got " + data['excludePatterns']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includePatterns'])) {
            throw new Error("Expected the field `includePatterns` to be an array in the JSON data but got " + data['includePatterns']);
        }
        // validate the optional field `jsonOptions`
        if (data['jsonOptions']) { // data not null
          GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions.validateJSON(data['jsonOptions']);
        }
        // ensure the json data is a string
        if (data['schedule'] && !(typeof data['schedule'] === 'string' || data['schedule'] instanceof String)) {
            throw new Error("Expected the field `schedule` to be a primitive type in the JSON string but got " + data['schedule']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions} csvOptions
 */
GoogleCloudDataplexV1AssetDiscoverySpec.prototype['csvOptions'] = undefined;

/**
 * Optional. Whether discovery is enabled.
 * @member {Boolean} enabled
 */
GoogleCloudDataplexV1AssetDiscoverySpec.prototype['enabled'] = undefined;

/**
 * Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
 * @member {Array.<String>} excludePatterns
 */
GoogleCloudDataplexV1AssetDiscoverySpec.prototype['excludePatterns'] = undefined;

/**
 * Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.
 * @member {Array.<String>} includePatterns
 */
GoogleCloudDataplexV1AssetDiscoverySpec.prototype['includePatterns'] = undefined;

/**
 * @member {module:model/GoogleCloudDataplexV1AssetDiscoverySpecJsonOptions} jsonOptions
 */
GoogleCloudDataplexV1AssetDiscoverySpec.prototype['jsonOptions'] = undefined;

/**
 * Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.
 * @member {String} schedule
 */
GoogleCloudDataplexV1AssetDiscoverySpec.prototype['schedule'] = undefined;






export default GoogleCloudDataplexV1AssetDiscoverySpec;

