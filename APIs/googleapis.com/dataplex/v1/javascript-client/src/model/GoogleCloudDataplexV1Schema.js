/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataplexV1SchemaPartitionField from './GoogleCloudDataplexV1SchemaPartitionField';
import GoogleCloudDataplexV1SchemaSchemaField from './GoogleCloudDataplexV1SchemaSchemaField';

/**
 * The GoogleCloudDataplexV1Schema model module.
 * @module model/GoogleCloudDataplexV1Schema
 * @version v1
 */
class GoogleCloudDataplexV1Schema {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1Schema</code>.
     * Schema information describing the structure and layout of the data.
     * @alias module:model/GoogleCloudDataplexV1Schema
     */
    constructor() { 
        
        GoogleCloudDataplexV1Schema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1Schema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1Schema} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1Schema} The populated <code>GoogleCloudDataplexV1Schema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1Schema();

            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], [GoogleCloudDataplexV1SchemaSchemaField]);
            }
            if (data.hasOwnProperty('partitionFields')) {
                obj['partitionFields'] = ApiClient.convertToType(data['partitionFields'], [GoogleCloudDataplexV1SchemaPartitionField]);
            }
            if (data.hasOwnProperty('partitionStyle')) {
                obj['partitionStyle'] = ApiClient.convertToType(data['partitionStyle'], 'String');
            }
            if (data.hasOwnProperty('userManaged')) {
                obj['userManaged'] = ApiClient.convertToType(data['userManaged'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1Schema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1Schema</code>.
     */
    static validateJSON(data) {
        if (data['fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fields'])) {
                throw new Error("Expected the field `fields` to be an array in the JSON data but got " + data['fields']);
            }
            // validate the optional field `fields` (array)
            for (const item of data['fields']) {
                GoogleCloudDataplexV1SchemaSchemaField.validateJSON(item);
            };
        }
        if (data['partitionFields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['partitionFields'])) {
                throw new Error("Expected the field `partitionFields` to be an array in the JSON data but got " + data['partitionFields']);
            }
            // validate the optional field `partitionFields` (array)
            for (const item of data['partitionFields']) {
                GoogleCloudDataplexV1SchemaPartitionField.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['partitionStyle'] && !(typeof data['partitionStyle'] === 'string' || data['partitionStyle'] instanceof String)) {
            throw new Error("Expected the field `partitionStyle` to be a primitive type in the JSON string but got " + data['partitionStyle']);
        }

        return true;
    }


}



/**
 * Optional. The sequence of fields describing data in table entities. Note: BigQuery SchemaFields are immutable.
 * @member {Array.<module:model/GoogleCloudDataplexV1SchemaSchemaField>} fields
 */
GoogleCloudDataplexV1Schema.prototype['fields'] = undefined;

/**
 * Optional. The sequence of fields describing the partition structure in entities. If this field is empty, there are no partitions within the data.
 * @member {Array.<module:model/GoogleCloudDataplexV1SchemaPartitionField>} partitionFields
 */
GoogleCloudDataplexV1Schema.prototype['partitionFields'] = undefined;

/**
 * Optional. The structure of paths containing partition data within the entity.
 * @member {module:model/GoogleCloudDataplexV1Schema.PartitionStyleEnum} partitionStyle
 */
GoogleCloudDataplexV1Schema.prototype['partitionStyle'] = undefined;

/**
 * Required. Set to true if user-managed or false if managed by Dataplex. The default is false (managed by Dataplex). Set to falseto enable Dataplex discovery to update the schema. including new data discovery, schema inference, and schema evolution. Users retain the ability to input and edit the schema. Dataplex treats schema input by the user as though produced by a previous Dataplex discovery operation, and it will evolve the schema and take action based on that treatment. Set to true to fully manage the entity schema. This setting guarantees that Dataplex will not change schema fields.
 * @member {Boolean} userManaged
 */
GoogleCloudDataplexV1Schema.prototype['userManaged'] = undefined;





/**
 * Allowed values for the <code>partitionStyle</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDataplexV1Schema['PartitionStyleEnum'] = {

    /**
     * value: "PARTITION_STYLE_UNSPECIFIED"
     * @const
     */
    "PARTITION_STYLE_UNSPECIFIED": "PARTITION_STYLE_UNSPECIFIED",

    /**
     * value: "HIVE_COMPATIBLE"
     * @const
     */
    "HIVE_COMPATIBLE": "HIVE_COMPATIBLE"
};



export default GoogleCloudDataplexV1Schema;

