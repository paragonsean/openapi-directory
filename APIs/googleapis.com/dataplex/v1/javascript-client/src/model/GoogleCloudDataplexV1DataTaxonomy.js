/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDataplexV1DataTaxonomy model module.
 * @module model/GoogleCloudDataplexV1DataTaxonomy
 * @version v1
 */
class GoogleCloudDataplexV1DataTaxonomy {
    /**
     * Constructs a new <code>GoogleCloudDataplexV1DataTaxonomy</code>.
     * DataTaxonomy represents a set of hierarchical DataAttributes resources, grouped with a common theme Eg: &#39;SensitiveDataTaxonomy&#39; can have attributes to manage PII data. It is defined at project level.
     * @alias module:model/GoogleCloudDataplexV1DataTaxonomy
     */
    constructor() { 
        
        GoogleCloudDataplexV1DataTaxonomy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDataplexV1DataTaxonomy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDataplexV1DataTaxonomy} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDataplexV1DataTaxonomy} The populated <code>GoogleCloudDataplexV1DataTaxonomy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDataplexV1DataTaxonomy();

            if (data.hasOwnProperty('attributeCount')) {
                obj['attributeCount'] = ApiClient.convertToType(data['attributeCount'], 'Number');
            }
            if (data.hasOwnProperty('classCount')) {
                obj['classCount'] = ApiClient.convertToType(data['classCount'], 'Number');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDataplexV1DataTaxonomy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDataplexV1DataTaxonomy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The number of attributes in the DataTaxonomy.
 * @member {Number} attributeCount
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['attributeCount'] = undefined;

/**
 * Output only. The number of classes in the DataTaxonomy.
 * @member {Number} classCount
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['classCount'] = undefined;

/**
 * Output only. The time when the DataTaxonomy was created.
 * @member {String} createTime
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['createTime'] = undefined;

/**
 * Optional. Description of the DataTaxonomy.
 * @member {String} description
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['description'] = undefined;

/**
 * Optional. User friendly display name.
 * @member {String} displayName
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['displayName'] = undefined;

/**
 * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
 * @member {String} etag
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['etag'] = undefined;

/**
 * Optional. User-defined labels for the DataTaxonomy.
 * @member {Object.<String, String>} labels
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['labels'] = undefined;

/**
 * Output only. The relative resource name of the DataTaxonomy, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{data_taxonomy_id}.
 * @member {String} name
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['name'] = undefined;

/**
 * Output only. System generated globally unique ID for the dataTaxonomy. This ID will be different if the DataTaxonomy is deleted and re-created with the same name.
 * @member {String} uid
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['uid'] = undefined;

/**
 * Output only. The time when the DataTaxonomy was last updated.
 * @member {String} updateTime
 */
GoogleCloudDataplexV1DataTaxonomy.prototype['updateTime'] = undefined;






export default GoogleCloudDataplexV1DataTaxonomy;

