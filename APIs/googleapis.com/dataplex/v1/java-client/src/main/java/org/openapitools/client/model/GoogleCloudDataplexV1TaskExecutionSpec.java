/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Execution related settings, like retry and service_account.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1TaskExecutionSpec {
  public static final String SERIALIZED_NAME_ARGS = "args";
  @SerializedName(SERIALIZED_NAME_ARGS)
  private Map<String, String> args = new HashMap<>();

  public static final String SERIALIZED_NAME_KMS_KEY = "kmsKey";
  @SerializedName(SERIALIZED_NAME_KMS_KEY)
  private String kmsKey;

  public static final String SERIALIZED_NAME_MAX_JOB_EXECUTION_LIFETIME = "maxJobExecutionLifetime";
  @SerializedName(SERIALIZED_NAME_MAX_JOB_EXECUTION_LIFETIME)
  private String maxJobExecutionLifetime;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT = "serviceAccount";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT)
  private String serviceAccount;

  public GoogleCloudDataplexV1TaskExecutionSpec() {
  }

  public GoogleCloudDataplexV1TaskExecutionSpec args(Map<String, String> args) {
    this.args = args;
    return this;
  }

  public GoogleCloudDataplexV1TaskExecutionSpec putArgsItem(String key, String argsItem) {
    if (this.args == null) {
      this.args = new HashMap<>();
    }
    this.args.put(key, argsItem);
    return this;
  }

  /**
   * Optional. The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${task_id} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument.
   * @return args
   */
  @javax.annotation.Nullable
  public Map<String, String> getArgs() {
    return args;
  }

  public void setArgs(Map<String, String> args) {
    this.args = args;
  }


  public GoogleCloudDataplexV1TaskExecutionSpec kmsKey(String kmsKey) {
    this.kmsKey = kmsKey;
    return this;
  }

  /**
   * Optional. The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{location_id}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.
   * @return kmsKey
   */
  @javax.annotation.Nullable
  public String getKmsKey() {
    return kmsKey;
  }

  public void setKmsKey(String kmsKey) {
    this.kmsKey = kmsKey;
  }


  public GoogleCloudDataplexV1TaskExecutionSpec maxJobExecutionLifetime(String maxJobExecutionLifetime) {
    this.maxJobExecutionLifetime = maxJobExecutionLifetime;
    return this;
  }

  /**
   * Optional. The maximum duration after which the job execution is expired.
   * @return maxJobExecutionLifetime
   */
  @javax.annotation.Nullable
  public String getMaxJobExecutionLifetime() {
    return maxJobExecutionLifetime;
  }

  public void setMaxJobExecutionLifetime(String maxJobExecutionLifetime) {
    this.maxJobExecutionLifetime = maxJobExecutionLifetime;
  }


  public GoogleCloudDataplexV1TaskExecutionSpec project(String project) {
    this.project = project;
    return this;
  }

  /**
   * Optional. The project in which jobs are run. By default, the project containing the Lake is used. If a project is provided, the ExecutionSpec.service_account must belong to this project.
   * @return project
   */
  @javax.annotation.Nullable
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }


  public GoogleCloudDataplexV1TaskExecutionSpec serviceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Required. Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
   * @return serviceAccount
   */
  @javax.annotation.Nullable
  public String getServiceAccount() {
    return serviceAccount;
  }

  public void setServiceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1TaskExecutionSpec googleCloudDataplexV1TaskExecutionSpec = (GoogleCloudDataplexV1TaskExecutionSpec) o;
    return Objects.equals(this.args, googleCloudDataplexV1TaskExecutionSpec.args) &&
        Objects.equals(this.kmsKey, googleCloudDataplexV1TaskExecutionSpec.kmsKey) &&
        Objects.equals(this.maxJobExecutionLifetime, googleCloudDataplexV1TaskExecutionSpec.maxJobExecutionLifetime) &&
        Objects.equals(this.project, googleCloudDataplexV1TaskExecutionSpec.project) &&
        Objects.equals(this.serviceAccount, googleCloudDataplexV1TaskExecutionSpec.serviceAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(args, kmsKey, maxJobExecutionLifetime, project, serviceAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1TaskExecutionSpec {\n");
    sb.append("    args: ").append(toIndentedString(args)).append("\n");
    sb.append("    kmsKey: ").append(toIndentedString(kmsKey)).append("\n");
    sb.append("    maxJobExecutionLifetime: ").append(toIndentedString(maxJobExecutionLifetime)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    serviceAccount: ").append(toIndentedString(serviceAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("args");
    openapiFields.add("kmsKey");
    openapiFields.add("maxJobExecutionLifetime");
    openapiFields.add("project");
    openapiFields.add("serviceAccount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1TaskExecutionSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1TaskExecutionSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1TaskExecutionSpec is not found in the empty JSON string", GoogleCloudDataplexV1TaskExecutionSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1TaskExecutionSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1TaskExecutionSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("kmsKey") != null && !jsonObj.get("kmsKey").isJsonNull()) && !jsonObj.get("kmsKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kmsKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kmsKey").toString()));
      }
      if ((jsonObj.get("maxJobExecutionLifetime") != null && !jsonObj.get("maxJobExecutionLifetime").isJsonNull()) && !jsonObj.get("maxJobExecutionLifetime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxJobExecutionLifetime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxJobExecutionLifetime").toString()));
      }
      if ((jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) && !jsonObj.get("project").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project").toString()));
      }
      if ((jsonObj.get("serviceAccount") != null && !jsonObj.get("serviceAccount").isJsonNull()) && !jsonObj.get("serviceAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1TaskExecutionSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1TaskExecutionSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1TaskExecutionSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1TaskExecutionSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1TaskExecutionSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1TaskExecutionSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1TaskExecutionSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1TaskExecutionSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1TaskExecutionSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1TaskExecutionSpec
   */
  public static GoogleCloudDataplexV1TaskExecutionSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1TaskExecutionSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1TaskExecutionSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

