/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Data quality result for data scan job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1DataScanEventDataQualityResult {
  public static final String SERIALIZED_NAME_COLUMN_SCORE = "columnScore";
  @SerializedName(SERIALIZED_NAME_COLUMN_SCORE)
  private Map<String, Float> columnScore = new HashMap<>();

  public static final String SERIALIZED_NAME_DIMENSION_PASSED = "dimensionPassed";
  @SerializedName(SERIALIZED_NAME_DIMENSION_PASSED)
  private Map<String, Boolean> dimensionPassed = new HashMap<>();

  public static final String SERIALIZED_NAME_DIMENSION_SCORE = "dimensionScore";
  @SerializedName(SERIALIZED_NAME_DIMENSION_SCORE)
  private Map<String, Float> dimensionScore = new HashMap<>();

  public static final String SERIALIZED_NAME_PASSED = "passed";
  @SerializedName(SERIALIZED_NAME_PASSED)
  private Boolean passed;

  public static final String SERIALIZED_NAME_ROW_COUNT = "rowCount";
  @SerializedName(SERIALIZED_NAME_ROW_COUNT)
  private String rowCount;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Float score;

  public GoogleCloudDataplexV1DataScanEventDataQualityResult() {
  }

  public GoogleCloudDataplexV1DataScanEventDataQualityResult columnScore(Map<String, Float> columnScore) {
    this.columnScore = columnScore;
    return this;
  }

  public GoogleCloudDataplexV1DataScanEventDataQualityResult putColumnScoreItem(String key, Float columnScoreItem) {
    if (this.columnScore == null) {
      this.columnScore = new HashMap<>();
    }
    this.columnScore.put(key, columnScoreItem);
    return this;
  }

  /**
   * The score of each column scanned in the data scan job. The key of the map is the name of the column. The value is the data quality score for the column.The score ranges between 0, 100 (up to two decimal points).
   * @return columnScore
   */
  @javax.annotation.Nullable
  public Map<String, Float> getColumnScore() {
    return columnScore;
  }

  public void setColumnScore(Map<String, Float> columnScore) {
    this.columnScore = columnScore;
  }


  public GoogleCloudDataplexV1DataScanEventDataQualityResult dimensionPassed(Map<String, Boolean> dimensionPassed) {
    this.dimensionPassed = dimensionPassed;
    return this;
  }

  public GoogleCloudDataplexV1DataScanEventDataQualityResult putDimensionPassedItem(String key, Boolean dimensionPassedItem) {
    if (this.dimensionPassed == null) {
      this.dimensionPassed = new HashMap<>();
    }
    this.dimensionPassed.put(key, dimensionPassedItem);
    return this;
  }

  /**
   * The result of each dimension for data quality result. The key of the map is the name of the dimension. The value is the bool value depicting whether the dimension result was pass or not.
   * @return dimensionPassed
   */
  @javax.annotation.Nullable
  public Map<String, Boolean> getDimensionPassed() {
    return dimensionPassed;
  }

  public void setDimensionPassed(Map<String, Boolean> dimensionPassed) {
    this.dimensionPassed = dimensionPassed;
  }


  public GoogleCloudDataplexV1DataScanEventDataQualityResult dimensionScore(Map<String, Float> dimensionScore) {
    this.dimensionScore = dimensionScore;
    return this;
  }

  public GoogleCloudDataplexV1DataScanEventDataQualityResult putDimensionScoreItem(String key, Float dimensionScoreItem) {
    if (this.dimensionScore == null) {
      this.dimensionScore = new HashMap<>();
    }
    this.dimensionScore.put(key, dimensionScoreItem);
    return this;
  }

  /**
   * The score of each dimension for data quality result. The key of the map is the name of the dimension. The value is the data quality score for the dimension.The score ranges between 0, 100 (up to two decimal points).
   * @return dimensionScore
   */
  @javax.annotation.Nullable
  public Map<String, Float> getDimensionScore() {
    return dimensionScore;
  }

  public void setDimensionScore(Map<String, Float> dimensionScore) {
    this.dimensionScore = dimensionScore;
  }


  public GoogleCloudDataplexV1DataScanEventDataQualityResult passed(Boolean passed) {
    this.passed = passed;
    return this;
  }

  /**
   * Whether the data quality result was pass or not.
   * @return passed
   */
  @javax.annotation.Nullable
  public Boolean getPassed() {
    return passed;
  }

  public void setPassed(Boolean passed) {
    this.passed = passed;
  }


  public GoogleCloudDataplexV1DataScanEventDataQualityResult rowCount(String rowCount) {
    this.rowCount = rowCount;
    return this;
  }

  /**
   * The count of rows processed in the data scan job.
   * @return rowCount
   */
  @javax.annotation.Nullable
  public String getRowCount() {
    return rowCount;
  }

  public void setRowCount(String rowCount) {
    this.rowCount = rowCount;
  }


  public GoogleCloudDataplexV1DataScanEventDataQualityResult score(Float score) {
    this.score = score;
    return this;
  }

  /**
   * The table-level data quality score for the data scan job.The data quality score ranges between 0, 100 (up to two decimal points).
   * @return score
   */
  @javax.annotation.Nullable
  public Float getScore() {
    return score;
  }

  public void setScore(Float score) {
    this.score = score;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1DataScanEventDataQualityResult googleCloudDataplexV1DataScanEventDataQualityResult = (GoogleCloudDataplexV1DataScanEventDataQualityResult) o;
    return Objects.equals(this.columnScore, googleCloudDataplexV1DataScanEventDataQualityResult.columnScore) &&
        Objects.equals(this.dimensionPassed, googleCloudDataplexV1DataScanEventDataQualityResult.dimensionPassed) &&
        Objects.equals(this.dimensionScore, googleCloudDataplexV1DataScanEventDataQualityResult.dimensionScore) &&
        Objects.equals(this.passed, googleCloudDataplexV1DataScanEventDataQualityResult.passed) &&
        Objects.equals(this.rowCount, googleCloudDataplexV1DataScanEventDataQualityResult.rowCount) &&
        Objects.equals(this.score, googleCloudDataplexV1DataScanEventDataQualityResult.score);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columnScore, dimensionPassed, dimensionScore, passed, rowCount, score);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1DataScanEventDataQualityResult {\n");
    sb.append("    columnScore: ").append(toIndentedString(columnScore)).append("\n");
    sb.append("    dimensionPassed: ").append(toIndentedString(dimensionPassed)).append("\n");
    sb.append("    dimensionScore: ").append(toIndentedString(dimensionScore)).append("\n");
    sb.append("    passed: ").append(toIndentedString(passed)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("columnScore");
    openapiFields.add("dimensionPassed");
    openapiFields.add("dimensionScore");
    openapiFields.add("passed");
    openapiFields.add("rowCount");
    openapiFields.add("score");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1DataScanEventDataQualityResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1DataScanEventDataQualityResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1DataScanEventDataQualityResult is not found in the empty JSON string", GoogleCloudDataplexV1DataScanEventDataQualityResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1DataScanEventDataQualityResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1DataScanEventDataQualityResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("rowCount") != null && !jsonObj.get("rowCount").isJsonNull()) && !jsonObj.get("rowCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rowCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rowCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1DataScanEventDataQualityResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1DataScanEventDataQualityResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1DataScanEventDataQualityResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1DataScanEventDataQualityResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1DataScanEventDataQualityResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1DataScanEventDataQualityResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1DataScanEventDataQualityResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1DataScanEventDataQualityResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1DataScanEventDataQualityResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1DataScanEventDataQualityResult
   */
  public static GoogleCloudDataplexV1DataScanEventDataQualityResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1DataScanEventDataQualityResult.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1DataScanEventDataQualityResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

