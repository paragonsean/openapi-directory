/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityRuleRangeExpectation;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityRuleRegexExpectation;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityRuleSetExpectation;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A rule captures data quality intent about a data source.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1DataQualityRule {
  public static final String SERIALIZED_NAME_COLUMN = "column";
  @SerializedName(SERIALIZED_NAME_COLUMN)
  private String column;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DIMENSION = "dimension";
  @SerializedName(SERIALIZED_NAME_DIMENSION)
  private String dimension;

  public static final String SERIALIZED_NAME_IGNORE_NULL = "ignoreNull";
  @SerializedName(SERIALIZED_NAME_IGNORE_NULL)
  private Boolean ignoreNull;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NON_NULL_EXPECTATION = "nonNullExpectation";
  @SerializedName(SERIALIZED_NAME_NON_NULL_EXPECTATION)
  private Object nonNullExpectation;

  public static final String SERIALIZED_NAME_RANGE_EXPECTATION = "rangeExpectation";
  @SerializedName(SERIALIZED_NAME_RANGE_EXPECTATION)
  private GoogleCloudDataplexV1DataQualityRuleRangeExpectation rangeExpectation;

  public static final String SERIALIZED_NAME_REGEX_EXPECTATION = "regexExpectation";
  @SerializedName(SERIALIZED_NAME_REGEX_EXPECTATION)
  private GoogleCloudDataplexV1DataQualityRuleRegexExpectation regexExpectation;

  public static final String SERIALIZED_NAME_ROW_CONDITION_EXPECTATION = "rowConditionExpectation";
  @SerializedName(SERIALIZED_NAME_ROW_CONDITION_EXPECTATION)
  private GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation rowConditionExpectation;

  public static final String SERIALIZED_NAME_SET_EXPECTATION = "setExpectation";
  @SerializedName(SERIALIZED_NAME_SET_EXPECTATION)
  private GoogleCloudDataplexV1DataQualityRuleSetExpectation setExpectation;

  public static final String SERIALIZED_NAME_STATISTIC_RANGE_EXPECTATION = "statisticRangeExpectation";
  @SerializedName(SERIALIZED_NAME_STATISTIC_RANGE_EXPECTATION)
  private GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation statisticRangeExpectation;

  public static final String SERIALIZED_NAME_TABLE_CONDITION_EXPECTATION = "tableConditionExpectation";
  @SerializedName(SERIALIZED_NAME_TABLE_CONDITION_EXPECTATION)
  private GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation tableConditionExpectation;

  public static final String SERIALIZED_NAME_THRESHOLD = "threshold";
  @SerializedName(SERIALIZED_NAME_THRESHOLD)
  private Double threshold;

  public static final String SERIALIZED_NAME_UNIQUENESS_EXPECTATION = "uniquenessExpectation";
  @SerializedName(SERIALIZED_NAME_UNIQUENESS_EXPECTATION)
  private Object uniquenessExpectation;

  public GoogleCloudDataplexV1DataQualityRule() {
  }

  public GoogleCloudDataplexV1DataQualityRule column(String column) {
    this.column = column;
    return this;
  }

  /**
   * Optional. The unnested column which this rule is evaluated against.
   * @return column
   */
  @javax.annotation.Nullable
  public String getColumn() {
    return column;
  }

  public void setColumn(String column) {
    this.column = column;
  }


  public GoogleCloudDataplexV1DataQualityRule description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Description of the rule. The maximum length is 1,024 characters.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDataplexV1DataQualityRule dimension(String dimension) {
    this.dimension = dimension;
    return this;
  }

  /**
   * Required. The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are \&quot;COMPLETENESS\&quot;, \&quot;ACCURACY\&quot;, \&quot;CONSISTENCY\&quot;, \&quot;VALIDITY\&quot;, \&quot;UNIQUENESS\&quot;, \&quot;INTEGRITY\&quot;
   * @return dimension
   */
  @javax.annotation.Nullable
  public String getDimension() {
    return dimension;
  }

  public void setDimension(String dimension) {
    this.dimension = dimension;
  }


  public GoogleCloudDataplexV1DataQualityRule ignoreNull(Boolean ignoreNull) {
    this.ignoreNull = ignoreNull;
    return this;
  }

  /**
   * Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.This field is only valid for the following type of rules: RangeExpectation RegexExpectation SetExpectation UniquenessExpectation
   * @return ignoreNull
   */
  @javax.annotation.Nullable
  public Boolean getIgnoreNull() {
    return ignoreNull;
  }

  public void setIgnoreNull(Boolean ignoreNull) {
    this.ignoreNull = ignoreNull;
  }


  public GoogleCloudDataplexV1DataQualityRule name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. A mutable name for the rule. The name must contain only letters (a-z, A-Z), numbers (0-9), or hyphens (-). The maximum length is 63 characters. Must start with a letter. Must end with a number or a letter.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudDataplexV1DataQualityRule nonNullExpectation(Object nonNullExpectation) {
    this.nonNullExpectation = nonNullExpectation;
    return this;
  }

  /**
   * Evaluates whether each column value is null.
   * @return nonNullExpectation
   */
  @javax.annotation.Nullable
  public Object getNonNullExpectation() {
    return nonNullExpectation;
  }

  public void setNonNullExpectation(Object nonNullExpectation) {
    this.nonNullExpectation = nonNullExpectation;
  }


  public GoogleCloudDataplexV1DataQualityRule rangeExpectation(GoogleCloudDataplexV1DataQualityRuleRangeExpectation rangeExpectation) {
    this.rangeExpectation = rangeExpectation;
    return this;
  }

  /**
   * Get rangeExpectation
   * @return rangeExpectation
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualityRuleRangeExpectation getRangeExpectation() {
    return rangeExpectation;
  }

  public void setRangeExpectation(GoogleCloudDataplexV1DataQualityRuleRangeExpectation rangeExpectation) {
    this.rangeExpectation = rangeExpectation;
  }


  public GoogleCloudDataplexV1DataQualityRule regexExpectation(GoogleCloudDataplexV1DataQualityRuleRegexExpectation regexExpectation) {
    this.regexExpectation = regexExpectation;
    return this;
  }

  /**
   * Get regexExpectation
   * @return regexExpectation
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualityRuleRegexExpectation getRegexExpectation() {
    return regexExpectation;
  }

  public void setRegexExpectation(GoogleCloudDataplexV1DataQualityRuleRegexExpectation regexExpectation) {
    this.regexExpectation = regexExpectation;
  }


  public GoogleCloudDataplexV1DataQualityRule rowConditionExpectation(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation rowConditionExpectation) {
    this.rowConditionExpectation = rowConditionExpectation;
    return this;
  }

  /**
   * Get rowConditionExpectation
   * @return rowConditionExpectation
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation getRowConditionExpectation() {
    return rowConditionExpectation;
  }

  public void setRowConditionExpectation(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation rowConditionExpectation) {
    this.rowConditionExpectation = rowConditionExpectation;
  }


  public GoogleCloudDataplexV1DataQualityRule setExpectation(GoogleCloudDataplexV1DataQualityRuleSetExpectation setExpectation) {
    this.setExpectation = setExpectation;
    return this;
  }

  /**
   * Get setExpectation
   * @return setExpectation
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualityRuleSetExpectation getSetExpectation() {
    return setExpectation;
  }

  public void setSetExpectation(GoogleCloudDataplexV1DataQualityRuleSetExpectation setExpectation) {
    this.setExpectation = setExpectation;
  }


  public GoogleCloudDataplexV1DataQualityRule statisticRangeExpectation(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation statisticRangeExpectation) {
    this.statisticRangeExpectation = statisticRangeExpectation;
    return this;
  }

  /**
   * Get statisticRangeExpectation
   * @return statisticRangeExpectation
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation getStatisticRangeExpectation() {
    return statisticRangeExpectation;
  }

  public void setStatisticRangeExpectation(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation statisticRangeExpectation) {
    this.statisticRangeExpectation = statisticRangeExpectation;
  }


  public GoogleCloudDataplexV1DataQualityRule tableConditionExpectation(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation tableConditionExpectation) {
    this.tableConditionExpectation = tableConditionExpectation;
    return this;
  }

  /**
   * Get tableConditionExpectation
   * @return tableConditionExpectation
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation getTableConditionExpectation() {
    return tableConditionExpectation;
  }

  public void setTableConditionExpectation(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation tableConditionExpectation) {
    this.tableConditionExpectation = tableConditionExpectation;
  }


  public GoogleCloudDataplexV1DataQualityRule threshold(Double threshold) {
    this.threshold = threshold;
    return this;
  }

  /**
   * Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).This field is only valid for row-level type rules.
   * @return threshold
   */
  @javax.annotation.Nullable
  public Double getThreshold() {
    return threshold;
  }

  public void setThreshold(Double threshold) {
    this.threshold = threshold;
  }


  public GoogleCloudDataplexV1DataQualityRule uniquenessExpectation(Object uniquenessExpectation) {
    this.uniquenessExpectation = uniquenessExpectation;
    return this;
  }

  /**
   * Evaluates whether the column has duplicates.
   * @return uniquenessExpectation
   */
  @javax.annotation.Nullable
  public Object getUniquenessExpectation() {
    return uniquenessExpectation;
  }

  public void setUniquenessExpectation(Object uniquenessExpectation) {
    this.uniquenessExpectation = uniquenessExpectation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1DataQualityRule googleCloudDataplexV1DataQualityRule = (GoogleCloudDataplexV1DataQualityRule) o;
    return Objects.equals(this.column, googleCloudDataplexV1DataQualityRule.column) &&
        Objects.equals(this.description, googleCloudDataplexV1DataQualityRule.description) &&
        Objects.equals(this.dimension, googleCloudDataplexV1DataQualityRule.dimension) &&
        Objects.equals(this.ignoreNull, googleCloudDataplexV1DataQualityRule.ignoreNull) &&
        Objects.equals(this.name, googleCloudDataplexV1DataQualityRule.name) &&
        Objects.equals(this.nonNullExpectation, googleCloudDataplexV1DataQualityRule.nonNullExpectation) &&
        Objects.equals(this.rangeExpectation, googleCloudDataplexV1DataQualityRule.rangeExpectation) &&
        Objects.equals(this.regexExpectation, googleCloudDataplexV1DataQualityRule.regexExpectation) &&
        Objects.equals(this.rowConditionExpectation, googleCloudDataplexV1DataQualityRule.rowConditionExpectation) &&
        Objects.equals(this.setExpectation, googleCloudDataplexV1DataQualityRule.setExpectation) &&
        Objects.equals(this.statisticRangeExpectation, googleCloudDataplexV1DataQualityRule.statisticRangeExpectation) &&
        Objects.equals(this.tableConditionExpectation, googleCloudDataplexV1DataQualityRule.tableConditionExpectation) &&
        Objects.equals(this.threshold, googleCloudDataplexV1DataQualityRule.threshold) &&
        Objects.equals(this.uniquenessExpectation, googleCloudDataplexV1DataQualityRule.uniquenessExpectation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(column, description, dimension, ignoreNull, name, nonNullExpectation, rangeExpectation, regexExpectation, rowConditionExpectation, setExpectation, statisticRangeExpectation, tableConditionExpectation, threshold, uniquenessExpectation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1DataQualityRule {\n");
    sb.append("    column: ").append(toIndentedString(column)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("    ignoreNull: ").append(toIndentedString(ignoreNull)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nonNullExpectation: ").append(toIndentedString(nonNullExpectation)).append("\n");
    sb.append("    rangeExpectation: ").append(toIndentedString(rangeExpectation)).append("\n");
    sb.append("    regexExpectation: ").append(toIndentedString(regexExpectation)).append("\n");
    sb.append("    rowConditionExpectation: ").append(toIndentedString(rowConditionExpectation)).append("\n");
    sb.append("    setExpectation: ").append(toIndentedString(setExpectation)).append("\n");
    sb.append("    statisticRangeExpectation: ").append(toIndentedString(statisticRangeExpectation)).append("\n");
    sb.append("    tableConditionExpectation: ").append(toIndentedString(tableConditionExpectation)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("    uniquenessExpectation: ").append(toIndentedString(uniquenessExpectation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("column");
    openapiFields.add("description");
    openapiFields.add("dimension");
    openapiFields.add("ignoreNull");
    openapiFields.add("name");
    openapiFields.add("nonNullExpectation");
    openapiFields.add("rangeExpectation");
    openapiFields.add("regexExpectation");
    openapiFields.add("rowConditionExpectation");
    openapiFields.add("setExpectation");
    openapiFields.add("statisticRangeExpectation");
    openapiFields.add("tableConditionExpectation");
    openapiFields.add("threshold");
    openapiFields.add("uniquenessExpectation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1DataQualityRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1DataQualityRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1DataQualityRule is not found in the empty JSON string", GoogleCloudDataplexV1DataQualityRule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1DataQualityRule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1DataQualityRule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("column") != null && !jsonObj.get("column").isJsonNull()) && !jsonObj.get("column").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `column` to be a primitive type in the JSON string but got `%s`", jsonObj.get("column").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("dimension") != null && !jsonObj.get("dimension").isJsonNull()) && !jsonObj.get("dimension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dimension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dimension").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `rangeExpectation`
      if (jsonObj.get("rangeExpectation") != null && !jsonObj.get("rangeExpectation").isJsonNull()) {
        GoogleCloudDataplexV1DataQualityRuleRangeExpectation.validateJsonElement(jsonObj.get("rangeExpectation"));
      }
      // validate the optional field `regexExpectation`
      if (jsonObj.get("regexExpectation") != null && !jsonObj.get("regexExpectation").isJsonNull()) {
        GoogleCloudDataplexV1DataQualityRuleRegexExpectation.validateJsonElement(jsonObj.get("regexExpectation"));
      }
      // validate the optional field `rowConditionExpectation`
      if (jsonObj.get("rowConditionExpectation") != null && !jsonObj.get("rowConditionExpectation").isJsonNull()) {
        GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation.validateJsonElement(jsonObj.get("rowConditionExpectation"));
      }
      // validate the optional field `setExpectation`
      if (jsonObj.get("setExpectation") != null && !jsonObj.get("setExpectation").isJsonNull()) {
        GoogleCloudDataplexV1DataQualityRuleSetExpectation.validateJsonElement(jsonObj.get("setExpectation"));
      }
      // validate the optional field `statisticRangeExpectation`
      if (jsonObj.get("statisticRangeExpectation") != null && !jsonObj.get("statisticRangeExpectation").isJsonNull()) {
        GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation.validateJsonElement(jsonObj.get("statisticRangeExpectation"));
      }
      // validate the optional field `tableConditionExpectation`
      if (jsonObj.get("tableConditionExpectation") != null && !jsonObj.get("tableConditionExpectation").isJsonNull()) {
        GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation.validateJsonElement(jsonObj.get("tableConditionExpectation"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1DataQualityRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1DataQualityRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1DataQualityRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1DataQualityRule.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1DataQualityRule>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1DataQualityRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1DataQualityRule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1DataQualityRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1DataQualityRule
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1DataQualityRule
   */
  public static GoogleCloudDataplexV1DataQualityRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1DataQualityRule.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1DataQualityRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

