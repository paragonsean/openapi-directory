/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDataplexV1AssetDiscoverySpec;
import org.openapitools.client.model.GoogleCloudDataplexV1AssetDiscoveryStatus;
import org.openapitools.client.model.GoogleCloudDataplexV1AssetResourceSpec;
import org.openapitools.client.model.GoogleCloudDataplexV1AssetResourceStatus;
import org.openapitools.client.model.GoogleCloudDataplexV1AssetSecurityStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An asset represents a cloud resource that is being managed within a lake as a member of a zone.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1Asset {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISCOVERY_SPEC = "discoverySpec";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_SPEC)
  private GoogleCloudDataplexV1AssetDiscoverySpec discoverySpec;

  public static final String SERIALIZED_NAME_DISCOVERY_STATUS = "discoveryStatus";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_STATUS)
  private GoogleCloudDataplexV1AssetDiscoveryStatus discoveryStatus;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RESOURCE_SPEC = "resourceSpec";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SPEC)
  private GoogleCloudDataplexV1AssetResourceSpec resourceSpec;

  public static final String SERIALIZED_NAME_RESOURCE_STATUS = "resourceStatus";
  @SerializedName(SERIALIZED_NAME_RESOURCE_STATUS)
  private GoogleCloudDataplexV1AssetResourceStatus resourceStatus;

  public static final String SERIALIZED_NAME_SECURITY_STATUS = "securityStatus";
  @SerializedName(SERIALIZED_NAME_SECURITY_STATUS)
  private GoogleCloudDataplexV1AssetSecurityStatus securityStatus;

  /**
   * Output only. Current state of the asset.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    ACTIVE("ACTIVE"),
    
    CREATING("CREATING"),
    
    DELETING("DELETING"),
    
    ACTION_REQUIRED("ACTION_REQUIRED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudDataplexV1Asset() {
  }

  public GoogleCloudDataplexV1Asset(
     String createTime, 
     String name, 
     StateEnum state, 
     String uid, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.name = name;
    this.state = state;
    this.uid = uid;
    this.updateTime = updateTime;
  }

  /**
   * Output only. The time when the asset was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudDataplexV1Asset description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Description of the asset.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDataplexV1Asset discoverySpec(GoogleCloudDataplexV1AssetDiscoverySpec discoverySpec) {
    this.discoverySpec = discoverySpec;
    return this;
  }

  /**
   * Get discoverySpec
   * @return discoverySpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1AssetDiscoverySpec getDiscoverySpec() {
    return discoverySpec;
  }

  public void setDiscoverySpec(GoogleCloudDataplexV1AssetDiscoverySpec discoverySpec) {
    this.discoverySpec = discoverySpec;
  }


  public GoogleCloudDataplexV1Asset discoveryStatus(GoogleCloudDataplexV1AssetDiscoveryStatus discoveryStatus) {
    this.discoveryStatus = discoveryStatus;
    return this;
  }

  /**
   * Get discoveryStatus
   * @return discoveryStatus
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1AssetDiscoveryStatus getDiscoveryStatus() {
    return discoveryStatus;
  }

  public void setDiscoveryStatus(GoogleCloudDataplexV1AssetDiscoveryStatus discoveryStatus) {
    this.discoveryStatus = discoveryStatus;
  }


  public GoogleCloudDataplexV1Asset displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. User friendly display name.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDataplexV1Asset labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudDataplexV1Asset putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. User defined labels for the asset.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  /**
   * Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudDataplexV1Asset resourceSpec(GoogleCloudDataplexV1AssetResourceSpec resourceSpec) {
    this.resourceSpec = resourceSpec;
    return this;
  }

  /**
   * Get resourceSpec
   * @return resourceSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1AssetResourceSpec getResourceSpec() {
    return resourceSpec;
  }

  public void setResourceSpec(GoogleCloudDataplexV1AssetResourceSpec resourceSpec) {
    this.resourceSpec = resourceSpec;
  }


  public GoogleCloudDataplexV1Asset resourceStatus(GoogleCloudDataplexV1AssetResourceStatus resourceStatus) {
    this.resourceStatus = resourceStatus;
    return this;
  }

  /**
   * Get resourceStatus
   * @return resourceStatus
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1AssetResourceStatus getResourceStatus() {
    return resourceStatus;
  }

  public void setResourceStatus(GoogleCloudDataplexV1AssetResourceStatus resourceStatus) {
    this.resourceStatus = resourceStatus;
  }


  public GoogleCloudDataplexV1Asset securityStatus(GoogleCloudDataplexV1AssetSecurityStatus securityStatus) {
    this.securityStatus = securityStatus;
    return this;
  }

  /**
   * Get securityStatus
   * @return securityStatus
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1AssetSecurityStatus getSecurityStatus() {
    return securityStatus;
  }

  public void setSecurityStatus(GoogleCloudDataplexV1AssetSecurityStatus securityStatus) {
    this.securityStatus = securityStatus;
  }


  /**
   * Output only. Current state of the asset.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  /**
   * Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }



  /**
   * Output only. The time when the asset was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1Asset googleCloudDataplexV1Asset = (GoogleCloudDataplexV1Asset) o;
    return Objects.equals(this.createTime, googleCloudDataplexV1Asset.createTime) &&
        Objects.equals(this.description, googleCloudDataplexV1Asset.description) &&
        Objects.equals(this.discoverySpec, googleCloudDataplexV1Asset.discoverySpec) &&
        Objects.equals(this.discoveryStatus, googleCloudDataplexV1Asset.discoveryStatus) &&
        Objects.equals(this.displayName, googleCloudDataplexV1Asset.displayName) &&
        Objects.equals(this.labels, googleCloudDataplexV1Asset.labels) &&
        Objects.equals(this.name, googleCloudDataplexV1Asset.name) &&
        Objects.equals(this.resourceSpec, googleCloudDataplexV1Asset.resourceSpec) &&
        Objects.equals(this.resourceStatus, googleCloudDataplexV1Asset.resourceStatus) &&
        Objects.equals(this.securityStatus, googleCloudDataplexV1Asset.securityStatus) &&
        Objects.equals(this.state, googleCloudDataplexV1Asset.state) &&
        Objects.equals(this.uid, googleCloudDataplexV1Asset.uid) &&
        Objects.equals(this.updateTime, googleCloudDataplexV1Asset.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, description, discoverySpec, discoveryStatus, displayName, labels, name, resourceSpec, resourceStatus, securityStatus, state, uid, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1Asset {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    discoverySpec: ").append(toIndentedString(discoverySpec)).append("\n");
    sb.append("    discoveryStatus: ").append(toIndentedString(discoveryStatus)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    resourceSpec: ").append(toIndentedString(resourceSpec)).append("\n");
    sb.append("    resourceStatus: ").append(toIndentedString(resourceStatus)).append("\n");
    sb.append("    securityStatus: ").append(toIndentedString(securityStatus)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("description");
    openapiFields.add("discoverySpec");
    openapiFields.add("discoveryStatus");
    openapiFields.add("displayName");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("resourceSpec");
    openapiFields.add("resourceStatus");
    openapiFields.add("securityStatus");
    openapiFields.add("state");
    openapiFields.add("uid");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1Asset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1Asset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1Asset is not found in the empty JSON string", GoogleCloudDataplexV1Asset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1Asset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1Asset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `discoverySpec`
      if (jsonObj.get("discoverySpec") != null && !jsonObj.get("discoverySpec").isJsonNull()) {
        GoogleCloudDataplexV1AssetDiscoverySpec.validateJsonElement(jsonObj.get("discoverySpec"));
      }
      // validate the optional field `discoveryStatus`
      if (jsonObj.get("discoveryStatus") != null && !jsonObj.get("discoveryStatus").isJsonNull()) {
        GoogleCloudDataplexV1AssetDiscoveryStatus.validateJsonElement(jsonObj.get("discoveryStatus"));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `resourceSpec`
      if (jsonObj.get("resourceSpec") != null && !jsonObj.get("resourceSpec").isJsonNull()) {
        GoogleCloudDataplexV1AssetResourceSpec.validateJsonElement(jsonObj.get("resourceSpec"));
      }
      // validate the optional field `resourceStatus`
      if (jsonObj.get("resourceStatus") != null && !jsonObj.get("resourceStatus").isJsonNull()) {
        GoogleCloudDataplexV1AssetResourceStatus.validateJsonElement(jsonObj.get("resourceStatus"));
      }
      // validate the optional field `securityStatus`
      if (jsonObj.get("securityStatus") != null && !jsonObj.get("securityStatus").isJsonNull()) {
        GoogleCloudDataplexV1AssetSecurityStatus.validateJsonElement(jsonObj.get("securityStatus"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1Asset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1Asset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1Asset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1Asset.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1Asset>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1Asset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1Asset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1Asset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1Asset
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1Asset
   */
  public static GoogleCloudDataplexV1Asset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1Asset.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1Asset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

