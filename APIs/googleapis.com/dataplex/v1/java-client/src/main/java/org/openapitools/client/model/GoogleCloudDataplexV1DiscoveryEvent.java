/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDataplexV1DiscoveryEventActionDetails;
import org.openapitools.client.model.GoogleCloudDataplexV1DiscoveryEventConfigDetails;
import org.openapitools.client.model.GoogleCloudDataplexV1DiscoveryEventEntityDetails;
import org.openapitools.client.model.GoogleCloudDataplexV1DiscoveryEventPartitionDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The payload associated with Discovery data processing.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1DiscoveryEvent {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private GoogleCloudDataplexV1DiscoveryEventActionDetails action;

  public static final String SERIALIZED_NAME_ASSET_ID = "assetId";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  private String assetId;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private GoogleCloudDataplexV1DiscoveryEventConfigDetails config;

  public static final String SERIALIZED_NAME_DATA_LOCATION = "dataLocation";
  @SerializedName(SERIALIZED_NAME_DATA_LOCATION)
  private String dataLocation;

  public static final String SERIALIZED_NAME_ENTITY = "entity";
  @SerializedName(SERIALIZED_NAME_ENTITY)
  private GoogleCloudDataplexV1DiscoveryEventEntityDetails entity;

  public static final String SERIALIZED_NAME_LAKE_ID = "lakeId";
  @SerializedName(SERIALIZED_NAME_LAKE_ID)
  private String lakeId;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_PARTITION = "partition";
  @SerializedName(SERIALIZED_NAME_PARTITION)
  private GoogleCloudDataplexV1DiscoveryEventPartitionDetails partition;

  /**
   * The type of the event being logged.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    EVENT_TYPE_UNSPECIFIED("EVENT_TYPE_UNSPECIFIED"),
    
    CONFIG("CONFIG"),
    
    ENTITY_CREATED("ENTITY_CREATED"),
    
    ENTITY_UPDATED("ENTITY_UPDATED"),
    
    ENTITY_DELETED("ENTITY_DELETED"),
    
    PARTITION_CREATED("PARTITION_CREATED"),
    
    PARTITION_UPDATED("PARTITION_UPDATED"),
    
    PARTITION_DELETED("PARTITION_DELETED");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_ZONE_ID = "zoneId";
  @SerializedName(SERIALIZED_NAME_ZONE_ID)
  private String zoneId;

  public GoogleCloudDataplexV1DiscoveryEvent() {
  }

  public GoogleCloudDataplexV1DiscoveryEvent action(GoogleCloudDataplexV1DiscoveryEventActionDetails action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DiscoveryEventActionDetails getAction() {
    return action;
  }

  public void setAction(GoogleCloudDataplexV1DiscoveryEventActionDetails action) {
    this.action = action;
  }


  public GoogleCloudDataplexV1DiscoveryEvent assetId(String assetId) {
    this.assetId = assetId;
    return this;
  }

  /**
   * The id of the associated asset.
   * @return assetId
   */
  @javax.annotation.Nullable
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }


  public GoogleCloudDataplexV1DiscoveryEvent config(GoogleCloudDataplexV1DiscoveryEventConfigDetails config) {
    this.config = config;
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DiscoveryEventConfigDetails getConfig() {
    return config;
  }

  public void setConfig(GoogleCloudDataplexV1DiscoveryEventConfigDetails config) {
    this.config = config;
  }


  public GoogleCloudDataplexV1DiscoveryEvent dataLocation(String dataLocation) {
    this.dataLocation = dataLocation;
    return this;
  }

  /**
   * The data location associated with the event.
   * @return dataLocation
   */
  @javax.annotation.Nullable
  public String getDataLocation() {
    return dataLocation;
  }

  public void setDataLocation(String dataLocation) {
    this.dataLocation = dataLocation;
  }


  public GoogleCloudDataplexV1DiscoveryEvent entity(GoogleCloudDataplexV1DiscoveryEventEntityDetails entity) {
    this.entity = entity;
    return this;
  }

  /**
   * Get entity
   * @return entity
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DiscoveryEventEntityDetails getEntity() {
    return entity;
  }

  public void setEntity(GoogleCloudDataplexV1DiscoveryEventEntityDetails entity) {
    this.entity = entity;
  }


  public GoogleCloudDataplexV1DiscoveryEvent lakeId(String lakeId) {
    this.lakeId = lakeId;
    return this;
  }

  /**
   * The id of the associated lake.
   * @return lakeId
   */
  @javax.annotation.Nullable
  public String getLakeId() {
    return lakeId;
  }

  public void setLakeId(String lakeId) {
    this.lakeId = lakeId;
  }


  public GoogleCloudDataplexV1DiscoveryEvent message(String message) {
    this.message = message;
    return this;
  }

  /**
   * The log message.
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public GoogleCloudDataplexV1DiscoveryEvent partition(GoogleCloudDataplexV1DiscoveryEventPartitionDetails partition) {
    this.partition = partition;
    return this;
  }

  /**
   * Get partition
   * @return partition
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DiscoveryEventPartitionDetails getPartition() {
    return partition;
  }

  public void setPartition(GoogleCloudDataplexV1DiscoveryEventPartitionDetails partition) {
    this.partition = partition;
  }


  public GoogleCloudDataplexV1DiscoveryEvent type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * The type of the event being logged.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public GoogleCloudDataplexV1DiscoveryEvent zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

  /**
   * The id of the associated zone.
   * @return zoneId
   */
  @javax.annotation.Nullable
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1DiscoveryEvent googleCloudDataplexV1DiscoveryEvent = (GoogleCloudDataplexV1DiscoveryEvent) o;
    return Objects.equals(this.action, googleCloudDataplexV1DiscoveryEvent.action) &&
        Objects.equals(this.assetId, googleCloudDataplexV1DiscoveryEvent.assetId) &&
        Objects.equals(this.config, googleCloudDataplexV1DiscoveryEvent.config) &&
        Objects.equals(this.dataLocation, googleCloudDataplexV1DiscoveryEvent.dataLocation) &&
        Objects.equals(this.entity, googleCloudDataplexV1DiscoveryEvent.entity) &&
        Objects.equals(this.lakeId, googleCloudDataplexV1DiscoveryEvent.lakeId) &&
        Objects.equals(this.message, googleCloudDataplexV1DiscoveryEvent.message) &&
        Objects.equals(this.partition, googleCloudDataplexV1DiscoveryEvent.partition) &&
        Objects.equals(this.type, googleCloudDataplexV1DiscoveryEvent.type) &&
        Objects.equals(this.zoneId, googleCloudDataplexV1DiscoveryEvent.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, assetId, config, dataLocation, entity, lakeId, message, partition, type, zoneId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1DiscoveryEvent {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    dataLocation: ").append(toIndentedString(dataLocation)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    lakeId: ").append(toIndentedString(lakeId)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("assetId");
    openapiFields.add("config");
    openapiFields.add("dataLocation");
    openapiFields.add("entity");
    openapiFields.add("lakeId");
    openapiFields.add("message");
    openapiFields.add("partition");
    openapiFields.add("type");
    openapiFields.add("zoneId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1DiscoveryEvent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1DiscoveryEvent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1DiscoveryEvent is not found in the empty JSON string", GoogleCloudDataplexV1DiscoveryEvent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1DiscoveryEvent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1DiscoveryEvent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `action`
      if (jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) {
        GoogleCloudDataplexV1DiscoveryEventActionDetails.validateJsonElement(jsonObj.get("action"));
      }
      if ((jsonObj.get("assetId") != null && !jsonObj.get("assetId").isJsonNull()) && !jsonObj.get("assetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetId").toString()));
      }
      // validate the optional field `config`
      if (jsonObj.get("config") != null && !jsonObj.get("config").isJsonNull()) {
        GoogleCloudDataplexV1DiscoveryEventConfigDetails.validateJsonElement(jsonObj.get("config"));
      }
      if ((jsonObj.get("dataLocation") != null && !jsonObj.get("dataLocation").isJsonNull()) && !jsonObj.get("dataLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataLocation").toString()));
      }
      // validate the optional field `entity`
      if (jsonObj.get("entity") != null && !jsonObj.get("entity").isJsonNull()) {
        GoogleCloudDataplexV1DiscoveryEventEntityDetails.validateJsonElement(jsonObj.get("entity"));
      }
      if ((jsonObj.get("lakeId") != null && !jsonObj.get("lakeId").isJsonNull()) && !jsonObj.get("lakeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lakeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lakeId").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      // validate the optional field `partition`
      if (jsonObj.get("partition") != null && !jsonObj.get("partition").isJsonNull()) {
        GoogleCloudDataplexV1DiscoveryEventPartitionDetails.validateJsonElement(jsonObj.get("partition"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      if ((jsonObj.get("zoneId") != null && !jsonObj.get("zoneId").isJsonNull()) && !jsonObj.get("zoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zoneId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1DiscoveryEvent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1DiscoveryEvent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1DiscoveryEvent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1DiscoveryEvent.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1DiscoveryEvent>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1DiscoveryEvent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1DiscoveryEvent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1DiscoveryEvent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1DiscoveryEvent
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1DiscoveryEvent
   */
  public static GoogleCloudDataplexV1DiscoveryEvent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1DiscoveryEvent.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1DiscoveryEvent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

