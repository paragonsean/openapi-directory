/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDataplexV1DataProfileSpecPostScanActions;
import org.openapitools.client.model.GoogleCloudDataplexV1DataProfileSpecSelectedFields;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DataProfileScan related setting.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1DataProfileSpec {
  public static final String SERIALIZED_NAME_EXCLUDE_FIELDS = "excludeFields";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_FIELDS)
  private GoogleCloudDataplexV1DataProfileSpecSelectedFields excludeFields;

  public static final String SERIALIZED_NAME_INCLUDE_FIELDS = "includeFields";
  @SerializedName(SERIALIZED_NAME_INCLUDE_FIELDS)
  private GoogleCloudDataplexV1DataProfileSpecSelectedFields includeFields;

  public static final String SERIALIZED_NAME_POST_SCAN_ACTIONS = "postScanActions";
  @SerializedName(SERIALIZED_NAME_POST_SCAN_ACTIONS)
  private GoogleCloudDataplexV1DataProfileSpecPostScanActions postScanActions;

  public static final String SERIALIZED_NAME_ROW_FILTER = "rowFilter";
  @SerializedName(SERIALIZED_NAME_ROW_FILTER)
  private String rowFilter;

  public static final String SERIALIZED_NAME_SAMPLING_PERCENT = "samplingPercent";
  @SerializedName(SERIALIZED_NAME_SAMPLING_PERCENT)
  private Float samplingPercent;

  public GoogleCloudDataplexV1DataProfileSpec() {
  }

  public GoogleCloudDataplexV1DataProfileSpec excludeFields(GoogleCloudDataplexV1DataProfileSpecSelectedFields excludeFields) {
    this.excludeFields = excludeFields;
    return this;
  }

  /**
   * Get excludeFields
   * @return excludeFields
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataProfileSpecSelectedFields getExcludeFields() {
    return excludeFields;
  }

  public void setExcludeFields(GoogleCloudDataplexV1DataProfileSpecSelectedFields excludeFields) {
    this.excludeFields = excludeFields;
  }


  public GoogleCloudDataplexV1DataProfileSpec includeFields(GoogleCloudDataplexV1DataProfileSpecSelectedFields includeFields) {
    this.includeFields = includeFields;
    return this;
  }

  /**
   * Get includeFields
   * @return includeFields
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataProfileSpecSelectedFields getIncludeFields() {
    return includeFields;
  }

  public void setIncludeFields(GoogleCloudDataplexV1DataProfileSpecSelectedFields includeFields) {
    this.includeFields = includeFields;
  }


  public GoogleCloudDataplexV1DataProfileSpec postScanActions(GoogleCloudDataplexV1DataProfileSpecPostScanActions postScanActions) {
    this.postScanActions = postScanActions;
    return this;
  }

  /**
   * Get postScanActions
   * @return postScanActions
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataProfileSpecPostScanActions getPostScanActions() {
    return postScanActions;
  }

  public void setPostScanActions(GoogleCloudDataplexV1DataProfileSpecPostScanActions postScanActions) {
    this.postScanActions = postScanActions;
  }


  public GoogleCloudDataplexV1DataProfileSpec rowFilter(String rowFilter) {
    this.rowFilter = rowFilter;
    return this;
  }

  /**
   * Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 &gt;&#x3D; 0 AND col2 &lt; 10
   * @return rowFilter
   */
  @javax.annotation.Nullable
  public String getRowFilter() {
    return rowFilter;
  }

  public void setRowFilter(String rowFilter) {
    this.rowFilter = rowFilter;
  }


  public GoogleCloudDataplexV1DataProfileSpec samplingPercent(Float samplingPercent) {
    this.samplingPercent = samplingPercent;
    return this;
  }

  /**
   * Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.
   * @return samplingPercent
   */
  @javax.annotation.Nullable
  public Float getSamplingPercent() {
    return samplingPercent;
  }

  public void setSamplingPercent(Float samplingPercent) {
    this.samplingPercent = samplingPercent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1DataProfileSpec googleCloudDataplexV1DataProfileSpec = (GoogleCloudDataplexV1DataProfileSpec) o;
    return Objects.equals(this.excludeFields, googleCloudDataplexV1DataProfileSpec.excludeFields) &&
        Objects.equals(this.includeFields, googleCloudDataplexV1DataProfileSpec.includeFields) &&
        Objects.equals(this.postScanActions, googleCloudDataplexV1DataProfileSpec.postScanActions) &&
        Objects.equals(this.rowFilter, googleCloudDataplexV1DataProfileSpec.rowFilter) &&
        Objects.equals(this.samplingPercent, googleCloudDataplexV1DataProfileSpec.samplingPercent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(excludeFields, includeFields, postScanActions, rowFilter, samplingPercent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1DataProfileSpec {\n");
    sb.append("    excludeFields: ").append(toIndentedString(excludeFields)).append("\n");
    sb.append("    includeFields: ").append(toIndentedString(includeFields)).append("\n");
    sb.append("    postScanActions: ").append(toIndentedString(postScanActions)).append("\n");
    sb.append("    rowFilter: ").append(toIndentedString(rowFilter)).append("\n");
    sb.append("    samplingPercent: ").append(toIndentedString(samplingPercent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("excludeFields");
    openapiFields.add("includeFields");
    openapiFields.add("postScanActions");
    openapiFields.add("rowFilter");
    openapiFields.add("samplingPercent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1DataProfileSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1DataProfileSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1DataProfileSpec is not found in the empty JSON string", GoogleCloudDataplexV1DataProfileSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1DataProfileSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1DataProfileSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `excludeFields`
      if (jsonObj.get("excludeFields") != null && !jsonObj.get("excludeFields").isJsonNull()) {
        GoogleCloudDataplexV1DataProfileSpecSelectedFields.validateJsonElement(jsonObj.get("excludeFields"));
      }
      // validate the optional field `includeFields`
      if (jsonObj.get("includeFields") != null && !jsonObj.get("includeFields").isJsonNull()) {
        GoogleCloudDataplexV1DataProfileSpecSelectedFields.validateJsonElement(jsonObj.get("includeFields"));
      }
      // validate the optional field `postScanActions`
      if (jsonObj.get("postScanActions") != null && !jsonObj.get("postScanActions").isJsonNull()) {
        GoogleCloudDataplexV1DataProfileSpecPostScanActions.validateJsonElement(jsonObj.get("postScanActions"));
      }
      if ((jsonObj.get("rowFilter") != null && !jsonObj.get("rowFilter").isJsonNull()) && !jsonObj.get("rowFilter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rowFilter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rowFilter").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1DataProfileSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1DataProfileSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1DataProfileSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1DataProfileSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1DataProfileSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1DataProfileSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1DataProfileSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1DataProfileSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1DataProfileSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1DataProfileSpec
   */
  public static GoogleCloudDataplexV1DataProfileSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1DataProfileSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1DataProfileSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

