/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDataplexV1DataProfileResult;
import org.openapitools.client.model.GoogleCloudDataplexV1DataProfileSpec;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityResult;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualitySpec;
import org.openapitools.client.model.GoogleCloudDataplexV1DataScanExecutionSpec;
import org.openapitools.client.model.GoogleCloudDataplexV1DataScanExecutionStatus;
import org.openapitools.client.model.GoogleCloudDataplexV1DataSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a user-visible job which provides the insights for the related data source.For example: Data Quality: generates queries based on the rules and runs against the data to get data quality check results. Data Profile: analyzes the data in table(s) and generates insights about the structure, content and relationships (such as null percent, cardinality, min/max/mean, etc).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1DataScan {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private GoogleCloudDataplexV1DataSource data;

  public static final String SERIALIZED_NAME_DATA_PROFILE_RESULT = "dataProfileResult";
  @SerializedName(SERIALIZED_NAME_DATA_PROFILE_RESULT)
  private GoogleCloudDataplexV1DataProfileResult dataProfileResult;

  public static final String SERIALIZED_NAME_DATA_PROFILE_SPEC = "dataProfileSpec";
  @SerializedName(SERIALIZED_NAME_DATA_PROFILE_SPEC)
  private GoogleCloudDataplexV1DataProfileSpec dataProfileSpec;

  public static final String SERIALIZED_NAME_DATA_QUALITY_RESULT = "dataQualityResult";
  @SerializedName(SERIALIZED_NAME_DATA_QUALITY_RESULT)
  private GoogleCloudDataplexV1DataQualityResult dataQualityResult;

  public static final String SERIALIZED_NAME_DATA_QUALITY_SPEC = "dataQualitySpec";
  @SerializedName(SERIALIZED_NAME_DATA_QUALITY_SPEC)
  private GoogleCloudDataplexV1DataQualitySpec dataQualitySpec;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_EXECUTION_SPEC = "executionSpec";
  @SerializedName(SERIALIZED_NAME_EXECUTION_SPEC)
  private GoogleCloudDataplexV1DataScanExecutionSpec executionSpec;

  public static final String SERIALIZED_NAME_EXECUTION_STATUS = "executionStatus";
  @SerializedName(SERIALIZED_NAME_EXECUTION_STATUS)
  private GoogleCloudDataplexV1DataScanExecutionStatus executionStatus;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Output only. Current state of the DataScan.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    ACTIVE("ACTIVE"),
    
    CREATING("CREATING"),
    
    DELETING("DELETING"),
    
    ACTION_REQUIRED("ACTION_REQUIRED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  /**
   * Output only. The type of DataScan.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    SCAN_TYPE_UNSPECIFIED("DATA_SCAN_TYPE_UNSPECIFIED"),
    
    QUALITY("DATA_QUALITY"),
    
    PROFILE("DATA_PROFILE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudDataplexV1DataScan() {
  }

  public GoogleCloudDataplexV1DataScan(
     String createTime, 
     String name, 
     StateEnum state, 
     TypeEnum type, 
     String uid, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.name = name;
    this.state = state;
    this.type = type;
    this.uid = uid;
    this.updateTime = updateTime;
  }

  /**
   * Output only. The time when the scan was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudDataplexV1DataScan data(GoogleCloudDataplexV1DataSource data) {
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataSource getData() {
    return data;
  }

  public void setData(GoogleCloudDataplexV1DataSource data) {
    this.data = data;
  }


  public GoogleCloudDataplexV1DataScan dataProfileResult(GoogleCloudDataplexV1DataProfileResult dataProfileResult) {
    this.dataProfileResult = dataProfileResult;
    return this;
  }

  /**
   * Get dataProfileResult
   * @return dataProfileResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataProfileResult getDataProfileResult() {
    return dataProfileResult;
  }

  public void setDataProfileResult(GoogleCloudDataplexV1DataProfileResult dataProfileResult) {
    this.dataProfileResult = dataProfileResult;
  }


  public GoogleCloudDataplexV1DataScan dataProfileSpec(GoogleCloudDataplexV1DataProfileSpec dataProfileSpec) {
    this.dataProfileSpec = dataProfileSpec;
    return this;
  }

  /**
   * Get dataProfileSpec
   * @return dataProfileSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataProfileSpec getDataProfileSpec() {
    return dataProfileSpec;
  }

  public void setDataProfileSpec(GoogleCloudDataplexV1DataProfileSpec dataProfileSpec) {
    this.dataProfileSpec = dataProfileSpec;
  }


  public GoogleCloudDataplexV1DataScan dataQualityResult(GoogleCloudDataplexV1DataQualityResult dataQualityResult) {
    this.dataQualityResult = dataQualityResult;
    return this;
  }

  /**
   * Get dataQualityResult
   * @return dataQualityResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualityResult getDataQualityResult() {
    return dataQualityResult;
  }

  public void setDataQualityResult(GoogleCloudDataplexV1DataQualityResult dataQualityResult) {
    this.dataQualityResult = dataQualityResult;
  }


  public GoogleCloudDataplexV1DataScan dataQualitySpec(GoogleCloudDataplexV1DataQualitySpec dataQualitySpec) {
    this.dataQualitySpec = dataQualitySpec;
    return this;
  }

  /**
   * Get dataQualitySpec
   * @return dataQualitySpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualitySpec getDataQualitySpec() {
    return dataQualitySpec;
  }

  public void setDataQualitySpec(GoogleCloudDataplexV1DataQualitySpec dataQualitySpec) {
    this.dataQualitySpec = dataQualitySpec;
  }


  public GoogleCloudDataplexV1DataScan description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Description of the scan. Must be between 1-1024 characters.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDataplexV1DataScan displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. User friendly display name. Must be between 1-256 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDataplexV1DataScan executionSpec(GoogleCloudDataplexV1DataScanExecutionSpec executionSpec) {
    this.executionSpec = executionSpec;
    return this;
  }

  /**
   * Get executionSpec
   * @return executionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataScanExecutionSpec getExecutionSpec() {
    return executionSpec;
  }

  public void setExecutionSpec(GoogleCloudDataplexV1DataScanExecutionSpec executionSpec) {
    this.executionSpec = executionSpec;
  }


  public GoogleCloudDataplexV1DataScan executionStatus(GoogleCloudDataplexV1DataScanExecutionStatus executionStatus) {
    this.executionStatus = executionStatus;
    return this;
  }

  /**
   * Get executionStatus
   * @return executionStatus
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataScanExecutionStatus getExecutionStatus() {
    return executionStatus;
  }

  public void setExecutionStatus(GoogleCloudDataplexV1DataScanExecutionStatus executionStatus) {
    this.executionStatus = executionStatus;
  }


  public GoogleCloudDataplexV1DataScan labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudDataplexV1DataScan putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. User-defined labels for the scan.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  /**
   * Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Current state of the DataScan.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  /**
   * Output only. The type of DataScan.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }



  /**
   * Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }



  /**
   * Output only. The time when the scan was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1DataScan googleCloudDataplexV1DataScan = (GoogleCloudDataplexV1DataScan) o;
    return Objects.equals(this.createTime, googleCloudDataplexV1DataScan.createTime) &&
        Objects.equals(this.data, googleCloudDataplexV1DataScan.data) &&
        Objects.equals(this.dataProfileResult, googleCloudDataplexV1DataScan.dataProfileResult) &&
        Objects.equals(this.dataProfileSpec, googleCloudDataplexV1DataScan.dataProfileSpec) &&
        Objects.equals(this.dataQualityResult, googleCloudDataplexV1DataScan.dataQualityResult) &&
        Objects.equals(this.dataQualitySpec, googleCloudDataplexV1DataScan.dataQualitySpec) &&
        Objects.equals(this.description, googleCloudDataplexV1DataScan.description) &&
        Objects.equals(this.displayName, googleCloudDataplexV1DataScan.displayName) &&
        Objects.equals(this.executionSpec, googleCloudDataplexV1DataScan.executionSpec) &&
        Objects.equals(this.executionStatus, googleCloudDataplexV1DataScan.executionStatus) &&
        Objects.equals(this.labels, googleCloudDataplexV1DataScan.labels) &&
        Objects.equals(this.name, googleCloudDataplexV1DataScan.name) &&
        Objects.equals(this.state, googleCloudDataplexV1DataScan.state) &&
        Objects.equals(this.type, googleCloudDataplexV1DataScan.type) &&
        Objects.equals(this.uid, googleCloudDataplexV1DataScan.uid) &&
        Objects.equals(this.updateTime, googleCloudDataplexV1DataScan.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, data, dataProfileResult, dataProfileSpec, dataQualityResult, dataQualitySpec, description, displayName, executionSpec, executionStatus, labels, name, state, type, uid, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1DataScan {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    dataProfileResult: ").append(toIndentedString(dataProfileResult)).append("\n");
    sb.append("    dataProfileSpec: ").append(toIndentedString(dataProfileSpec)).append("\n");
    sb.append("    dataQualityResult: ").append(toIndentedString(dataQualityResult)).append("\n");
    sb.append("    dataQualitySpec: ").append(toIndentedString(dataQualitySpec)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    executionSpec: ").append(toIndentedString(executionSpec)).append("\n");
    sb.append("    executionStatus: ").append(toIndentedString(executionStatus)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("data");
    openapiFields.add("dataProfileResult");
    openapiFields.add("dataProfileSpec");
    openapiFields.add("dataQualityResult");
    openapiFields.add("dataQualitySpec");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("executionSpec");
    openapiFields.add("executionStatus");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("state");
    openapiFields.add("type");
    openapiFields.add("uid");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1DataScan
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1DataScan.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1DataScan is not found in the empty JSON string", GoogleCloudDataplexV1DataScan.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1DataScan.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1DataScan` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `data`
      if (jsonObj.get("data") != null && !jsonObj.get("data").isJsonNull()) {
        GoogleCloudDataplexV1DataSource.validateJsonElement(jsonObj.get("data"));
      }
      // validate the optional field `dataProfileResult`
      if (jsonObj.get("dataProfileResult") != null && !jsonObj.get("dataProfileResult").isJsonNull()) {
        GoogleCloudDataplexV1DataProfileResult.validateJsonElement(jsonObj.get("dataProfileResult"));
      }
      // validate the optional field `dataProfileSpec`
      if (jsonObj.get("dataProfileSpec") != null && !jsonObj.get("dataProfileSpec").isJsonNull()) {
        GoogleCloudDataplexV1DataProfileSpec.validateJsonElement(jsonObj.get("dataProfileSpec"));
      }
      // validate the optional field `dataQualityResult`
      if (jsonObj.get("dataQualityResult") != null && !jsonObj.get("dataQualityResult").isJsonNull()) {
        GoogleCloudDataplexV1DataQualityResult.validateJsonElement(jsonObj.get("dataQualityResult"));
      }
      // validate the optional field `dataQualitySpec`
      if (jsonObj.get("dataQualitySpec") != null && !jsonObj.get("dataQualitySpec").isJsonNull()) {
        GoogleCloudDataplexV1DataQualitySpec.validateJsonElement(jsonObj.get("dataQualitySpec"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `executionSpec`
      if (jsonObj.get("executionSpec") != null && !jsonObj.get("executionSpec").isJsonNull()) {
        GoogleCloudDataplexV1DataScanExecutionSpec.validateJsonElement(jsonObj.get("executionSpec"));
      }
      // validate the optional field `executionStatus`
      if (jsonObj.get("executionStatus") != null && !jsonObj.get("executionStatus").isJsonNull()) {
        GoogleCloudDataplexV1DataScanExecutionStatus.validateJsonElement(jsonObj.get("executionStatus"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1DataScan.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1DataScan' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1DataScan> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1DataScan.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1DataScan>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1DataScan value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1DataScan read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1DataScan given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1DataScan
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1DataScan
   */
  public static GoogleCloudDataplexV1DataScan fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1DataScan.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1DataScan to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

