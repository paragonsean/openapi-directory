/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityColumnResult;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityDimensionResult;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityResultPostScanActionsResult;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityRuleResult;
import org.openapitools.client.model.GoogleCloudDataplexV1ScannedData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The output of a DataQualityScan.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1DataQualityResult {
  public static final String SERIALIZED_NAME_COLUMNS = "columns";
  @SerializedName(SERIALIZED_NAME_COLUMNS)
  private List<GoogleCloudDataplexV1DataQualityColumnResult> columns = new ArrayList<>();

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private List<GoogleCloudDataplexV1DataQualityDimensionResult> dimensions = new ArrayList<>();

  public static final String SERIALIZED_NAME_PASSED = "passed";
  @SerializedName(SERIALIZED_NAME_PASSED)
  private Boolean passed;

  public static final String SERIALIZED_NAME_POST_SCAN_ACTIONS_RESULT = "postScanActionsResult";
  @SerializedName(SERIALIZED_NAME_POST_SCAN_ACTIONS_RESULT)
  private GoogleCloudDataplexV1DataQualityResultPostScanActionsResult postScanActionsResult;

  public static final String SERIALIZED_NAME_ROW_COUNT = "rowCount";
  @SerializedName(SERIALIZED_NAME_ROW_COUNT)
  private String rowCount;

  public static final String SERIALIZED_NAME_RULES = "rules";
  @SerializedName(SERIALIZED_NAME_RULES)
  private List<GoogleCloudDataplexV1DataQualityRuleResult> rules = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCANNED_DATA = "scannedData";
  @SerializedName(SERIALIZED_NAME_SCANNED_DATA)
  private GoogleCloudDataplexV1ScannedData scannedData;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Float score;

  public GoogleCloudDataplexV1DataQualityResult() {
  }

  public GoogleCloudDataplexV1DataQualityResult(
     List<GoogleCloudDataplexV1DataQualityColumnResult> columns, 
     Float score
  ) {
    this();
    this.columns = columns;
    this.score = score;
  }

  /**
   * Output only. A list of results at the column level.A column will have a corresponding DataQualityColumnResult if and only if there is at least one rule with the &#39;column&#39; field set to it.
   * @return columns
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDataplexV1DataQualityColumnResult> getColumns() {
    return columns;
  }



  public GoogleCloudDataplexV1DataQualityResult dimensions(List<GoogleCloudDataplexV1DataQualityDimensionResult> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public GoogleCloudDataplexV1DataQualityResult addDimensionsItem(GoogleCloudDataplexV1DataQualityDimensionResult dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

  /**
   * A list of results at the dimension level.A dimension will have a corresponding DataQualityDimensionResult if and only if there is at least one rule with the &#39;dimension&#39; field set to it.
   * @return dimensions
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDataplexV1DataQualityDimensionResult> getDimensions() {
    return dimensions;
  }

  public void setDimensions(List<GoogleCloudDataplexV1DataQualityDimensionResult> dimensions) {
    this.dimensions = dimensions;
  }


  public GoogleCloudDataplexV1DataQualityResult passed(Boolean passed) {
    this.passed = passed;
    return this;
  }

  /**
   * Overall data quality result -- true if all rules passed.
   * @return passed
   */
  @javax.annotation.Nullable
  public Boolean getPassed() {
    return passed;
  }

  public void setPassed(Boolean passed) {
    this.passed = passed;
  }


  public GoogleCloudDataplexV1DataQualityResult postScanActionsResult(GoogleCloudDataplexV1DataQualityResultPostScanActionsResult postScanActionsResult) {
    this.postScanActionsResult = postScanActionsResult;
    return this;
  }

  /**
   * Get postScanActionsResult
   * @return postScanActionsResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualityResultPostScanActionsResult getPostScanActionsResult() {
    return postScanActionsResult;
  }

  public void setPostScanActionsResult(GoogleCloudDataplexV1DataQualityResultPostScanActionsResult postScanActionsResult) {
    this.postScanActionsResult = postScanActionsResult;
  }


  public GoogleCloudDataplexV1DataQualityResult rowCount(String rowCount) {
    this.rowCount = rowCount;
    return this;
  }

  /**
   * The count of rows processed.
   * @return rowCount
   */
  @javax.annotation.Nullable
  public String getRowCount() {
    return rowCount;
  }

  public void setRowCount(String rowCount) {
    this.rowCount = rowCount;
  }


  public GoogleCloudDataplexV1DataQualityResult rules(List<GoogleCloudDataplexV1DataQualityRuleResult> rules) {
    this.rules = rules;
    return this;
  }

  public GoogleCloudDataplexV1DataQualityResult addRulesItem(GoogleCloudDataplexV1DataQualityRuleResult rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

  /**
   * A list of all the rules in a job, and their results.
   * @return rules
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDataplexV1DataQualityRuleResult> getRules() {
    return rules;
  }

  public void setRules(List<GoogleCloudDataplexV1DataQualityRuleResult> rules) {
    this.rules = rules;
  }


  public GoogleCloudDataplexV1DataQualityResult scannedData(GoogleCloudDataplexV1ScannedData scannedData) {
    this.scannedData = scannedData;
    return this;
  }

  /**
   * Get scannedData
   * @return scannedData
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1ScannedData getScannedData() {
    return scannedData;
  }

  public void setScannedData(GoogleCloudDataplexV1ScannedData scannedData) {
    this.scannedData = scannedData;
  }


  /**
   * Output only. The overall data quality score.The score ranges between 0, 100 (up to two decimal points).
   * @return score
   */
  @javax.annotation.Nullable
  public Float getScore() {
    return score;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1DataQualityResult googleCloudDataplexV1DataQualityResult = (GoogleCloudDataplexV1DataQualityResult) o;
    return Objects.equals(this.columns, googleCloudDataplexV1DataQualityResult.columns) &&
        Objects.equals(this.dimensions, googleCloudDataplexV1DataQualityResult.dimensions) &&
        Objects.equals(this.passed, googleCloudDataplexV1DataQualityResult.passed) &&
        Objects.equals(this.postScanActionsResult, googleCloudDataplexV1DataQualityResult.postScanActionsResult) &&
        Objects.equals(this.rowCount, googleCloudDataplexV1DataQualityResult.rowCount) &&
        Objects.equals(this.rules, googleCloudDataplexV1DataQualityResult.rules) &&
        Objects.equals(this.scannedData, googleCloudDataplexV1DataQualityResult.scannedData) &&
        Objects.equals(this.score, googleCloudDataplexV1DataQualityResult.score);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columns, dimensions, passed, postScanActionsResult, rowCount, rules, scannedData, score);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1DataQualityResult {\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    passed: ").append(toIndentedString(passed)).append("\n");
    sb.append("    postScanActionsResult: ").append(toIndentedString(postScanActionsResult)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    scannedData: ").append(toIndentedString(scannedData)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("columns");
    openapiFields.add("dimensions");
    openapiFields.add("passed");
    openapiFields.add("postScanActionsResult");
    openapiFields.add("rowCount");
    openapiFields.add("rules");
    openapiFields.add("scannedData");
    openapiFields.add("score");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1DataQualityResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1DataQualityResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1DataQualityResult is not found in the empty JSON string", GoogleCloudDataplexV1DataQualityResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1DataQualityResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1DataQualityResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("columns") != null && !jsonObj.get("columns").isJsonNull()) {
        JsonArray jsonArraycolumns = jsonObj.getAsJsonArray("columns");
        if (jsonArraycolumns != null) {
          // ensure the json data is an array
          if (!jsonObj.get("columns").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `columns` to be an array in the JSON string but got `%s`", jsonObj.get("columns").toString()));
          }

          // validate the optional field `columns` (array)
          for (int i = 0; i < jsonArraycolumns.size(); i++) {
            GoogleCloudDataplexV1DataQualityColumnResult.validateJsonElement(jsonArraycolumns.get(i));
          };
        }
      }
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull()) {
        JsonArray jsonArraydimensions = jsonObj.getAsJsonArray("dimensions");
        if (jsonArraydimensions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dimensions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dimensions` to be an array in the JSON string but got `%s`", jsonObj.get("dimensions").toString()));
          }

          // validate the optional field `dimensions` (array)
          for (int i = 0; i < jsonArraydimensions.size(); i++) {
            GoogleCloudDataplexV1DataQualityDimensionResult.validateJsonElement(jsonArraydimensions.get(i));
          };
        }
      }
      // validate the optional field `postScanActionsResult`
      if (jsonObj.get("postScanActionsResult") != null && !jsonObj.get("postScanActionsResult").isJsonNull()) {
        GoogleCloudDataplexV1DataQualityResultPostScanActionsResult.validateJsonElement(jsonObj.get("postScanActionsResult"));
      }
      if ((jsonObj.get("rowCount") != null && !jsonObj.get("rowCount").isJsonNull()) && !jsonObj.get("rowCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rowCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rowCount").toString()));
      }
      if (jsonObj.get("rules") != null && !jsonObj.get("rules").isJsonNull()) {
        JsonArray jsonArrayrules = jsonObj.getAsJsonArray("rules");
        if (jsonArrayrules != null) {
          // ensure the json data is an array
          if (!jsonObj.get("rules").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `rules` to be an array in the JSON string but got `%s`", jsonObj.get("rules").toString()));
          }

          // validate the optional field `rules` (array)
          for (int i = 0; i < jsonArrayrules.size(); i++) {
            GoogleCloudDataplexV1DataQualityRuleResult.validateJsonElement(jsonArrayrules.get(i));
          };
        }
      }
      // validate the optional field `scannedData`
      if (jsonObj.get("scannedData") != null && !jsonObj.get("scannedData").isJsonNull()) {
        GoogleCloudDataplexV1ScannedData.validateJsonElement(jsonObj.get("scannedData"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1DataQualityResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1DataQualityResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1DataQualityResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1DataQualityResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1DataQualityResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1DataQualityResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1DataQualityResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1DataQualityResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1DataQualityResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1DataQualityResult
   */
  public static GoogleCloudDataplexV1DataQualityResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1DataQualityResult.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1DataQualityResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

