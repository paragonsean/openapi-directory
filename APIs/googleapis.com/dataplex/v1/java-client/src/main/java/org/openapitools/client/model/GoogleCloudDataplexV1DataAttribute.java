/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDataplexV1DataAccessSpec;
import org.openapitools.client.model.GoogleCloudDataplexV1ResourceAccessSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Denotes one dataAttribute in a dataTaxonomy, for example, PII. DataAttribute resources can be defined in a hierarchy. A single dataAttribute resource can contain specs of multiple types PII - ResourceAccessSpec : - readers :foo@bar.com - DataAccessSpec : - readers :bar@foo.com 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1DataAttribute {
  public static final String SERIALIZED_NAME_ATTRIBUTE_COUNT = "attributeCount";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_COUNT)
  private Integer attributeCount;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DATA_ACCESS_SPEC = "dataAccessSpec";
  @SerializedName(SERIALIZED_NAME_DATA_ACCESS_SPEC)
  private GoogleCloudDataplexV1DataAccessSpec dataAccessSpec;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_RESOURCE_ACCESS_SPEC = "resourceAccessSpec";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ACCESS_SPEC)
  private GoogleCloudDataplexV1ResourceAccessSpec resourceAccessSpec;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudDataplexV1DataAttribute() {
  }

  public GoogleCloudDataplexV1DataAttribute(
     Integer attributeCount, 
     String createTime, 
     String name, 
     String uid, 
     String updateTime
  ) {
    this();
    this.attributeCount = attributeCount;
    this.createTime = createTime;
    this.name = name;
    this.uid = uid;
    this.updateTime = updateTime;
  }

  /**
   * Output only. The number of child attributes present for this attribute.
   * @return attributeCount
   */
  @javax.annotation.Nullable
  public Integer getAttributeCount() {
    return attributeCount;
  }



  /**
   * Output only. The time when the DataAttribute was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudDataplexV1DataAttribute dataAccessSpec(GoogleCloudDataplexV1DataAccessSpec dataAccessSpec) {
    this.dataAccessSpec = dataAccessSpec;
    return this;
  }

  /**
   * Get dataAccessSpec
   * @return dataAccessSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataAccessSpec getDataAccessSpec() {
    return dataAccessSpec;
  }

  public void setDataAccessSpec(GoogleCloudDataplexV1DataAccessSpec dataAccessSpec) {
    this.dataAccessSpec = dataAccessSpec;
  }


  public GoogleCloudDataplexV1DataAttribute description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. Description of the DataAttribute.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDataplexV1DataAttribute displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Optional. User friendly display name.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDataplexV1DataAttribute etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudDataplexV1DataAttribute labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudDataplexV1DataAttribute putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. User-defined labels for the DataAttribute.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  /**
   * Output only. The relative resource name of the dataAttribute, of the form: projects/{project_number}/locations/{location_id}/dataTaxonomies/{dataTaxonomy}/attributes/{data_attribute_id}.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudDataplexV1DataAttribute parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Optional. The ID of the parent DataAttribute resource, should belong to the same data taxonomy. Circular dependency in parent chain is not valid. Maximum depth of the hierarchy allowed is 4. a -&gt; b -&gt; c -&gt; d -&gt; e, depth &#x3D; 4
   * @return parentId
   */
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public GoogleCloudDataplexV1DataAttribute resourceAccessSpec(GoogleCloudDataplexV1ResourceAccessSpec resourceAccessSpec) {
    this.resourceAccessSpec = resourceAccessSpec;
    return this;
  }

  /**
   * Get resourceAccessSpec
   * @return resourceAccessSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1ResourceAccessSpec getResourceAccessSpec() {
    return resourceAccessSpec;
  }

  public void setResourceAccessSpec(GoogleCloudDataplexV1ResourceAccessSpec resourceAccessSpec) {
    this.resourceAccessSpec = resourceAccessSpec;
  }


  /**
   * Output only. System generated globally unique ID for the DataAttribute. This ID will be different if the DataAttribute is deleted and re-created with the same name.
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }



  /**
   * Output only. The time when the DataAttribute was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1DataAttribute googleCloudDataplexV1DataAttribute = (GoogleCloudDataplexV1DataAttribute) o;
    return Objects.equals(this.attributeCount, googleCloudDataplexV1DataAttribute.attributeCount) &&
        Objects.equals(this.createTime, googleCloudDataplexV1DataAttribute.createTime) &&
        Objects.equals(this.dataAccessSpec, googleCloudDataplexV1DataAttribute.dataAccessSpec) &&
        Objects.equals(this.description, googleCloudDataplexV1DataAttribute.description) &&
        Objects.equals(this.displayName, googleCloudDataplexV1DataAttribute.displayName) &&
        Objects.equals(this.etag, googleCloudDataplexV1DataAttribute.etag) &&
        Objects.equals(this.labels, googleCloudDataplexV1DataAttribute.labels) &&
        Objects.equals(this.name, googleCloudDataplexV1DataAttribute.name) &&
        Objects.equals(this.parentId, googleCloudDataplexV1DataAttribute.parentId) &&
        Objects.equals(this.resourceAccessSpec, googleCloudDataplexV1DataAttribute.resourceAccessSpec) &&
        Objects.equals(this.uid, googleCloudDataplexV1DataAttribute.uid) &&
        Objects.equals(this.updateTime, googleCloudDataplexV1DataAttribute.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeCount, createTime, dataAccessSpec, description, displayName, etag, labels, name, parentId, resourceAccessSpec, uid, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1DataAttribute {\n");
    sb.append("    attributeCount: ").append(toIndentedString(attributeCount)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dataAccessSpec: ").append(toIndentedString(dataAccessSpec)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    resourceAccessSpec: ").append(toIndentedString(resourceAccessSpec)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributeCount");
    openapiFields.add("createTime");
    openapiFields.add("dataAccessSpec");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("etag");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("parentId");
    openapiFields.add("resourceAccessSpec");
    openapiFields.add("uid");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1DataAttribute
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1DataAttribute.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1DataAttribute is not found in the empty JSON string", GoogleCloudDataplexV1DataAttribute.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1DataAttribute.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1DataAttribute` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `dataAccessSpec`
      if (jsonObj.get("dataAccessSpec") != null && !jsonObj.get("dataAccessSpec").isJsonNull()) {
        GoogleCloudDataplexV1DataAccessSpec.validateJsonElement(jsonObj.get("dataAccessSpec"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("parentId") != null && !jsonObj.get("parentId").isJsonNull()) && !jsonObj.get("parentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentId").toString()));
      }
      // validate the optional field `resourceAccessSpec`
      if (jsonObj.get("resourceAccessSpec") != null && !jsonObj.get("resourceAccessSpec").isJsonNull()) {
        GoogleCloudDataplexV1ResourceAccessSpec.validateJsonElement(jsonObj.get("resourceAccessSpec"));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1DataAttribute.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1DataAttribute' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1DataAttribute> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1DataAttribute.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1DataAttribute>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1DataAttribute value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1DataAttribute read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1DataAttribute given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1DataAttribute
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1DataAttribute
   */
  public static GoogleCloudDataplexV1DataAttribute fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1DataAttribute.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1DataAttribute to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

