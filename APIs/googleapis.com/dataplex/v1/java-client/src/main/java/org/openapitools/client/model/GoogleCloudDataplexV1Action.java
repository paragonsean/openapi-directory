/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDataplexV1ActionFailedSecurityPolicyApply;
import org.openapitools.client.model.GoogleCloudDataplexV1ActionIncompatibleDataSchema;
import org.openapitools.client.model.GoogleCloudDataplexV1ActionInvalidDataFormat;
import org.openapitools.client.model.GoogleCloudDataplexV1ActionInvalidDataPartition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Action represents an issue requiring administrator action for resolution.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1Action {
  public static final String SERIALIZED_NAME_ASSET = "asset";
  @SerializedName(SERIALIZED_NAME_ASSET)
  private String asset;

  /**
   * The category of issue associated with the action.
   */
  @JsonAdapter(CategoryEnum.Adapter.class)
  public enum CategoryEnum {
    CATEGORY_UNSPECIFIED("CATEGORY_UNSPECIFIED"),
    
    RESOURCE_MANAGEMENT("RESOURCE_MANAGEMENT"),
    
    SECURITY_POLICY("SECURITY_POLICY"),
    
    DATA_DISCOVERY("DATA_DISCOVERY");

    private String value;

    CategoryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CategoryEnum fromValue(String value) {
      for (CategoryEnum b : CategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CategoryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CategoryEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CategoryEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private CategoryEnum category;

  public static final String SERIALIZED_NAME_DATA_LOCATIONS = "dataLocations";
  @SerializedName(SERIALIZED_NAME_DATA_LOCATIONS)
  private List<String> dataLocations = new ArrayList<>();

  public static final String SERIALIZED_NAME_DETECT_TIME = "detectTime";
  @SerializedName(SERIALIZED_NAME_DETECT_TIME)
  private String detectTime;

  public static final String SERIALIZED_NAME_FAILED_SECURITY_POLICY_APPLY = "failedSecurityPolicyApply";
  @SerializedName(SERIALIZED_NAME_FAILED_SECURITY_POLICY_APPLY)
  private GoogleCloudDataplexV1ActionFailedSecurityPolicyApply failedSecurityPolicyApply;

  public static final String SERIALIZED_NAME_INCOMPATIBLE_DATA_SCHEMA = "incompatibleDataSchema";
  @SerializedName(SERIALIZED_NAME_INCOMPATIBLE_DATA_SCHEMA)
  private GoogleCloudDataplexV1ActionIncompatibleDataSchema incompatibleDataSchema;

  public static final String SERIALIZED_NAME_INVALID_DATA_FORMAT = "invalidDataFormat";
  @SerializedName(SERIALIZED_NAME_INVALID_DATA_FORMAT)
  private GoogleCloudDataplexV1ActionInvalidDataFormat invalidDataFormat;

  public static final String SERIALIZED_NAME_INVALID_DATA_ORGANIZATION = "invalidDataOrganization";
  @SerializedName(SERIALIZED_NAME_INVALID_DATA_ORGANIZATION)
  private Object invalidDataOrganization;

  public static final String SERIALIZED_NAME_INVALID_DATA_PARTITION = "invalidDataPartition";
  @SerializedName(SERIALIZED_NAME_INVALID_DATA_PARTITION)
  private GoogleCloudDataplexV1ActionInvalidDataPartition invalidDataPartition;

  public static final String SERIALIZED_NAME_ISSUE = "issue";
  @SerializedName(SERIALIZED_NAME_ISSUE)
  private String issue;

  public static final String SERIALIZED_NAME_LAKE = "lake";
  @SerializedName(SERIALIZED_NAME_LAKE)
  private String lake;

  public static final String SERIALIZED_NAME_MISSING_DATA = "missingData";
  @SerializedName(SERIALIZED_NAME_MISSING_DATA)
  private Object missingData;

  public static final String SERIALIZED_NAME_MISSING_RESOURCE = "missingResource";
  @SerializedName(SERIALIZED_NAME_MISSING_RESOURCE)
  private Object missingResource;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_UNAUTHORIZED_RESOURCE = "unauthorizedResource";
  @SerializedName(SERIALIZED_NAME_UNAUTHORIZED_RESOURCE)
  private Object unauthorizedResource;

  public static final String SERIALIZED_NAME_ZONE = "zone";
  @SerializedName(SERIALIZED_NAME_ZONE)
  private String zone;

  public GoogleCloudDataplexV1Action() {
  }

  public GoogleCloudDataplexV1Action(
     String asset, 
     String lake, 
     String name, 
     String zone
  ) {
    this();
    this.asset = asset;
    this.lake = lake;
    this.name = name;
    this.zone = zone;
  }

  /**
   * Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}.
   * @return asset
   */
  @javax.annotation.Nullable
  public String getAsset() {
    return asset;
  }



  public GoogleCloudDataplexV1Action category(CategoryEnum category) {
    this.category = category;
    return this;
  }

  /**
   * The category of issue associated with the action.
   * @return category
   */
  @javax.annotation.Nullable
  public CategoryEnum getCategory() {
    return category;
  }

  public void setCategory(CategoryEnum category) {
    this.category = category;
  }


  public GoogleCloudDataplexV1Action dataLocations(List<String> dataLocations) {
    this.dataLocations = dataLocations;
    return this;
  }

  public GoogleCloudDataplexV1Action addDataLocationsItem(String dataLocationsItem) {
    if (this.dataLocations == null) {
      this.dataLocations = new ArrayList<>();
    }
    this.dataLocations.add(dataLocationsItem);
    return this;
  }

  /**
   * The list of data locations associated with this action. Cloud Storage locations are represented as URI paths(E.g. gs://bucket/table1/year&#x3D;2020/month&#x3D;Jan/). BigQuery locations refer to resource names(E.g. bigquery.googleapis.com/projects/project-id/datasets/dataset-id).
   * @return dataLocations
   */
  @javax.annotation.Nullable
  public List<String> getDataLocations() {
    return dataLocations;
  }

  public void setDataLocations(List<String> dataLocations) {
    this.dataLocations = dataLocations;
  }


  public GoogleCloudDataplexV1Action detectTime(String detectTime) {
    this.detectTime = detectTime;
    return this;
  }

  /**
   * The time that the issue was detected.
   * @return detectTime
   */
  @javax.annotation.Nullable
  public String getDetectTime() {
    return detectTime;
  }

  public void setDetectTime(String detectTime) {
    this.detectTime = detectTime;
  }


  public GoogleCloudDataplexV1Action failedSecurityPolicyApply(GoogleCloudDataplexV1ActionFailedSecurityPolicyApply failedSecurityPolicyApply) {
    this.failedSecurityPolicyApply = failedSecurityPolicyApply;
    return this;
  }

  /**
   * Get failedSecurityPolicyApply
   * @return failedSecurityPolicyApply
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1ActionFailedSecurityPolicyApply getFailedSecurityPolicyApply() {
    return failedSecurityPolicyApply;
  }

  public void setFailedSecurityPolicyApply(GoogleCloudDataplexV1ActionFailedSecurityPolicyApply failedSecurityPolicyApply) {
    this.failedSecurityPolicyApply = failedSecurityPolicyApply;
  }


  public GoogleCloudDataplexV1Action incompatibleDataSchema(GoogleCloudDataplexV1ActionIncompatibleDataSchema incompatibleDataSchema) {
    this.incompatibleDataSchema = incompatibleDataSchema;
    return this;
  }

  /**
   * Get incompatibleDataSchema
   * @return incompatibleDataSchema
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1ActionIncompatibleDataSchema getIncompatibleDataSchema() {
    return incompatibleDataSchema;
  }

  public void setIncompatibleDataSchema(GoogleCloudDataplexV1ActionIncompatibleDataSchema incompatibleDataSchema) {
    this.incompatibleDataSchema = incompatibleDataSchema;
  }


  public GoogleCloudDataplexV1Action invalidDataFormat(GoogleCloudDataplexV1ActionInvalidDataFormat invalidDataFormat) {
    this.invalidDataFormat = invalidDataFormat;
    return this;
  }

  /**
   * Get invalidDataFormat
   * @return invalidDataFormat
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1ActionInvalidDataFormat getInvalidDataFormat() {
    return invalidDataFormat;
  }

  public void setInvalidDataFormat(GoogleCloudDataplexV1ActionInvalidDataFormat invalidDataFormat) {
    this.invalidDataFormat = invalidDataFormat;
  }


  public GoogleCloudDataplexV1Action invalidDataOrganization(Object invalidDataOrganization) {
    this.invalidDataOrganization = invalidDataOrganization;
    return this;
  }

  /**
   * Action details for invalid data arrangement.
   * @return invalidDataOrganization
   */
  @javax.annotation.Nullable
  public Object getInvalidDataOrganization() {
    return invalidDataOrganization;
  }

  public void setInvalidDataOrganization(Object invalidDataOrganization) {
    this.invalidDataOrganization = invalidDataOrganization;
  }


  public GoogleCloudDataplexV1Action invalidDataPartition(GoogleCloudDataplexV1ActionInvalidDataPartition invalidDataPartition) {
    this.invalidDataPartition = invalidDataPartition;
    return this;
  }

  /**
   * Get invalidDataPartition
   * @return invalidDataPartition
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1ActionInvalidDataPartition getInvalidDataPartition() {
    return invalidDataPartition;
  }

  public void setInvalidDataPartition(GoogleCloudDataplexV1ActionInvalidDataPartition invalidDataPartition) {
    this.invalidDataPartition = invalidDataPartition;
  }


  public GoogleCloudDataplexV1Action issue(String issue) {
    this.issue = issue;
    return this;
  }

  /**
   * Detailed description of the issue requiring action.
   * @return issue
   */
  @javax.annotation.Nullable
  public String getIssue() {
    return issue;
  }

  public void setIssue(String issue) {
    this.issue = issue;
  }


  /**
   * Output only. The relative resource name of the lake, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}.
   * @return lake
   */
  @javax.annotation.Nullable
  public String getLake() {
    return lake;
  }



  public GoogleCloudDataplexV1Action missingData(Object missingData) {
    this.missingData = missingData;
    return this;
  }

  /**
   * Action details for absence of data detected by discovery.
   * @return missingData
   */
  @javax.annotation.Nullable
  public Object getMissingData() {
    return missingData;
  }

  public void setMissingData(Object missingData) {
    this.missingData = missingData;
  }


  public GoogleCloudDataplexV1Action missingResource(Object missingResource) {
    this.missingResource = missingResource;
    return this;
  }

  /**
   * Action details for resource references in assets that cannot be located.
   * @return missingResource
   */
  @javax.annotation.Nullable
  public Object getMissingResource() {
    return missingResource;
  }

  public void setMissingResource(Object missingResource) {
    this.missingResource = missingResource;
  }


  /**
   * Output only. The relative resource name of the action, of the form: projects/{project}/locations/{location}/lakes/{lake}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action} projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudDataplexV1Action unauthorizedResource(Object unauthorizedResource) {
    this.unauthorizedResource = unauthorizedResource;
    return this;
  }

  /**
   * Action details for unauthorized resource issues raised to indicate that the service account associated with the lake instance is not authorized to access or manage the resource associated with an asset.
   * @return unauthorizedResource
   */
  @javax.annotation.Nullable
  public Object getUnauthorizedResource() {
    return unauthorizedResource;
  }

  public void setUnauthorizedResource(Object unauthorizedResource) {
    this.unauthorizedResource = unauthorizedResource;
  }


  /**
   * Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
   * @return zone
   */
  @javax.annotation.Nullable
  public String getZone() {
    return zone;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1Action googleCloudDataplexV1Action = (GoogleCloudDataplexV1Action) o;
    return Objects.equals(this.asset, googleCloudDataplexV1Action.asset) &&
        Objects.equals(this.category, googleCloudDataplexV1Action.category) &&
        Objects.equals(this.dataLocations, googleCloudDataplexV1Action.dataLocations) &&
        Objects.equals(this.detectTime, googleCloudDataplexV1Action.detectTime) &&
        Objects.equals(this.failedSecurityPolicyApply, googleCloudDataplexV1Action.failedSecurityPolicyApply) &&
        Objects.equals(this.incompatibleDataSchema, googleCloudDataplexV1Action.incompatibleDataSchema) &&
        Objects.equals(this.invalidDataFormat, googleCloudDataplexV1Action.invalidDataFormat) &&
        Objects.equals(this.invalidDataOrganization, googleCloudDataplexV1Action.invalidDataOrganization) &&
        Objects.equals(this.invalidDataPartition, googleCloudDataplexV1Action.invalidDataPartition) &&
        Objects.equals(this.issue, googleCloudDataplexV1Action.issue) &&
        Objects.equals(this.lake, googleCloudDataplexV1Action.lake) &&
        Objects.equals(this.missingData, googleCloudDataplexV1Action.missingData) &&
        Objects.equals(this.missingResource, googleCloudDataplexV1Action.missingResource) &&
        Objects.equals(this.name, googleCloudDataplexV1Action.name) &&
        Objects.equals(this.unauthorizedResource, googleCloudDataplexV1Action.unauthorizedResource) &&
        Objects.equals(this.zone, googleCloudDataplexV1Action.zone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asset, category, dataLocations, detectTime, failedSecurityPolicyApply, incompatibleDataSchema, invalidDataFormat, invalidDataOrganization, invalidDataPartition, issue, lake, missingData, missingResource, name, unauthorizedResource, zone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1Action {\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    dataLocations: ").append(toIndentedString(dataLocations)).append("\n");
    sb.append("    detectTime: ").append(toIndentedString(detectTime)).append("\n");
    sb.append("    failedSecurityPolicyApply: ").append(toIndentedString(failedSecurityPolicyApply)).append("\n");
    sb.append("    incompatibleDataSchema: ").append(toIndentedString(incompatibleDataSchema)).append("\n");
    sb.append("    invalidDataFormat: ").append(toIndentedString(invalidDataFormat)).append("\n");
    sb.append("    invalidDataOrganization: ").append(toIndentedString(invalidDataOrganization)).append("\n");
    sb.append("    invalidDataPartition: ").append(toIndentedString(invalidDataPartition)).append("\n");
    sb.append("    issue: ").append(toIndentedString(issue)).append("\n");
    sb.append("    lake: ").append(toIndentedString(lake)).append("\n");
    sb.append("    missingData: ").append(toIndentedString(missingData)).append("\n");
    sb.append("    missingResource: ").append(toIndentedString(missingResource)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    unauthorizedResource: ").append(toIndentedString(unauthorizedResource)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("asset");
    openapiFields.add("category");
    openapiFields.add("dataLocations");
    openapiFields.add("detectTime");
    openapiFields.add("failedSecurityPolicyApply");
    openapiFields.add("incompatibleDataSchema");
    openapiFields.add("invalidDataFormat");
    openapiFields.add("invalidDataOrganization");
    openapiFields.add("invalidDataPartition");
    openapiFields.add("issue");
    openapiFields.add("lake");
    openapiFields.add("missingData");
    openapiFields.add("missingResource");
    openapiFields.add("name");
    openapiFields.add("unauthorizedResource");
    openapiFields.add("zone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1Action
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1Action.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1Action is not found in the empty JSON string", GoogleCloudDataplexV1Action.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1Action.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1Action` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("asset") != null && !jsonObj.get("asset").isJsonNull()) && !jsonObj.get("asset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset").toString()));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      // validate the optional field `category`
      if (jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) {
        CategoryEnum.validateJsonElement(jsonObj.get("category"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dataLocations") != null && !jsonObj.get("dataLocations").isJsonNull() && !jsonObj.get("dataLocations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataLocations` to be an array in the JSON string but got `%s`", jsonObj.get("dataLocations").toString()));
      }
      if ((jsonObj.get("detectTime") != null && !jsonObj.get("detectTime").isJsonNull()) && !jsonObj.get("detectTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detectTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detectTime").toString()));
      }
      // validate the optional field `failedSecurityPolicyApply`
      if (jsonObj.get("failedSecurityPolicyApply") != null && !jsonObj.get("failedSecurityPolicyApply").isJsonNull()) {
        GoogleCloudDataplexV1ActionFailedSecurityPolicyApply.validateJsonElement(jsonObj.get("failedSecurityPolicyApply"));
      }
      // validate the optional field `incompatibleDataSchema`
      if (jsonObj.get("incompatibleDataSchema") != null && !jsonObj.get("incompatibleDataSchema").isJsonNull()) {
        GoogleCloudDataplexV1ActionIncompatibleDataSchema.validateJsonElement(jsonObj.get("incompatibleDataSchema"));
      }
      // validate the optional field `invalidDataFormat`
      if (jsonObj.get("invalidDataFormat") != null && !jsonObj.get("invalidDataFormat").isJsonNull()) {
        GoogleCloudDataplexV1ActionInvalidDataFormat.validateJsonElement(jsonObj.get("invalidDataFormat"));
      }
      // validate the optional field `invalidDataPartition`
      if (jsonObj.get("invalidDataPartition") != null && !jsonObj.get("invalidDataPartition").isJsonNull()) {
        GoogleCloudDataplexV1ActionInvalidDataPartition.validateJsonElement(jsonObj.get("invalidDataPartition"));
      }
      if ((jsonObj.get("issue") != null && !jsonObj.get("issue").isJsonNull()) && !jsonObj.get("issue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issue").toString()));
      }
      if ((jsonObj.get("lake") != null && !jsonObj.get("lake").isJsonNull()) && !jsonObj.get("lake").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lake` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lake").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("zone") != null && !jsonObj.get("zone").isJsonNull()) && !jsonObj.get("zone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1Action.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1Action' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1Action> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1Action.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1Action>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1Action value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1Action read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1Action given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1Action
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1Action
   */
  public static GoogleCloudDataplexV1Action fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1Action.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1Action to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

