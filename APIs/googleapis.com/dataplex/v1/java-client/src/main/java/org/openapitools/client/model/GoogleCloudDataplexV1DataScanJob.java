/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDataplexV1DataProfileResult;
import org.openapitools.client.model.GoogleCloudDataplexV1DataProfileSpec;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualityResult;
import org.openapitools.client.model.GoogleCloudDataplexV1DataQualitySpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A DataScanJob represents an instance of DataScan execution.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:46:09.858800-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDataplexV1DataScanJob {
  public static final String SERIALIZED_NAME_DATA_PROFILE_RESULT = "dataProfileResult";
  @SerializedName(SERIALIZED_NAME_DATA_PROFILE_RESULT)
  private GoogleCloudDataplexV1DataProfileResult dataProfileResult;

  public static final String SERIALIZED_NAME_DATA_PROFILE_SPEC = "dataProfileSpec";
  @SerializedName(SERIALIZED_NAME_DATA_PROFILE_SPEC)
  private GoogleCloudDataplexV1DataProfileSpec dataProfileSpec;

  public static final String SERIALIZED_NAME_DATA_QUALITY_RESULT = "dataQualityResult";
  @SerializedName(SERIALIZED_NAME_DATA_QUALITY_RESULT)
  private GoogleCloudDataplexV1DataQualityResult dataQualityResult;

  public static final String SERIALIZED_NAME_DATA_QUALITY_SPEC = "dataQualitySpec";
  @SerializedName(SERIALIZED_NAME_DATA_QUALITY_SPEC)
  private GoogleCloudDataplexV1DataQualitySpec dataQualitySpec;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * Output only. Execution state for the DataScanJob.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    RUNNING("RUNNING"),
    
    CANCELING("CANCELING"),
    
    CANCELLED("CANCELLED"),
    
    SUCCEEDED("SUCCEEDED"),
    
    FAILED("FAILED"),
    
    PENDING("PENDING");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  /**
   * Output only. The type of the parent DataScan.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    SCAN_TYPE_UNSPECIFIED("DATA_SCAN_TYPE_UNSPECIFIED"),
    
    QUALITY("DATA_QUALITY"),
    
    PROFILE("DATA_PROFILE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public GoogleCloudDataplexV1DataScanJob() {
  }

  public GoogleCloudDataplexV1DataScanJob(
     String endTime, 
     String message, 
     String name, 
     String startTime, 
     StateEnum state, 
     TypeEnum type, 
     String uid
  ) {
    this();
    this.endTime = endTime;
    this.message = message;
    this.name = name;
    this.startTime = startTime;
    this.state = state;
    this.type = type;
    this.uid = uid;
  }

  public GoogleCloudDataplexV1DataScanJob dataProfileResult(GoogleCloudDataplexV1DataProfileResult dataProfileResult) {
    this.dataProfileResult = dataProfileResult;
    return this;
  }

  /**
   * Get dataProfileResult
   * @return dataProfileResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataProfileResult getDataProfileResult() {
    return dataProfileResult;
  }

  public void setDataProfileResult(GoogleCloudDataplexV1DataProfileResult dataProfileResult) {
    this.dataProfileResult = dataProfileResult;
  }


  public GoogleCloudDataplexV1DataScanJob dataProfileSpec(GoogleCloudDataplexV1DataProfileSpec dataProfileSpec) {
    this.dataProfileSpec = dataProfileSpec;
    return this;
  }

  /**
   * Get dataProfileSpec
   * @return dataProfileSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataProfileSpec getDataProfileSpec() {
    return dataProfileSpec;
  }

  public void setDataProfileSpec(GoogleCloudDataplexV1DataProfileSpec dataProfileSpec) {
    this.dataProfileSpec = dataProfileSpec;
  }


  public GoogleCloudDataplexV1DataScanJob dataQualityResult(GoogleCloudDataplexV1DataQualityResult dataQualityResult) {
    this.dataQualityResult = dataQualityResult;
    return this;
  }

  /**
   * Get dataQualityResult
   * @return dataQualityResult
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualityResult getDataQualityResult() {
    return dataQualityResult;
  }

  public void setDataQualityResult(GoogleCloudDataplexV1DataQualityResult dataQualityResult) {
    this.dataQualityResult = dataQualityResult;
  }


  public GoogleCloudDataplexV1DataScanJob dataQualitySpec(GoogleCloudDataplexV1DataQualitySpec dataQualitySpec) {
    this.dataQualitySpec = dataQualitySpec;
    return this;
  }

  /**
   * Get dataQualitySpec
   * @return dataQualitySpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDataplexV1DataQualitySpec getDataQualitySpec() {
    return dataQualitySpec;
  }

  public void setDataQualitySpec(GoogleCloudDataplexV1DataQualitySpec dataQualitySpec) {
    this.dataQualitySpec = dataQualitySpec;
  }


  /**
   * Output only. The time when the DataScanJob ended.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }



  /**
   * Output only. Additional information about the current state.
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }



  /**
   * Output only. The relative resource name of the DataScanJob, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}/jobs/{job_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. The time when the DataScanJob was started.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }



  /**
   * Output only. Execution state for the DataScanJob.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  /**
   * Output only. The type of the parent DataScan.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }



  /**
   * Output only. System generated globally unique ID for the DataScanJob.
   * @return uid
   */
  @javax.annotation.Nullable
  public String getUid() {
    return uid;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDataplexV1DataScanJob googleCloudDataplexV1DataScanJob = (GoogleCloudDataplexV1DataScanJob) o;
    return Objects.equals(this.dataProfileResult, googleCloudDataplexV1DataScanJob.dataProfileResult) &&
        Objects.equals(this.dataProfileSpec, googleCloudDataplexV1DataScanJob.dataProfileSpec) &&
        Objects.equals(this.dataQualityResult, googleCloudDataplexV1DataScanJob.dataQualityResult) &&
        Objects.equals(this.dataQualitySpec, googleCloudDataplexV1DataScanJob.dataQualitySpec) &&
        Objects.equals(this.endTime, googleCloudDataplexV1DataScanJob.endTime) &&
        Objects.equals(this.message, googleCloudDataplexV1DataScanJob.message) &&
        Objects.equals(this.name, googleCloudDataplexV1DataScanJob.name) &&
        Objects.equals(this.startTime, googleCloudDataplexV1DataScanJob.startTime) &&
        Objects.equals(this.state, googleCloudDataplexV1DataScanJob.state) &&
        Objects.equals(this.type, googleCloudDataplexV1DataScanJob.type) &&
        Objects.equals(this.uid, googleCloudDataplexV1DataScanJob.uid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataProfileResult, dataProfileSpec, dataQualityResult, dataQualitySpec, endTime, message, name, startTime, state, type, uid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDataplexV1DataScanJob {\n");
    sb.append("    dataProfileResult: ").append(toIndentedString(dataProfileResult)).append("\n");
    sb.append("    dataProfileSpec: ").append(toIndentedString(dataProfileSpec)).append("\n");
    sb.append("    dataQualityResult: ").append(toIndentedString(dataQualityResult)).append("\n");
    sb.append("    dataQualitySpec: ").append(toIndentedString(dataQualitySpec)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataProfileResult");
    openapiFields.add("dataProfileSpec");
    openapiFields.add("dataQualityResult");
    openapiFields.add("dataQualitySpec");
    openapiFields.add("endTime");
    openapiFields.add("message");
    openapiFields.add("name");
    openapiFields.add("startTime");
    openapiFields.add("state");
    openapiFields.add("type");
    openapiFields.add("uid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDataplexV1DataScanJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDataplexV1DataScanJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDataplexV1DataScanJob is not found in the empty JSON string", GoogleCloudDataplexV1DataScanJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDataplexV1DataScanJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDataplexV1DataScanJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dataProfileResult`
      if (jsonObj.get("dataProfileResult") != null && !jsonObj.get("dataProfileResult").isJsonNull()) {
        GoogleCloudDataplexV1DataProfileResult.validateJsonElement(jsonObj.get("dataProfileResult"));
      }
      // validate the optional field `dataProfileSpec`
      if (jsonObj.get("dataProfileSpec") != null && !jsonObj.get("dataProfileSpec").isJsonNull()) {
        GoogleCloudDataplexV1DataProfileSpec.validateJsonElement(jsonObj.get("dataProfileSpec"));
      }
      // validate the optional field `dataQualityResult`
      if (jsonObj.get("dataQualityResult") != null && !jsonObj.get("dataQualityResult").isJsonNull()) {
        GoogleCloudDataplexV1DataQualityResult.validateJsonElement(jsonObj.get("dataQualityResult"));
      }
      // validate the optional field `dataQualitySpec`
      if (jsonObj.get("dataQualitySpec") != null && !jsonObj.get("dataQualitySpec").isJsonNull()) {
        GoogleCloudDataplexV1DataQualitySpec.validateJsonElement(jsonObj.get("dataQualitySpec"));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      if ((jsonObj.get("uid") != null && !jsonObj.get("uid").isJsonNull()) && !jsonObj.get("uid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDataplexV1DataScanJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDataplexV1DataScanJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDataplexV1DataScanJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDataplexV1DataScanJob.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDataplexV1DataScanJob>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDataplexV1DataScanJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDataplexV1DataScanJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDataplexV1DataScanJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDataplexV1DataScanJob
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDataplexV1DataScanJob
   */
  public static GoogleCloudDataplexV1DataScanJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDataplexV1DataScanJob.class);
  }

  /**
   * Convert an instance of GoogleCloudDataplexV1DataScanJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

