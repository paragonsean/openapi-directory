/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleCloudDataplexV1Asset;
import org.openapitools.client.model.GoogleCloudDataplexV1Content;
import org.openapitools.client.model.GoogleCloudDataplexV1DataAttribute;
import org.openapitools.client.model.GoogleCloudDataplexV1DataAttributeBinding;
import org.openapitools.client.model.GoogleCloudDataplexV1DataScan;
import org.openapitools.client.model.GoogleCloudDataplexV1DataTaxonomy;
import org.openapitools.client.model.GoogleCloudDataplexV1Entity;
import org.openapitools.client.model.GoogleCloudDataplexV1Environment;
import org.openapitools.client.model.GoogleCloudDataplexV1Lake;
import org.openapitools.client.model.GoogleCloudDataplexV1ListActionsResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListAssetsResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListContentResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListDataAttributeBindingsResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListDataAttributesResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListDataScansResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListDataTaxonomiesResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListEntitiesResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListEnvironmentsResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListJobsResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListLakesResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListPartitionsResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListSessionsResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListTasksResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1ListZonesResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1Partition;
import org.openapitools.client.model.GoogleCloudDataplexV1RunTaskRequest;
import org.openapitools.client.model.GoogleCloudDataplexV1RunTaskResponse;
import org.openapitools.client.model.GoogleCloudDataplexV1Task;
import org.openapitools.client.model.GoogleCloudDataplexV1Zone;
import org.openapitools.client.model.GoogleCloudLocationListLocationsResponse;
import org.openapitools.client.model.GoogleIamV1Policy;
import org.openapitools.client.model.GoogleIamV1SetIamPolicyRequest;
import org.openapitools.client.model.GoogleIamV1TestIamPermissionsRequest;
import org.openapitools.client.model.GoogleIamV1TestIamPermissionsResponse;
import org.openapitools.client.model.GoogleLongrunningListOperationsResponse;
import org.openapitools.client.model.GoogleLongrunningOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Create a DataAttributeBinding resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsDataAttributeBindingsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String dataAttributeBindingId = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1DataAttributeBinding googleCloudDataplexV1DataAttributeBinding = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsDataAttributeBindingsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dataAttributeBindingId, validateOnly, googleCloudDataplexV1DataAttributeBinding);
        // TODO: test validations
    }

    /**
     * Lists DataAttributeBinding resources in a project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsDataAttributeBindingsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListDataAttributeBindingsResponse response = api.dataplexProjectsLocationsDataAttributeBindingsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a DataScan resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsDataScansCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String dataScanId = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1DataScan googleCloudDataplexV1DataScan = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsDataScansCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dataScanId, validateOnly, googleCloudDataplexV1DataScan);
        // TODO: test validations
    }

    /**
     * Lists DataScans.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsDataScansListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListDataScansResponse response = api.dataplexProjectsLocationsDataScansList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Create a DataAttribute resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsDataTaxonomiesAttributesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String dataAttributeId = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1DataAttribute googleCloudDataplexV1DataAttribute = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsDataTaxonomiesAttributesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dataAttributeId, validateOnly, googleCloudDataplexV1DataAttribute);
        // TODO: test validations
    }

    /**
     * Lists Data Attribute resources in a DataTaxonomy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsDataTaxonomiesAttributesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListDataAttributesResponse response = api.dataplexProjectsLocationsDataTaxonomiesAttributesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Create a DataTaxonomy resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsDataTaxonomiesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String dataTaxonomyId = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1DataTaxonomy googleCloudDataplexV1DataTaxonomy = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsDataTaxonomiesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, dataTaxonomyId, validateOnly, googleCloudDataplexV1DataTaxonomy);
        // TODO: test validations
    }

    /**
     * Lists DataTaxonomy resources in a project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsDataTaxonomiesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListDataTaxonomiesResponse response = api.dataplexProjectsLocationsDataTaxonomiesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Create a content.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesContentCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Content googleCloudDataplexV1Content = null;
        GoogleCloudDataplexV1Content response = api.dataplexProjectsLocationsLakesContentCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, googleCloudDataplexV1Content);
        // TODO: test validations
    }

    /**
     * List content.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesContentListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListContentResponse response = api.dataplexProjectsLocationsLakesContentList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Create a content.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesContentitemsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Content googleCloudDataplexV1Content = null;
        GoogleCloudDataplexV1Content response = api.dataplexProjectsLocationsLakesContentitemsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, googleCloudDataplexV1Content);
        // TODO: test validations
    }

    /**
     * List content.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesContentitemsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListContentResponse response = api.dataplexProjectsLocationsLakesContentitemsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a lake resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String lakeId = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Lake googleCloudDataplexV1Lake = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsLakesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, lakeId, validateOnly, googleCloudDataplexV1Lake);
        // TODO: test validations
    }

    /**
     * Create an environment resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesEnvironmentsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String environmentId = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Environment googleCloudDataplexV1Environment = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsLakesEnvironmentsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, environmentId, validateOnly, googleCloudDataplexV1Environment);
        // TODO: test validations
    }

    /**
     * Lists environments under the given lake.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesEnvironmentsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListEnvironmentsResponse response = api.dataplexProjectsLocationsLakesEnvironmentsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists session resources in an environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesEnvironmentsSessionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListSessionsResponse response = api.dataplexProjectsLocationsLakesEnvironmentsSessionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists lake resources in a project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListLakesResponse response = api.dataplexProjectsLocationsLakesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a task resource within a lake.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesTasksCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String taskId = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Task googleCloudDataplexV1Task = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsLakesTasksCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, taskId, validateOnly, googleCloudDataplexV1Task);
        // TODO: test validations
    }

    /**
     * Lists Jobs under the given task.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesTasksJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListJobsResponse response = api.dataplexProjectsLocationsLakesTasksJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists tasks under the given lake.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesTasksListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListTasksResponse response = api.dataplexProjectsLocationsLakesTasksList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Run an on demand execution of a Task.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesTasksRunTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDataplexV1RunTaskRequest googleCloudDataplexV1RunTaskRequest = null;
        GoogleCloudDataplexV1RunTaskResponse response = api.dataplexProjectsLocationsLakesTasksRun(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDataplexV1RunTaskRequest);
        // TODO: test validations
    }

    /**
     * Lists action resources in an asset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesAssetsActionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListActionsResponse response = api.dataplexProjectsLocationsLakesZonesAssetsActionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates an asset resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesAssetsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String assetId = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Asset googleCloudDataplexV1Asset = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsLakesZonesAssetsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, assetId, validateOnly, googleCloudDataplexV1Asset);
        // TODO: test validations
    }

    /**
     * Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesAssetsGetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer optionsRequestedPolicyVersion = null;
        GoogleIamV1Policy response = api.dataplexProjectsLocationsLakesZonesAssetsGetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, optionsRequestedPolicyVersion);
        // TODO: test validations
    }

    /**
     * Lists asset resources in a zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesAssetsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListAssetsResponse response = api.dataplexProjectsLocationsLakesZonesAssetsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates an asset resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesAssetsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Asset googleCloudDataplexV1Asset = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsLakesZonesAssetsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, validateOnly, googleCloudDataplexV1Asset);
        // TODO: test validations
    }

    /**
     * Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesAssetsSetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleIamV1SetIamPolicyRequest googleIamV1SetIamPolicyRequest = null;
        GoogleIamV1Policy response = api.dataplexProjectsLocationsLakesZonesAssetsSetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV1SetIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \&quot;fail open\&quot; without warning.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesAssetsTestIamPermissionsTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleIamV1TestIamPermissionsRequest googleIamV1TestIamPermissionsRequest = null;
        GoogleIamV1TestIamPermissionsResponse response = api.dataplexProjectsLocationsLakesZonesAssetsTestIamPermissions(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV1TestIamPermissionsRequest);
        // TODO: test validations
    }

    /**
     * Creates a zone resource within a lake.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        String zoneId = null;
        GoogleCloudDataplexV1Zone googleCloudDataplexV1Zone = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsLakesZonesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, zoneId, googleCloudDataplexV1Zone);
        // TODO: test validations
    }

    /**
     * Create a metadata entity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesEntitiesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Entity googleCloudDataplexV1Entity = null;
        GoogleCloudDataplexV1Entity response = api.dataplexProjectsLocationsLakesZonesEntitiesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, googleCloudDataplexV1Entity);
        // TODO: test validations
    }

    /**
     * List metadata entities in a zone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesEntitiesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String view = null;
        GoogleCloudDataplexV1ListEntitiesResponse response = api.dataplexProjectsLocationsLakesZonesEntitiesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, view);
        // TODO: test validations
    }

    /**
     * Create a metadata partition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesEntitiesPartitionsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Partition googleCloudDataplexV1Partition = null;
        GoogleCloudDataplexV1Partition response = api.dataplexProjectsLocationsLakesZonesEntitiesPartitionsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, googleCloudDataplexV1Partition);
        // TODO: test validations
    }

    /**
     * List metadata partitions of an entity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesEntitiesPartitionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListPartitionsResponse response = api.dataplexProjectsLocationsLakesZonesEntitiesPartitionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Update a metadata entity. Only supports full resource update.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesEntitiesUpdateTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean validateOnly = null;
        GoogleCloudDataplexV1Entity googleCloudDataplexV1Entity = null;
        GoogleCloudDataplexV1Entity response = api.dataplexProjectsLocationsLakesZonesEntitiesUpdate(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, validateOnly, googleCloudDataplexV1Entity);
        // TODO: test validations
    }

    /**
     * Lists zone resources in a lake.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsLakesZonesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDataplexV1ListZonesResponse response = api.dataplexProjectsLocationsLakesZonesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists information about the supported locations for this service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudLocationListLocationsResponse response = api.dataplexProjectsLocationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn&#39;t support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsOperationsCancelTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.dataplexProjectsLocationsOperationsCancel(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn&#39;t support this method, it returns google.rpc.Code.UNIMPLEMENTED.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsOperationsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String etag = null;
        Object response = api.dataplexProjectsLocationsOperationsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, etag);
        // TODO: test validations
    }

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsOperationsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String view = null;
        GoogleLongrunningOperation response = api.dataplexProjectsLocationsOperationsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, view);
        // TODO: test validations
    }

    /**
     * Lists operations that match the specified filter in the request. If the server doesn&#39;t support this method, it returns UNIMPLEMENTED.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataplexProjectsLocationsOperationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleLongrunningListOperationsResponse response = api.dataplexProjectsLocationsOperationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

}
