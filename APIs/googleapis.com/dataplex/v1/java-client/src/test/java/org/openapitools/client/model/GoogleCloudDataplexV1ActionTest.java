/*
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDataplexV1ActionFailedSecurityPolicyApply;
import org.openapitools.client.model.GoogleCloudDataplexV1ActionIncompatibleDataSchema;
import org.openapitools.client.model.GoogleCloudDataplexV1ActionInvalidDataFormat;
import org.openapitools.client.model.GoogleCloudDataplexV1ActionInvalidDataPartition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudDataplexV1Action
 */
public class GoogleCloudDataplexV1ActionTest {
    private final GoogleCloudDataplexV1Action model = new GoogleCloudDataplexV1Action();

    /**
     * Model tests for GoogleCloudDataplexV1Action
     */
    @Test
    public void testGoogleCloudDataplexV1Action() {
        // TODO: test GoogleCloudDataplexV1Action
    }

    /**
     * Test the property 'asset'
     */
    @Test
    public void assetTest() {
        // TODO: test asset
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'dataLocations'
     */
    @Test
    public void dataLocationsTest() {
        // TODO: test dataLocations
    }

    /**
     * Test the property 'detectTime'
     */
    @Test
    public void detectTimeTest() {
        // TODO: test detectTime
    }

    /**
     * Test the property 'failedSecurityPolicyApply'
     */
    @Test
    public void failedSecurityPolicyApplyTest() {
        // TODO: test failedSecurityPolicyApply
    }

    /**
     * Test the property 'incompatibleDataSchema'
     */
    @Test
    public void incompatibleDataSchemaTest() {
        // TODO: test incompatibleDataSchema
    }

    /**
     * Test the property 'invalidDataFormat'
     */
    @Test
    public void invalidDataFormatTest() {
        // TODO: test invalidDataFormat
    }

    /**
     * Test the property 'invalidDataOrganization'
     */
    @Test
    public void invalidDataOrganizationTest() {
        // TODO: test invalidDataOrganization
    }

    /**
     * Test the property 'invalidDataPartition'
     */
    @Test
    public void invalidDataPartitionTest() {
        // TODO: test invalidDataPartition
    }

    /**
     * Test the property 'issue'
     */
    @Test
    public void issueTest() {
        // TODO: test issue
    }

    /**
     * Test the property 'lake'
     */
    @Test
    public void lakeTest() {
        // TODO: test lake
    }

    /**
     * Test the property 'missingData'
     */
    @Test
    public void missingDataTest() {
        // TODO: test missingData
    }

    /**
     * Test the property 'missingResource'
     */
    @Test
    public void missingResourceTest() {
        // TODO: test missingResource
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'unauthorizedResource'
     */
    @Test
    public void unauthorizedResourceTest() {
        // TODO: test unauthorizedResource
    }

    /**
     * Test the property 'zone'
     */
    @Test
    public void zoneTest() {
        // TODO: test zone
    }

}
