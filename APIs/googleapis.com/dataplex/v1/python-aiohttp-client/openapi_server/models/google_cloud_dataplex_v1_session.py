# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1Session(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, name: str=None, state: str=None, user_id: str=None):
        """GoogleCloudDataplexV1Session - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDataplexV1Session.
        :param name: The name of this GoogleCloudDataplexV1Session.
        :param state: The state of this GoogleCloudDataplexV1Session.
        :param user_id: The user_id of this GoogleCloudDataplexV1Session.
        """
        self.openapi_types = {
            'create_time': str,
            'name': str,
            'state': str,
            'user_id': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'name': 'name',
            'state': 'state',
            'user_id': 'userId'
        }

        self._create_time = create_time
        self._name = name
        self._state = state
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1Session':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1Session of this GoogleCloudDataplexV1Session.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDataplexV1Session.

        Output only. Session start time.

        :return: The create_time of this GoogleCloudDataplexV1Session.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDataplexV1Session.

        Output only. Session start time.

        :param create_time: The create_time of this GoogleCloudDataplexV1Session.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def name(self):
        """Gets the name of this GoogleCloudDataplexV1Session.

        Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}

        :return: The name of this GoogleCloudDataplexV1Session.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDataplexV1Session.

        Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}

        :param name: The name of this GoogleCloudDataplexV1Session.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleCloudDataplexV1Session.

        Output only. State of Session

        :return: The state of this GoogleCloudDataplexV1Session.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDataplexV1Session.

        Output only. State of Session

        :param state: The state of this GoogleCloudDataplexV1Session.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "ACTIVE", "CREATING", "DELETING", "ACTION_REQUIRED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def user_id(self):
        """Gets the user_id of this GoogleCloudDataplexV1Session.

        Output only. Email of user running the session.

        :return: The user_id of this GoogleCloudDataplexV1Session.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this GoogleCloudDataplexV1Session.

        Output only. Email of user running the session.

        :param user_id: The user_id of this GoogleCloudDataplexV1Session.
        :type user_id: str
        """

        self._user_id = user_id
