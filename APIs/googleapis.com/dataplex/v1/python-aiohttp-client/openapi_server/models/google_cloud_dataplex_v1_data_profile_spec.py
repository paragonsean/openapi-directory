# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_data_profile_spec_post_scan_actions import GoogleCloudDataplexV1DataProfileSpecPostScanActions
from openapi_server.models.google_cloud_dataplex_v1_data_profile_spec_selected_fields import GoogleCloudDataplexV1DataProfileSpecSelectedFields
from openapi_server import util


class GoogleCloudDataplexV1DataProfileSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclude_fields: GoogleCloudDataplexV1DataProfileSpecSelectedFields=None, include_fields: GoogleCloudDataplexV1DataProfileSpecSelectedFields=None, post_scan_actions: GoogleCloudDataplexV1DataProfileSpecPostScanActions=None, row_filter: str=None, sampling_percent: float=None):
        """GoogleCloudDataplexV1DataProfileSpec - a model defined in OpenAPI

        :param exclude_fields: The exclude_fields of this GoogleCloudDataplexV1DataProfileSpec.
        :param include_fields: The include_fields of this GoogleCloudDataplexV1DataProfileSpec.
        :param post_scan_actions: The post_scan_actions of this GoogleCloudDataplexV1DataProfileSpec.
        :param row_filter: The row_filter of this GoogleCloudDataplexV1DataProfileSpec.
        :param sampling_percent: The sampling_percent of this GoogleCloudDataplexV1DataProfileSpec.
        """
        self.openapi_types = {
            'exclude_fields': GoogleCloudDataplexV1DataProfileSpecSelectedFields,
            'include_fields': GoogleCloudDataplexV1DataProfileSpecSelectedFields,
            'post_scan_actions': GoogleCloudDataplexV1DataProfileSpecPostScanActions,
            'row_filter': str,
            'sampling_percent': float
        }

        self.attribute_map = {
            'exclude_fields': 'excludeFields',
            'include_fields': 'includeFields',
            'post_scan_actions': 'postScanActions',
            'row_filter': 'rowFilter',
            'sampling_percent': 'samplingPercent'
        }

        self._exclude_fields = exclude_fields
        self._include_fields = include_fields
        self._post_scan_actions = post_scan_actions
        self._row_filter = row_filter
        self._sampling_percent = sampling_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DataProfileSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DataProfileSpec of this GoogleCloudDataplexV1DataProfileSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclude_fields(self):
        """Gets the exclude_fields of this GoogleCloudDataplexV1DataProfileSpec.


        :return: The exclude_fields of this GoogleCloudDataplexV1DataProfileSpec.
        :rtype: GoogleCloudDataplexV1DataProfileSpecSelectedFields
        """
        return self._exclude_fields

    @exclude_fields.setter
    def exclude_fields(self, exclude_fields):
        """Sets the exclude_fields of this GoogleCloudDataplexV1DataProfileSpec.


        :param exclude_fields: The exclude_fields of this GoogleCloudDataplexV1DataProfileSpec.
        :type exclude_fields: GoogleCloudDataplexV1DataProfileSpecSelectedFields
        """

        self._exclude_fields = exclude_fields

    @property
    def include_fields(self):
        """Gets the include_fields of this GoogleCloudDataplexV1DataProfileSpec.


        :return: The include_fields of this GoogleCloudDataplexV1DataProfileSpec.
        :rtype: GoogleCloudDataplexV1DataProfileSpecSelectedFields
        """
        return self._include_fields

    @include_fields.setter
    def include_fields(self, include_fields):
        """Sets the include_fields of this GoogleCloudDataplexV1DataProfileSpec.


        :param include_fields: The include_fields of this GoogleCloudDataplexV1DataProfileSpec.
        :type include_fields: GoogleCloudDataplexV1DataProfileSpecSelectedFields
        """

        self._include_fields = include_fields

    @property
    def post_scan_actions(self):
        """Gets the post_scan_actions of this GoogleCloudDataplexV1DataProfileSpec.


        :return: The post_scan_actions of this GoogleCloudDataplexV1DataProfileSpec.
        :rtype: GoogleCloudDataplexV1DataProfileSpecPostScanActions
        """
        return self._post_scan_actions

    @post_scan_actions.setter
    def post_scan_actions(self, post_scan_actions):
        """Sets the post_scan_actions of this GoogleCloudDataplexV1DataProfileSpec.


        :param post_scan_actions: The post_scan_actions of this GoogleCloudDataplexV1DataProfileSpec.
        :type post_scan_actions: GoogleCloudDataplexV1DataProfileSpecPostScanActions
        """

        self._post_scan_actions = post_scan_actions

    @property
    def row_filter(self):
        """Gets the row_filter of this GoogleCloudDataplexV1DataProfileSpec.

        Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10

        :return: The row_filter of this GoogleCloudDataplexV1DataProfileSpec.
        :rtype: str
        """
        return self._row_filter

    @row_filter.setter
    def row_filter(self, row_filter):
        """Sets the row_filter of this GoogleCloudDataplexV1DataProfileSpec.

        Optional. A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 >= 0 AND col2 < 10

        :param row_filter: The row_filter of this GoogleCloudDataplexV1DataProfileSpec.
        :type row_filter: str
        """

        self._row_filter = row_filter

    @property
    def sampling_percent(self):
        """Gets the sampling_percent of this GoogleCloudDataplexV1DataProfileSpec.

        Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.

        :return: The sampling_percent of this GoogleCloudDataplexV1DataProfileSpec.
        :rtype: float
        """
        return self._sampling_percent

    @sampling_percent.setter
    def sampling_percent(self, sampling_percent):
        """Sets the sampling_percent of this GoogleCloudDataplexV1DataProfileSpec.

        Optional. The percentage of the records to be selected from the dataset for DataScan. Value can range between 0.0 and 100.0 with up to 3 significant decimal digits. Sampling is not applied if sampling_percent is not specified, 0 or 100.

        :param sampling_percent: The sampling_percent of this GoogleCloudDataplexV1DataProfileSpec.
        :type sampling_percent: float
        """

        self._sampling_percent = sampling_percent
