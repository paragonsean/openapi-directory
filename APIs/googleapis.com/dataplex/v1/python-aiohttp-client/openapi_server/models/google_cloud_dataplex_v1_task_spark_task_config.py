# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_task_infrastructure_spec import GoogleCloudDataplexV1TaskInfrastructureSpec
from openapi_server import util


class GoogleCloudDataplexV1TaskSparkTaskConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archive_uris: List[str]=None, file_uris: List[str]=None, infrastructure_spec: GoogleCloudDataplexV1TaskInfrastructureSpec=None, main_class: str=None, main_jar_file_uri: str=None, python_script_file: str=None, sql_script: str=None, sql_script_file: str=None):
        """GoogleCloudDataplexV1TaskSparkTaskConfig - a model defined in OpenAPI

        :param archive_uris: The archive_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :param file_uris: The file_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :param infrastructure_spec: The infrastructure_spec of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :param main_class: The main_class of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :param main_jar_file_uri: The main_jar_file_uri of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :param python_script_file: The python_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :param sql_script: The sql_script of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :param sql_script_file: The sql_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        """
        self.openapi_types = {
            'archive_uris': List[str],
            'file_uris': List[str],
            'infrastructure_spec': GoogleCloudDataplexV1TaskInfrastructureSpec,
            'main_class': str,
            'main_jar_file_uri': str,
            'python_script_file': str,
            'sql_script': str,
            'sql_script_file': str
        }

        self.attribute_map = {
            'archive_uris': 'archiveUris',
            'file_uris': 'fileUris',
            'infrastructure_spec': 'infrastructureSpec',
            'main_class': 'mainClass',
            'main_jar_file_uri': 'mainJarFileUri',
            'python_script_file': 'pythonScriptFile',
            'sql_script': 'sqlScript',
            'sql_script_file': 'sqlScriptFile'
        }

        self._archive_uris = archive_uris
        self._file_uris = file_uris
        self._infrastructure_spec = infrastructure_spec
        self._main_class = main_class
        self._main_jar_file_uri = main_jar_file_uri
        self._python_script_file = python_script_file
        self._sql_script = sql_script
        self._sql_script_file = sql_script_file

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1TaskSparkTaskConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1TaskSparkTaskConfig of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archive_uris(self):
        """Gets the archive_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.

        :return: The archive_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :rtype: List[str]
        """
        return self._archive_uris

    @archive_uris.setter
    def archive_uris(self, archive_uris):
        """Sets the archive_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.

        :param archive_uris: The archive_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :type archive_uris: List[str]
        """

        self._archive_uris = archive_uris

    @property
    def file_uris(self):
        """Gets the file_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.

        :return: The file_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :rtype: List[str]
        """
        return self._file_uris

    @file_uris.setter
    def file_uris(self, file_uris):
        """Sets the file_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.

        :param file_uris: The file_uris of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :type file_uris: List[str]
        """

        self._file_uris = file_uris

    @property
    def infrastructure_spec(self):
        """Gets the infrastructure_spec of this GoogleCloudDataplexV1TaskSparkTaskConfig.


        :return: The infrastructure_spec of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :rtype: GoogleCloudDataplexV1TaskInfrastructureSpec
        """
        return self._infrastructure_spec

    @infrastructure_spec.setter
    def infrastructure_spec(self, infrastructure_spec):
        """Sets the infrastructure_spec of this GoogleCloudDataplexV1TaskSparkTaskConfig.


        :param infrastructure_spec: The infrastructure_spec of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :type infrastructure_spec: GoogleCloudDataplexV1TaskInfrastructureSpec
        """

        self._infrastructure_spec = infrastructure_spec

    @property
    def main_class(self):
        """Gets the main_class of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).

        :return: The main_class of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :rtype: str
        """
        return self._main_class

    @main_class.setter
    def main_class(self, main_class):
        """Sets the main_class of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris. The execution args are passed in as a sequence of named process arguments (--key=value).

        :param main_class: The main_class of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :type main_class: str
        """

        self._main_class = main_class

    @property
    def main_jar_file_uri(self):
        """Gets the main_jar_file_uri of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).

        :return: The main_jar_file_uri of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :rtype: str
        """
        return self._main_jar_file_uri

    @main_jar_file_uri.setter
    def main_jar_file_uri(self, main_jar_file_uri):
        """Sets the main_jar_file_uri of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        The Cloud Storage URI of the jar file that contains the main class. The execution args are passed in as a sequence of named process arguments (--key=value).

        :param main_jar_file_uri: The main_jar_file_uri of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :type main_jar_file_uri: str
        """

        self._main_jar_file_uri = main_jar_file_uri

    @property
    def python_script_file(self):
        """Gets the python_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).

        :return: The python_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :rtype: str
        """
        return self._python_script_file

    @python_script_file.setter
    def python_script_file(self, python_script_file):
        """Sets the python_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        The Gcloud Storage URI of the main Python file to use as the driver. Must be a .py file. The execution args are passed in as a sequence of named process arguments (--key=value).

        :param python_script_file: The python_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :type python_script_file: str
        """

        self._python_script_file = python_script_file

    @property
    def sql_script(self):
        """Gets the sql_script of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        The query text. The execution args are used to declare a set of script variables (set key=\"value\";).

        :return: The sql_script of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :rtype: str
        """
        return self._sql_script

    @sql_script.setter
    def sql_script(self, sql_script):
        """Sets the sql_script of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        The query text. The execution args are used to declare a set of script variables (set key=\"value\";).

        :param sql_script: The sql_script of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :type sql_script: str
        """

        self._sql_script = sql_script

    @property
    def sql_script_file(self):
        """Gets the sql_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key=\"value\";).

        :return: The sql_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :rtype: str
        """
        return self._sql_script_file

    @sql_script_file.setter
    def sql_script_file(self, sql_script_file):
        """Sets the sql_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.

        A reference to a query file. This can be the Cloud Storage URI of the query file or it can the path to a SqlScript Content. The execution args are used to declare a set of script variables (set key=\"value\";).

        :param sql_script_file: The sql_script_file of this GoogleCloudDataplexV1TaskSparkTaskConfig.
        :type sql_script_file: str
        """

        self._sql_script_file = sql_script_file
