# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1Partition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, location: str=None, name: str=None, values: List[str]=None):
        """GoogleCloudDataplexV1Partition - a model defined in OpenAPI

        :param etag: The etag of this GoogleCloudDataplexV1Partition.
        :param location: The location of this GoogleCloudDataplexV1Partition.
        :param name: The name of this GoogleCloudDataplexV1Partition.
        :param values: The values of this GoogleCloudDataplexV1Partition.
        """
        self.openapi_types = {
            'etag': str,
            'location': str,
            'name': str,
            'values': List[str]
        }

        self.attribute_map = {
            'etag': 'etag',
            'location': 'location',
            'name': 'name',
            'values': 'values'
        }

        self._etag = etag
        self._location = location
        self._name = name
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1Partition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1Partition of this GoogleCloudDataplexV1Partition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudDataplexV1Partition.

        Optional. The etag for this partition.

        :return: The etag of this GoogleCloudDataplexV1Partition.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudDataplexV1Partition.

        Optional. The etag for this partition.

        :param etag: The etag of this GoogleCloudDataplexV1Partition.
        :type etag: str
        """

        self._etag = etag

    @property
    def location(self):
        """Gets the location of this GoogleCloudDataplexV1Partition.

        Required. Immutable. The location of the entity data within the partition, for example, gs://bucket/path/to/entity/key1=value1/key2=value2. Or projects//datasets//tables/

        :return: The location of this GoogleCloudDataplexV1Partition.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GoogleCloudDataplexV1Partition.

        Required. Immutable. The location of the entity data within the partition, for example, gs://bucket/path/to/entity/key1=value1/key2=value2. Or projects//datasets//tables/

        :param location: The location of this GoogleCloudDataplexV1Partition.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this GoogleCloudDataplexV1Partition.

        Output only. Partition values used in the HTTP URL must be double encoded. For example, url_encode(url_encode(value)) can be used to encode \"US:CA/CA#Sunnyvale so that the request URL ends with \"/partitions/US%253ACA/CA%2523Sunnyvale\". The name field in the response retains the encoded format.

        :return: The name of this GoogleCloudDataplexV1Partition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDataplexV1Partition.

        Output only. Partition values used in the HTTP URL must be double encoded. For example, url_encode(url_encode(value)) can be used to encode \"US:CA/CA#Sunnyvale so that the request URL ends with \"/partitions/US%253ACA/CA%2523Sunnyvale\". The name field in the response retains the encoded format.

        :param name: The name of this GoogleCloudDataplexV1Partition.
        :type name: str
        """

        self._name = name

    @property
    def values(self):
        """Gets the values of this GoogleCloudDataplexV1Partition.

        Required. Immutable. The set of values representing the partition, which correspond to the partition schema defined in the parent entity.

        :return: The values of this GoogleCloudDataplexV1Partition.
        :rtype: List[str]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this GoogleCloudDataplexV1Partition.

        Required. Immutable. The set of values representing the partition, which correspond to the partition schema defined in the parent entity.

        :param values: The values of this GoogleCloudDataplexV1Partition.
        :type values: List[str]
        """

        self._values = values
