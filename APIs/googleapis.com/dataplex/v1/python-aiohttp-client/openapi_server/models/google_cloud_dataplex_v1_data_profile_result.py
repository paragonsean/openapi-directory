# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_data_profile_result_post_scan_actions_result import GoogleCloudDataplexV1DataProfileResultPostScanActionsResult
from openapi_server.models.google_cloud_dataplex_v1_data_profile_result_profile import GoogleCloudDataplexV1DataProfileResultProfile
from openapi_server.models.google_cloud_dataplex_v1_scanned_data import GoogleCloudDataplexV1ScannedData
from openapi_server import util


class GoogleCloudDataplexV1DataProfileResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, post_scan_actions_result: GoogleCloudDataplexV1DataProfileResultPostScanActionsResult=None, profile: GoogleCloudDataplexV1DataProfileResultProfile=None, row_count: str=None, scanned_data: GoogleCloudDataplexV1ScannedData=None):
        """GoogleCloudDataplexV1DataProfileResult - a model defined in OpenAPI

        :param post_scan_actions_result: The post_scan_actions_result of this GoogleCloudDataplexV1DataProfileResult.
        :param profile: The profile of this GoogleCloudDataplexV1DataProfileResult.
        :param row_count: The row_count of this GoogleCloudDataplexV1DataProfileResult.
        :param scanned_data: The scanned_data of this GoogleCloudDataplexV1DataProfileResult.
        """
        self.openapi_types = {
            'post_scan_actions_result': GoogleCloudDataplexV1DataProfileResultPostScanActionsResult,
            'profile': GoogleCloudDataplexV1DataProfileResultProfile,
            'row_count': str,
            'scanned_data': GoogleCloudDataplexV1ScannedData
        }

        self.attribute_map = {
            'post_scan_actions_result': 'postScanActionsResult',
            'profile': 'profile',
            'row_count': 'rowCount',
            'scanned_data': 'scannedData'
        }

        self._post_scan_actions_result = post_scan_actions_result
        self._profile = profile
        self._row_count = row_count
        self._scanned_data = scanned_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DataProfileResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DataProfileResult of this GoogleCloudDataplexV1DataProfileResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def post_scan_actions_result(self):
        """Gets the post_scan_actions_result of this GoogleCloudDataplexV1DataProfileResult.


        :return: The post_scan_actions_result of this GoogleCloudDataplexV1DataProfileResult.
        :rtype: GoogleCloudDataplexV1DataProfileResultPostScanActionsResult
        """
        return self._post_scan_actions_result

    @post_scan_actions_result.setter
    def post_scan_actions_result(self, post_scan_actions_result):
        """Sets the post_scan_actions_result of this GoogleCloudDataplexV1DataProfileResult.


        :param post_scan_actions_result: The post_scan_actions_result of this GoogleCloudDataplexV1DataProfileResult.
        :type post_scan_actions_result: GoogleCloudDataplexV1DataProfileResultPostScanActionsResult
        """

        self._post_scan_actions_result = post_scan_actions_result

    @property
    def profile(self):
        """Gets the profile of this GoogleCloudDataplexV1DataProfileResult.


        :return: The profile of this GoogleCloudDataplexV1DataProfileResult.
        :rtype: GoogleCloudDataplexV1DataProfileResultProfile
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this GoogleCloudDataplexV1DataProfileResult.


        :param profile: The profile of this GoogleCloudDataplexV1DataProfileResult.
        :type profile: GoogleCloudDataplexV1DataProfileResultProfile
        """

        self._profile = profile

    @property
    def row_count(self):
        """Gets the row_count of this GoogleCloudDataplexV1DataProfileResult.

        The count of rows scanned.

        :return: The row_count of this GoogleCloudDataplexV1DataProfileResult.
        :rtype: str
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this GoogleCloudDataplexV1DataProfileResult.

        The count of rows scanned.

        :param row_count: The row_count of this GoogleCloudDataplexV1DataProfileResult.
        :type row_count: str
        """

        self._row_count = row_count

    @property
    def scanned_data(self):
        """Gets the scanned_data of this GoogleCloudDataplexV1DataProfileResult.


        :return: The scanned_data of this GoogleCloudDataplexV1DataProfileResult.
        :rtype: GoogleCloudDataplexV1ScannedData
        """
        return self._scanned_data

    @scanned_data.setter
    def scanned_data(self, scanned_data):
        """Sets the scanned_data of this GoogleCloudDataplexV1DataProfileResult.


        :param scanned_data: The scanned_data of this GoogleCloudDataplexV1DataProfileResult.
        :type scanned_data: GoogleCloudDataplexV1ScannedData
        """

        self._scanned_data = scanned_data
