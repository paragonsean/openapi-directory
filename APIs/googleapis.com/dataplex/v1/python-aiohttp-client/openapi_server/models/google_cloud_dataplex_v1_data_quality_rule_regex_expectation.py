# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1DataQualityRuleRegexExpectation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, regex: str=None):
        """GoogleCloudDataplexV1DataQualityRuleRegexExpectation - a model defined in OpenAPI

        :param regex: The regex of this GoogleCloudDataplexV1DataQualityRuleRegexExpectation.
        """
        self.openapi_types = {
            'regex': str
        }

        self.attribute_map = {
            'regex': 'regex'
        }

        self._regex = regex

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DataQualityRuleRegexExpectation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DataQualityRuleRegexExpectation of this GoogleCloudDataplexV1DataQualityRuleRegexExpectation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def regex(self):
        """Gets the regex of this GoogleCloudDataplexV1DataQualityRuleRegexExpectation.

        Optional. A regular expression the column value is expected to match.

        :return: The regex of this GoogleCloudDataplexV1DataQualityRuleRegexExpectation.
        :rtype: str
        """
        return self._regex

    @regex.setter
    def regex(self, regex):
        """Sets the regex of this GoogleCloudDataplexV1DataQualityRuleRegexExpectation.

        Optional. A regular expression the column value is expected to match.

        :param regex: The regex of this GoogleCloudDataplexV1DataQualityRuleRegexExpectation.
        :type regex: str
        """

        self._regex = regex
