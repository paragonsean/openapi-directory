# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1ActionInvalidDataFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expected_format: str=None, new_format: str=None, sampled_data_locations: List[str]=None):
        """GoogleCloudDataplexV1ActionInvalidDataFormat - a model defined in OpenAPI

        :param expected_format: The expected_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        :param new_format: The new_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        :param sampled_data_locations: The sampled_data_locations of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        """
        self.openapi_types = {
            'expected_format': str,
            'new_format': str,
            'sampled_data_locations': List[str]
        }

        self.attribute_map = {
            'expected_format': 'expectedFormat',
            'new_format': 'newFormat',
            'sampled_data_locations': 'sampledDataLocations'
        }

        self._expected_format = expected_format
        self._new_format = new_format
        self._sampled_data_locations = sampled_data_locations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1ActionInvalidDataFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1ActionInvalidDataFormat of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expected_format(self):
        """Gets the expected_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.

        The expected data format of the entity.

        :return: The expected_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        :rtype: str
        """
        return self._expected_format

    @expected_format.setter
    def expected_format(self, expected_format):
        """Sets the expected_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.

        The expected data format of the entity.

        :param expected_format: The expected_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        :type expected_format: str
        """

        self._expected_format = expected_format

    @property
    def new_format(self):
        """Gets the new_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.

        The new unexpected data format within the entity.

        :return: The new_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        :rtype: str
        """
        return self._new_format

    @new_format.setter
    def new_format(self, new_format):
        """Sets the new_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.

        The new unexpected data format within the entity.

        :param new_format: The new_format of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        :type new_format: str
        """

        self._new_format = new_format

    @property
    def sampled_data_locations(self):
        """Gets the sampled_data_locations of this GoogleCloudDataplexV1ActionInvalidDataFormat.

        The list of data locations sampled and used for format/schema inference.

        :return: The sampled_data_locations of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        :rtype: List[str]
        """
        return self._sampled_data_locations

    @sampled_data_locations.setter
    def sampled_data_locations(self, sampled_data_locations):
        """Sets the sampled_data_locations of this GoogleCloudDataplexV1ActionInvalidDataFormat.

        The list of data locations sampled and used for format/schema inference.

        :param sampled_data_locations: The sampled_data_locations of this GoogleCloudDataplexV1ActionInvalidDataFormat.
        :type sampled_data_locations: List[str]
        """

        self._sampled_data_locations = sampled_data_locations
