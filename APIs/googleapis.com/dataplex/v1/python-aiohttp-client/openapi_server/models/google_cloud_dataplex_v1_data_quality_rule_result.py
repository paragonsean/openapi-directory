# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_data_quality_rule import GoogleCloudDataplexV1DataQualityRule
from openapi_server import util


class GoogleCloudDataplexV1DataQualityRuleResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, evaluated_count: str=None, failing_rows_query: str=None, null_count: str=None, pass_ratio: float=None, passed: bool=None, passed_count: str=None, rule: GoogleCloudDataplexV1DataQualityRule=None):
        """GoogleCloudDataplexV1DataQualityRuleResult - a model defined in OpenAPI

        :param evaluated_count: The evaluated_count of this GoogleCloudDataplexV1DataQualityRuleResult.
        :param failing_rows_query: The failing_rows_query of this GoogleCloudDataplexV1DataQualityRuleResult.
        :param null_count: The null_count of this GoogleCloudDataplexV1DataQualityRuleResult.
        :param pass_ratio: The pass_ratio of this GoogleCloudDataplexV1DataQualityRuleResult.
        :param passed: The passed of this GoogleCloudDataplexV1DataQualityRuleResult.
        :param passed_count: The passed_count of this GoogleCloudDataplexV1DataQualityRuleResult.
        :param rule: The rule of this GoogleCloudDataplexV1DataQualityRuleResult.
        """
        self.openapi_types = {
            'evaluated_count': str,
            'failing_rows_query': str,
            'null_count': str,
            'pass_ratio': float,
            'passed': bool,
            'passed_count': str,
            'rule': GoogleCloudDataplexV1DataQualityRule
        }

        self.attribute_map = {
            'evaluated_count': 'evaluatedCount',
            'failing_rows_query': 'failingRowsQuery',
            'null_count': 'nullCount',
            'pass_ratio': 'passRatio',
            'passed': 'passed',
            'passed_count': 'passedCount',
            'rule': 'rule'
        }

        self._evaluated_count = evaluated_count
        self._failing_rows_query = failing_rows_query
        self._null_count = null_count
        self._pass_ratio = pass_ratio
        self._passed = passed
        self._passed_count = passed_count
        self._rule = rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DataQualityRuleResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DataQualityRuleResult of this GoogleCloudDataplexV1DataQualityRuleResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def evaluated_count(self):
        """Gets the evaluated_count of this GoogleCloudDataplexV1DataQualityRuleResult.

        The number of rows a rule was evaluated against.This field is only valid for row-level type rules.Evaluated count can be configured to either include all rows (default) - with null rows automatically failing rule evaluation, or exclude null rows from the evaluated_count, by setting ignore_nulls = true.

        :return: The evaluated_count of this GoogleCloudDataplexV1DataQualityRuleResult.
        :rtype: str
        """
        return self._evaluated_count

    @evaluated_count.setter
    def evaluated_count(self, evaluated_count):
        """Sets the evaluated_count of this GoogleCloudDataplexV1DataQualityRuleResult.

        The number of rows a rule was evaluated against.This field is only valid for row-level type rules.Evaluated count can be configured to either include all rows (default) - with null rows automatically failing rule evaluation, or exclude null rows from the evaluated_count, by setting ignore_nulls = true.

        :param evaluated_count: The evaluated_count of this GoogleCloudDataplexV1DataQualityRuleResult.
        :type evaluated_count: str
        """

        self._evaluated_count = evaluated_count

    @property
    def failing_rows_query(self):
        """Gets the failing_rows_query of this GoogleCloudDataplexV1DataQualityRuleResult.

        The query to find rows that did not pass this rule.This field is only valid for row-level type rules.

        :return: The failing_rows_query of this GoogleCloudDataplexV1DataQualityRuleResult.
        :rtype: str
        """
        return self._failing_rows_query

    @failing_rows_query.setter
    def failing_rows_query(self, failing_rows_query):
        """Sets the failing_rows_query of this GoogleCloudDataplexV1DataQualityRuleResult.

        The query to find rows that did not pass this rule.This field is only valid for row-level type rules.

        :param failing_rows_query: The failing_rows_query of this GoogleCloudDataplexV1DataQualityRuleResult.
        :type failing_rows_query: str
        """

        self._failing_rows_query = failing_rows_query

    @property
    def null_count(self):
        """Gets the null_count of this GoogleCloudDataplexV1DataQualityRuleResult.

        The number of rows with null values in the specified column.

        :return: The null_count of this GoogleCloudDataplexV1DataQualityRuleResult.
        :rtype: str
        """
        return self._null_count

    @null_count.setter
    def null_count(self, null_count):
        """Sets the null_count of this GoogleCloudDataplexV1DataQualityRuleResult.

        The number of rows with null values in the specified column.

        :param null_count: The null_count of this GoogleCloudDataplexV1DataQualityRuleResult.
        :type null_count: str
        """

        self._null_count = null_count

    @property
    def pass_ratio(self):
        """Gets the pass_ratio of this GoogleCloudDataplexV1DataQualityRuleResult.

        The ratio of passed_count / evaluated_count.This field is only valid for row-level type rules.

        :return: The pass_ratio of this GoogleCloudDataplexV1DataQualityRuleResult.
        :rtype: float
        """
        return self._pass_ratio

    @pass_ratio.setter
    def pass_ratio(self, pass_ratio):
        """Sets the pass_ratio of this GoogleCloudDataplexV1DataQualityRuleResult.

        The ratio of passed_count / evaluated_count.This field is only valid for row-level type rules.

        :param pass_ratio: The pass_ratio of this GoogleCloudDataplexV1DataQualityRuleResult.
        :type pass_ratio: float
        """

        self._pass_ratio = pass_ratio

    @property
    def passed(self):
        """Gets the passed of this GoogleCloudDataplexV1DataQualityRuleResult.

        Whether the rule passed or failed.

        :return: The passed of this GoogleCloudDataplexV1DataQualityRuleResult.
        :rtype: bool
        """
        return self._passed

    @passed.setter
    def passed(self, passed):
        """Sets the passed of this GoogleCloudDataplexV1DataQualityRuleResult.

        Whether the rule passed or failed.

        :param passed: The passed of this GoogleCloudDataplexV1DataQualityRuleResult.
        :type passed: bool
        """

        self._passed = passed

    @property
    def passed_count(self):
        """Gets the passed_count of this GoogleCloudDataplexV1DataQualityRuleResult.

        The number of rows which passed a rule evaluation.This field is only valid for row-level type rules.

        :return: The passed_count of this GoogleCloudDataplexV1DataQualityRuleResult.
        :rtype: str
        """
        return self._passed_count

    @passed_count.setter
    def passed_count(self, passed_count):
        """Sets the passed_count of this GoogleCloudDataplexV1DataQualityRuleResult.

        The number of rows which passed a rule evaluation.This field is only valid for row-level type rules.

        :param passed_count: The passed_count of this GoogleCloudDataplexV1DataQualityRuleResult.
        :type passed_count: str
        """

        self._passed_count = passed_count

    @property
    def rule(self):
        """Gets the rule of this GoogleCloudDataplexV1DataQualityRuleResult.


        :return: The rule of this GoogleCloudDataplexV1DataQualityRuleResult.
        :rtype: GoogleCloudDataplexV1DataQualityRule
        """
        return self._rule

    @rule.setter
    def rule(self, rule):
        """Sets the rule of this GoogleCloudDataplexV1DataQualityRuleResult.


        :param rule: The rule of this GoogleCloudDataplexV1DataQualityRuleResult.
        :type rule: GoogleCloudDataplexV1DataQualityRule
        """

        self._rule = rule
