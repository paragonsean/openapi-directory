# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1GovernanceEventEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity: str=None, entity_type: str=None):
        """GoogleCloudDataplexV1GovernanceEventEntity - a model defined in OpenAPI

        :param entity: The entity of this GoogleCloudDataplexV1GovernanceEventEntity.
        :param entity_type: The entity_type of this GoogleCloudDataplexV1GovernanceEventEntity.
        """
        self.openapi_types = {
            'entity': str,
            'entity_type': str
        }

        self.attribute_map = {
            'entity': 'entity',
            'entity_type': 'entityType'
        }

        self._entity = entity
        self._entity_type = entity_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1GovernanceEventEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1GovernanceEventEntity of this GoogleCloudDataplexV1GovernanceEventEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity(self):
        """Gets the entity of this GoogleCloudDataplexV1GovernanceEventEntity.

        The Entity resource the log event is associated with. Format: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}

        :return: The entity of this GoogleCloudDataplexV1GovernanceEventEntity.
        :rtype: str
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this GoogleCloudDataplexV1GovernanceEventEntity.

        The Entity resource the log event is associated with. Format: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{entity_id}

        :param entity: The entity of this GoogleCloudDataplexV1GovernanceEventEntity.
        :type entity: str
        """

        self._entity = entity

    @property
    def entity_type(self):
        """Gets the entity_type of this GoogleCloudDataplexV1GovernanceEventEntity.

        Type of entity.

        :return: The entity_type of this GoogleCloudDataplexV1GovernanceEventEntity.
        :rtype: str
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this GoogleCloudDataplexV1GovernanceEventEntity.

        Type of entity.

        :param entity_type: The entity_type of this GoogleCloudDataplexV1GovernanceEventEntity.
        :type entity_type: str
        """
        allowed_values = ["ENTITY_TYPE_UNSPECIFIED", "TABLE", "FILESET"]  # noqa: E501
        if entity_type not in allowed_values:
            raise ValueError(
                "Invalid value for `entity_type` ({0}), must be one of {1}"
                .format(entity_type, allowed_values)
            )

        self._entity_type = entity_type
