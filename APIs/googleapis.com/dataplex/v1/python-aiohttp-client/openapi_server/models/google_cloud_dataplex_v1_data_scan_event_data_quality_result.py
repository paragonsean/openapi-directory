# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1DataScanEventDataQualityResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_score: Dict[str, float]=None, dimension_passed: Dict[str, bool]=None, dimension_score: Dict[str, float]=None, passed: bool=None, row_count: str=None, score: float=None):
        """GoogleCloudDataplexV1DataScanEventDataQualityResult - a model defined in OpenAPI

        :param column_score: The column_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :param dimension_passed: The dimension_passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :param dimension_score: The dimension_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :param passed: The passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :param row_count: The row_count of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :param score: The score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        """
        self.openapi_types = {
            'column_score': Dict[str, float],
            'dimension_passed': Dict[str, bool],
            'dimension_score': Dict[str, float],
            'passed': bool,
            'row_count': str,
            'score': float
        }

        self.attribute_map = {
            'column_score': 'columnScore',
            'dimension_passed': 'dimensionPassed',
            'dimension_score': 'dimensionScore',
            'passed': 'passed',
            'row_count': 'rowCount',
            'score': 'score'
        }

        self._column_score = column_score
        self._dimension_passed = dimension_passed
        self._dimension_score = dimension_score
        self._passed = passed
        self._row_count = row_count
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DataScanEventDataQualityResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DataScanEventDataQualityResult of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_score(self):
        """Gets the column_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The score of each column scanned in the data scan job. The key of the map is the name of the column. The value is the data quality score for the column.The score ranges between 0, 100 (up to two decimal points).

        :return: The column_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :rtype: Dict[str, float]
        """
        return self._column_score

    @column_score.setter
    def column_score(self, column_score):
        """Sets the column_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The score of each column scanned in the data scan job. The key of the map is the name of the column. The value is the data quality score for the column.The score ranges between 0, 100 (up to two decimal points).

        :param column_score: The column_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :type column_score: Dict[str, float]
        """

        self._column_score = column_score

    @property
    def dimension_passed(self):
        """Gets the dimension_passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The result of each dimension for data quality result. The key of the map is the name of the dimension. The value is the bool value depicting whether the dimension result was pass or not.

        :return: The dimension_passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :rtype: Dict[str, bool]
        """
        return self._dimension_passed

    @dimension_passed.setter
    def dimension_passed(self, dimension_passed):
        """Sets the dimension_passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The result of each dimension for data quality result. The key of the map is the name of the dimension. The value is the bool value depicting whether the dimension result was pass or not.

        :param dimension_passed: The dimension_passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :type dimension_passed: Dict[str, bool]
        """

        self._dimension_passed = dimension_passed

    @property
    def dimension_score(self):
        """Gets the dimension_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The score of each dimension for data quality result. The key of the map is the name of the dimension. The value is the data quality score for the dimension.The score ranges between 0, 100 (up to two decimal points).

        :return: The dimension_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :rtype: Dict[str, float]
        """
        return self._dimension_score

    @dimension_score.setter
    def dimension_score(self, dimension_score):
        """Sets the dimension_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The score of each dimension for data quality result. The key of the map is the name of the dimension. The value is the data quality score for the dimension.The score ranges between 0, 100 (up to two decimal points).

        :param dimension_score: The dimension_score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :type dimension_score: Dict[str, float]
        """

        self._dimension_score = dimension_score

    @property
    def passed(self):
        """Gets the passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        Whether the data quality result was pass or not.

        :return: The passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :rtype: bool
        """
        return self._passed

    @passed.setter
    def passed(self, passed):
        """Sets the passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        Whether the data quality result was pass or not.

        :param passed: The passed of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :type passed: bool
        """

        self._passed = passed

    @property
    def row_count(self):
        """Gets the row_count of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The count of rows processed in the data scan job.

        :return: The row_count of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :rtype: str
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The count of rows processed in the data scan job.

        :param row_count: The row_count of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :type row_count: str
        """

        self._row_count = row_count

    @property
    def score(self):
        """Gets the score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The table-level data quality score for the data scan job.The data quality score ranges between 0, 100 (up to two decimal points).

        :return: The score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.

        The table-level data quality score for the data scan job.The data quality score ranges between 0, 100 (up to two decimal points).

        :param score: The score of this GoogleCloudDataplexV1DataScanEventDataQualityResult.
        :type score: float
        """

        self._score = score
