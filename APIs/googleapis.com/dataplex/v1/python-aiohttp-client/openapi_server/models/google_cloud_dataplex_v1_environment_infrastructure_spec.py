# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_environment_infrastructure_spec_compute_resources import GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources
from openapi_server.models.google_cloud_dataplex_v1_environment_infrastructure_spec_os_image_runtime import GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime
from openapi_server import util


class GoogleCloudDataplexV1EnvironmentInfrastructureSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compute: GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources=None, os_image: GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime=None):
        """GoogleCloudDataplexV1EnvironmentInfrastructureSpec - a model defined in OpenAPI

        :param compute: The compute of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.
        :param os_image: The os_image of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.
        """
        self.openapi_types = {
            'compute': GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources,
            'os_image': GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime
        }

        self.attribute_map = {
            'compute': 'compute',
            'os_image': 'osImage'
        }

        self._compute = compute
        self._os_image = os_image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1EnvironmentInfrastructureSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1EnvironmentInfrastructureSpec of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compute(self):
        """Gets the compute of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.


        :return: The compute of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.
        :rtype: GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources
        """
        return self._compute

    @compute.setter
    def compute(self, compute):
        """Sets the compute of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.


        :param compute: The compute of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.
        :type compute: GoogleCloudDataplexV1EnvironmentInfrastructureSpecComputeResources
        """

        self._compute = compute

    @property
    def os_image(self):
        """Gets the os_image of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.


        :return: The os_image of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.
        :rtype: GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime
        """
        return self._os_image

    @os_image.setter
    def os_image(self, os_image):
        """Sets the os_image of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.


        :param os_image: The os_image of this GoogleCloudDataplexV1EnvironmentInfrastructureSpec.
        :type os_image: GoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime
        """

        self._os_image = os_image
