# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_data_profile_result import GoogleCloudDataplexV1DataProfileResult
from openapi_server.models.google_cloud_dataplex_v1_data_profile_spec import GoogleCloudDataplexV1DataProfileSpec
from openapi_server.models.google_cloud_dataplex_v1_data_quality_result import GoogleCloudDataplexV1DataQualityResult
from openapi_server.models.google_cloud_dataplex_v1_data_quality_spec import GoogleCloudDataplexV1DataQualitySpec
from openapi_server import util


class GoogleCloudDataplexV1DataScanJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_profile_result: GoogleCloudDataplexV1DataProfileResult=None, data_profile_spec: GoogleCloudDataplexV1DataProfileSpec=None, data_quality_result: GoogleCloudDataplexV1DataQualityResult=None, data_quality_spec: GoogleCloudDataplexV1DataQualitySpec=None, end_time: str=None, message: str=None, name: str=None, start_time: str=None, state: str=None, type: str=None, uid: str=None):
        """GoogleCloudDataplexV1DataScanJob - a model defined in OpenAPI

        :param data_profile_result: The data_profile_result of this GoogleCloudDataplexV1DataScanJob.
        :param data_profile_spec: The data_profile_spec of this GoogleCloudDataplexV1DataScanJob.
        :param data_quality_result: The data_quality_result of this GoogleCloudDataplexV1DataScanJob.
        :param data_quality_spec: The data_quality_spec of this GoogleCloudDataplexV1DataScanJob.
        :param end_time: The end_time of this GoogleCloudDataplexV1DataScanJob.
        :param message: The message of this GoogleCloudDataplexV1DataScanJob.
        :param name: The name of this GoogleCloudDataplexV1DataScanJob.
        :param start_time: The start_time of this GoogleCloudDataplexV1DataScanJob.
        :param state: The state of this GoogleCloudDataplexV1DataScanJob.
        :param type: The type of this GoogleCloudDataplexV1DataScanJob.
        :param uid: The uid of this GoogleCloudDataplexV1DataScanJob.
        """
        self.openapi_types = {
            'data_profile_result': GoogleCloudDataplexV1DataProfileResult,
            'data_profile_spec': GoogleCloudDataplexV1DataProfileSpec,
            'data_quality_result': GoogleCloudDataplexV1DataQualityResult,
            'data_quality_spec': GoogleCloudDataplexV1DataQualitySpec,
            'end_time': str,
            'message': str,
            'name': str,
            'start_time': str,
            'state': str,
            'type': str,
            'uid': str
        }

        self.attribute_map = {
            'data_profile_result': 'dataProfileResult',
            'data_profile_spec': 'dataProfileSpec',
            'data_quality_result': 'dataQualityResult',
            'data_quality_spec': 'dataQualitySpec',
            'end_time': 'endTime',
            'message': 'message',
            'name': 'name',
            'start_time': 'startTime',
            'state': 'state',
            'type': 'type',
            'uid': 'uid'
        }

        self._data_profile_result = data_profile_result
        self._data_profile_spec = data_profile_spec
        self._data_quality_result = data_quality_result
        self._data_quality_spec = data_quality_spec
        self._end_time = end_time
        self._message = message
        self._name = name
        self._start_time = start_time
        self._state = state
        self._type = type
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DataScanJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DataScanJob of this GoogleCloudDataplexV1DataScanJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_profile_result(self):
        """Gets the data_profile_result of this GoogleCloudDataplexV1DataScanJob.


        :return: The data_profile_result of this GoogleCloudDataplexV1DataScanJob.
        :rtype: GoogleCloudDataplexV1DataProfileResult
        """
        return self._data_profile_result

    @data_profile_result.setter
    def data_profile_result(self, data_profile_result):
        """Sets the data_profile_result of this GoogleCloudDataplexV1DataScanJob.


        :param data_profile_result: The data_profile_result of this GoogleCloudDataplexV1DataScanJob.
        :type data_profile_result: GoogleCloudDataplexV1DataProfileResult
        """

        self._data_profile_result = data_profile_result

    @property
    def data_profile_spec(self):
        """Gets the data_profile_spec of this GoogleCloudDataplexV1DataScanJob.


        :return: The data_profile_spec of this GoogleCloudDataplexV1DataScanJob.
        :rtype: GoogleCloudDataplexV1DataProfileSpec
        """
        return self._data_profile_spec

    @data_profile_spec.setter
    def data_profile_spec(self, data_profile_spec):
        """Sets the data_profile_spec of this GoogleCloudDataplexV1DataScanJob.


        :param data_profile_spec: The data_profile_spec of this GoogleCloudDataplexV1DataScanJob.
        :type data_profile_spec: GoogleCloudDataplexV1DataProfileSpec
        """

        self._data_profile_spec = data_profile_spec

    @property
    def data_quality_result(self):
        """Gets the data_quality_result of this GoogleCloudDataplexV1DataScanJob.


        :return: The data_quality_result of this GoogleCloudDataplexV1DataScanJob.
        :rtype: GoogleCloudDataplexV1DataQualityResult
        """
        return self._data_quality_result

    @data_quality_result.setter
    def data_quality_result(self, data_quality_result):
        """Sets the data_quality_result of this GoogleCloudDataplexV1DataScanJob.


        :param data_quality_result: The data_quality_result of this GoogleCloudDataplexV1DataScanJob.
        :type data_quality_result: GoogleCloudDataplexV1DataQualityResult
        """

        self._data_quality_result = data_quality_result

    @property
    def data_quality_spec(self):
        """Gets the data_quality_spec of this GoogleCloudDataplexV1DataScanJob.


        :return: The data_quality_spec of this GoogleCloudDataplexV1DataScanJob.
        :rtype: GoogleCloudDataplexV1DataQualitySpec
        """
        return self._data_quality_spec

    @data_quality_spec.setter
    def data_quality_spec(self, data_quality_spec):
        """Sets the data_quality_spec of this GoogleCloudDataplexV1DataScanJob.


        :param data_quality_spec: The data_quality_spec of this GoogleCloudDataplexV1DataScanJob.
        :type data_quality_spec: GoogleCloudDataplexV1DataQualitySpec
        """

        self._data_quality_spec = data_quality_spec

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudDataplexV1DataScanJob.

        Output only. The time when the DataScanJob ended.

        :return: The end_time of this GoogleCloudDataplexV1DataScanJob.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudDataplexV1DataScanJob.

        Output only. The time when the DataScanJob ended.

        :param end_time: The end_time of this GoogleCloudDataplexV1DataScanJob.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def message(self):
        """Gets the message of this GoogleCloudDataplexV1DataScanJob.

        Output only. Additional information about the current state.

        :return: The message of this GoogleCloudDataplexV1DataScanJob.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GoogleCloudDataplexV1DataScanJob.

        Output only. Additional information about the current state.

        :param message: The message of this GoogleCloudDataplexV1DataScanJob.
        :type message: str
        """

        self._message = message

    @property
    def name(self):
        """Gets the name of this GoogleCloudDataplexV1DataScanJob.

        Output only. The relative resource name of the DataScanJob, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}/jobs/{job_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.

        :return: The name of this GoogleCloudDataplexV1DataScanJob.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDataplexV1DataScanJob.

        Output only. The relative resource name of the DataScanJob, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}/jobs/{job_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.

        :param name: The name of this GoogleCloudDataplexV1DataScanJob.
        :type name: str
        """

        self._name = name

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudDataplexV1DataScanJob.

        Output only. The time when the DataScanJob was started.

        :return: The start_time of this GoogleCloudDataplexV1DataScanJob.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudDataplexV1DataScanJob.

        Output only. The time when the DataScanJob was started.

        :param start_time: The start_time of this GoogleCloudDataplexV1DataScanJob.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudDataplexV1DataScanJob.

        Output only. Execution state for the DataScanJob.

        :return: The state of this GoogleCloudDataplexV1DataScanJob.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDataplexV1DataScanJob.

        Output only. Execution state for the DataScanJob.

        :param state: The state of this GoogleCloudDataplexV1DataScanJob.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "RUNNING", "CANCELING", "CANCELLED", "SUCCEEDED", "FAILED", "PENDING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def type(self):
        """Gets the type of this GoogleCloudDataplexV1DataScanJob.

        Output only. The type of the parent DataScan.

        :return: The type of this GoogleCloudDataplexV1DataScanJob.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDataplexV1DataScanJob.

        Output only. The type of the parent DataScan.

        :param type: The type of this GoogleCloudDataplexV1DataScanJob.
        :type type: str
        """
        allowed_values = ["DATA_SCAN_TYPE_UNSPECIFIED", "DATA_QUALITY", "DATA_PROFILE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def uid(self):
        """Gets the uid of this GoogleCloudDataplexV1DataScanJob.

        Output only. System generated globally unique ID for the DataScanJob.

        :return: The uid of this GoogleCloudDataplexV1DataScanJob.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this GoogleCloudDataplexV1DataScanJob.

        Output only. System generated globally unique ID for the DataScanJob.

        :param uid: The uid of this GoogleCloudDataplexV1DataScanJob.
        :type uid: str
        """

        self._uid = uid
