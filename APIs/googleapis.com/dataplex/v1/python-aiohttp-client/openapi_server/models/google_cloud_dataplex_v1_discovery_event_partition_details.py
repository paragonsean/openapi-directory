# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1DiscoveryEventPartitionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity: str=None, partition: str=None, sampled_data_locations: List[str]=None, type: str=None):
        """GoogleCloudDataplexV1DiscoveryEventPartitionDetails - a model defined in OpenAPI

        :param entity: The entity of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :param partition: The partition of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :param sampled_data_locations: The sampled_data_locations of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :param type: The type of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        """
        self.openapi_types = {
            'entity': str,
            'partition': str,
            'sampled_data_locations': List[str],
            'type': str
        }

        self.attribute_map = {
            'entity': 'entity',
            'partition': 'partition',
            'sampled_data_locations': 'sampledDataLocations',
            'type': 'type'
        }

        self._entity = entity
        self._partition = partition
        self._sampled_data_locations = sampled_data_locations
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DiscoveryEventPartitionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DiscoveryEventPartitionDetails of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity(self):
        """Gets the entity of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.

        The name to the containing entity resource. The name is the fully-qualified resource name.

        :return: The entity of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :rtype: str
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.

        The name to the containing entity resource. The name is the fully-qualified resource name.

        :param entity: The entity of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :type entity: str
        """

        self._entity = entity

    @property
    def partition(self):
        """Gets the partition of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.

        The name to the partition resource. The name is the fully-qualified resource name.

        :return: The partition of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :rtype: str
        """
        return self._partition

    @partition.setter
    def partition(self, partition):
        """Sets the partition of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.

        The name to the partition resource. The name is the fully-qualified resource name.

        :param partition: The partition of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :type partition: str
        """

        self._partition = partition

    @property
    def sampled_data_locations(self):
        """Gets the sampled_data_locations of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.

        The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.

        :return: The sampled_data_locations of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :rtype: List[str]
        """
        return self._sampled_data_locations

    @sampled_data_locations.setter
    def sampled_data_locations(self, sampled_data_locations):
        """Sets the sampled_data_locations of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.

        The locations of the data items (e.g., a Cloud Storage objects) sampled for metadata inference.

        :param sampled_data_locations: The sampled_data_locations of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :type sampled_data_locations: List[str]
        """

        self._sampled_data_locations = sampled_data_locations

    @property
    def type(self):
        """Gets the type of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.

        The type of the containing entity resource.

        :return: The type of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.

        The type of the containing entity resource.

        :param type: The type of this GoogleCloudDataplexV1DiscoveryEventPartitionDetails.
        :type type: str
        """
        allowed_values = ["ENTITY_TYPE_UNSPECIFIED", "TABLE", "FILESET"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
