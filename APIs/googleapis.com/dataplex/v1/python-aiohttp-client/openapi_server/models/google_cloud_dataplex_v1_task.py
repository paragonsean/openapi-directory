# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_task_execution_spec import GoogleCloudDataplexV1TaskExecutionSpec
from openapi_server.models.google_cloud_dataplex_v1_task_execution_status import GoogleCloudDataplexV1TaskExecutionStatus
from openapi_server.models.google_cloud_dataplex_v1_task_notebook_task_config import GoogleCloudDataplexV1TaskNotebookTaskConfig
from openapi_server.models.google_cloud_dataplex_v1_task_spark_task_config import GoogleCloudDataplexV1TaskSparkTaskConfig
from openapi_server.models.google_cloud_dataplex_v1_task_trigger_spec import GoogleCloudDataplexV1TaskTriggerSpec
from openapi_server import util


class GoogleCloudDataplexV1Task(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, display_name: str=None, execution_spec: GoogleCloudDataplexV1TaskExecutionSpec=None, execution_status: GoogleCloudDataplexV1TaskExecutionStatus=None, labels: Dict[str, str]=None, name: str=None, notebook: GoogleCloudDataplexV1TaskNotebookTaskConfig=None, spark: GoogleCloudDataplexV1TaskSparkTaskConfig=None, state: str=None, trigger_spec: GoogleCloudDataplexV1TaskTriggerSpec=None, uid: str=None, update_time: str=None):
        """GoogleCloudDataplexV1Task - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDataplexV1Task.
        :param description: The description of this GoogleCloudDataplexV1Task.
        :param display_name: The display_name of this GoogleCloudDataplexV1Task.
        :param execution_spec: The execution_spec of this GoogleCloudDataplexV1Task.
        :param execution_status: The execution_status of this GoogleCloudDataplexV1Task.
        :param labels: The labels of this GoogleCloudDataplexV1Task.
        :param name: The name of this GoogleCloudDataplexV1Task.
        :param notebook: The notebook of this GoogleCloudDataplexV1Task.
        :param spark: The spark of this GoogleCloudDataplexV1Task.
        :param state: The state of this GoogleCloudDataplexV1Task.
        :param trigger_spec: The trigger_spec of this GoogleCloudDataplexV1Task.
        :param uid: The uid of this GoogleCloudDataplexV1Task.
        :param update_time: The update_time of this GoogleCloudDataplexV1Task.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'display_name': str,
            'execution_spec': GoogleCloudDataplexV1TaskExecutionSpec,
            'execution_status': GoogleCloudDataplexV1TaskExecutionStatus,
            'labels': Dict[str, str],
            'name': str,
            'notebook': GoogleCloudDataplexV1TaskNotebookTaskConfig,
            'spark': GoogleCloudDataplexV1TaskSparkTaskConfig,
            'state': str,
            'trigger_spec': GoogleCloudDataplexV1TaskTriggerSpec,
            'uid': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'display_name': 'displayName',
            'execution_spec': 'executionSpec',
            'execution_status': 'executionStatus',
            'labels': 'labels',
            'name': 'name',
            'notebook': 'notebook',
            'spark': 'spark',
            'state': 'state',
            'trigger_spec': 'triggerSpec',
            'uid': 'uid',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._description = description
        self._display_name = display_name
        self._execution_spec = execution_spec
        self._execution_status = execution_status
        self._labels = labels
        self._name = name
        self._notebook = notebook
        self._spark = spark
        self._state = state
        self._trigger_spec = trigger_spec
        self._uid = uid
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1Task':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1Task of this GoogleCloudDataplexV1Task.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDataplexV1Task.

        Output only. The time when the task was created.

        :return: The create_time of this GoogleCloudDataplexV1Task.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDataplexV1Task.

        Output only. The time when the task was created.

        :param create_time: The create_time of this GoogleCloudDataplexV1Task.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudDataplexV1Task.

        Optional. Description of the task.

        :return: The description of this GoogleCloudDataplexV1Task.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDataplexV1Task.

        Optional. Description of the task.

        :param description: The description of this GoogleCloudDataplexV1Task.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDataplexV1Task.

        Optional. User friendly display name.

        :return: The display_name of this GoogleCloudDataplexV1Task.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDataplexV1Task.

        Optional. User friendly display name.

        :param display_name: The display_name of this GoogleCloudDataplexV1Task.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def execution_spec(self):
        """Gets the execution_spec of this GoogleCloudDataplexV1Task.


        :return: The execution_spec of this GoogleCloudDataplexV1Task.
        :rtype: GoogleCloudDataplexV1TaskExecutionSpec
        """
        return self._execution_spec

    @execution_spec.setter
    def execution_spec(self, execution_spec):
        """Sets the execution_spec of this GoogleCloudDataplexV1Task.


        :param execution_spec: The execution_spec of this GoogleCloudDataplexV1Task.
        :type execution_spec: GoogleCloudDataplexV1TaskExecutionSpec
        """

        self._execution_spec = execution_spec

    @property
    def execution_status(self):
        """Gets the execution_status of this GoogleCloudDataplexV1Task.


        :return: The execution_status of this GoogleCloudDataplexV1Task.
        :rtype: GoogleCloudDataplexV1TaskExecutionStatus
        """
        return self._execution_status

    @execution_status.setter
    def execution_status(self, execution_status):
        """Sets the execution_status of this GoogleCloudDataplexV1Task.


        :param execution_status: The execution_status of this GoogleCloudDataplexV1Task.
        :type execution_status: GoogleCloudDataplexV1TaskExecutionStatus
        """

        self._execution_status = execution_status

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudDataplexV1Task.

        Optional. User-defined labels for the task.

        :return: The labels of this GoogleCloudDataplexV1Task.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudDataplexV1Task.

        Optional. User-defined labels for the task.

        :param labels: The labels of this GoogleCloudDataplexV1Task.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudDataplexV1Task.

        Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.

        :return: The name of this GoogleCloudDataplexV1Task.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDataplexV1Task.

        Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}.

        :param name: The name of this GoogleCloudDataplexV1Task.
        :type name: str
        """

        self._name = name

    @property
    def notebook(self):
        """Gets the notebook of this GoogleCloudDataplexV1Task.


        :return: The notebook of this GoogleCloudDataplexV1Task.
        :rtype: GoogleCloudDataplexV1TaskNotebookTaskConfig
        """
        return self._notebook

    @notebook.setter
    def notebook(self, notebook):
        """Sets the notebook of this GoogleCloudDataplexV1Task.


        :param notebook: The notebook of this GoogleCloudDataplexV1Task.
        :type notebook: GoogleCloudDataplexV1TaskNotebookTaskConfig
        """

        self._notebook = notebook

    @property
    def spark(self):
        """Gets the spark of this GoogleCloudDataplexV1Task.


        :return: The spark of this GoogleCloudDataplexV1Task.
        :rtype: GoogleCloudDataplexV1TaskSparkTaskConfig
        """
        return self._spark

    @spark.setter
    def spark(self, spark):
        """Sets the spark of this GoogleCloudDataplexV1Task.


        :param spark: The spark of this GoogleCloudDataplexV1Task.
        :type spark: GoogleCloudDataplexV1TaskSparkTaskConfig
        """

        self._spark = spark

    @property
    def state(self):
        """Gets the state of this GoogleCloudDataplexV1Task.

        Output only. Current state of the task.

        :return: The state of this GoogleCloudDataplexV1Task.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDataplexV1Task.

        Output only. Current state of the task.

        :param state: The state of this GoogleCloudDataplexV1Task.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "ACTIVE", "CREATING", "DELETING", "ACTION_REQUIRED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def trigger_spec(self):
        """Gets the trigger_spec of this GoogleCloudDataplexV1Task.


        :return: The trigger_spec of this GoogleCloudDataplexV1Task.
        :rtype: GoogleCloudDataplexV1TaskTriggerSpec
        """
        return self._trigger_spec

    @trigger_spec.setter
    def trigger_spec(self, trigger_spec):
        """Sets the trigger_spec of this GoogleCloudDataplexV1Task.


        :param trigger_spec: The trigger_spec of this GoogleCloudDataplexV1Task.
        :type trigger_spec: GoogleCloudDataplexV1TaskTriggerSpec
        """

        self._trigger_spec = trigger_spec

    @property
    def uid(self):
        """Gets the uid of this GoogleCloudDataplexV1Task.

        Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.

        :return: The uid of this GoogleCloudDataplexV1Task.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this GoogleCloudDataplexV1Task.

        Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name.

        :param uid: The uid of this GoogleCloudDataplexV1Task.
        :type uid: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudDataplexV1Task.

        Output only. The time when the task was last updated.

        :return: The update_time of this GoogleCloudDataplexV1Task.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudDataplexV1Task.

        Output only. The time when the task was last updated.

        :param update_time: The update_time of this GoogleCloudDataplexV1Task.
        :type update_time: str
        """

        self._update_time = update_time
