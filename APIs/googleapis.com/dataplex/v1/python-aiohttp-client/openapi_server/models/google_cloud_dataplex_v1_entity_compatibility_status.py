# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_entity_compatibility_status_compatibility import GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
from openapi_server import util


class GoogleCloudDataplexV1EntityCompatibilityStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility=None, hive_metastore: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility=None):
        """GoogleCloudDataplexV1EntityCompatibilityStatus - a model defined in OpenAPI

        :param bigquery: The bigquery of this GoogleCloudDataplexV1EntityCompatibilityStatus.
        :param hive_metastore: The hive_metastore of this GoogleCloudDataplexV1EntityCompatibilityStatus.
        """
        self.openapi_types = {
            'bigquery': GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility,
            'hive_metastore': GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
        }

        self.attribute_map = {
            'bigquery': 'bigquery',
            'hive_metastore': 'hiveMetastore'
        }

        self._bigquery = bigquery
        self._hive_metastore = hive_metastore

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1EntityCompatibilityStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1EntityCompatibilityStatus of this GoogleCloudDataplexV1EntityCompatibilityStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery(self):
        """Gets the bigquery of this GoogleCloudDataplexV1EntityCompatibilityStatus.


        :return: The bigquery of this GoogleCloudDataplexV1EntityCompatibilityStatus.
        :rtype: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
        """
        return self._bigquery

    @bigquery.setter
    def bigquery(self, bigquery):
        """Sets the bigquery of this GoogleCloudDataplexV1EntityCompatibilityStatus.


        :param bigquery: The bigquery of this GoogleCloudDataplexV1EntityCompatibilityStatus.
        :type bigquery: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
        """

        self._bigquery = bigquery

    @property
    def hive_metastore(self):
        """Gets the hive_metastore of this GoogleCloudDataplexV1EntityCompatibilityStatus.


        :return: The hive_metastore of this GoogleCloudDataplexV1EntityCompatibilityStatus.
        :rtype: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
        """
        return self._hive_metastore

    @hive_metastore.setter
    def hive_metastore(self, hive_metastore):
        """Sets the hive_metastore of this GoogleCloudDataplexV1EntityCompatibilityStatus.


        :param hive_metastore: The hive_metastore of this GoogleCloudDataplexV1EntityCompatibilityStatus.
        :type hive_metastore: GoogleCloudDataplexV1EntityCompatibilityStatusCompatibility
        """

        self._hive_metastore = hive_metastore
