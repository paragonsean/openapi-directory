# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1EnvironmentSessionSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_fast_startup: bool=None, max_idle_duration: str=None):
        """GoogleCloudDataplexV1EnvironmentSessionSpec - a model defined in OpenAPI

        :param enable_fast_startup: The enable_fast_startup of this GoogleCloudDataplexV1EnvironmentSessionSpec.
        :param max_idle_duration: The max_idle_duration of this GoogleCloudDataplexV1EnvironmentSessionSpec.
        """
        self.openapi_types = {
            'enable_fast_startup': bool,
            'max_idle_duration': str
        }

        self.attribute_map = {
            'enable_fast_startup': 'enableFastStartup',
            'max_idle_duration': 'maxIdleDuration'
        }

        self._enable_fast_startup = enable_fast_startup
        self._max_idle_duration = max_idle_duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1EnvironmentSessionSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1EnvironmentSessionSpec of this GoogleCloudDataplexV1EnvironmentSessionSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_fast_startup(self):
        """Gets the enable_fast_startup of this GoogleCloudDataplexV1EnvironmentSessionSpec.

        Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to \"default\", and with default configuration.

        :return: The enable_fast_startup of this GoogleCloudDataplexV1EnvironmentSessionSpec.
        :rtype: bool
        """
        return self._enable_fast_startup

    @enable_fast_startup.setter
    def enable_fast_startup(self, enable_fast_startup):
        """Sets the enable_fast_startup of this GoogleCloudDataplexV1EnvironmentSessionSpec.

        Optional. If True, this causes sessions to be pre-created and available for faster startup to enable interactive exploration use-cases. This defaults to False to avoid additional billed charges. These can only be set to True for the environment with name set to \"default\", and with default configuration.

        :param enable_fast_startup: The enable_fast_startup of this GoogleCloudDataplexV1EnvironmentSessionSpec.
        :type enable_fast_startup: bool
        """

        self._enable_fast_startup = enable_fast_startup

    @property
    def max_idle_duration(self):
        """Gets the max_idle_duration of this GoogleCloudDataplexV1EnvironmentSessionSpec.

        Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.

        :return: The max_idle_duration of this GoogleCloudDataplexV1EnvironmentSessionSpec.
        :rtype: str
        """
        return self._max_idle_duration

    @max_idle_duration.setter
    def max_idle_duration(self, max_idle_duration):
        """Sets the max_idle_duration of this GoogleCloudDataplexV1EnvironmentSessionSpec.

        Optional. The idle time configuration of the session. The session will be auto-terminated at the end of this period.

        :param max_idle_duration: The max_idle_duration of this GoogleCloudDataplexV1EnvironmentSessionSpec.
        :type max_idle_duration: str
        """

        self._max_idle_duration = max_idle_duration
