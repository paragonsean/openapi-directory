# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image: str=None, java_jars: List[str]=None, properties: Dict[str, str]=None, python_packages: List[str]=None):
        """GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime - a model defined in OpenAPI

        :param image: The image of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :param java_jars: The java_jars of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :param properties: The properties of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :param python_packages: The python_packages of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        """
        self.openapi_types = {
            'image': str,
            'java_jars': List[str],
            'properties': Dict[str, str],
            'python_packages': List[str]
        }

        self.attribute_map = {
            'image': 'image',
            'java_jars': 'javaJars',
            'properties': 'properties',
            'python_packages': 'pythonPackages'
        }

        self._image = image
        self._java_jars = java_jars
        self._properties = properties
        self._python_packages = python_packages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image(self):
        """Gets the image of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.

        Optional. Container image to use.

        :return: The image of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.

        Optional. Container image to use.

        :param image: The image of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :type image: str
        """

        self._image = image

    @property
    def java_jars(self):
        """Gets the java_jars of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.

        Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar

        :return: The java_jars of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :rtype: List[str]
        """
        return self._java_jars

    @java_jars.setter
    def java_jars(self, java_jars):
        """Sets the java_jars of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.

        Optional. A list of Java JARS to add to the classpath. Valid input includes Cloud Storage URIs to Jar binaries. For example, gs://bucket-name/my/path/to/file.jar

        :param java_jars: The java_jars of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :type java_jars: List[str]
        """

        self._java_jars = java_jars

    @property
    def properties(self):
        """Gets the properties of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.

        Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).

        :return: The properties of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :rtype: Dict[str, str]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.

        Optional. Override to common configuration of open source components installed on the Dataproc cluster. The properties to set on daemon config files. Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. For more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).

        :param properties: The properties of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :type properties: Dict[str, str]
        """

        self._properties = properties

    @property
    def python_packages(self):
        """Gets the python_packages of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.

        Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz

        :return: The python_packages of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :rtype: List[str]
        """
        return self._python_packages

    @python_packages.setter
    def python_packages(self, python_packages):
        """Sets the python_packages of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.

        Optional. A list of python packages to be installed. Valid formats include Cloud Storage URI to a PIP installable library. For example, gs://bucket-name/my/path/to/lib.tar.gz

        :param python_packages: The python_packages of this GoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime.
        :type python_packages: List[str]
        """

        self._python_packages = python_packages
