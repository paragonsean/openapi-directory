# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_filter_applied: bool=None, row_filter_applied: bool=None, sampling_percent: float=None):
        """GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs - a model defined in OpenAPI

        :param column_filter_applied: The column_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        :param row_filter_applied: The row_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        :param sampling_percent: The sampling_percent of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        """
        self.openapi_types = {
            'column_filter_applied': bool,
            'row_filter_applied': bool,
            'sampling_percent': float
        }

        self.attribute_map = {
            'column_filter_applied': 'columnFilterApplied',
            'row_filter_applied': 'rowFilterApplied',
            'sampling_percent': 'samplingPercent'
        }

        self._column_filter_applied = column_filter_applied
        self._row_filter_applied = row_filter_applied
        self._sampling_percent = sampling_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_filter_applied(self):
        """Gets the column_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.

        Boolean indicating whether a column filter was applied in the DataScan job.

        :return: The column_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        :rtype: bool
        """
        return self._column_filter_applied

    @column_filter_applied.setter
    def column_filter_applied(self, column_filter_applied):
        """Sets the column_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.

        Boolean indicating whether a column filter was applied in the DataScan job.

        :param column_filter_applied: The column_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        :type column_filter_applied: bool
        """

        self._column_filter_applied = column_filter_applied

    @property
    def row_filter_applied(self):
        """Gets the row_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.

        Boolean indicating whether a row filter was applied in the DataScan job.

        :return: The row_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        :rtype: bool
        """
        return self._row_filter_applied

    @row_filter_applied.setter
    def row_filter_applied(self, row_filter_applied):
        """Sets the row_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.

        Boolean indicating whether a row filter was applied in the DataScan job.

        :param row_filter_applied: The row_filter_applied of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        :type row_filter_applied: bool
        """

        self._row_filter_applied = row_filter_applied

    @property
    def sampling_percent(self):
        """Gets the sampling_percent of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.

        The percentage of the records selected from the dataset for DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0 imply that sampling was not applied.

        :return: The sampling_percent of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        :rtype: float
        """
        return self._sampling_percent

    @sampling_percent.setter
    def sampling_percent(self, sampling_percent):
        """Sets the sampling_percent of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.

        The percentage of the records selected from the dataset for DataScan. Value ranges between 0.0 and 100.0. Value 0.0 or 100.0 imply that sampling was not applied.

        :param sampling_percent: The sampling_percent of this GoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs.
        :type sampling_percent: float
        """

        self._sampling_percent = sampling_percent
