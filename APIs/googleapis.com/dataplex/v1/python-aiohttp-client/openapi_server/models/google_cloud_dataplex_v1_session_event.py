# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_session_event_query_detail import GoogleCloudDataplexV1SessionEventQueryDetail
from openapi_server import util


class GoogleCloudDataplexV1SessionEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_succeeded: bool=None, fast_startup_enabled: bool=None, message: str=None, query: GoogleCloudDataplexV1SessionEventQueryDetail=None, session_id: str=None, type: str=None, unassigned_duration: str=None, user_id: str=None):
        """GoogleCloudDataplexV1SessionEvent - a model defined in OpenAPI

        :param event_succeeded: The event_succeeded of this GoogleCloudDataplexV1SessionEvent.
        :param fast_startup_enabled: The fast_startup_enabled of this GoogleCloudDataplexV1SessionEvent.
        :param message: The message of this GoogleCloudDataplexV1SessionEvent.
        :param query: The query of this GoogleCloudDataplexV1SessionEvent.
        :param session_id: The session_id of this GoogleCloudDataplexV1SessionEvent.
        :param type: The type of this GoogleCloudDataplexV1SessionEvent.
        :param unassigned_duration: The unassigned_duration of this GoogleCloudDataplexV1SessionEvent.
        :param user_id: The user_id of this GoogleCloudDataplexV1SessionEvent.
        """
        self.openapi_types = {
            'event_succeeded': bool,
            'fast_startup_enabled': bool,
            'message': str,
            'query': GoogleCloudDataplexV1SessionEventQueryDetail,
            'session_id': str,
            'type': str,
            'unassigned_duration': str,
            'user_id': str
        }

        self.attribute_map = {
            'event_succeeded': 'eventSucceeded',
            'fast_startup_enabled': 'fastStartupEnabled',
            'message': 'message',
            'query': 'query',
            'session_id': 'sessionId',
            'type': 'type',
            'unassigned_duration': 'unassignedDuration',
            'user_id': 'userId'
        }

        self._event_succeeded = event_succeeded
        self._fast_startup_enabled = fast_startup_enabled
        self._message = message
        self._query = query
        self._session_id = session_id
        self._type = type
        self._unassigned_duration = unassigned_duration
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1SessionEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1SessionEvent of this GoogleCloudDataplexV1SessionEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_succeeded(self):
        """Gets the event_succeeded of this GoogleCloudDataplexV1SessionEvent.

        The status of the event.

        :return: The event_succeeded of this GoogleCloudDataplexV1SessionEvent.
        :rtype: bool
        """
        return self._event_succeeded

    @event_succeeded.setter
    def event_succeeded(self, event_succeeded):
        """Sets the event_succeeded of this GoogleCloudDataplexV1SessionEvent.

        The status of the event.

        :param event_succeeded: The event_succeeded of this GoogleCloudDataplexV1SessionEvent.
        :type event_succeeded: bool
        """

        self._event_succeeded = event_succeeded

    @property
    def fast_startup_enabled(self):
        """Gets the fast_startup_enabled of this GoogleCloudDataplexV1SessionEvent.

        If the session is associated with an environment with fast startup enabled, and was created before being assigned to a user.

        :return: The fast_startup_enabled of this GoogleCloudDataplexV1SessionEvent.
        :rtype: bool
        """
        return self._fast_startup_enabled

    @fast_startup_enabled.setter
    def fast_startup_enabled(self, fast_startup_enabled):
        """Sets the fast_startup_enabled of this GoogleCloudDataplexV1SessionEvent.

        If the session is associated with an environment with fast startup enabled, and was created before being assigned to a user.

        :param fast_startup_enabled: The fast_startup_enabled of this GoogleCloudDataplexV1SessionEvent.
        :type fast_startup_enabled: bool
        """

        self._fast_startup_enabled = fast_startup_enabled

    @property
    def message(self):
        """Gets the message of this GoogleCloudDataplexV1SessionEvent.

        The log message.

        :return: The message of this GoogleCloudDataplexV1SessionEvent.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GoogleCloudDataplexV1SessionEvent.

        The log message.

        :param message: The message of this GoogleCloudDataplexV1SessionEvent.
        :type message: str
        """

        self._message = message

    @property
    def query(self):
        """Gets the query of this GoogleCloudDataplexV1SessionEvent.


        :return: The query of this GoogleCloudDataplexV1SessionEvent.
        :rtype: GoogleCloudDataplexV1SessionEventQueryDetail
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this GoogleCloudDataplexV1SessionEvent.


        :param query: The query of this GoogleCloudDataplexV1SessionEvent.
        :type query: GoogleCloudDataplexV1SessionEventQueryDetail
        """

        self._query = query

    @property
    def session_id(self):
        """Gets the session_id of this GoogleCloudDataplexV1SessionEvent.

        Unique identifier for the session.

        :return: The session_id of this GoogleCloudDataplexV1SessionEvent.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this GoogleCloudDataplexV1SessionEvent.

        Unique identifier for the session.

        :param session_id: The session_id of this GoogleCloudDataplexV1SessionEvent.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def type(self):
        """Gets the type of this GoogleCloudDataplexV1SessionEvent.

        The type of the event.

        :return: The type of this GoogleCloudDataplexV1SessionEvent.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDataplexV1SessionEvent.

        The type of the event.

        :param type: The type of this GoogleCloudDataplexV1SessionEvent.
        :type type: str
        """
        allowed_values = ["EVENT_TYPE_UNSPECIFIED", "START", "STOP", "QUERY", "CREATE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def unassigned_duration(self):
        """Gets the unassigned_duration of this GoogleCloudDataplexV1SessionEvent.

        The idle duration of a warm pooled session before it is assigned to user.

        :return: The unassigned_duration of this GoogleCloudDataplexV1SessionEvent.
        :rtype: str
        """
        return self._unassigned_duration

    @unassigned_duration.setter
    def unassigned_duration(self, unassigned_duration):
        """Sets the unassigned_duration of this GoogleCloudDataplexV1SessionEvent.

        The idle duration of a warm pooled session before it is assigned to user.

        :param unassigned_duration: The unassigned_duration of this GoogleCloudDataplexV1SessionEvent.
        :type unassigned_duration: str
        """

        self._unassigned_duration = unassigned_duration

    @property
    def user_id(self):
        """Gets the user_id of this GoogleCloudDataplexV1SessionEvent.

        The information about the user that created the session. It will be the email address of the user.

        :return: The user_id of this GoogleCloudDataplexV1SessionEvent.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this GoogleCloudDataplexV1SessionEvent.

        The information about the user that created the session. It will be the email address of the user.

        :param user_id: The user_id of this GoogleCloudDataplexV1SessionEvent.
        :type user_id: str
        """

        self._user_id = user_id
