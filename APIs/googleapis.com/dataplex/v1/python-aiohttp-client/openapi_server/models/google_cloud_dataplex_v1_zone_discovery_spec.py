# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_zone_discovery_spec_csv_options import GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions
from openapi_server.models.google_cloud_dataplex_v1_zone_discovery_spec_json_options import GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions
from openapi_server import util


class GoogleCloudDataplexV1ZoneDiscoverySpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, csv_options: GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions=None, enabled: bool=None, exclude_patterns: List[str]=None, include_patterns: List[str]=None, json_options: GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions=None, schedule: str=None):
        """GoogleCloudDataplexV1ZoneDiscoverySpec - a model defined in OpenAPI

        :param csv_options: The csv_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :param enabled: The enabled of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :param exclude_patterns: The exclude_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :param include_patterns: The include_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :param json_options: The json_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :param schedule: The schedule of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        """
        self.openapi_types = {
            'csv_options': GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions,
            'enabled': bool,
            'exclude_patterns': List[str],
            'include_patterns': List[str],
            'json_options': GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions,
            'schedule': str
        }

        self.attribute_map = {
            'csv_options': 'csvOptions',
            'enabled': 'enabled',
            'exclude_patterns': 'excludePatterns',
            'include_patterns': 'includePatterns',
            'json_options': 'jsonOptions',
            'schedule': 'schedule'
        }

        self._csv_options = csv_options
        self._enabled = enabled
        self._exclude_patterns = exclude_patterns
        self._include_patterns = include_patterns
        self._json_options = json_options
        self._schedule = schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1ZoneDiscoverySpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1ZoneDiscoverySpec of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def csv_options(self):
        """Gets the csv_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.


        :return: The csv_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :rtype: GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions
        """
        return self._csv_options

    @csv_options.setter
    def csv_options(self, csv_options):
        """Sets the csv_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.


        :param csv_options: The csv_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :type csv_options: GoogleCloudDataplexV1ZoneDiscoverySpecCsvOptions
        """

        self._csv_options = csv_options

    @property
    def enabled(self):
        """Gets the enabled of this GoogleCloudDataplexV1ZoneDiscoverySpec.

        Required. Whether discovery is enabled.

        :return: The enabled of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GoogleCloudDataplexV1ZoneDiscoverySpec.

        Required. Whether discovery is enabled.

        :param enabled: The enabled of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def exclude_patterns(self):
        """Gets the exclude_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.

        Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.

        :return: The exclude_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :rtype: List[str]
        """
        return self._exclude_patterns

    @exclude_patterns.setter
    def exclude_patterns(self, exclude_patterns):
        """Sets the exclude_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.

        Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.

        :param exclude_patterns: The exclude_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :type exclude_patterns: List[str]
        """

        self._exclude_patterns = exclude_patterns

    @property
    def include_patterns(self):
        """Gets the include_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.

        Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.

        :return: The include_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :rtype: List[str]
        """
        return self._include_patterns

    @include_patterns.setter
    def include_patterns(self, include_patterns):
        """Sets the include_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.

        Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.

        :param include_patterns: The include_patterns of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :type include_patterns: List[str]
        """

        self._include_patterns = include_patterns

    @property
    def json_options(self):
        """Gets the json_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.


        :return: The json_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :rtype: GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions
        """
        return self._json_options

    @json_options.setter
    def json_options(self, json_options):
        """Sets the json_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.


        :param json_options: The json_options of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :type json_options: GoogleCloudDataplexV1ZoneDiscoverySpecJsonOptions
        """

        self._json_options = json_options

    @property
    def schedule(self):
        """Gets the schedule of this GoogleCloudDataplexV1ZoneDiscoverySpec.

        Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.

        :return: The schedule of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :rtype: str
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this GoogleCloudDataplexV1ZoneDiscoverySpec.

        Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *.

        :param schedule: The schedule of this GoogleCloudDataplexV1ZoneDiscoverySpec.
        :type schedule: str
        """

        self._schedule = schedule
