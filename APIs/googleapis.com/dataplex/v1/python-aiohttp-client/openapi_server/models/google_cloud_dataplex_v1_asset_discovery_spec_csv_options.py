# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delimiter: str=None, disable_type_inference: bool=None, encoding: str=None, header_rows: int=None):
        """GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions - a model defined in OpenAPI

        :param delimiter: The delimiter of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :param disable_type_inference: The disable_type_inference of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :param encoding: The encoding of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :param header_rows: The header_rows of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        """
        self.openapi_types = {
            'delimiter': str,
            'disable_type_inference': bool,
            'encoding': str,
            'header_rows': int
        }

        self.attribute_map = {
            'delimiter': 'delimiter',
            'disable_type_inference': 'disableTypeInference',
            'encoding': 'encoding',
            'header_rows': 'headerRows'
        }

        self._delimiter = delimiter
        self._disable_type_inference = disable_type_inference
        self._encoding = encoding
        self._header_rows = header_rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delimiter(self):
        """Gets the delimiter of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.

        Optional. The delimiter being used to separate values. This defaults to ','.

        :return: The delimiter of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :rtype: str
        """
        return self._delimiter

    @delimiter.setter
    def delimiter(self, delimiter):
        """Sets the delimiter of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.

        Optional. The delimiter being used to separate values. This defaults to ','.

        :param delimiter: The delimiter of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :type delimiter: str
        """

        self._delimiter = delimiter

    @property
    def disable_type_inference(self):
        """Gets the disable_type_inference of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.

        Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.

        :return: The disable_type_inference of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :rtype: bool
        """
        return self._disable_type_inference

    @disable_type_inference.setter
    def disable_type_inference(self, disable_type_inference):
        """Sets the disable_type_inference of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.

        Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.

        :param disable_type_inference: The disable_type_inference of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :type disable_type_inference: bool
        """

        self._disable_type_inference = disable_type_inference

    @property
    def encoding(self):
        """Gets the encoding of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.

        Optional. The character encoding of the data. The default is UTF-8.

        :return: The encoding of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :rtype: str
        """
        return self._encoding

    @encoding.setter
    def encoding(self, encoding):
        """Sets the encoding of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.

        Optional. The character encoding of the data. The default is UTF-8.

        :param encoding: The encoding of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :type encoding: str
        """

        self._encoding = encoding

    @property
    def header_rows(self):
        """Gets the header_rows of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.

        Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.

        :return: The header_rows of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :rtype: int
        """
        return self._header_rows

    @header_rows.setter
    def header_rows(self, header_rows):
        """Sets the header_rows of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.

        Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.

        :param header_rows: The header_rows of this GoogleCloudDataplexV1AssetDiscoverySpecCsvOptions.
        :type header_rows: int
        """

        self._header_rows = header_rows
