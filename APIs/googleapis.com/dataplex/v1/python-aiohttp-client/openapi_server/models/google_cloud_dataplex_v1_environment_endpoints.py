# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1EnvironmentEndpoints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notebooks: str=None, sql: str=None):
        """GoogleCloudDataplexV1EnvironmentEndpoints - a model defined in OpenAPI

        :param notebooks: The notebooks of this GoogleCloudDataplexV1EnvironmentEndpoints.
        :param sql: The sql of this GoogleCloudDataplexV1EnvironmentEndpoints.
        """
        self.openapi_types = {
            'notebooks': str,
            'sql': str
        }

        self.attribute_map = {
            'notebooks': 'notebooks',
            'sql': 'sql'
        }

        self._notebooks = notebooks
        self._sql = sql

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1EnvironmentEndpoints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1EnvironmentEndpoints of this GoogleCloudDataplexV1EnvironmentEndpoints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notebooks(self):
        """Gets the notebooks of this GoogleCloudDataplexV1EnvironmentEndpoints.

        Output only. URI to serve notebook APIs

        :return: The notebooks of this GoogleCloudDataplexV1EnvironmentEndpoints.
        :rtype: str
        """
        return self._notebooks

    @notebooks.setter
    def notebooks(self, notebooks):
        """Sets the notebooks of this GoogleCloudDataplexV1EnvironmentEndpoints.

        Output only. URI to serve notebook APIs

        :param notebooks: The notebooks of this GoogleCloudDataplexV1EnvironmentEndpoints.
        :type notebooks: str
        """

        self._notebooks = notebooks

    @property
    def sql(self):
        """Gets the sql of this GoogleCloudDataplexV1EnvironmentEndpoints.

        Output only. URI to serve SQL APIs

        :return: The sql of this GoogleCloudDataplexV1EnvironmentEndpoints.
        :rtype: str
        """
        return self._sql

    @sql.setter
    def sql(self, sql):
        """Sets the sql of this GoogleCloudDataplexV1EnvironmentEndpoints.

        Output only. URI to serve SQL APIs

        :param sql: The sql of this GoogleCloudDataplexV1EnvironmentEndpoints.
        :type sql: str
        """

        self._sql = sql
