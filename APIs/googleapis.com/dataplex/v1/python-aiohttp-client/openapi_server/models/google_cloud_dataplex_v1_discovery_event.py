# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_discovery_event_action_details import GoogleCloudDataplexV1DiscoveryEventActionDetails
from openapi_server.models.google_cloud_dataplex_v1_discovery_event_config_details import GoogleCloudDataplexV1DiscoveryEventConfigDetails
from openapi_server.models.google_cloud_dataplex_v1_discovery_event_entity_details import GoogleCloudDataplexV1DiscoveryEventEntityDetails
from openapi_server.models.google_cloud_dataplex_v1_discovery_event_partition_details import GoogleCloudDataplexV1DiscoveryEventPartitionDetails
from openapi_server import util


class GoogleCloudDataplexV1DiscoveryEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: GoogleCloudDataplexV1DiscoveryEventActionDetails=None, asset_id: str=None, config: GoogleCloudDataplexV1DiscoveryEventConfigDetails=None, data_location: str=None, entity: GoogleCloudDataplexV1DiscoveryEventEntityDetails=None, lake_id: str=None, message: str=None, partition: GoogleCloudDataplexV1DiscoveryEventPartitionDetails=None, type: str=None, zone_id: str=None):
        """GoogleCloudDataplexV1DiscoveryEvent - a model defined in OpenAPI

        :param action: The action of this GoogleCloudDataplexV1DiscoveryEvent.
        :param asset_id: The asset_id of this GoogleCloudDataplexV1DiscoveryEvent.
        :param config: The config of this GoogleCloudDataplexV1DiscoveryEvent.
        :param data_location: The data_location of this GoogleCloudDataplexV1DiscoveryEvent.
        :param entity: The entity of this GoogleCloudDataplexV1DiscoveryEvent.
        :param lake_id: The lake_id of this GoogleCloudDataplexV1DiscoveryEvent.
        :param message: The message of this GoogleCloudDataplexV1DiscoveryEvent.
        :param partition: The partition of this GoogleCloudDataplexV1DiscoveryEvent.
        :param type: The type of this GoogleCloudDataplexV1DiscoveryEvent.
        :param zone_id: The zone_id of this GoogleCloudDataplexV1DiscoveryEvent.
        """
        self.openapi_types = {
            'action': GoogleCloudDataplexV1DiscoveryEventActionDetails,
            'asset_id': str,
            'config': GoogleCloudDataplexV1DiscoveryEventConfigDetails,
            'data_location': str,
            'entity': GoogleCloudDataplexV1DiscoveryEventEntityDetails,
            'lake_id': str,
            'message': str,
            'partition': GoogleCloudDataplexV1DiscoveryEventPartitionDetails,
            'type': str,
            'zone_id': str
        }

        self.attribute_map = {
            'action': 'action',
            'asset_id': 'assetId',
            'config': 'config',
            'data_location': 'dataLocation',
            'entity': 'entity',
            'lake_id': 'lakeId',
            'message': 'message',
            'partition': 'partition',
            'type': 'type',
            'zone_id': 'zoneId'
        }

        self._action = action
        self._asset_id = asset_id
        self._config = config
        self._data_location = data_location
        self._entity = entity
        self._lake_id = lake_id
        self._message = message
        self._partition = partition
        self._type = type
        self._zone_id = zone_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DiscoveryEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DiscoveryEvent of this GoogleCloudDataplexV1DiscoveryEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this GoogleCloudDataplexV1DiscoveryEvent.


        :return: The action of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: GoogleCloudDataplexV1DiscoveryEventActionDetails
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this GoogleCloudDataplexV1DiscoveryEvent.


        :param action: The action of this GoogleCloudDataplexV1DiscoveryEvent.
        :type action: GoogleCloudDataplexV1DiscoveryEventActionDetails
        """

        self._action = action

    @property
    def asset_id(self):
        """Gets the asset_id of this GoogleCloudDataplexV1DiscoveryEvent.

        The id of the associated asset.

        :return: The asset_id of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this GoogleCloudDataplexV1DiscoveryEvent.

        The id of the associated asset.

        :param asset_id: The asset_id of this GoogleCloudDataplexV1DiscoveryEvent.
        :type asset_id: str
        """

        self._asset_id = asset_id

    @property
    def config(self):
        """Gets the config of this GoogleCloudDataplexV1DiscoveryEvent.


        :return: The config of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: GoogleCloudDataplexV1DiscoveryEventConfigDetails
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this GoogleCloudDataplexV1DiscoveryEvent.


        :param config: The config of this GoogleCloudDataplexV1DiscoveryEvent.
        :type config: GoogleCloudDataplexV1DiscoveryEventConfigDetails
        """

        self._config = config

    @property
    def data_location(self):
        """Gets the data_location of this GoogleCloudDataplexV1DiscoveryEvent.

        The data location associated with the event.

        :return: The data_location of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: str
        """
        return self._data_location

    @data_location.setter
    def data_location(self, data_location):
        """Sets the data_location of this GoogleCloudDataplexV1DiscoveryEvent.

        The data location associated with the event.

        :param data_location: The data_location of this GoogleCloudDataplexV1DiscoveryEvent.
        :type data_location: str
        """

        self._data_location = data_location

    @property
    def entity(self):
        """Gets the entity of this GoogleCloudDataplexV1DiscoveryEvent.


        :return: The entity of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: GoogleCloudDataplexV1DiscoveryEventEntityDetails
        """
        return self._entity

    @entity.setter
    def entity(self, entity):
        """Sets the entity of this GoogleCloudDataplexV1DiscoveryEvent.


        :param entity: The entity of this GoogleCloudDataplexV1DiscoveryEvent.
        :type entity: GoogleCloudDataplexV1DiscoveryEventEntityDetails
        """

        self._entity = entity

    @property
    def lake_id(self):
        """Gets the lake_id of this GoogleCloudDataplexV1DiscoveryEvent.

        The id of the associated lake.

        :return: The lake_id of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: str
        """
        return self._lake_id

    @lake_id.setter
    def lake_id(self, lake_id):
        """Sets the lake_id of this GoogleCloudDataplexV1DiscoveryEvent.

        The id of the associated lake.

        :param lake_id: The lake_id of this GoogleCloudDataplexV1DiscoveryEvent.
        :type lake_id: str
        """

        self._lake_id = lake_id

    @property
    def message(self):
        """Gets the message of this GoogleCloudDataplexV1DiscoveryEvent.

        The log message.

        :return: The message of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GoogleCloudDataplexV1DiscoveryEvent.

        The log message.

        :param message: The message of this GoogleCloudDataplexV1DiscoveryEvent.
        :type message: str
        """

        self._message = message

    @property
    def partition(self):
        """Gets the partition of this GoogleCloudDataplexV1DiscoveryEvent.


        :return: The partition of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: GoogleCloudDataplexV1DiscoveryEventPartitionDetails
        """
        return self._partition

    @partition.setter
    def partition(self, partition):
        """Sets the partition of this GoogleCloudDataplexV1DiscoveryEvent.


        :param partition: The partition of this GoogleCloudDataplexV1DiscoveryEvent.
        :type partition: GoogleCloudDataplexV1DiscoveryEventPartitionDetails
        """

        self._partition = partition

    @property
    def type(self):
        """Gets the type of this GoogleCloudDataplexV1DiscoveryEvent.

        The type of the event being logged.

        :return: The type of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDataplexV1DiscoveryEvent.

        The type of the event being logged.

        :param type: The type of this GoogleCloudDataplexV1DiscoveryEvent.
        :type type: str
        """
        allowed_values = ["EVENT_TYPE_UNSPECIFIED", "CONFIG", "ENTITY_CREATED", "ENTITY_UPDATED", "ENTITY_DELETED", "PARTITION_CREATED", "PARTITION_UPDATED", "PARTITION_DELETED"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def zone_id(self):
        """Gets the zone_id of this GoogleCloudDataplexV1DiscoveryEvent.

        The id of the associated zone.

        :return: The zone_id of this GoogleCloudDataplexV1DiscoveryEvent.
        :rtype: str
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id):
        """Sets the zone_id of this GoogleCloudDataplexV1DiscoveryEvent.

        The id of the associated zone.

        :param zone_id: The zone_id of this GoogleCloudDataplexV1DiscoveryEvent.
        :type zone_id: str
        """

        self._zone_id = zone_id
