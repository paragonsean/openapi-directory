# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1StorageFormatJsonOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encoding: str=None):
        """GoogleCloudDataplexV1StorageFormatJsonOptions - a model defined in OpenAPI

        :param encoding: The encoding of this GoogleCloudDataplexV1StorageFormatJsonOptions.
        """
        self.openapi_types = {
            'encoding': str
        }

        self.attribute_map = {
            'encoding': 'encoding'
        }

        self._encoding = encoding

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1StorageFormatJsonOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1StorageFormatJsonOptions of this GoogleCloudDataplexV1StorageFormatJsonOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encoding(self):
        """Gets the encoding of this GoogleCloudDataplexV1StorageFormatJsonOptions.

        Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\" and \"ISO-8859-1\". Defaults to UTF-8 if not specified.

        :return: The encoding of this GoogleCloudDataplexV1StorageFormatJsonOptions.
        :rtype: str
        """
        return self._encoding

    @encoding.setter
    def encoding(self, encoding):
        """Sets the encoding of this GoogleCloudDataplexV1StorageFormatJsonOptions.

        Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\" and \"ISO-8859-1\". Defaults to UTF-8 if not specified.

        :param encoding: The encoding of this GoogleCloudDataplexV1StorageFormatJsonOptions.
        :type encoding: str
        """

        self._encoding = encoding
