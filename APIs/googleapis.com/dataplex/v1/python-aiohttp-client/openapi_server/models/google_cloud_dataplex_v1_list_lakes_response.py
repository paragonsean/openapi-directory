# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_lake import GoogleCloudDataplexV1Lake
from openapi_server import util


class GoogleCloudDataplexV1ListLakesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lakes: List[GoogleCloudDataplexV1Lake]=None, next_page_token: str=None, unreachable_locations: List[str]=None):
        """GoogleCloudDataplexV1ListLakesResponse - a model defined in OpenAPI

        :param lakes: The lakes of this GoogleCloudDataplexV1ListLakesResponse.
        :param next_page_token: The next_page_token of this GoogleCloudDataplexV1ListLakesResponse.
        :param unreachable_locations: The unreachable_locations of this GoogleCloudDataplexV1ListLakesResponse.
        """
        self.openapi_types = {
            'lakes': List[GoogleCloudDataplexV1Lake],
            'next_page_token': str,
            'unreachable_locations': List[str]
        }

        self.attribute_map = {
            'lakes': 'lakes',
            'next_page_token': 'nextPageToken',
            'unreachable_locations': 'unreachableLocations'
        }

        self._lakes = lakes
        self._next_page_token = next_page_token
        self._unreachable_locations = unreachable_locations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1ListLakesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1ListLakesResponse of this GoogleCloudDataplexV1ListLakesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lakes(self):
        """Gets the lakes of this GoogleCloudDataplexV1ListLakesResponse.

        Lakes under the given parent location.

        :return: The lakes of this GoogleCloudDataplexV1ListLakesResponse.
        :rtype: List[GoogleCloudDataplexV1Lake]
        """
        return self._lakes

    @lakes.setter
    def lakes(self, lakes):
        """Sets the lakes of this GoogleCloudDataplexV1ListLakesResponse.

        Lakes under the given parent location.

        :param lakes: The lakes of this GoogleCloudDataplexV1ListLakesResponse.
        :type lakes: List[GoogleCloudDataplexV1Lake]
        """

        self._lakes = lakes

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleCloudDataplexV1ListLakesResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :return: The next_page_token of this GoogleCloudDataplexV1ListLakesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleCloudDataplexV1ListLakesResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :param next_page_token: The next_page_token of this GoogleCloudDataplexV1ListLakesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def unreachable_locations(self):
        """Gets the unreachable_locations of this GoogleCloudDataplexV1ListLakesResponse.

        Locations that could not be reached.

        :return: The unreachable_locations of this GoogleCloudDataplexV1ListLakesResponse.
        :rtype: List[str]
        """
        return self._unreachable_locations

    @unreachable_locations.setter
    def unreachable_locations(self, unreachable_locations):
        """Sets the unreachable_locations of this GoogleCloudDataplexV1ListLakesResponse.

        Locations that could not be reached.

        :param unreachable_locations: The unreachable_locations of this GoogleCloudDataplexV1ListLakesResponse.
        :type unreachable_locations: List[str]
        """

        self._unreachable_locations = unreachable_locations
