# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1TaskTriggerSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disabled: bool=None, max_retries: int=None, schedule: str=None, start_time: str=None, type: str=None):
        """GoogleCloudDataplexV1TaskTriggerSpec - a model defined in OpenAPI

        :param disabled: The disabled of this GoogleCloudDataplexV1TaskTriggerSpec.
        :param max_retries: The max_retries of this GoogleCloudDataplexV1TaskTriggerSpec.
        :param schedule: The schedule of this GoogleCloudDataplexV1TaskTriggerSpec.
        :param start_time: The start_time of this GoogleCloudDataplexV1TaskTriggerSpec.
        :param type: The type of this GoogleCloudDataplexV1TaskTriggerSpec.
        """
        self.openapi_types = {
            'disabled': bool,
            'max_retries': int,
            'schedule': str,
            'start_time': str,
            'type': str
        }

        self.attribute_map = {
            'disabled': 'disabled',
            'max_retries': 'maxRetries',
            'schedule': 'schedule',
            'start_time': 'startTime',
            'type': 'type'
        }

        self._disabled = disabled
        self._max_retries = max_retries
        self._schedule = schedule
        self._start_time = start_time
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1TaskTriggerSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1TaskTriggerSpec of this GoogleCloudDataplexV1TaskTriggerSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disabled(self):
        """Gets the disabled of this GoogleCloudDataplexV1TaskTriggerSpec.

        Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.

        :return: The disabled of this GoogleCloudDataplexV1TaskTriggerSpec.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this GoogleCloudDataplexV1TaskTriggerSpec.

        Optional. Prevent the task from executing. This does not cancel already running tasks. It is intended to temporarily disable RECURRING tasks.

        :param disabled: The disabled of this GoogleCloudDataplexV1TaskTriggerSpec.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def max_retries(self):
        """Gets the max_retries of this GoogleCloudDataplexV1TaskTriggerSpec.

        Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.

        :return: The max_retries of this GoogleCloudDataplexV1TaskTriggerSpec.
        :rtype: int
        """
        return self._max_retries

    @max_retries.setter
    def max_retries(self, max_retries):
        """Sets the max_retries of this GoogleCloudDataplexV1TaskTriggerSpec.

        Optional. Number of retry attempts before aborting. Set to zero to never attempt to retry a failed task.

        :param max_retries: The max_retries of this GoogleCloudDataplexV1TaskTriggerSpec.
        :type max_retries: int
        """

        self._max_retries = max_retries

    @property
    def schedule(self):
        """Gets the schedule of this GoogleCloudDataplexV1TaskTriggerSpec.

        Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.

        :return: The schedule of this GoogleCloudDataplexV1TaskTriggerSpec.
        :rtype: str
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this GoogleCloudDataplexV1TaskTriggerSpec.

        Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running tasks periodically. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or \"TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, CRON_TZ=America/New_York 1 * * * *, or TZ=America/New_York 1 * * * *. This field is required for RECURRING tasks.

        :param schedule: The schedule of this GoogleCloudDataplexV1TaskTriggerSpec.
        :type schedule: str
        """

        self._schedule = schedule

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudDataplexV1TaskTriggerSpec.

        Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.

        :return: The start_time of this GoogleCloudDataplexV1TaskTriggerSpec.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudDataplexV1TaskTriggerSpec.

        Optional. The first run of the task will be after this time. If not specified, the task will run shortly after being submitted if ON_DEMAND and based on the schedule if RECURRING.

        :param start_time: The start_time of this GoogleCloudDataplexV1TaskTriggerSpec.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def type(self):
        """Gets the type of this GoogleCloudDataplexV1TaskTriggerSpec.

        Required. Immutable. Trigger type of the user-specified Task.

        :return: The type of this GoogleCloudDataplexV1TaskTriggerSpec.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDataplexV1TaskTriggerSpec.

        Required. Immutable. Trigger type of the user-specified Task.

        :param type: The type of this GoogleCloudDataplexV1TaskTriggerSpec.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "ON_DEMAND", "RECURRING"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
