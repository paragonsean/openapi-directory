# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_asset_status import GoogleCloudDataplexV1AssetStatus
from openapi_server.models.google_cloud_dataplex_v1_zone_discovery_spec import GoogleCloudDataplexV1ZoneDiscoverySpec
from openapi_server.models.google_cloud_dataplex_v1_zone_resource_spec import GoogleCloudDataplexV1ZoneResourceSpec
from openapi_server import util


class GoogleCloudDataplexV1Zone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_status: GoogleCloudDataplexV1AssetStatus=None, create_time: str=None, description: str=None, discovery_spec: GoogleCloudDataplexV1ZoneDiscoverySpec=None, display_name: str=None, labels: Dict[str, str]=None, name: str=None, resource_spec: GoogleCloudDataplexV1ZoneResourceSpec=None, state: str=None, type: str=None, uid: str=None, update_time: str=None):
        """GoogleCloudDataplexV1Zone - a model defined in OpenAPI

        :param asset_status: The asset_status of this GoogleCloudDataplexV1Zone.
        :param create_time: The create_time of this GoogleCloudDataplexV1Zone.
        :param description: The description of this GoogleCloudDataplexV1Zone.
        :param discovery_spec: The discovery_spec of this GoogleCloudDataplexV1Zone.
        :param display_name: The display_name of this GoogleCloudDataplexV1Zone.
        :param labels: The labels of this GoogleCloudDataplexV1Zone.
        :param name: The name of this GoogleCloudDataplexV1Zone.
        :param resource_spec: The resource_spec of this GoogleCloudDataplexV1Zone.
        :param state: The state of this GoogleCloudDataplexV1Zone.
        :param type: The type of this GoogleCloudDataplexV1Zone.
        :param uid: The uid of this GoogleCloudDataplexV1Zone.
        :param update_time: The update_time of this GoogleCloudDataplexV1Zone.
        """
        self.openapi_types = {
            'asset_status': GoogleCloudDataplexV1AssetStatus,
            'create_time': str,
            'description': str,
            'discovery_spec': GoogleCloudDataplexV1ZoneDiscoverySpec,
            'display_name': str,
            'labels': Dict[str, str],
            'name': str,
            'resource_spec': GoogleCloudDataplexV1ZoneResourceSpec,
            'state': str,
            'type': str,
            'uid': str,
            'update_time': str
        }

        self.attribute_map = {
            'asset_status': 'assetStatus',
            'create_time': 'createTime',
            'description': 'description',
            'discovery_spec': 'discoverySpec',
            'display_name': 'displayName',
            'labels': 'labels',
            'name': 'name',
            'resource_spec': 'resourceSpec',
            'state': 'state',
            'type': 'type',
            'uid': 'uid',
            'update_time': 'updateTime'
        }

        self._asset_status = asset_status
        self._create_time = create_time
        self._description = description
        self._discovery_spec = discovery_spec
        self._display_name = display_name
        self._labels = labels
        self._name = name
        self._resource_spec = resource_spec
        self._state = state
        self._type = type
        self._uid = uid
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1Zone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1Zone of this GoogleCloudDataplexV1Zone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_status(self):
        """Gets the asset_status of this GoogleCloudDataplexV1Zone.


        :return: The asset_status of this GoogleCloudDataplexV1Zone.
        :rtype: GoogleCloudDataplexV1AssetStatus
        """
        return self._asset_status

    @asset_status.setter
    def asset_status(self, asset_status):
        """Sets the asset_status of this GoogleCloudDataplexV1Zone.


        :param asset_status: The asset_status of this GoogleCloudDataplexV1Zone.
        :type asset_status: GoogleCloudDataplexV1AssetStatus
        """

        self._asset_status = asset_status

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDataplexV1Zone.

        Output only. The time when the zone was created.

        :return: The create_time of this GoogleCloudDataplexV1Zone.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDataplexV1Zone.

        Output only. The time when the zone was created.

        :param create_time: The create_time of this GoogleCloudDataplexV1Zone.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudDataplexV1Zone.

        Optional. Description of the zone.

        :return: The description of this GoogleCloudDataplexV1Zone.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDataplexV1Zone.

        Optional. Description of the zone.

        :param description: The description of this GoogleCloudDataplexV1Zone.
        :type description: str
        """

        self._description = description

    @property
    def discovery_spec(self):
        """Gets the discovery_spec of this GoogleCloudDataplexV1Zone.


        :return: The discovery_spec of this GoogleCloudDataplexV1Zone.
        :rtype: GoogleCloudDataplexV1ZoneDiscoverySpec
        """
        return self._discovery_spec

    @discovery_spec.setter
    def discovery_spec(self, discovery_spec):
        """Sets the discovery_spec of this GoogleCloudDataplexV1Zone.


        :param discovery_spec: The discovery_spec of this GoogleCloudDataplexV1Zone.
        :type discovery_spec: GoogleCloudDataplexV1ZoneDiscoverySpec
        """

        self._discovery_spec = discovery_spec

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDataplexV1Zone.

        Optional. User friendly display name.

        :return: The display_name of this GoogleCloudDataplexV1Zone.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDataplexV1Zone.

        Optional. User friendly display name.

        :param display_name: The display_name of this GoogleCloudDataplexV1Zone.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudDataplexV1Zone.

        Optional. User defined labels for the zone.

        :return: The labels of this GoogleCloudDataplexV1Zone.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudDataplexV1Zone.

        Optional. User defined labels for the zone.

        :param labels: The labels of this GoogleCloudDataplexV1Zone.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudDataplexV1Zone.

        Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.

        :return: The name of this GoogleCloudDataplexV1Zone.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDataplexV1Zone.

        Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.

        :param name: The name of this GoogleCloudDataplexV1Zone.
        :type name: str
        """

        self._name = name

    @property
    def resource_spec(self):
        """Gets the resource_spec of this GoogleCloudDataplexV1Zone.


        :return: The resource_spec of this GoogleCloudDataplexV1Zone.
        :rtype: GoogleCloudDataplexV1ZoneResourceSpec
        """
        return self._resource_spec

    @resource_spec.setter
    def resource_spec(self, resource_spec):
        """Sets the resource_spec of this GoogleCloudDataplexV1Zone.


        :param resource_spec: The resource_spec of this GoogleCloudDataplexV1Zone.
        :type resource_spec: GoogleCloudDataplexV1ZoneResourceSpec
        """

        self._resource_spec = resource_spec

    @property
    def state(self):
        """Gets the state of this GoogleCloudDataplexV1Zone.

        Output only. Current state of the zone.

        :return: The state of this GoogleCloudDataplexV1Zone.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDataplexV1Zone.

        Output only. Current state of the zone.

        :param state: The state of this GoogleCloudDataplexV1Zone.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "ACTIVE", "CREATING", "DELETING", "ACTION_REQUIRED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def type(self):
        """Gets the type of this GoogleCloudDataplexV1Zone.

        Required. Immutable. The type of the zone.

        :return: The type of this GoogleCloudDataplexV1Zone.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDataplexV1Zone.

        Required. Immutable. The type of the zone.

        :param type: The type of this GoogleCloudDataplexV1Zone.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "RAW", "CURATED"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def uid(self):
        """Gets the uid of this GoogleCloudDataplexV1Zone.

        Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.

        :return: The uid of this GoogleCloudDataplexV1Zone.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this GoogleCloudDataplexV1Zone.

        Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.

        :param uid: The uid of this GoogleCloudDataplexV1Zone.
        :type uid: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudDataplexV1Zone.

        Output only. The time when the zone was last updated.

        :return: The update_time of this GoogleCloudDataplexV1Zone.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudDataplexV1Zone.

        Output only. The time when the zone was last updated.

        :param update_time: The update_time of this GoogleCloudDataplexV1Zone.
        :type update_time: str
        """

        self._update_time = update_time
