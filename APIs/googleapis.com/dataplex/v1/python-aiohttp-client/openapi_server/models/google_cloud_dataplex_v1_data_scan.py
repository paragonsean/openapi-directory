# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_data_profile_result import GoogleCloudDataplexV1DataProfileResult
from openapi_server.models.google_cloud_dataplex_v1_data_profile_spec import GoogleCloudDataplexV1DataProfileSpec
from openapi_server.models.google_cloud_dataplex_v1_data_quality_result import GoogleCloudDataplexV1DataQualityResult
from openapi_server.models.google_cloud_dataplex_v1_data_quality_spec import GoogleCloudDataplexV1DataQualitySpec
from openapi_server.models.google_cloud_dataplex_v1_data_scan_execution_spec import GoogleCloudDataplexV1DataScanExecutionSpec
from openapi_server.models.google_cloud_dataplex_v1_data_scan_execution_status import GoogleCloudDataplexV1DataScanExecutionStatus
from openapi_server.models.google_cloud_dataplex_v1_data_source import GoogleCloudDataplexV1DataSource
from openapi_server import util


class GoogleCloudDataplexV1DataScan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, data: GoogleCloudDataplexV1DataSource=None, data_profile_result: GoogleCloudDataplexV1DataProfileResult=None, data_profile_spec: GoogleCloudDataplexV1DataProfileSpec=None, data_quality_result: GoogleCloudDataplexV1DataQualityResult=None, data_quality_spec: GoogleCloudDataplexV1DataQualitySpec=None, description: str=None, display_name: str=None, execution_spec: GoogleCloudDataplexV1DataScanExecutionSpec=None, execution_status: GoogleCloudDataplexV1DataScanExecutionStatus=None, labels: Dict[str, str]=None, name: str=None, state: str=None, type: str=None, uid: str=None, update_time: str=None):
        """GoogleCloudDataplexV1DataScan - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDataplexV1DataScan.
        :param data: The data of this GoogleCloudDataplexV1DataScan.
        :param data_profile_result: The data_profile_result of this GoogleCloudDataplexV1DataScan.
        :param data_profile_spec: The data_profile_spec of this GoogleCloudDataplexV1DataScan.
        :param data_quality_result: The data_quality_result of this GoogleCloudDataplexV1DataScan.
        :param data_quality_spec: The data_quality_spec of this GoogleCloudDataplexV1DataScan.
        :param description: The description of this GoogleCloudDataplexV1DataScan.
        :param display_name: The display_name of this GoogleCloudDataplexV1DataScan.
        :param execution_spec: The execution_spec of this GoogleCloudDataplexV1DataScan.
        :param execution_status: The execution_status of this GoogleCloudDataplexV1DataScan.
        :param labels: The labels of this GoogleCloudDataplexV1DataScan.
        :param name: The name of this GoogleCloudDataplexV1DataScan.
        :param state: The state of this GoogleCloudDataplexV1DataScan.
        :param type: The type of this GoogleCloudDataplexV1DataScan.
        :param uid: The uid of this GoogleCloudDataplexV1DataScan.
        :param update_time: The update_time of this GoogleCloudDataplexV1DataScan.
        """
        self.openapi_types = {
            'create_time': str,
            'data': GoogleCloudDataplexV1DataSource,
            'data_profile_result': GoogleCloudDataplexV1DataProfileResult,
            'data_profile_spec': GoogleCloudDataplexV1DataProfileSpec,
            'data_quality_result': GoogleCloudDataplexV1DataQualityResult,
            'data_quality_spec': GoogleCloudDataplexV1DataQualitySpec,
            'description': str,
            'display_name': str,
            'execution_spec': GoogleCloudDataplexV1DataScanExecutionSpec,
            'execution_status': GoogleCloudDataplexV1DataScanExecutionStatus,
            'labels': Dict[str, str],
            'name': str,
            'state': str,
            'type': str,
            'uid': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'data': 'data',
            'data_profile_result': 'dataProfileResult',
            'data_profile_spec': 'dataProfileSpec',
            'data_quality_result': 'dataQualityResult',
            'data_quality_spec': 'dataQualitySpec',
            'description': 'description',
            'display_name': 'displayName',
            'execution_spec': 'executionSpec',
            'execution_status': 'executionStatus',
            'labels': 'labels',
            'name': 'name',
            'state': 'state',
            'type': 'type',
            'uid': 'uid',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._data = data
        self._data_profile_result = data_profile_result
        self._data_profile_spec = data_profile_spec
        self._data_quality_result = data_quality_result
        self._data_quality_spec = data_quality_spec
        self._description = description
        self._display_name = display_name
        self._execution_spec = execution_spec
        self._execution_status = execution_status
        self._labels = labels
        self._name = name
        self._state = state
        self._type = type
        self._uid = uid
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DataScan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DataScan of this GoogleCloudDataplexV1DataScan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDataplexV1DataScan.

        Output only. The time when the scan was created.

        :return: The create_time of this GoogleCloudDataplexV1DataScan.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDataplexV1DataScan.

        Output only. The time when the scan was created.

        :param create_time: The create_time of this GoogleCloudDataplexV1DataScan.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def data(self):
        """Gets the data of this GoogleCloudDataplexV1DataScan.


        :return: The data of this GoogleCloudDataplexV1DataScan.
        :rtype: GoogleCloudDataplexV1DataSource
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this GoogleCloudDataplexV1DataScan.


        :param data: The data of this GoogleCloudDataplexV1DataScan.
        :type data: GoogleCloudDataplexV1DataSource
        """

        self._data = data

    @property
    def data_profile_result(self):
        """Gets the data_profile_result of this GoogleCloudDataplexV1DataScan.


        :return: The data_profile_result of this GoogleCloudDataplexV1DataScan.
        :rtype: GoogleCloudDataplexV1DataProfileResult
        """
        return self._data_profile_result

    @data_profile_result.setter
    def data_profile_result(self, data_profile_result):
        """Sets the data_profile_result of this GoogleCloudDataplexV1DataScan.


        :param data_profile_result: The data_profile_result of this GoogleCloudDataplexV1DataScan.
        :type data_profile_result: GoogleCloudDataplexV1DataProfileResult
        """

        self._data_profile_result = data_profile_result

    @property
    def data_profile_spec(self):
        """Gets the data_profile_spec of this GoogleCloudDataplexV1DataScan.


        :return: The data_profile_spec of this GoogleCloudDataplexV1DataScan.
        :rtype: GoogleCloudDataplexV1DataProfileSpec
        """
        return self._data_profile_spec

    @data_profile_spec.setter
    def data_profile_spec(self, data_profile_spec):
        """Sets the data_profile_spec of this GoogleCloudDataplexV1DataScan.


        :param data_profile_spec: The data_profile_spec of this GoogleCloudDataplexV1DataScan.
        :type data_profile_spec: GoogleCloudDataplexV1DataProfileSpec
        """

        self._data_profile_spec = data_profile_spec

    @property
    def data_quality_result(self):
        """Gets the data_quality_result of this GoogleCloudDataplexV1DataScan.


        :return: The data_quality_result of this GoogleCloudDataplexV1DataScan.
        :rtype: GoogleCloudDataplexV1DataQualityResult
        """
        return self._data_quality_result

    @data_quality_result.setter
    def data_quality_result(self, data_quality_result):
        """Sets the data_quality_result of this GoogleCloudDataplexV1DataScan.


        :param data_quality_result: The data_quality_result of this GoogleCloudDataplexV1DataScan.
        :type data_quality_result: GoogleCloudDataplexV1DataQualityResult
        """

        self._data_quality_result = data_quality_result

    @property
    def data_quality_spec(self):
        """Gets the data_quality_spec of this GoogleCloudDataplexV1DataScan.


        :return: The data_quality_spec of this GoogleCloudDataplexV1DataScan.
        :rtype: GoogleCloudDataplexV1DataQualitySpec
        """
        return self._data_quality_spec

    @data_quality_spec.setter
    def data_quality_spec(self, data_quality_spec):
        """Sets the data_quality_spec of this GoogleCloudDataplexV1DataScan.


        :param data_quality_spec: The data_quality_spec of this GoogleCloudDataplexV1DataScan.
        :type data_quality_spec: GoogleCloudDataplexV1DataQualitySpec
        """

        self._data_quality_spec = data_quality_spec

    @property
    def description(self):
        """Gets the description of this GoogleCloudDataplexV1DataScan.

        Optional. Description of the scan. Must be between 1-1024 characters.

        :return: The description of this GoogleCloudDataplexV1DataScan.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDataplexV1DataScan.

        Optional. Description of the scan. Must be between 1-1024 characters.

        :param description: The description of this GoogleCloudDataplexV1DataScan.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDataplexV1DataScan.

        Optional. User friendly display name. Must be between 1-256 characters.

        :return: The display_name of this GoogleCloudDataplexV1DataScan.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDataplexV1DataScan.

        Optional. User friendly display name. Must be between 1-256 characters.

        :param display_name: The display_name of this GoogleCloudDataplexV1DataScan.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def execution_spec(self):
        """Gets the execution_spec of this GoogleCloudDataplexV1DataScan.


        :return: The execution_spec of this GoogleCloudDataplexV1DataScan.
        :rtype: GoogleCloudDataplexV1DataScanExecutionSpec
        """
        return self._execution_spec

    @execution_spec.setter
    def execution_spec(self, execution_spec):
        """Sets the execution_spec of this GoogleCloudDataplexV1DataScan.


        :param execution_spec: The execution_spec of this GoogleCloudDataplexV1DataScan.
        :type execution_spec: GoogleCloudDataplexV1DataScanExecutionSpec
        """

        self._execution_spec = execution_spec

    @property
    def execution_status(self):
        """Gets the execution_status of this GoogleCloudDataplexV1DataScan.


        :return: The execution_status of this GoogleCloudDataplexV1DataScan.
        :rtype: GoogleCloudDataplexV1DataScanExecutionStatus
        """
        return self._execution_status

    @execution_status.setter
    def execution_status(self, execution_status):
        """Sets the execution_status of this GoogleCloudDataplexV1DataScan.


        :param execution_status: The execution_status of this GoogleCloudDataplexV1DataScan.
        :type execution_status: GoogleCloudDataplexV1DataScanExecutionStatus
        """

        self._execution_status = execution_status

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudDataplexV1DataScan.

        Optional. User-defined labels for the scan.

        :return: The labels of this GoogleCloudDataplexV1DataScan.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudDataplexV1DataScan.

        Optional. User-defined labels for the scan.

        :param labels: The labels of this GoogleCloudDataplexV1DataScan.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudDataplexV1DataScan.

        Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.

        :return: The name of this GoogleCloudDataplexV1DataScan.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDataplexV1DataScan.

        Output only. The relative resource name of the scan, of the form: projects/{project}/locations/{location_id}/dataScans/{datascan_id}, where project refers to a project_id or project_number and location_id refers to a GCP region.

        :param name: The name of this GoogleCloudDataplexV1DataScan.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleCloudDataplexV1DataScan.

        Output only. Current state of the DataScan.

        :return: The state of this GoogleCloudDataplexV1DataScan.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudDataplexV1DataScan.

        Output only. Current state of the DataScan.

        :param state: The state of this GoogleCloudDataplexV1DataScan.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "ACTIVE", "CREATING", "DELETING", "ACTION_REQUIRED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def type(self):
        """Gets the type of this GoogleCloudDataplexV1DataScan.

        Output only. The type of DataScan.

        :return: The type of this GoogleCloudDataplexV1DataScan.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDataplexV1DataScan.

        Output only. The type of DataScan.

        :param type: The type of this GoogleCloudDataplexV1DataScan.
        :type type: str
        """
        allowed_values = ["DATA_SCAN_TYPE_UNSPECIFIED", "DATA_QUALITY", "DATA_PROFILE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def uid(self):
        """Gets the uid of this GoogleCloudDataplexV1DataScan.

        Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.

        :return: The uid of this GoogleCloudDataplexV1DataScan.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this GoogleCloudDataplexV1DataScan.

        Output only. System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with the same name.

        :param uid: The uid of this GoogleCloudDataplexV1DataScan.
        :type uid: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudDataplexV1DataScan.

        Output only. The time when the scan was last updated.

        :return: The update_time of this GoogleCloudDataplexV1DataScan.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudDataplexV1DataScan.

        Output only. The time when the scan was last updated.

        :param update_time: The update_time of this GoogleCloudDataplexV1DataScan.
        :type update_time: str
        """

        self._update_time = update_time
