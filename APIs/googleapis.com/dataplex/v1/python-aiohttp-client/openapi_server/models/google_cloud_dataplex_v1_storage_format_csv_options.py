# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1StorageFormatCsvOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delimiter: str=None, encoding: str=None, header_rows: int=None, quote: str=None):
        """GoogleCloudDataplexV1StorageFormatCsvOptions - a model defined in OpenAPI

        :param delimiter: The delimiter of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :param encoding: The encoding of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :param header_rows: The header_rows of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :param quote: The quote of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        """
        self.openapi_types = {
            'delimiter': str,
            'encoding': str,
            'header_rows': int,
            'quote': str
        }

        self.attribute_map = {
            'delimiter': 'delimiter',
            'encoding': 'encoding',
            'header_rows': 'headerRows',
            'quote': 'quote'
        }

        self._delimiter = delimiter
        self._encoding = encoding
        self._header_rows = header_rows
        self._quote = quote

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1StorageFormatCsvOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1StorageFormatCsvOptions of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delimiter(self):
        """Gets the delimiter of this GoogleCloudDataplexV1StorageFormatCsvOptions.

        Optional. The delimiter used to separate values. Defaults to ','.

        :return: The delimiter of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :rtype: str
        """
        return self._delimiter

    @delimiter.setter
    def delimiter(self, delimiter):
        """Sets the delimiter of this GoogleCloudDataplexV1StorageFormatCsvOptions.

        Optional. The delimiter used to separate values. Defaults to ','.

        :param delimiter: The delimiter of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :type delimiter: str
        """

        self._delimiter = delimiter

    @property
    def encoding(self):
        """Gets the encoding of this GoogleCloudDataplexV1StorageFormatCsvOptions.

        Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\", and \"ISO-8859-1\". Defaults to UTF-8 if unspecified.

        :return: The encoding of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :rtype: str
        """
        return self._encoding

    @encoding.setter
    def encoding(self, encoding):
        """Sets the encoding of this GoogleCloudDataplexV1StorageFormatCsvOptions.

        Optional. The character encoding of the data. Accepts \"US-ASCII\", \"UTF-8\", and \"ISO-8859-1\". Defaults to UTF-8 if unspecified.

        :param encoding: The encoding of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :type encoding: str
        """

        self._encoding = encoding

    @property
    def header_rows(self):
        """Gets the header_rows of this GoogleCloudDataplexV1StorageFormatCsvOptions.

        Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.

        :return: The header_rows of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :rtype: int
        """
        return self._header_rows

    @header_rows.setter
    def header_rows(self, header_rows):
        """Sets the header_rows of this GoogleCloudDataplexV1StorageFormatCsvOptions.

        Optional. The number of rows to interpret as header rows that should be skipped when reading data rows. Defaults to 0.

        :param header_rows: The header_rows of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :type header_rows: int
        """

        self._header_rows = header_rows

    @property
    def quote(self):
        """Gets the quote of this GoogleCloudDataplexV1StorageFormatCsvOptions.

        Optional. The character used to quote column values. Accepts '\"' (double quotation mark) or '_'_' (single quotation mark). Defaults to '\"' (double quotation mark) if unspecified.

        :return: The quote of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :rtype: str
        """
        return self._quote

    @quote.setter
    def quote(self, quote):
        """Sets the quote of this GoogleCloudDataplexV1StorageFormatCsvOptions.

        Optional. The character used to quote column values. Accepts '\"' (double quotation mark) or '_'_' (single quotation mark). Defaults to '\"' (double quotation mark) if unspecified.

        :param quote: The quote of this GoogleCloudDataplexV1StorageFormatCsvOptions.
        :type quote: str
        """

        self._quote = quote
