# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_trigger_schedule import GoogleCloudDataplexV1TriggerSchedule
from openapi_server import util


class GoogleCloudDataplexV1Trigger(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, on_demand: object=None, schedule: GoogleCloudDataplexV1TriggerSchedule=None):
        """GoogleCloudDataplexV1Trigger - a model defined in OpenAPI

        :param on_demand: The on_demand of this GoogleCloudDataplexV1Trigger.
        :param schedule: The schedule of this GoogleCloudDataplexV1Trigger.
        """
        self.openapi_types = {
            'on_demand': object,
            'schedule': GoogleCloudDataplexV1TriggerSchedule
        }

        self.attribute_map = {
            'on_demand': 'onDemand',
            'schedule': 'schedule'
        }

        self._on_demand = on_demand
        self._schedule = schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1Trigger':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1Trigger of this GoogleCloudDataplexV1Trigger.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def on_demand(self):
        """Gets the on_demand of this GoogleCloudDataplexV1Trigger.

        The scan runs once via RunDataScan API.

        :return: The on_demand of this GoogleCloudDataplexV1Trigger.
        :rtype: object
        """
        return self._on_demand

    @on_demand.setter
    def on_demand(self, on_demand):
        """Sets the on_demand of this GoogleCloudDataplexV1Trigger.

        The scan runs once via RunDataScan API.

        :param on_demand: The on_demand of this GoogleCloudDataplexV1Trigger.
        :type on_demand: object
        """

        self._on_demand = on_demand

    @property
    def schedule(self):
        """Gets the schedule of this GoogleCloudDataplexV1Trigger.


        :return: The schedule of this GoogleCloudDataplexV1Trigger.
        :rtype: GoogleCloudDataplexV1TriggerSchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this GoogleCloudDataplexV1Trigger.


        :param schedule: The schedule of this GoogleCloudDataplexV1Trigger.
        :type schedule: GoogleCloudDataplexV1TriggerSchedule
        """

        self._schedule = schedule
