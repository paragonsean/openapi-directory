# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_data_quality_column_result import GoogleCloudDataplexV1DataQualityColumnResult
from openapi_server.models.google_cloud_dataplex_v1_data_quality_dimension_result import GoogleCloudDataplexV1DataQualityDimensionResult
from openapi_server.models.google_cloud_dataplex_v1_data_quality_result_post_scan_actions_result import GoogleCloudDataplexV1DataQualityResultPostScanActionsResult
from openapi_server.models.google_cloud_dataplex_v1_data_quality_rule_result import GoogleCloudDataplexV1DataQualityRuleResult
from openapi_server.models.google_cloud_dataplex_v1_scanned_data import GoogleCloudDataplexV1ScannedData
from openapi_server import util


class GoogleCloudDataplexV1DataQualityResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[GoogleCloudDataplexV1DataQualityColumnResult]=None, dimensions: List[GoogleCloudDataplexV1DataQualityDimensionResult]=None, passed: bool=None, post_scan_actions_result: GoogleCloudDataplexV1DataQualityResultPostScanActionsResult=None, row_count: str=None, rules: List[GoogleCloudDataplexV1DataQualityRuleResult]=None, scanned_data: GoogleCloudDataplexV1ScannedData=None, score: float=None):
        """GoogleCloudDataplexV1DataQualityResult - a model defined in OpenAPI

        :param columns: The columns of this GoogleCloudDataplexV1DataQualityResult.
        :param dimensions: The dimensions of this GoogleCloudDataplexV1DataQualityResult.
        :param passed: The passed of this GoogleCloudDataplexV1DataQualityResult.
        :param post_scan_actions_result: The post_scan_actions_result of this GoogleCloudDataplexV1DataQualityResult.
        :param row_count: The row_count of this GoogleCloudDataplexV1DataQualityResult.
        :param rules: The rules of this GoogleCloudDataplexV1DataQualityResult.
        :param scanned_data: The scanned_data of this GoogleCloudDataplexV1DataQualityResult.
        :param score: The score of this GoogleCloudDataplexV1DataQualityResult.
        """
        self.openapi_types = {
            'columns': List[GoogleCloudDataplexV1DataQualityColumnResult],
            'dimensions': List[GoogleCloudDataplexV1DataQualityDimensionResult],
            'passed': bool,
            'post_scan_actions_result': GoogleCloudDataplexV1DataQualityResultPostScanActionsResult,
            'row_count': str,
            'rules': List[GoogleCloudDataplexV1DataQualityRuleResult],
            'scanned_data': GoogleCloudDataplexV1ScannedData,
            'score': float
        }

        self.attribute_map = {
            'columns': 'columns',
            'dimensions': 'dimensions',
            'passed': 'passed',
            'post_scan_actions_result': 'postScanActionsResult',
            'row_count': 'rowCount',
            'rules': 'rules',
            'scanned_data': 'scannedData',
            'score': 'score'
        }

        self._columns = columns
        self._dimensions = dimensions
        self._passed = passed
        self._post_scan_actions_result = post_scan_actions_result
        self._row_count = row_count
        self._rules = rules
        self._scanned_data = scanned_data
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1DataQualityResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1DataQualityResult of this GoogleCloudDataplexV1DataQualityResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this GoogleCloudDataplexV1DataQualityResult.

        Output only. A list of results at the column level.A column will have a corresponding DataQualityColumnResult if and only if there is at least one rule with the 'column' field set to it.

        :return: The columns of this GoogleCloudDataplexV1DataQualityResult.
        :rtype: List[GoogleCloudDataplexV1DataQualityColumnResult]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this GoogleCloudDataplexV1DataQualityResult.

        Output only. A list of results at the column level.A column will have a corresponding DataQualityColumnResult if and only if there is at least one rule with the 'column' field set to it.

        :param columns: The columns of this GoogleCloudDataplexV1DataQualityResult.
        :type columns: List[GoogleCloudDataplexV1DataQualityColumnResult]
        """

        self._columns = columns

    @property
    def dimensions(self):
        """Gets the dimensions of this GoogleCloudDataplexV1DataQualityResult.

        A list of results at the dimension level.A dimension will have a corresponding DataQualityDimensionResult if and only if there is at least one rule with the 'dimension' field set to it.

        :return: The dimensions of this GoogleCloudDataplexV1DataQualityResult.
        :rtype: List[GoogleCloudDataplexV1DataQualityDimensionResult]
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this GoogleCloudDataplexV1DataQualityResult.

        A list of results at the dimension level.A dimension will have a corresponding DataQualityDimensionResult if and only if there is at least one rule with the 'dimension' field set to it.

        :param dimensions: The dimensions of this GoogleCloudDataplexV1DataQualityResult.
        :type dimensions: List[GoogleCloudDataplexV1DataQualityDimensionResult]
        """

        self._dimensions = dimensions

    @property
    def passed(self):
        """Gets the passed of this GoogleCloudDataplexV1DataQualityResult.

        Overall data quality result -- true if all rules passed.

        :return: The passed of this GoogleCloudDataplexV1DataQualityResult.
        :rtype: bool
        """
        return self._passed

    @passed.setter
    def passed(self, passed):
        """Sets the passed of this GoogleCloudDataplexV1DataQualityResult.

        Overall data quality result -- true if all rules passed.

        :param passed: The passed of this GoogleCloudDataplexV1DataQualityResult.
        :type passed: bool
        """

        self._passed = passed

    @property
    def post_scan_actions_result(self):
        """Gets the post_scan_actions_result of this GoogleCloudDataplexV1DataQualityResult.


        :return: The post_scan_actions_result of this GoogleCloudDataplexV1DataQualityResult.
        :rtype: GoogleCloudDataplexV1DataQualityResultPostScanActionsResult
        """
        return self._post_scan_actions_result

    @post_scan_actions_result.setter
    def post_scan_actions_result(self, post_scan_actions_result):
        """Sets the post_scan_actions_result of this GoogleCloudDataplexV1DataQualityResult.


        :param post_scan_actions_result: The post_scan_actions_result of this GoogleCloudDataplexV1DataQualityResult.
        :type post_scan_actions_result: GoogleCloudDataplexV1DataQualityResultPostScanActionsResult
        """

        self._post_scan_actions_result = post_scan_actions_result

    @property
    def row_count(self):
        """Gets the row_count of this GoogleCloudDataplexV1DataQualityResult.

        The count of rows processed.

        :return: The row_count of this GoogleCloudDataplexV1DataQualityResult.
        :rtype: str
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this GoogleCloudDataplexV1DataQualityResult.

        The count of rows processed.

        :param row_count: The row_count of this GoogleCloudDataplexV1DataQualityResult.
        :type row_count: str
        """

        self._row_count = row_count

    @property
    def rules(self):
        """Gets the rules of this GoogleCloudDataplexV1DataQualityResult.

        A list of all the rules in a job, and their results.

        :return: The rules of this GoogleCloudDataplexV1DataQualityResult.
        :rtype: List[GoogleCloudDataplexV1DataQualityRuleResult]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this GoogleCloudDataplexV1DataQualityResult.

        A list of all the rules in a job, and their results.

        :param rules: The rules of this GoogleCloudDataplexV1DataQualityResult.
        :type rules: List[GoogleCloudDataplexV1DataQualityRuleResult]
        """

        self._rules = rules

    @property
    def scanned_data(self):
        """Gets the scanned_data of this GoogleCloudDataplexV1DataQualityResult.


        :return: The scanned_data of this GoogleCloudDataplexV1DataQualityResult.
        :rtype: GoogleCloudDataplexV1ScannedData
        """
        return self._scanned_data

    @scanned_data.setter
    def scanned_data(self, scanned_data):
        """Sets the scanned_data of this GoogleCloudDataplexV1DataQualityResult.


        :param scanned_data: The scanned_data of this GoogleCloudDataplexV1DataQualityResult.
        :type scanned_data: GoogleCloudDataplexV1ScannedData
        """

        self._scanned_data = scanned_data

    @property
    def score(self):
        """Gets the score of this GoogleCloudDataplexV1DataQualityResult.

        Output only. The overall data quality score.The score ranges between 0, 100 (up to two decimal points).

        :return: The score of this GoogleCloudDataplexV1DataQualityResult.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this GoogleCloudDataplexV1DataQualityResult.

        Output only. The overall data quality score.The score ranges between 0, 100 (up to two decimal points).

        :param score: The score of this GoogleCloudDataplexV1DataQualityResult.
        :type score: float
        """

        self._score = score
