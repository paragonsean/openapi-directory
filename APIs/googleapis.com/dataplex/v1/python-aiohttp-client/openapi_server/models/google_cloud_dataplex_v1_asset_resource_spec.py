# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDataplexV1AssetResourceSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, read_access_mode: str=None, type: str=None):
        """GoogleCloudDataplexV1AssetResourceSpec - a model defined in OpenAPI

        :param name: The name of this GoogleCloudDataplexV1AssetResourceSpec.
        :param read_access_mode: The read_access_mode of this GoogleCloudDataplexV1AssetResourceSpec.
        :param type: The type of this GoogleCloudDataplexV1AssetResourceSpec.
        """
        self.openapi_types = {
            'name': str,
            'read_access_mode': str,
            'type': str
        }

        self.attribute_map = {
            'name': 'name',
            'read_access_mode': 'readAccessMode',
            'type': 'type'
        }

        self._name = name
        self._read_access_mode = read_access_mode
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1AssetResourceSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1AssetResourceSpec of this GoogleCloudDataplexV1AssetResourceSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this GoogleCloudDataplexV1AssetResourceSpec.

        Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}

        :return: The name of this GoogleCloudDataplexV1AssetResourceSpec.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDataplexV1AssetResourceSpec.

        Immutable. Relative name of the cloud resource that contains the data that is being managed within a lake. For example: projects/{project_number}/buckets/{bucket_id} projects/{project_number}/datasets/{dataset_id}

        :param name: The name of this GoogleCloudDataplexV1AssetResourceSpec.
        :type name: str
        """

        self._name = name

    @property
    def read_access_mode(self):
        """Gets the read_access_mode of this GoogleCloudDataplexV1AssetResourceSpec.

        Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.

        :return: The read_access_mode of this GoogleCloudDataplexV1AssetResourceSpec.
        :rtype: str
        """
        return self._read_access_mode

    @read_access_mode.setter
    def read_access_mode(self, read_access_mode):
        """Sets the read_access_mode of this GoogleCloudDataplexV1AssetResourceSpec.

        Optional. Determines how read permissions are handled for each asset and their associated tables. Only available to storage buckets assets.

        :param read_access_mode: The read_access_mode of this GoogleCloudDataplexV1AssetResourceSpec.
        :type read_access_mode: str
        """
        allowed_values = ["ACCESS_MODE_UNSPECIFIED", "DIRECT", "MANAGED"]  # noqa: E501
        if read_access_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `read_access_mode` ({0}), must be one of {1}"
                .format(read_access_mode, allowed_values)
            )

        self._read_access_mode = read_access_mode

    @property
    def type(self):
        """Gets the type of this GoogleCloudDataplexV1AssetResourceSpec.

        Required. Immutable. Type of resource.

        :return: The type of this GoogleCloudDataplexV1AssetResourceSpec.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDataplexV1AssetResourceSpec.

        Required. Immutable. Type of resource.

        :param type: The type of this GoogleCloudDataplexV1AssetResourceSpec.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "STORAGE_BUCKET", "BIGQUERY_DATASET"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
