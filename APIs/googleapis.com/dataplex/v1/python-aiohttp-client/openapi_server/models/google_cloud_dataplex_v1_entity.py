# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_dataplex_v1_entity_compatibility_status import GoogleCloudDataplexV1EntityCompatibilityStatus
from openapi_server.models.google_cloud_dataplex_v1_schema import GoogleCloudDataplexV1Schema
from openapi_server.models.google_cloud_dataplex_v1_storage_access import GoogleCloudDataplexV1StorageAccess
from openapi_server.models.google_cloud_dataplex_v1_storage_format import GoogleCloudDataplexV1StorageFormat
from openapi_server import util


class GoogleCloudDataplexV1Entity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access: GoogleCloudDataplexV1StorageAccess=None, asset: str=None, catalog_entry: str=None, compatibility: GoogleCloudDataplexV1EntityCompatibilityStatus=None, create_time: str=None, data_path: str=None, data_path_pattern: str=None, description: str=None, display_name: str=None, etag: str=None, format: GoogleCloudDataplexV1StorageFormat=None, id: str=None, name: str=None, _schema: GoogleCloudDataplexV1Schema=None, system: str=None, type: str=None, uid: str=None, update_time: str=None):
        """GoogleCloudDataplexV1Entity - a model defined in OpenAPI

        :param access: The access of this GoogleCloudDataplexV1Entity.
        :param asset: The asset of this GoogleCloudDataplexV1Entity.
        :param catalog_entry: The catalog_entry of this GoogleCloudDataplexV1Entity.
        :param compatibility: The compatibility of this GoogleCloudDataplexV1Entity.
        :param create_time: The create_time of this GoogleCloudDataplexV1Entity.
        :param data_path: The data_path of this GoogleCloudDataplexV1Entity.
        :param data_path_pattern: The data_path_pattern of this GoogleCloudDataplexV1Entity.
        :param description: The description of this GoogleCloudDataplexV1Entity.
        :param display_name: The display_name of this GoogleCloudDataplexV1Entity.
        :param etag: The etag of this GoogleCloudDataplexV1Entity.
        :param format: The format of this GoogleCloudDataplexV1Entity.
        :param id: The id of this GoogleCloudDataplexV1Entity.
        :param name: The name of this GoogleCloudDataplexV1Entity.
        :param _schema: The _schema of this GoogleCloudDataplexV1Entity.
        :param system: The system of this GoogleCloudDataplexV1Entity.
        :param type: The type of this GoogleCloudDataplexV1Entity.
        :param uid: The uid of this GoogleCloudDataplexV1Entity.
        :param update_time: The update_time of this GoogleCloudDataplexV1Entity.
        """
        self.openapi_types = {
            'access': GoogleCloudDataplexV1StorageAccess,
            'asset': str,
            'catalog_entry': str,
            'compatibility': GoogleCloudDataplexV1EntityCompatibilityStatus,
            'create_time': str,
            'data_path': str,
            'data_path_pattern': str,
            'description': str,
            'display_name': str,
            'etag': str,
            'format': GoogleCloudDataplexV1StorageFormat,
            'id': str,
            'name': str,
            '_schema': GoogleCloudDataplexV1Schema,
            'system': str,
            'type': str,
            'uid': str,
            'update_time': str
        }

        self.attribute_map = {
            'access': 'access',
            'asset': 'asset',
            'catalog_entry': 'catalogEntry',
            'compatibility': 'compatibility',
            'create_time': 'createTime',
            'data_path': 'dataPath',
            'data_path_pattern': 'dataPathPattern',
            'description': 'description',
            'display_name': 'displayName',
            'etag': 'etag',
            'format': 'format',
            'id': 'id',
            'name': 'name',
            '_schema': 'schema',
            'system': 'system',
            'type': 'type',
            'uid': 'uid',
            'update_time': 'updateTime'
        }

        self._access = access
        self._asset = asset
        self._catalog_entry = catalog_entry
        self._compatibility = compatibility
        self._create_time = create_time
        self._data_path = data_path
        self._data_path_pattern = data_path_pattern
        self._description = description
        self._display_name = display_name
        self._etag = etag
        self._format = format
        self._id = id
        self._name = name
        self.__schema = _schema
        self._system = system
        self._type = type
        self._uid = uid
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDataplexV1Entity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDataplexV1Entity of this GoogleCloudDataplexV1Entity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access(self):
        """Gets the access of this GoogleCloudDataplexV1Entity.


        :return: The access of this GoogleCloudDataplexV1Entity.
        :rtype: GoogleCloudDataplexV1StorageAccess
        """
        return self._access

    @access.setter
    def access(self, access):
        """Sets the access of this GoogleCloudDataplexV1Entity.


        :param access: The access of this GoogleCloudDataplexV1Entity.
        :type access: GoogleCloudDataplexV1StorageAccess
        """

        self._access = access

    @property
    def asset(self):
        """Gets the asset of this GoogleCloudDataplexV1Entity.

        Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.

        :return: The asset of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._asset

    @asset.setter
    def asset(self, asset):
        """Sets the asset of this GoogleCloudDataplexV1Entity.

        Required. Immutable. The ID of the asset associated with the storage location containing the entity data. The entity must be with in the same zone with the asset.

        :param asset: The asset of this GoogleCloudDataplexV1Entity.
        :type asset: str
        """

        self._asset = asset

    @property
    def catalog_entry(self):
        """Gets the catalog_entry of this GoogleCloudDataplexV1Entity.

        Output only. The name of the associated Data Catalog entry.

        :return: The catalog_entry of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._catalog_entry

    @catalog_entry.setter
    def catalog_entry(self, catalog_entry):
        """Sets the catalog_entry of this GoogleCloudDataplexV1Entity.

        Output only. The name of the associated Data Catalog entry.

        :param catalog_entry: The catalog_entry of this GoogleCloudDataplexV1Entity.
        :type catalog_entry: str
        """

        self._catalog_entry = catalog_entry

    @property
    def compatibility(self):
        """Gets the compatibility of this GoogleCloudDataplexV1Entity.


        :return: The compatibility of this GoogleCloudDataplexV1Entity.
        :rtype: GoogleCloudDataplexV1EntityCompatibilityStatus
        """
        return self._compatibility

    @compatibility.setter
    def compatibility(self, compatibility):
        """Sets the compatibility of this GoogleCloudDataplexV1Entity.


        :param compatibility: The compatibility of this GoogleCloudDataplexV1Entity.
        :type compatibility: GoogleCloudDataplexV1EntityCompatibilityStatus
        """

        self._compatibility = compatibility

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDataplexV1Entity.

        Output only. The time when the entity was created.

        :return: The create_time of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDataplexV1Entity.

        Output only. The time when the entity was created.

        :param create_time: The create_time of this GoogleCloudDataplexV1Entity.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def data_path(self):
        """Gets the data_path of this GoogleCloudDataplexV1Entity.

        Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.

        :return: The data_path of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._data_path

    @data_path.setter
    def data_path(self, data_path):
        """Sets the data_path of this GoogleCloudDataplexV1Entity.

        Required. Immutable. The storage path of the entity data. For Cloud Storage data, this is the fully-qualified path to the entity, such as gs://bucket/path/to/data. For BigQuery data, this is the name of the table resource, such as projects/project_id/datasets/dataset_id/tables/table_id.

        :param data_path: The data_path of this GoogleCloudDataplexV1Entity.
        :type data_path: str
        """

        self._data_path = data_path

    @property
    def data_path_pattern(self):
        """Gets the data_path_pattern of this GoogleCloudDataplexV1Entity.

        Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv.

        :return: The data_path_pattern of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._data_path_pattern

    @data_path_pattern.setter
    def data_path_pattern(self, data_path_pattern):
        """Sets the data_path_pattern of this GoogleCloudDataplexV1Entity.

        Optional. The set of items within the data path constituting the data in the entity, represented as a glob path. Example: gs://bucket/path/to/data/**/*.csv.

        :param data_path_pattern: The data_path_pattern of this GoogleCloudDataplexV1Entity.
        :type data_path_pattern: str
        """

        self._data_path_pattern = data_path_pattern

    @property
    def description(self):
        """Gets the description of this GoogleCloudDataplexV1Entity.

        Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.

        :return: The description of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDataplexV1Entity.

        Optional. User friendly longer description text. Must be shorter than or equal to 1024 characters.

        :param description: The description of this GoogleCloudDataplexV1Entity.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDataplexV1Entity.

        Optional. Display name must be shorter than or equal to 256 characters.

        :return: The display_name of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDataplexV1Entity.

        Optional. Display name must be shorter than or equal to 256 characters.

        :param display_name: The display_name of this GoogleCloudDataplexV1Entity.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudDataplexV1Entity.

        Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.

        :return: The etag of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudDataplexV1Entity.

        Optional. The etag associated with the entity, which can be retrieved with a GetEntity request. Required for update and delete requests.

        :param etag: The etag of this GoogleCloudDataplexV1Entity.
        :type etag: str
        """

        self._etag = etag

    @property
    def format(self):
        """Gets the format of this GoogleCloudDataplexV1Entity.


        :return: The format of this GoogleCloudDataplexV1Entity.
        :rtype: GoogleCloudDataplexV1StorageFormat
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this GoogleCloudDataplexV1Entity.


        :param format: The format of this GoogleCloudDataplexV1Entity.
        :type format: GoogleCloudDataplexV1StorageFormat
        """

        self._format = format

    @property
    def id(self):
        """Gets the id of this GoogleCloudDataplexV1Entity.

        Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores, and consist of 256 or fewer characters.

        :return: The id of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudDataplexV1Entity.

        Required. A user-provided entity ID. It is mutable, and will be used as the published table name. Specifying a new ID in an update entity request will override the existing value. The ID must contain only letters (a-z, A-Z), numbers (0-9), and underscores, and consist of 256 or fewer characters.

        :param id: The id of this GoogleCloudDataplexV1Entity.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this GoogleCloudDataplexV1Entity.

        Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.

        :return: The name of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDataplexV1Entity.

        Output only. The resource name of the entity, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/entities/{id}.

        :param name: The name of this GoogleCloudDataplexV1Entity.
        :type name: str
        """

        self._name = name

    @property
    def _schema(self):
        """Gets the _schema of this GoogleCloudDataplexV1Entity.


        :return: The _schema of this GoogleCloudDataplexV1Entity.
        :rtype: GoogleCloudDataplexV1Schema
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this GoogleCloudDataplexV1Entity.


        :param _schema: The _schema of this GoogleCloudDataplexV1Entity.
        :type _schema: GoogleCloudDataplexV1Schema
        """

        self.__schema = _schema

    @property
    def system(self):
        """Gets the system of this GoogleCloudDataplexV1Entity.

        Required. Immutable. Identifies the storage system of the entity data.

        :return: The system of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._system

    @system.setter
    def system(self, system):
        """Sets the system of this GoogleCloudDataplexV1Entity.

        Required. Immutable. Identifies the storage system of the entity data.

        :param system: The system of this GoogleCloudDataplexV1Entity.
        :type system: str
        """
        allowed_values = ["STORAGE_SYSTEM_UNSPECIFIED", "CLOUD_STORAGE", "BIGQUERY"]  # noqa: E501
        if system not in allowed_values:
            raise ValueError(
                "Invalid value for `system` ({0}), must be one of {1}"
                .format(system, allowed_values)
            )

        self._system = system

    @property
    def type(self):
        """Gets the type of this GoogleCloudDataplexV1Entity.

        Required. Immutable. The type of entity.

        :return: The type of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDataplexV1Entity.

        Required. Immutable. The type of entity.

        :param type: The type of this GoogleCloudDataplexV1Entity.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "TABLE", "FILESET"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def uid(self):
        """Gets the uid of this GoogleCloudDataplexV1Entity.

        Output only. System generated unique ID for the Entity. This ID will be different if the Entity is deleted and re-created with the same name.

        :return: The uid of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this GoogleCloudDataplexV1Entity.

        Output only. System generated unique ID for the Entity. This ID will be different if the Entity is deleted and re-created with the same name.

        :param uid: The uid of this GoogleCloudDataplexV1Entity.
        :type uid: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudDataplexV1Entity.

        Output only. The time when the entity was last updated.

        :return: The update_time of this GoogleCloudDataplexV1Entity.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudDataplexV1Entity.

        Output only. The time when the entity was last updated.

        :param update_time: The update_time of this GoogleCloudDataplexV1Entity.
        :type update_time: str
        """

        self._update_time = update_time
