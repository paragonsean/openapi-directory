/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1AssetStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1AssetStatus::OAIGoogleCloudDataplexV1AssetStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1AssetStatus::OAIGoogleCloudDataplexV1AssetStatus() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1AssetStatus::~OAIGoogleCloudDataplexV1AssetStatus() {}

void OAIGoogleCloudDataplexV1AssetStatus::initializeModel() {

    m_active_assets_isSet = false;
    m_active_assets_isValid = false;

    m_security_policy_applying_assets_isSet = false;
    m_security_policy_applying_assets_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDataplexV1AssetStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1AssetStatus::fromJsonObject(QJsonObject json) {

    m_active_assets_isValid = ::OpenAPI::fromJsonValue(m_active_assets, json[QString("activeAssets")]);
    m_active_assets_isSet = !json[QString("activeAssets")].isNull() && m_active_assets_isValid;

    m_security_policy_applying_assets_isValid = ::OpenAPI::fromJsonValue(m_security_policy_applying_assets, json[QString("securityPolicyApplyingAssets")]);
    m_security_policy_applying_assets_isSet = !json[QString("securityPolicyApplyingAssets")].isNull() && m_security_policy_applying_assets_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDataplexV1AssetStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1AssetStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_active_assets_isSet) {
        obj.insert(QString("activeAssets"), ::OpenAPI::toJsonValue(m_active_assets));
    }
    if (m_security_policy_applying_assets_isSet) {
        obj.insert(QString("securityPolicyApplyingAssets"), ::OpenAPI::toJsonValue(m_security_policy_applying_assets));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

qint32 OAIGoogleCloudDataplexV1AssetStatus::getActiveAssets() const {
    return m_active_assets;
}
void OAIGoogleCloudDataplexV1AssetStatus::setActiveAssets(const qint32 &active_assets) {
    m_active_assets = active_assets;
    m_active_assets_isSet = true;
}

bool OAIGoogleCloudDataplexV1AssetStatus::is_active_assets_Set() const{
    return m_active_assets_isSet;
}

bool OAIGoogleCloudDataplexV1AssetStatus::is_active_assets_Valid() const{
    return m_active_assets_isValid;
}

qint32 OAIGoogleCloudDataplexV1AssetStatus::getSecurityPolicyApplyingAssets() const {
    return m_security_policy_applying_assets;
}
void OAIGoogleCloudDataplexV1AssetStatus::setSecurityPolicyApplyingAssets(const qint32 &security_policy_applying_assets) {
    m_security_policy_applying_assets = security_policy_applying_assets;
    m_security_policy_applying_assets_isSet = true;
}

bool OAIGoogleCloudDataplexV1AssetStatus::is_security_policy_applying_assets_Set() const{
    return m_security_policy_applying_assets_isSet;
}

bool OAIGoogleCloudDataplexV1AssetStatus::is_security_policy_applying_assets_Valid() const{
    return m_security_policy_applying_assets_isValid;
}

QString OAIGoogleCloudDataplexV1AssetStatus::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDataplexV1AssetStatus::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1AssetStatus::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDataplexV1AssetStatus::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDataplexV1AssetStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_assets_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_policy_applying_assets_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1AssetStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
