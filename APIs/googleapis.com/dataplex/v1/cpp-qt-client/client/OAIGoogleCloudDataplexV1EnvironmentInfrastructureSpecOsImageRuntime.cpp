/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::~OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime() {}

void OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::initializeModel() {

    m_image_version_isSet = false;
    m_image_version_isValid = false;

    m_java_libraries_isSet = false;
    m_java_libraries_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_python_packages_isSet = false;
    m_python_packages_isValid = false;
}

void OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::fromJsonObject(QJsonObject json) {

    m_image_version_isValid = ::OpenAPI::fromJsonValue(m_image_version, json[QString("imageVersion")]);
    m_image_version_isSet = !json[QString("imageVersion")].isNull() && m_image_version_isValid;

    m_java_libraries_isValid = ::OpenAPI::fromJsonValue(m_java_libraries, json[QString("javaLibraries")]);
    m_java_libraries_isSet = !json[QString("javaLibraries")].isNull() && m_java_libraries_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_python_packages_isValid = ::OpenAPI::fromJsonValue(m_python_packages, json[QString("pythonPackages")]);
    m_python_packages_isSet = !json[QString("pythonPackages")].isNull() && m_python_packages_isValid;
}

QString OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::asJsonObject() const {
    QJsonObject obj;
    if (m_image_version_isSet) {
        obj.insert(QString("imageVersion"), ::OpenAPI::toJsonValue(m_image_version));
    }
    if (m_java_libraries.size() > 0) {
        obj.insert(QString("javaLibraries"), ::OpenAPI::toJsonValue(m_java_libraries));
    }
    if (m_properties.size() > 0) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_python_packages.size() > 0) {
        obj.insert(QString("pythonPackages"), ::OpenAPI::toJsonValue(m_python_packages));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::getImageVersion() const {
    return m_image_version;
}
void OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::setImageVersion(const QString &image_version) {
    m_image_version = image_version;
    m_image_version_isSet = true;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::is_image_version_Set() const{
    return m_image_version_isSet;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::is_image_version_Valid() const{
    return m_image_version_isValid;
}

QList<QString> OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::getJavaLibraries() const {
    return m_java_libraries;
}
void OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::setJavaLibraries(const QList<QString> &java_libraries) {
    m_java_libraries = java_libraries;
    m_java_libraries_isSet = true;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::is_java_libraries_Set() const{
    return m_java_libraries_isSet;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::is_java_libraries_Valid() const{
    return m_java_libraries_isValid;
}

QMap<QString, QString> OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::getProperties() const {
    return m_properties;
}
void OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::setProperties(const QMap<QString, QString> &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::is_properties_Valid() const{
    return m_properties_isValid;
}

QList<QString> OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::getPythonPackages() const {
    return m_python_packages;
}
void OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::setPythonPackages(const QList<QString> &python_packages) {
    m_python_packages = python_packages;
    m_python_packages_isSet = true;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::is_python_packages_Set() const{
    return m_python_packages_isSet;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::is_python_packages_Valid() const{
    return m_python_packages_isValid;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_image_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_java_libraries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_python_packages.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1EnvironmentInfrastructureSpecOsImageRuntime::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
