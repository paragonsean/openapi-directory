/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1DataQualityRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1DataQualityRule::OAIGoogleCloudDataplexV1DataQualityRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1DataQualityRule::OAIGoogleCloudDataplexV1DataQualityRule() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1DataQualityRule::~OAIGoogleCloudDataplexV1DataQualityRule() {}

void OAIGoogleCloudDataplexV1DataQualityRule::initializeModel() {

    m_column_isSet = false;
    m_column_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_dimension_isSet = false;
    m_dimension_isValid = false;

    m_ignore_null_isSet = false;
    m_ignore_null_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_non_null_expectation_isSet = false;
    m_non_null_expectation_isValid = false;

    m_range_expectation_isSet = false;
    m_range_expectation_isValid = false;

    m_regex_expectation_isSet = false;
    m_regex_expectation_isValid = false;

    m_row_condition_expectation_isSet = false;
    m_row_condition_expectation_isValid = false;

    m_set_expectation_isSet = false;
    m_set_expectation_isValid = false;

    m_statistic_range_expectation_isSet = false;
    m_statistic_range_expectation_isValid = false;

    m_table_condition_expectation_isSet = false;
    m_table_condition_expectation_isValid = false;

    m_threshold_isSet = false;
    m_threshold_isValid = false;

    m_uniqueness_expectation_isSet = false;
    m_uniqueness_expectation_isValid = false;
}

void OAIGoogleCloudDataplexV1DataQualityRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1DataQualityRule::fromJsonObject(QJsonObject json) {

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_dimension_isValid = ::OpenAPI::fromJsonValue(m_dimension, json[QString("dimension")]);
    m_dimension_isSet = !json[QString("dimension")].isNull() && m_dimension_isValid;

    m_ignore_null_isValid = ::OpenAPI::fromJsonValue(m_ignore_null, json[QString("ignoreNull")]);
    m_ignore_null_isSet = !json[QString("ignoreNull")].isNull() && m_ignore_null_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_non_null_expectation_isValid = ::OpenAPI::fromJsonValue(m_non_null_expectation, json[QString("nonNullExpectation")]);
    m_non_null_expectation_isSet = !json[QString("nonNullExpectation")].isNull() && m_non_null_expectation_isValid;

    m_range_expectation_isValid = ::OpenAPI::fromJsonValue(m_range_expectation, json[QString("rangeExpectation")]);
    m_range_expectation_isSet = !json[QString("rangeExpectation")].isNull() && m_range_expectation_isValid;

    m_regex_expectation_isValid = ::OpenAPI::fromJsonValue(m_regex_expectation, json[QString("regexExpectation")]);
    m_regex_expectation_isSet = !json[QString("regexExpectation")].isNull() && m_regex_expectation_isValid;

    m_row_condition_expectation_isValid = ::OpenAPI::fromJsonValue(m_row_condition_expectation, json[QString("rowConditionExpectation")]);
    m_row_condition_expectation_isSet = !json[QString("rowConditionExpectation")].isNull() && m_row_condition_expectation_isValid;

    m_set_expectation_isValid = ::OpenAPI::fromJsonValue(m_set_expectation, json[QString("setExpectation")]);
    m_set_expectation_isSet = !json[QString("setExpectation")].isNull() && m_set_expectation_isValid;

    m_statistic_range_expectation_isValid = ::OpenAPI::fromJsonValue(m_statistic_range_expectation, json[QString("statisticRangeExpectation")]);
    m_statistic_range_expectation_isSet = !json[QString("statisticRangeExpectation")].isNull() && m_statistic_range_expectation_isValid;

    m_table_condition_expectation_isValid = ::OpenAPI::fromJsonValue(m_table_condition_expectation, json[QString("tableConditionExpectation")]);
    m_table_condition_expectation_isSet = !json[QString("tableConditionExpectation")].isNull() && m_table_condition_expectation_isValid;

    m_threshold_isValid = ::OpenAPI::fromJsonValue(m_threshold, json[QString("threshold")]);
    m_threshold_isSet = !json[QString("threshold")].isNull() && m_threshold_isValid;

    m_uniqueness_expectation_isValid = ::OpenAPI::fromJsonValue(m_uniqueness_expectation, json[QString("uniquenessExpectation")]);
    m_uniqueness_expectation_isSet = !json[QString("uniquenessExpectation")].isNull() && m_uniqueness_expectation_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1DataQualityRule::asJsonObject() const {
    QJsonObject obj;
    if (m_column_isSet) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_dimension_isSet) {
        obj.insert(QString("dimension"), ::OpenAPI::toJsonValue(m_dimension));
    }
    if (m_ignore_null_isSet) {
        obj.insert(QString("ignoreNull"), ::OpenAPI::toJsonValue(m_ignore_null));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_non_null_expectation_isSet) {
        obj.insert(QString("nonNullExpectation"), ::OpenAPI::toJsonValue(m_non_null_expectation));
    }
    if (m_range_expectation.isSet()) {
        obj.insert(QString("rangeExpectation"), ::OpenAPI::toJsonValue(m_range_expectation));
    }
    if (m_regex_expectation.isSet()) {
        obj.insert(QString("regexExpectation"), ::OpenAPI::toJsonValue(m_regex_expectation));
    }
    if (m_row_condition_expectation.isSet()) {
        obj.insert(QString("rowConditionExpectation"), ::OpenAPI::toJsonValue(m_row_condition_expectation));
    }
    if (m_set_expectation.isSet()) {
        obj.insert(QString("setExpectation"), ::OpenAPI::toJsonValue(m_set_expectation));
    }
    if (m_statistic_range_expectation.isSet()) {
        obj.insert(QString("statisticRangeExpectation"), ::OpenAPI::toJsonValue(m_statistic_range_expectation));
    }
    if (m_table_condition_expectation.isSet()) {
        obj.insert(QString("tableConditionExpectation"), ::OpenAPI::toJsonValue(m_table_condition_expectation));
    }
    if (m_threshold_isSet) {
        obj.insert(QString("threshold"), ::OpenAPI::toJsonValue(m_threshold));
    }
    if (m_uniqueness_expectation_isSet) {
        obj.insert(QString("uniquenessExpectation"), ::OpenAPI::toJsonValue(m_uniqueness_expectation));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1DataQualityRule::getColumn() const {
    return m_column;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setColumn(const QString &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_column_Set() const{
    return m_column_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_column_Valid() const{
    return m_column_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityRule::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityRule::getDimension() const {
    return m_dimension;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setDimension(const QString &dimension) {
    m_dimension = dimension;
    m_dimension_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_dimension_Set() const{
    return m_dimension_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_dimension_Valid() const{
    return m_dimension_isValid;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::isIgnoreNull() const {
    return m_ignore_null;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setIgnoreNull(const bool &ignore_null) {
    m_ignore_null = ignore_null;
    m_ignore_null_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_ignore_null_Set() const{
    return m_ignore_null_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_ignore_null_Valid() const{
    return m_ignore_null_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityRule::getName() const {
    return m_name;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_name_Valid() const{
    return m_name_isValid;
}

OAIObject OAIGoogleCloudDataplexV1DataQualityRule::getNonNullExpectation() const {
    return m_non_null_expectation;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setNonNullExpectation(const OAIObject &non_null_expectation) {
    m_non_null_expectation = non_null_expectation;
    m_non_null_expectation_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_non_null_expectation_Set() const{
    return m_non_null_expectation_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_non_null_expectation_Valid() const{
    return m_non_null_expectation_isValid;
}

OAIGoogleCloudDataplexV1DataQualityRuleRangeExpectation OAIGoogleCloudDataplexV1DataQualityRule::getRangeExpectation() const {
    return m_range_expectation;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setRangeExpectation(const OAIGoogleCloudDataplexV1DataQualityRuleRangeExpectation &range_expectation) {
    m_range_expectation = range_expectation;
    m_range_expectation_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_range_expectation_Set() const{
    return m_range_expectation_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_range_expectation_Valid() const{
    return m_range_expectation_isValid;
}

OAIGoogleCloudDataplexV1DataQualityRuleRegexExpectation OAIGoogleCloudDataplexV1DataQualityRule::getRegexExpectation() const {
    return m_regex_expectation;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setRegexExpectation(const OAIGoogleCloudDataplexV1DataQualityRuleRegexExpectation &regex_expectation) {
    m_regex_expectation = regex_expectation;
    m_regex_expectation_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_regex_expectation_Set() const{
    return m_regex_expectation_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_regex_expectation_Valid() const{
    return m_regex_expectation_isValid;
}

OAIGoogleCloudDataplexV1DataQualityRuleRowConditionExpectation OAIGoogleCloudDataplexV1DataQualityRule::getRowConditionExpectation() const {
    return m_row_condition_expectation;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setRowConditionExpectation(const OAIGoogleCloudDataplexV1DataQualityRuleRowConditionExpectation &row_condition_expectation) {
    m_row_condition_expectation = row_condition_expectation;
    m_row_condition_expectation_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_row_condition_expectation_Set() const{
    return m_row_condition_expectation_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_row_condition_expectation_Valid() const{
    return m_row_condition_expectation_isValid;
}

OAIGoogleCloudDataplexV1DataQualityRuleSetExpectation OAIGoogleCloudDataplexV1DataQualityRule::getSetExpectation() const {
    return m_set_expectation;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setSetExpectation(const OAIGoogleCloudDataplexV1DataQualityRuleSetExpectation &set_expectation) {
    m_set_expectation = set_expectation;
    m_set_expectation_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_set_expectation_Set() const{
    return m_set_expectation_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_set_expectation_Valid() const{
    return m_set_expectation_isValid;
}

OAIGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation OAIGoogleCloudDataplexV1DataQualityRule::getStatisticRangeExpectation() const {
    return m_statistic_range_expectation;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setStatisticRangeExpectation(const OAIGoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation &statistic_range_expectation) {
    m_statistic_range_expectation = statistic_range_expectation;
    m_statistic_range_expectation_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_statistic_range_expectation_Set() const{
    return m_statistic_range_expectation_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_statistic_range_expectation_Valid() const{
    return m_statistic_range_expectation_isValid;
}

OAIGoogleCloudDataplexV1DataQualityRuleTableConditionExpectation OAIGoogleCloudDataplexV1DataQualityRule::getTableConditionExpectation() const {
    return m_table_condition_expectation;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setTableConditionExpectation(const OAIGoogleCloudDataplexV1DataQualityRuleTableConditionExpectation &table_condition_expectation) {
    m_table_condition_expectation = table_condition_expectation;
    m_table_condition_expectation_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_table_condition_expectation_Set() const{
    return m_table_condition_expectation_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_table_condition_expectation_Valid() const{
    return m_table_condition_expectation_isValid;
}

double OAIGoogleCloudDataplexV1DataQualityRule::getThreshold() const {
    return m_threshold;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setThreshold(const double &threshold) {
    m_threshold = threshold;
    m_threshold_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_threshold_Set() const{
    return m_threshold_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_threshold_Valid() const{
    return m_threshold_isValid;
}

OAIObject OAIGoogleCloudDataplexV1DataQualityRule::getUniquenessExpectation() const {
    return m_uniqueness_expectation;
}
void OAIGoogleCloudDataplexV1DataQualityRule::setUniquenessExpectation(const OAIObject &uniqueness_expectation) {
    m_uniqueness_expectation = uniqueness_expectation;
    m_uniqueness_expectation_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_uniqueness_expectation_Set() const{
    return m_uniqueness_expectation_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::is_uniqueness_expectation_Valid() const{
    return m_uniqueness_expectation_isValid;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ignore_null_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_non_null_expectation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_range_expectation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_regex_expectation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_condition_expectation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_set_expectation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_statistic_range_expectation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_condition_expectation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uniqueness_expectation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1DataQualityRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
