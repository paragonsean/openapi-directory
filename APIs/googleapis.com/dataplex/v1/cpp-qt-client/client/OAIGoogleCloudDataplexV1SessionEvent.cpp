/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1SessionEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1SessionEvent::OAIGoogleCloudDataplexV1SessionEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1SessionEvent::OAIGoogleCloudDataplexV1SessionEvent() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1SessionEvent::~OAIGoogleCloudDataplexV1SessionEvent() {}

void OAIGoogleCloudDataplexV1SessionEvent::initializeModel() {

    m_event_succeeded_isSet = false;
    m_event_succeeded_isValid = false;

    m_fast_startup_enabled_isSet = false;
    m_fast_startup_enabled_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_query_isSet = false;
    m_query_isValid = false;

    m_session_id_isSet = false;
    m_session_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_unassigned_duration_isSet = false;
    m_unassigned_duration_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAIGoogleCloudDataplexV1SessionEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1SessionEvent::fromJsonObject(QJsonObject json) {

    m_event_succeeded_isValid = ::OpenAPI::fromJsonValue(m_event_succeeded, json[QString("eventSucceeded")]);
    m_event_succeeded_isSet = !json[QString("eventSucceeded")].isNull() && m_event_succeeded_isValid;

    m_fast_startup_enabled_isValid = ::OpenAPI::fromJsonValue(m_fast_startup_enabled, json[QString("fastStartupEnabled")]);
    m_fast_startup_enabled_isSet = !json[QString("fastStartupEnabled")].isNull() && m_fast_startup_enabled_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_query_isValid = ::OpenAPI::fromJsonValue(m_query, json[QString("query")]);
    m_query_isSet = !json[QString("query")].isNull() && m_query_isValid;

    m_session_id_isValid = ::OpenAPI::fromJsonValue(m_session_id, json[QString("sessionId")]);
    m_session_id_isSet = !json[QString("sessionId")].isNull() && m_session_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_unassigned_duration_isValid = ::OpenAPI::fromJsonValue(m_unassigned_duration, json[QString("unassignedDuration")]);
    m_unassigned_duration_isSet = !json[QString("unassignedDuration")].isNull() && m_unassigned_duration_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;
}

QString OAIGoogleCloudDataplexV1SessionEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1SessionEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_event_succeeded_isSet) {
        obj.insert(QString("eventSucceeded"), ::OpenAPI::toJsonValue(m_event_succeeded));
    }
    if (m_fast_startup_enabled_isSet) {
        obj.insert(QString("fastStartupEnabled"), ::OpenAPI::toJsonValue(m_fast_startup_enabled));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_query.isSet()) {
        obj.insert(QString("query"), ::OpenAPI::toJsonValue(m_query));
    }
    if (m_session_id_isSet) {
        obj.insert(QString("sessionId"), ::OpenAPI::toJsonValue(m_session_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_unassigned_duration_isSet) {
        obj.insert(QString("unassignedDuration"), ::OpenAPI::toJsonValue(m_unassigned_duration));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

bool OAIGoogleCloudDataplexV1SessionEvent::isEventSucceeded() const {
    return m_event_succeeded;
}
void OAIGoogleCloudDataplexV1SessionEvent::setEventSucceeded(const bool &event_succeeded) {
    m_event_succeeded = event_succeeded;
    m_event_succeeded_isSet = true;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_event_succeeded_Set() const{
    return m_event_succeeded_isSet;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_event_succeeded_Valid() const{
    return m_event_succeeded_isValid;
}

bool OAIGoogleCloudDataplexV1SessionEvent::isFastStartupEnabled() const {
    return m_fast_startup_enabled;
}
void OAIGoogleCloudDataplexV1SessionEvent::setFastStartupEnabled(const bool &fast_startup_enabled) {
    m_fast_startup_enabled = fast_startup_enabled;
    m_fast_startup_enabled_isSet = true;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_fast_startup_enabled_Set() const{
    return m_fast_startup_enabled_isSet;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_fast_startup_enabled_Valid() const{
    return m_fast_startup_enabled_isValid;
}

QString OAIGoogleCloudDataplexV1SessionEvent::getMessage() const {
    return m_message;
}
void OAIGoogleCloudDataplexV1SessionEvent::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_message_Valid() const{
    return m_message_isValid;
}

OAIGoogleCloudDataplexV1SessionEventQueryDetail OAIGoogleCloudDataplexV1SessionEvent::getQuery() const {
    return m_query;
}
void OAIGoogleCloudDataplexV1SessionEvent::setQuery(const OAIGoogleCloudDataplexV1SessionEventQueryDetail &query) {
    m_query = query;
    m_query_isSet = true;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_query_Set() const{
    return m_query_isSet;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_query_Valid() const{
    return m_query_isValid;
}

QString OAIGoogleCloudDataplexV1SessionEvent::getSessionId() const {
    return m_session_id;
}
void OAIGoogleCloudDataplexV1SessionEvent::setSessionId(const QString &session_id) {
    m_session_id = session_id;
    m_session_id_isSet = true;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_session_id_Set() const{
    return m_session_id_isSet;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_session_id_Valid() const{
    return m_session_id_isValid;
}

QString OAIGoogleCloudDataplexV1SessionEvent::getType() const {
    return m_type;
}
void OAIGoogleCloudDataplexV1SessionEvent::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIGoogleCloudDataplexV1SessionEvent::getUnassignedDuration() const {
    return m_unassigned_duration;
}
void OAIGoogleCloudDataplexV1SessionEvent::setUnassignedDuration(const QString &unassigned_duration) {
    m_unassigned_duration = unassigned_duration;
    m_unassigned_duration_isSet = true;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_unassigned_duration_Set() const{
    return m_unassigned_duration_isSet;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_unassigned_duration_Valid() const{
    return m_unassigned_duration_isValid;
}

QString OAIGoogleCloudDataplexV1SessionEvent::getUserId() const {
    return m_user_id;
}
void OAIGoogleCloudDataplexV1SessionEvent::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIGoogleCloudDataplexV1SessionEvent::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAIGoogleCloudDataplexV1SessionEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_succeeded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fast_startup_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unassigned_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1SessionEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
