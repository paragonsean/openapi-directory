/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDataplexV1ScannedDataIncrementalField.h
 *
 * A data range denoted by a pair of start/end values of a field.
 */

#ifndef OAIGoogleCloudDataplexV1ScannedDataIncrementalField_H
#define OAIGoogleCloudDataplexV1ScannedDataIncrementalField_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDataplexV1ScannedDataIncrementalField : public OAIObject {
public:
    OAIGoogleCloudDataplexV1ScannedDataIncrementalField();
    OAIGoogleCloudDataplexV1ScannedDataIncrementalField(QString json);
    ~OAIGoogleCloudDataplexV1ScannedDataIncrementalField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEnd() const;
    void setEnd(const QString &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    QString getField() const;
    void setField(const QString &field);
    bool is_field_Set() const;
    bool is_field_Valid() const;

    QString getStart() const;
    void setStart(const QString &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    QString m_field;
    bool m_field_isSet;
    bool m_field_isValid;

    QString m_start;
    bool m_start_isSet;
    bool m_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDataplexV1ScannedDataIncrementalField)

#endif // OAIGoogleCloudDataplexV1ScannedDataIncrementalField_H
