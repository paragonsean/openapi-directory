/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1TaskNotebookTaskConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::OAIGoogleCloudDataplexV1TaskNotebookTaskConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::OAIGoogleCloudDataplexV1TaskNotebookTaskConfig() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::~OAIGoogleCloudDataplexV1TaskNotebookTaskConfig() {}

void OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::initializeModel() {

    m_archive_uris_isSet = false;
    m_archive_uris_isValid = false;

    m_file_uris_isSet = false;
    m_file_uris_isValid = false;

    m_infrastructure_spec_isSet = false;
    m_infrastructure_spec_isValid = false;

    m_notebook_isSet = false;
    m_notebook_isValid = false;
}

void OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::fromJsonObject(QJsonObject json) {

    m_archive_uris_isValid = ::OpenAPI::fromJsonValue(m_archive_uris, json[QString("archiveUris")]);
    m_archive_uris_isSet = !json[QString("archiveUris")].isNull() && m_archive_uris_isValid;

    m_file_uris_isValid = ::OpenAPI::fromJsonValue(m_file_uris, json[QString("fileUris")]);
    m_file_uris_isSet = !json[QString("fileUris")].isNull() && m_file_uris_isValid;

    m_infrastructure_spec_isValid = ::OpenAPI::fromJsonValue(m_infrastructure_spec, json[QString("infrastructureSpec")]);
    m_infrastructure_spec_isSet = !json[QString("infrastructureSpec")].isNull() && m_infrastructure_spec_isValid;

    m_notebook_isValid = ::OpenAPI::fromJsonValue(m_notebook, json[QString("notebook")]);
    m_notebook_isSet = !json[QString("notebook")].isNull() && m_notebook_isValid;
}

QString OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_archive_uris.size() > 0) {
        obj.insert(QString("archiveUris"), ::OpenAPI::toJsonValue(m_archive_uris));
    }
    if (m_file_uris.size() > 0) {
        obj.insert(QString("fileUris"), ::OpenAPI::toJsonValue(m_file_uris));
    }
    if (m_infrastructure_spec.isSet()) {
        obj.insert(QString("infrastructureSpec"), ::OpenAPI::toJsonValue(m_infrastructure_spec));
    }
    if (m_notebook_isSet) {
        obj.insert(QString("notebook"), ::OpenAPI::toJsonValue(m_notebook));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::getArchiveUris() const {
    return m_archive_uris;
}
void OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::setArchiveUris(const QList<QString> &archive_uris) {
    m_archive_uris = archive_uris;
    m_archive_uris_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::is_archive_uris_Set() const{
    return m_archive_uris_isSet;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::is_archive_uris_Valid() const{
    return m_archive_uris_isValid;
}

QList<QString> OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::getFileUris() const {
    return m_file_uris;
}
void OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::setFileUris(const QList<QString> &file_uris) {
    m_file_uris = file_uris;
    m_file_uris_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::is_file_uris_Set() const{
    return m_file_uris_isSet;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::is_file_uris_Valid() const{
    return m_file_uris_isValid;
}

OAIGoogleCloudDataplexV1TaskInfrastructureSpec OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::getInfrastructureSpec() const {
    return m_infrastructure_spec;
}
void OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::setInfrastructureSpec(const OAIGoogleCloudDataplexV1TaskInfrastructureSpec &infrastructure_spec) {
    m_infrastructure_spec = infrastructure_spec;
    m_infrastructure_spec_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::is_infrastructure_spec_Set() const{
    return m_infrastructure_spec_isSet;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::is_infrastructure_spec_Valid() const{
    return m_infrastructure_spec_isValid;
}

QString OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::getNotebook() const {
    return m_notebook;
}
void OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::setNotebook(const QString &notebook) {
    m_notebook = notebook;
    m_notebook_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::is_notebook_Set() const{
    return m_notebook_isSet;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::is_notebook_Valid() const{
    return m_notebook_isValid;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_archive_uris.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_uris.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_infrastructure_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_notebook_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1TaskNotebookTaskConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
