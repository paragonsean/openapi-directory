/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1DataQualityDimensionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1DataQualityDimensionResult::OAIGoogleCloudDataplexV1DataQualityDimensionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1DataQualityDimensionResult::OAIGoogleCloudDataplexV1DataQualityDimensionResult() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1DataQualityDimensionResult::~OAIGoogleCloudDataplexV1DataQualityDimensionResult() {}

void OAIGoogleCloudDataplexV1DataQualityDimensionResult::initializeModel() {

    m_dimension_isSet = false;
    m_dimension_isValid = false;

    m_passed_isSet = false;
    m_passed_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;
}

void OAIGoogleCloudDataplexV1DataQualityDimensionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1DataQualityDimensionResult::fromJsonObject(QJsonObject json) {

    m_dimension_isValid = ::OpenAPI::fromJsonValue(m_dimension, json[QString("dimension")]);
    m_dimension_isSet = !json[QString("dimension")].isNull() && m_dimension_isValid;

    m_passed_isValid = ::OpenAPI::fromJsonValue(m_passed, json[QString("passed")]);
    m_passed_isSet = !json[QString("passed")].isNull() && m_passed_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityDimensionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1DataQualityDimensionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_dimension.isSet()) {
        obj.insert(QString("dimension"), ::OpenAPI::toJsonValue(m_dimension));
    }
    if (m_passed_isSet) {
        obj.insert(QString("passed"), ::OpenAPI::toJsonValue(m_passed));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    return obj;
}

OAIGoogleCloudDataplexV1DataQualityDimension OAIGoogleCloudDataplexV1DataQualityDimensionResult::getDimension() const {
    return m_dimension;
}
void OAIGoogleCloudDataplexV1DataQualityDimensionResult::setDimension(const OAIGoogleCloudDataplexV1DataQualityDimension &dimension) {
    m_dimension = dimension;
    m_dimension_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityDimensionResult::is_dimension_Set() const{
    return m_dimension_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityDimensionResult::is_dimension_Valid() const{
    return m_dimension_isValid;
}

bool OAIGoogleCloudDataplexV1DataQualityDimensionResult::isPassed() const {
    return m_passed;
}
void OAIGoogleCloudDataplexV1DataQualityDimensionResult::setPassed(const bool &passed) {
    m_passed = passed;
    m_passed_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityDimensionResult::is_passed_Set() const{
    return m_passed_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityDimensionResult::is_passed_Valid() const{
    return m_passed_isValid;
}

float OAIGoogleCloudDataplexV1DataQualityDimensionResult::getScore() const {
    return m_score;
}
void OAIGoogleCloudDataplexV1DataQualityDimensionResult::setScore(const float &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityDimensionResult::is_score_Set() const{
    return m_score_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityDimensionResult::is_score_Valid() const{
    return m_score_isValid;
}

bool OAIGoogleCloudDataplexV1DataQualityDimensionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimension.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_passed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1DataQualityDimensionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
