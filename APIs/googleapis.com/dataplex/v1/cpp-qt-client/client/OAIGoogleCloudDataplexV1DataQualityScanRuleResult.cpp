/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1DataQualityScanRuleResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1DataQualityScanRuleResult::OAIGoogleCloudDataplexV1DataQualityScanRuleResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1DataQualityScanRuleResult::OAIGoogleCloudDataplexV1DataQualityScanRuleResult() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1DataQualityScanRuleResult::~OAIGoogleCloudDataplexV1DataQualityScanRuleResult() {}

void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::initializeModel() {

    m_column_isSet = false;
    m_column_isValid = false;

    m_data_source_isSet = false;
    m_data_source_isValid = false;

    m_evaluated_row_count_isSet = false;
    m_evaluated_row_count_isValid = false;

    m_evalution_type_isSet = false;
    m_evalution_type_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_null_row_count_isSet = false;
    m_null_row_count_isValid = false;

    m_passed_row_count_isSet = false;
    m_passed_row_count_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_rule_dimension_isSet = false;
    m_rule_dimension_isValid = false;

    m_rule_name_isSet = false;
    m_rule_name_isValid = false;

    m_rule_type_isSet = false;
    m_rule_type_isValid = false;

    m_threshold_percent_isSet = false;
    m_threshold_percent_isValid = false;
}

void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::fromJsonObject(QJsonObject json) {

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;

    m_data_source_isValid = ::OpenAPI::fromJsonValue(m_data_source, json[QString("dataSource")]);
    m_data_source_isSet = !json[QString("dataSource")].isNull() && m_data_source_isValid;

    m_evaluated_row_count_isValid = ::OpenAPI::fromJsonValue(m_evaluated_row_count, json[QString("evaluatedRowCount")]);
    m_evaluated_row_count_isSet = !json[QString("evaluatedRowCount")].isNull() && m_evaluated_row_count_isValid;

    m_evalution_type_isValid = ::OpenAPI::fromJsonValue(m_evalution_type, json[QString("evalutionType")]);
    m_evalution_type_isSet = !json[QString("evalutionType")].isNull() && m_evalution_type_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_null_row_count_isValid = ::OpenAPI::fromJsonValue(m_null_row_count, json[QString("nullRowCount")]);
    m_null_row_count_isSet = !json[QString("nullRowCount")].isNull() && m_null_row_count_isValid;

    m_passed_row_count_isValid = ::OpenAPI::fromJsonValue(m_passed_row_count, json[QString("passedRowCount")]);
    m_passed_row_count_isSet = !json[QString("passedRowCount")].isNull() && m_passed_row_count_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_rule_dimension_isValid = ::OpenAPI::fromJsonValue(m_rule_dimension, json[QString("ruleDimension")]);
    m_rule_dimension_isSet = !json[QString("ruleDimension")].isNull() && m_rule_dimension_isValid;

    m_rule_name_isValid = ::OpenAPI::fromJsonValue(m_rule_name, json[QString("ruleName")]);
    m_rule_name_isSet = !json[QString("ruleName")].isNull() && m_rule_name_isValid;

    m_rule_type_isValid = ::OpenAPI::fromJsonValue(m_rule_type, json[QString("ruleType")]);
    m_rule_type_isSet = !json[QString("ruleType")].isNull() && m_rule_type_isValid;

    m_threshold_percent_isValid = ::OpenAPI::fromJsonValue(m_threshold_percent, json[QString("thresholdPercent")]);
    m_threshold_percent_isSet = !json[QString("thresholdPercent")].isNull() && m_threshold_percent_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1DataQualityScanRuleResult::asJsonObject() const {
    QJsonObject obj;
    if (m_column_isSet) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_data_source_isSet) {
        obj.insert(QString("dataSource"), ::OpenAPI::toJsonValue(m_data_source));
    }
    if (m_evaluated_row_count_isSet) {
        obj.insert(QString("evaluatedRowCount"), ::OpenAPI::toJsonValue(m_evaluated_row_count));
    }
    if (m_evalution_type_isSet) {
        obj.insert(QString("evalutionType"), ::OpenAPI::toJsonValue(m_evalution_type));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_null_row_count_isSet) {
        obj.insert(QString("nullRowCount"), ::OpenAPI::toJsonValue(m_null_row_count));
    }
    if (m_passed_row_count_isSet) {
        obj.insert(QString("passedRowCount"), ::OpenAPI::toJsonValue(m_passed_row_count));
    }
    if (m_result_isSet) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_rule_dimension_isSet) {
        obj.insert(QString("ruleDimension"), ::OpenAPI::toJsonValue(m_rule_dimension));
    }
    if (m_rule_name_isSet) {
        obj.insert(QString("ruleName"), ::OpenAPI::toJsonValue(m_rule_name));
    }
    if (m_rule_type_isSet) {
        obj.insert(QString("ruleType"), ::OpenAPI::toJsonValue(m_rule_type));
    }
    if (m_threshold_percent_isSet) {
        obj.insert(QString("thresholdPercent"), ::OpenAPI::toJsonValue(m_threshold_percent));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getColumn() const {
    return m_column;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setColumn(const QString &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_column_Set() const{
    return m_column_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_column_Valid() const{
    return m_column_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getDataSource() const {
    return m_data_source;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setDataSource(const QString &data_source) {
    m_data_source = data_source;
    m_data_source_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_data_source_Set() const{
    return m_data_source_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_data_source_Valid() const{
    return m_data_source_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getEvaluatedRowCount() const {
    return m_evaluated_row_count;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setEvaluatedRowCount(const QString &evaluated_row_count) {
    m_evaluated_row_count = evaluated_row_count;
    m_evaluated_row_count_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_evaluated_row_count_Set() const{
    return m_evaluated_row_count_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_evaluated_row_count_Valid() const{
    return m_evaluated_row_count_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getEvalutionType() const {
    return m_evalution_type;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setEvalutionType(const QString &evalution_type) {
    m_evalution_type = evalution_type;
    m_evalution_type_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_evalution_type_Set() const{
    return m_evalution_type_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_evalution_type_Valid() const{
    return m_evalution_type_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getJobId() const {
    return m_job_id;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getNullRowCount() const {
    return m_null_row_count;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setNullRowCount(const QString &null_row_count) {
    m_null_row_count = null_row_count;
    m_null_row_count_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_null_row_count_Set() const{
    return m_null_row_count_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_null_row_count_Valid() const{
    return m_null_row_count_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getPassedRowCount() const {
    return m_passed_row_count;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setPassedRowCount(const QString &passed_row_count) {
    m_passed_row_count = passed_row_count;
    m_passed_row_count_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_passed_row_count_Set() const{
    return m_passed_row_count_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_passed_row_count_Valid() const{
    return m_passed_row_count_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getResult() const {
    return m_result;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setResult(const QString &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_result_Set() const{
    return m_result_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_result_Valid() const{
    return m_result_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getRuleDimension() const {
    return m_rule_dimension;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setRuleDimension(const QString &rule_dimension) {
    m_rule_dimension = rule_dimension;
    m_rule_dimension_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_rule_dimension_Set() const{
    return m_rule_dimension_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_rule_dimension_Valid() const{
    return m_rule_dimension_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getRuleName() const {
    return m_rule_name;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setRuleName(const QString &rule_name) {
    m_rule_name = rule_name;
    m_rule_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_rule_name_Set() const{
    return m_rule_name_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_rule_name_Valid() const{
    return m_rule_name_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getRuleType() const {
    return m_rule_type;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setRuleType(const QString &rule_type) {
    m_rule_type = rule_type;
    m_rule_type_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_rule_type_Set() const{
    return m_rule_type_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_rule_type_Valid() const{
    return m_rule_type_isValid;
}

double OAIGoogleCloudDataplexV1DataQualityScanRuleResult::getThresholdPercent() const {
    return m_threshold_percent;
}
void OAIGoogleCloudDataplexV1DataQualityScanRuleResult::setThresholdPercent(const double &threshold_percent) {
    m_threshold_percent = threshold_percent;
    m_threshold_percent_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_threshold_percent_Set() const{
    return m_threshold_percent_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::is_threshold_percent_Valid() const{
    return m_threshold_percent_isValid;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evaluated_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_evalution_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_null_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_passed_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_dimension_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_threshold_percent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1DataQualityScanRuleResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
