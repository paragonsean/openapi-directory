/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1Job.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1Job::OAIGoogleCloudDataplexV1Job(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1Job::OAIGoogleCloudDataplexV1Job() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1Job::~OAIGoogleCloudDataplexV1Job() {}

void OAIGoogleCloudDataplexV1Job::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_execution_spec_isSet = false;
    m_execution_spec_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_retry_count_isSet = false;
    m_retry_count_isValid = false;

    m_service_isSet = false;
    m_service_isValid = false;

    m_service_job_isSet = false;
    m_service_job_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_trigger_isSet = false;
    m_trigger_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;
}

void OAIGoogleCloudDataplexV1Job::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1Job::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_execution_spec_isValid = ::OpenAPI::fromJsonValue(m_execution_spec, json[QString("executionSpec")]);
    m_execution_spec_isSet = !json[QString("executionSpec")].isNull() && m_execution_spec_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_retry_count_isValid = ::OpenAPI::fromJsonValue(m_retry_count, json[QString("retryCount")]);
    m_retry_count_isSet = !json[QString("retryCount")].isNull() && m_retry_count_isValid;

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("service")]);
    m_service_isSet = !json[QString("service")].isNull() && m_service_isValid;

    m_service_job_isValid = ::OpenAPI::fromJsonValue(m_service_job, json[QString("serviceJob")]);
    m_service_job_isSet = !json[QString("serviceJob")].isNull() && m_service_job_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_trigger_isValid = ::OpenAPI::fromJsonValue(m_trigger, json[QString("trigger")]);
    m_trigger_isSet = !json[QString("trigger")].isNull() && m_trigger_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;
}

QString OAIGoogleCloudDataplexV1Job::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1Job::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_execution_spec.isSet()) {
        obj.insert(QString("executionSpec"), ::OpenAPI::toJsonValue(m_execution_spec));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_retry_count_isSet) {
        obj.insert(QString("retryCount"), ::OpenAPI::toJsonValue(m_retry_count));
    }
    if (m_service_isSet) {
        obj.insert(QString("service"), ::OpenAPI::toJsonValue(m_service));
    }
    if (m_service_job_isSet) {
        obj.insert(QString("serviceJob"), ::OpenAPI::toJsonValue(m_service_job));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_trigger_isSet) {
        obj.insert(QString("trigger"), ::OpenAPI::toJsonValue(m_trigger));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1Job::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudDataplexV1Job::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIGoogleCloudDataplexV1TaskExecutionSpec OAIGoogleCloudDataplexV1Job::getExecutionSpec() const {
    return m_execution_spec;
}
void OAIGoogleCloudDataplexV1Job::setExecutionSpec(const OAIGoogleCloudDataplexV1TaskExecutionSpec &execution_spec) {
    m_execution_spec = execution_spec;
    m_execution_spec_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_execution_spec_Set() const{
    return m_execution_spec_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_execution_spec_Valid() const{
    return m_execution_spec_isValid;
}

QMap<QString, QString> OAIGoogleCloudDataplexV1Job::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudDataplexV1Job::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudDataplexV1Job::getMessage() const {
    return m_message;
}
void OAIGoogleCloudDataplexV1Job::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIGoogleCloudDataplexV1Job::getName() const {
    return m_name;
}
void OAIGoogleCloudDataplexV1Job::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIGoogleCloudDataplexV1Job::getRetryCount() const {
    return m_retry_count;
}
void OAIGoogleCloudDataplexV1Job::setRetryCount(const qint32 &retry_count) {
    m_retry_count = retry_count;
    m_retry_count_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_retry_count_Set() const{
    return m_retry_count_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_retry_count_Valid() const{
    return m_retry_count_isValid;
}

QString OAIGoogleCloudDataplexV1Job::getService() const {
    return m_service;
}
void OAIGoogleCloudDataplexV1Job::setService(const QString &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_service_Set() const{
    return m_service_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_service_Valid() const{
    return m_service_isValid;
}

QString OAIGoogleCloudDataplexV1Job::getServiceJob() const {
    return m_service_job;
}
void OAIGoogleCloudDataplexV1Job::setServiceJob(const QString &service_job) {
    m_service_job = service_job;
    m_service_job_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_service_job_Set() const{
    return m_service_job_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_service_job_Valid() const{
    return m_service_job_isValid;
}

QString OAIGoogleCloudDataplexV1Job::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudDataplexV1Job::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudDataplexV1Job::getState() const {
    return m_state;
}
void OAIGoogleCloudDataplexV1Job::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudDataplexV1Job::getTrigger() const {
    return m_trigger;
}
void OAIGoogleCloudDataplexV1Job::setTrigger(const QString &trigger) {
    m_trigger = trigger;
    m_trigger_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_trigger_Set() const{
    return m_trigger_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_trigger_Valid() const{
    return m_trigger_isValid;
}

QString OAIGoogleCloudDataplexV1Job::getUid() const {
    return m_uid;
}
void OAIGoogleCloudDataplexV1Job::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIGoogleCloudDataplexV1Job::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIGoogleCloudDataplexV1Job::is_uid_Valid() const{
    return m_uid_isValid;
}

bool OAIGoogleCloudDataplexV1Job::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retry_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_job_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1Job::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
