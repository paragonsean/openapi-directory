/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::~OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo() {}

void OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::initializeModel() {

    m_average_isSet = false;
    m_average_isValid = false;

    m_max_isSet = false;
    m_max_isValid = false;

    m_min_isSet = false;
    m_min_isValid = false;

    m_quartiles_isSet = false;
    m_quartiles_isValid = false;

    m_standard_deviation_isSet = false;
    m_standard_deviation_isValid = false;
}

void OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::fromJsonObject(QJsonObject json) {

    m_average_isValid = ::OpenAPI::fromJsonValue(m_average, json[QString("average")]);
    m_average_isSet = !json[QString("average")].isNull() && m_average_isValid;

    m_max_isValid = ::OpenAPI::fromJsonValue(m_max, json[QString("max")]);
    m_max_isSet = !json[QString("max")].isNull() && m_max_isValid;

    m_min_isValid = ::OpenAPI::fromJsonValue(m_min, json[QString("min")]);
    m_min_isSet = !json[QString("min")].isNull() && m_min_isValid;

    m_quartiles_isValid = ::OpenAPI::fromJsonValue(m_quartiles, json[QString("quartiles")]);
    m_quartiles_isSet = !json[QString("quartiles")].isNull() && m_quartiles_isValid;

    m_standard_deviation_isValid = ::OpenAPI::fromJsonValue(m_standard_deviation, json[QString("standardDeviation")]);
    m_standard_deviation_isSet = !json[QString("standardDeviation")].isNull() && m_standard_deviation_isValid;
}

QString OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_average_isSet) {
        obj.insert(QString("average"), ::OpenAPI::toJsonValue(m_average));
    }
    if (m_max_isSet) {
        obj.insert(QString("max"), ::OpenAPI::toJsonValue(m_max));
    }
    if (m_min_isSet) {
        obj.insert(QString("min"), ::OpenAPI::toJsonValue(m_min));
    }
    if (m_quartiles.size() > 0) {
        obj.insert(QString("quartiles"), ::OpenAPI::toJsonValue(m_quartiles));
    }
    if (m_standard_deviation_isSet) {
        obj.insert(QString("standardDeviation"), ::OpenAPI::toJsonValue(m_standard_deviation));
    }
    return obj;
}

double OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::getAverage() const {
    return m_average;
}
void OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::setAverage(const double &average) {
    m_average = average;
    m_average_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_average_Set() const{
    return m_average_isSet;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_average_Valid() const{
    return m_average_isValid;
}

double OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::getMax() const {
    return m_max;
}
void OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::setMax(const double &max) {
    m_max = max;
    m_max_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_max_Set() const{
    return m_max_isSet;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_max_Valid() const{
    return m_max_isValid;
}

double OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::getMin() const {
    return m_min;
}
void OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::setMin(const double &min) {
    m_min = min;
    m_min_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_min_Set() const{
    return m_min_isSet;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_min_Valid() const{
    return m_min_isValid;
}

QList<double> OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::getQuartiles() const {
    return m_quartiles;
}
void OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::setQuartiles(const QList<double> &quartiles) {
    m_quartiles = quartiles;
    m_quartiles_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_quartiles_Set() const{
    return m_quartiles_isSet;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_quartiles_Valid() const{
    return m_quartiles_isValid;
}

double OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::getStandardDeviation() const {
    return m_standard_deviation;
}
void OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::setStandardDeviation(const double &standard_deviation) {
    m_standard_deviation = standard_deviation;
    m_standard_deviation_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_standard_deviation_Set() const{
    return m_standard_deviation_isSet;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::is_standard_deviation_Valid() const{
    return m_standard_deviation_isValid;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quartiles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_deviation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1DataProfileResultProfileFieldProfileInfoDoubleFieldInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
