/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1DataScanExecutionSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1DataScanExecutionSpec::OAIGoogleCloudDataplexV1DataScanExecutionSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1DataScanExecutionSpec::OAIGoogleCloudDataplexV1DataScanExecutionSpec() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1DataScanExecutionSpec::~OAIGoogleCloudDataplexV1DataScanExecutionSpec() {}

void OAIGoogleCloudDataplexV1DataScanExecutionSpec::initializeModel() {

    m_field_isSet = false;
    m_field_isValid = false;

    m_trigger_isSet = false;
    m_trigger_isValid = false;
}

void OAIGoogleCloudDataplexV1DataScanExecutionSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1DataScanExecutionSpec::fromJsonObject(QJsonObject json) {

    m_field_isValid = ::OpenAPI::fromJsonValue(m_field, json[QString("field")]);
    m_field_isSet = !json[QString("field")].isNull() && m_field_isValid;

    m_trigger_isValid = ::OpenAPI::fromJsonValue(m_trigger, json[QString("trigger")]);
    m_trigger_isSet = !json[QString("trigger")].isNull() && m_trigger_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanExecutionSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1DataScanExecutionSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_field_isSet) {
        obj.insert(QString("field"), ::OpenAPI::toJsonValue(m_field));
    }
    if (m_trigger.isSet()) {
        obj.insert(QString("trigger"), ::OpenAPI::toJsonValue(m_trigger));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1DataScanExecutionSpec::getField() const {
    return m_field;
}
void OAIGoogleCloudDataplexV1DataScanExecutionSpec::setField(const QString &field) {
    m_field = field;
    m_field_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanExecutionSpec::is_field_Set() const{
    return m_field_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanExecutionSpec::is_field_Valid() const{
    return m_field_isValid;
}

OAIGoogleCloudDataplexV1Trigger OAIGoogleCloudDataplexV1DataScanExecutionSpec::getTrigger() const {
    return m_trigger;
}
void OAIGoogleCloudDataplexV1DataScanExecutionSpec::setTrigger(const OAIGoogleCloudDataplexV1Trigger &trigger) {
    m_trigger = trigger;
    m_trigger_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanExecutionSpec::is_trigger_Set() const{
    return m_trigger_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanExecutionSpec::is_trigger_Valid() const{
    return m_trigger_isValid;
}

bool OAIGoogleCloudDataplexV1DataScanExecutionSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1DataScanExecutionSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
