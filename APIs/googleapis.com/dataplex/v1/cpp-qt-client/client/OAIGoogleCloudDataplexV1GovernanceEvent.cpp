/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1GovernanceEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1GovernanceEvent::OAIGoogleCloudDataplexV1GovernanceEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1GovernanceEvent::OAIGoogleCloudDataplexV1GovernanceEvent() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1GovernanceEvent::~OAIGoogleCloudDataplexV1GovernanceEvent() {}

void OAIGoogleCloudDataplexV1GovernanceEvent::initializeModel() {

    m_entity_isSet = false;
    m_entity_isValid = false;

    m_event_type_isSet = false;
    m_event_type_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIGoogleCloudDataplexV1GovernanceEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1GovernanceEvent::fromJsonObject(QJsonObject json) {

    m_entity_isValid = ::OpenAPI::fromJsonValue(m_entity, json[QString("entity")]);
    m_entity_isSet = !json[QString("entity")].isNull() && m_entity_isValid;

    m_event_type_isValid = ::OpenAPI::fromJsonValue(m_event_type, json[QString("eventType")]);
    m_event_type_isSet = !json[QString("eventType")].isNull() && m_event_type_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;
}

QString OAIGoogleCloudDataplexV1GovernanceEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1GovernanceEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_entity.isSet()) {
        obj.insert(QString("entity"), ::OpenAPI::toJsonValue(m_entity));
    }
    if (m_event_type_isSet) {
        obj.insert(QString("eventType"), ::OpenAPI::toJsonValue(m_event_type));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

OAIGoogleCloudDataplexV1GovernanceEventEntity OAIGoogleCloudDataplexV1GovernanceEvent::getEntity() const {
    return m_entity;
}
void OAIGoogleCloudDataplexV1GovernanceEvent::setEntity(const OAIGoogleCloudDataplexV1GovernanceEventEntity &entity) {
    m_entity = entity;
    m_entity_isSet = true;
}

bool OAIGoogleCloudDataplexV1GovernanceEvent::is_entity_Set() const{
    return m_entity_isSet;
}

bool OAIGoogleCloudDataplexV1GovernanceEvent::is_entity_Valid() const{
    return m_entity_isValid;
}

QString OAIGoogleCloudDataplexV1GovernanceEvent::getEventType() const {
    return m_event_type;
}
void OAIGoogleCloudDataplexV1GovernanceEvent::setEventType(const QString &event_type) {
    m_event_type = event_type;
    m_event_type_isSet = true;
}

bool OAIGoogleCloudDataplexV1GovernanceEvent::is_event_type_Set() const{
    return m_event_type_isSet;
}

bool OAIGoogleCloudDataplexV1GovernanceEvent::is_event_type_Valid() const{
    return m_event_type_isValid;
}

QString OAIGoogleCloudDataplexV1GovernanceEvent::getMessage() const {
    return m_message;
}
void OAIGoogleCloudDataplexV1GovernanceEvent::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGoogleCloudDataplexV1GovernanceEvent::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGoogleCloudDataplexV1GovernanceEvent::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIGoogleCloudDataplexV1GovernanceEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1GovernanceEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
