/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1Content.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1Content::OAIGoogleCloudDataplexV1Content(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1Content::OAIGoogleCloudDataplexV1Content() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1Content::~OAIGoogleCloudDataplexV1Content() {}

void OAIGoogleCloudDataplexV1Content::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_text_isSet = false;
    m_data_text_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_notebook_isSet = false;
    m_notebook_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_sql_script_isSet = false;
    m_sql_script_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDataplexV1Content::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1Content::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_text_isValid = ::OpenAPI::fromJsonValue(m_data_text, json[QString("dataText")]);
    m_data_text_isSet = !json[QString("dataText")].isNull() && m_data_text_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notebook_isValid = ::OpenAPI::fromJsonValue(m_notebook, json[QString("notebook")]);
    m_notebook_isSet = !json[QString("notebook")].isNull() && m_notebook_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_sql_script_isValid = ::OpenAPI::fromJsonValue(m_sql_script, json[QString("sqlScript")]);
    m_sql_script_isSet = !json[QString("sqlScript")].isNull() && m_sql_script_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDataplexV1Content::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1Content::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_text_isSet) {
        obj.insert(QString("dataText"), ::OpenAPI::toJsonValue(m_data_text));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notebook.isSet()) {
        obj.insert(QString("notebook"), ::OpenAPI::toJsonValue(m_notebook));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_sql_script.isSet()) {
        obj.insert(QString("sqlScript"), ::OpenAPI::toJsonValue(m_sql_script));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1Content::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDataplexV1Content::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDataplexV1Content::getDataText() const {
    return m_data_text;
}
void OAIGoogleCloudDataplexV1Content::setDataText(const QString &data_text) {
    m_data_text = data_text;
    m_data_text_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_data_text_Set() const{
    return m_data_text_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_data_text_Valid() const{
    return m_data_text_isValid;
}

QString OAIGoogleCloudDataplexV1Content::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDataplexV1Content::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_description_Valid() const{
    return m_description_isValid;
}

QMap<QString, QString> OAIGoogleCloudDataplexV1Content::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudDataplexV1Content::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudDataplexV1Content::getName() const {
    return m_name;
}
void OAIGoogleCloudDataplexV1Content::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDataplexV1ContentNotebook OAIGoogleCloudDataplexV1Content::getNotebook() const {
    return m_notebook;
}
void OAIGoogleCloudDataplexV1Content::setNotebook(const OAIGoogleCloudDataplexV1ContentNotebook &notebook) {
    m_notebook = notebook;
    m_notebook_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_notebook_Set() const{
    return m_notebook_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_notebook_Valid() const{
    return m_notebook_isValid;
}

QString OAIGoogleCloudDataplexV1Content::getPath() const {
    return m_path;
}
void OAIGoogleCloudDataplexV1Content::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_path_Set() const{
    return m_path_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_path_Valid() const{
    return m_path_isValid;
}

OAIGoogleCloudDataplexV1ContentSqlScript OAIGoogleCloudDataplexV1Content::getSqlScript() const {
    return m_sql_script;
}
void OAIGoogleCloudDataplexV1Content::setSqlScript(const OAIGoogleCloudDataplexV1ContentSqlScript &sql_script) {
    m_sql_script = sql_script;
    m_sql_script_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_sql_script_Set() const{
    return m_sql_script_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_sql_script_Valid() const{
    return m_sql_script_isValid;
}

QString OAIGoogleCloudDataplexV1Content::getUid() const {
    return m_uid;
}
void OAIGoogleCloudDataplexV1Content::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_uid_Valid() const{
    return m_uid_isValid;
}

QString OAIGoogleCloudDataplexV1Content::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDataplexV1Content::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Content::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDataplexV1Content::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDataplexV1Content::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notebook.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sql_script.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1Content::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
