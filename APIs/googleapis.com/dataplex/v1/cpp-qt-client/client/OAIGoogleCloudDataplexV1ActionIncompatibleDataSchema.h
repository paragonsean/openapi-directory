/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema.h
 *
 * Action details for incompatible schemas detected by discovery.
 */

#ifndef OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema_H
#define OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema : public OAIObject {
public:
    OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema();
    OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema(QString json);
    ~OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExistingSchema() const;
    void setExistingSchema(const QString &existing_schema);
    bool is_existing_schema_Set() const;
    bool is_existing_schema_Valid() const;

    QString getNewSchema() const;
    void setNewSchema(const QString &new_schema);
    bool is_new_schema_Set() const;
    bool is_new_schema_Valid() const;

    QList<QString> getSampledDataLocations() const;
    void setSampledDataLocations(const QList<QString> &sampled_data_locations);
    bool is_sampled_data_locations_Set() const;
    bool is_sampled_data_locations_Valid() const;

    QString getSchemaChange() const;
    void setSchemaChange(const QString &schema_change);
    bool is_schema_change_Set() const;
    bool is_schema_change_Valid() const;

    QString getTable() const;
    void setTable(const QString &table);
    bool is_table_Set() const;
    bool is_table_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_existing_schema;
    bool m_existing_schema_isSet;
    bool m_existing_schema_isValid;

    QString m_new_schema;
    bool m_new_schema_isSet;
    bool m_new_schema_isValid;

    QList<QString> m_sampled_data_locations;
    bool m_sampled_data_locations_isSet;
    bool m_sampled_data_locations_isValid;

    QString m_schema_change;
    bool m_schema_change_isSet;
    bool m_schema_change_isValid;

    QString m_table;
    bool m_table_isSet;
    bool m_table_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema)

#endif // OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema_H
