/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1Lake.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1Lake::OAIGoogleCloudDataplexV1Lake(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1Lake::OAIGoogleCloudDataplexV1Lake() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1Lake::~OAIGoogleCloudDataplexV1Lake() {}

void OAIGoogleCloudDataplexV1Lake::initializeModel() {

    m_asset_status_isSet = false;
    m_asset_status_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_metastore_isSet = false;
    m_metastore_isValid = false;

    m_metastore_status_isSet = false;
    m_metastore_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_service_account_isSet = false;
    m_service_account_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDataplexV1Lake::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1Lake::fromJsonObject(QJsonObject json) {

    m_asset_status_isValid = ::OpenAPI::fromJsonValue(m_asset_status, json[QString("assetStatus")]);
    m_asset_status_isSet = !json[QString("assetStatus")].isNull() && m_asset_status_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_metastore_isValid = ::OpenAPI::fromJsonValue(m_metastore, json[QString("metastore")]);
    m_metastore_isSet = !json[QString("metastore")].isNull() && m_metastore_isValid;

    m_metastore_status_isValid = ::OpenAPI::fromJsonValue(m_metastore_status, json[QString("metastoreStatus")]);
    m_metastore_status_isSet = !json[QString("metastoreStatus")].isNull() && m_metastore_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_service_account_isValid = ::OpenAPI::fromJsonValue(m_service_account, json[QString("serviceAccount")]);
    m_service_account_isSet = !json[QString("serviceAccount")].isNull() && m_service_account_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDataplexV1Lake::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1Lake::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_status.isSet()) {
        obj.insert(QString("assetStatus"), ::OpenAPI::toJsonValue(m_asset_status));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_metastore.isSet()) {
        obj.insert(QString("metastore"), ::OpenAPI::toJsonValue(m_metastore));
    }
    if (m_metastore_status.isSet()) {
        obj.insert(QString("metastoreStatus"), ::OpenAPI::toJsonValue(m_metastore_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_service_account_isSet) {
        obj.insert(QString("serviceAccount"), ::OpenAPI::toJsonValue(m_service_account));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIGoogleCloudDataplexV1AssetStatus OAIGoogleCloudDataplexV1Lake::getAssetStatus() const {
    return m_asset_status;
}
void OAIGoogleCloudDataplexV1Lake::setAssetStatus(const OAIGoogleCloudDataplexV1AssetStatus &asset_status) {
    m_asset_status = asset_status;
    m_asset_status_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_asset_status_Set() const{
    return m_asset_status_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_asset_status_Valid() const{
    return m_asset_status_isValid;
}

QString OAIGoogleCloudDataplexV1Lake::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDataplexV1Lake::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDataplexV1Lake::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDataplexV1Lake::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDataplexV1Lake::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDataplexV1Lake::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QMap<QString, QString> OAIGoogleCloudDataplexV1Lake::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudDataplexV1Lake::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_labels_Valid() const{
    return m_labels_isValid;
}

OAIGoogleCloudDataplexV1LakeMetastore OAIGoogleCloudDataplexV1Lake::getMetastore() const {
    return m_metastore;
}
void OAIGoogleCloudDataplexV1Lake::setMetastore(const OAIGoogleCloudDataplexV1LakeMetastore &metastore) {
    m_metastore = metastore;
    m_metastore_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_metastore_Set() const{
    return m_metastore_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_metastore_Valid() const{
    return m_metastore_isValid;
}

OAIGoogleCloudDataplexV1LakeMetastoreStatus OAIGoogleCloudDataplexV1Lake::getMetastoreStatus() const {
    return m_metastore_status;
}
void OAIGoogleCloudDataplexV1Lake::setMetastoreStatus(const OAIGoogleCloudDataplexV1LakeMetastoreStatus &metastore_status) {
    m_metastore_status = metastore_status;
    m_metastore_status_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_metastore_status_Set() const{
    return m_metastore_status_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_metastore_status_Valid() const{
    return m_metastore_status_isValid;
}

QString OAIGoogleCloudDataplexV1Lake::getName() const {
    return m_name;
}
void OAIGoogleCloudDataplexV1Lake::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDataplexV1Lake::getServiceAccount() const {
    return m_service_account;
}
void OAIGoogleCloudDataplexV1Lake::setServiceAccount(const QString &service_account) {
    m_service_account = service_account;
    m_service_account_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_service_account_Set() const{
    return m_service_account_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_service_account_Valid() const{
    return m_service_account_isValid;
}

QString OAIGoogleCloudDataplexV1Lake::getState() const {
    return m_state;
}
void OAIGoogleCloudDataplexV1Lake::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudDataplexV1Lake::getUid() const {
    return m_uid;
}
void OAIGoogleCloudDataplexV1Lake::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_uid_Valid() const{
    return m_uid_isValid;
}

QString OAIGoogleCloudDataplexV1Lake::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDataplexV1Lake::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Lake::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDataplexV1Lake::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDataplexV1Lake::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metastore.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metastore_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1Lake::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
