/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1LakeMetastoreStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1LakeMetastoreStatus::OAIGoogleCloudDataplexV1LakeMetastoreStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1LakeMetastoreStatus::OAIGoogleCloudDataplexV1LakeMetastoreStatus() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1LakeMetastoreStatus::~OAIGoogleCloudDataplexV1LakeMetastoreStatus() {}

void OAIGoogleCloudDataplexV1LakeMetastoreStatus::initializeModel() {

    m_endpoint_isSet = false;
    m_endpoint_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDataplexV1LakeMetastoreStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1LakeMetastoreStatus::fromJsonObject(QJsonObject json) {

    m_endpoint_isValid = ::OpenAPI::fromJsonValue(m_endpoint, json[QString("endpoint")]);
    m_endpoint_isSet = !json[QString("endpoint")].isNull() && m_endpoint_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDataplexV1LakeMetastoreStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1LakeMetastoreStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_endpoint_isSet) {
        obj.insert(QString("endpoint"), ::OpenAPI::toJsonValue(m_endpoint));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1LakeMetastoreStatus::getEndpoint() const {
    return m_endpoint;
}
void OAIGoogleCloudDataplexV1LakeMetastoreStatus::setEndpoint(const QString &endpoint) {
    m_endpoint = endpoint;
    m_endpoint_isSet = true;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::is_endpoint_Set() const{
    return m_endpoint_isSet;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::is_endpoint_Valid() const{
    return m_endpoint_isValid;
}

QString OAIGoogleCloudDataplexV1LakeMetastoreStatus::getMessage() const {
    return m_message;
}
void OAIGoogleCloudDataplexV1LakeMetastoreStatus::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIGoogleCloudDataplexV1LakeMetastoreStatus::getState() const {
    return m_state;
}
void OAIGoogleCloudDataplexV1LakeMetastoreStatus::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudDataplexV1LakeMetastoreStatus::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDataplexV1LakeMetastoreStatus::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1LakeMetastoreStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
