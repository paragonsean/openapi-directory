/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1Asset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1Asset::OAIGoogleCloudDataplexV1Asset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1Asset::OAIGoogleCloudDataplexV1Asset() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1Asset::~OAIGoogleCloudDataplexV1Asset() {}

void OAIGoogleCloudDataplexV1Asset::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_discovery_spec_isSet = false;
    m_discovery_spec_isValid = false;

    m_discovery_status_isSet = false;
    m_discovery_status_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_resource_spec_isSet = false;
    m_resource_spec_isValid = false;

    m_resource_status_isSet = false;
    m_resource_status_isValid = false;

    m_security_status_isSet = false;
    m_security_status_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDataplexV1Asset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1Asset::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_discovery_spec_isValid = ::OpenAPI::fromJsonValue(m_discovery_spec, json[QString("discoverySpec")]);
    m_discovery_spec_isSet = !json[QString("discoverySpec")].isNull() && m_discovery_spec_isValid;

    m_discovery_status_isValid = ::OpenAPI::fromJsonValue(m_discovery_status, json[QString("discoveryStatus")]);
    m_discovery_status_isSet = !json[QString("discoveryStatus")].isNull() && m_discovery_status_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_resource_spec_isValid = ::OpenAPI::fromJsonValue(m_resource_spec, json[QString("resourceSpec")]);
    m_resource_spec_isSet = !json[QString("resourceSpec")].isNull() && m_resource_spec_isValid;

    m_resource_status_isValid = ::OpenAPI::fromJsonValue(m_resource_status, json[QString("resourceStatus")]);
    m_resource_status_isSet = !json[QString("resourceStatus")].isNull() && m_resource_status_isValid;

    m_security_status_isValid = ::OpenAPI::fromJsonValue(m_security_status, json[QString("securityStatus")]);
    m_security_status_isSet = !json[QString("securityStatus")].isNull() && m_security_status_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDataplexV1Asset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1Asset::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_discovery_spec.isSet()) {
        obj.insert(QString("discoverySpec"), ::OpenAPI::toJsonValue(m_discovery_spec));
    }
    if (m_discovery_status.isSet()) {
        obj.insert(QString("discoveryStatus"), ::OpenAPI::toJsonValue(m_discovery_status));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_resource_spec.isSet()) {
        obj.insert(QString("resourceSpec"), ::OpenAPI::toJsonValue(m_resource_spec));
    }
    if (m_resource_status.isSet()) {
        obj.insert(QString("resourceStatus"), ::OpenAPI::toJsonValue(m_resource_status));
    }
    if (m_security_status.isSet()) {
        obj.insert(QString("securityStatus"), ::OpenAPI::toJsonValue(m_security_status));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1Asset::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDataplexV1Asset::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDataplexV1Asset::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDataplexV1Asset::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_description_Valid() const{
    return m_description_isValid;
}

OAIGoogleCloudDataplexV1AssetDiscoverySpec OAIGoogleCloudDataplexV1Asset::getDiscoverySpec() const {
    return m_discovery_spec;
}
void OAIGoogleCloudDataplexV1Asset::setDiscoverySpec(const OAIGoogleCloudDataplexV1AssetDiscoverySpec &discovery_spec) {
    m_discovery_spec = discovery_spec;
    m_discovery_spec_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_discovery_spec_Set() const{
    return m_discovery_spec_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_discovery_spec_Valid() const{
    return m_discovery_spec_isValid;
}

OAIGoogleCloudDataplexV1AssetDiscoveryStatus OAIGoogleCloudDataplexV1Asset::getDiscoveryStatus() const {
    return m_discovery_status;
}
void OAIGoogleCloudDataplexV1Asset::setDiscoveryStatus(const OAIGoogleCloudDataplexV1AssetDiscoveryStatus &discovery_status) {
    m_discovery_status = discovery_status;
    m_discovery_status_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_discovery_status_Set() const{
    return m_discovery_status_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_discovery_status_Valid() const{
    return m_discovery_status_isValid;
}

QString OAIGoogleCloudDataplexV1Asset::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDataplexV1Asset::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QMap<QString, QString> OAIGoogleCloudDataplexV1Asset::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudDataplexV1Asset::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudDataplexV1Asset::getName() const {
    return m_name;
}
void OAIGoogleCloudDataplexV1Asset::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDataplexV1AssetResourceSpec OAIGoogleCloudDataplexV1Asset::getResourceSpec() const {
    return m_resource_spec;
}
void OAIGoogleCloudDataplexV1Asset::setResourceSpec(const OAIGoogleCloudDataplexV1AssetResourceSpec &resource_spec) {
    m_resource_spec = resource_spec;
    m_resource_spec_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_resource_spec_Set() const{
    return m_resource_spec_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_resource_spec_Valid() const{
    return m_resource_spec_isValid;
}

OAIGoogleCloudDataplexV1AssetResourceStatus OAIGoogleCloudDataplexV1Asset::getResourceStatus() const {
    return m_resource_status;
}
void OAIGoogleCloudDataplexV1Asset::setResourceStatus(const OAIGoogleCloudDataplexV1AssetResourceStatus &resource_status) {
    m_resource_status = resource_status;
    m_resource_status_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_resource_status_Set() const{
    return m_resource_status_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_resource_status_Valid() const{
    return m_resource_status_isValid;
}

OAIGoogleCloudDataplexV1AssetSecurityStatus OAIGoogleCloudDataplexV1Asset::getSecurityStatus() const {
    return m_security_status;
}
void OAIGoogleCloudDataplexV1Asset::setSecurityStatus(const OAIGoogleCloudDataplexV1AssetSecurityStatus &security_status) {
    m_security_status = security_status;
    m_security_status_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_security_status_Set() const{
    return m_security_status_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_security_status_Valid() const{
    return m_security_status_isValid;
}

QString OAIGoogleCloudDataplexV1Asset::getState() const {
    return m_state;
}
void OAIGoogleCloudDataplexV1Asset::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudDataplexV1Asset::getUid() const {
    return m_uid;
}
void OAIGoogleCloudDataplexV1Asset::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_uid_Valid() const{
    return m_uid_isValid;
}

QString OAIGoogleCloudDataplexV1Asset::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDataplexV1Asset::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Asset::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDataplexV1Asset::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDataplexV1Asset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discovery_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_discovery_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1Asset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
