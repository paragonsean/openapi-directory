/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1AssetDiscoveryStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1AssetDiscoveryStatus::OAIGoogleCloudDataplexV1AssetDiscoveryStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1AssetDiscoveryStatus::OAIGoogleCloudDataplexV1AssetDiscoveryStatus() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1AssetDiscoveryStatus::~OAIGoogleCloudDataplexV1AssetDiscoveryStatus() {}

void OAIGoogleCloudDataplexV1AssetDiscoveryStatus::initializeModel() {

    m_last_run_duration_isSet = false;
    m_last_run_duration_isValid = false;

    m_last_run_time_isSet = false;
    m_last_run_time_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_stats_isSet = false;
    m_stats_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDataplexV1AssetDiscoveryStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1AssetDiscoveryStatus::fromJsonObject(QJsonObject json) {

    m_last_run_duration_isValid = ::OpenAPI::fromJsonValue(m_last_run_duration, json[QString("lastRunDuration")]);
    m_last_run_duration_isSet = !json[QString("lastRunDuration")].isNull() && m_last_run_duration_isValid;

    m_last_run_time_isValid = ::OpenAPI::fromJsonValue(m_last_run_time, json[QString("lastRunTime")]);
    m_last_run_time_isSet = !json[QString("lastRunTime")].isNull() && m_last_run_time_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_stats_isValid = ::OpenAPI::fromJsonValue(m_stats, json[QString("stats")]);
    m_stats_isSet = !json[QString("stats")].isNull() && m_stats_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDataplexV1AssetDiscoveryStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1AssetDiscoveryStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_last_run_duration_isSet) {
        obj.insert(QString("lastRunDuration"), ::OpenAPI::toJsonValue(m_last_run_duration));
    }
    if (m_last_run_time_isSet) {
        obj.insert(QString("lastRunTime"), ::OpenAPI::toJsonValue(m_last_run_time));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_stats.isSet()) {
        obj.insert(QString("stats"), ::OpenAPI::toJsonValue(m_stats));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1AssetDiscoveryStatus::getLastRunDuration() const {
    return m_last_run_duration;
}
void OAIGoogleCloudDataplexV1AssetDiscoveryStatus::setLastRunDuration(const QString &last_run_duration) {
    m_last_run_duration = last_run_duration;
    m_last_run_duration_isSet = true;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_last_run_duration_Set() const{
    return m_last_run_duration_isSet;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_last_run_duration_Valid() const{
    return m_last_run_duration_isValid;
}

QString OAIGoogleCloudDataplexV1AssetDiscoveryStatus::getLastRunTime() const {
    return m_last_run_time;
}
void OAIGoogleCloudDataplexV1AssetDiscoveryStatus::setLastRunTime(const QString &last_run_time) {
    m_last_run_time = last_run_time;
    m_last_run_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_last_run_time_Set() const{
    return m_last_run_time_isSet;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_last_run_time_Valid() const{
    return m_last_run_time_isValid;
}

QString OAIGoogleCloudDataplexV1AssetDiscoveryStatus::getMessage() const {
    return m_message;
}
void OAIGoogleCloudDataplexV1AssetDiscoveryStatus::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIGoogleCloudDataplexV1AssetDiscoveryStatus::getState() const {
    return m_state;
}
void OAIGoogleCloudDataplexV1AssetDiscoveryStatus::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_state_Valid() const{
    return m_state_isValid;
}

OAIGoogleCloudDataplexV1AssetDiscoveryStatusStats OAIGoogleCloudDataplexV1AssetDiscoveryStatus::getStats() const {
    return m_stats;
}
void OAIGoogleCloudDataplexV1AssetDiscoveryStatus::setStats(const OAIGoogleCloudDataplexV1AssetDiscoveryStatusStats &stats) {
    m_stats = stats;
    m_stats_isSet = true;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_stats_Set() const{
    return m_stats_isSet;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_stats_Valid() const{
    return m_stats_isValid;
}

QString OAIGoogleCloudDataplexV1AssetDiscoveryStatus::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDataplexV1AssetDiscoveryStatus::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_run_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_run_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1AssetDiscoveryStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
