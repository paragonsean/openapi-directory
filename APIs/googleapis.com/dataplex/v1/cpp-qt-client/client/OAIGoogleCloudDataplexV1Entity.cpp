/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1Entity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1Entity::OAIGoogleCloudDataplexV1Entity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1Entity::OAIGoogleCloudDataplexV1Entity() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1Entity::~OAIGoogleCloudDataplexV1Entity() {}

void OAIGoogleCloudDataplexV1Entity::initializeModel() {

    m_access_isSet = false;
    m_access_isValid = false;

    m_asset_isSet = false;
    m_asset_isValid = false;

    m_catalog_entry_isSet = false;
    m_catalog_entry_isValid = false;

    m_compatibility_isSet = false;
    m_compatibility_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_path_isSet = false;
    m_data_path_isValid = false;

    m_data_path_pattern_isSet = false;
    m_data_path_pattern_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_format_isSet = false;
    m_format_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_schema_isSet = false;
    m_schema_isValid = false;

    m_system_isSet = false;
    m_system_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudDataplexV1Entity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1Entity::fromJsonObject(QJsonObject json) {

    m_access_isValid = ::OpenAPI::fromJsonValue(m_access, json[QString("access")]);
    m_access_isSet = !json[QString("access")].isNull() && m_access_isValid;

    m_asset_isValid = ::OpenAPI::fromJsonValue(m_asset, json[QString("asset")]);
    m_asset_isSet = !json[QString("asset")].isNull() && m_asset_isValid;

    m_catalog_entry_isValid = ::OpenAPI::fromJsonValue(m_catalog_entry, json[QString("catalogEntry")]);
    m_catalog_entry_isSet = !json[QString("catalogEntry")].isNull() && m_catalog_entry_isValid;

    m_compatibility_isValid = ::OpenAPI::fromJsonValue(m_compatibility, json[QString("compatibility")]);
    m_compatibility_isSet = !json[QString("compatibility")].isNull() && m_compatibility_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_path_isValid = ::OpenAPI::fromJsonValue(m_data_path, json[QString("dataPath")]);
    m_data_path_isSet = !json[QString("dataPath")].isNull() && m_data_path_isValid;

    m_data_path_pattern_isValid = ::OpenAPI::fromJsonValue(m_data_path_pattern, json[QString("dataPathPattern")]);
    m_data_path_pattern_isSet = !json[QString("dataPathPattern")].isNull() && m_data_path_pattern_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_format_isValid = ::OpenAPI::fromJsonValue(m_format, json[QString("format")]);
    m_format_isSet = !json[QString("format")].isNull() && m_format_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_schema_isValid = ::OpenAPI::fromJsonValue(m_schema, json[QString("schema")]);
    m_schema_isSet = !json[QString("schema")].isNull() && m_schema_isValid;

    m_system_isValid = ::OpenAPI::fromJsonValue(m_system, json[QString("system")]);
    m_system_isSet = !json[QString("system")].isNull() && m_system_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1Entity::asJsonObject() const {
    QJsonObject obj;
    if (m_access.isSet()) {
        obj.insert(QString("access"), ::OpenAPI::toJsonValue(m_access));
    }
    if (m_asset_isSet) {
        obj.insert(QString("asset"), ::OpenAPI::toJsonValue(m_asset));
    }
    if (m_catalog_entry_isSet) {
        obj.insert(QString("catalogEntry"), ::OpenAPI::toJsonValue(m_catalog_entry));
    }
    if (m_compatibility.isSet()) {
        obj.insert(QString("compatibility"), ::OpenAPI::toJsonValue(m_compatibility));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_path_isSet) {
        obj.insert(QString("dataPath"), ::OpenAPI::toJsonValue(m_data_path));
    }
    if (m_data_path_pattern_isSet) {
        obj.insert(QString("dataPathPattern"), ::OpenAPI::toJsonValue(m_data_path_pattern));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_format.isSet()) {
        obj.insert(QString("format"), ::OpenAPI::toJsonValue(m_format));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_schema.isSet()) {
        obj.insert(QString("schema"), ::OpenAPI::toJsonValue(m_schema));
    }
    if (m_system_isSet) {
        obj.insert(QString("system"), ::OpenAPI::toJsonValue(m_system));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIGoogleCloudDataplexV1StorageAccess OAIGoogleCloudDataplexV1Entity::getAccess() const {
    return m_access;
}
void OAIGoogleCloudDataplexV1Entity::setAccess(const OAIGoogleCloudDataplexV1StorageAccess &access) {
    m_access = access;
    m_access_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_access_Set() const{
    return m_access_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_access_Valid() const{
    return m_access_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getAsset() const {
    return m_asset;
}
void OAIGoogleCloudDataplexV1Entity::setAsset(const QString &asset) {
    m_asset = asset;
    m_asset_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_asset_Set() const{
    return m_asset_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_asset_Valid() const{
    return m_asset_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getCatalogEntry() const {
    return m_catalog_entry;
}
void OAIGoogleCloudDataplexV1Entity::setCatalogEntry(const QString &catalog_entry) {
    m_catalog_entry = catalog_entry;
    m_catalog_entry_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_catalog_entry_Set() const{
    return m_catalog_entry_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_catalog_entry_Valid() const{
    return m_catalog_entry_isValid;
}

OAIGoogleCloudDataplexV1EntityCompatibilityStatus OAIGoogleCloudDataplexV1Entity::getCompatibility() const {
    return m_compatibility;
}
void OAIGoogleCloudDataplexV1Entity::setCompatibility(const OAIGoogleCloudDataplexV1EntityCompatibilityStatus &compatibility) {
    m_compatibility = compatibility;
    m_compatibility_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_compatibility_Set() const{
    return m_compatibility_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_compatibility_Valid() const{
    return m_compatibility_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDataplexV1Entity::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getDataPath() const {
    return m_data_path;
}
void OAIGoogleCloudDataplexV1Entity::setDataPath(const QString &data_path) {
    m_data_path = data_path;
    m_data_path_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_data_path_Set() const{
    return m_data_path_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_data_path_Valid() const{
    return m_data_path_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getDataPathPattern() const {
    return m_data_path_pattern;
}
void OAIGoogleCloudDataplexV1Entity::setDataPathPattern(const QString &data_path_pattern) {
    m_data_path_pattern = data_path_pattern;
    m_data_path_pattern_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_data_path_pattern_Set() const{
    return m_data_path_pattern_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_data_path_pattern_Valid() const{
    return m_data_path_pattern_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDataplexV1Entity::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDataplexV1Entity::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudDataplexV1Entity::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIGoogleCloudDataplexV1StorageFormat OAIGoogleCloudDataplexV1Entity::getFormat() const {
    return m_format;
}
void OAIGoogleCloudDataplexV1Entity::setFormat(const OAIGoogleCloudDataplexV1StorageFormat &format) {
    m_format = format;
    m_format_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_format_Set() const{
    return m_format_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_format_Valid() const{
    return m_format_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getId() const {
    return m_id;
}
void OAIGoogleCloudDataplexV1Entity::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getName() const {
    return m_name;
}
void OAIGoogleCloudDataplexV1Entity::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDataplexV1Schema OAIGoogleCloudDataplexV1Entity::getSchema() const {
    return m_schema;
}
void OAIGoogleCloudDataplexV1Entity::setSchema(const OAIGoogleCloudDataplexV1Schema &schema) {
    m_schema = schema;
    m_schema_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_schema_Set() const{
    return m_schema_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_schema_Valid() const{
    return m_schema_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getSystem() const {
    return m_system;
}
void OAIGoogleCloudDataplexV1Entity::setSystem(const QString &system) {
    m_system = system;
    m_system_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_system_Set() const{
    return m_system_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_system_Valid() const{
    return m_system_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getType() const {
    return m_type;
}
void OAIGoogleCloudDataplexV1Entity::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getUid() const {
    return m_uid;
}
void OAIGoogleCloudDataplexV1Entity::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_uid_Valid() const{
    return m_uid_isValid;
}

QString OAIGoogleCloudDataplexV1Entity::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudDataplexV1Entity::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1Entity::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudDataplexV1Entity::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudDataplexV1Entity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_catalog_entry_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compatibility.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_path_pattern_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_format.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1Entity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
