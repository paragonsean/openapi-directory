/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::~OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork() {}

void OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::initializeModel() {

    m_network_isSet = false;
    m_network_isValid = false;

    m_network_tags_isSet = false;
    m_network_tags_isValid = false;

    m_sub_network_isSet = false;
    m_sub_network_isValid = false;
}

void OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::fromJsonObject(QJsonObject json) {

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_network_tags_isValid = ::OpenAPI::fromJsonValue(m_network_tags, json[QString("networkTags")]);
    m_network_tags_isSet = !json[QString("networkTags")].isNull() && m_network_tags_isValid;

    m_sub_network_isValid = ::OpenAPI::fromJsonValue(m_sub_network, json[QString("subNetwork")]);
    m_sub_network_isSet = !json[QString("subNetwork")].isNull() && m_sub_network_isValid;
}

QString OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::asJsonObject() const {
    QJsonObject obj;
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_network_tags.size() > 0) {
        obj.insert(QString("networkTags"), ::OpenAPI::toJsonValue(m_network_tags));
    }
    if (m_sub_network_isSet) {
        obj.insert(QString("subNetwork"), ::OpenAPI::toJsonValue(m_sub_network));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::getNetwork() const {
    return m_network;
}
void OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::is_network_Set() const{
    return m_network_isSet;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::is_network_Valid() const{
    return m_network_isValid;
}

QList<QString> OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::getNetworkTags() const {
    return m_network_tags;
}
void OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::setNetworkTags(const QList<QString> &network_tags) {
    m_network_tags = network_tags;
    m_network_tags_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::is_network_tags_Set() const{
    return m_network_tags_isSet;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::is_network_tags_Valid() const{
    return m_network_tags_isValid;
}

QString OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::getSubNetwork() const {
    return m_sub_network;
}
void OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::setSubNetwork(const QString &sub_network) {
    m_sub_network = sub_network;
    m_sub_network_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::is_sub_network_Set() const{
    return m_sub_network_isSet;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::is_sub_network_Valid() const{
    return m_sub_network_isValid;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_network_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
