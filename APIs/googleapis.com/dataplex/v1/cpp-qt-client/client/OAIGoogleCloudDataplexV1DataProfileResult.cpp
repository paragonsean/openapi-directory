/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1DataProfileResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1DataProfileResult::OAIGoogleCloudDataplexV1DataProfileResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1DataProfileResult::OAIGoogleCloudDataplexV1DataProfileResult() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1DataProfileResult::~OAIGoogleCloudDataplexV1DataProfileResult() {}

void OAIGoogleCloudDataplexV1DataProfileResult::initializeModel() {

    m_post_scan_actions_result_isSet = false;
    m_post_scan_actions_result_isValid = false;

    m_profile_isSet = false;
    m_profile_isValid = false;

    m_row_count_isSet = false;
    m_row_count_isValid = false;

    m_scanned_data_isSet = false;
    m_scanned_data_isValid = false;
}

void OAIGoogleCloudDataplexV1DataProfileResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1DataProfileResult::fromJsonObject(QJsonObject json) {

    m_post_scan_actions_result_isValid = ::OpenAPI::fromJsonValue(m_post_scan_actions_result, json[QString("postScanActionsResult")]);
    m_post_scan_actions_result_isSet = !json[QString("postScanActionsResult")].isNull() && m_post_scan_actions_result_isValid;

    m_profile_isValid = ::OpenAPI::fromJsonValue(m_profile, json[QString("profile")]);
    m_profile_isSet = !json[QString("profile")].isNull() && m_profile_isValid;

    m_row_count_isValid = ::OpenAPI::fromJsonValue(m_row_count, json[QString("rowCount")]);
    m_row_count_isSet = !json[QString("rowCount")].isNull() && m_row_count_isValid;

    m_scanned_data_isValid = ::OpenAPI::fromJsonValue(m_scanned_data, json[QString("scannedData")]);
    m_scanned_data_isSet = !json[QString("scannedData")].isNull() && m_scanned_data_isValid;
}

QString OAIGoogleCloudDataplexV1DataProfileResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1DataProfileResult::asJsonObject() const {
    QJsonObject obj;
    if (m_post_scan_actions_result.isSet()) {
        obj.insert(QString("postScanActionsResult"), ::OpenAPI::toJsonValue(m_post_scan_actions_result));
    }
    if (m_profile.isSet()) {
        obj.insert(QString("profile"), ::OpenAPI::toJsonValue(m_profile));
    }
    if (m_row_count_isSet) {
        obj.insert(QString("rowCount"), ::OpenAPI::toJsonValue(m_row_count));
    }
    if (m_scanned_data.isSet()) {
        obj.insert(QString("scannedData"), ::OpenAPI::toJsonValue(m_scanned_data));
    }
    return obj;
}

OAIGoogleCloudDataplexV1DataProfileResultPostScanActionsResult OAIGoogleCloudDataplexV1DataProfileResult::getPostScanActionsResult() const {
    return m_post_scan_actions_result;
}
void OAIGoogleCloudDataplexV1DataProfileResult::setPostScanActionsResult(const OAIGoogleCloudDataplexV1DataProfileResultPostScanActionsResult &post_scan_actions_result) {
    m_post_scan_actions_result = post_scan_actions_result;
    m_post_scan_actions_result_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::is_post_scan_actions_result_Set() const{
    return m_post_scan_actions_result_isSet;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::is_post_scan_actions_result_Valid() const{
    return m_post_scan_actions_result_isValid;
}

OAIGoogleCloudDataplexV1DataProfileResultProfile OAIGoogleCloudDataplexV1DataProfileResult::getProfile() const {
    return m_profile;
}
void OAIGoogleCloudDataplexV1DataProfileResult::setProfile(const OAIGoogleCloudDataplexV1DataProfileResultProfile &profile) {
    m_profile = profile;
    m_profile_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::is_profile_Set() const{
    return m_profile_isSet;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::is_profile_Valid() const{
    return m_profile_isValid;
}

QString OAIGoogleCloudDataplexV1DataProfileResult::getRowCount() const {
    return m_row_count;
}
void OAIGoogleCloudDataplexV1DataProfileResult::setRowCount(const QString &row_count) {
    m_row_count = row_count;
    m_row_count_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::is_row_count_Set() const{
    return m_row_count_isSet;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::is_row_count_Valid() const{
    return m_row_count_isValid;
}

OAIGoogleCloudDataplexV1ScannedData OAIGoogleCloudDataplexV1DataProfileResult::getScannedData() const {
    return m_scanned_data;
}
void OAIGoogleCloudDataplexV1DataProfileResult::setScannedData(const OAIGoogleCloudDataplexV1ScannedData &scanned_data) {
    m_scanned_data = scanned_data;
    m_scanned_data_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::is_scanned_data_Set() const{
    return m_scanned_data_isSet;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::is_scanned_data_Valid() const{
    return m_scanned_data_isValid;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_post_scan_actions_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scanned_data.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1DataProfileResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
