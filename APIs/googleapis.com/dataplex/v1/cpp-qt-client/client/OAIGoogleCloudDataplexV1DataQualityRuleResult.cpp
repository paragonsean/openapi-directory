/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1DataQualityRuleResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1DataQualityRuleResult::OAIGoogleCloudDataplexV1DataQualityRuleResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1DataQualityRuleResult::OAIGoogleCloudDataplexV1DataQualityRuleResult() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1DataQualityRuleResult::~OAIGoogleCloudDataplexV1DataQualityRuleResult() {}

void OAIGoogleCloudDataplexV1DataQualityRuleResult::initializeModel() {

    m_evaluated_count_isSet = false;
    m_evaluated_count_isValid = false;

    m_failing_rows_query_isSet = false;
    m_failing_rows_query_isValid = false;

    m_null_count_isSet = false;
    m_null_count_isValid = false;

    m_pass_ratio_isSet = false;
    m_pass_ratio_isValid = false;

    m_passed_isSet = false;
    m_passed_isValid = false;

    m_passed_count_isSet = false;
    m_passed_count_isValid = false;

    m_rule_isSet = false;
    m_rule_isValid = false;
}

void OAIGoogleCloudDataplexV1DataQualityRuleResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1DataQualityRuleResult::fromJsonObject(QJsonObject json) {

    m_evaluated_count_isValid = ::OpenAPI::fromJsonValue(m_evaluated_count, json[QString("evaluatedCount")]);
    m_evaluated_count_isSet = !json[QString("evaluatedCount")].isNull() && m_evaluated_count_isValid;

    m_failing_rows_query_isValid = ::OpenAPI::fromJsonValue(m_failing_rows_query, json[QString("failingRowsQuery")]);
    m_failing_rows_query_isSet = !json[QString("failingRowsQuery")].isNull() && m_failing_rows_query_isValid;

    m_null_count_isValid = ::OpenAPI::fromJsonValue(m_null_count, json[QString("nullCount")]);
    m_null_count_isSet = !json[QString("nullCount")].isNull() && m_null_count_isValid;

    m_pass_ratio_isValid = ::OpenAPI::fromJsonValue(m_pass_ratio, json[QString("passRatio")]);
    m_pass_ratio_isSet = !json[QString("passRatio")].isNull() && m_pass_ratio_isValid;

    m_passed_isValid = ::OpenAPI::fromJsonValue(m_passed, json[QString("passed")]);
    m_passed_isSet = !json[QString("passed")].isNull() && m_passed_isValid;

    m_passed_count_isValid = ::OpenAPI::fromJsonValue(m_passed_count, json[QString("passedCount")]);
    m_passed_count_isSet = !json[QString("passedCount")].isNull() && m_passed_count_isValid;

    m_rule_isValid = ::OpenAPI::fromJsonValue(m_rule, json[QString("rule")]);
    m_rule_isSet = !json[QString("rule")].isNull() && m_rule_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityRuleResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1DataQualityRuleResult::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluated_count_isSet) {
        obj.insert(QString("evaluatedCount"), ::OpenAPI::toJsonValue(m_evaluated_count));
    }
    if (m_failing_rows_query_isSet) {
        obj.insert(QString("failingRowsQuery"), ::OpenAPI::toJsonValue(m_failing_rows_query));
    }
    if (m_null_count_isSet) {
        obj.insert(QString("nullCount"), ::OpenAPI::toJsonValue(m_null_count));
    }
    if (m_pass_ratio_isSet) {
        obj.insert(QString("passRatio"), ::OpenAPI::toJsonValue(m_pass_ratio));
    }
    if (m_passed_isSet) {
        obj.insert(QString("passed"), ::OpenAPI::toJsonValue(m_passed));
    }
    if (m_passed_count_isSet) {
        obj.insert(QString("passedCount"), ::OpenAPI::toJsonValue(m_passed_count));
    }
    if (m_rule.isSet()) {
        obj.insert(QString("rule"), ::OpenAPI::toJsonValue(m_rule));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1DataQualityRuleResult::getEvaluatedCount() const {
    return m_evaluated_count;
}
void OAIGoogleCloudDataplexV1DataQualityRuleResult::setEvaluatedCount(const QString &evaluated_count) {
    m_evaluated_count = evaluated_count;
    m_evaluated_count_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_evaluated_count_Set() const{
    return m_evaluated_count_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_evaluated_count_Valid() const{
    return m_evaluated_count_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityRuleResult::getFailingRowsQuery() const {
    return m_failing_rows_query;
}
void OAIGoogleCloudDataplexV1DataQualityRuleResult::setFailingRowsQuery(const QString &failing_rows_query) {
    m_failing_rows_query = failing_rows_query;
    m_failing_rows_query_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_failing_rows_query_Set() const{
    return m_failing_rows_query_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_failing_rows_query_Valid() const{
    return m_failing_rows_query_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityRuleResult::getNullCount() const {
    return m_null_count;
}
void OAIGoogleCloudDataplexV1DataQualityRuleResult::setNullCount(const QString &null_count) {
    m_null_count = null_count;
    m_null_count_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_null_count_Set() const{
    return m_null_count_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_null_count_Valid() const{
    return m_null_count_isValid;
}

double OAIGoogleCloudDataplexV1DataQualityRuleResult::getPassRatio() const {
    return m_pass_ratio;
}
void OAIGoogleCloudDataplexV1DataQualityRuleResult::setPassRatio(const double &pass_ratio) {
    m_pass_ratio = pass_ratio;
    m_pass_ratio_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_pass_ratio_Set() const{
    return m_pass_ratio_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_pass_ratio_Valid() const{
    return m_pass_ratio_isValid;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::isPassed() const {
    return m_passed;
}
void OAIGoogleCloudDataplexV1DataQualityRuleResult::setPassed(const bool &passed) {
    m_passed = passed;
    m_passed_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_passed_Set() const{
    return m_passed_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_passed_Valid() const{
    return m_passed_isValid;
}

QString OAIGoogleCloudDataplexV1DataQualityRuleResult::getPassedCount() const {
    return m_passed_count;
}
void OAIGoogleCloudDataplexV1DataQualityRuleResult::setPassedCount(const QString &passed_count) {
    m_passed_count = passed_count;
    m_passed_count_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_passed_count_Set() const{
    return m_passed_count_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_passed_count_Valid() const{
    return m_passed_count_isValid;
}

OAIGoogleCloudDataplexV1DataQualityRule OAIGoogleCloudDataplexV1DataQualityRuleResult::getRule() const {
    return m_rule;
}
void OAIGoogleCloudDataplexV1DataQualityRuleResult::setRule(const OAIGoogleCloudDataplexV1DataQualityRule &rule) {
    m_rule = rule;
    m_rule_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_rule_Set() const{
    return m_rule_isSet;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::is_rule_Valid() const{
    return m_rule_isValid;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluated_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failing_rows_query_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_null_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pass_ratio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_passed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_passed_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1DataQualityRuleResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
