/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1TaskTriggerSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1TaskTriggerSpec::OAIGoogleCloudDataplexV1TaskTriggerSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1TaskTriggerSpec::OAIGoogleCloudDataplexV1TaskTriggerSpec() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1TaskTriggerSpec::~OAIGoogleCloudDataplexV1TaskTriggerSpec() {}

void OAIGoogleCloudDataplexV1TaskTriggerSpec::initializeModel() {

    m_disabled_isSet = false;
    m_disabled_isValid = false;

    m_max_retries_isSet = false;
    m_max_retries_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudDataplexV1TaskTriggerSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1TaskTriggerSpec::fromJsonObject(QJsonObject json) {

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("disabled")]);
    m_disabled_isSet = !json[QString("disabled")].isNull() && m_disabled_isValid;

    m_max_retries_isValid = ::OpenAPI::fromJsonValue(m_max_retries, json[QString("maxRetries")]);
    m_max_retries_isSet = !json[QString("maxRetries")].isNull() && m_max_retries_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudDataplexV1TaskTriggerSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1TaskTriggerSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_isSet) {
        obj.insert(QString("disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    if (m_max_retries_isSet) {
        obj.insert(QString("maxRetries"), ::OpenAPI::toJsonValue(m_max_retries));
    }
    if (m_schedule_isSet) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::isDisabled() const {
    return m_disabled;
}
void OAIGoogleCloudDataplexV1TaskTriggerSpec::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_disabled_Valid() const{
    return m_disabled_isValid;
}

qint32 OAIGoogleCloudDataplexV1TaskTriggerSpec::getMaxRetries() const {
    return m_max_retries;
}
void OAIGoogleCloudDataplexV1TaskTriggerSpec::setMaxRetries(const qint32 &max_retries) {
    m_max_retries = max_retries;
    m_max_retries_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_max_retries_Set() const{
    return m_max_retries_isSet;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_max_retries_Valid() const{
    return m_max_retries_isValid;
}

QString OAIGoogleCloudDataplexV1TaskTriggerSpec::getSchedule() const {
    return m_schedule;
}
void OAIGoogleCloudDataplexV1TaskTriggerSpec::setSchedule(const QString &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_schedule_Valid() const{
    return m_schedule_isValid;
}

QString OAIGoogleCloudDataplexV1TaskTriggerSpec::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudDataplexV1TaskTriggerSpec::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudDataplexV1TaskTriggerSpec::getType() const {
    return m_type;
}
void OAIGoogleCloudDataplexV1TaskTriggerSpec::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_retries_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1TaskTriggerSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
