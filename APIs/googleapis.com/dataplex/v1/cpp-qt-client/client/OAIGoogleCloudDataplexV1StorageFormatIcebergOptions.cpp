/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1StorageFormatIcebergOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::OAIGoogleCloudDataplexV1StorageFormatIcebergOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::OAIGoogleCloudDataplexV1StorageFormatIcebergOptions() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::~OAIGoogleCloudDataplexV1StorageFormatIcebergOptions() {}

void OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::initializeModel() {

    m_metadata_location_isSet = false;
    m_metadata_location_isValid = false;
}

void OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::fromJsonObject(QJsonObject json) {

    m_metadata_location_isValid = ::OpenAPI::fromJsonValue(m_metadata_location, json[QString("metadataLocation")]);
    m_metadata_location_isSet = !json[QString("metadataLocation")].isNull() && m_metadata_location_isValid;
}

QString OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata_location_isSet) {
        obj.insert(QString("metadataLocation"), ::OpenAPI::toJsonValue(m_metadata_location));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::getMetadataLocation() const {
    return m_metadata_location;
}
void OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::setMetadataLocation(const QString &metadata_location) {
    m_metadata_location = metadata_location;
    m_metadata_location_isSet = true;
}

bool OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::is_metadata_location_Set() const{
    return m_metadata_location_isSet;
}

bool OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::is_metadata_location_Valid() const{
    return m_metadata_location_isValid;
}

bool OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1StorageFormatIcebergOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
