/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1TaskInfrastructureSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1TaskInfrastructureSpec::OAIGoogleCloudDataplexV1TaskInfrastructureSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1TaskInfrastructureSpec::OAIGoogleCloudDataplexV1TaskInfrastructureSpec() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1TaskInfrastructureSpec::~OAIGoogleCloudDataplexV1TaskInfrastructureSpec() {}

void OAIGoogleCloudDataplexV1TaskInfrastructureSpec::initializeModel() {

    m_batch_isSet = false;
    m_batch_isValid = false;

    m_container_image_isSet = false;
    m_container_image_isValid = false;

    m_vpc_network_isSet = false;
    m_vpc_network_isValid = false;
}

void OAIGoogleCloudDataplexV1TaskInfrastructureSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1TaskInfrastructureSpec::fromJsonObject(QJsonObject json) {

    m_batch_isValid = ::OpenAPI::fromJsonValue(m_batch, json[QString("batch")]);
    m_batch_isSet = !json[QString("batch")].isNull() && m_batch_isValid;

    m_container_image_isValid = ::OpenAPI::fromJsonValue(m_container_image, json[QString("containerImage")]);
    m_container_image_isSet = !json[QString("containerImage")].isNull() && m_container_image_isValid;

    m_vpc_network_isValid = ::OpenAPI::fromJsonValue(m_vpc_network, json[QString("vpcNetwork")]);
    m_vpc_network_isSet = !json[QString("vpcNetwork")].isNull() && m_vpc_network_isValid;
}

QString OAIGoogleCloudDataplexV1TaskInfrastructureSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1TaskInfrastructureSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_batch.isSet()) {
        obj.insert(QString("batch"), ::OpenAPI::toJsonValue(m_batch));
    }
    if (m_container_image.isSet()) {
        obj.insert(QString("containerImage"), ::OpenAPI::toJsonValue(m_container_image));
    }
    if (m_vpc_network.isSet()) {
        obj.insert(QString("vpcNetwork"), ::OpenAPI::toJsonValue(m_vpc_network));
    }
    return obj;
}

OAIGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources OAIGoogleCloudDataplexV1TaskInfrastructureSpec::getBatch() const {
    return m_batch;
}
void OAIGoogleCloudDataplexV1TaskInfrastructureSpec::setBatch(const OAIGoogleCloudDataplexV1TaskInfrastructureSpecBatchComputeResources &batch) {
    m_batch = batch;
    m_batch_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpec::is_batch_Set() const{
    return m_batch_isSet;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpec::is_batch_Valid() const{
    return m_batch_isValid;
}

OAIGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime OAIGoogleCloudDataplexV1TaskInfrastructureSpec::getContainerImage() const {
    return m_container_image;
}
void OAIGoogleCloudDataplexV1TaskInfrastructureSpec::setContainerImage(const OAIGoogleCloudDataplexV1TaskInfrastructureSpecContainerImageRuntime &container_image) {
    m_container_image = container_image;
    m_container_image_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpec::is_container_image_Set() const{
    return m_container_image_isSet;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpec::is_container_image_Valid() const{
    return m_container_image_isValid;
}

OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork OAIGoogleCloudDataplexV1TaskInfrastructureSpec::getVpcNetwork() const {
    return m_vpc_network;
}
void OAIGoogleCloudDataplexV1TaskInfrastructureSpec::setVpcNetwork(const OAIGoogleCloudDataplexV1TaskInfrastructureSpecVpcNetwork &vpc_network) {
    m_vpc_network = vpc_network;
    m_vpc_network_isSet = true;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpec::is_vpc_network_Set() const{
    return m_vpc_network_isSet;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpec::is_vpc_network_Valid() const{
    return m_vpc_network_isValid;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vpc_network.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1TaskInfrastructureSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
