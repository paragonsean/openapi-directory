/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1EnvironmentEndpoints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1EnvironmentEndpoints::OAIGoogleCloudDataplexV1EnvironmentEndpoints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1EnvironmentEndpoints::OAIGoogleCloudDataplexV1EnvironmentEndpoints() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1EnvironmentEndpoints::~OAIGoogleCloudDataplexV1EnvironmentEndpoints() {}

void OAIGoogleCloudDataplexV1EnvironmentEndpoints::initializeModel() {

    m_notebooks_isSet = false;
    m_notebooks_isValid = false;

    m_sql_isSet = false;
    m_sql_isValid = false;
}

void OAIGoogleCloudDataplexV1EnvironmentEndpoints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1EnvironmentEndpoints::fromJsonObject(QJsonObject json) {

    m_notebooks_isValid = ::OpenAPI::fromJsonValue(m_notebooks, json[QString("notebooks")]);
    m_notebooks_isSet = !json[QString("notebooks")].isNull() && m_notebooks_isValid;

    m_sql_isValid = ::OpenAPI::fromJsonValue(m_sql, json[QString("sql")]);
    m_sql_isSet = !json[QString("sql")].isNull() && m_sql_isValid;
}

QString OAIGoogleCloudDataplexV1EnvironmentEndpoints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1EnvironmentEndpoints::asJsonObject() const {
    QJsonObject obj;
    if (m_notebooks_isSet) {
        obj.insert(QString("notebooks"), ::OpenAPI::toJsonValue(m_notebooks));
    }
    if (m_sql_isSet) {
        obj.insert(QString("sql"), ::OpenAPI::toJsonValue(m_sql));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1EnvironmentEndpoints::getNotebooks() const {
    return m_notebooks;
}
void OAIGoogleCloudDataplexV1EnvironmentEndpoints::setNotebooks(const QString &notebooks) {
    m_notebooks = notebooks;
    m_notebooks_isSet = true;
}

bool OAIGoogleCloudDataplexV1EnvironmentEndpoints::is_notebooks_Set() const{
    return m_notebooks_isSet;
}

bool OAIGoogleCloudDataplexV1EnvironmentEndpoints::is_notebooks_Valid() const{
    return m_notebooks_isValid;
}

QString OAIGoogleCloudDataplexV1EnvironmentEndpoints::getSql() const {
    return m_sql;
}
void OAIGoogleCloudDataplexV1EnvironmentEndpoints::setSql(const QString &sql) {
    m_sql = sql;
    m_sql_isSet = true;
}

bool OAIGoogleCloudDataplexV1EnvironmentEndpoints::is_sql_Set() const{
    return m_sql_isSet;
}

bool OAIGoogleCloudDataplexV1EnvironmentEndpoints::is_sql_Valid() const{
    return m_sql_isValid;
}

bool OAIGoogleCloudDataplexV1EnvironmentEndpoints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_notebooks_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sql_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1EnvironmentEndpoints::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
