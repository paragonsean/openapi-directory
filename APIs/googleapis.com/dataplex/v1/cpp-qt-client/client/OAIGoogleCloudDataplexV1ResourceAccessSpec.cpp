/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1ResourceAccessSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1ResourceAccessSpec::OAIGoogleCloudDataplexV1ResourceAccessSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1ResourceAccessSpec::OAIGoogleCloudDataplexV1ResourceAccessSpec() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1ResourceAccessSpec::~OAIGoogleCloudDataplexV1ResourceAccessSpec() {}

void OAIGoogleCloudDataplexV1ResourceAccessSpec::initializeModel() {

    m_owners_isSet = false;
    m_owners_isValid = false;

    m_readers_isSet = false;
    m_readers_isValid = false;

    m_writers_isSet = false;
    m_writers_isValid = false;
}

void OAIGoogleCloudDataplexV1ResourceAccessSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1ResourceAccessSpec::fromJsonObject(QJsonObject json) {

    m_owners_isValid = ::OpenAPI::fromJsonValue(m_owners, json[QString("owners")]);
    m_owners_isSet = !json[QString("owners")].isNull() && m_owners_isValid;

    m_readers_isValid = ::OpenAPI::fromJsonValue(m_readers, json[QString("readers")]);
    m_readers_isSet = !json[QString("readers")].isNull() && m_readers_isValid;

    m_writers_isValid = ::OpenAPI::fromJsonValue(m_writers, json[QString("writers")]);
    m_writers_isSet = !json[QString("writers")].isNull() && m_writers_isValid;
}

QString OAIGoogleCloudDataplexV1ResourceAccessSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1ResourceAccessSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_owners.size() > 0) {
        obj.insert(QString("owners"), ::OpenAPI::toJsonValue(m_owners));
    }
    if (m_readers.size() > 0) {
        obj.insert(QString("readers"), ::OpenAPI::toJsonValue(m_readers));
    }
    if (m_writers.size() > 0) {
        obj.insert(QString("writers"), ::OpenAPI::toJsonValue(m_writers));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDataplexV1ResourceAccessSpec::getOwners() const {
    return m_owners;
}
void OAIGoogleCloudDataplexV1ResourceAccessSpec::setOwners(const QList<QString> &owners) {
    m_owners = owners;
    m_owners_isSet = true;
}

bool OAIGoogleCloudDataplexV1ResourceAccessSpec::is_owners_Set() const{
    return m_owners_isSet;
}

bool OAIGoogleCloudDataplexV1ResourceAccessSpec::is_owners_Valid() const{
    return m_owners_isValid;
}

QList<QString> OAIGoogleCloudDataplexV1ResourceAccessSpec::getReaders() const {
    return m_readers;
}
void OAIGoogleCloudDataplexV1ResourceAccessSpec::setReaders(const QList<QString> &readers) {
    m_readers = readers;
    m_readers_isSet = true;
}

bool OAIGoogleCloudDataplexV1ResourceAccessSpec::is_readers_Set() const{
    return m_readers_isSet;
}

bool OAIGoogleCloudDataplexV1ResourceAccessSpec::is_readers_Valid() const{
    return m_readers_isValid;
}

QList<QString> OAIGoogleCloudDataplexV1ResourceAccessSpec::getWriters() const {
    return m_writers;
}
void OAIGoogleCloudDataplexV1ResourceAccessSpec::setWriters(const QList<QString> &writers) {
    m_writers = writers;
    m_writers_isSet = true;
}

bool OAIGoogleCloudDataplexV1ResourceAccessSpec::is_writers_Set() const{
    return m_writers_isSet;
}

bool OAIGoogleCloudDataplexV1ResourceAccessSpec::is_writers_Valid() const{
    return m_writers_isValid;
}

bool OAIGoogleCloudDataplexV1ResourceAccessSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_owners.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_readers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_writers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1ResourceAccessSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
