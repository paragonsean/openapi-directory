/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1DataScanEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1DataScanEvent::OAIGoogleCloudDataplexV1DataScanEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1DataScanEvent::OAIGoogleCloudDataplexV1DataScanEvent() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1DataScanEvent::~OAIGoogleCloudDataplexV1DataScanEvent() {}

void OAIGoogleCloudDataplexV1DataScanEvent::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_profile_isSet = false;
    m_data_profile_isValid = false;

    m_data_profile_configs_isSet = false;
    m_data_profile_configs_isValid = false;

    m_data_quality_isSet = false;
    m_data_quality_isValid = false;

    m_data_quality_configs_isSet = false;
    m_data_quality_configs_isValid = false;

    m_data_source_isSet = false;
    m_data_source_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_post_scan_actions_result_isSet = false;
    m_post_scan_actions_result_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;

    m_spec_version_isSet = false;
    m_spec_version_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_trigger_isSet = false;
    m_trigger_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudDataplexV1DataScanEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1DataScanEvent::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_profile_isValid = ::OpenAPI::fromJsonValue(m_data_profile, json[QString("dataProfile")]);
    m_data_profile_isSet = !json[QString("dataProfile")].isNull() && m_data_profile_isValid;

    m_data_profile_configs_isValid = ::OpenAPI::fromJsonValue(m_data_profile_configs, json[QString("dataProfileConfigs")]);
    m_data_profile_configs_isSet = !json[QString("dataProfileConfigs")].isNull() && m_data_profile_configs_isValid;

    m_data_quality_isValid = ::OpenAPI::fromJsonValue(m_data_quality, json[QString("dataQuality")]);
    m_data_quality_isSet = !json[QString("dataQuality")].isNull() && m_data_quality_isValid;

    m_data_quality_configs_isValid = ::OpenAPI::fromJsonValue(m_data_quality_configs, json[QString("dataQualityConfigs")]);
    m_data_quality_configs_isSet = !json[QString("dataQualityConfigs")].isNull() && m_data_quality_configs_isValid;

    m_data_source_isValid = ::OpenAPI::fromJsonValue(m_data_source, json[QString("dataSource")]);
    m_data_source_isSet = !json[QString("dataSource")].isNull() && m_data_source_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_post_scan_actions_result_isValid = ::OpenAPI::fromJsonValue(m_post_scan_actions_result, json[QString("postScanActionsResult")]);
    m_post_scan_actions_result_isSet = !json[QString("postScanActionsResult")].isNull() && m_post_scan_actions_result_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;

    m_spec_version_isValid = ::OpenAPI::fromJsonValue(m_spec_version, json[QString("specVersion")]);
    m_spec_version_isSet = !json[QString("specVersion")].isNull() && m_spec_version_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_trigger_isValid = ::OpenAPI::fromJsonValue(m_trigger, json[QString("trigger")]);
    m_trigger_isSet = !json[QString("trigger")].isNull() && m_trigger_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1DataScanEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_profile.isSet()) {
        obj.insert(QString("dataProfile"), ::OpenAPI::toJsonValue(m_data_profile));
    }
    if (m_data_profile_configs.isSet()) {
        obj.insert(QString("dataProfileConfigs"), ::OpenAPI::toJsonValue(m_data_profile_configs));
    }
    if (m_data_quality.isSet()) {
        obj.insert(QString("dataQuality"), ::OpenAPI::toJsonValue(m_data_quality));
    }
    if (m_data_quality_configs.isSet()) {
        obj.insert(QString("dataQualityConfigs"), ::OpenAPI::toJsonValue(m_data_quality_configs));
    }
    if (m_data_source_isSet) {
        obj.insert(QString("dataSource"), ::OpenAPI::toJsonValue(m_data_source));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_post_scan_actions_result.isSet()) {
        obj.insert(QString("postScanActionsResult"), ::OpenAPI::toJsonValue(m_post_scan_actions_result));
    }
    if (m_scope_isSet) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    if (m_spec_version_isSet) {
        obj.insert(QString("specVersion"), ::OpenAPI::toJsonValue(m_spec_version));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_trigger_isSet) {
        obj.insert(QString("trigger"), ::OpenAPI::toJsonValue(m_trigger));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudDataplexV1DataScanEventDataProfileResult OAIGoogleCloudDataplexV1DataScanEvent::getDataProfile() const {
    return m_data_profile;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setDataProfile(const OAIGoogleCloudDataplexV1DataScanEventDataProfileResult &data_profile) {
    m_data_profile = data_profile;
    m_data_profile_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_profile_Set() const{
    return m_data_profile_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_profile_Valid() const{
    return m_data_profile_isValid;
}

OAIGoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs OAIGoogleCloudDataplexV1DataScanEvent::getDataProfileConfigs() const {
    return m_data_profile_configs;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setDataProfileConfigs(const OAIGoogleCloudDataplexV1DataScanEventDataProfileAppliedConfigs &data_profile_configs) {
    m_data_profile_configs = data_profile_configs;
    m_data_profile_configs_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_profile_configs_Set() const{
    return m_data_profile_configs_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_profile_configs_Valid() const{
    return m_data_profile_configs_isValid;
}

OAIGoogleCloudDataplexV1DataScanEventDataQualityResult OAIGoogleCloudDataplexV1DataScanEvent::getDataQuality() const {
    return m_data_quality;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setDataQuality(const OAIGoogleCloudDataplexV1DataScanEventDataQualityResult &data_quality) {
    m_data_quality = data_quality;
    m_data_quality_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_quality_Set() const{
    return m_data_quality_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_quality_Valid() const{
    return m_data_quality_isValid;
}

OAIGoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs OAIGoogleCloudDataplexV1DataScanEvent::getDataQualityConfigs() const {
    return m_data_quality_configs;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setDataQualityConfigs(const OAIGoogleCloudDataplexV1DataScanEventDataQualityAppliedConfigs &data_quality_configs) {
    m_data_quality_configs = data_quality_configs;
    m_data_quality_configs_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_quality_configs_Set() const{
    return m_data_quality_configs_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_quality_configs_Valid() const{
    return m_data_quality_configs_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getDataSource() const {
    return m_data_source;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setDataSource(const QString &data_source) {
    m_data_source = data_source;
    m_data_source_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_source_Set() const{
    return m_data_source_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_data_source_Valid() const{
    return m_data_source_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getJobId() const {
    return m_job_id;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getMessage() const {
    return m_message;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_message_Valid() const{
    return m_message_isValid;
}

OAIGoogleCloudDataplexV1DataScanEventPostScanActionsResult OAIGoogleCloudDataplexV1DataScanEvent::getPostScanActionsResult() const {
    return m_post_scan_actions_result;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setPostScanActionsResult(const OAIGoogleCloudDataplexV1DataScanEventPostScanActionsResult &post_scan_actions_result) {
    m_post_scan_actions_result = post_scan_actions_result;
    m_post_scan_actions_result_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_post_scan_actions_result_Set() const{
    return m_post_scan_actions_result_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_post_scan_actions_result_Valid() const{
    return m_post_scan_actions_result_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getScope() const {
    return m_scope;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setScope(const QString &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_scope_Valid() const{
    return m_scope_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getSpecVersion() const {
    return m_spec_version;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setSpecVersion(const QString &spec_version) {
    m_spec_version = spec_version;
    m_spec_version_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_spec_version_Set() const{
    return m_spec_version_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_spec_version_Valid() const{
    return m_spec_version_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getState() const {
    return m_state;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getTrigger() const {
    return m_trigger;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setTrigger(const QString &trigger) {
    m_trigger = trigger;
    m_trigger_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_trigger_Set() const{
    return m_trigger_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_trigger_Valid() const{
    return m_trigger_isValid;
}

QString OAIGoogleCloudDataplexV1DataScanEvent::getType() const {
    return m_type;
}
void OAIGoogleCloudDataplexV1DataScanEvent::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_profile_configs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_quality.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_quality_configs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_scan_actions_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trigger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1DataScanEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
