/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDataplexV1JobEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDataplexV1JobEvent::OAIGoogleCloudDataplexV1JobEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDataplexV1JobEvent::OAIGoogleCloudDataplexV1JobEvent() {
    this->initializeModel();
}

OAIGoogleCloudDataplexV1JobEvent::~OAIGoogleCloudDataplexV1JobEvent() {}

void OAIGoogleCloudDataplexV1JobEvent::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_execution_trigger_isSet = false;
    m_execution_trigger_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_retries_isSet = false;
    m_retries_isValid = false;

    m_service_isSet = false;
    m_service_isValid = false;

    m_service_job_isSet = false;
    m_service_job_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudDataplexV1JobEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDataplexV1JobEvent::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_execution_trigger_isValid = ::OpenAPI::fromJsonValue(m_execution_trigger, json[QString("executionTrigger")]);
    m_execution_trigger_isSet = !json[QString("executionTrigger")].isNull() && m_execution_trigger_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_retries_isValid = ::OpenAPI::fromJsonValue(m_retries, json[QString("retries")]);
    m_retries_isSet = !json[QString("retries")].isNull() && m_retries_isValid;

    m_service_isValid = ::OpenAPI::fromJsonValue(m_service, json[QString("service")]);
    m_service_isSet = !json[QString("service")].isNull() && m_service_isValid;

    m_service_job_isValid = ::OpenAPI::fromJsonValue(m_service_job, json[QString("serviceJob")]);
    m_service_job_isSet = !json[QString("serviceJob")].isNull() && m_service_job_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudDataplexV1JobEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDataplexV1JobEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_execution_trigger_isSet) {
        obj.insert(QString("executionTrigger"), ::OpenAPI::toJsonValue(m_execution_trigger));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_retries_isSet) {
        obj.insert(QString("retries"), ::OpenAPI::toJsonValue(m_retries));
    }
    if (m_service_isSet) {
        obj.insert(QString("service"), ::OpenAPI::toJsonValue(m_service));
    }
    if (m_service_job_isSet) {
        obj.insert(QString("serviceJob"), ::OpenAPI::toJsonValue(m_service_job));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGoogleCloudDataplexV1JobEvent::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudDataplexV1JobEvent::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudDataplexV1JobEvent::getExecutionTrigger() const {
    return m_execution_trigger;
}
void OAIGoogleCloudDataplexV1JobEvent::setExecutionTrigger(const QString &execution_trigger) {
    m_execution_trigger = execution_trigger;
    m_execution_trigger_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_execution_trigger_Set() const{
    return m_execution_trigger_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_execution_trigger_Valid() const{
    return m_execution_trigger_isValid;
}

QString OAIGoogleCloudDataplexV1JobEvent::getJobId() const {
    return m_job_id;
}
void OAIGoogleCloudDataplexV1JobEvent::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIGoogleCloudDataplexV1JobEvent::getMessage() const {
    return m_message;
}
void OAIGoogleCloudDataplexV1JobEvent::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_message_Valid() const{
    return m_message_isValid;
}

qint32 OAIGoogleCloudDataplexV1JobEvent::getRetries() const {
    return m_retries;
}
void OAIGoogleCloudDataplexV1JobEvent::setRetries(const qint32 &retries) {
    m_retries = retries;
    m_retries_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_retries_Set() const{
    return m_retries_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_retries_Valid() const{
    return m_retries_isValid;
}

QString OAIGoogleCloudDataplexV1JobEvent::getService() const {
    return m_service;
}
void OAIGoogleCloudDataplexV1JobEvent::setService(const QString &service) {
    m_service = service;
    m_service_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_service_Set() const{
    return m_service_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_service_Valid() const{
    return m_service_isValid;
}

QString OAIGoogleCloudDataplexV1JobEvent::getServiceJob() const {
    return m_service_job;
}
void OAIGoogleCloudDataplexV1JobEvent::setServiceJob(const QString &service_job) {
    m_service_job = service_job;
    m_service_job_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_service_job_Set() const{
    return m_service_job_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_service_job_Valid() const{
    return m_service_job_isValid;
}

QString OAIGoogleCloudDataplexV1JobEvent::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudDataplexV1JobEvent::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudDataplexV1JobEvent::getState() const {
    return m_state;
}
void OAIGoogleCloudDataplexV1JobEvent::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudDataplexV1JobEvent::getType() const {
    return m_type;
}
void OAIGoogleCloudDataplexV1JobEvent::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDataplexV1JobEvent::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudDataplexV1JobEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_trigger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retries_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_job_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDataplexV1JobEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
