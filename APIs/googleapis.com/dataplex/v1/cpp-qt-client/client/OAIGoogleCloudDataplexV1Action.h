/**
 * Cloud Dataplex API
 * Dataplex API is used to manage the lifecycle of data lakes.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDataplexV1Action.h
 *
 * Action represents an issue requiring administrator action for resolution.
 */

#ifndef OAIGoogleCloudDataplexV1Action_H
#define OAIGoogleCloudDataplexV1Action_H

#include <QJsonObject>

#include "OAIGoogleCloudDataplexV1ActionFailedSecurityPolicyApply.h"
#include "OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema.h"
#include "OAIGoogleCloudDataplexV1ActionInvalidDataFormat.h"
#include "OAIGoogleCloudDataplexV1ActionInvalidDataPartition.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDataplexV1ActionFailedSecurityPolicyApply;
class OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema;
class OAIGoogleCloudDataplexV1ActionInvalidDataFormat;
class OAIGoogleCloudDataplexV1ActionInvalidDataPartition;

class OAIGoogleCloudDataplexV1Action : public OAIObject {
public:
    OAIGoogleCloudDataplexV1Action();
    OAIGoogleCloudDataplexV1Action(QString json);
    ~OAIGoogleCloudDataplexV1Action() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAsset() const;
    void setAsset(const QString &asset);
    bool is_asset_Set() const;
    bool is_asset_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QList<QString> getDataLocations() const;
    void setDataLocations(const QList<QString> &data_locations);
    bool is_data_locations_Set() const;
    bool is_data_locations_Valid() const;

    QString getDetectTime() const;
    void setDetectTime(const QString &detect_time);
    bool is_detect_time_Set() const;
    bool is_detect_time_Valid() const;

    OAIGoogleCloudDataplexV1ActionFailedSecurityPolicyApply getFailedSecurityPolicyApply() const;
    void setFailedSecurityPolicyApply(const OAIGoogleCloudDataplexV1ActionFailedSecurityPolicyApply &failed_security_policy_apply);
    bool is_failed_security_policy_apply_Set() const;
    bool is_failed_security_policy_apply_Valid() const;

    OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema getIncompatibleDataSchema() const;
    void setIncompatibleDataSchema(const OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema &incompatible_data_schema);
    bool is_incompatible_data_schema_Set() const;
    bool is_incompatible_data_schema_Valid() const;

    OAIGoogleCloudDataplexV1ActionInvalidDataFormat getInvalidDataFormat() const;
    void setInvalidDataFormat(const OAIGoogleCloudDataplexV1ActionInvalidDataFormat &invalid_data_format);
    bool is_invalid_data_format_Set() const;
    bool is_invalid_data_format_Valid() const;

    OAIObject getInvalidDataOrganization() const;
    void setInvalidDataOrganization(const OAIObject &invalid_data_organization);
    bool is_invalid_data_organization_Set() const;
    bool is_invalid_data_organization_Valid() const;

    OAIGoogleCloudDataplexV1ActionInvalidDataPartition getInvalidDataPartition() const;
    void setInvalidDataPartition(const OAIGoogleCloudDataplexV1ActionInvalidDataPartition &invalid_data_partition);
    bool is_invalid_data_partition_Set() const;
    bool is_invalid_data_partition_Valid() const;

    QString getIssue() const;
    void setIssue(const QString &issue);
    bool is_issue_Set() const;
    bool is_issue_Valid() const;

    QString getLake() const;
    void setLake(const QString &lake);
    bool is_lake_Set() const;
    bool is_lake_Valid() const;

    OAIObject getMissingData() const;
    void setMissingData(const OAIObject &missing_data);
    bool is_missing_data_Set() const;
    bool is_missing_data_Valid() const;

    OAIObject getMissingResource() const;
    void setMissingResource(const OAIObject &missing_resource);
    bool is_missing_resource_Set() const;
    bool is_missing_resource_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIObject getUnauthorizedResource() const;
    void setUnauthorizedResource(const OAIObject &unauthorized_resource);
    bool is_unauthorized_resource_Set() const;
    bool is_unauthorized_resource_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset;
    bool m_asset_isSet;
    bool m_asset_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QList<QString> m_data_locations;
    bool m_data_locations_isSet;
    bool m_data_locations_isValid;

    QString m_detect_time;
    bool m_detect_time_isSet;
    bool m_detect_time_isValid;

    OAIGoogleCloudDataplexV1ActionFailedSecurityPolicyApply m_failed_security_policy_apply;
    bool m_failed_security_policy_apply_isSet;
    bool m_failed_security_policy_apply_isValid;

    OAIGoogleCloudDataplexV1ActionIncompatibleDataSchema m_incompatible_data_schema;
    bool m_incompatible_data_schema_isSet;
    bool m_incompatible_data_schema_isValid;

    OAIGoogleCloudDataplexV1ActionInvalidDataFormat m_invalid_data_format;
    bool m_invalid_data_format_isSet;
    bool m_invalid_data_format_isValid;

    OAIObject m_invalid_data_organization;
    bool m_invalid_data_organization_isSet;
    bool m_invalid_data_organization_isValid;

    OAIGoogleCloudDataplexV1ActionInvalidDataPartition m_invalid_data_partition;
    bool m_invalid_data_partition_isSet;
    bool m_invalid_data_partition_isValid;

    QString m_issue;
    bool m_issue_isSet;
    bool m_issue_isValid;

    QString m_lake;
    bool m_lake_isSet;
    bool m_lake_isValid;

    OAIObject m_missing_data;
    bool m_missing_data_isSet;
    bool m_missing_data_isValid;

    OAIObject m_missing_resource;
    bool m_missing_resource_isSet;
    bool m_missing_resource_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIObject m_unauthorized_resource;
    bool m_unauthorized_resource_isSet;
    bool m_unauthorized_resource_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDataplexV1Action)

#endif // OAIGoogleCloudDataplexV1Action_H
