/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProgress.h
 *
 * Estimated fractional progress for each step, from &#x60;0&#x60; to &#x60;1&#x60;.
 */

#ifndef OAIProgress_H
#define OAIProgress_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProgress : public OAIObject {
public:
    OAIProgress();
    OAIProgress(QString json);
    ~OAIProgress() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAnalyzed() const;
    void setAnalyzed(const double &analyzed);
    bool is_analyzed_Set() const;
    bool is_analyzed_Valid() const;

    double getEncoded() const;
    void setEncoded(const double &encoded);
    bool is_encoded_Set() const;
    bool is_encoded_Valid() const;

    double getNotified() const;
    void setNotified(const double &notified);
    bool is_notified_Set() const;
    bool is_notified_Valid() const;

    double getUploaded() const;
    void setUploaded(const double &uploaded);
    bool is_uploaded_Set() const;
    bool is_uploaded_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_analyzed;
    bool m_analyzed_isSet;
    bool m_analyzed_isValid;

    double m_encoded;
    bool m_encoded_isSet;
    bool m_encoded_isValid;

    double m_notified;
    bool m_notified_isSet;
    bool m_notified_isValid;

    double m_uploaded;
    bool m_uploaded_isSet;
    bool m_uploaded_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProgress)

#endif // OAIProgress_H
