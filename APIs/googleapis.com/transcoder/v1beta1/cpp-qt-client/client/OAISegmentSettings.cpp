/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegmentSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegmentSettings::OAISegmentSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegmentSettings::OAISegmentSettings() {
    this->initializeModel();
}

OAISegmentSettings::~OAISegmentSettings() {}

void OAISegmentSettings::initializeModel() {

    m_individual_segments_isSet = false;
    m_individual_segments_isValid = false;

    m_segment_duration_isSet = false;
    m_segment_duration_isValid = false;
}

void OAISegmentSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISegmentSettings::fromJsonObject(QJsonObject json) {

    m_individual_segments_isValid = ::OpenAPI::fromJsonValue(m_individual_segments, json[QString("individualSegments")]);
    m_individual_segments_isSet = !json[QString("individualSegments")].isNull() && m_individual_segments_isValid;

    m_segment_duration_isValid = ::OpenAPI::fromJsonValue(m_segment_duration, json[QString("segmentDuration")]);
    m_segment_duration_isSet = !json[QString("segmentDuration")].isNull() && m_segment_duration_isValid;
}

QString OAISegmentSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISegmentSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_individual_segments_isSet) {
        obj.insert(QString("individualSegments"), ::OpenAPI::toJsonValue(m_individual_segments));
    }
    if (m_segment_duration_isSet) {
        obj.insert(QString("segmentDuration"), ::OpenAPI::toJsonValue(m_segment_duration));
    }
    return obj;
}

bool OAISegmentSettings::isIndividualSegments() const {
    return m_individual_segments;
}
void OAISegmentSettings::setIndividualSegments(const bool &individual_segments) {
    m_individual_segments = individual_segments;
    m_individual_segments_isSet = true;
}

bool OAISegmentSettings::is_individual_segments_Set() const{
    return m_individual_segments_isSet;
}

bool OAISegmentSettings::is_individual_segments_Valid() const{
    return m_individual_segments_isValid;
}

QString OAISegmentSettings::getSegmentDuration() const {
    return m_segment_duration;
}
void OAISegmentSettings::setSegmentDuration(const QString &segment_duration) {
    m_segment_duration = segment_duration;
    m_segment_duration_isSet = true;
}

bool OAISegmentSettings::is_segment_duration_Set() const{
    return m_segment_duration_isSet;
}

bool OAISegmentSettings::is_segment_duration_Valid() const{
    return m_segment_duration_isValid;
}

bool OAISegmentSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_individual_segments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_duration_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISegmentSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
