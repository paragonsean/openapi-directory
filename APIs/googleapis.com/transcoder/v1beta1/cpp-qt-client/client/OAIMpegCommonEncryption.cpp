/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMpegCommonEncryption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMpegCommonEncryption::OAIMpegCommonEncryption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMpegCommonEncryption::OAIMpegCommonEncryption() {
    this->initializeModel();
}

OAIMpegCommonEncryption::~OAIMpegCommonEncryption() {}

void OAIMpegCommonEncryption::initializeModel() {

    m_key_id_isSet = false;
    m_key_id_isValid = false;

    m_scheme_isSet = false;
    m_scheme_isValid = false;
}

void OAIMpegCommonEncryption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMpegCommonEncryption::fromJsonObject(QJsonObject json) {

    m_key_id_isValid = ::OpenAPI::fromJsonValue(m_key_id, json[QString("keyId")]);
    m_key_id_isSet = !json[QString("keyId")].isNull() && m_key_id_isValid;

    m_scheme_isValid = ::OpenAPI::fromJsonValue(m_scheme, json[QString("scheme")]);
    m_scheme_isSet = !json[QString("scheme")].isNull() && m_scheme_isValid;
}

QString OAIMpegCommonEncryption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMpegCommonEncryption::asJsonObject() const {
    QJsonObject obj;
    if (m_key_id_isSet) {
        obj.insert(QString("keyId"), ::OpenAPI::toJsonValue(m_key_id));
    }
    if (m_scheme_isSet) {
        obj.insert(QString("scheme"), ::OpenAPI::toJsonValue(m_scheme));
    }
    return obj;
}

QString OAIMpegCommonEncryption::getKeyId() const {
    return m_key_id;
}
void OAIMpegCommonEncryption::setKeyId(const QString &key_id) {
    m_key_id = key_id;
    m_key_id_isSet = true;
}

bool OAIMpegCommonEncryption::is_key_id_Set() const{
    return m_key_id_isSet;
}

bool OAIMpegCommonEncryption::is_key_id_Valid() const{
    return m_key_id_isValid;
}

QString OAIMpegCommonEncryption::getScheme() const {
    return m_scheme;
}
void OAIMpegCommonEncryption::setScheme(const QString &scheme) {
    m_scheme = scheme;
    m_scheme_isSet = true;
}

bool OAIMpegCommonEncryption::is_scheme_Set() const{
    return m_scheme_isSet;
}

bool OAIMpegCommonEncryption::is_scheme_Valid() const{
    return m_scheme_isValid;
}

bool OAIMpegCommonEncryption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheme_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMpegCommonEncryption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
