/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDenoise.h
 *
 * Denoise preprocessing configuration.
 */

#ifndef OAIDenoise_H
#define OAIDenoise_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDenoise : public OAIObject {
public:
    OAIDenoise();
    OAIDenoise(QString json);
    ~OAIDenoise() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getStrength() const;
    void setStrength(const double &strength);
    bool is_strength_Set() const;
    bool is_strength_Valid() const;

    QString getTune() const;
    void setTune(const QString &tune);
    bool is_tune_Set() const;
    bool is_tune_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_strength;
    bool m_strength_isSet;
    bool m_strength_isValid;

    QString m_tune;
    bool m_tune_isSet;
    bool m_tune_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDenoise)

#endif // OAIDenoise_H
