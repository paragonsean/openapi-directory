# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EditAtom(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_time_offset: str=None, inputs: List[str]=None, key: str=None, start_time_offset: str=None):
        """EditAtom - a model defined in OpenAPI

        :param end_time_offset: The end_time_offset of this EditAtom.
        :param inputs: The inputs of this EditAtom.
        :param key: The key of this EditAtom.
        :param start_time_offset: The start_time_offset of this EditAtom.
        """
        self.openapi_types = {
            'end_time_offset': str,
            'inputs': List[str],
            'key': str,
            'start_time_offset': str
        }

        self.attribute_map = {
            'end_time_offset': 'endTimeOffset',
            'inputs': 'inputs',
            'key': 'key',
            'start_time_offset': 'startTimeOffset'
        }

        self._end_time_offset = end_time_offset
        self._inputs = inputs
        self._key = key
        self._start_time_offset = start_time_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EditAtom':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EditAtom of this EditAtom.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_time_offset(self):
        """Gets the end_time_offset of this EditAtom.

        End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.

        :return: The end_time_offset of this EditAtom.
        :rtype: str
        """
        return self._end_time_offset

    @end_time_offset.setter
    def end_time_offset(self, end_time_offset):
        """Sets the end_time_offset of this EditAtom.

        End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.

        :param end_time_offset: The end_time_offset of this EditAtom.
        :type end_time_offset: str
        """

        self._end_time_offset = end_time_offset

    @property
    def inputs(self):
        """Gets the inputs of this EditAtom.

        List of `Input.key`s identifying files that should be used in this atom. The listed `inputs` must have the same timeline.

        :return: The inputs of this EditAtom.
        :rtype: List[str]
        """
        return self._inputs

    @inputs.setter
    def inputs(self, inputs):
        """Sets the inputs of this EditAtom.

        List of `Input.key`s identifying files that should be used in this atom. The listed `inputs` must have the same timeline.

        :param inputs: The inputs of this EditAtom.
        :type inputs: List[str]
        """

        self._inputs = inputs

    @property
    def key(self):
        """Gets the key of this EditAtom.

        A unique key for this atom. Must be specified when using advanced mapping.

        :return: The key of this EditAtom.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this EditAtom.

        A unique key for this atom. Must be specified when using advanced mapping.

        :param key: The key of this EditAtom.
        :type key: str
        """

        self._key = key

    @property
    def start_time_offset(self):
        """Gets the start_time_offset of this EditAtom.

        Start time in seconds for the atom, relative to the input file timeline. The default is `0s`.

        :return: The start_time_offset of this EditAtom.
        :rtype: str
        """
        return self._start_time_offset

    @start_time_offset.setter
    def start_time_offset(self, start_time_offset):
        """Sets the start_time_offset of this EditAtom.

        Start time in seconds for the atom, relative to the input file timeline. The default is `0s`.

        :param start_time_offset: The start_time_offset of this EditAtom.
        :type start_time_offset: str
        """

        self._start_time_offset = start_time_offset
