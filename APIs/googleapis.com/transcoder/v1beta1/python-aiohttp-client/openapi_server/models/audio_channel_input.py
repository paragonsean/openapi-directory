# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AudioChannelInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel: int=None, gain_db: float=None, key: str=None, track: int=None):
        """AudioChannelInput - a model defined in OpenAPI

        :param channel: The channel of this AudioChannelInput.
        :param gain_db: The gain_db of this AudioChannelInput.
        :param key: The key of this AudioChannelInput.
        :param track: The track of this AudioChannelInput.
        """
        self.openapi_types = {
            'channel': int,
            'gain_db': float,
            'key': str,
            'track': int
        }

        self.attribute_map = {
            'channel': 'channel',
            'gain_db': 'gainDb',
            'key': 'key',
            'track': 'track'
        }

        self._channel = channel
        self._gain_db = gain_db
        self._key = key
        self._track = track

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioChannelInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioChannelInput of this AudioChannelInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self):
        """Gets the channel of this AudioChannelInput.

        Required. The zero-based index of the channel in the input file.

        :return: The channel of this AudioChannelInput.
        :rtype: int
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this AudioChannelInput.

        Required. The zero-based index of the channel in the input file.

        :param channel: The channel of this AudioChannelInput.
        :type channel: int
        """

        self._channel = channel

    @property
    def gain_db(self):
        """Gets the gain_db of this AudioChannelInput.

        Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.

        :return: The gain_db of this AudioChannelInput.
        :rtype: float
        """
        return self._gain_db

    @gain_db.setter
    def gain_db(self, gain_db):
        """Sets the gain_db of this AudioChannelInput.

        Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.

        :param gain_db: The gain_db of this AudioChannelInput.
        :type gain_db: float
        """

        self._gain_db = gain_db

    @property
    def key(self):
        """Gets the key of this AudioChannelInput.

        Required. The `Input.key` that identifies the input file.

        :return: The key of this AudioChannelInput.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this AudioChannelInput.

        Required. The `Input.key` that identifies the input file.

        :param key: The key of this AudioChannelInput.
        :type key: str
        """

        self._key = key

    @property
    def track(self):
        """Gets the track of this AudioChannelInput.

        Required. The zero-based index of the track in the input file.

        :return: The track of this AudioChannelInput.
        :rtype: int
        """
        return self._track

    @track.setter
    def track(self, track):
        """Sets the track of this AudioChannelInput.

        Required. The zero-based index of the track in the input file.

        :param track: The track of this AudioChannelInput.
        :type track: int
        """

        self._track = track
