# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, track: int=None):
        """TextInput - a model defined in OpenAPI

        :param key: The key of this TextInput.
        :param track: The track of this TextInput.
        """
        self.openapi_types = {
            'key': str,
            'track': int
        }

        self.attribute_map = {
            'key': 'key',
            'track': 'track'
        }

        self._key = key
        self._track = track

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextInput of this TextInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this TextInput.

        Required. The `Input.key` that identifies the input file.

        :return: The key of this TextInput.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this TextInput.

        Required. The `Input.key` that identifies the input file.

        :param key: The key of this TextInput.
        :type key: str
        """

        self._key = key

    @property
    def track(self):
        """Gets the track of this TextInput.

        Required. The zero-based index of the track in the input file.

        :return: The track of this TextInput.
        :rtype: int
        """
        return self._track

    @track.setter
    def track(self, track):
        """Sets the track of this TextInput.

        Required. The zero-based index of the track in the input file.

        :param track: The track of this TextInput.
        :type track: int
        """

        self._track = track
