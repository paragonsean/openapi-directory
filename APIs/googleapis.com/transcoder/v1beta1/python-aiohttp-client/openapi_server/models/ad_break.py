# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdBreak(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start_time_offset: str=None):
        """AdBreak - a model defined in OpenAPI

        :param start_time_offset: The start_time_offset of this AdBreak.
        """
        self.openapi_types = {
            'start_time_offset': str
        }

        self.attribute_map = {
            'start_time_offset': 'startTimeOffset'
        }

        self._start_time_offset = start_time_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdBreak':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdBreak of this AdBreak.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_time_offset(self):
        """Gets the start_time_offset of this AdBreak.

        Start time in seconds for the ad break, relative to the output file timeline. The default is `0s`.

        :return: The start_time_offset of this AdBreak.
        :rtype: str
        """
        return self._start_time_offset

    @start_time_offset.setter
    def start_time_offset(self, start_time_offset):
        """Sets the start_time_offset of this AdBreak.

        Start time in seconds for the ad break, relative to the output file timeline. The default is `0s`.

        :param start_time_offset: The start_time_offset of this AdBreak.
        :type start_time_offset: str
        """

        self._start_time_offset = start_time_offset
