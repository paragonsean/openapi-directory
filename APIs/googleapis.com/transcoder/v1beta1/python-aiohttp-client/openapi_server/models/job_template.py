# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_config import JobConfig
from openapi_server import util


class JobTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: JobConfig=None, name: str=None):
        """JobTemplate - a model defined in OpenAPI

        :param config: The config of this JobTemplate.
        :param name: The name of this JobTemplate.
        """
        self.openapi_types = {
            'config': JobConfig,
            'name': str
        }

        self.attribute_map = {
            'config': 'config',
            'name': 'name'
        }

        self._config = config
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobTemplate of this JobTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this JobTemplate.


        :return: The config of this JobTemplate.
        :rtype: JobConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this JobTemplate.


        :param config: The config of this JobTemplate.
        :type config: JobConfig
        """

        self._config = config

    @property
    def name(self):
        """Gets the name of this JobTemplate.

        The resource name of the job template. Format: `projects/{project}/locations/{location}/jobTemplates/{job_template}`

        :return: The name of this JobTemplate.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this JobTemplate.

        The resource name of the job template. Format: `projects/{project}/locations/{location}/jobTemplates/{job_template}`

        :param name: The name of this JobTemplate.
        :type name: str
        """

        self._name = name
