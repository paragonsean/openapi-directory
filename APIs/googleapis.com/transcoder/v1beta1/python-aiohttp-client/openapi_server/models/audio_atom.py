# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_channel import AudioChannel
from openapi_server import util


class AudioAtom(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channels: List[AudioChannel]=None, key: str=None):
        """AudioAtom - a model defined in OpenAPI

        :param channels: The channels of this AudioAtom.
        :param key: The key of this AudioAtom.
        """
        self.openapi_types = {
            'channels': List[AudioChannel],
            'key': str
        }

        self.attribute_map = {
            'channels': 'channels',
            'key': 'key'
        }

        self._channels = channels
        self._key = key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioAtom':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioAtom of this AudioAtom.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channels(self):
        """Gets the channels of this AudioAtom.

        List of `Channel`s for this audio stream. for in-depth explanation.

        :return: The channels of this AudioAtom.
        :rtype: List[AudioChannel]
        """
        return self._channels

    @channels.setter
    def channels(self, channels):
        """Sets the channels of this AudioAtom.

        List of `Channel`s for this audio stream. for in-depth explanation.

        :param channels: The channels of this AudioAtom.
        :type channels: List[AudioChannel]
        """

        self._channels = channels

    @property
    def key(self):
        """Gets the key of this AudioAtom.

        Required. The `EditAtom.key` that references the atom with audio inputs in the `Job.edit_list`.

        :return: The key of this AudioAtom.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this AudioAtom.

        Required. The `EditAtom.key` that references the atom with audio inputs in the `Job.edit_list`.

        :param key: The key of this AudioAtom.
        :type key: str
        """

        self._key = key
