/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TextAtom from './TextAtom';

/**
 * The TextStream model module.
 * @module model/TextStream
 * @version v1beta1
 */
class TextStream {
    /**
     * Constructs a new <code>TextStream</code>.
     * Encoding of a text stream. For example, closed captions or subtitles.
     * @alias module:model/TextStream
     */
    constructor() { 
        
        TextStream.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TextStream</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TextStream} obj Optional instance to populate.
     * @return {module:model/TextStream} The populated <code>TextStream</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TextStream();

            if (data.hasOwnProperty('codec')) {
                obj['codec'] = ApiClient.convertToType(data['codec'], 'String');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('mapping')) {
                obj['mapping'] = ApiClient.convertToType(data['mapping'], [TextAtom]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TextStream</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TextStream</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['codec'] && !(typeof data['codec'] === 'string' || data['codec'] instanceof String)) {
            throw new Error("Expected the field `codec` to be a primitive type in the JSON string but got " + data['codec']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        if (data['mapping']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['mapping'])) {
                throw new Error("Expected the field `mapping` to be an array in the JSON data but got " + data['mapping']);
            }
            // validate the optional field `mapping` (array)
            for (const item of data['mapping']) {
                TextAtom.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The codec for this text stream. The default is `\"webvtt\"`. Supported text codecs: - 'srt' - 'ttml' - 'cea608' - 'cea708' - 'webvtt'
 * @member {String} codec
 */
TextStream.prototype['codec'] = undefined;

/**
 * Required. The BCP-47 language code, such as `\"en-US\"` or `\"sr-Latn\"`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
 * @member {String} languageCode
 */
TextStream.prototype['languageCode'] = undefined;

/**
 * The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.
 * @member {Array.<module:model/TextAtom>} mapping
 */
TextStream.prototype['mapping'] = undefined;






export default TextStream;

