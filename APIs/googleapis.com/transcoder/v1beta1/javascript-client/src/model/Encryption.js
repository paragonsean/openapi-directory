/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Aes128Encryption from './Aes128Encryption';
import MpegCommonEncryption from './MpegCommonEncryption';
import SampleAesEncryption from './SampleAesEncryption';

/**
 * The Encryption model module.
 * @module model/Encryption
 * @version v1beta1
 */
class Encryption {
    /**
     * Constructs a new <code>Encryption</code>.
     * Encryption settings.
     * @alias module:model/Encryption
     */
    constructor() { 
        
        Encryption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Encryption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Encryption} obj Optional instance to populate.
     * @return {module:model/Encryption} The populated <code>Encryption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Encryption();

            if (data.hasOwnProperty('aes128')) {
                obj['aes128'] = Aes128Encryption.constructFromObject(data['aes128']);
            }
            if (data.hasOwnProperty('iv')) {
                obj['iv'] = ApiClient.convertToType(data['iv'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('mpegCenc')) {
                obj['mpegCenc'] = MpegCommonEncryption.constructFromObject(data['mpegCenc']);
            }
            if (data.hasOwnProperty('sampleAes')) {
                obj['sampleAes'] = SampleAesEncryption.constructFromObject(data['sampleAes']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Encryption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Encryption</code>.
     */
    static validateJSON(data) {
        // validate the optional field `aes128`
        if (data['aes128']) { // data not null
          Aes128Encryption.validateJSON(data['aes128']);
        }
        // ensure the json data is a string
        if (data['iv'] && !(typeof data['iv'] === 'string' || data['iv'] instanceof String)) {
            throw new Error("Expected the field `iv` to be a primitive type in the JSON string but got " + data['iv']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // validate the optional field `mpegCenc`
        if (data['mpegCenc']) { // data not null
          MpegCommonEncryption.validateJSON(data['mpegCenc']);
        }
        // validate the optional field `sampleAes`
        if (data['sampleAes']) { // data not null
          SampleAesEncryption.validateJSON(data['sampleAes']);
        }

        return true;
    }


}



/**
 * @member {module:model/Aes128Encryption} aes128
 */
Encryption.prototype['aes128'] = undefined;

/**
 * Required. 128 bit Initialization Vector (IV) represented as lowercase hexadecimal digits.
 * @member {String} iv
 */
Encryption.prototype['iv'] = undefined;

/**
 * Required. 128 bit encryption key represented as lowercase hexadecimal digits.
 * @member {String} key
 */
Encryption.prototype['key'] = undefined;

/**
 * @member {module:model/MpegCommonEncryption} mpegCenc
 */
Encryption.prototype['mpegCenc'] = undefined;

/**
 * @member {module:model/SampleAesEncryption} sampleAes
 */
Encryption.prototype['sampleAes'] = undefined;






export default Encryption;

