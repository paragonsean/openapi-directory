# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Denoise(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, strength: float=None, tune: str=None):
        """Denoise - a model defined in OpenAPI

        :param strength: The strength of this Denoise.
        :param tune: The tune of this Denoise.
        """
        self.openapi_types = {
            'strength': float,
            'tune': str
        }

        self.attribute_map = {
            'strength': 'strength',
            'tune': 'tune'
        }

        self._strength = strength
        self._tune = tune

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Denoise':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Denoise of this Denoise.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def strength(self):
        """Gets the strength of this Denoise.

        Set strength of the denoise. Enter a value between 0 and 1. The higher the value, the smoother the image. 0 is no denoising. The default is 0.

        :return: The strength of this Denoise.
        :rtype: float
        """
        return self._strength

    @strength.setter
    def strength(self, strength):
        """Sets the strength of this Denoise.

        Set strength of the denoise. Enter a value between 0 and 1. The higher the value, the smoother the image. 0 is no denoising. The default is 0.

        :param strength: The strength of this Denoise.
        :type strength: float
        """

        self._strength = strength

    @property
    def tune(self):
        """Gets the tune of this Denoise.

        Set the denoiser mode. The default is `standard`. Supported denoiser modes: - `standard` - `grain`

        :return: The tune of this Denoise.
        :rtype: str
        """
        return self._tune

    @tune.setter
    def tune(self, tune):
        """Sets the tune of this Denoise.

        Set the denoiser mode. The default is `standard`. Supported denoiser modes: - `standard` - `grain`

        :param tune: The tune of this Denoise.
        :type tune: str
        """

        self._tune = tune
