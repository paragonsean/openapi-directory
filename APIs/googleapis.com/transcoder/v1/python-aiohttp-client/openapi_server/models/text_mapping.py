# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextMapping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, atom_key: str=None, input_key: str=None, input_track: int=None):
        """TextMapping - a model defined in OpenAPI

        :param atom_key: The atom_key of this TextMapping.
        :param input_key: The input_key of this TextMapping.
        :param input_track: The input_track of this TextMapping.
        """
        self.openapi_types = {
            'atom_key': str,
            'input_key': str,
            'input_track': int
        }

        self.attribute_map = {
            'atom_key': 'atomKey',
            'input_key': 'inputKey',
            'input_track': 'inputTrack'
        }

        self._atom_key = atom_key
        self._input_key = input_key
        self._input_track = input_track

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextMapping of this TextMapping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def atom_key(self):
        """Gets the atom_key of this TextMapping.

        Required. The EditAtom.key that references atom with text inputs in the JobConfig.edit_list.

        :return: The atom_key of this TextMapping.
        :rtype: str
        """
        return self._atom_key

    @atom_key.setter
    def atom_key(self, atom_key):
        """Sets the atom_key of this TextMapping.

        Required. The EditAtom.key that references atom with text inputs in the JobConfig.edit_list.

        :param atom_key: The atom_key of this TextMapping.
        :type atom_key: str
        """

        self._atom_key = atom_key

    @property
    def input_key(self):
        """Gets the input_key of this TextMapping.

        Required. The Input.key that identifies the input file.

        :return: The input_key of this TextMapping.
        :rtype: str
        """
        return self._input_key

    @input_key.setter
    def input_key(self, input_key):
        """Sets the input_key of this TextMapping.

        Required. The Input.key that identifies the input file.

        :param input_key: The input_key of this TextMapping.
        :type input_key: str
        """

        self._input_key = input_key

    @property
    def input_track(self):
        """Gets the input_track of this TextMapping.

        Required. The zero-based index of the track in the input file.

        :return: The input_track of this TextMapping.
        :rtype: int
        """
        return self._input_track

    @input_track.setter
    def input_track(self, input_track):
        """Sets the input_track of this TextMapping.

        Required. The zero-based index of the track in the input file.

        :param input_track: The input_track of this TextMapping.
        :type input_track: int
        """

        self._input_track = input_track
