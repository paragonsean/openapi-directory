# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DashConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, segment_reference_scheme: str=None):
        """DashConfig - a model defined in OpenAPI

        :param segment_reference_scheme: The segment_reference_scheme of this DashConfig.
        """
        self.openapi_types = {
            'segment_reference_scheme': str
        }

        self.attribute_map = {
            'segment_reference_scheme': 'segmentReferenceScheme'
        }

        self._segment_reference_scheme = segment_reference_scheme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DashConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DashConfig of this DashConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def segment_reference_scheme(self):
        """Gets the segment_reference_scheme of this DashConfig.

        The segment reference scheme for a `DASH` manifest. The default is `SEGMENT_LIST`.

        :return: The segment_reference_scheme of this DashConfig.
        :rtype: str
        """
        return self._segment_reference_scheme

    @segment_reference_scheme.setter
    def segment_reference_scheme(self, segment_reference_scheme):
        """Sets the segment_reference_scheme of this DashConfig.

        The segment reference scheme for a `DASH` manifest. The default is `SEGMENT_LIST`.

        :param segment_reference_scheme: The segment_reference_scheme of this DashConfig.
        :type segment_reference_scheme: str
        """
        allowed_values = ["SEGMENT_REFERENCE_SCHEME_UNSPECIFIED", "SEGMENT_LIST", "SEGMENT_TEMPLATE_NUMBER"]  # noqa: E501
        if segment_reference_scheme not in allowed_values:
            raise ValueError(
                "Invalid value for `segment_reference_scheme` ({0}), must be one of {1}"
                .format(segment_reference_scheme, allowed_values)
            )

        self._segment_reference_scheme = segment_reference_scheme
