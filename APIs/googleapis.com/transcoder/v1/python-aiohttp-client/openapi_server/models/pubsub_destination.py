# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PubsubDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, topic: str=None):
        """PubsubDestination - a model defined in OpenAPI

        :param topic: The topic of this PubsubDestination.
        """
        self.openapi_types = {
            'topic': str
        }

        self.attribute_map = {
            'topic': 'topic'
        }

        self._topic = topic

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PubsubDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PubsubDestination of this PubsubDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def topic(self):
        """Gets the topic of this PubsubDestination.

        The name of the Pub/Sub topic to publish job completion notification to. For example: `projects/{project}/topics/{topic}`.

        :return: The topic of this PubsubDestination.
        :rtype: str
        """
        return self._topic

    @topic.setter
    def topic(self, topic):
        """Sets the topic of this PubsubDestination.

        The name of the Pub/Sub topic to publish job completion notification to. For example: `projects/{project}/topics/{topic}`.

        :param topic: The topic of this PubsubDestination.
        :type topic: str
        """

        self._topic = topic
