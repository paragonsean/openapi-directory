# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MpegCommonEncryption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scheme: str=None):
        """MpegCommonEncryption - a model defined in OpenAPI

        :param scheme: The scheme of this MpegCommonEncryption.
        """
        self.openapi_types = {
            'scheme': str
        }

        self.attribute_map = {
            'scheme': 'scheme'
        }

        self._scheme = scheme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MpegCommonEncryption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MpegCommonEncryption of this MpegCommonEncryption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scheme(self):
        """Gets the scheme of this MpegCommonEncryption.

        Required. Specify the encryption scheme. Supported encryption schemes: - `cenc` - `cbcs`

        :return: The scheme of this MpegCommonEncryption.
        :rtype: str
        """
        return self._scheme

    @scheme.setter
    def scheme(self, scheme):
        """Sets the scheme of this MpegCommonEncryption.

        Required. Specify the encryption scheme. Supported encryption schemes: - `cenc` - `cbcs`

        :param scheme: The scheme of this MpegCommonEncryption.
        :type scheme: str
        """

        self._scheme = scheme
