# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BwdifConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deinterlace_all_frames: bool=None, mode: str=None, parity: str=None):
        """BwdifConfig - a model defined in OpenAPI

        :param deinterlace_all_frames: The deinterlace_all_frames of this BwdifConfig.
        :param mode: The mode of this BwdifConfig.
        :param parity: The parity of this BwdifConfig.
        """
        self.openapi_types = {
            'deinterlace_all_frames': bool,
            'mode': str,
            'parity': str
        }

        self.attribute_map = {
            'deinterlace_all_frames': 'deinterlaceAllFrames',
            'mode': 'mode',
            'parity': 'parity'
        }

        self._deinterlace_all_frames = deinterlace_all_frames
        self._mode = mode
        self._parity = parity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BwdifConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BwdifConfig of this BwdifConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deinterlace_all_frames(self):
        """Gets the deinterlace_all_frames of this BwdifConfig.

        Deinterlace all frames rather than just the frames identified as interlaced. The default is `false`.

        :return: The deinterlace_all_frames of this BwdifConfig.
        :rtype: bool
        """
        return self._deinterlace_all_frames

    @deinterlace_all_frames.setter
    def deinterlace_all_frames(self, deinterlace_all_frames):
        """Sets the deinterlace_all_frames of this BwdifConfig.

        Deinterlace all frames rather than just the frames identified as interlaced. The default is `false`.

        :param deinterlace_all_frames: The deinterlace_all_frames of this BwdifConfig.
        :type deinterlace_all_frames: bool
        """

        self._deinterlace_all_frames = deinterlace_all_frames

    @property
    def mode(self):
        """Gets the mode of this BwdifConfig.

        Specifies the deinterlacing mode to adopt. The default is `send_frame`. Supported values: - `send_frame`: Output one frame for each frame - `send_field`: Output one frame for each field

        :return: The mode of this BwdifConfig.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this BwdifConfig.

        Specifies the deinterlacing mode to adopt. The default is `send_frame`. Supported values: - `send_frame`: Output one frame for each frame - `send_field`: Output one frame for each field

        :param mode: The mode of this BwdifConfig.
        :type mode: str
        """

        self._mode = mode

    @property
    def parity(self):
        """Gets the parity of this BwdifConfig.

        The picture field parity assumed for the input interlaced video. The default is `auto`. Supported values: - `tff`: Assume the top field is first - `bff`: Assume the bottom field is first - `auto`: Enable automatic detection of field parity

        :return: The parity of this BwdifConfig.
        :rtype: str
        """
        return self._parity

    @parity.setter
    def parity(self, parity):
        """Sets the parity of this BwdifConfig.

        The picture field parity assumed for the input interlaced video. The default is `auto`. Supported values: - `tff`: Assume the top field is first - `bff`: Assume the bottom field is first - `auto`: Enable automatic detection of field parity

        :param parity: The parity of this BwdifConfig.
        :type parity: str
        """

        self._parity = parity
