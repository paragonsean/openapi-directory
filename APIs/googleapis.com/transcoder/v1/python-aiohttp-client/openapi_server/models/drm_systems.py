# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DrmSystems(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clearkey: object=None, fairplay: object=None, playready: object=None, widevine: object=None):
        """DrmSystems - a model defined in OpenAPI

        :param clearkey: The clearkey of this DrmSystems.
        :param fairplay: The fairplay of this DrmSystems.
        :param playready: The playready of this DrmSystems.
        :param widevine: The widevine of this DrmSystems.
        """
        self.openapi_types = {
            'clearkey': object,
            'fairplay': object,
            'playready': object,
            'widevine': object
        }

        self.attribute_map = {
            'clearkey': 'clearkey',
            'fairplay': 'fairplay',
            'playready': 'playready',
            'widevine': 'widevine'
        }

        self._clearkey = clearkey
        self._fairplay = fairplay
        self._playready = playready
        self._widevine = widevine

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DrmSystems':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DrmSystems of this DrmSystems.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clearkey(self):
        """Gets the clearkey of this DrmSystems.

        Clearkey configuration.

        :return: The clearkey of this DrmSystems.
        :rtype: object
        """
        return self._clearkey

    @clearkey.setter
    def clearkey(self, clearkey):
        """Sets the clearkey of this DrmSystems.

        Clearkey configuration.

        :param clearkey: The clearkey of this DrmSystems.
        :type clearkey: object
        """

        self._clearkey = clearkey

    @property
    def fairplay(self):
        """Gets the fairplay of this DrmSystems.

        Fairplay configuration.

        :return: The fairplay of this DrmSystems.
        :rtype: object
        """
        return self._fairplay

    @fairplay.setter
    def fairplay(self, fairplay):
        """Sets the fairplay of this DrmSystems.

        Fairplay configuration.

        :param fairplay: The fairplay of this DrmSystems.
        :type fairplay: object
        """

        self._fairplay = fairplay

    @property
    def playready(self):
        """Gets the playready of this DrmSystems.

        Playready configuration.

        :return: The playready of this DrmSystems.
        :rtype: object
        """
        return self._playready

    @playready.setter
    def playready(self, playready):
        """Sets the playready of this DrmSystems.

        Playready configuration.

        :param playready: The playready of this DrmSystems.
        :type playready: object
        """

        self._playready = playready

    @property
    def widevine(self):
        """Gets the widevine of this DrmSystems.

        Widevine configuration.

        :return: The widevine of this DrmSystems.
        :rtype: object
        """
        return self._widevine

    @widevine.setter
    def widevine(self, widevine):
        """Sets the widevine of this DrmSystems.

        Widevine configuration.

        :param widevine: The widevine of this DrmSystems.
        :type widevine: object
        """

        self._widevine = widevine
