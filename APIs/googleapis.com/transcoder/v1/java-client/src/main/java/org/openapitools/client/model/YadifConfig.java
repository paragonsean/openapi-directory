/*
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Yet Another Deinterlacing Filter Configuration.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:32.039-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class YadifConfig {
  public static final String SERIALIZED_NAME_DEINTERLACE_ALL_FRAMES = "deinterlaceAllFrames";
  @SerializedName(SERIALIZED_NAME_DEINTERLACE_ALL_FRAMES)
  private Boolean deinterlaceAllFrames;

  public static final String SERIALIZED_NAME_DISABLE_SPATIAL_INTERLACING = "disableSpatialInterlacing";
  @SerializedName(SERIALIZED_NAME_DISABLE_SPATIAL_INTERLACING)
  private Boolean disableSpatialInterlacing;

  public static final String SERIALIZED_NAME_MODE = "mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private String mode;

  public static final String SERIALIZED_NAME_PARITY = "parity";
  @SerializedName(SERIALIZED_NAME_PARITY)
  private String parity;

  public YadifConfig() {
  }

  public YadifConfig deinterlaceAllFrames(Boolean deinterlaceAllFrames) {
    this.deinterlaceAllFrames = deinterlaceAllFrames;
    return this;
  }

  /**
   * Deinterlace all frames rather than just the frames identified as interlaced. The default is &#x60;false&#x60;.
   * @return deinterlaceAllFrames
   */
  @javax.annotation.Nullable
  public Boolean getDeinterlaceAllFrames() {
    return deinterlaceAllFrames;
  }

  public void setDeinterlaceAllFrames(Boolean deinterlaceAllFrames) {
    this.deinterlaceAllFrames = deinterlaceAllFrames;
  }


  public YadifConfig disableSpatialInterlacing(Boolean disableSpatialInterlacing) {
    this.disableSpatialInterlacing = disableSpatialInterlacing;
    return this;
  }

  /**
   * Disable spacial interlacing. The default is &#x60;false&#x60;.
   * @return disableSpatialInterlacing
   */
  @javax.annotation.Nullable
  public Boolean getDisableSpatialInterlacing() {
    return disableSpatialInterlacing;
  }

  public void setDisableSpatialInterlacing(Boolean disableSpatialInterlacing) {
    this.disableSpatialInterlacing = disableSpatialInterlacing;
  }


  public YadifConfig mode(String mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Specifies the deinterlacing mode to adopt. The default is &#x60;send_frame&#x60;. Supported values: - &#x60;send_frame&#x60;: Output one frame for each frame - &#x60;send_field&#x60;: Output one frame for each field
   * @return mode
   */
  @javax.annotation.Nullable
  public String getMode() {
    return mode;
  }

  public void setMode(String mode) {
    this.mode = mode;
  }


  public YadifConfig parity(String parity) {
    this.parity = parity;
    return this;
  }

  /**
   * The picture field parity assumed for the input interlaced video. The default is &#x60;auto&#x60;. Supported values: - &#x60;tff&#x60;: Assume the top field is first - &#x60;bff&#x60;: Assume the bottom field is first - &#x60;auto&#x60;: Enable automatic detection of field parity
   * @return parity
   */
  @javax.annotation.Nullable
  public String getParity() {
    return parity;
  }

  public void setParity(String parity) {
    this.parity = parity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    YadifConfig yadifConfig = (YadifConfig) o;
    return Objects.equals(this.deinterlaceAllFrames, yadifConfig.deinterlaceAllFrames) &&
        Objects.equals(this.disableSpatialInterlacing, yadifConfig.disableSpatialInterlacing) &&
        Objects.equals(this.mode, yadifConfig.mode) &&
        Objects.equals(this.parity, yadifConfig.parity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deinterlaceAllFrames, disableSpatialInterlacing, mode, parity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class YadifConfig {\n");
    sb.append("    deinterlaceAllFrames: ").append(toIndentedString(deinterlaceAllFrames)).append("\n");
    sb.append("    disableSpatialInterlacing: ").append(toIndentedString(disableSpatialInterlacing)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    parity: ").append(toIndentedString(parity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deinterlaceAllFrames");
    openapiFields.add("disableSpatialInterlacing");
    openapiFields.add("mode");
    openapiFields.add("parity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to YadifConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!YadifConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in YadifConfig is not found in the empty JSON string", YadifConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!YadifConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `YadifConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("mode") != null && !jsonObj.get("mode").isJsonNull()) && !jsonObj.get("mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mode").toString()));
      }
      if ((jsonObj.get("parity") != null && !jsonObj.get("parity").isJsonNull()) && !jsonObj.get("parity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parity").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!YadifConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'YadifConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<YadifConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(YadifConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<YadifConfig>() {
           @Override
           public void write(JsonWriter out, YadifConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public YadifConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of YadifConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of YadifConfig
   * @throws IOException if the JSON string is invalid with respect to YadifConfig
   */
  public static YadifConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, YadifConfig.class);
  }

  /**
   * Convert an instance of YadifConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

