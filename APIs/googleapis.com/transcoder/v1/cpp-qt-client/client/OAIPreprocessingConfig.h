/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPreprocessingConfig.h
 *
 * Preprocessing configurations.
 */

#ifndef OAIPreprocessingConfig_H
#define OAIPreprocessingConfig_H

#include <QJsonObject>

#include "OAIAudio.h"
#include "OAIColor.h"
#include "OAICrop.h"
#include "OAIDeblock.h"
#include "OAIDeinterlace.h"
#include "OAIDenoise.h"
#include "OAIPad.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAudio;
class OAIColor;
class OAICrop;
class OAIDeblock;
class OAIDeinterlace;
class OAIDenoise;
class OAIPad;

class OAIPreprocessingConfig : public OAIObject {
public:
    OAIPreprocessingConfig();
    OAIPreprocessingConfig(QString json);
    ~OAIPreprocessingConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAudio getAudio() const;
    void setAudio(const OAIAudio &audio);
    bool is_audio_Set() const;
    bool is_audio_Valid() const;

    OAIColor getColor() const;
    void setColor(const OAIColor &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    OAICrop getCrop() const;
    void setCrop(const OAICrop &crop);
    bool is_crop_Set() const;
    bool is_crop_Valid() const;

    OAIDeblock getDeblock() const;
    void setDeblock(const OAIDeblock &deblock);
    bool is_deblock_Set() const;
    bool is_deblock_Valid() const;

    OAIDeinterlace getDeinterlace() const;
    void setDeinterlace(const OAIDeinterlace &deinterlace);
    bool is_deinterlace_Set() const;
    bool is_deinterlace_Valid() const;

    OAIDenoise getDenoise() const;
    void setDenoise(const OAIDenoise &denoise);
    bool is_denoise_Set() const;
    bool is_denoise_Valid() const;

    OAIPad getPad() const;
    void setPad(const OAIPad &pad);
    bool is_pad_Set() const;
    bool is_pad_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAudio m_audio;
    bool m_audio_isSet;
    bool m_audio_isValid;

    OAIColor m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    OAICrop m_crop;
    bool m_crop_isSet;
    bool m_crop_isValid;

    OAIDeblock m_deblock;
    bool m_deblock_isSet;
    bool m_deblock_isValid;

    OAIDeinterlace m_deinterlace;
    bool m_deinterlace_isSet;
    bool m_deinterlace_isValid;

    OAIDenoise m_denoise;
    bool m_denoise_isSet;
    bool m_denoise_isValid;

    OAIPad m_pad;
    bool m_pad_isSet;
    bool m_pad_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPreprocessingConfig)

#endif // OAIPreprocessingConfig_H
