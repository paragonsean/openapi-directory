/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINormalizedCoordinate.h
 *
 * 2D normalized coordinates. Default: &#x60;{0.0, 0.0}&#x60;
 */

#ifndef OAINormalizedCoordinate_H
#define OAINormalizedCoordinate_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINormalizedCoordinate : public OAIObject {
public:
    OAINormalizedCoordinate();
    OAINormalizedCoordinate(QString json);
    ~OAINormalizedCoordinate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getX() const;
    void setX(const double &x);
    bool is_x_Set() const;
    bool is_x_Valid() const;

    double getY() const;
    void setY(const double &y);
    bool is_y_Set() const;
    bool is_y_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_x;
    bool m_x_isSet;
    bool m_x_isValid;

    double m_y;
    bool m_y_isSet;
    bool m_y_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINormalizedCoordinate)

#endif // OAINormalizedCoordinate_H
