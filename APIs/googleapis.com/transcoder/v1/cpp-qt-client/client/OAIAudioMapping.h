/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioMapping.h
 *
 * The mapping for the JobConfig.edit_list atoms with audio EditAtom.inputs.
 */

#ifndef OAIAudioMapping_H
#define OAIAudioMapping_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAudioMapping : public OAIObject {
public:
    OAIAudioMapping();
    OAIAudioMapping(QString json);
    ~OAIAudioMapping() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAtomKey() const;
    void setAtomKey(const QString &atom_key);
    bool is_atom_key_Set() const;
    bool is_atom_key_Valid() const;

    double getGainDb() const;
    void setGainDb(const double &gain_db);
    bool is_gain_db_Set() const;
    bool is_gain_db_Valid() const;

    qint32 getInputChannel() const;
    void setInputChannel(const qint32 &input_channel);
    bool is_input_channel_Set() const;
    bool is_input_channel_Valid() const;

    QString getInputKey() const;
    void setInputKey(const QString &input_key);
    bool is_input_key_Set() const;
    bool is_input_key_Valid() const;

    qint32 getInputTrack() const;
    void setInputTrack(const qint32 &input_track);
    bool is_input_track_Set() const;
    bool is_input_track_Valid() const;

    qint32 getOutputChannel() const;
    void setOutputChannel(const qint32 &output_channel);
    bool is_output_channel_Set() const;
    bool is_output_channel_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_atom_key;
    bool m_atom_key_isSet;
    bool m_atom_key_isValid;

    double m_gain_db;
    bool m_gain_db_isSet;
    bool m_gain_db_isValid;

    qint32 m_input_channel;
    bool m_input_channel_isSet;
    bool m_input_channel_isValid;

    QString m_input_key;
    bool m_input_key_isSet;
    bool m_input_key_isValid;

    qint32 m_input_track;
    bool m_input_track_isSet;
    bool m_input_track_isValid;

    qint32 m_output_channel;
    bool m_output_channel_isSet;
    bool m_output_channel_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioMapping)

#endif // OAIAudioMapping_H
