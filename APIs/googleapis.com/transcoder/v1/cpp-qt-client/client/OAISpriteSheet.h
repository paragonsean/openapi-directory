/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISpriteSheet.h
 *
 * Sprite sheet configuration.
 */

#ifndef OAISpriteSheet_H
#define OAISpriteSheet_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISpriteSheet : public OAIObject {
public:
    OAISpriteSheet();
    OAISpriteSheet(QString json);
    ~OAISpriteSheet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getColumnCount() const;
    void setColumnCount(const qint32 &column_count);
    bool is_column_count_Set() const;
    bool is_column_count_Valid() const;

    QString getEndTimeOffset() const;
    void setEndTimeOffset(const QString &end_time_offset);
    bool is_end_time_offset_Set() const;
    bool is_end_time_offset_Valid() const;

    QString getFilePrefix() const;
    void setFilePrefix(const QString &file_prefix);
    bool is_file_prefix_Set() const;
    bool is_file_prefix_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getInterval() const;
    void setInterval(const QString &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    qint32 getQuality() const;
    void setQuality(const qint32 &quality);
    bool is_quality_Set() const;
    bool is_quality_Valid() const;

    qint32 getRowCount() const;
    void setRowCount(const qint32 &row_count);
    bool is_row_count_Set() const;
    bool is_row_count_Valid() const;

    qint32 getSpriteHeightPixels() const;
    void setSpriteHeightPixels(const qint32 &sprite_height_pixels);
    bool is_sprite_height_pixels_Set() const;
    bool is_sprite_height_pixels_Valid() const;

    qint32 getSpriteWidthPixels() const;
    void setSpriteWidthPixels(const qint32 &sprite_width_pixels);
    bool is_sprite_width_pixels_Set() const;
    bool is_sprite_width_pixels_Valid() const;

    QString getStartTimeOffset() const;
    void setStartTimeOffset(const QString &start_time_offset);
    bool is_start_time_offset_Set() const;
    bool is_start_time_offset_Valid() const;

    qint32 getTotalCount() const;
    void setTotalCount(const qint32 &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_column_count;
    bool m_column_count_isSet;
    bool m_column_count_isValid;

    QString m_end_time_offset;
    bool m_end_time_offset_isSet;
    bool m_end_time_offset_isValid;

    QString m_file_prefix;
    bool m_file_prefix_isSet;
    bool m_file_prefix_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    qint32 m_quality;
    bool m_quality_isSet;
    bool m_quality_isValid;

    qint32 m_row_count;
    bool m_row_count_isSet;
    bool m_row_count_isValid;

    qint32 m_sprite_height_pixels;
    bool m_sprite_height_pixels_isSet;
    bool m_sprite_height_pixels_isValid;

    qint32 m_sprite_width_pixels;
    bool m_sprite_width_pixels_isSet;
    bool m_sprite_width_pixels_isValid;

    QString m_start_time_offset;
    bool m_start_time_offset_isSet;
    bool m_start_time_offset_isValid;

    qint32 m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISpriteSheet)

#endif // OAISpriteSheet_H
