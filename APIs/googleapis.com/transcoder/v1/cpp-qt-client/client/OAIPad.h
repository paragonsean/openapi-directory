/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPad.h
 *
 * Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.
 */

#ifndef OAIPad_H
#define OAIPad_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPad : public OAIObject {
public:
    OAIPad();
    OAIPad(QString json);
    ~OAIPad() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBottomPixels() const;
    void setBottomPixels(const qint32 &bottom_pixels);
    bool is_bottom_pixels_Set() const;
    bool is_bottom_pixels_Valid() const;

    qint32 getLeftPixels() const;
    void setLeftPixels(const qint32 &left_pixels);
    bool is_left_pixels_Set() const;
    bool is_left_pixels_Valid() const;

    qint32 getRightPixels() const;
    void setRightPixels(const qint32 &right_pixels);
    bool is_right_pixels_Set() const;
    bool is_right_pixels_Valid() const;

    qint32 getTopPixels() const;
    void setTopPixels(const qint32 &top_pixels);
    bool is_top_pixels_Set() const;
    bool is_top_pixels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_bottom_pixels;
    bool m_bottom_pixels_isSet;
    bool m_bottom_pixels_isValid;

    qint32 m_left_pixels;
    bool m_left_pixels_isSet;
    bool m_left_pixels_isValid;

    qint32 m_right_pixels;
    bool m_right_pixels_isSet;
    bool m_right_pixels_isValid;

    qint32 m_top_pixels;
    bool m_top_pixels_isSet;
    bool m_top_pixels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPad)

#endif // OAIPad_H
