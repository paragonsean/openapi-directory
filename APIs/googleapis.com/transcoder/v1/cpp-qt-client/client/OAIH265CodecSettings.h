/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIH265CodecSettings.h
 *
 * H265 codec settings.
 */

#ifndef OAIH265CodecSettings_H
#define OAIH265CodecSettings_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIH265CodecSettings : public OAIObject {
public:
    OAIH265CodecSettings();
    OAIH265CodecSettings(QString json);
    ~OAIH265CodecSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowOpenGop() const;
    void setAllowOpenGop(const bool &allow_open_gop);
    bool is_allow_open_gop_Set() const;
    bool is_allow_open_gop_Valid() const;

    double getAqStrength() const;
    void setAqStrength(const double &aq_strength);
    bool is_aq_strength_Set() const;
    bool is_aq_strength_Valid() const;

    qint32 getBFrameCount() const;
    void setBFrameCount(const qint32 &b_frame_count);
    bool is_b_frame_count_Set() const;
    bool is_b_frame_count_Valid() const;

    bool isBPyramid() const;
    void setBPyramid(const bool &b_pyramid);
    bool is_b_pyramid_Set() const;
    bool is_b_pyramid_Valid() const;

    qint32 getBitrateBps() const;
    void setBitrateBps(const qint32 &bitrate_bps);
    bool is_bitrate_bps_Set() const;
    bool is_bitrate_bps_Valid() const;

    qint32 getCrfLevel() const;
    void setCrfLevel(const qint32 &crf_level);
    bool is_crf_level_Set() const;
    bool is_crf_level_Valid() const;

    bool isEnableTwoPass() const;
    void setEnableTwoPass(const bool &enable_two_pass);
    bool is_enable_two_pass_Set() const;
    bool is_enable_two_pass_Valid() const;

    double getFrameRate() const;
    void setFrameRate(const double &frame_rate);
    bool is_frame_rate_Set() const;
    bool is_frame_rate_Valid() const;

    QString getFrameRateConversionStrategy() const;
    void setFrameRateConversionStrategy(const QString &frame_rate_conversion_strategy);
    bool is_frame_rate_conversion_strategy_Set() const;
    bool is_frame_rate_conversion_strategy_Valid() const;

    QString getGopDuration() const;
    void setGopDuration(const QString &gop_duration);
    bool is_gop_duration_Set() const;
    bool is_gop_duration_Valid() const;

    qint32 getGopFrameCount() const;
    void setGopFrameCount(const qint32 &gop_frame_count);
    bool is_gop_frame_count_Set() const;
    bool is_gop_frame_count_Valid() const;

    OAIObject getHdr10() const;
    void setHdr10(const OAIObject &hdr10);
    bool is_hdr10_Set() const;
    bool is_hdr10_Valid() const;

    qint32 getHeightPixels() const;
    void setHeightPixels(const qint32 &height_pixels);
    bool is_height_pixels_Set() const;
    bool is_height_pixels_Valid() const;

    OAIObject getHlg() const;
    void setHlg(const OAIObject &hlg);
    bool is_hlg_Set() const;
    bool is_hlg_Valid() const;

    QString getPixelFormat() const;
    void setPixelFormat(const QString &pixel_format);
    bool is_pixel_format_Set() const;
    bool is_pixel_format_Valid() const;

    QString getPreset() const;
    void setPreset(const QString &preset);
    bool is_preset_Set() const;
    bool is_preset_Valid() const;

    QString getProfile() const;
    void setProfile(const QString &profile);
    bool is_profile_Set() const;
    bool is_profile_Valid() const;

    QString getRateControlMode() const;
    void setRateControlMode(const QString &rate_control_mode);
    bool is_rate_control_mode_Set() const;
    bool is_rate_control_mode_Valid() const;

    OAIObject getSdr() const;
    void setSdr(const OAIObject &sdr);
    bool is_sdr_Set() const;
    bool is_sdr_Valid() const;

    QString getTune() const;
    void setTune(const QString &tune);
    bool is_tune_Set() const;
    bool is_tune_Valid() const;

    qint32 getVbvFullnessBits() const;
    void setVbvFullnessBits(const qint32 &vbv_fullness_bits);
    bool is_vbv_fullness_bits_Set() const;
    bool is_vbv_fullness_bits_Valid() const;

    qint32 getVbvSizeBits() const;
    void setVbvSizeBits(const qint32 &vbv_size_bits);
    bool is_vbv_size_bits_Set() const;
    bool is_vbv_size_bits_Valid() const;

    qint32 getWidthPixels() const;
    void setWidthPixels(const qint32 &width_pixels);
    bool is_width_pixels_Set() const;
    bool is_width_pixels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_open_gop;
    bool m_allow_open_gop_isSet;
    bool m_allow_open_gop_isValid;

    double m_aq_strength;
    bool m_aq_strength_isSet;
    bool m_aq_strength_isValid;

    qint32 m_b_frame_count;
    bool m_b_frame_count_isSet;
    bool m_b_frame_count_isValid;

    bool m_b_pyramid;
    bool m_b_pyramid_isSet;
    bool m_b_pyramid_isValid;

    qint32 m_bitrate_bps;
    bool m_bitrate_bps_isSet;
    bool m_bitrate_bps_isValid;

    qint32 m_crf_level;
    bool m_crf_level_isSet;
    bool m_crf_level_isValid;

    bool m_enable_two_pass;
    bool m_enable_two_pass_isSet;
    bool m_enable_two_pass_isValid;

    double m_frame_rate;
    bool m_frame_rate_isSet;
    bool m_frame_rate_isValid;

    QString m_frame_rate_conversion_strategy;
    bool m_frame_rate_conversion_strategy_isSet;
    bool m_frame_rate_conversion_strategy_isValid;

    QString m_gop_duration;
    bool m_gop_duration_isSet;
    bool m_gop_duration_isValid;

    qint32 m_gop_frame_count;
    bool m_gop_frame_count_isSet;
    bool m_gop_frame_count_isValid;

    OAIObject m_hdr10;
    bool m_hdr10_isSet;
    bool m_hdr10_isValid;

    qint32 m_height_pixels;
    bool m_height_pixels_isSet;
    bool m_height_pixels_isValid;

    OAIObject m_hlg;
    bool m_hlg_isSet;
    bool m_hlg_isValid;

    QString m_pixel_format;
    bool m_pixel_format_isSet;
    bool m_pixel_format_isValid;

    QString m_preset;
    bool m_preset_isSet;
    bool m_preset_isValid;

    QString m_profile;
    bool m_profile_isSet;
    bool m_profile_isValid;

    QString m_rate_control_mode;
    bool m_rate_control_mode_isSet;
    bool m_rate_control_mode_isValid;

    OAIObject m_sdr;
    bool m_sdr_isSet;
    bool m_sdr_isValid;

    QString m_tune;
    bool m_tune_isSet;
    bool m_tune_isValid;

    qint32 m_vbv_fullness_bits;
    bool m_vbv_fullness_bits_isSet;
    bool m_vbv_fullness_bits_isValid;

    qint32 m_vbv_size_bits;
    bool m_vbv_size_bits_isSet;
    bool m_vbv_size_bits_isValid;

    qint32 m_width_pixels;
    bool m_width_pixels_isSet;
    bool m_width_pixels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIH265CodecSettings)

#endif // OAIH265CodecSettings_H
