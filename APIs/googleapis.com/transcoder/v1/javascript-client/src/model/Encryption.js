/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DrmSystems from './DrmSystems';
import MpegCommonEncryption from './MpegCommonEncryption';
import SecretManagerSource from './SecretManagerSource';

/**
 * The Encryption model module.
 * @module model/Encryption
 * @version v1
 */
class Encryption {
    /**
     * Constructs a new <code>Encryption</code>.
     * Encryption settings.
     * @alias module:model/Encryption
     */
    constructor() { 
        
        Encryption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Encryption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Encryption} obj Optional instance to populate.
     * @return {module:model/Encryption} The populated <code>Encryption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Encryption();

            if (data.hasOwnProperty('aes128')) {
                obj['aes128'] = ApiClient.convertToType(data['aes128'], Object);
            }
            if (data.hasOwnProperty('drmSystems')) {
                obj['drmSystems'] = DrmSystems.constructFromObject(data['drmSystems']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('mpegCenc')) {
                obj['mpegCenc'] = MpegCommonEncryption.constructFromObject(data['mpegCenc']);
            }
            if (data.hasOwnProperty('sampleAes')) {
                obj['sampleAes'] = ApiClient.convertToType(data['sampleAes'], Object);
            }
            if (data.hasOwnProperty('secretManagerKeySource')) {
                obj['secretManagerKeySource'] = SecretManagerSource.constructFromObject(data['secretManagerKeySource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Encryption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Encryption</code>.
     */
    static validateJSON(data) {
        // validate the optional field `drmSystems`
        if (data['drmSystems']) { // data not null
          DrmSystems.validateJSON(data['drmSystems']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `mpegCenc`
        if (data['mpegCenc']) { // data not null
          MpegCommonEncryption.validateJSON(data['mpegCenc']);
        }
        // validate the optional field `secretManagerKeySource`
        if (data['secretManagerKeySource']) { // data not null
          SecretManagerSource.validateJSON(data['secretManagerKeySource']);
        }

        return true;
    }


}



/**
 * Configuration for AES-128 encryption.
 * @member {Object} aes128
 */
Encryption.prototype['aes128'] = undefined;

/**
 * @member {module:model/DrmSystems} drmSystems
 */
Encryption.prototype['drmSystems'] = undefined;

/**
 * Required. Identifier for this set of encryption options.
 * @member {String} id
 */
Encryption.prototype['id'] = undefined;

/**
 * @member {module:model/MpegCommonEncryption} mpegCenc
 */
Encryption.prototype['mpegCenc'] = undefined;

/**
 * Configuration for SAMPLE-AES encryption.
 * @member {Object} sampleAes
 */
Encryption.prototype['sampleAes'] = undefined;

/**
 * @member {module:model/SecretManagerSource} secretManagerKeySource
 */
Encryption.prototype['secretManagerKeySource'] = undefined;






export default Encryption;

