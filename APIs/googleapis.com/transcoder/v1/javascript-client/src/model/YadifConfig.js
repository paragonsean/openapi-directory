/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The YadifConfig model module.
 * @module model/YadifConfig
 * @version v1
 */
class YadifConfig {
    /**
     * Constructs a new <code>YadifConfig</code>.
     * Yet Another Deinterlacing Filter Configuration.
     * @alias module:model/YadifConfig
     */
    constructor() { 
        
        YadifConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>YadifConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/YadifConfig} obj Optional instance to populate.
     * @return {module:model/YadifConfig} The populated <code>YadifConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new YadifConfig();

            if (data.hasOwnProperty('deinterlaceAllFrames')) {
                obj['deinterlaceAllFrames'] = ApiClient.convertToType(data['deinterlaceAllFrames'], 'Boolean');
            }
            if (data.hasOwnProperty('disableSpatialInterlacing')) {
                obj['disableSpatialInterlacing'] = ApiClient.convertToType(data['disableSpatialInterlacing'], 'Boolean');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('parity')) {
                obj['parity'] = ApiClient.convertToType(data['parity'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>YadifConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>YadifConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['parity'] && !(typeof data['parity'] === 'string' || data['parity'] instanceof String)) {
            throw new Error("Expected the field `parity` to be a primitive type in the JSON string but got " + data['parity']);
        }

        return true;
    }


}



/**
 * Deinterlace all frames rather than just the frames identified as interlaced. The default is `false`.
 * @member {Boolean} deinterlaceAllFrames
 */
YadifConfig.prototype['deinterlaceAllFrames'] = undefined;

/**
 * Disable spacial interlacing. The default is `false`.
 * @member {Boolean} disableSpatialInterlacing
 */
YadifConfig.prototype['disableSpatialInterlacing'] = undefined;

/**
 * Specifies the deinterlacing mode to adopt. The default is `send_frame`. Supported values: - `send_frame`: Output one frame for each frame - `send_field`: Output one frame for each field
 * @member {String} mode
 */
YadifConfig.prototype['mode'] = undefined;

/**
 * The picture field parity assumed for the input interlaced video. The default is `auto`. Supported values: - `tff`: Assume the top field is first - `bff`: Assume the bottom field is first - `auto`: Enable automatic detection of field parity
 * @member {String} parity
 */
YadifConfig.prototype['parity'] = undefined;






export default YadifConfig;

