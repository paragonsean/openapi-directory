/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Pad model module.
 * @module model/Pad
 * @version v1
 */
class Pad {
    /**
     * Constructs a new <code>Pad</code>.
     * Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.
     * @alias module:model/Pad
     */
    constructor() { 
        
        Pad.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Pad</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Pad} obj Optional instance to populate.
     * @return {module:model/Pad} The populated <code>Pad</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Pad();

            if (data.hasOwnProperty('bottomPixels')) {
                obj['bottomPixels'] = ApiClient.convertToType(data['bottomPixels'], 'Number');
            }
            if (data.hasOwnProperty('leftPixels')) {
                obj['leftPixels'] = ApiClient.convertToType(data['leftPixels'], 'Number');
            }
            if (data.hasOwnProperty('rightPixels')) {
                obj['rightPixels'] = ApiClient.convertToType(data['rightPixels'], 'Number');
            }
            if (data.hasOwnProperty('topPixels')) {
                obj['topPixels'] = ApiClient.convertToType(data['topPixels'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Pad</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Pad</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The number of pixels to add to the bottom. The default is 0.
 * @member {Number} bottomPixels
 */
Pad.prototype['bottomPixels'] = undefined;

/**
 * The number of pixels to add to the left. The default is 0.
 * @member {Number} leftPixels
 */
Pad.prototype['leftPixels'] = undefined;

/**
 * The number of pixels to add to the right. The default is 0.
 * @member {Number} rightPixels
 */
Pad.prototype['rightPixels'] = undefined;

/**
 * The number of pixels to add to the top. The default is 0.
 * @member {Number} topPixels
 */
Pad.prototype['topPixels'] = undefined;






export default Pad;

