/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnimationEnd from './AnimationEnd';
import AnimationFade from './AnimationFade';
import AnimationStatic from './AnimationStatic';

/**
 * The Animation model module.
 * @module model/Animation
 * @version v1
 */
class Animation {
    /**
     * Constructs a new <code>Animation</code>.
     * Animation types.
     * @alias module:model/Animation
     */
    constructor() { 
        
        Animation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Animation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Animation} obj Optional instance to populate.
     * @return {module:model/Animation} The populated <code>Animation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Animation();

            if (data.hasOwnProperty('animationEnd')) {
                obj['animationEnd'] = AnimationEnd.constructFromObject(data['animationEnd']);
            }
            if (data.hasOwnProperty('animationFade')) {
                obj['animationFade'] = AnimationFade.constructFromObject(data['animationFade']);
            }
            if (data.hasOwnProperty('animationStatic')) {
                obj['animationStatic'] = AnimationStatic.constructFromObject(data['animationStatic']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Animation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Animation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `animationEnd`
        if (data['animationEnd']) { // data not null
          AnimationEnd.validateJSON(data['animationEnd']);
        }
        // validate the optional field `animationFade`
        if (data['animationFade']) { // data not null
          AnimationFade.validateJSON(data['animationFade']);
        }
        // validate the optional field `animationStatic`
        if (data['animationStatic']) { // data not null
          AnimationStatic.validateJSON(data['animationStatic']);
        }

        return true;
    }


}



/**
 * @member {module:model/AnimationEnd} animationEnd
 */
Animation.prototype['animationEnd'] = undefined;

/**
 * @member {module:model/AnimationFade} animationFade
 */
Animation.prototype['animationFade'] = undefined;

/**
 * @member {module:model/AnimationStatic} animationStatic
 */
Animation.prototype['animationStatic'] = undefined;






export default Animation;

