/**
 * Transcoder API
 * This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import H264CodecSettings from './H264CodecSettings';
import H265CodecSettings from './H265CodecSettings';
import Vp9CodecSettings from './Vp9CodecSettings';

/**
 * The VideoStream model module.
 * @module model/VideoStream
 * @version v1
 */
class VideoStream {
    /**
     * Constructs a new <code>VideoStream</code>.
     * Video stream resource.
     * @alias module:model/VideoStream
     */
    constructor() { 
        
        VideoStream.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoStream</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoStream} obj Optional instance to populate.
     * @return {module:model/VideoStream} The populated <code>VideoStream</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoStream();

            if (data.hasOwnProperty('h264')) {
                obj['h264'] = H264CodecSettings.constructFromObject(data['h264']);
            }
            if (data.hasOwnProperty('h265')) {
                obj['h265'] = H265CodecSettings.constructFromObject(data['h265']);
            }
            if (data.hasOwnProperty('vp9')) {
                obj['vp9'] = Vp9CodecSettings.constructFromObject(data['vp9']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoStream</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoStream</code>.
     */
    static validateJSON(data) {
        // validate the optional field `h264`
        if (data['h264']) { // data not null
          H264CodecSettings.validateJSON(data['h264']);
        }
        // validate the optional field `h265`
        if (data['h265']) { // data not null
          H265CodecSettings.validateJSON(data['h265']);
        }
        // validate the optional field `vp9`
        if (data['vp9']) { // data not null
          Vp9CodecSettings.validateJSON(data['vp9']);
        }

        return true;
    }


}



/**
 * @member {module:model/H264CodecSettings} h264
 */
VideoStream.prototype['h264'] = undefined;

/**
 * @member {module:model/H265CodecSettings} h265
 */
VideoStream.prototype['h265'] = undefined;

/**
 * @member {module:model/Vp9CodecSettings} vp9
 */
VideoStream.prototype['vp9'] = undefined;






export default VideoStream;

