/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary() {
    this->initializeModel();
}

OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::~OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary() {}

void OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::initializeModel() {

    m_device_id_isSet = false;
    m_device_id_isValid = false;

    m_device_uri_isSet = false;
    m_device_uri_isValid = false;

    m_marketing_name_isSet = false;
    m_marketing_name_isValid = false;
}

void OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::fromJsonObject(QJsonObject json) {

    m_device_id_isValid = ::OpenAPI::fromJsonValue(m_device_id, json[QString("deviceId")]);
    m_device_id_isSet = !json[QString("deviceId")].isNull() && m_device_id_isValid;

    m_device_uri_isValid = ::OpenAPI::fromJsonValue(m_device_uri, json[QString("deviceUri")]);
    m_device_uri_isSet = !json[QString("deviceUri")].isNull() && m_device_uri_isValid;

    m_marketing_name_isValid = ::OpenAPI::fromJsonValue(m_marketing_name, json[QString("marketingName")]);
    m_marketing_name_isSet = !json[QString("marketingName")].isNull() && m_marketing_name_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_device_id.isSet()) {
        obj.insert(QString("deviceId"), ::OpenAPI::toJsonValue(m_device_id));
    }
    if (m_device_uri_isSet) {
        obj.insert(QString("deviceUri"), ::OpenAPI::toJsonValue(m_device_uri));
    }
    if (m_marketing_name_isSet) {
        obj.insert(QString("marketingName"), ::OpenAPI::toJsonValue(m_marketing_name));
    }
    return obj;
}

OAIGooglePlayDeveloperReportingV1alpha1DeviceId OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::getDeviceId() const {
    return m_device_id;
}
void OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::setDeviceId(const OAIGooglePlayDeveloperReportingV1alpha1DeviceId &device_id) {
    m_device_id = device_id;
    m_device_id_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::is_device_id_Set() const{
    return m_device_id_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::is_device_id_Valid() const{
    return m_device_id_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::getDeviceUri() const {
    return m_device_uri;
}
void OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::setDeviceUri(const QString &device_uri) {
    m_device_uri = device_uri;
    m_device_uri_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::is_device_uri_Set() const{
    return m_device_uri_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::is_device_uri_Valid() const{
    return m_device_uri_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::getMarketingName() const {
    return m_marketing_name;
}
void OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::setMarketingName(const QString &marketing_name) {
    m_marketing_name = marketing_name;
    m_marketing_name_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::is_marketing_name_Set() const{
    return m_marketing_name_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::is_marketing_name_Valid() const{
    return m_marketing_name_isValid;
}

bool OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketing_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
