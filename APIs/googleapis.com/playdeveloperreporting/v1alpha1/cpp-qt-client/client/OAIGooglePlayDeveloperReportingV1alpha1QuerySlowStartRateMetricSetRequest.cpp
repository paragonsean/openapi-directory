/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest() {
    this->initializeModel();
}

OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::~OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest() {}

void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::initializeModel() {

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_page_token_isSet = false;
    m_page_token_isValid = false;

    m_timeline_spec_isSet = false;
    m_timeline_spec_isValid = false;

    m_user_cohort_isSet = false;
    m_user_cohort_isValid = false;
}

void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::fromJsonObject(QJsonObject json) {

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_page_token_isValid = ::OpenAPI::fromJsonValue(m_page_token, json[QString("pageToken")]);
    m_page_token_isSet = !json[QString("pageToken")].isNull() && m_page_token_isValid;

    m_timeline_spec_isValid = ::OpenAPI::fromJsonValue(m_timeline_spec, json[QString("timelineSpec")]);
    m_timeline_spec_isSet = !json[QString("timelineSpec")].isNull() && m_timeline_spec_isValid;

    m_user_cohort_isValid = ::OpenAPI::fromJsonValue(m_user_cohort, json[QString("userCohort")]);
    m_user_cohort_isSet = !json[QString("userCohort")].isNull() && m_user_cohort_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_dimensions.size() > 0) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_filter_isSet) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_page_token_isSet) {
        obj.insert(QString("pageToken"), ::OpenAPI::toJsonValue(m_page_token));
    }
    if (m_timeline_spec.isSet()) {
        obj.insert(QString("timelineSpec"), ::OpenAPI::toJsonValue(m_timeline_spec));
    }
    if (m_user_cohort_isSet) {
        obj.insert(QString("userCohort"), ::OpenAPI::toJsonValue(m_user_cohort));
    }
    return obj;
}

QList<QString> OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::getDimensions() const {
    return m_dimensions;
}
void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::setDimensions(const QList<QString> &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::getFilter() const {
    return m_filter;
}
void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::setFilter(const QString &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

QList<QString> OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::getMetrics() const {
    return m_metrics;
}
void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::setMetrics(const QList<QString> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_metrics_Valid() const{
    return m_metrics_isValid;
}

qint32 OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::getPageSize() const {
    return m_page_size;
}
void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::getPageToken() const {
    return m_page_token;
}
void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::setPageToken(const QString &page_token) {
    m_page_token = page_token;
    m_page_token_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_page_token_Set() const{
    return m_page_token_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_page_token_Valid() const{
    return m_page_token_isValid;
}

OAIGooglePlayDeveloperReportingV1alpha1TimelineSpec OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::getTimelineSpec() const {
    return m_timeline_spec;
}
void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::setTimelineSpec(const OAIGooglePlayDeveloperReportingV1alpha1TimelineSpec &timeline_spec) {
    m_timeline_spec = timeline_spec;
    m_timeline_spec_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_timeline_spec_Set() const{
    return m_timeline_spec_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_timeline_spec_Valid() const{
    return m_timeline_spec_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::getUserCohort() const {
    return m_user_cohort;
}
void OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::setUserCohort(const QString &user_cohort) {
    m_user_cohort = user_cohort;
    m_user_cohort_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_user_cohort_Set() const{
    return m_user_cohort_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::is_user_cohort_Valid() const{
    return m_user_cohort_isValid;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timeline_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_cohort_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
