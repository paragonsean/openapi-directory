/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePlayDeveloperReportingV1alpha1MetricsRow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::OAIGooglePlayDeveloperReportingV1alpha1MetricsRow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::OAIGooglePlayDeveloperReportingV1alpha1MetricsRow() {
    this->initializeModel();
}

OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::~OAIGooglePlayDeveloperReportingV1alpha1MetricsRow() {}

void OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::initializeModel() {

    m_aggregation_period_isSet = false;
    m_aggregation_period_isValid = false;

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::fromJsonObject(QJsonObject json) {

    m_aggregation_period_isValid = ::OpenAPI::fromJsonValue(m_aggregation_period, json[QString("aggregationPeriod")]);
    m_aggregation_period_isSet = !json[QString("aggregationPeriod")].isNull() && m_aggregation_period_isValid;

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("dimensions")]);
    m_dimensions_isSet = !json[QString("dimensions")].isNull() && m_dimensions_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::asJsonObject() const {
    QJsonObject obj;
    if (m_aggregation_period_isSet) {
        obj.insert(QString("aggregationPeriod"), ::OpenAPI::toJsonValue(m_aggregation_period));
    }
    if (m_dimensions.size() > 0) {
        obj.insert(QString("dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_start_time.isSet()) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::getAggregationPeriod() const {
    return m_aggregation_period;
}
void OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::setAggregationPeriod(const QString &aggregation_period) {
    m_aggregation_period = aggregation_period;
    m_aggregation_period_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::is_aggregation_period_Set() const{
    return m_aggregation_period_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::is_aggregation_period_Valid() const{
    return m_aggregation_period_isValid;
}

QList<OAIGooglePlayDeveloperReportingV1alpha1DimensionValue> OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::getDimensions() const {
    return m_dimensions;
}
void OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::setDimensions(const QList<OAIGooglePlayDeveloperReportingV1alpha1DimensionValue> &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QList<OAIGooglePlayDeveloperReportingV1alpha1MetricValue> OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::getMetrics() const {
    return m_metrics;
}
void OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::setMetrics(const QList<OAIGooglePlayDeveloperReportingV1alpha1MetricValue> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::is_metrics_Valid() const{
    return m_metrics_isValid;
}

OAIGoogleTypeDateTime OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::getStartTime() const {
    return m_start_time;
}
void OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::setStartTime(const OAIGoogleTypeDateTime &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aggregation_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricsRow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
