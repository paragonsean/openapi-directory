/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue() {
    this->initializeModel();
}

OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::~OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue() {}

void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::initializeModel() {

    m_cause_isSet = false;
    m_cause_isValid = false;

    m_distinct_users_isSet = false;
    m_distinct_users_isValid = false;

    m_distinct_users_percent_isSet = false;
    m_distinct_users_percent_isValid = false;

    m_error_report_count_isSet = false;
    m_error_report_count_isValid = false;

    m_first_app_version_isSet = false;
    m_first_app_version_isValid = false;

    m_first_os_version_isSet = false;
    m_first_os_version_isValid = false;

    m_issue_uri_isSet = false;
    m_issue_uri_isValid = false;

    m_last_app_version_isSet = false;
    m_last_app_version_isValid = false;

    m_last_error_report_time_isSet = false;
    m_last_error_report_time_isValid = false;

    m_last_os_version_isSet = false;
    m_last_os_version_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::fromJsonObject(QJsonObject json) {

    m_cause_isValid = ::OpenAPI::fromJsonValue(m_cause, json[QString("cause")]);
    m_cause_isSet = !json[QString("cause")].isNull() && m_cause_isValid;

    m_distinct_users_isValid = ::OpenAPI::fromJsonValue(m_distinct_users, json[QString("distinctUsers")]);
    m_distinct_users_isSet = !json[QString("distinctUsers")].isNull() && m_distinct_users_isValid;

    m_distinct_users_percent_isValid = ::OpenAPI::fromJsonValue(m_distinct_users_percent, json[QString("distinctUsersPercent")]);
    m_distinct_users_percent_isSet = !json[QString("distinctUsersPercent")].isNull() && m_distinct_users_percent_isValid;

    m_error_report_count_isValid = ::OpenAPI::fromJsonValue(m_error_report_count, json[QString("errorReportCount")]);
    m_error_report_count_isSet = !json[QString("errorReportCount")].isNull() && m_error_report_count_isValid;

    m_first_app_version_isValid = ::OpenAPI::fromJsonValue(m_first_app_version, json[QString("firstAppVersion")]);
    m_first_app_version_isSet = !json[QString("firstAppVersion")].isNull() && m_first_app_version_isValid;

    m_first_os_version_isValid = ::OpenAPI::fromJsonValue(m_first_os_version, json[QString("firstOsVersion")]);
    m_first_os_version_isSet = !json[QString("firstOsVersion")].isNull() && m_first_os_version_isValid;

    m_issue_uri_isValid = ::OpenAPI::fromJsonValue(m_issue_uri, json[QString("issueUri")]);
    m_issue_uri_isSet = !json[QString("issueUri")].isNull() && m_issue_uri_isValid;

    m_last_app_version_isValid = ::OpenAPI::fromJsonValue(m_last_app_version, json[QString("lastAppVersion")]);
    m_last_app_version_isSet = !json[QString("lastAppVersion")].isNull() && m_last_app_version_isValid;

    m_last_error_report_time_isValid = ::OpenAPI::fromJsonValue(m_last_error_report_time, json[QString("lastErrorReportTime")]);
    m_last_error_report_time_isSet = !json[QString("lastErrorReportTime")].isNull() && m_last_error_report_time_isValid;

    m_last_os_version_isValid = ::OpenAPI::fromJsonValue(m_last_os_version, json[QString("lastOsVersion")]);
    m_last_os_version_isSet = !json[QString("lastOsVersion")].isNull() && m_last_os_version_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::asJsonObject() const {
    QJsonObject obj;
    if (m_cause_isSet) {
        obj.insert(QString("cause"), ::OpenAPI::toJsonValue(m_cause));
    }
    if (m_distinct_users_isSet) {
        obj.insert(QString("distinctUsers"), ::OpenAPI::toJsonValue(m_distinct_users));
    }
    if (m_distinct_users_percent.isSet()) {
        obj.insert(QString("distinctUsersPercent"), ::OpenAPI::toJsonValue(m_distinct_users_percent));
    }
    if (m_error_report_count_isSet) {
        obj.insert(QString("errorReportCount"), ::OpenAPI::toJsonValue(m_error_report_count));
    }
    if (m_first_app_version.isSet()) {
        obj.insert(QString("firstAppVersion"), ::OpenAPI::toJsonValue(m_first_app_version));
    }
    if (m_first_os_version.isSet()) {
        obj.insert(QString("firstOsVersion"), ::OpenAPI::toJsonValue(m_first_os_version));
    }
    if (m_issue_uri_isSet) {
        obj.insert(QString("issueUri"), ::OpenAPI::toJsonValue(m_issue_uri));
    }
    if (m_last_app_version.isSet()) {
        obj.insert(QString("lastAppVersion"), ::OpenAPI::toJsonValue(m_last_app_version));
    }
    if (m_last_error_report_time_isSet) {
        obj.insert(QString("lastErrorReportTime"), ::OpenAPI::toJsonValue(m_last_error_report_time));
    }
    if (m_last_os_version.isSet()) {
        obj.insert(QString("lastOsVersion"), ::OpenAPI::toJsonValue(m_last_os_version));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getCause() const {
    return m_cause;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setCause(const QString &cause) {
    m_cause = cause;
    m_cause_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_cause_Set() const{
    return m_cause_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_cause_Valid() const{
    return m_cause_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getDistinctUsers() const {
    return m_distinct_users;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setDistinctUsers(const QString &distinct_users) {
    m_distinct_users = distinct_users;
    m_distinct_users_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_distinct_users_Set() const{
    return m_distinct_users_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_distinct_users_Valid() const{
    return m_distinct_users_isValid;
}

OAIGoogleTypeDecimal OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getDistinctUsersPercent() const {
    return m_distinct_users_percent;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setDistinctUsersPercent(const OAIGoogleTypeDecimal &distinct_users_percent) {
    m_distinct_users_percent = distinct_users_percent;
    m_distinct_users_percent_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_distinct_users_percent_Set() const{
    return m_distinct_users_percent_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_distinct_users_percent_Valid() const{
    return m_distinct_users_percent_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getErrorReportCount() const {
    return m_error_report_count;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setErrorReportCount(const QString &error_report_count) {
    m_error_report_count = error_report_count;
    m_error_report_count_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_error_report_count_Set() const{
    return m_error_report_count_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_error_report_count_Valid() const{
    return m_error_report_count_isValid;
}

OAIGooglePlayDeveloperReportingV1alpha1AppVersion OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getFirstAppVersion() const {
    return m_first_app_version;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setFirstAppVersion(const OAIGooglePlayDeveloperReportingV1alpha1AppVersion &first_app_version) {
    m_first_app_version = first_app_version;
    m_first_app_version_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_first_app_version_Set() const{
    return m_first_app_version_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_first_app_version_Valid() const{
    return m_first_app_version_isValid;
}

OAIGooglePlayDeveloperReportingV1alpha1OsVersion OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getFirstOsVersion() const {
    return m_first_os_version;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setFirstOsVersion(const OAIGooglePlayDeveloperReportingV1alpha1OsVersion &first_os_version) {
    m_first_os_version = first_os_version;
    m_first_os_version_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_first_os_version_Set() const{
    return m_first_os_version_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_first_os_version_Valid() const{
    return m_first_os_version_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getIssueUri() const {
    return m_issue_uri;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setIssueUri(const QString &issue_uri) {
    m_issue_uri = issue_uri;
    m_issue_uri_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_issue_uri_Set() const{
    return m_issue_uri_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_issue_uri_Valid() const{
    return m_issue_uri_isValid;
}

OAIGooglePlayDeveloperReportingV1alpha1AppVersion OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getLastAppVersion() const {
    return m_last_app_version;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setLastAppVersion(const OAIGooglePlayDeveloperReportingV1alpha1AppVersion &last_app_version) {
    m_last_app_version = last_app_version;
    m_last_app_version_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_last_app_version_Set() const{
    return m_last_app_version_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_last_app_version_Valid() const{
    return m_last_app_version_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getLastErrorReportTime() const {
    return m_last_error_report_time;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setLastErrorReportTime(const QString &last_error_report_time) {
    m_last_error_report_time = last_error_report_time;
    m_last_error_report_time_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_last_error_report_time_Set() const{
    return m_last_error_report_time_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_last_error_report_time_Valid() const{
    return m_last_error_report_time_isValid;
}

OAIGooglePlayDeveloperReportingV1alpha1OsVersion OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getLastOsVersion() const {
    return m_last_os_version;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setLastOsVersion(const OAIGooglePlayDeveloperReportingV1alpha1OsVersion &last_os_version) {
    m_last_os_version = last_os_version;
    m_last_os_version_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_last_os_version_Set() const{
    return m_last_os_version_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_last_os_version_Valid() const{
    return m_last_os_version_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getLocation() const {
    return m_location;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getName() const {
    return m_name;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::getType() const {
    return m_type;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cause_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_distinct_users_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_distinct_users_percent.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_report_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_app_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_os_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_app_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_error_report_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_os_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorIssue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
