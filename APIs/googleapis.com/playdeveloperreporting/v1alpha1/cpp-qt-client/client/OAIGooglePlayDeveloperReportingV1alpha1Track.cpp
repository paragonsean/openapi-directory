/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePlayDeveloperReportingV1alpha1Track.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePlayDeveloperReportingV1alpha1Track::OAIGooglePlayDeveloperReportingV1alpha1Track(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePlayDeveloperReportingV1alpha1Track::OAIGooglePlayDeveloperReportingV1alpha1Track() {
    this->initializeModel();
}

OAIGooglePlayDeveloperReportingV1alpha1Track::~OAIGooglePlayDeveloperReportingV1alpha1Track() {}

void OAIGooglePlayDeveloperReportingV1alpha1Track::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_serving_releases_isSet = false;
    m_serving_releases_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGooglePlayDeveloperReportingV1alpha1Track::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePlayDeveloperReportingV1alpha1Track::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_serving_releases_isValid = ::OpenAPI::fromJsonValue(m_serving_releases, json[QString("servingReleases")]);
    m_serving_releases_isSet = !json[QString("servingReleases")].isNull() && m_serving_releases_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1Track::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePlayDeveloperReportingV1alpha1Track::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_serving_releases.size() > 0) {
        obj.insert(QString("servingReleases"), ::OpenAPI::toJsonValue(m_serving_releases));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGooglePlayDeveloperReportingV1alpha1Track::getDisplayName() const {
    return m_display_name;
}
void OAIGooglePlayDeveloperReportingV1alpha1Track::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1Track::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1Track::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIGooglePlayDeveloperReportingV1alpha1Release> OAIGooglePlayDeveloperReportingV1alpha1Track::getServingReleases() const {
    return m_serving_releases;
}
void OAIGooglePlayDeveloperReportingV1alpha1Track::setServingReleases(const QList<OAIGooglePlayDeveloperReportingV1alpha1Release> &serving_releases) {
    m_serving_releases = serving_releases;
    m_serving_releases_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1Track::is_serving_releases_Set() const{
    return m_serving_releases_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1Track::is_serving_releases_Valid() const{
    return m_serving_releases_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1Track::getType() const {
    return m_type;
}
void OAIGooglePlayDeveloperReportingV1alpha1Track::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1Track::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1Track::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGooglePlayDeveloperReportingV1alpha1Track::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serving_releases.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePlayDeveloperReportingV1alpha1Track::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
