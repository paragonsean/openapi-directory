/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePlayDeveloperReportingV1alpha1MetricValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePlayDeveloperReportingV1alpha1MetricValue::OAIGooglePlayDeveloperReportingV1alpha1MetricValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePlayDeveloperReportingV1alpha1MetricValue::OAIGooglePlayDeveloperReportingV1alpha1MetricValue() {
    this->initializeModel();
}

OAIGooglePlayDeveloperReportingV1alpha1MetricValue::~OAIGooglePlayDeveloperReportingV1alpha1MetricValue() {}

void OAIGooglePlayDeveloperReportingV1alpha1MetricValue::initializeModel() {

    m_decimal_value_isSet = false;
    m_decimal_value_isValid = false;

    m_decimal_value_confidence_interval_isSet = false;
    m_decimal_value_confidence_interval_isValid = false;

    m_metric_isSet = false;
    m_metric_isValid = false;
}

void OAIGooglePlayDeveloperReportingV1alpha1MetricValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePlayDeveloperReportingV1alpha1MetricValue::fromJsonObject(QJsonObject json) {

    m_decimal_value_isValid = ::OpenAPI::fromJsonValue(m_decimal_value, json[QString("decimalValue")]);
    m_decimal_value_isSet = !json[QString("decimalValue")].isNull() && m_decimal_value_isValid;

    m_decimal_value_confidence_interval_isValid = ::OpenAPI::fromJsonValue(m_decimal_value_confidence_interval, json[QString("decimalValueConfidenceInterval")]);
    m_decimal_value_confidence_interval_isSet = !json[QString("decimalValueConfidenceInterval")].isNull() && m_decimal_value_confidence_interval_isValid;

    m_metric_isValid = ::OpenAPI::fromJsonValue(m_metric, json[QString("metric")]);
    m_metric_isSet = !json[QString("metric")].isNull() && m_metric_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1MetricValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePlayDeveloperReportingV1alpha1MetricValue::asJsonObject() const {
    QJsonObject obj;
    if (m_decimal_value.isSet()) {
        obj.insert(QString("decimalValue"), ::OpenAPI::toJsonValue(m_decimal_value));
    }
    if (m_decimal_value_confidence_interval.isSet()) {
        obj.insert(QString("decimalValueConfidenceInterval"), ::OpenAPI::toJsonValue(m_decimal_value_confidence_interval));
    }
    if (m_metric_isSet) {
        obj.insert(QString("metric"), ::OpenAPI::toJsonValue(m_metric));
    }
    return obj;
}

OAIGoogleTypeDecimal OAIGooglePlayDeveloperReportingV1alpha1MetricValue::getDecimalValue() const {
    return m_decimal_value;
}
void OAIGooglePlayDeveloperReportingV1alpha1MetricValue::setDecimalValue(const OAIGoogleTypeDecimal &decimal_value) {
    m_decimal_value = decimal_value;
    m_decimal_value_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricValue::is_decimal_value_Set() const{
    return m_decimal_value_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricValue::is_decimal_value_Valid() const{
    return m_decimal_value_isValid;
}

OAIGooglePlayDeveloperReportingV1alpha1DecimalConfidenceInterval OAIGooglePlayDeveloperReportingV1alpha1MetricValue::getDecimalValueConfidenceInterval() const {
    return m_decimal_value_confidence_interval;
}
void OAIGooglePlayDeveloperReportingV1alpha1MetricValue::setDecimalValueConfidenceInterval(const OAIGooglePlayDeveloperReportingV1alpha1DecimalConfidenceInterval &decimal_value_confidence_interval) {
    m_decimal_value_confidence_interval = decimal_value_confidence_interval;
    m_decimal_value_confidence_interval_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricValue::is_decimal_value_confidence_interval_Set() const{
    return m_decimal_value_confidence_interval_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricValue::is_decimal_value_confidence_interval_Valid() const{
    return m_decimal_value_confidence_interval_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1MetricValue::getMetric() const {
    return m_metric;
}
void OAIGooglePlayDeveloperReportingV1alpha1MetricValue::setMetric(const QString &metric) {
    m_metric = metric;
    m_metric_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricValue::is_metric_Set() const{
    return m_metric_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricValue::is_metric_Valid() const{
    return m_metric_isValid;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_decimal_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_decimal_value_confidence_interval.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePlayDeveloperReportingV1alpha1MetricValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
