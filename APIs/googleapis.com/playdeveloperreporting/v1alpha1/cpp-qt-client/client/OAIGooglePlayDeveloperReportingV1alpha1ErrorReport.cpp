/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGooglePlayDeveloperReportingV1alpha1ErrorReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::OAIGooglePlayDeveloperReportingV1alpha1ErrorReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::OAIGooglePlayDeveloperReportingV1alpha1ErrorReport() {
    this->initializeModel();
}

OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::~OAIGooglePlayDeveloperReportingV1alpha1ErrorReport() {}

void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::initializeModel() {

    m_app_version_isSet = false;
    m_app_version_isValid = false;

    m_device_model_isSet = false;
    m_device_model_isValid = false;

    m_event_time_isSet = false;
    m_event_time_isValid = false;

    m_issue_isSet = false;
    m_issue_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_os_version_isSet = false;
    m_os_version_isValid = false;

    m_report_text_isSet = false;
    m_report_text_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_vcs_information_isSet = false;
    m_vcs_information_isValid = false;
}

void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::fromJsonObject(QJsonObject json) {

    m_app_version_isValid = ::OpenAPI::fromJsonValue(m_app_version, json[QString("appVersion")]);
    m_app_version_isSet = !json[QString("appVersion")].isNull() && m_app_version_isValid;

    m_device_model_isValid = ::OpenAPI::fromJsonValue(m_device_model, json[QString("deviceModel")]);
    m_device_model_isSet = !json[QString("deviceModel")].isNull() && m_device_model_isValid;

    m_event_time_isValid = ::OpenAPI::fromJsonValue(m_event_time, json[QString("eventTime")]);
    m_event_time_isSet = !json[QString("eventTime")].isNull() && m_event_time_isValid;

    m_issue_isValid = ::OpenAPI::fromJsonValue(m_issue, json[QString("issue")]);
    m_issue_isSet = !json[QString("issue")].isNull() && m_issue_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_os_version_isValid = ::OpenAPI::fromJsonValue(m_os_version, json[QString("osVersion")]);
    m_os_version_isSet = !json[QString("osVersion")].isNull() && m_os_version_isValid;

    m_report_text_isValid = ::OpenAPI::fromJsonValue(m_report_text, json[QString("reportText")]);
    m_report_text_isSet = !json[QString("reportText")].isNull() && m_report_text_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_vcs_information_isValid = ::OpenAPI::fromJsonValue(m_vcs_information, json[QString("vcsInformation")]);
    m_vcs_information_isSet = !json[QString("vcsInformation")].isNull() && m_vcs_information_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::asJsonObject() const {
    QJsonObject obj;
    if (m_app_version.isSet()) {
        obj.insert(QString("appVersion"), ::OpenAPI::toJsonValue(m_app_version));
    }
    if (m_device_model.isSet()) {
        obj.insert(QString("deviceModel"), ::OpenAPI::toJsonValue(m_device_model));
    }
    if (m_event_time_isSet) {
        obj.insert(QString("eventTime"), ::OpenAPI::toJsonValue(m_event_time));
    }
    if (m_issue_isSet) {
        obj.insert(QString("issue"), ::OpenAPI::toJsonValue(m_issue));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_os_version.isSet()) {
        obj.insert(QString("osVersion"), ::OpenAPI::toJsonValue(m_os_version));
    }
    if (m_report_text_isSet) {
        obj.insert(QString("reportText"), ::OpenAPI::toJsonValue(m_report_text));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_vcs_information_isSet) {
        obj.insert(QString("vcsInformation"), ::OpenAPI::toJsonValue(m_vcs_information));
    }
    return obj;
}

OAIGooglePlayDeveloperReportingV1alpha1AppVersion OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::getAppVersion() const {
    return m_app_version;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::setAppVersion(const OAIGooglePlayDeveloperReportingV1alpha1AppVersion &app_version) {
    m_app_version = app_version;
    m_app_version_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_app_version_Set() const{
    return m_app_version_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_app_version_Valid() const{
    return m_app_version_isValid;
}

OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::getDeviceModel() const {
    return m_device_model;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::setDeviceModel(const OAIGooglePlayDeveloperReportingV1alpha1DeviceModelSummary &device_model) {
    m_device_model = device_model;
    m_device_model_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_device_model_Set() const{
    return m_device_model_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_device_model_Valid() const{
    return m_device_model_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::getEventTime() const {
    return m_event_time;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::setEventTime(const QString &event_time) {
    m_event_time = event_time;
    m_event_time_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_event_time_Set() const{
    return m_event_time_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_event_time_Valid() const{
    return m_event_time_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::getIssue() const {
    return m_issue;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::setIssue(const QString &issue) {
    m_issue = issue;
    m_issue_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_issue_Set() const{
    return m_issue_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_issue_Valid() const{
    return m_issue_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::getName() const {
    return m_name;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_name_Valid() const{
    return m_name_isValid;
}

OAIGooglePlayDeveloperReportingV1alpha1OsVersion OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::getOsVersion() const {
    return m_os_version;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::setOsVersion(const OAIGooglePlayDeveloperReportingV1alpha1OsVersion &os_version) {
    m_os_version = os_version;
    m_os_version_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_os_version_Set() const{
    return m_os_version_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_os_version_Valid() const{
    return m_os_version_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::getReportText() const {
    return m_report_text;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::setReportText(const QString &report_text) {
    m_report_text = report_text;
    m_report_text_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_report_text_Set() const{
    return m_report_text_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_report_text_Valid() const{
    return m_report_text_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::getType() const {
    return m_type;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::getVcsInformation() const {
    return m_vcs_information;
}
void OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::setVcsInformation(const QString &vcs_information) {
    m_vcs_information = vcs_information;
    m_vcs_information_isSet = true;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_vcs_information_Set() const{
    return m_vcs_information_isSet;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::is_vcs_information_Valid() const{
    return m_vcs_information_isValid;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_device_model.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_os_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vcs_information_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGooglePlayDeveloperReportingV1alpha1ErrorReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
