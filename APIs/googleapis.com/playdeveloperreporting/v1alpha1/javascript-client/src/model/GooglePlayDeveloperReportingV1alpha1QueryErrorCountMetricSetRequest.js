/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePlayDeveloperReportingV1alpha1TimelineSpec from './GooglePlayDeveloperReportingV1alpha1TimelineSpec';

/**
 * The GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest model module.
 * @module model/GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest
 * @version v1alpha1
 */
class GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest {
    /**
     * Constructs a new <code>GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest</code>.
     * Request message for QueryErrorCountMetricSet.
     * @alias module:model/GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest
     */
    constructor() { 
        
        GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest} obj Optional instance to populate.
     * @return {module:model/GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest} The populated <code>GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest();

            if (data.hasOwnProperty('dimensions')) {
                obj['dimensions'] = ApiClient.convertToType(data['dimensions'], ['String']);
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], 'String');
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], ['String']);
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('pageToken')) {
                obj['pageToken'] = ApiClient.convertToType(data['pageToken'], 'String');
            }
            if (data.hasOwnProperty('timelineSpec')) {
                obj['timelineSpec'] = GooglePlayDeveloperReportingV1alpha1TimelineSpec.constructFromObject(data['timelineSpec']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['dimensions'])) {
            throw new Error("Expected the field `dimensions` to be an array in the JSON data but got " + data['dimensions']);
        }
        // ensure the json data is a string
        if (data['filter'] && !(typeof data['filter'] === 'string' || data['filter'] instanceof String)) {
            throw new Error("Expected the field `filter` to be a primitive type in the JSON string but got " + data['filter']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['metrics'])) {
            throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
        }
        // ensure the json data is a string
        if (data['pageToken'] && !(typeof data['pageToken'] === 'string' || data['pageToken'] instanceof String)) {
            throw new Error("Expected the field `pageToken` to be a primitive type in the JSON string but got " + data['pageToken']);
        }
        // validate the optional field `timelineSpec`
        if (data['timelineSpec']) { // data not null
          GooglePlayDeveloperReportingV1alpha1TimelineSpec.validateJSON(data['timelineSpec']);
        }

        return true;
    }


}



/**
 * Dimensions to slice the data by. **Supported dimensions:** * `apiLevel` (string): the API level of Android that was running on the user's device, e.g., 26. * `versionCode` (int64): unique identifier of the user's device model. The form of the identifier is 'deviceBrand/device', where deviceBrand corresponds to Build.BRAND and device corresponds to Build.DEVICE, e.g., google/coral. * `deviceModel` (string): unique identifier of the user's device model. * `deviceType` (string): identifier of the device's form factor, e.g., PHONE. * `reportType` (string): the type of error. The value should correspond to one of the possible values in ErrorType. * `isUserPerceived` (string): denotes whether error is user perceived or not, USER_PERCEIVED or NOT_USER_PERCEIVED. * `issueId` (string): the id an error was assigned to. The value should correspond to the `{issue}` component of the issue name. * `deviceRamBucket` (int64): RAM of the device, in MB, in buckets (3GB, 4GB, etc.). * `deviceSocMake` (string): Make of the device's primary system-on-chip, e.g., Samsung. [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER) * `deviceSocModel` (string): Model of the device's primary system-on-chip, e.g., \"Exynos 2100\". [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL) * `deviceCpuMake` (string): Make of the device's CPU, e.g., Qualcomm. * `deviceCpuModel` (string): Model of the device's CPU, e.g., \"Kryo 240\". * `deviceGpuMake` (string): Make of the device's GPU, e.g., ARM. * `deviceGpuModel` (string): Model of the device's GPU, e.g., Mali. * `deviceGpuVersion` (string): Version of the device's GPU, e.g., T750. * `deviceVulkanVersion` (string): Vulkan version of the device, e.g., \"4198400\". * `deviceGlEsVersion` (string): OpenGL ES version of the device, e.g., \"196610\". * `deviceScreenSize` (string): Screen size of the device, e.g., NORMAL, LARGE. * `deviceScreenDpi` (string): Screen density of the device, e.g., mdpi, hdpi.
 * @member {Array.<String>} dimensions
 */
GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest.prototype['dimensions'] = undefined;

/**
 * Filters to apply to data. The filtering expression follows [AIP-160](https://google.aip.dev/160) standard and supports filtering by equality of all breakdown dimensions.
 * @member {String} filter
 */
GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest.prototype['filter'] = undefined;

/**
 * Metrics to aggregate. **Supported metrics:** * `errorReportCount` (`google.type.Decimal`): Absolute count of individual error reports that have been received for an app. * `distinctUsers` (`google.type.Decimal`): Count of distinct users for which reports have been received. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times. This value is not rounded, however it may be an approximation.
 * @member {Array.<String>} metrics
 */
GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest.prototype['metrics'] = undefined;

/**
 * Maximum size of the returned data. If unspecified, at most 1000 rows will be returned. The maximum value is 100000; values above 100000 will be coerced to 100000.
 * @member {Number} pageSize
 */
GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest.prototype['pageSize'] = undefined;

/**
 * A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to the request must match the call that provided the page token.
 * @member {String} pageToken
 */
GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest.prototype['pageToken'] = undefined;

/**
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1TimelineSpec} timelineSpec
 */
GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest.prototype['timelineSpec'] = undefined;






export default GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest;

