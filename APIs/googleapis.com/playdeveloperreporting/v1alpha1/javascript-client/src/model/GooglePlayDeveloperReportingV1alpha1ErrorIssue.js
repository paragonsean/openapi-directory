/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePlayDeveloperReportingV1alpha1AppVersion from './GooglePlayDeveloperReportingV1alpha1AppVersion';
import GooglePlayDeveloperReportingV1alpha1OsVersion from './GooglePlayDeveloperReportingV1alpha1OsVersion';
import GoogleTypeDecimal from './GoogleTypeDecimal';

/**
 * The GooglePlayDeveloperReportingV1alpha1ErrorIssue model module.
 * @module model/GooglePlayDeveloperReportingV1alpha1ErrorIssue
 * @version v1alpha1
 */
class GooglePlayDeveloperReportingV1alpha1ErrorIssue {
    /**
     * Constructs a new <code>GooglePlayDeveloperReportingV1alpha1ErrorIssue</code>.
     * A group of related ErrorReports received for an app. Similar error reports are grouped together into issues with a likely identical root cause. **Please note:** this resource is currently in Alpha. There could be changes to the issue grouping that would result in similar but more recent error reports being assigned to different issues. This could also cause some issues disappearing entirely and being replaced by new ones. **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app.
     * @alias module:model/GooglePlayDeveloperReportingV1alpha1ErrorIssue
     */
    constructor() { 
        
        GooglePlayDeveloperReportingV1alpha1ErrorIssue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePlayDeveloperReportingV1alpha1ErrorIssue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePlayDeveloperReportingV1alpha1ErrorIssue} obj Optional instance to populate.
     * @return {module:model/GooglePlayDeveloperReportingV1alpha1ErrorIssue} The populated <code>GooglePlayDeveloperReportingV1alpha1ErrorIssue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePlayDeveloperReportingV1alpha1ErrorIssue();

            if (data.hasOwnProperty('cause')) {
                obj['cause'] = ApiClient.convertToType(data['cause'], 'String');
            }
            if (data.hasOwnProperty('distinctUsers')) {
                obj['distinctUsers'] = ApiClient.convertToType(data['distinctUsers'], 'String');
            }
            if (data.hasOwnProperty('distinctUsersPercent')) {
                obj['distinctUsersPercent'] = GoogleTypeDecimal.constructFromObject(data['distinctUsersPercent']);
            }
            if (data.hasOwnProperty('errorReportCount')) {
                obj['errorReportCount'] = ApiClient.convertToType(data['errorReportCount'], 'String');
            }
            if (data.hasOwnProperty('firstAppVersion')) {
                obj['firstAppVersion'] = GooglePlayDeveloperReportingV1alpha1AppVersion.constructFromObject(data['firstAppVersion']);
            }
            if (data.hasOwnProperty('firstOsVersion')) {
                obj['firstOsVersion'] = GooglePlayDeveloperReportingV1alpha1OsVersion.constructFromObject(data['firstOsVersion']);
            }
            if (data.hasOwnProperty('issueUri')) {
                obj['issueUri'] = ApiClient.convertToType(data['issueUri'], 'String');
            }
            if (data.hasOwnProperty('lastAppVersion')) {
                obj['lastAppVersion'] = GooglePlayDeveloperReportingV1alpha1AppVersion.constructFromObject(data['lastAppVersion']);
            }
            if (data.hasOwnProperty('lastErrorReportTime')) {
                obj['lastErrorReportTime'] = ApiClient.convertToType(data['lastErrorReportTime'], 'String');
            }
            if (data.hasOwnProperty('lastOsVersion')) {
                obj['lastOsVersion'] = GooglePlayDeveloperReportingV1alpha1OsVersion.constructFromObject(data['lastOsVersion']);
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePlayDeveloperReportingV1alpha1ErrorIssue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePlayDeveloperReportingV1alpha1ErrorIssue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cause'] && !(typeof data['cause'] === 'string' || data['cause'] instanceof String)) {
            throw new Error("Expected the field `cause` to be a primitive type in the JSON string but got " + data['cause']);
        }
        // ensure the json data is a string
        if (data['distinctUsers'] && !(typeof data['distinctUsers'] === 'string' || data['distinctUsers'] instanceof String)) {
            throw new Error("Expected the field `distinctUsers` to be a primitive type in the JSON string but got " + data['distinctUsers']);
        }
        // validate the optional field `distinctUsersPercent`
        if (data['distinctUsersPercent']) { // data not null
          GoogleTypeDecimal.validateJSON(data['distinctUsersPercent']);
        }
        // ensure the json data is a string
        if (data['errorReportCount'] && !(typeof data['errorReportCount'] === 'string' || data['errorReportCount'] instanceof String)) {
            throw new Error("Expected the field `errorReportCount` to be a primitive type in the JSON string but got " + data['errorReportCount']);
        }
        // validate the optional field `firstAppVersion`
        if (data['firstAppVersion']) { // data not null
          GooglePlayDeveloperReportingV1alpha1AppVersion.validateJSON(data['firstAppVersion']);
        }
        // validate the optional field `firstOsVersion`
        if (data['firstOsVersion']) { // data not null
          GooglePlayDeveloperReportingV1alpha1OsVersion.validateJSON(data['firstOsVersion']);
        }
        // ensure the json data is a string
        if (data['issueUri'] && !(typeof data['issueUri'] === 'string' || data['issueUri'] instanceof String)) {
            throw new Error("Expected the field `issueUri` to be a primitive type in the JSON string but got " + data['issueUri']);
        }
        // validate the optional field `lastAppVersion`
        if (data['lastAppVersion']) { // data not null
          GooglePlayDeveloperReportingV1alpha1AppVersion.validateJSON(data['lastAppVersion']);
        }
        // ensure the json data is a string
        if (data['lastErrorReportTime'] && !(typeof data['lastErrorReportTime'] === 'string' || data['lastErrorReportTime'] instanceof String)) {
            throw new Error("Expected the field `lastErrorReportTime` to be a primitive type in the JSON string but got " + data['lastErrorReportTime']);
        }
        // validate the optional field `lastOsVersion`
        if (data['lastOsVersion']) { // data not null
          GooglePlayDeveloperReportingV1alpha1OsVersion.validateJSON(data['lastOsVersion']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Cause of the issue. Depending on the type this can be either: * APPLICATION_NOT_RESPONDING: the type of ANR that occurred, e.g., 'Input dispatching timed out'. * CRASH: for Java unhandled exception errors, the type of the innermost exception that was thrown, e.g., IllegalArgumentException. For signals in native code, the signal that was raised, e.g. SIGSEGV.
 * @member {String} cause
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['cause'] = undefined;

/**
 * An estimate of the number of unique users who have experienced this issue (only considering occurrences matching the filters and within the requested time period).
 * @member {String} distinctUsers
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['distinctUsers'] = undefined;

/**
 * @member {module:model/GoogleTypeDecimal} distinctUsersPercent
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['distinctUsersPercent'] = undefined;

/**
 * The total number of error reports in this issue (only considering occurrences matching the filters and within the requested time period).
 * @member {String} errorReportCount
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['errorReportCount'] = undefined;

/**
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1AppVersion} firstAppVersion
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['firstAppVersion'] = undefined;

/**
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1OsVersion} firstOsVersion
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['firstOsVersion'] = undefined;

/**
 * Link to the issue in Android vitals in the Play Console.
 * @member {String} issueUri
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['issueUri'] = undefined;

/**
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1AppVersion} lastAppVersion
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['lastAppVersion'] = undefined;

/**
 * Start of the hour during which the last error report in this issue occurred.
 * @member {String} lastErrorReportTime
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['lastErrorReportTime'] = undefined;

/**
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1OsVersion} lastOsVersion
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['lastOsVersion'] = undefined;

/**
 * Location where the issue happened. Depending on the type this can be either: * APPLICATION_NOT_RESPONDING: the name of the activity or service that stopped responding. * CRASH: the likely method name that caused the error.
 * @member {String} location
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['location'] = undefined;

/**
 * Identifier. The resource name of the issue. Format: apps/{app}/{issue}
 * @member {String} name
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['name'] = undefined;

/**
 * Type of the errors grouped in this issue.
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1ErrorIssue.TypeEnum} type
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GooglePlayDeveloperReportingV1alpha1ErrorIssue['TypeEnum'] = {

    /**
     * value: "ERROR_TYPE_UNSPECIFIED"
     * @const
     */
    "ERROR_TYPE_UNSPECIFIED": "ERROR_TYPE_UNSPECIFIED",

    /**
     * value: "APPLICATION_NOT_RESPONDING"
     * @const
     */
    "APPLICATION_NOT_RESPONDING": "APPLICATION_NOT_RESPONDING",

    /**
     * value: "CRASH"
     * @const
     */
    "CRASH": "CRASH"
};



export default GooglePlayDeveloperReportingV1alpha1ErrorIssue;

