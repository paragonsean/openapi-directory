/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePlayDeveloperReportingV1alpha1FreshnessInfo from './GooglePlayDeveloperReportingV1alpha1FreshnessInfo';

/**
 * The GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet model module.
 * @module model/GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet
 * @version v1alpha1
 */
class GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet {
    /**
     * Constructs a new <code>GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet</code>.
     * Singleton resource representing the set of Slow Rendering metrics. This metric set contains low-level rendering data captured by SurafeFlinger. Sessions are evaluated based on the present-to-present histogram of frames handled by any SurfaceFlinger layer owned by the app. A slow session is a session where more than 25% of frames for the session did not meet the metric&#39;s target frame rate (either 20fps, or 30fps). *NOTE:* This metric set is only available for games. **Supported aggregation periods:** * DAILY: metrics are aggregated in calendar date intervals. Due to historical constraints, the only supported timezone is &#x60;America/Los_Angeles&#x60;. **Supported metrics:** * &#x60;slowRenderingRate20Fps&#x60; (&#x60;google.type.Decimal&#x60;): Percentage of distinct users in the aggregation period that had slow rendering. * &#x60;slowRenderingRate20Fps7dUserWeighted&#x60; (&#x60;google.type.Decimal&#x60;): Rolling average value of &#x60;slowRenderingRate20Fps&#x60; in the last 7 days. The daily values are weighted by the count of distinct users for the day. * &#x60;slowRenderingRate20Fps28dUserWeighted&#x60; (&#x60;google.type.Decimal&#x60;): Rolling average value of &#x60;slowRenderingRate20Fps&#x60; in the last 28 days. The daily values are weighted by the count of distinct users for the day. * &#x60;slowRenderingRate30Fps&#x60; (&#x60;google.type.Decimal&#x60;): Percentage of distinct users in the aggregation period that had slow rendering. * &#x60;slowRenderingRate30Fps7dUserWeighted&#x60; (&#x60;google.type.Decimal&#x60;): Rolling average value of &#x60;slowRenderingRate30Fps&#x60; in the last 7 days. The daily values are weighted by the count of distinct users for the day. * &#x60;slowRenderingRate30Fps28dUserWeighted&#x60; (&#x60;google.type.Decimal&#x60;): Rolling average value of &#x60;slowRenderingRate30Fps&#x60; in the last 28 days. The daily values are weighted by the count of distinct users for the day. * &#x60;distinctUsers&#x60; (&#x60;google.type.Decimal&#x60;): Count of distinct users in the aggregation period that were used as normalization value for the &#x60;slowRenderingRate20Fps&#x60;/&#x60;slowRenderingRate30Fps&#x60; metric. A user is counted in this metric if their app rendered any frames. Care must be taken not to aggregate this count further, as it may result in users being counted multiple times. The value is rounded to the nearest multiple of 10, 100, 1,000 or 1,000,000, depending on the magnitude of the value. **Supported dimensions:** * &#x60;apiLevel&#x60; (string): the API level of Android that was running on the user&#39;s device, e.g., 26. * &#x60;versionCode&#x60; (int64): version of the app that was running on the user&#39;s device. * &#x60;deviceModel&#x60; (string): unique identifier of the user&#39;s device model. The form of the identifier is &#39;deviceBrand/device&#39;, where deviceBrand corresponds to Build.BRAND and device corresponds to Build.DEVICE, e.g., google/coral. * &#x60;deviceBrand&#x60; (string): unique identifier of the user&#39;s device brand, e.g., google. * &#x60;deviceType&#x60; (string): the type (also known as form factor) of the user&#39;s device, e.g., PHONE. * &#x60;countryCode&#x60; (string): the country or region of the user&#39;s device based on their IP address, represented as a 2-letter ISO-3166 code (e.g. US for the United States). * &#x60;deviceRamBucket&#x60; (int64): RAM of the device, in MB, in buckets (3GB, 4GB, etc.). * &#x60;deviceSocMake&#x60; (string): Make of the device&#39;s primary system-on-chip, e.g., Samsung. [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER) * &#x60;deviceSocModel&#x60; (string): Model of the device&#39;s primary system-on-chip, e.g., \&quot;Exynos 2100\&quot;. [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL) * &#x60;deviceCpuMake&#x60; (string): Make of the device&#39;s CPU, e.g., Qualcomm. * &#x60;deviceCpuModel&#x60; (string): Model of the device&#39;s CPU, e.g., \&quot;Kryo 240\&quot;. * &#x60;deviceGpuMake&#x60; (string): Make of the device&#39;s GPU, e.g., ARM. * &#x60;deviceGpuModel&#x60; (string): Model of the device&#39;s GPU, e.g., Mali. * &#x60;deviceGpuVersion&#x60; (string): Version of the device&#39;s GPU, e.g., T750. * &#x60;deviceVulkanVersion&#x60; (string): Vulkan version of the device, e.g., \&quot;4198400\&quot;. * &#x60;deviceGlEsVersion&#x60; (string): OpenGL ES version of the device, e.g., \&quot;196610\&quot;. * &#x60;deviceScreenSize&#x60; (string): Screen size of the device, e.g., NORMAL, LARGE. * &#x60;deviceScreenDpi&#x60; (string): Screen density of the device, e.g., mdpi, hdpi. **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app.
     * @alias module:model/GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet
     */
    constructor() { 
        
        GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet} obj Optional instance to populate.
     * @return {module:model/GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet} The populated <code>GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet();

            if (data.hasOwnProperty('freshnessInfo')) {
                obj['freshnessInfo'] = GooglePlayDeveloperReportingV1alpha1FreshnessInfo.constructFromObject(data['freshnessInfo']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet</code>.
     */
    static validateJSON(data) {
        // validate the optional field `freshnessInfo`
        if (data['freshnessInfo']) { // data not null
          GooglePlayDeveloperReportingV1alpha1FreshnessInfo.validateJSON(data['freshnessInfo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1FreshnessInfo} freshnessInfo
 */
GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet.prototype['freshnessInfo'] = undefined;

/**
 * Identifier. The resource name. Format: apps/{app}/slowRenderingRateMetricSet
 * @member {String} name
 */
GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet.prototype['name'] = undefined;






export default GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet;

