/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GooglePlayDeveloperReportingV1alpha1AppVersion from './GooglePlayDeveloperReportingV1alpha1AppVersion';
import GooglePlayDeveloperReportingV1alpha1DeviceModelSummary from './GooglePlayDeveloperReportingV1alpha1DeviceModelSummary';
import GooglePlayDeveloperReportingV1alpha1OsVersion from './GooglePlayDeveloperReportingV1alpha1OsVersion';

/**
 * The GooglePlayDeveloperReportingV1alpha1ErrorReport model module.
 * @module model/GooglePlayDeveloperReportingV1alpha1ErrorReport
 * @version v1alpha1
 */
class GooglePlayDeveloperReportingV1alpha1ErrorReport {
    /**
     * Constructs a new <code>GooglePlayDeveloperReportingV1alpha1ErrorReport</code>.
     * An error report received for an app. There reports are produced by the Android platform code when a (potentially fatal) error condition is detected. Identical reports from many users will be deduplicated and coalesced into a single ErrorReport. **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app.
     * @alias module:model/GooglePlayDeveloperReportingV1alpha1ErrorReport
     */
    constructor() { 
        
        GooglePlayDeveloperReportingV1alpha1ErrorReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GooglePlayDeveloperReportingV1alpha1ErrorReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GooglePlayDeveloperReportingV1alpha1ErrorReport} obj Optional instance to populate.
     * @return {module:model/GooglePlayDeveloperReportingV1alpha1ErrorReport} The populated <code>GooglePlayDeveloperReportingV1alpha1ErrorReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GooglePlayDeveloperReportingV1alpha1ErrorReport();

            if (data.hasOwnProperty('appVersion')) {
                obj['appVersion'] = GooglePlayDeveloperReportingV1alpha1AppVersion.constructFromObject(data['appVersion']);
            }
            if (data.hasOwnProperty('deviceModel')) {
                obj['deviceModel'] = GooglePlayDeveloperReportingV1alpha1DeviceModelSummary.constructFromObject(data['deviceModel']);
            }
            if (data.hasOwnProperty('eventTime')) {
                obj['eventTime'] = ApiClient.convertToType(data['eventTime'], 'String');
            }
            if (data.hasOwnProperty('issue')) {
                obj['issue'] = ApiClient.convertToType(data['issue'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('osVersion')) {
                obj['osVersion'] = GooglePlayDeveloperReportingV1alpha1OsVersion.constructFromObject(data['osVersion']);
            }
            if (data.hasOwnProperty('reportText')) {
                obj['reportText'] = ApiClient.convertToType(data['reportText'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('vcsInformation')) {
                obj['vcsInformation'] = ApiClient.convertToType(data['vcsInformation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GooglePlayDeveloperReportingV1alpha1ErrorReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GooglePlayDeveloperReportingV1alpha1ErrorReport</code>.
     */
    static validateJSON(data) {
        // validate the optional field `appVersion`
        if (data['appVersion']) { // data not null
          GooglePlayDeveloperReportingV1alpha1AppVersion.validateJSON(data['appVersion']);
        }
        // validate the optional field `deviceModel`
        if (data['deviceModel']) { // data not null
          GooglePlayDeveloperReportingV1alpha1DeviceModelSummary.validateJSON(data['deviceModel']);
        }
        // ensure the json data is a string
        if (data['eventTime'] && !(typeof data['eventTime'] === 'string' || data['eventTime'] instanceof String)) {
            throw new Error("Expected the field `eventTime` to be a primitive type in the JSON string but got " + data['eventTime']);
        }
        // ensure the json data is a string
        if (data['issue'] && !(typeof data['issue'] === 'string' || data['issue'] instanceof String)) {
            throw new Error("Expected the field `issue` to be a primitive type in the JSON string but got " + data['issue']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `osVersion`
        if (data['osVersion']) { // data not null
          GooglePlayDeveloperReportingV1alpha1OsVersion.validateJSON(data['osVersion']);
        }
        // ensure the json data is a string
        if (data['reportText'] && !(typeof data['reportText'] === 'string' || data['reportText'] instanceof String)) {
            throw new Error("Expected the field `reportText` to be a primitive type in the JSON string but got " + data['reportText']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['vcsInformation'] && !(typeof data['vcsInformation'] === 'string' || data['vcsInformation'] instanceof String)) {
            throw new Error("Expected the field `vcsInformation` to be a primitive type in the JSON string but got " + data['vcsInformation']);
        }

        return true;
    }


}



/**
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1AppVersion} appVersion
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport.prototype['appVersion'] = undefined;

/**
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1DeviceModelSummary} deviceModel
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport.prototype['deviceModel'] = undefined;

/**
 * Start of the hour during which the latest event in this error report occurred.
 * @member {String} eventTime
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport.prototype['eventTime'] = undefined;

/**
 * The issue this report was associated with. **Please note:** this resource is currently in Alpha. There could be changes to the issue grouping that would result in similar but more recent error reports being assigned to a different issue.
 * @member {String} issue
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport.prototype['issue'] = undefined;

/**
 * The resource name of the report. Format: apps/{app}/{report}
 * @member {String} name
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport.prototype['name'] = undefined;

/**
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1OsVersion} osVersion
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport.prototype['osVersion'] = undefined;

/**
 * Textual representation of the error report. These textual reports are produced by the platform. The reports are then sanitized and filtered to remove any potentially sensitive information. Although their format is fairly stable, they are not entirely meant for machine consumption and we cannot guarantee that there won't be subtle changes to the formatting that may break systems trying to parse information out of the reports.
 * @member {String} reportText
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport.prototype['reportText'] = undefined;

/**
 * Type of the error for which this report was generated.
 * @member {module:model/GooglePlayDeveloperReportingV1alpha1ErrorReport.TypeEnum} type
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport.prototype['type'] = undefined;

/**
 * Version control system information from BUNDLE-METADATA/version-control-info.textproto or META-INF/version-control-info.textproto of the app bundle or APK, respectively.
 * @member {String} vcsInformation
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport.prototype['vcsInformation'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GooglePlayDeveloperReportingV1alpha1ErrorReport['TypeEnum'] = {

    /**
     * value: "ERROR_TYPE_UNSPECIFIED"
     * @const
     */
    "ERROR_TYPE_UNSPECIFIED": "ERROR_TYPE_UNSPECIFIED",

    /**
     * value: "APPLICATION_NOT_RESPONDING"
     * @const
     */
    "APPLICATION_NOT_RESPONDING": "APPLICATION_NOT_RESPONDING",

    /**
     * value: "CRASH"
     * @const
     */
    "CRASH": "CRASH"
};



export default GooglePlayDeveloperReportingV1alpha1ErrorReport;

