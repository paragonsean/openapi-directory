/**
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetRequest from '../model/GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetRequest';
import GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetResponse from '../model/GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetResponse';
import GooglePlayDeveloperReportingV1alpha1SearchErrorIssuesResponse from '../model/GooglePlayDeveloperReportingV1alpha1SearchErrorIssuesResponse';
import GooglePlayDeveloperReportingV1alpha1SearchErrorReportsResponse from '../model/GooglePlayDeveloperReportingV1alpha1SearchErrorReportsResponse';
import GooglePlayDeveloperReportingV1alpha1StuckBackgroundWakelockRateMetricSet from '../model/GooglePlayDeveloperReportingV1alpha1StuckBackgroundWakelockRateMetricSet';

/**
* Vitals service.
* @module api/VitalsApi
* @version v1alpha1
*/
export default class VitalsApi {

    /**
    * Constructs a new VitalsApi. 
    * @alias module:api/VitalsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the playdeveloperreportingVitalsErrorsIssuesSearch operation.
     * @callback module:api/VitalsApi~playdeveloperreportingVitalsErrorsIssuesSearchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GooglePlayDeveloperReportingV1alpha1SearchErrorIssuesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Searches all error issues in which reports have been grouped.
     * @param {String} parent Required. Parent resource of the error issues, indicating the application for which they were received. Format: apps/{app}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] A selection predicate to retrieve only a subset of the issues. Counts in the returned error issues will only reflect occurrences that matched the filter. For filtering basics, please check [AIP-160](https://google.aip.dev/160). ** Supported field names:** * `apiLevel`: Matches error issues that occurred in the requested Android versions (specified as the numeric API level) only. Example: `apiLevel = 28 OR apiLevel = 29`. * `versionCode`: Matches error issues that occurred in the requested app version codes only. Example: `versionCode = 123 OR versionCode = 456`. * `deviceModel`: Matches error issues that occurred in the requested devices. Example: `deviceModel = \"google/walleye\" OR deviceModel = \"google/marlin\"`. * `deviceBrand`: Matches error issues that occurred in the requested device brands. Example: `deviceBrand = \"Google\". * `deviceType`: Matches error issues that occurred in the requested device types. Example: `deviceType = \"PHONE\"`. * `errorIssueType`: Matches error issues of the requested types only. Valid candidates: `CRASH`, `ANR`. Example: `errorIssueType = CRASH OR errorIssueType = ANR`. * `appProcessState`: Matches error issues on the process state of an app, indicating whether an app runs in the foreground (user-visible) or background. Valid candidates: `FOREGROUND`, `BACKGROUND`. Example: `appProcessState = FOREGROUND`. * `isUserPerceived`: Matches error issues that are user-perceived. It is not accompanied by any operators. Example: `isUserPerceived`. ** Supported operators:** * Comparison operators: The only supported comparison operator is equality. The filtered field must appear on the left hand side of the comparison. * Logical Operators: Logical operators `AND` and `OR` can be used to build complex filters following a conjunctive normal form (CNF), i.e., conjunctions of disjunctions. The `OR` operator takes precedence over `AND` so the use of parenthesis is not necessary when building CNF. The `OR` operator is only supported to build disjunctions that apply to the same field, e.g., `versionCode = 123 OR errorIssueType = ANR` is not a valid filter. ** Examples ** Some valid filtering expressions: * `versionCode = 123 AND errorIssueType = ANR` * `versionCode = 123 AND errorIssueType = OR errorIssueType = CRASH` * `versionCode = 123 AND (errorIssueType = OR errorIssueType = CRASH)`
     * @param {Number} [intervalEndTimeDay] Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.
     * @param {Number} [intervalEndTimeHours] Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.
     * @param {Number} [intervalEndTimeMinutes] Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
     * @param {Number} [intervalEndTimeMonth] Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
     * @param {Number} [intervalEndTimeNanos] Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
     * @param {Number} [intervalEndTimeSeconds] Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.
     * @param {String} [intervalEndTimeTimeZoneId] IANA Time Zone Database time zone, e.g. \"America/New_York\".
     * @param {String} [intervalEndTimeTimeZoneVersion] Optional. IANA Time Zone Database version number, e.g. \"2019a\".
     * @param {String} [intervalEndTimeUtcOffset] UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.
     * @param {Number} [intervalEndTimeYear] Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.
     * @param {Number} [intervalStartTimeDay] Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.
     * @param {Number} [intervalStartTimeHours] Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.
     * @param {Number} [intervalStartTimeMinutes] Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
     * @param {Number} [intervalStartTimeMonth] Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
     * @param {Number} [intervalStartTimeNanos] Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
     * @param {Number} [intervalStartTimeSeconds] Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.
     * @param {String} [intervalStartTimeTimeZoneId] IANA Time Zone Database time zone, e.g. \"America/New_York\".
     * @param {String} [intervalStartTimeTimeZoneVersion] Optional. IANA Time Zone Database version number, e.g. \"2019a\".
     * @param {String} [intervalStartTimeUtcOffset] UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.
     * @param {Number} [intervalStartTimeYear] Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.
     * @param {String} [orderBy] Specifies a field that will be used to order the results. ** Supported dimensions:** * `errorReportCount`: Orders issues by number of error reports. * `distinctUsers`: Orders issues by number of unique affected users. ** Supported operations:** * `asc` for ascending order. * `desc` for descending order. Format: A field and an operation, e.g., `errorReportCount desc` *Note:* currently only one field is supported at a time.
     * @param {Number} [pageSize] The maximum number of error issues to return. The service may return fewer than this value. If unspecified, at most 50 error issues will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to the request must match the call that provided the page token.
     * @param {module:api/VitalsApi~playdeveloperreportingVitalsErrorsIssuesSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GooglePlayDeveloperReportingV1alpha1SearchErrorIssuesResponse}
     */
    playdeveloperreportingVitalsErrorsIssuesSearch(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling playdeveloperreportingVitalsErrorsIssuesSearch");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'interval.endTime.day': opts['intervalEndTimeDay'],
        'interval.endTime.hours': opts['intervalEndTimeHours'],
        'interval.endTime.minutes': opts['intervalEndTimeMinutes'],
        'interval.endTime.month': opts['intervalEndTimeMonth'],
        'interval.endTime.nanos': opts['intervalEndTimeNanos'],
        'interval.endTime.seconds': opts['intervalEndTimeSeconds'],
        'interval.endTime.timeZone.id': opts['intervalEndTimeTimeZoneId'],
        'interval.endTime.timeZone.version': opts['intervalEndTimeTimeZoneVersion'],
        'interval.endTime.utcOffset': opts['intervalEndTimeUtcOffset'],
        'interval.endTime.year': opts['intervalEndTimeYear'],
        'interval.startTime.day': opts['intervalStartTimeDay'],
        'interval.startTime.hours': opts['intervalStartTimeHours'],
        'interval.startTime.minutes': opts['intervalStartTimeMinutes'],
        'interval.startTime.month': opts['intervalStartTimeMonth'],
        'interval.startTime.nanos': opts['intervalStartTimeNanos'],
        'interval.startTime.seconds': opts['intervalStartTimeSeconds'],
        'interval.startTime.timeZone.id': opts['intervalStartTimeTimeZoneId'],
        'interval.startTime.timeZone.version': opts['intervalStartTimeTimeZoneVersion'],
        'interval.startTime.utcOffset': opts['intervalStartTimeUtcOffset'],
        'interval.startTime.year': opts['intervalStartTimeYear'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GooglePlayDeveloperReportingV1alpha1SearchErrorIssuesResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/errorIssues:search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the playdeveloperreportingVitalsErrorsReportsSearch operation.
     * @callback module:api/VitalsApi~playdeveloperreportingVitalsErrorsReportsSearchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GooglePlayDeveloperReportingV1alpha1SearchErrorReportsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Searches all error reports received for an app.
     * @param {String} parent Required. Parent resource of the reports, indicating the application for which they were received. Format: apps/{app}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] A selection predicate to retrieve only a subset of the reports. For filtering basics, please check [AIP-160](https://google.aip.dev/160). ** Supported field names:** * `apiLevel`: Matches error reports that occurred in the requested Android versions (specified as the numeric API level) only. Example: `apiLevel = 28 OR apiLevel = 29`. * `versionCode`: Matches error reports that occurred in the requested app version codes only. Example: `versionCode = 123 OR versionCode = 456`. * `deviceModel`: Matches error issues that occurred in the requested devices. Example: `deviceModel = \"google/walleye\" OR deviceModel = \"google/marlin\"`. * `deviceBrand`: Matches error issues that occurred in the requested device brands. Example: `deviceBrand = \"Google\". * `deviceType`: Matches error reports that occurred in the requested device types. Example: `deviceType = \"PHONE\"`. * `errorIssueType`: Matches error reports of the requested types only. Valid candidates: `JAVA_CRASH`, `NATIVE_CRASH`, `ANR`. Example: `errorIssueType = JAVA_CRASH OR errorIssueType = NATIVE_CRASH`. * `errorIssueId`: Matches error reports belonging to the requested error issue ids only. Example: `errorIssueId = 1234 OR errorIssueId = 4567`. * `appProcessState`: Matches error reports on the process state of an app, indicating whether an app runs in the foreground (user-visible) or background. Valid candidates: `FOREGROUND`, `BACKGROUND`. Example: `appProcessState = FOREGROUND`. * `isUserPerceived`: Matches error reports that are user-perceived. It is not accompanied by any operators. Example: `isUserPerceived`. ** Supported operators:** * Comparison operators: The only supported comparison operator is equality. The filtered field must appear on the left hand side of the comparison. * Logical Operators: Logical operators `AND` and `OR` can be used to build complex filters following a conjunctive normal form (CNF), i.e., conjunctions of disjunctions. The `OR` operator takes precedence over `AND` so the use of parenthesis is not necessary when building CNF. The `OR` operator is only supported to build disjunctions that apply to the same field, e.g., `versionCode = 123 OR versionCode = ANR`. The filter expression `versionCode = 123 OR errorIssueType = ANR` is not valid. ** Examples ** Some valid filtering expressions: * `versionCode = 123 AND errorIssueType = ANR` * `versionCode = 123 AND errorIssueType = OR errorIssueType = CRASH` * `versionCode = 123 AND (errorIssueType = OR errorIssueType = CRASH)`
     * @param {Number} [intervalEndTimeDay] Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.
     * @param {Number} [intervalEndTimeHours] Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.
     * @param {Number} [intervalEndTimeMinutes] Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
     * @param {Number} [intervalEndTimeMonth] Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
     * @param {Number} [intervalEndTimeNanos] Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
     * @param {Number} [intervalEndTimeSeconds] Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.
     * @param {String} [intervalEndTimeTimeZoneId] IANA Time Zone Database time zone, e.g. \"America/New_York\".
     * @param {String} [intervalEndTimeTimeZoneVersion] Optional. IANA Time Zone Database version number, e.g. \"2019a\".
     * @param {String} [intervalEndTimeUtcOffset] UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.
     * @param {Number} [intervalEndTimeYear] Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.
     * @param {Number} [intervalStartTimeDay] Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.
     * @param {Number} [intervalStartTimeHours] Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.
     * @param {Number} [intervalStartTimeMinutes] Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
     * @param {Number} [intervalStartTimeMonth] Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
     * @param {Number} [intervalStartTimeNanos] Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
     * @param {Number} [intervalStartTimeSeconds] Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.
     * @param {String} [intervalStartTimeTimeZoneId] IANA Time Zone Database time zone, e.g. \"America/New_York\".
     * @param {String} [intervalStartTimeTimeZoneVersion] Optional. IANA Time Zone Database version number, e.g. \"2019a\".
     * @param {String} [intervalStartTimeUtcOffset] UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.
     * @param {Number} [intervalStartTimeYear] Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.
     * @param {Number} [pageSize] The maximum number of reports to return. The service may return fewer than this value. If unspecified, at most 50 reports will be returned. The maximum value is 100; values above 100 will be coerced to 100.
     * @param {String} [pageToken] A page token, received from a previous `SearchErrorReports` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `SearchErrorReports` must match the call that provided the page token.
     * @param {module:api/VitalsApi~playdeveloperreportingVitalsErrorsReportsSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GooglePlayDeveloperReportingV1alpha1SearchErrorReportsResponse}
     */
    playdeveloperreportingVitalsErrorsReportsSearch(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling playdeveloperreportingVitalsErrorsReportsSearch");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'interval.endTime.day': opts['intervalEndTimeDay'],
        'interval.endTime.hours': opts['intervalEndTimeHours'],
        'interval.endTime.minutes': opts['intervalEndTimeMinutes'],
        'interval.endTime.month': opts['intervalEndTimeMonth'],
        'interval.endTime.nanos': opts['intervalEndTimeNanos'],
        'interval.endTime.seconds': opts['intervalEndTimeSeconds'],
        'interval.endTime.timeZone.id': opts['intervalEndTimeTimeZoneId'],
        'interval.endTime.timeZone.version': opts['intervalEndTimeTimeZoneVersion'],
        'interval.endTime.utcOffset': opts['intervalEndTimeUtcOffset'],
        'interval.endTime.year': opts['intervalEndTimeYear'],
        'interval.startTime.day': opts['intervalStartTimeDay'],
        'interval.startTime.hours': opts['intervalStartTimeHours'],
        'interval.startTime.minutes': opts['intervalStartTimeMinutes'],
        'interval.startTime.month': opts['intervalStartTimeMonth'],
        'interval.startTime.nanos': opts['intervalStartTimeNanos'],
        'interval.startTime.seconds': opts['intervalStartTimeSeconds'],
        'interval.startTime.timeZone.id': opts['intervalStartTimeTimeZoneId'],
        'interval.startTime.timeZone.version': opts['intervalStartTimeTimeZoneVersion'],
        'interval.startTime.utcOffset': opts['intervalStartTimeUtcOffset'],
        'interval.startTime.year': opts['intervalStartTimeYear'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GooglePlayDeveloperReportingV1alpha1SearchErrorReportsResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/errorReports:search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the playdeveloperreportingVitalsStuckbackgroundwakelockrateGet operation.
     * @callback module:api/VitalsApi~playdeveloperreportingVitalsStuckbackgroundwakelockrateGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GooglePlayDeveloperReportingV1alpha1StuckBackgroundWakelockRateMetricSet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Describes the properties of the metric set.
     * @param {String} name Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/VitalsApi~playdeveloperreportingVitalsStuckbackgroundwakelockrateGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GooglePlayDeveloperReportingV1alpha1StuckBackgroundWakelockRateMetricSet}
     */
    playdeveloperreportingVitalsStuckbackgroundwakelockrateGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling playdeveloperreportingVitalsStuckbackgroundwakelockrateGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GooglePlayDeveloperReportingV1alpha1StuckBackgroundWakelockRateMetricSet;
      return this.apiClient.callApi(
        '/v1alpha1/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the playdeveloperreportingVitalsStuckbackgroundwakelockrateQuery operation.
     * @callback module:api/VitalsApi~playdeveloperreportingVitalsStuckbackgroundwakelockrateQueryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Queries the metrics in the metric set.
     * @param {String} name Required. The resource name. Format: apps/{app}/stuckBackgroundWakelockRateMetricSet
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetRequest} [googlePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetRequest] 
     * @param {module:api/VitalsApi~playdeveloperreportingVitalsStuckbackgroundwakelockrateQueryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetResponse}
     */
    playdeveloperreportingVitalsStuckbackgroundwakelockrateQuery(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googlePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling playdeveloperreportingVitalsStuckbackgroundwakelockrateQuery");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{name}:query', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
