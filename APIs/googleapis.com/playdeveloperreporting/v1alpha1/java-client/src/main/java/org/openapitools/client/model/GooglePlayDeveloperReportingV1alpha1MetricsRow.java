/*
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GooglePlayDeveloperReportingV1alpha1DimensionValue;
import org.openapitools.client.model.GooglePlayDeveloperReportingV1alpha1MetricValue;
import org.openapitools.client.model.GoogleTypeDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a row of dimensions and metrics.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:15.855761-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePlayDeveloperReportingV1alpha1MetricsRow {
  /**
   * Granularity of the aggregation period of the row.
   */
  @JsonAdapter(AggregationPeriodEnum.Adapter.class)
  public enum AggregationPeriodEnum {
    AGGREGATION_PERIOD_UNSPECIFIED("AGGREGATION_PERIOD_UNSPECIFIED"),
    
    HOURLY("HOURLY"),
    
    DAILY("DAILY"),
    
    FULL_RANGE("FULL_RANGE");

    private String value;

    AggregationPeriodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AggregationPeriodEnum fromValue(String value) {
      for (AggregationPeriodEnum b : AggregationPeriodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AggregationPeriodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AggregationPeriodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AggregationPeriodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AggregationPeriodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AggregationPeriodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AGGREGATION_PERIOD = "aggregationPeriod";
  @SerializedName(SERIALIZED_NAME_AGGREGATION_PERIOD)
  private AggregationPeriodEnum aggregationPeriod;

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private List<GooglePlayDeveloperReportingV1alpha1DimensionValue> dimensions = new ArrayList<>();

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private List<GooglePlayDeveloperReportingV1alpha1MetricValue> metrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private GoogleTypeDateTime startTime;

  public GooglePlayDeveloperReportingV1alpha1MetricsRow() {
  }

  public GooglePlayDeveloperReportingV1alpha1MetricsRow aggregationPeriod(AggregationPeriodEnum aggregationPeriod) {
    this.aggregationPeriod = aggregationPeriod;
    return this;
  }

  /**
   * Granularity of the aggregation period of the row.
   * @return aggregationPeriod
   */
  @javax.annotation.Nullable
  public AggregationPeriodEnum getAggregationPeriod() {
    return aggregationPeriod;
  }

  public void setAggregationPeriod(AggregationPeriodEnum aggregationPeriod) {
    this.aggregationPeriod = aggregationPeriod;
  }


  public GooglePlayDeveloperReportingV1alpha1MetricsRow dimensions(List<GooglePlayDeveloperReportingV1alpha1DimensionValue> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public GooglePlayDeveloperReportingV1alpha1MetricsRow addDimensionsItem(GooglePlayDeveloperReportingV1alpha1DimensionValue dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

  /**
   * Dimension columns in the row.
   * @return dimensions
   */
  @javax.annotation.Nullable
  public List<GooglePlayDeveloperReportingV1alpha1DimensionValue> getDimensions() {
    return dimensions;
  }

  public void setDimensions(List<GooglePlayDeveloperReportingV1alpha1DimensionValue> dimensions) {
    this.dimensions = dimensions;
  }


  public GooglePlayDeveloperReportingV1alpha1MetricsRow metrics(List<GooglePlayDeveloperReportingV1alpha1MetricValue> metrics) {
    this.metrics = metrics;
    return this;
  }

  public GooglePlayDeveloperReportingV1alpha1MetricsRow addMetricsItem(GooglePlayDeveloperReportingV1alpha1MetricValue metricsItem) {
    if (this.metrics == null) {
      this.metrics = new ArrayList<>();
    }
    this.metrics.add(metricsItem);
    return this;
  }

  /**
   * Metric columns in the row.
   * @return metrics
   */
  @javax.annotation.Nullable
  public List<GooglePlayDeveloperReportingV1alpha1MetricValue> getMetrics() {
    return metrics;
  }

  public void setMetrics(List<GooglePlayDeveloperReportingV1alpha1MetricValue> metrics) {
    this.metrics = metrics;
  }


  public GooglePlayDeveloperReportingV1alpha1MetricsRow startTime(GoogleTypeDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public GoogleTypeDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(GoogleTypeDateTime startTime) {
    this.startTime = startTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePlayDeveloperReportingV1alpha1MetricsRow googlePlayDeveloperReportingV1alpha1MetricsRow = (GooglePlayDeveloperReportingV1alpha1MetricsRow) o;
    return Objects.equals(this.aggregationPeriod, googlePlayDeveloperReportingV1alpha1MetricsRow.aggregationPeriod) &&
        Objects.equals(this.dimensions, googlePlayDeveloperReportingV1alpha1MetricsRow.dimensions) &&
        Objects.equals(this.metrics, googlePlayDeveloperReportingV1alpha1MetricsRow.metrics) &&
        Objects.equals(this.startTime, googlePlayDeveloperReportingV1alpha1MetricsRow.startTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregationPeriod, dimensions, metrics, startTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePlayDeveloperReportingV1alpha1MetricsRow {\n");
    sb.append("    aggregationPeriod: ").append(toIndentedString(aggregationPeriod)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aggregationPeriod");
    openapiFields.add("dimensions");
    openapiFields.add("metrics");
    openapiFields.add("startTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePlayDeveloperReportingV1alpha1MetricsRow
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePlayDeveloperReportingV1alpha1MetricsRow.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePlayDeveloperReportingV1alpha1MetricsRow is not found in the empty JSON string", GooglePlayDeveloperReportingV1alpha1MetricsRow.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePlayDeveloperReportingV1alpha1MetricsRow.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePlayDeveloperReportingV1alpha1MetricsRow` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aggregationPeriod") != null && !jsonObj.get("aggregationPeriod").isJsonNull()) && !jsonObj.get("aggregationPeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aggregationPeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aggregationPeriod").toString()));
      }
      // validate the optional field `aggregationPeriod`
      if (jsonObj.get("aggregationPeriod") != null && !jsonObj.get("aggregationPeriod").isJsonNull()) {
        AggregationPeriodEnum.validateJsonElement(jsonObj.get("aggregationPeriod"));
      }
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull()) {
        JsonArray jsonArraydimensions = jsonObj.getAsJsonArray("dimensions");
        if (jsonArraydimensions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dimensions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dimensions` to be an array in the JSON string but got `%s`", jsonObj.get("dimensions").toString()));
          }

          // validate the optional field `dimensions` (array)
          for (int i = 0; i < jsonArraydimensions.size(); i++) {
            GooglePlayDeveloperReportingV1alpha1DimensionValue.validateJsonElement(jsonArraydimensions.get(i));
          };
        }
      }
      if (jsonObj.get("metrics") != null && !jsonObj.get("metrics").isJsonNull()) {
        JsonArray jsonArraymetrics = jsonObj.getAsJsonArray("metrics");
        if (jsonArraymetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("metrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `metrics` to be an array in the JSON string but got `%s`", jsonObj.get("metrics").toString()));
          }

          // validate the optional field `metrics` (array)
          for (int i = 0; i < jsonArraymetrics.size(); i++) {
            GooglePlayDeveloperReportingV1alpha1MetricValue.validateJsonElement(jsonArraymetrics.get(i));
          };
        }
      }
      // validate the optional field `startTime`
      if (jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) {
        GoogleTypeDateTime.validateJsonElement(jsonObj.get("startTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePlayDeveloperReportingV1alpha1MetricsRow.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePlayDeveloperReportingV1alpha1MetricsRow' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePlayDeveloperReportingV1alpha1MetricsRow> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePlayDeveloperReportingV1alpha1MetricsRow.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePlayDeveloperReportingV1alpha1MetricsRow>() {
           @Override
           public void write(JsonWriter out, GooglePlayDeveloperReportingV1alpha1MetricsRow value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePlayDeveloperReportingV1alpha1MetricsRow read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePlayDeveloperReportingV1alpha1MetricsRow given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePlayDeveloperReportingV1alpha1MetricsRow
   * @throws IOException if the JSON string is invalid with respect to GooglePlayDeveloperReportingV1alpha1MetricsRow
   */
  public static GooglePlayDeveloperReportingV1alpha1MetricsRow fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePlayDeveloperReportingV1alpha1MetricsRow.class);
  }

  /**
   * Convert an instance of GooglePlayDeveloperReportingV1alpha1MetricsRow to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

