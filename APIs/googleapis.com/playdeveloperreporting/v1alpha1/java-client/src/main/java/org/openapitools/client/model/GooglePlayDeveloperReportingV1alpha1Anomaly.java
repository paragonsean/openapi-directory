/*
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GooglePlayDeveloperReportingV1alpha1DimensionValue;
import org.openapitools.client.model.GooglePlayDeveloperReportingV1alpha1MetricValue;
import org.openapitools.client.model.GooglePlayDeveloperReportingV1alpha1TimelineSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents an anomaly detected in a dataset. Our anomaly detection systems flag datapoints in a time series that fall outside of and expected range derived from historical data. Although those expected ranges have an upper and a lower bound, we only flag anomalies when the data has become unexpectedly _worse_, which usually corresponds to the case where the metric crosses the upper bound. Multiple contiguous datapoints in a timeline outside of the expected range will be grouped into a single anomaly. Therefore, an anomaly represents effectively a segment of a metric&#39;s timeline. The information stored in the &#x60;timeline_spec&#x60;, &#x60;dimensions&#x60; and &#x60;metric&#x60; can be used to fetch a full timeline with extended ragne for context. **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:15.855761-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePlayDeveloperReportingV1alpha1Anomaly {
  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private List<GooglePlayDeveloperReportingV1alpha1DimensionValue> dimensions = new ArrayList<>();

  public static final String SERIALIZED_NAME_METRIC = "metric";
  @SerializedName(SERIALIZED_NAME_METRIC)
  private GooglePlayDeveloperReportingV1alpha1MetricValue metric;

  public static final String SERIALIZED_NAME_METRIC_SET = "metricSet";
  @SerializedName(SERIALIZED_NAME_METRIC_SET)
  private String metricSet;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TIMELINE_SPEC = "timelineSpec";
  @SerializedName(SERIALIZED_NAME_TIMELINE_SPEC)
  private GooglePlayDeveloperReportingV1alpha1TimelineSpec timelineSpec;

  public GooglePlayDeveloperReportingV1alpha1Anomaly() {
  }

  public GooglePlayDeveloperReportingV1alpha1Anomaly dimensions(List<GooglePlayDeveloperReportingV1alpha1DimensionValue> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public GooglePlayDeveloperReportingV1alpha1Anomaly addDimensionsItem(GooglePlayDeveloperReportingV1alpha1DimensionValue dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new ArrayList<>();
    }
    this.dimensions.add(dimensionsItem);
    return this;
  }

  /**
   * Combination of dimensions in which the anomaly was detected.
   * @return dimensions
   */
  @javax.annotation.Nullable
  public List<GooglePlayDeveloperReportingV1alpha1DimensionValue> getDimensions() {
    return dimensions;
  }

  public void setDimensions(List<GooglePlayDeveloperReportingV1alpha1DimensionValue> dimensions) {
    this.dimensions = dimensions;
  }


  public GooglePlayDeveloperReportingV1alpha1Anomaly metric(GooglePlayDeveloperReportingV1alpha1MetricValue metric) {
    this.metric = metric;
    return this;
  }

  /**
   * Get metric
   * @return metric
   */
  @javax.annotation.Nullable
  public GooglePlayDeveloperReportingV1alpha1MetricValue getMetric() {
    return metric;
  }

  public void setMetric(GooglePlayDeveloperReportingV1alpha1MetricValue metric) {
    this.metric = metric;
  }


  public GooglePlayDeveloperReportingV1alpha1Anomaly metricSet(String metricSet) {
    this.metricSet = metricSet;
    return this;
  }

  /**
   * Metric set resource where the anomaly was detected.
   * @return metricSet
   */
  @javax.annotation.Nullable
  public String getMetricSet() {
    return metricSet;
  }

  public void setMetricSet(String metricSet) {
    this.metricSet = metricSet;
  }


  public GooglePlayDeveloperReportingV1alpha1Anomaly name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Identifier. Name of the anomaly. Format: apps/{app}/anomalies/{anomaly}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GooglePlayDeveloperReportingV1alpha1Anomaly timelineSpec(GooglePlayDeveloperReportingV1alpha1TimelineSpec timelineSpec) {
    this.timelineSpec = timelineSpec;
    return this;
  }

  /**
   * Get timelineSpec
   * @return timelineSpec
   */
  @javax.annotation.Nullable
  public GooglePlayDeveloperReportingV1alpha1TimelineSpec getTimelineSpec() {
    return timelineSpec;
  }

  public void setTimelineSpec(GooglePlayDeveloperReportingV1alpha1TimelineSpec timelineSpec) {
    this.timelineSpec = timelineSpec;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePlayDeveloperReportingV1alpha1Anomaly googlePlayDeveloperReportingV1alpha1Anomaly = (GooglePlayDeveloperReportingV1alpha1Anomaly) o;
    return Objects.equals(this.dimensions, googlePlayDeveloperReportingV1alpha1Anomaly.dimensions) &&
        Objects.equals(this.metric, googlePlayDeveloperReportingV1alpha1Anomaly.metric) &&
        Objects.equals(this.metricSet, googlePlayDeveloperReportingV1alpha1Anomaly.metricSet) &&
        Objects.equals(this.name, googlePlayDeveloperReportingV1alpha1Anomaly.name) &&
        Objects.equals(this.timelineSpec, googlePlayDeveloperReportingV1alpha1Anomaly.timelineSpec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dimensions, metric, metricSet, name, timelineSpec);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePlayDeveloperReportingV1alpha1Anomaly {\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("    metricSet: ").append(toIndentedString(metricSet)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    timelineSpec: ").append(toIndentedString(timelineSpec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dimensions");
    openapiFields.add("metric");
    openapiFields.add("metricSet");
    openapiFields.add("name");
    openapiFields.add("timelineSpec");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePlayDeveloperReportingV1alpha1Anomaly
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePlayDeveloperReportingV1alpha1Anomaly.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePlayDeveloperReportingV1alpha1Anomaly is not found in the empty JSON string", GooglePlayDeveloperReportingV1alpha1Anomaly.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePlayDeveloperReportingV1alpha1Anomaly.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePlayDeveloperReportingV1alpha1Anomaly` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull()) {
        JsonArray jsonArraydimensions = jsonObj.getAsJsonArray("dimensions");
        if (jsonArraydimensions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("dimensions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `dimensions` to be an array in the JSON string but got `%s`", jsonObj.get("dimensions").toString()));
          }

          // validate the optional field `dimensions` (array)
          for (int i = 0; i < jsonArraydimensions.size(); i++) {
            GooglePlayDeveloperReportingV1alpha1DimensionValue.validateJsonElement(jsonArraydimensions.get(i));
          };
        }
      }
      // validate the optional field `metric`
      if (jsonObj.get("metric") != null && !jsonObj.get("metric").isJsonNull()) {
        GooglePlayDeveloperReportingV1alpha1MetricValue.validateJsonElement(jsonObj.get("metric"));
      }
      if ((jsonObj.get("metricSet") != null && !jsonObj.get("metricSet").isJsonNull()) && !jsonObj.get("metricSet").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metricSet` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metricSet").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `timelineSpec`
      if (jsonObj.get("timelineSpec") != null && !jsonObj.get("timelineSpec").isJsonNull()) {
        GooglePlayDeveloperReportingV1alpha1TimelineSpec.validateJsonElement(jsonObj.get("timelineSpec"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePlayDeveloperReportingV1alpha1Anomaly.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePlayDeveloperReportingV1alpha1Anomaly' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePlayDeveloperReportingV1alpha1Anomaly> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePlayDeveloperReportingV1alpha1Anomaly.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePlayDeveloperReportingV1alpha1Anomaly>() {
           @Override
           public void write(JsonWriter out, GooglePlayDeveloperReportingV1alpha1Anomaly value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePlayDeveloperReportingV1alpha1Anomaly read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePlayDeveloperReportingV1alpha1Anomaly given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePlayDeveloperReportingV1alpha1Anomaly
   * @throws IOException if the JSON string is invalid with respect to GooglePlayDeveloperReportingV1alpha1Anomaly
   */
  public static GooglePlayDeveloperReportingV1alpha1Anomaly fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePlayDeveloperReportingV1alpha1Anomaly.class);
  }

  /**
   * Convert an instance of GooglePlayDeveloperReportingV1alpha1Anomaly to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

