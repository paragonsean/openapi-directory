/*
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GooglePlayDeveloperReportingV1alpha1AppVersion;
import org.openapitools.client.model.GooglePlayDeveloperReportingV1alpha1OsVersion;
import org.openapitools.client.model.GoogleTypeDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A group of related ErrorReports received for an app. Similar error reports are grouped together into issues with a likely identical root cause. **Please note:** this resource is currently in Alpha. There could be changes to the issue grouping that would result in similar but more recent error reports being assigned to different issues. This could also cause some issues disappearing entirely and being replaced by new ones. **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:15.855761-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePlayDeveloperReportingV1alpha1ErrorIssue {
  public static final String SERIALIZED_NAME_CAUSE = "cause";
  @SerializedName(SERIALIZED_NAME_CAUSE)
  private String cause;

  public static final String SERIALIZED_NAME_DISTINCT_USERS = "distinctUsers";
  @SerializedName(SERIALIZED_NAME_DISTINCT_USERS)
  private String distinctUsers;

  public static final String SERIALIZED_NAME_DISTINCT_USERS_PERCENT = "distinctUsersPercent";
  @SerializedName(SERIALIZED_NAME_DISTINCT_USERS_PERCENT)
  private GoogleTypeDecimal distinctUsersPercent;

  public static final String SERIALIZED_NAME_ERROR_REPORT_COUNT = "errorReportCount";
  @SerializedName(SERIALIZED_NAME_ERROR_REPORT_COUNT)
  private String errorReportCount;

  public static final String SERIALIZED_NAME_FIRST_APP_VERSION = "firstAppVersion";
  @SerializedName(SERIALIZED_NAME_FIRST_APP_VERSION)
  private GooglePlayDeveloperReportingV1alpha1AppVersion firstAppVersion;

  public static final String SERIALIZED_NAME_FIRST_OS_VERSION = "firstOsVersion";
  @SerializedName(SERIALIZED_NAME_FIRST_OS_VERSION)
  private GooglePlayDeveloperReportingV1alpha1OsVersion firstOsVersion;

  public static final String SERIALIZED_NAME_ISSUE_URI = "issueUri";
  @SerializedName(SERIALIZED_NAME_ISSUE_URI)
  private String issueUri;

  public static final String SERIALIZED_NAME_LAST_APP_VERSION = "lastAppVersion";
  @SerializedName(SERIALIZED_NAME_LAST_APP_VERSION)
  private GooglePlayDeveloperReportingV1alpha1AppVersion lastAppVersion;

  public static final String SERIALIZED_NAME_LAST_ERROR_REPORT_TIME = "lastErrorReportTime";
  @SerializedName(SERIALIZED_NAME_LAST_ERROR_REPORT_TIME)
  private String lastErrorReportTime;

  public static final String SERIALIZED_NAME_LAST_OS_VERSION = "lastOsVersion";
  @SerializedName(SERIALIZED_NAME_LAST_OS_VERSION)
  private GooglePlayDeveloperReportingV1alpha1OsVersion lastOsVersion;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Type of the errors grouped in this issue.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ERROR_TYPE_UNSPECIFIED("ERROR_TYPE_UNSPECIFIED"),
    
    APPLICATION_NOT_RESPONDING("APPLICATION_NOT_RESPONDING"),
    
    CRASH("CRASH");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public GooglePlayDeveloperReportingV1alpha1ErrorIssue() {
  }

  public GooglePlayDeveloperReportingV1alpha1ErrorIssue cause(String cause) {
    this.cause = cause;
    return this;
  }

  /**
   * Cause of the issue. Depending on the type this can be either: * APPLICATION_NOT_RESPONDING: the type of ANR that occurred, e.g., &#39;Input dispatching timed out&#39;. * CRASH: for Java unhandled exception errors, the type of the innermost exception that was thrown, e.g., IllegalArgumentException. For signals in native code, the signal that was raised, e.g. SIGSEGV.
   * @return cause
   */
  @javax.annotation.Nullable
  public String getCause() {
    return cause;
  }

  public void setCause(String cause) {
    this.cause = cause;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue distinctUsers(String distinctUsers) {
    this.distinctUsers = distinctUsers;
    return this;
  }

  /**
   * An estimate of the number of unique users who have experienced this issue (only considering occurrences matching the filters and within the requested time period).
   * @return distinctUsers
   */
  @javax.annotation.Nullable
  public String getDistinctUsers() {
    return distinctUsers;
  }

  public void setDistinctUsers(String distinctUsers) {
    this.distinctUsers = distinctUsers;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue distinctUsersPercent(GoogleTypeDecimal distinctUsersPercent) {
    this.distinctUsersPercent = distinctUsersPercent;
    return this;
  }

  /**
   * Get distinctUsersPercent
   * @return distinctUsersPercent
   */
  @javax.annotation.Nullable
  public GoogleTypeDecimal getDistinctUsersPercent() {
    return distinctUsersPercent;
  }

  public void setDistinctUsersPercent(GoogleTypeDecimal distinctUsersPercent) {
    this.distinctUsersPercent = distinctUsersPercent;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue errorReportCount(String errorReportCount) {
    this.errorReportCount = errorReportCount;
    return this;
  }

  /**
   * The total number of error reports in this issue (only considering occurrences matching the filters and within the requested time period).
   * @return errorReportCount
   */
  @javax.annotation.Nullable
  public String getErrorReportCount() {
    return errorReportCount;
  }

  public void setErrorReportCount(String errorReportCount) {
    this.errorReportCount = errorReportCount;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue firstAppVersion(GooglePlayDeveloperReportingV1alpha1AppVersion firstAppVersion) {
    this.firstAppVersion = firstAppVersion;
    return this;
  }

  /**
   * Get firstAppVersion
   * @return firstAppVersion
   */
  @javax.annotation.Nullable
  public GooglePlayDeveloperReportingV1alpha1AppVersion getFirstAppVersion() {
    return firstAppVersion;
  }

  public void setFirstAppVersion(GooglePlayDeveloperReportingV1alpha1AppVersion firstAppVersion) {
    this.firstAppVersion = firstAppVersion;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue firstOsVersion(GooglePlayDeveloperReportingV1alpha1OsVersion firstOsVersion) {
    this.firstOsVersion = firstOsVersion;
    return this;
  }

  /**
   * Get firstOsVersion
   * @return firstOsVersion
   */
  @javax.annotation.Nullable
  public GooglePlayDeveloperReportingV1alpha1OsVersion getFirstOsVersion() {
    return firstOsVersion;
  }

  public void setFirstOsVersion(GooglePlayDeveloperReportingV1alpha1OsVersion firstOsVersion) {
    this.firstOsVersion = firstOsVersion;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue issueUri(String issueUri) {
    this.issueUri = issueUri;
    return this;
  }

  /**
   * Link to the issue in Android vitals in the Play Console.
   * @return issueUri
   */
  @javax.annotation.Nullable
  public String getIssueUri() {
    return issueUri;
  }

  public void setIssueUri(String issueUri) {
    this.issueUri = issueUri;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue lastAppVersion(GooglePlayDeveloperReportingV1alpha1AppVersion lastAppVersion) {
    this.lastAppVersion = lastAppVersion;
    return this;
  }

  /**
   * Get lastAppVersion
   * @return lastAppVersion
   */
  @javax.annotation.Nullable
  public GooglePlayDeveloperReportingV1alpha1AppVersion getLastAppVersion() {
    return lastAppVersion;
  }

  public void setLastAppVersion(GooglePlayDeveloperReportingV1alpha1AppVersion lastAppVersion) {
    this.lastAppVersion = lastAppVersion;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue lastErrorReportTime(String lastErrorReportTime) {
    this.lastErrorReportTime = lastErrorReportTime;
    return this;
  }

  /**
   * Start of the hour during which the last error report in this issue occurred.
   * @return lastErrorReportTime
   */
  @javax.annotation.Nullable
  public String getLastErrorReportTime() {
    return lastErrorReportTime;
  }

  public void setLastErrorReportTime(String lastErrorReportTime) {
    this.lastErrorReportTime = lastErrorReportTime;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue lastOsVersion(GooglePlayDeveloperReportingV1alpha1OsVersion lastOsVersion) {
    this.lastOsVersion = lastOsVersion;
    return this;
  }

  /**
   * Get lastOsVersion
   * @return lastOsVersion
   */
  @javax.annotation.Nullable
  public GooglePlayDeveloperReportingV1alpha1OsVersion getLastOsVersion() {
    return lastOsVersion;
  }

  public void setLastOsVersion(GooglePlayDeveloperReportingV1alpha1OsVersion lastOsVersion) {
    this.lastOsVersion = lastOsVersion;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Location where the issue happened. Depending on the type this can be either: * APPLICATION_NOT_RESPONDING: the name of the activity or service that stopped responding. * CRASH: the likely method name that caused the error.
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Identifier. The resource name of the issue. Format: apps/{app}/{issue}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GooglePlayDeveloperReportingV1alpha1ErrorIssue type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Type of the errors grouped in this issue.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePlayDeveloperReportingV1alpha1ErrorIssue googlePlayDeveloperReportingV1alpha1ErrorIssue = (GooglePlayDeveloperReportingV1alpha1ErrorIssue) o;
    return Objects.equals(this.cause, googlePlayDeveloperReportingV1alpha1ErrorIssue.cause) &&
        Objects.equals(this.distinctUsers, googlePlayDeveloperReportingV1alpha1ErrorIssue.distinctUsers) &&
        Objects.equals(this.distinctUsersPercent, googlePlayDeveloperReportingV1alpha1ErrorIssue.distinctUsersPercent) &&
        Objects.equals(this.errorReportCount, googlePlayDeveloperReportingV1alpha1ErrorIssue.errorReportCount) &&
        Objects.equals(this.firstAppVersion, googlePlayDeveloperReportingV1alpha1ErrorIssue.firstAppVersion) &&
        Objects.equals(this.firstOsVersion, googlePlayDeveloperReportingV1alpha1ErrorIssue.firstOsVersion) &&
        Objects.equals(this.issueUri, googlePlayDeveloperReportingV1alpha1ErrorIssue.issueUri) &&
        Objects.equals(this.lastAppVersion, googlePlayDeveloperReportingV1alpha1ErrorIssue.lastAppVersion) &&
        Objects.equals(this.lastErrorReportTime, googlePlayDeveloperReportingV1alpha1ErrorIssue.lastErrorReportTime) &&
        Objects.equals(this.lastOsVersion, googlePlayDeveloperReportingV1alpha1ErrorIssue.lastOsVersion) &&
        Objects.equals(this.location, googlePlayDeveloperReportingV1alpha1ErrorIssue.location) &&
        Objects.equals(this.name, googlePlayDeveloperReportingV1alpha1ErrorIssue.name) &&
        Objects.equals(this.type, googlePlayDeveloperReportingV1alpha1ErrorIssue.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cause, distinctUsers, distinctUsersPercent, errorReportCount, firstAppVersion, firstOsVersion, issueUri, lastAppVersion, lastErrorReportTime, lastOsVersion, location, name, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePlayDeveloperReportingV1alpha1ErrorIssue {\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    distinctUsers: ").append(toIndentedString(distinctUsers)).append("\n");
    sb.append("    distinctUsersPercent: ").append(toIndentedString(distinctUsersPercent)).append("\n");
    sb.append("    errorReportCount: ").append(toIndentedString(errorReportCount)).append("\n");
    sb.append("    firstAppVersion: ").append(toIndentedString(firstAppVersion)).append("\n");
    sb.append("    firstOsVersion: ").append(toIndentedString(firstOsVersion)).append("\n");
    sb.append("    issueUri: ").append(toIndentedString(issueUri)).append("\n");
    sb.append("    lastAppVersion: ").append(toIndentedString(lastAppVersion)).append("\n");
    sb.append("    lastErrorReportTime: ").append(toIndentedString(lastErrorReportTime)).append("\n");
    sb.append("    lastOsVersion: ").append(toIndentedString(lastOsVersion)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cause");
    openapiFields.add("distinctUsers");
    openapiFields.add("distinctUsersPercent");
    openapiFields.add("errorReportCount");
    openapiFields.add("firstAppVersion");
    openapiFields.add("firstOsVersion");
    openapiFields.add("issueUri");
    openapiFields.add("lastAppVersion");
    openapiFields.add("lastErrorReportTime");
    openapiFields.add("lastOsVersion");
    openapiFields.add("location");
    openapiFields.add("name");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePlayDeveloperReportingV1alpha1ErrorIssue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePlayDeveloperReportingV1alpha1ErrorIssue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePlayDeveloperReportingV1alpha1ErrorIssue is not found in the empty JSON string", GooglePlayDeveloperReportingV1alpha1ErrorIssue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePlayDeveloperReportingV1alpha1ErrorIssue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePlayDeveloperReportingV1alpha1ErrorIssue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("cause") != null && !jsonObj.get("cause").isJsonNull()) && !jsonObj.get("cause").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cause` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cause").toString()));
      }
      if ((jsonObj.get("distinctUsers") != null && !jsonObj.get("distinctUsers").isJsonNull()) && !jsonObj.get("distinctUsers").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distinctUsers` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distinctUsers").toString()));
      }
      // validate the optional field `distinctUsersPercent`
      if (jsonObj.get("distinctUsersPercent") != null && !jsonObj.get("distinctUsersPercent").isJsonNull()) {
        GoogleTypeDecimal.validateJsonElement(jsonObj.get("distinctUsersPercent"));
      }
      if ((jsonObj.get("errorReportCount") != null && !jsonObj.get("errorReportCount").isJsonNull()) && !jsonObj.get("errorReportCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `errorReportCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("errorReportCount").toString()));
      }
      // validate the optional field `firstAppVersion`
      if (jsonObj.get("firstAppVersion") != null && !jsonObj.get("firstAppVersion").isJsonNull()) {
        GooglePlayDeveloperReportingV1alpha1AppVersion.validateJsonElement(jsonObj.get("firstAppVersion"));
      }
      // validate the optional field `firstOsVersion`
      if (jsonObj.get("firstOsVersion") != null && !jsonObj.get("firstOsVersion").isJsonNull()) {
        GooglePlayDeveloperReportingV1alpha1OsVersion.validateJsonElement(jsonObj.get("firstOsVersion"));
      }
      if ((jsonObj.get("issueUri") != null && !jsonObj.get("issueUri").isJsonNull()) && !jsonObj.get("issueUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issueUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issueUri").toString()));
      }
      // validate the optional field `lastAppVersion`
      if (jsonObj.get("lastAppVersion") != null && !jsonObj.get("lastAppVersion").isJsonNull()) {
        GooglePlayDeveloperReportingV1alpha1AppVersion.validateJsonElement(jsonObj.get("lastAppVersion"));
      }
      if ((jsonObj.get("lastErrorReportTime") != null && !jsonObj.get("lastErrorReportTime").isJsonNull()) && !jsonObj.get("lastErrorReportTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastErrorReportTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastErrorReportTime").toString()));
      }
      // validate the optional field `lastOsVersion`
      if (jsonObj.get("lastOsVersion") != null && !jsonObj.get("lastOsVersion").isJsonNull()) {
        GooglePlayDeveloperReportingV1alpha1OsVersion.validateJsonElement(jsonObj.get("lastOsVersion"));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePlayDeveloperReportingV1alpha1ErrorIssue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePlayDeveloperReportingV1alpha1ErrorIssue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePlayDeveloperReportingV1alpha1ErrorIssue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePlayDeveloperReportingV1alpha1ErrorIssue.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePlayDeveloperReportingV1alpha1ErrorIssue>() {
           @Override
           public void write(JsonWriter out, GooglePlayDeveloperReportingV1alpha1ErrorIssue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePlayDeveloperReportingV1alpha1ErrorIssue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePlayDeveloperReportingV1alpha1ErrorIssue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePlayDeveloperReportingV1alpha1ErrorIssue
   * @throws IOException if the JSON string is invalid with respect to GooglePlayDeveloperReportingV1alpha1ErrorIssue
   */
  public static GooglePlayDeveloperReportingV1alpha1ErrorIssue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePlayDeveloperReportingV1alpha1ErrorIssue.class);
  }

  /**
   * Convert an instance of GooglePlayDeveloperReportingV1alpha1ErrorIssue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

