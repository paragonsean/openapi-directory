/*
 * Google Play Developer Reporting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the value of a single dimension.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:51:15.855761-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GooglePlayDeveloperReportingV1alpha1DimensionValue {
  public static final String SERIALIZED_NAME_DIMENSION = "dimension";
  @SerializedName(SERIALIZED_NAME_DIMENSION)
  private String dimension;

  public static final String SERIALIZED_NAME_INT64_VALUE = "int64Value";
  @SerializedName(SERIALIZED_NAME_INT64_VALUE)
  private String int64Value;

  public static final String SERIALIZED_NAME_STRING_VALUE = "stringValue";
  @SerializedName(SERIALIZED_NAME_STRING_VALUE)
  private String stringValue;

  public static final String SERIALIZED_NAME_VALUE_LABEL = "valueLabel";
  @SerializedName(SERIALIZED_NAME_VALUE_LABEL)
  private String valueLabel;

  public GooglePlayDeveloperReportingV1alpha1DimensionValue() {
  }

  public GooglePlayDeveloperReportingV1alpha1DimensionValue dimension(String dimension) {
    this.dimension = dimension;
    return this;
  }

  /**
   * Name of the dimension.
   * @return dimension
   */
  @javax.annotation.Nullable
  public String getDimension() {
    return dimension;
  }

  public void setDimension(String dimension) {
    this.dimension = dimension;
  }


  public GooglePlayDeveloperReportingV1alpha1DimensionValue int64Value(String int64Value) {
    this.int64Value = int64Value;
    return this;
  }

  /**
   * Actual value, represented as an int64.
   * @return int64Value
   */
  @javax.annotation.Nullable
  public String getInt64Value() {
    return int64Value;
  }

  public void setInt64Value(String int64Value) {
    this.int64Value = int64Value;
  }


  public GooglePlayDeveloperReportingV1alpha1DimensionValue stringValue(String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * Actual value, represented as a string.
   * @return stringValue
   */
  @javax.annotation.Nullable
  public String getStringValue() {
    return stringValue;
  }

  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }


  public GooglePlayDeveloperReportingV1alpha1DimensionValue valueLabel(String valueLabel) {
    this.valueLabel = valueLabel;
    return this;
  }

  /**
   * Optional. Human-friendly label for the value, always in English. For example, &#39;Spain&#39; for the &#39;ES&#39; country code. Whereas the dimension value is stable, this value label is subject to change. Do not assume that the (value, value_label) relationship is stable. For example, the ISO country code &#39;MK&#39; changed its name recently to &#39;North Macedonia&#39;.
   * @return valueLabel
   */
  @javax.annotation.Nullable
  public String getValueLabel() {
    return valueLabel;
  }

  public void setValueLabel(String valueLabel) {
    this.valueLabel = valueLabel;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooglePlayDeveloperReportingV1alpha1DimensionValue googlePlayDeveloperReportingV1alpha1DimensionValue = (GooglePlayDeveloperReportingV1alpha1DimensionValue) o;
    return Objects.equals(this.dimension, googlePlayDeveloperReportingV1alpha1DimensionValue.dimension) &&
        Objects.equals(this.int64Value, googlePlayDeveloperReportingV1alpha1DimensionValue.int64Value) &&
        Objects.equals(this.stringValue, googlePlayDeveloperReportingV1alpha1DimensionValue.stringValue) &&
        Objects.equals(this.valueLabel, googlePlayDeveloperReportingV1alpha1DimensionValue.valueLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dimension, int64Value, stringValue, valueLabel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooglePlayDeveloperReportingV1alpha1DimensionValue {\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("    int64Value: ").append(toIndentedString(int64Value)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("    valueLabel: ").append(toIndentedString(valueLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dimension");
    openapiFields.add("int64Value");
    openapiFields.add("stringValue");
    openapiFields.add("valueLabel");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GooglePlayDeveloperReportingV1alpha1DimensionValue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GooglePlayDeveloperReportingV1alpha1DimensionValue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GooglePlayDeveloperReportingV1alpha1DimensionValue is not found in the empty JSON string", GooglePlayDeveloperReportingV1alpha1DimensionValue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GooglePlayDeveloperReportingV1alpha1DimensionValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GooglePlayDeveloperReportingV1alpha1DimensionValue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dimension") != null && !jsonObj.get("dimension").isJsonNull()) && !jsonObj.get("dimension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dimension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dimension").toString()));
      }
      if ((jsonObj.get("int64Value") != null && !jsonObj.get("int64Value").isJsonNull()) && !jsonObj.get("int64Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `int64Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("int64Value").toString()));
      }
      if ((jsonObj.get("stringValue") != null && !jsonObj.get("stringValue").isJsonNull()) && !jsonObj.get("stringValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stringValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stringValue").toString()));
      }
      if ((jsonObj.get("valueLabel") != null && !jsonObj.get("valueLabel").isJsonNull()) && !jsonObj.get("valueLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `valueLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("valueLabel").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GooglePlayDeveloperReportingV1alpha1DimensionValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GooglePlayDeveloperReportingV1alpha1DimensionValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GooglePlayDeveloperReportingV1alpha1DimensionValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GooglePlayDeveloperReportingV1alpha1DimensionValue.class));

       return (TypeAdapter<T>) new TypeAdapter<GooglePlayDeveloperReportingV1alpha1DimensionValue>() {
           @Override
           public void write(JsonWriter out, GooglePlayDeveloperReportingV1alpha1DimensionValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GooglePlayDeveloperReportingV1alpha1DimensionValue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GooglePlayDeveloperReportingV1alpha1DimensionValue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GooglePlayDeveloperReportingV1alpha1DimensionValue
   * @throws IOException if the JSON string is invalid with respect to GooglePlayDeveloperReportingV1alpha1DimensionValue
   */
  public static GooglePlayDeveloperReportingV1alpha1DimensionValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GooglePlayDeveloperReportingV1alpha1DimensionValue.class);
  }

  /**
   * Convert an instance of GooglePlayDeveloperReportingV1alpha1DimensionValue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

