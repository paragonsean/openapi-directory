/*
 * Search Ads 360 API
 * The Search Ads 360 API allows developers to automate uploading conversions and downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConversionList;
import org.openapitools.client.model.UpdateAvailabilityRequest;
import org.openapitools.client.model.UpdateAvailabilityResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConversionApi
 */
@Disabled
public class ConversionApiTest {

    private final ConversionApi api = new ConversionApi();

    /**
     * Retrieves a list of conversions from a DoubleClick Search engine account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void doubleclicksearchConversionGetTest() throws ApiException {
        String agencyId = null;
        String advertiserId = null;
        String engineAccountId = null;
        Integer endDate = null;
        Integer rowCount = null;
        Integer startDate = null;
        Integer startRow = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String adGroupId = null;
        String adId = null;
        String campaignId = null;
        String criterionId = null;
        String customerId = null;
        ConversionList response = api.doubleclicksearchConversionGet(agencyId, advertiserId, engineAccountId, endDate, rowCount, startDate, startRow, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, adGroupId, adId, campaignId, criterionId, customerId);
        // TODO: test validations
    }

    /**
     * Retrieves a list of conversions from a DoubleClick Search engine account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void doubleclicksearchConversionGetByCustomerIdTest() throws ApiException {
        String customerId = null;
        Integer endDate = null;
        Integer rowCount = null;
        Integer startDate = null;
        Integer startRow = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String adGroupId = null;
        String adId = null;
        String advertiserId = null;
        String agencyId = null;
        String campaignId = null;
        String criterionId = null;
        String engineAccountId = null;
        ConversionList response = api.doubleclicksearchConversionGetByCustomerId(customerId, endDate, rowCount, startDate, startRow, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, adGroupId, adId, advertiserId, agencyId, campaignId, criterionId, engineAccountId);
        // TODO: test validations
    }

    /**
     * Inserts a batch of new conversions into DoubleClick Search.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void doubleclicksearchConversionInsertTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ConversionList conversionList = null;
        ConversionList response = api.doubleclicksearchConversionInsert($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, conversionList);
        // TODO: test validations
    }

    /**
     * Updates a batch of conversions in DoubleClick Search.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void doubleclicksearchConversionUpdateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ConversionList conversionList = null;
        ConversionList response = api.doubleclicksearchConversionUpdate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, conversionList);
        // TODO: test validations
    }

    /**
     * Updates the availabilities of a batch of floodlight activities in DoubleClick Search.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void doubleclicksearchConversionUpdateAvailabilityTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        UpdateAvailabilityRequest updateAvailabilityRequest = null;
        UpdateAvailabilityResponse response = api.doubleclicksearchConversionUpdateAvailability($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateAvailabilityRequest);
        // TODO: test validations
    }

}
