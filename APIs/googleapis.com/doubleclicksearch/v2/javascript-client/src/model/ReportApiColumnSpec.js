/**
 * Search Ads 360 API
 * The Search Ads 360 API allows developers to automate uploading conversions and downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportApiColumnSpec model module.
 * @module model/ReportApiColumnSpec
 * @version v2
 */
class ReportApiColumnSpec {
    /**
     * Constructs a new <code>ReportApiColumnSpec</code>.
     * A request object used to create a DoubleClick Search report.
     * @alias module:model/ReportApiColumnSpec
     */
    constructor() { 
        
        ReportApiColumnSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportApiColumnSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportApiColumnSpec} obj Optional instance to populate.
     * @return {module:model/ReportApiColumnSpec} The populated <code>ReportApiColumnSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportApiColumnSpec();

            if (data.hasOwnProperty('columnName')) {
                obj['columnName'] = ApiClient.convertToType(data['columnName'], 'String');
            }
            if (data.hasOwnProperty('customDimensionName')) {
                obj['customDimensionName'] = ApiClient.convertToType(data['customDimensionName'], 'String');
            }
            if (data.hasOwnProperty('customMetricName')) {
                obj['customMetricName'] = ApiClient.convertToType(data['customMetricName'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'String');
            }
            if (data.hasOwnProperty('groupByColumn')) {
                obj['groupByColumn'] = ApiClient.convertToType(data['groupByColumn'], 'Boolean');
            }
            if (data.hasOwnProperty('headerText')) {
                obj['headerText'] = ApiClient.convertToType(data['headerText'], 'String');
            }
            if (data.hasOwnProperty('platformSource')) {
                obj['platformSource'] = ApiClient.convertToType(data['platformSource'], 'String');
            }
            if (data.hasOwnProperty('productReportPerspective')) {
                obj['productReportPerspective'] = ApiClient.convertToType(data['productReportPerspective'], 'String');
            }
            if (data.hasOwnProperty('savedColumnName')) {
                obj['savedColumnName'] = ApiClient.convertToType(data['savedColumnName'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportApiColumnSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportApiColumnSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['columnName'] && !(typeof data['columnName'] === 'string' || data['columnName'] instanceof String)) {
            throw new Error("Expected the field `columnName` to be a primitive type in the JSON string but got " + data['columnName']);
        }
        // ensure the json data is a string
        if (data['customDimensionName'] && !(typeof data['customDimensionName'] === 'string' || data['customDimensionName'] instanceof String)) {
            throw new Error("Expected the field `customDimensionName` to be a primitive type in the JSON string but got " + data['customDimensionName']);
        }
        // ensure the json data is a string
        if (data['customMetricName'] && !(typeof data['customMetricName'] === 'string' || data['customMetricName'] instanceof String)) {
            throw new Error("Expected the field `customMetricName` to be a primitive type in the JSON string but got " + data['customMetricName']);
        }
        // ensure the json data is a string
        if (data['endDate'] && !(typeof data['endDate'] === 'string' || data['endDate'] instanceof String)) {
            throw new Error("Expected the field `endDate` to be a primitive type in the JSON string but got " + data['endDate']);
        }
        // ensure the json data is a string
        if (data['headerText'] && !(typeof data['headerText'] === 'string' || data['headerText'] instanceof String)) {
            throw new Error("Expected the field `headerText` to be a primitive type in the JSON string but got " + data['headerText']);
        }
        // ensure the json data is a string
        if (data['platformSource'] && !(typeof data['platformSource'] === 'string' || data['platformSource'] instanceof String)) {
            throw new Error("Expected the field `platformSource` to be a primitive type in the JSON string but got " + data['platformSource']);
        }
        // ensure the json data is a string
        if (data['productReportPerspective'] && !(typeof data['productReportPerspective'] === 'string' || data['productReportPerspective'] instanceof String)) {
            throw new Error("Expected the field `productReportPerspective` to be a primitive type in the JSON string but got " + data['productReportPerspective']);
        }
        // ensure the json data is a string
        if (data['savedColumnName'] && !(typeof data['savedColumnName'] === 'string' || data['savedColumnName'] instanceof String)) {
            throw new Error("Expected the field `savedColumnName` to be a primitive type in the JSON string but got " + data['savedColumnName']);
        }
        // ensure the json data is a string
        if (data['startDate'] && !(typeof data['startDate'] === 'string' || data['startDate'] instanceof String)) {
            throw new Error("Expected the field `startDate` to be a primitive type in the JSON string but got " + data['startDate']);
        }

        return true;
    }


}



/**
 * Name of a DoubleClick Search column to include in the report.
 * @member {String} columnName
 */
ReportApiColumnSpec.prototype['columnName'] = undefined;

/**
 * Segments a report by a custom dimension. The report must be scoped to an advertiser or lower, and the custom dimension must already be set up in DoubleClick Search. The custom dimension name, which appears in DoubleClick Search, is case sensitive.\\ If used in a conversion report, returns the value of the specified custom dimension for the given conversion, if set. This column does not segment the conversion report.
 * @member {String} customDimensionName
 */
ReportApiColumnSpec.prototype['customDimensionName'] = undefined;

/**
 * Name of a custom metric to include in the report. The report must be scoped to an advertiser or lower, and the custom metric must already be set up in DoubleClick Search. The custom metric name, which appears in DoubleClick Search, is case sensitive.
 * @member {String} customMetricName
 */
ReportApiColumnSpec.prototype['customMetricName'] = undefined;

/**
 * Inclusive day in YYYY-MM-DD format. When provided, this overrides the overall time range of the report for this column only. Must be provided together with `startDate`.
 * @member {String} endDate
 */
ReportApiColumnSpec.prototype['endDate'] = undefined;

/**
 * Synchronous report only. Set to `true` to group by this column. Defaults to `false`.
 * @member {Boolean} groupByColumn
 */
ReportApiColumnSpec.prototype['groupByColumn'] = undefined;

/**
 * Text used to identify this column in the report output; defaults to `columnName` or `savedColumnName` when not specified. This can be used to prevent collisions between DoubleClick Search columns and saved columns with the same name.
 * @member {String} headerText
 */
ReportApiColumnSpec.prototype['headerText'] = undefined;

/**
 * The platform that is used to provide data for the custom dimension. Acceptable values are \"floodlight\".
 * @member {String} platformSource
 */
ReportApiColumnSpec.prototype['platformSource'] = undefined;

/**
 * Returns metrics only for a specific type of product activity. Accepted values are: - \"`sold`\": returns metrics only for products that were sold - \"`advertised`\": returns metrics only for products that were advertised in a Shopping campaign, and that might or might not have been sold 
 * @member {String} productReportPerspective
 */
ReportApiColumnSpec.prototype['productReportPerspective'] = undefined;

/**
 * Name of a saved column to include in the report. The report must be scoped at advertiser or lower, and this saved column must already be created in the DoubleClick Search UI.
 * @member {String} savedColumnName
 */
ReportApiColumnSpec.prototype['savedColumnName'] = undefined;

/**
 * Inclusive date in YYYY-MM-DD format. When provided, this overrides the overall time range of the report for this column only. Must be provided together with `endDate`.
 * @member {String} startDate
 */
ReportApiColumnSpec.prototype['startDate'] = undefined;






export default ReportApiColumnSpec;

