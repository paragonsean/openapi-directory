/**
 * Search Ads 360 API
 * The Search Ads 360 API allows developers to automate uploading conversions and downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReportApiColumnSpec from './ReportApiColumnSpec';

/**
 * The ReportRequestFiltersInner model module.
 * @module model/ReportRequestFiltersInner
 * @version v2
 */
class ReportRequestFiltersInner {
    /**
     * Constructs a new <code>ReportRequestFiltersInner</code>.
     * @alias module:model/ReportRequestFiltersInner
     */
    constructor() { 
        
        ReportRequestFiltersInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportRequestFiltersInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportRequestFiltersInner} obj Optional instance to populate.
     * @return {module:model/ReportRequestFiltersInner} The populated <code>ReportRequestFiltersInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportRequestFiltersInner();

            if (data.hasOwnProperty('column')) {
                obj['column'] = ReportApiColumnSpec.constructFromObject(data['column']);
            }
            if (data.hasOwnProperty('operator')) {
                obj['operator'] = ApiClient.convertToType(data['operator'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportRequestFiltersInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportRequestFiltersInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `column`
        if (data['column']) { // data not null
          ReportApiColumnSpec.validateJSON(data['column']);
        }
        // ensure the json data is a string
        if (data['operator'] && !(typeof data['operator'] === 'string' || data['operator'] instanceof String)) {
            throw new Error("Expected the field `operator` to be a primitive type in the JSON string but got " + data['operator']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['values'])) {
            throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
        }

        return true;
    }


}



/**
 * @member {module:model/ReportApiColumnSpec} column
 */
ReportRequestFiltersInner.prototype['column'] = undefined;

/**
 * Operator to use in the filter. See the filter reference for a list of available operators.
 * @member {String} operator
 */
ReportRequestFiltersInner.prototype['operator'] = undefined;

/**
 * A list of values to filter the column value against.\\ The maximum number of filter values per request is 300.
 * @member {Array.<Object>} values
 */
ReportRequestFiltersInner.prototype['values'] = undefined;






export default ReportRequestFiltersInner;

