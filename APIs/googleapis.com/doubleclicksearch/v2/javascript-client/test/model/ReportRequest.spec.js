/**
 * Search Ads 360 API
 * The Search Ads 360 API allows developers to automate uploading conversions and downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SearchAds360Api);
  }
}(this, function(expect, SearchAds360Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SearchAds360Api.ReportRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReportRequest', function() {
    it('should create an instance of ReportRequest', function() {
      // uncomment below and update the code to test ReportRequest
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be.a(SearchAds360Api.ReportRequest);
    });

    it('should have the property columns (base name: "columns")', function() {
      // uncomment below and update the code to test the property columns
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property downloadFormat (base name: "downloadFormat")', function() {
      // uncomment below and update the code to test the property downloadFormat
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property filters (base name: "filters")', function() {
      // uncomment below and update the code to test the property filters
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property includeDeletedEntities (base name: "includeDeletedEntities")', function() {
      // uncomment below and update the code to test the property includeDeletedEntities
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property includeRemovedEntities (base name: "includeRemovedEntities")', function() {
      // uncomment below and update the code to test the property includeRemovedEntities
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property maxRowsPerFile (base name: "maxRowsPerFile")', function() {
      // uncomment below and update the code to test the property maxRowsPerFile
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property orderBy (base name: "orderBy")', function() {
      // uncomment below and update the code to test the property orderBy
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property reportScope (base name: "reportScope")', function() {
      // uncomment below and update the code to test the property reportScope
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property reportType (base name: "reportType")', function() {
      // uncomment below and update the code to test the property reportType
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property rowCount (base name: "rowCount")', function() {
      // uncomment below and update the code to test the property rowCount
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property startRow (base name: "startRow")', function() {
      // uncomment below and update the code to test the property startRow
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property statisticsCurrency (base name: "statisticsCurrency")', function() {
      // uncomment below and update the code to test the property statisticsCurrency
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property timeRange (base name: "timeRange")', function() {
      // uncomment below and update the code to test the property timeRange
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

    it('should have the property verifySingleTimeZone (base name: "verifySingleTimeZone")', function() {
      // uncomment below and update the code to test the property verifySingleTimeZone
      //var instance = new SearchAds360Api.ReportRequest();
      //expect(instance).to.be();
    });

  });

}));
