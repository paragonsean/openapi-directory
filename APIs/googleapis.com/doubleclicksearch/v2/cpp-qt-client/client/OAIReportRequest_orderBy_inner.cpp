/**
 * Search Ads 360 API
 * The Search Ads 360 API allows developers to automate uploading conversions and downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportRequest_orderBy_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportRequest_orderBy_inner::OAIReportRequest_orderBy_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportRequest_orderBy_inner::OAIReportRequest_orderBy_inner() {
    this->initializeModel();
}

OAIReportRequest_orderBy_inner::~OAIReportRequest_orderBy_inner() {}

void OAIReportRequest_orderBy_inner::initializeModel() {

    m_column_isSet = false;
    m_column_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;
}

void OAIReportRequest_orderBy_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportRequest_orderBy_inner::fromJsonObject(QJsonObject json) {

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sortOrder")]);
    m_sort_order_isSet = !json[QString("sortOrder")].isNull() && m_sort_order_isValid;
}

QString OAIReportRequest_orderBy_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportRequest_orderBy_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_column.isSet()) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sortOrder"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    return obj;
}

OAIReportApiColumnSpec OAIReportRequest_orderBy_inner::getColumn() const {
    return m_column;
}
void OAIReportRequest_orderBy_inner::setColumn(const OAIReportApiColumnSpec &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIReportRequest_orderBy_inner::is_column_Set() const{
    return m_column_isSet;
}

bool OAIReportRequest_orderBy_inner::is_column_Valid() const{
    return m_column_isValid;
}

QString OAIReportRequest_orderBy_inner::getSortOrder() const {
    return m_sort_order;
}
void OAIReportRequest_orderBy_inner::setSortOrder(const QString &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIReportRequest_orderBy_inner::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIReportRequest_orderBy_inner::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

bool OAIReportRequest_orderBy_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportRequest_orderBy_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
