/**
 * Search Ads 360 API
 * The Search Ads 360 API allows developers to automate uploading conversions and downloading reports from Search Ads 360.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAvailabilityRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAvailabilityRequest::OAIUpdateAvailabilityRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAvailabilityRequest::OAIUpdateAvailabilityRequest() {
    this->initializeModel();
}

OAIUpdateAvailabilityRequest::~OAIUpdateAvailabilityRequest() {}

void OAIUpdateAvailabilityRequest::initializeModel() {

    m_availabilities_isSet = false;
    m_availabilities_isValid = false;
}

void OAIUpdateAvailabilityRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAvailabilityRequest::fromJsonObject(QJsonObject json) {

    m_availabilities_isValid = ::OpenAPI::fromJsonValue(m_availabilities, json[QString("availabilities")]);
    m_availabilities_isSet = !json[QString("availabilities")].isNull() && m_availabilities_isValid;
}

QString OAIUpdateAvailabilityRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAvailabilityRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_availabilities.size() > 0) {
        obj.insert(QString("availabilities"), ::OpenAPI::toJsonValue(m_availabilities));
    }
    return obj;
}

QList<OAIAvailability> OAIUpdateAvailabilityRequest::getAvailabilities() const {
    return m_availabilities;
}
void OAIUpdateAvailabilityRequest::setAvailabilities(const QList<OAIAvailability> &availabilities) {
    m_availabilities = availabilities;
    m_availabilities_isSet = true;
}

bool OAIUpdateAvailabilityRequest::is_availabilities_Set() const{
    return m_availabilities_isSet;
}

bool OAIUpdateAvailabilityRequest::is_availabilities_Valid() const{
    return m_availabilities_isValid;
}

bool OAIUpdateAvailabilityRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_availabilities.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAvailabilityRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
