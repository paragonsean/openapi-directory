# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Availability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advertiser_id: str=None, agency_id: str=None, availability_timestamp: str=None, customer_id: str=None, segmentation_id: str=None, segmentation_name: str=None, segmentation_type: str=None):
        """Availability - a model defined in OpenAPI

        :param advertiser_id: The advertiser_id of this Availability.
        :param agency_id: The agency_id of this Availability.
        :param availability_timestamp: The availability_timestamp of this Availability.
        :param customer_id: The customer_id of this Availability.
        :param segmentation_id: The segmentation_id of this Availability.
        :param segmentation_name: The segmentation_name of this Availability.
        :param segmentation_type: The segmentation_type of this Availability.
        """
        self.openapi_types = {
            'advertiser_id': str,
            'agency_id': str,
            'availability_timestamp': str,
            'customer_id': str,
            'segmentation_id': str,
            'segmentation_name': str,
            'segmentation_type': str
        }

        self.attribute_map = {
            'advertiser_id': 'advertiserId',
            'agency_id': 'agencyId',
            'availability_timestamp': 'availabilityTimestamp',
            'customer_id': 'customerId',
            'segmentation_id': 'segmentationId',
            'segmentation_name': 'segmentationName',
            'segmentation_type': 'segmentationType'
        }

        self._advertiser_id = advertiser_id
        self._agency_id = agency_id
        self._availability_timestamp = availability_timestamp
        self._customer_id = customer_id
        self._segmentation_id = segmentation_id
        self._segmentation_name = segmentation_name
        self._segmentation_type = segmentation_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Availability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Availability of this Availability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this Availability.

        DS advertiser ID.

        :return: The advertiser_id of this Availability.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this Availability.

        DS advertiser ID.

        :param advertiser_id: The advertiser_id of this Availability.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def agency_id(self):
        """Gets the agency_id of this Availability.

        DS agency ID.

        :return: The agency_id of this Availability.
        :rtype: str
        """
        return self._agency_id

    @agency_id.setter
    def agency_id(self, agency_id):
        """Sets the agency_id of this Availability.

        DS agency ID.

        :param agency_id: The agency_id of this Availability.
        :type agency_id: str
        """

        self._agency_id = agency_id

    @property
    def availability_timestamp(self):
        """Gets the availability_timestamp of this Availability.

        The time by which all conversions have been uploaded, in epoch millis UTC.

        :return: The availability_timestamp of this Availability.
        :rtype: str
        """
        return self._availability_timestamp

    @availability_timestamp.setter
    def availability_timestamp(self, availability_timestamp):
        """Sets the availability_timestamp of this Availability.

        The time by which all conversions have been uploaded, in epoch millis UTC.

        :param availability_timestamp: The availability_timestamp of this Availability.
        :type availability_timestamp: str
        """

        self._availability_timestamp = availability_timestamp

    @property
    def customer_id(self):
        """Gets the customer_id of this Availability.

        Customer ID of a client account in the new Search Ads 360 experience.

        :return: The customer_id of this Availability.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this Availability.

        Customer ID of a client account in the new Search Ads 360 experience.

        :param customer_id: The customer_id of this Availability.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def segmentation_id(self):
        """Gets the segmentation_id of this Availability.

        The numeric segmentation identifier (for example, DoubleClick Search Floodlight activity ID).

        :return: The segmentation_id of this Availability.
        :rtype: str
        """
        return self._segmentation_id

    @segmentation_id.setter
    def segmentation_id(self, segmentation_id):
        """Sets the segmentation_id of this Availability.

        The numeric segmentation identifier (for example, DoubleClick Search Floodlight activity ID).

        :param segmentation_id: The segmentation_id of this Availability.
        :type segmentation_id: str
        """

        self._segmentation_id = segmentation_id

    @property
    def segmentation_name(self):
        """Gets the segmentation_name of this Availability.

        The friendly segmentation identifier (for example, DoubleClick Search Floodlight activity name).

        :return: The segmentation_name of this Availability.
        :rtype: str
        """
        return self._segmentation_name

    @segmentation_name.setter
    def segmentation_name(self, segmentation_name):
        """Sets the segmentation_name of this Availability.

        The friendly segmentation identifier (for example, DoubleClick Search Floodlight activity name).

        :param segmentation_name: The segmentation_name of this Availability.
        :type segmentation_name: str
        """

        self._segmentation_name = segmentation_name

    @property
    def segmentation_type(self):
        """Gets the segmentation_type of this Availability.

        The segmentation type that this availability is for (its default value is `FLOODLIGHT`).

        :return: The segmentation_type of this Availability.
        :rtype: str
        """
        return self._segmentation_type

    @segmentation_type.setter
    def segmentation_type(self, segmentation_type):
        """Sets the segmentation_type of this Availability.

        The segmentation type that this availability is for (its default value is `FLOODLIGHT`).

        :param segmentation_type: The segmentation_type of this Availability.
        :type segmentation_type: str
        """

        self._segmentation_type = segmentation_type
