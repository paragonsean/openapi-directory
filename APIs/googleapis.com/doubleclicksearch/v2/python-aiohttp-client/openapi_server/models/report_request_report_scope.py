# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportRequestReportScope(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_group_id: str=None, ad_id: str=None, advertiser_id: str=None, agency_id: str=None, campaign_id: str=None, engine_account_id: str=None, keyword_id: str=None):
        """ReportRequestReportScope - a model defined in OpenAPI

        :param ad_group_id: The ad_group_id of this ReportRequestReportScope.
        :param ad_id: The ad_id of this ReportRequestReportScope.
        :param advertiser_id: The advertiser_id of this ReportRequestReportScope.
        :param agency_id: The agency_id of this ReportRequestReportScope.
        :param campaign_id: The campaign_id of this ReportRequestReportScope.
        :param engine_account_id: The engine_account_id of this ReportRequestReportScope.
        :param keyword_id: The keyword_id of this ReportRequestReportScope.
        """
        self.openapi_types = {
            'ad_group_id': str,
            'ad_id': str,
            'advertiser_id': str,
            'agency_id': str,
            'campaign_id': str,
            'engine_account_id': str,
            'keyword_id': str
        }

        self.attribute_map = {
            'ad_group_id': 'adGroupId',
            'ad_id': 'adId',
            'advertiser_id': 'advertiserId',
            'agency_id': 'agencyId',
            'campaign_id': 'campaignId',
            'engine_account_id': 'engineAccountId',
            'keyword_id': 'keywordId'
        }

        self._ad_group_id = ad_group_id
        self._ad_id = ad_id
        self._advertiser_id = advertiser_id
        self._agency_id = agency_id
        self._campaign_id = campaign_id
        self._engine_account_id = engine_account_id
        self._keyword_id = keyword_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportRequestReportScope':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportRequest_reportScope of this ReportRequestReportScope.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_group_id(self):
        """Gets the ad_group_id of this ReportRequestReportScope.

        DS ad group ID.

        :return: The ad_group_id of this ReportRequestReportScope.
        :rtype: str
        """
        return self._ad_group_id

    @ad_group_id.setter
    def ad_group_id(self, ad_group_id):
        """Sets the ad_group_id of this ReportRequestReportScope.

        DS ad group ID.

        :param ad_group_id: The ad_group_id of this ReportRequestReportScope.
        :type ad_group_id: str
        """

        self._ad_group_id = ad_group_id

    @property
    def ad_id(self):
        """Gets the ad_id of this ReportRequestReportScope.

        DS ad ID.

        :return: The ad_id of this ReportRequestReportScope.
        :rtype: str
        """
        return self._ad_id

    @ad_id.setter
    def ad_id(self, ad_id):
        """Sets the ad_id of this ReportRequestReportScope.

        DS ad ID.

        :param ad_id: The ad_id of this ReportRequestReportScope.
        :type ad_id: str
        """

        self._ad_id = ad_id

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this ReportRequestReportScope.

        DS advertiser ID.

        :return: The advertiser_id of this ReportRequestReportScope.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this ReportRequestReportScope.

        DS advertiser ID.

        :param advertiser_id: The advertiser_id of this ReportRequestReportScope.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def agency_id(self):
        """Gets the agency_id of this ReportRequestReportScope.

        DS agency ID.

        :return: The agency_id of this ReportRequestReportScope.
        :rtype: str
        """
        return self._agency_id

    @agency_id.setter
    def agency_id(self, agency_id):
        """Sets the agency_id of this ReportRequestReportScope.

        DS agency ID.

        :param agency_id: The agency_id of this ReportRequestReportScope.
        :type agency_id: str
        """

        self._agency_id = agency_id

    @property
    def campaign_id(self):
        """Gets the campaign_id of this ReportRequestReportScope.

        DS campaign ID.

        :return: The campaign_id of this ReportRequestReportScope.
        :rtype: str
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this ReportRequestReportScope.

        DS campaign ID.

        :param campaign_id: The campaign_id of this ReportRequestReportScope.
        :type campaign_id: str
        """

        self._campaign_id = campaign_id

    @property
    def engine_account_id(self):
        """Gets the engine_account_id of this ReportRequestReportScope.

        DS engine account ID.

        :return: The engine_account_id of this ReportRequestReportScope.
        :rtype: str
        """
        return self._engine_account_id

    @engine_account_id.setter
    def engine_account_id(self, engine_account_id):
        """Sets the engine_account_id of this ReportRequestReportScope.

        DS engine account ID.

        :param engine_account_id: The engine_account_id of this ReportRequestReportScope.
        :type engine_account_id: str
        """

        self._engine_account_id = engine_account_id

    @property
    def keyword_id(self):
        """Gets the keyword_id of this ReportRequestReportScope.

        DS keyword ID.

        :return: The keyword_id of this ReportRequestReportScope.
        :rtype: str
        """
        return self._keyword_id

    @keyword_id.setter
    def keyword_id(self, keyword_id):
        """Sets the keyword_id of this ReportRequestReportScope.

        DS keyword ID.

        :param keyword_id: The keyword_id of this ReportRequestReportScope.
        :type keyword_id: str
        """

        self._keyword_id = keyword_id
