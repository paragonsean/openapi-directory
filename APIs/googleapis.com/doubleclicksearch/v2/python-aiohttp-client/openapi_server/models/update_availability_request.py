# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.availability import Availability
from openapi_server import util


class UpdateAvailabilityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availabilities: List[Availability]=None):
        """UpdateAvailabilityRequest - a model defined in OpenAPI

        :param availabilities: The availabilities of this UpdateAvailabilityRequest.
        """
        self.openapi_types = {
            'availabilities': List[Availability]
        }

        self.attribute_map = {
            'availabilities': 'availabilities'
        }

        self._availabilities = availabilities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateAvailabilityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateAvailabilityRequest of this UpdateAvailabilityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availabilities(self):
        """Gets the availabilities of this UpdateAvailabilityRequest.

        The availabilities being requested.

        :return: The availabilities of this UpdateAvailabilityRequest.
        :rtype: List[Availability]
        """
        return self._availabilities

    @availabilities.setter
    def availabilities(self, availabilities):
        """Sets the availabilities of this UpdateAvailabilityRequest.

        The availabilities being requested.

        :param availabilities: The availabilities of this UpdateAvailabilityRequest.
        :type availabilities: List[Availability]
        """

        self._availabilities = availabilities
