# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportApiColumnSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_name: str=None, custom_dimension_name: str=None, custom_metric_name: str=None, end_date: str=None, group_by_column: bool=None, header_text: str=None, platform_source: str=None, product_report_perspective: str=None, saved_column_name: str=None, start_date: str=None):
        """ReportApiColumnSpec - a model defined in OpenAPI

        :param column_name: The column_name of this ReportApiColumnSpec.
        :param custom_dimension_name: The custom_dimension_name of this ReportApiColumnSpec.
        :param custom_metric_name: The custom_metric_name of this ReportApiColumnSpec.
        :param end_date: The end_date of this ReportApiColumnSpec.
        :param group_by_column: The group_by_column of this ReportApiColumnSpec.
        :param header_text: The header_text of this ReportApiColumnSpec.
        :param platform_source: The platform_source of this ReportApiColumnSpec.
        :param product_report_perspective: The product_report_perspective of this ReportApiColumnSpec.
        :param saved_column_name: The saved_column_name of this ReportApiColumnSpec.
        :param start_date: The start_date of this ReportApiColumnSpec.
        """
        self.openapi_types = {
            'column_name': str,
            'custom_dimension_name': str,
            'custom_metric_name': str,
            'end_date': str,
            'group_by_column': bool,
            'header_text': str,
            'platform_source': str,
            'product_report_perspective': str,
            'saved_column_name': str,
            'start_date': str
        }

        self.attribute_map = {
            'column_name': 'columnName',
            'custom_dimension_name': 'customDimensionName',
            'custom_metric_name': 'customMetricName',
            'end_date': 'endDate',
            'group_by_column': 'groupByColumn',
            'header_text': 'headerText',
            'platform_source': 'platformSource',
            'product_report_perspective': 'productReportPerspective',
            'saved_column_name': 'savedColumnName',
            'start_date': 'startDate'
        }

        self._column_name = column_name
        self._custom_dimension_name = custom_dimension_name
        self._custom_metric_name = custom_metric_name
        self._end_date = end_date
        self._group_by_column = group_by_column
        self._header_text = header_text
        self._platform_source = platform_source
        self._product_report_perspective = product_report_perspective
        self._saved_column_name = saved_column_name
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportApiColumnSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportApiColumnSpec of this ReportApiColumnSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_name(self):
        """Gets the column_name of this ReportApiColumnSpec.

        Name of a DoubleClick Search column to include in the report.

        :return: The column_name of this ReportApiColumnSpec.
        :rtype: str
        """
        return self._column_name

    @column_name.setter
    def column_name(self, column_name):
        """Sets the column_name of this ReportApiColumnSpec.

        Name of a DoubleClick Search column to include in the report.

        :param column_name: The column_name of this ReportApiColumnSpec.
        :type column_name: str
        """

        self._column_name = column_name

    @property
    def custom_dimension_name(self):
        """Gets the custom_dimension_name of this ReportApiColumnSpec.

        Segments a report by a custom dimension. The report must be scoped to an advertiser or lower, and the custom dimension must already be set up in DoubleClick Search. The custom dimension name, which appears in DoubleClick Search, is case sensitive.\\ If used in a conversion report, returns the value of the specified custom dimension for the given conversion, if set. This column does not segment the conversion report.

        :return: The custom_dimension_name of this ReportApiColumnSpec.
        :rtype: str
        """
        return self._custom_dimension_name

    @custom_dimension_name.setter
    def custom_dimension_name(self, custom_dimension_name):
        """Sets the custom_dimension_name of this ReportApiColumnSpec.

        Segments a report by a custom dimension. The report must be scoped to an advertiser or lower, and the custom dimension must already be set up in DoubleClick Search. The custom dimension name, which appears in DoubleClick Search, is case sensitive.\\ If used in a conversion report, returns the value of the specified custom dimension for the given conversion, if set. This column does not segment the conversion report.

        :param custom_dimension_name: The custom_dimension_name of this ReportApiColumnSpec.
        :type custom_dimension_name: str
        """

        self._custom_dimension_name = custom_dimension_name

    @property
    def custom_metric_name(self):
        """Gets the custom_metric_name of this ReportApiColumnSpec.

        Name of a custom metric to include in the report. The report must be scoped to an advertiser or lower, and the custom metric must already be set up in DoubleClick Search. The custom metric name, which appears in DoubleClick Search, is case sensitive.

        :return: The custom_metric_name of this ReportApiColumnSpec.
        :rtype: str
        """
        return self._custom_metric_name

    @custom_metric_name.setter
    def custom_metric_name(self, custom_metric_name):
        """Sets the custom_metric_name of this ReportApiColumnSpec.

        Name of a custom metric to include in the report. The report must be scoped to an advertiser or lower, and the custom metric must already be set up in DoubleClick Search. The custom metric name, which appears in DoubleClick Search, is case sensitive.

        :param custom_metric_name: The custom_metric_name of this ReportApiColumnSpec.
        :type custom_metric_name: str
        """

        self._custom_metric_name = custom_metric_name

    @property
    def end_date(self):
        """Gets the end_date of this ReportApiColumnSpec.

        Inclusive day in YYYY-MM-DD format. When provided, this overrides the overall time range of the report for this column only. Must be provided together with `startDate`.

        :return: The end_date of this ReportApiColumnSpec.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this ReportApiColumnSpec.

        Inclusive day in YYYY-MM-DD format. When provided, this overrides the overall time range of the report for this column only. Must be provided together with `startDate`.

        :param end_date: The end_date of this ReportApiColumnSpec.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def group_by_column(self):
        """Gets the group_by_column of this ReportApiColumnSpec.

        Synchronous report only. Set to `true` to group by this column. Defaults to `false`.

        :return: The group_by_column of this ReportApiColumnSpec.
        :rtype: bool
        """
        return self._group_by_column

    @group_by_column.setter
    def group_by_column(self, group_by_column):
        """Sets the group_by_column of this ReportApiColumnSpec.

        Synchronous report only. Set to `true` to group by this column. Defaults to `false`.

        :param group_by_column: The group_by_column of this ReportApiColumnSpec.
        :type group_by_column: bool
        """

        self._group_by_column = group_by_column

    @property
    def header_text(self):
        """Gets the header_text of this ReportApiColumnSpec.

        Text used to identify this column in the report output; defaults to `columnName` or `savedColumnName` when not specified. This can be used to prevent collisions between DoubleClick Search columns and saved columns with the same name.

        :return: The header_text of this ReportApiColumnSpec.
        :rtype: str
        """
        return self._header_text

    @header_text.setter
    def header_text(self, header_text):
        """Sets the header_text of this ReportApiColumnSpec.

        Text used to identify this column in the report output; defaults to `columnName` or `savedColumnName` when not specified. This can be used to prevent collisions between DoubleClick Search columns and saved columns with the same name.

        :param header_text: The header_text of this ReportApiColumnSpec.
        :type header_text: str
        """

        self._header_text = header_text

    @property
    def platform_source(self):
        """Gets the platform_source of this ReportApiColumnSpec.

        The platform that is used to provide data for the custom dimension. Acceptable values are \"floodlight\".

        :return: The platform_source of this ReportApiColumnSpec.
        :rtype: str
        """
        return self._platform_source

    @platform_source.setter
    def platform_source(self, platform_source):
        """Sets the platform_source of this ReportApiColumnSpec.

        The platform that is used to provide data for the custom dimension. Acceptable values are \"floodlight\".

        :param platform_source: The platform_source of this ReportApiColumnSpec.
        :type platform_source: str
        """

        self._platform_source = platform_source

    @property
    def product_report_perspective(self):
        """Gets the product_report_perspective of this ReportApiColumnSpec.

        Returns metrics only for a specific type of product activity. Accepted values are: - \"`sold`\": returns metrics only for products that were sold - \"`advertised`\": returns metrics only for products that were advertised in a Shopping campaign, and that might or might not have been sold 

        :return: The product_report_perspective of this ReportApiColumnSpec.
        :rtype: str
        """
        return self._product_report_perspective

    @product_report_perspective.setter
    def product_report_perspective(self, product_report_perspective):
        """Sets the product_report_perspective of this ReportApiColumnSpec.

        Returns metrics only for a specific type of product activity. Accepted values are: - \"`sold`\": returns metrics only for products that were sold - \"`advertised`\": returns metrics only for products that were advertised in a Shopping campaign, and that might or might not have been sold 

        :param product_report_perspective: The product_report_perspective of this ReportApiColumnSpec.
        :type product_report_perspective: str
        """

        self._product_report_perspective = product_report_perspective

    @property
    def saved_column_name(self):
        """Gets the saved_column_name of this ReportApiColumnSpec.

        Name of a saved column to include in the report. The report must be scoped at advertiser or lower, and this saved column must already be created in the DoubleClick Search UI.

        :return: The saved_column_name of this ReportApiColumnSpec.
        :rtype: str
        """
        return self._saved_column_name

    @saved_column_name.setter
    def saved_column_name(self, saved_column_name):
        """Sets the saved_column_name of this ReportApiColumnSpec.

        Name of a saved column to include in the report. The report must be scoped at advertiser or lower, and this saved column must already be created in the DoubleClick Search UI.

        :param saved_column_name: The saved_column_name of this ReportApiColumnSpec.
        :type saved_column_name: str
        """

        self._saved_column_name = saved_column_name

    @property
    def start_date(self):
        """Gets the start_date of this ReportApiColumnSpec.

        Inclusive date in YYYY-MM-DD format. When provided, this overrides the overall time range of the report for this column only. Must be provided together with `endDate`.

        :return: The start_date of this ReportApiColumnSpec.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this ReportApiColumnSpec.

        Inclusive date in YYYY-MM-DD format. When provided, this overrides the overall time range of the report for this column only. Must be provided together with `endDate`.

        :param start_date: The start_date of this ReportApiColumnSpec.
        :type start_date: str
        """

        self._start_date = start_date
