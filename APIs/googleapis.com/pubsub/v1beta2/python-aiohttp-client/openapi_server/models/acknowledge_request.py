# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AcknowledgeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ack_ids: List[str]=None):
        """AcknowledgeRequest - a model defined in OpenAPI

        :param ack_ids: The ack_ids of this AcknowledgeRequest.
        """
        self.openapi_types = {
            'ack_ids': List[str]
        }

        self.attribute_map = {
            'ack_ids': 'ackIds'
        }

        self._ack_ids = ack_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcknowledgeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcknowledgeRequest of this AcknowledgeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ack_ids(self):
        """Gets the ack_ids of this AcknowledgeRequest.

        The acknowledgment ID for the messages being acknowledged that was returned by the Pub/Sub system in the `Pull` response. Must not be empty.

        :return: The ack_ids of this AcknowledgeRequest.
        :rtype: List[str]
        """
        return self._ack_ids

    @ack_ids.setter
    def ack_ids(self, ack_ids):
        """Sets the ack_ids of this AcknowledgeRequest.

        The acknowledgment ID for the messages being acknowledged that was returned by the Pub/Sub system in the `Pull` response. Must not be empty.

        :param ack_ids: The ack_ids of this AcknowledgeRequest.
        :type ack_ids: List[str]
        """

        self._ack_ids = ack_ids
