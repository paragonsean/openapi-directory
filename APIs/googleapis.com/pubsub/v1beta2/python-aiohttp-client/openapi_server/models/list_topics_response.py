# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.topic import Topic
from openapi_server import util


class ListTopicsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, topics: List[Topic]=None):
        """ListTopicsResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListTopicsResponse.
        :param topics: The topics of this ListTopicsResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'topics': List[Topic]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'topics': 'topics'
        }

        self._next_page_token = next_page_token
        self._topics = topics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTopicsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTopicsResponse of this ListTopicsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListTopicsResponse.

        If not empty, indicates that there may be more topics that match the request; this value should be passed in a new `ListTopicsRequest`.

        :return: The next_page_token of this ListTopicsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListTopicsResponse.

        If not empty, indicates that there may be more topics that match the request; this value should be passed in a new `ListTopicsRequest`.

        :param next_page_token: The next_page_token of this ListTopicsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def topics(self):
        """Gets the topics of this ListTopicsResponse.

        The resulting topics.

        :return: The topics of this ListTopicsResponse.
        :rtype: List[Topic]
        """
        return self._topics

    @topics.setter
    def topics(self, topics):
        """Sets the topics of this ListTopicsResponse.

        The resulting topics.

        :param topics: The topics of this ListTopicsResponse.
        :type topics: List[Topic]
        """

        self._topics = topics
