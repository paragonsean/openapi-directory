/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOidcToken.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOidcToken::OAIOidcToken(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOidcToken::OAIOidcToken() {
    this->initializeModel();
}

OAIOidcToken::~OAIOidcToken() {}

void OAIOidcToken::initializeModel() {

    m_audience_isSet = false;
    m_audience_isValid = false;

    m_service_account_email_isSet = false;
    m_service_account_email_isValid = false;
}

void OAIOidcToken::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOidcToken::fromJsonObject(QJsonObject json) {

    m_audience_isValid = ::OpenAPI::fromJsonValue(m_audience, json[QString("audience")]);
    m_audience_isSet = !json[QString("audience")].isNull() && m_audience_isValid;

    m_service_account_email_isValid = ::OpenAPI::fromJsonValue(m_service_account_email, json[QString("serviceAccountEmail")]);
    m_service_account_email_isSet = !json[QString("serviceAccountEmail")].isNull() && m_service_account_email_isValid;
}

QString OAIOidcToken::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOidcToken::asJsonObject() const {
    QJsonObject obj;
    if (m_audience_isSet) {
        obj.insert(QString("audience"), ::OpenAPI::toJsonValue(m_audience));
    }
    if (m_service_account_email_isSet) {
        obj.insert(QString("serviceAccountEmail"), ::OpenAPI::toJsonValue(m_service_account_email));
    }
    return obj;
}

QString OAIOidcToken::getAudience() const {
    return m_audience;
}
void OAIOidcToken::setAudience(const QString &audience) {
    m_audience = audience;
    m_audience_isSet = true;
}

bool OAIOidcToken::is_audience_Set() const{
    return m_audience_isSet;
}

bool OAIOidcToken::is_audience_Valid() const{
    return m_audience_isValid;
}

QString OAIOidcToken::getServiceAccountEmail() const {
    return m_service_account_email;
}
void OAIOidcToken::setServiceAccountEmail(const QString &service_account_email) {
    m_service_account_email = service_account_email;
    m_service_account_email_isSet = true;
}

bool OAIOidcToken::is_service_account_email_Set() const{
    return m_service_account_email_isSet;
}

bool OAIOidcToken::is_service_account_email_Valid() const{
    return m_service_account_email_isValid;
}

bool OAIOidcToken::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audience_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_account_email_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOidcToken::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
