/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPublishResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPublishResponse::OAIPublishResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPublishResponse::OAIPublishResponse() {
    this->initializeModel();
}

OAIPublishResponse::~OAIPublishResponse() {}

void OAIPublishResponse::initializeModel() {

    m_message_ids_isSet = false;
    m_message_ids_isValid = false;
}

void OAIPublishResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPublishResponse::fromJsonObject(QJsonObject json) {

    m_message_ids_isValid = ::OpenAPI::fromJsonValue(m_message_ids, json[QString("messageIds")]);
    m_message_ids_isSet = !json[QString("messageIds")].isNull() && m_message_ids_isValid;
}

QString OAIPublishResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPublishResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_message_ids.size() > 0) {
        obj.insert(QString("messageIds"), ::OpenAPI::toJsonValue(m_message_ids));
    }
    return obj;
}

QList<QString> OAIPublishResponse::getMessageIds() const {
    return m_message_ids;
}
void OAIPublishResponse::setMessageIds(const QList<QString> &message_ids) {
    m_message_ids = message_ids;
    m_message_ids_isSet = true;
}

bool OAIPublishResponse::is_message_ids_Set() const{
    return m_message_ids_isSet;
}

bool OAIPublishResponse::is_message_ids_Valid() const{
    return m_message_ids_isValid;
}

bool OAIPublishResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPublishResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
