/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1beta1a
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPullBatchResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPullBatchResponse::OAIPullBatchResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPullBatchResponse::OAIPullBatchResponse() {
    this->initializeModel();
}

OAIPullBatchResponse::~OAIPullBatchResponse() {}

void OAIPullBatchResponse::initializeModel() {

    m_pull_responses_isSet = false;
    m_pull_responses_isValid = false;
}

void OAIPullBatchResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPullBatchResponse::fromJsonObject(QJsonObject json) {

    m_pull_responses_isValid = ::OpenAPI::fromJsonValue(m_pull_responses, json[QString("pullResponses")]);
    m_pull_responses_isSet = !json[QString("pullResponses")].isNull() && m_pull_responses_isValid;
}

QString OAIPullBatchResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPullBatchResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_pull_responses.size() > 0) {
        obj.insert(QString("pullResponses"), ::OpenAPI::toJsonValue(m_pull_responses));
    }
    return obj;
}

QList<OAIPullResponse> OAIPullBatchResponse::getPullResponses() const {
    return m_pull_responses;
}
void OAIPullBatchResponse::setPullResponses(const QList<OAIPullResponse> &pull_responses) {
    m_pull_responses = pull_responses;
    m_pull_responses_isSet = true;
}

bool OAIPullBatchResponse::is_pull_responses_Set() const{
    return m_pull_responses_isSet;
}

bool OAIPullBatchResponse::is_pull_responses_Valid() const{
    return m_pull_responses_isValid;
}

bool OAIPullBatchResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pull_responses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPullBatchResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
