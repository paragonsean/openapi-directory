/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1beta1a
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPullResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPullResponse::OAIPullResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPullResponse::OAIPullResponse() {
    this->initializeModel();
}

OAIPullResponse::~OAIPullResponse() {}

void OAIPullResponse::initializeModel() {

    m_ack_id_isSet = false;
    m_ack_id_isValid = false;

    m_pubsub_event_isSet = false;
    m_pubsub_event_isValid = false;
}

void OAIPullResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPullResponse::fromJsonObject(QJsonObject json) {

    m_ack_id_isValid = ::OpenAPI::fromJsonValue(m_ack_id, json[QString("ackId")]);
    m_ack_id_isSet = !json[QString("ackId")].isNull() && m_ack_id_isValid;

    m_pubsub_event_isValid = ::OpenAPI::fromJsonValue(m_pubsub_event, json[QString("pubsubEvent")]);
    m_pubsub_event_isSet = !json[QString("pubsubEvent")].isNull() && m_pubsub_event_isValid;
}

QString OAIPullResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPullResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_ack_id_isSet) {
        obj.insert(QString("ackId"), ::OpenAPI::toJsonValue(m_ack_id));
    }
    if (m_pubsub_event.isSet()) {
        obj.insert(QString("pubsubEvent"), ::OpenAPI::toJsonValue(m_pubsub_event));
    }
    return obj;
}

QString OAIPullResponse::getAckId() const {
    return m_ack_id;
}
void OAIPullResponse::setAckId(const QString &ack_id) {
    m_ack_id = ack_id;
    m_ack_id_isSet = true;
}

bool OAIPullResponse::is_ack_id_Set() const{
    return m_ack_id_isSet;
}

bool OAIPullResponse::is_ack_id_Valid() const{
    return m_ack_id_isValid;
}

OAIPubsubEvent OAIPullResponse::getPubsubEvent() const {
    return m_pubsub_event;
}
void OAIPullResponse::setPubsubEvent(const OAIPubsubEvent &pubsub_event) {
    m_pubsub_event = pubsub_event;
    m_pubsub_event_isSet = true;
}

bool OAIPullResponse::is_pubsub_event_Set() const{
    return m_pubsub_event_isSet;
}

bool OAIPullResponse::is_pubsub_event_Valid() const{
    return m_pubsub_event_isValid;
}

bool OAIPullResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ack_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pubsub_event.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPullResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
