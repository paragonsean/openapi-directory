/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1beta1a
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscription.h
 *
 * A subscription resource.
 */

#ifndef OAISubscription_H
#define OAISubscription_H

#include <QJsonObject>

#include "OAIPushConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPushConfig;

class OAISubscription : public OAIObject {
public:
    OAISubscription();
    OAISubscription(QString json);
    ~OAISubscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAckDeadlineSeconds() const;
    void setAckDeadlineSeconds(const qint32 &ack_deadline_seconds);
    bool is_ack_deadline_seconds_Set() const;
    bool is_ack_deadline_seconds_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPushConfig getPushConfig() const;
    void setPushConfig(const OAIPushConfig &push_config);
    bool is_push_config_Set() const;
    bool is_push_config_Valid() const;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_ack_deadline_seconds;
    bool m_ack_deadline_seconds_isSet;
    bool m_ack_deadline_seconds_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPushConfig m_push_config;
    bool m_push_config_isSet;
    bool m_push_config_isValid;

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscription)

#endif // OAISubscription_H
