/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1beta1a
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Label from './Label';

/**
 * The PubsubMessage model module.
 * @module model/PubsubMessage
 * @version v1beta1a
 */
class PubsubMessage {
    /**
     * Constructs a new <code>PubsubMessage</code>.
     * A message data and its labels.
     * @alias module:model/PubsubMessage
     */
    constructor() { 
        
        PubsubMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PubsubMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PubsubMessage} obj Optional instance to populate.
     * @return {module:model/PubsubMessage} The populated <code>PubsubMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PubsubMessage();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'Blob');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], [Label]);
            }
            if (data.hasOwnProperty('messageId')) {
                obj['messageId'] = ApiClient.convertToType(data['messageId'], 'String');
            }
            if (data.hasOwnProperty('publishTime')) {
                obj['publishTime'] = ApiClient.convertToType(data['publishTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PubsubMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PubsubMessage</code>.
     */
    static validateJSON(data) {
        if (data['label']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['label'])) {
                throw new Error("Expected the field `label` to be an array in the JSON data but got " + data['label']);
            }
            // validate the optional field `label` (array)
            for (const item of data['label']) {
                Label.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['messageId'] && !(typeof data['messageId'] === 'string' || data['messageId'] instanceof String)) {
            throw new Error("Expected the field `messageId` to be a primitive type in the JSON string but got " + data['messageId']);
        }
        // ensure the json data is a string
        if (data['publishTime'] && !(typeof data['publishTime'] === 'string' || data['publishTime'] instanceof String)) {
            throw new Error("Expected the field `publishTime` to be a primitive type in the JSON string but got " + data['publishTime']);
        }

        return true;
    }


}



/**
 * The message payload.
 * @member {Blob} data
 */
PubsubMessage.prototype['data'] = undefined;

/**
 * Optional list of labels for this message. Keys in this collection must be unique.
 * @member {Array.<module:model/Label>} label
 */
PubsubMessage.prototype['label'] = undefined;

/**
 * ID of this message assigned by the server at publication time. Guaranteed to be unique within the topic. This value may be read by a subscriber that receives a PubsubMessage via a Pull call or a push delivery. It must not be populated by a publisher in a Publish call.
 * @member {String} messageId
 */
PubsubMessage.prototype['messageId'] = undefined;

/**
 * The time at which the message was published. The time is milliseconds since the UNIX epoch.
 * @member {String} publishTime
 */
PubsubMessage.prototype['publishTime'] = undefined;






export default PubsubMessage;

