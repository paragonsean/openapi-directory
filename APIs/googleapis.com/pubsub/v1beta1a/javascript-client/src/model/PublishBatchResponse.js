/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1beta1a
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PublishBatchResponse model module.
 * @module model/PublishBatchResponse
 * @version v1beta1a
 */
class PublishBatchResponse {
    /**
     * Constructs a new <code>PublishBatchResponse</code>.
     * Response for the PublishBatch method.
     * @alias module:model/PublishBatchResponse
     */
    constructor() { 
        
        PublishBatchResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PublishBatchResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublishBatchResponse} obj Optional instance to populate.
     * @return {module:model/PublishBatchResponse} The populated <code>PublishBatchResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublishBatchResponse();

            if (data.hasOwnProperty('messageIds')) {
                obj['messageIds'] = ApiClient.convertToType(data['messageIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublishBatchResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublishBatchResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['messageIds'])) {
            throw new Error("Expected the field `messageIds` to be an array in the JSON data but got " + data['messageIds']);
        }

        return true;
    }


}



/**
 * The server-assigned ID of each published message, in the same order as the messages in the request. IDs are guaranteed to be unique within the topic.
 * @member {Array.<String>} messageIds
 */
PublishBatchResponse.prototype['messageIds'] = undefined;






export default PublishBatchResponse;

