# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subscription import Subscription
from openapi_server import util


class ListSubscriptionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, subscription: List[Subscription]=None):
        """ListSubscriptionsResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListSubscriptionsResponse.
        :param subscription: The subscription of this ListSubscriptionsResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'subscription': List[Subscription]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'subscription': 'subscription'
        }

        self._next_page_token = next_page_token
        self._subscription = subscription

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSubscriptionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSubscriptionsResponse of this ListSubscriptionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListSubscriptionsResponse.

        If not empty, indicates that there are more subscriptions that match the request and this value should be passed to the next ListSubscriptionsRequest to continue.

        :return: The next_page_token of this ListSubscriptionsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListSubscriptionsResponse.

        If not empty, indicates that there are more subscriptions that match the request and this value should be passed to the next ListSubscriptionsRequest to continue.

        :param next_page_token: The next_page_token of this ListSubscriptionsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def subscription(self):
        """Gets the subscription of this ListSubscriptionsResponse.

        The subscriptions that match the request.

        :return: The subscription of this ListSubscriptionsResponse.
        :rtype: List[Subscription]
        """
        return self._subscription

    @subscription.setter
    def subscription(self, subscription):
        """Sets the subscription of this ListSubscriptionsResponse.

        The subscriptions that match the request.

        :param subscription: The subscription of this ListSubscriptionsResponse.
        :type subscription: List[Subscription]
        """

        self._subscription = subscription
