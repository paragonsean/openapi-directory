# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PullRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, return_immediately: bool=None, subscription: str=None):
        """PullRequest - a model defined in OpenAPI

        :param return_immediately: The return_immediately of this PullRequest.
        :param subscription: The subscription of this PullRequest.
        """
        self.openapi_types = {
            'return_immediately': bool,
            'subscription': str
        }

        self.attribute_map = {
            'return_immediately': 'returnImmediately',
            'subscription': 'subscription'
        }

        self._return_immediately = return_immediately
        self._subscription = subscription

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PullRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PullRequest of this PullRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def return_immediately(self):
        """Gets the return_immediately of this PullRequest.

        If this is specified as true the system will respond immediately even if it is not able to return a message in the Pull response. Otherwise the system is allowed to wait until at least one message is available rather than returning FAILED_PRECONDITION. The client may cancel the request if it does not wish to wait any longer for the response.

        :return: The return_immediately of this PullRequest.
        :rtype: bool
        """
        return self._return_immediately

    @return_immediately.setter
    def return_immediately(self, return_immediately):
        """Sets the return_immediately of this PullRequest.

        If this is specified as true the system will respond immediately even if it is not able to return a message in the Pull response. Otherwise the system is allowed to wait until at least one message is available rather than returning FAILED_PRECONDITION. The client may cancel the request if it does not wish to wait any longer for the response.

        :param return_immediately: The return_immediately of this PullRequest.
        :type return_immediately: bool
        """

        self._return_immediately = return_immediately

    @property
    def subscription(self):
        """Gets the subscription of this PullRequest.

        The subscription from which a message should be pulled.

        :return: The subscription of this PullRequest.
        :rtype: str
        """
        return self._subscription

    @subscription.setter
    def subscription(self, subscription):
        """Sets the subscription of this PullRequest.

        The subscription from which a message should be pulled.

        :param subscription: The subscription of this PullRequest.
        :type subscription: str
        """

        self._subscription = subscription
