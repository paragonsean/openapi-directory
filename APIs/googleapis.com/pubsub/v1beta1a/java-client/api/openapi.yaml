openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "Provides reliable, many-to-many, asynchronous messaging between applications. "
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Pub/Sub API
  version: v1beta1a
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://pubsub.googleapis.com/$discovery/rest?version=v1beta1a
    version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: pubsub
externalDocs:
  url: https://cloud.google.com/pubsub/docs
servers:
- url: https://pubsub.googleapis.com/
tags:
- name: subscriptions
- name: topics
paths:
  /v1beta1a/subscriptions:
    get:
      description: Lists matching subscriptions.
      operationId: pubsub.subscriptions.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of subscriptions to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The value obtained in the last ListSubscriptionsResponse for
          continuation.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: A valid label query expression.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - subscriptions
      x-accepts:
      - application/json
    post:
      description: "Creates a subscription on a given topic for a given subscriber.\
        \ If the subscription already exists, returns ALREADY_EXISTS. If the corresponding\
        \ topic doesn't exist, returns NOT_FOUND. If the name is not provided in the\
        \ request, the server will assign a random name for this subscription on the\
        \ same project as the topic."
      operationId: pubsub.subscriptions.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - subscriptions
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta1a/subscriptions/acknowledge:
    post:
      description: "Acknowledges a particular received message: the Pub/Sub system\
        \ can remove the given message from the subscription. Acknowledging a message\
        \ whose Ack deadline has expired may succeed, but the message could have been\
        \ already redelivered. Acknowledging a message more than once will not result\
        \ in an error. This is only used for messages received via pull."
      operationId: pubsub.subscriptions.acknowledge
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - subscriptions
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta1a/subscriptions/modifyAckDeadline:
    post:
      description: Modifies the Ack deadline for a message received from a pull request.
      operationId: pubsub.subscriptions.modifyAckDeadline
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAckDeadlineRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - subscriptions
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta1a/subscriptions/modifyPushConfig:
    post:
      description: Modifies the PushConfig for a specified subscription. This method
        can be used to suspend the flow of messages to an endpoint by clearing the
        PushConfig field in the request. Messages will be accumulated for delivery
        even if no push configuration is defined or while the configuration is modified.
      operationId: pubsub.subscriptions.modifyPushConfig
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyPushConfigRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - subscriptions
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta1a/subscriptions/pull:
    post:
      description: "Pulls a single message from the server. If return_immediately\
        \ is true, and no messages are available in the subscription, this method\
        \ returns FAILED_PRECONDITION. The system is free to return an UNAVAILABLE\
        \ error if no messages are available in a reasonable amount of time (to reduce\
        \ system load)."
      operationId: pubsub.subscriptions.pull
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - subscriptions
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta1a/subscriptions/pullBatch:
    post:
      description: Pulls messages from the server. Returns an empty list if there
        are no messages available in the backlog. The system is free to return UNAVAILABLE
        if there are too many pull requests outstanding for the given subscription.
      operationId: pubsub.subscriptions.pullBatch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullBatchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullBatchResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - subscriptions
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta1a/subscriptions/{subscription}:
    delete:
      description: Deletes an existing subscription. All pending messages in the subscription
        are immediately dropped. Calls to Pull after deletion will return NOT_FOUND.
      operationId: pubsub.subscriptions.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The subscription to delete.
        explode: false
        in: path
        name: subscription
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - subscriptions
      x-accepts:
      - application/json
    get:
      description: Gets the configuration details of a subscription.
      operationId: pubsub.subscriptions.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the subscription to get.
        explode: false
        in: path
        name: subscription
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - subscriptions
      x-accepts:
      - application/json
  /v1beta1a/topics:
    get:
      description: Lists matching topics.
      operationId: pubsub.topics.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of topics to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: The value obtained in the last ListTopicsResponse for continuation.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: A valid label query expression.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - topics
      x-accepts:
      - application/json
    post:
      description: Creates the given topic with the given name.
      operationId: pubsub.topics.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - topics
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta1a/topics/publish:
    post:
      description: Adds a message to the topic. Returns NOT_FOUND if the topic does
        not exist.
      operationId: pubsub.topics.publish
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - topics
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta1a/topics/publishBatch:
    post:
      description: Adds one or more messages to the topic. Returns NOT_FOUND if the
        topic does not exist.
      operationId: pubsub.topics.publishBatch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishBatchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishBatchResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - topics
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta1a/topics/{topic}:
    delete:
      description: "Deletes the topic with the given name. Returns NOT_FOUND if the\
        \ topic does not exist. After a topic is deleted, a new topic may be created\
        \ with the same name."
      operationId: pubsub.topics.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Name of the topic to delete.
        explode: false
        in: path
        name: topic
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - topics
      x-accepts:
      - application/json
    get:
      description: "Gets the configuration of a topic. Since the topic only has the\
        \ name attribute, this method is only useful to check the existence of a topic.\
        \ If other attributes are added in the future, they will be returned here."
      operationId: pubsub.topics.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the topic to get.
        explode: false
        in: path
        name: topic
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      - Oauth2:
        - https://www.googleapis.com/auth/pubsub
        Oauth2c:
        - https://www.googleapis.com/auth/pubsub
      tags:
      - topics
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    AcknowledgeRequest:
      description: Request for the Acknowledge method.
      example:
        ackId:
        - ackId
        - ackId
        subscription: subscription
      properties:
        ackId:
          description: The acknowledgment ID for the message being acknowledged. This
            was returned by the Pub/Sub system in the Pull response.
          items:
            type: string
          type: array
        subscription:
          description: The subscription whose message is being acknowledged.
          type: string
      type: object
    Empty:
      description: "An empty message that you can re-use to avoid defining duplicated\
        \ empty messages in your project. A typical example is to use it as argument\
        \ or the return value of a service API. For instance: service Foo { rpc Bar\
        \ (proto2.Empty) returns (proto2.Empty) { }; }; BEGIN GOOGLE-INTERNAL The\
        \ difference between this one and net/rpc/empty-message.proto is that 1) The\
        \ generated message here is in proto2 C++ API. 2) The proto2.Empty has minimum\
        \ dependencies (no message_set or net/rpc dependencies) END GOOGLE-INTERNAL"
      properties: {}
      type: object
    Label:
      description: A key-value pair applied to a given object.
      example:
        strValue: strValue
        key: key
        numValue: numValue
      properties:
        key:
          description: "The key of a label is a syntactically valid URL (as per RFC\
            \ 1738) with the \"scheme\" and initial slashes omitted and with the additional\
            \ restrictions noted below. Each key should be globally unique. The \"\
            host\" portion is called the \"namespace\" and is not necessarily resolvable\
            \ to a network endpoint. Instead, the namespace indicates what system\
            \ or entity defines the semantics of the label. Namespaces do not restrict\
            \ the set of objects to which a label may be associated. Keys are defined\
            \ by the following grammar: key = hostname \"/\" kpath kpath = ksegment\
            \ *[ \"/\" ksegment ] ksegment = alphadigit | *[ alphadigit | \"-\" |\
            \ \"_\" | \".\" ] where \"hostname\" and \"alphadigit\" are defined as\
            \ in RFC 1738. Example key: spanner.google.com/universe"
          type: string
        numValue:
          description: An integer value.
          format: int64
          type: string
        strValue:
          description: A string value.
          type: string
      type: object
    ListSubscriptionsResponse:
      description: Response for the ListSubscriptions method.
      example:
        nextPageToken: nextPageToken
        subscription:
        - pushConfig:
            pushEndpoint: pushEndpoint
          name: name
          topic: topic
          ackDeadlineSeconds: 0
        - pushConfig:
            pushEndpoint: pushEndpoint
          name: name
          topic: topic
          ackDeadlineSeconds: 0
      properties:
        nextPageToken:
          description: "If not empty, indicates that there are more subscriptions\
            \ that match the request and this value should be passed to the next ListSubscriptionsRequest\
            \ to continue."
          type: string
        subscription:
          description: The subscriptions that match the request.
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
      type: object
    ListTopicsResponse:
      description: Response for the ListTopics method.
      example:
        nextPageToken: nextPageToken
        topic:
        - name: name
        - name: name
      properties:
        nextPageToken:
          description: "If not empty, indicates that there are more topics that match\
            \ the request, and this value should be passed to the next ListTopicsRequest\
            \ to continue."
          type: string
        topic:
          description: The resulting topics.
          items:
            $ref: '#/components/schemas/Topic'
          type: array
      type: object
    ModifyAckDeadlineRequest:
      description: Request for the ModifyAckDeadline method.
      example:
        ackId: ackId
        ackIds:
        - ackIds
        - ackIds
        subscription: subscription
        ackDeadlineSeconds: 0
      properties:
        ackDeadlineSeconds:
          description: "The new ack deadline with respect to the time this request\
            \ was sent to the Pub/Sub system. Must be >= 0. For example, if the value\
            \ is 10, the new ack deadline will expire 10 seconds after the ModifyAckDeadline\
            \ call was made. Specifying zero may immediately make the message available\
            \ for another pull request."
          format: int32
          type: integer
        ackId:
          deprecated: true
          description: "The acknowledgment ID. Either this or ack_ids must be populated,\
            \ not both."
          type: string
        ackIds:
          description: "List of acknowledgment IDs. Either this field or ack_id should\
            \ be populated, not both."
          items:
            type: string
          type: array
        subscription:
          description: "Next Index: 5 The name of the subscription from which messages\
            \ are being pulled."
          type: string
      type: object
    ModifyPushConfigRequest:
      description: Request for the ModifyPushConfig method.
      example:
        pushConfig:
          pushEndpoint: pushEndpoint
        subscription: subscription
      properties:
        pushConfig:
          $ref: '#/components/schemas/PushConfig'
        subscription:
          description: The name of the subscription.
          type: string
      type: object
    PublishBatchRequest:
      description: Request for the PublishBatch method.
      example:
        messages:
        - publishTime: publishTime
          data: data
          messageId: messageId
          label:
          - strValue: strValue
            key: key
            numValue: numValue
          - strValue: strValue
            key: key
            numValue: numValue
        - publishTime: publishTime
          data: data
          messageId: messageId
          label:
          - strValue: strValue
            key: key
            numValue: numValue
          - strValue: strValue
            key: key
            numValue: numValue
        topic: topic
      properties:
        messages:
          description: The messages to publish.
          items:
            $ref: '#/components/schemas/PubsubMessage'
          type: array
        topic:
          description: The messages in the request will be published on this topic.
          type: string
      type: object
    PublishBatchResponse:
      description: Response for the PublishBatch method.
      example:
        messageIds:
        - messageIds
        - messageIds
      properties:
        messageIds:
          description: "The server-assigned ID of each published message, in the same\
            \ order as the messages in the request. IDs are guaranteed to be unique\
            \ within the topic."
          items:
            type: string
          type: array
      type: object
    PublishRequest:
      description: Request for the Publish method.
      example:
        topic: topic
        message:
          publishTime: publishTime
          data: data
          messageId: messageId
          label:
          - strValue: strValue
            key: key
            numValue: numValue
          - strValue: strValue
            key: key
            numValue: numValue
      properties:
        message:
          $ref: '#/components/schemas/PubsubMessage'
        topic:
          description: The message in the request will be published on this topic.
          type: string
      type: object
    PubsubEvent:
      description: An event indicating a received message or truncation event.
      example:
        deleted: true
        truncated: true
        subscription: subscription
        message:
          publishTime: publishTime
          data: data
          messageId: messageId
          label:
          - strValue: strValue
            key: key
            numValue: numValue
          - strValue: strValue
            key: key
            numValue: numValue
      properties:
        deleted:
          description: "Indicates that this subscription has been deleted. (Note that\
            \ pull subscribers will always receive NOT_FOUND in response in their\
            \ pull request on the subscription, rather than seeing this boolean.)"
          type: boolean
        message:
          $ref: '#/components/schemas/PubsubMessage'
        subscription:
          description: The subscription that received the event.
          type: string
        truncated:
          description: Indicates that this subscription has been truncated.
          type: boolean
      type: object
    PubsubMessage:
      description: A message data and its labels.
      example:
        publishTime: publishTime
        data: data
        messageId: messageId
        label:
        - strValue: strValue
          key: key
          numValue: numValue
        - strValue: strValue
          key: key
          numValue: numValue
      properties:
        data:
          description: The message payload.
          format: byte
          type: string
        label:
          description: Optional list of labels for this message. Keys in this collection
            must be unique.
          items:
            $ref: '#/components/schemas/Label'
          type: array
        messageId:
          description: ID of this message assigned by the server at publication time.
            Guaranteed to be unique within the topic. This value may be read by a
            subscriber that receives a PubsubMessage via a Pull call or a push delivery.
            It must not be populated by a publisher in a Publish call.
          type: string
        publishTime:
          description: The time at which the message was published. The time is milliseconds
            since the UNIX epoch.
          format: int64
          type: string
      type: object
    PullBatchRequest:
      description: Request for the PullBatch method.
      example:
        maxEvents: 0
        returnImmediately: true
        subscription: subscription
      properties:
        maxEvents:
          description: The maximum number of PubsubEvents returned for this request.
            The Pub/Sub system may return fewer than the number of events specified.
          format: int32
          type: integer
        returnImmediately:
          description: If this is specified as true the system will respond immediately
            even if it is not able to return a message in the Pull response. Otherwise
            the system is allowed to wait until at least one message is available
            rather than returning no messages. The client may cancel the request if
            it does not wish to wait any longer for the response.
          type: boolean
        subscription:
          description: The subscription from which messages should be pulled.
          type: string
      type: object
    PullBatchResponse:
      description: Response for the PullBatch method.
      example:
        pullResponses:
        - ackId: ackId
          pubsubEvent:
            deleted: true
            truncated: true
            subscription: subscription
            message:
              publishTime: publishTime
              data: data
              messageId: messageId
              label:
              - strValue: strValue
                key: key
                numValue: numValue
              - strValue: strValue
                key: key
                numValue: numValue
        - ackId: ackId
          pubsubEvent:
            deleted: true
            truncated: true
            subscription: subscription
            message:
              publishTime: publishTime
              data: data
              messageId: messageId
              label:
              - strValue: strValue
                key: key
                numValue: numValue
              - strValue: strValue
                key: key
                numValue: numValue
      properties:
        pullResponses:
          description: Received Pub/Sub messages or status events. The Pub/Sub system
            will return zero messages if there are no more messages available in the
            backlog. The Pub/Sub system may return fewer than the max_events requested
            even if there are more messages available in the backlog.
          items:
            $ref: '#/components/schemas/PullResponse'
          type: array
      type: object
    PullRequest:
      description: Request for the Pull method.
      example:
        returnImmediately: true
        subscription: subscription
      properties:
        returnImmediately:
          description: If this is specified as true the system will respond immediately
            even if it is not able to return a message in the Pull response. Otherwise
            the system is allowed to wait until at least one message is available
            rather than returning FAILED_PRECONDITION. The client may cancel the request
            if it does not wish to wait any longer for the response.
          type: boolean
        subscription:
          description: The subscription from which a message should be pulled.
          type: string
      type: object
    PullResponse:
      description: Either a PubsubMessage or a truncation event. One of these two
        must be populated.
      example:
        ackId: ackId
        pubsubEvent:
          deleted: true
          truncated: true
          subscription: subscription
          message:
            publishTime: publishTime
            data: data
            messageId: messageId
            label:
            - strValue: strValue
              key: key
              numValue: numValue
            - strValue: strValue
              key: key
              numValue: numValue
      properties:
        ackId:
          description: This ID must be used to acknowledge the received event or message.
          type: string
        pubsubEvent:
          $ref: '#/components/schemas/PubsubEvent'
      type: object
    PushConfig:
      description: Configuration for a push delivery endpoint.
      example:
        pushEndpoint: pushEndpoint
      properties:
        pushEndpoint:
          description: "A URL locating the endpoint to which messages should be pushed.\
            \ For example, a Webhook endpoint might use \"https://example.com/push\"\
            ."
          type: string
      type: object
    Subscription:
      description: A subscription resource.
      example:
        pushConfig:
          pushEndpoint: pushEndpoint
        name: name
        topic: topic
        ackDeadlineSeconds: 0
      properties:
        ackDeadlineSeconds:
          description: "For either push or pull delivery, the value is the maximum\
            \ time after a subscriber receives a message before the subscriber should\
            \ acknowledge or Nack the message. If the Ack deadline for a message passes\
            \ without an Ack or a Nack, the Pub/Sub system will eventually redeliver\
            \ the message. If a subscriber acknowledges after the deadline, the Pub/Sub\
            \ system may accept the Ack, but it is possible that the message has been\
            \ already delivered again. Multiple Acks to the message are allowed and\
            \ will succeed. For push delivery, this value is used to set the request\
            \ timeout for the call to the push endpoint. For pull delivery, this value\
            \ is used as the initial value for the Ack deadline. It may be overridden\
            \ for each message using its corresponding ack_id with ModifyAckDeadline.\
            \ While a message is outstanding (i.e. it has been delivered to a pull\
            \ subscriber and the subscriber has not yet Acked or Nacked), the Pub/Sub\
            \ system will not deliver that message to another pull subscriber (on\
            \ a best-effort basis)."
          format: int32
          type: integer
        name:
          description: Name of the subscription.
          type: string
        pushConfig:
          $ref: '#/components/schemas/PushConfig'
        topic:
          description: The name of the topic from which this subscription is receiving
            messages.
          type: string
      type: object
    Topic:
      description: A topic resource.
      example:
        name: name
      properties:
        name:
          description: Name of the topic.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/pubsub: View and manage Pub/Sub topics
              and subscriptions
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
            https://www.googleapis.com/auth/pubsub: View and manage Pub/Sub topics
              and subscriptions
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

