# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AvroConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, write_metadata: bool=None):
        """AvroConfig - a model defined in OpenAPI

        :param write_metadata: The write_metadata of this AvroConfig.
        """
        self.openapi_types = {
            'write_metadata': bool
        }

        self.attribute_map = {
            'write_metadata': 'writeMetadata'
        }

        self._write_metadata = write_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvroConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvroConfig of this AvroConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def write_metadata(self):
        """Gets the write_metadata of this AvroConfig.

        Optional. When true, write the subscription name, message_id, publish_time, attributes, and ordering_key as additional fields in the output. The subscription name, message_id, and publish_time fields are put in their own fields while all other message properties other than data (for example, an ordering_key, if present) are added as entries in the attributes map.

        :return: The write_metadata of this AvroConfig.
        :rtype: bool
        """
        return self._write_metadata

    @write_metadata.setter
    def write_metadata(self, write_metadata):
        """Sets the write_metadata of this AvroConfig.

        Optional. When true, write the subscription name, message_id, publish_time, attributes, and ordering_key as additional fields in the output. The subscription name, message_id, and publish_time fields are put in their own fields while all other message properties other than data (for example, an ordering_key, if present) are added as entries in the attributes map.

        :param write_metadata: The write_metadata of this AvroConfig.
        :type write_metadata: bool
        """

        self._write_metadata = write_metadata
