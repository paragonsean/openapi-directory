# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pubsub_message import PubsubMessage
from openapi_server import util


class PublishRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages: List[PubsubMessage]=None):
        """PublishRequest - a model defined in OpenAPI

        :param messages: The messages of this PublishRequest.
        """
        self.openapi_types = {
            'messages': List[PubsubMessage]
        }

        self.attribute_map = {
            'messages': 'messages'
        }

        self._messages = messages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishRequest of this PublishRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages(self):
        """Gets the messages of this PublishRequest.

        Required. The messages to publish.

        :return: The messages of this PublishRequest.
        :rtype: List[PubsubMessage]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this PublishRequest.

        Required. The messages to publish.

        :param messages: The messages of this PublishRequest.
        :type messages: List[PubsubMessage]
        """

        self._messages = messages
