/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIngestionDataSourceSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIngestionDataSourceSettings::OAIIngestionDataSourceSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIngestionDataSourceSettings::OAIIngestionDataSourceSettings() {
    this->initializeModel();
}

OAIIngestionDataSourceSettings::~OAIIngestionDataSourceSettings() {}

void OAIIngestionDataSourceSettings::initializeModel() {

    m_aws_kinesis_isSet = false;
    m_aws_kinesis_isValid = false;
}

void OAIIngestionDataSourceSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIngestionDataSourceSettings::fromJsonObject(QJsonObject json) {

    m_aws_kinesis_isValid = ::OpenAPI::fromJsonValue(m_aws_kinesis, json[QString("awsKinesis")]);
    m_aws_kinesis_isSet = !json[QString("awsKinesis")].isNull() && m_aws_kinesis_isValid;
}

QString OAIIngestionDataSourceSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIngestionDataSourceSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_kinesis.isSet()) {
        obj.insert(QString("awsKinesis"), ::OpenAPI::toJsonValue(m_aws_kinesis));
    }
    return obj;
}

OAIAwsKinesis OAIIngestionDataSourceSettings::getAwsKinesis() const {
    return m_aws_kinesis;
}
void OAIIngestionDataSourceSettings::setAwsKinesis(const OAIAwsKinesis &aws_kinesis) {
    m_aws_kinesis = aws_kinesis;
    m_aws_kinesis_isSet = true;
}

bool OAIIngestionDataSourceSettings::is_aws_kinesis_Set() const{
    return m_aws_kinesis_isSet;
}

bool OAIIngestionDataSourceSettings::is_aws_kinesis_Valid() const{
    return m_aws_kinesis_isValid;
}

bool OAIIngestionDataSourceSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_kinesis.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIngestionDataSourceSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
