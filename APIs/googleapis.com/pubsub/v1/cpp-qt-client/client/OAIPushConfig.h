/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPushConfig.h
 *
 * Configuration for a push delivery endpoint.
 */

#ifndef OAIPushConfig_H
#define OAIPushConfig_H

#include <QJsonObject>

#include "OAINoWrapper.h"
#include "OAIObject.h"
#include "OAIOidcToken.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINoWrapper;
class OAIOidcToken;

class OAIPushConfig : public OAIObject {
public:
    OAIPushConfig();
    OAIPushConfig(QString json);
    ~OAIPushConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAttributes() const;
    void setAttributes(const QMap<QString, QString> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAINoWrapper getNoWrapper() const;
    void setNoWrapper(const OAINoWrapper &no_wrapper);
    bool is_no_wrapper_Set() const;
    bool is_no_wrapper_Valid() const;

    OAIOidcToken getOidcToken() const;
    void setOidcToken(const OAIOidcToken &oidc_token);
    bool is_oidc_token_Set() const;
    bool is_oidc_token_Valid() const;

    OAIObject getPubsubWrapper() const;
    void setPubsubWrapper(const OAIObject &pubsub_wrapper);
    bool is_pubsub_wrapper_Set() const;
    bool is_pubsub_wrapper_Valid() const;

    QString getPushEndpoint() const;
    void setPushEndpoint(const QString &push_endpoint);
    bool is_push_endpoint_Set() const;
    bool is_push_endpoint_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAINoWrapper m_no_wrapper;
    bool m_no_wrapper_isSet;
    bool m_no_wrapper_isValid;

    OAIOidcToken m_oidc_token;
    bool m_oidc_token_isSet;
    bool m_oidc_token_isValid;

    OAIObject m_pubsub_wrapper;
    bool m_pubsub_wrapper_isSet;
    bool m_pubsub_wrapper_isValid;

    QString m_push_endpoint;
    bool m_push_endpoint_isSet;
    bool m_push_endpoint_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPushConfig)

#endif // OAIPushConfig_H
