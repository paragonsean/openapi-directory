/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModifyAckDeadlineRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModifyAckDeadlineRequest::OAIModifyAckDeadlineRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModifyAckDeadlineRequest::OAIModifyAckDeadlineRequest() {
    this->initializeModel();
}

OAIModifyAckDeadlineRequest::~OAIModifyAckDeadlineRequest() {}

void OAIModifyAckDeadlineRequest::initializeModel() {

    m_ack_deadline_seconds_isSet = false;
    m_ack_deadline_seconds_isValid = false;

    m_ack_ids_isSet = false;
    m_ack_ids_isValid = false;
}

void OAIModifyAckDeadlineRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModifyAckDeadlineRequest::fromJsonObject(QJsonObject json) {

    m_ack_deadline_seconds_isValid = ::OpenAPI::fromJsonValue(m_ack_deadline_seconds, json[QString("ackDeadlineSeconds")]);
    m_ack_deadline_seconds_isSet = !json[QString("ackDeadlineSeconds")].isNull() && m_ack_deadline_seconds_isValid;

    m_ack_ids_isValid = ::OpenAPI::fromJsonValue(m_ack_ids, json[QString("ackIds")]);
    m_ack_ids_isSet = !json[QString("ackIds")].isNull() && m_ack_ids_isValid;
}

QString OAIModifyAckDeadlineRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModifyAckDeadlineRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_ack_deadline_seconds_isSet) {
        obj.insert(QString("ackDeadlineSeconds"), ::OpenAPI::toJsonValue(m_ack_deadline_seconds));
    }
    if (m_ack_ids.size() > 0) {
        obj.insert(QString("ackIds"), ::OpenAPI::toJsonValue(m_ack_ids));
    }
    return obj;
}

qint32 OAIModifyAckDeadlineRequest::getAckDeadlineSeconds() const {
    return m_ack_deadline_seconds;
}
void OAIModifyAckDeadlineRequest::setAckDeadlineSeconds(const qint32 &ack_deadline_seconds) {
    m_ack_deadline_seconds = ack_deadline_seconds;
    m_ack_deadline_seconds_isSet = true;
}

bool OAIModifyAckDeadlineRequest::is_ack_deadline_seconds_Set() const{
    return m_ack_deadline_seconds_isSet;
}

bool OAIModifyAckDeadlineRequest::is_ack_deadline_seconds_Valid() const{
    return m_ack_deadline_seconds_isValid;
}

QList<QString> OAIModifyAckDeadlineRequest::getAckIds() const {
    return m_ack_ids;
}
void OAIModifyAckDeadlineRequest::setAckIds(const QList<QString> &ack_ids) {
    m_ack_ids = ack_ids;
    m_ack_ids_isSet = true;
}

bool OAIModifyAckDeadlineRequest::is_ack_ids_Set() const{
    return m_ack_ids_isSet;
}

bool OAIModifyAckDeadlineRequest::is_ack_ids_Valid() const{
    return m_ack_ids_isValid;
}

bool OAIModifyAckDeadlineRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ack_deadline_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ack_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModifyAckDeadlineRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
