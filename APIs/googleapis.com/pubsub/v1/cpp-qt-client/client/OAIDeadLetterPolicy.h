/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeadLetterPolicy.h
 *
 * Dead lettering is done on a best effort basis. The same message might be dead lettered multiple times. If validation on any of the fields fails at subscription creation/updation, the create/update subscription request will fail.
 */

#ifndef OAIDeadLetterPolicy_H
#define OAIDeadLetterPolicy_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeadLetterPolicy : public OAIObject {
public:
    OAIDeadLetterPolicy();
    OAIDeadLetterPolicy(QString json);
    ~OAIDeadLetterPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeadLetterTopic() const;
    void setDeadLetterTopic(const QString &dead_letter_topic);
    bool is_dead_letter_topic_Set() const;
    bool is_dead_letter_topic_Valid() const;

    qint32 getMaxDeliveryAttempts() const;
    void setMaxDeliveryAttempts(const qint32 &max_delivery_attempts);
    bool is_max_delivery_attempts_Set() const;
    bool is_max_delivery_attempts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dead_letter_topic;
    bool m_dead_letter_topic_isSet;
    bool m_dead_letter_topic_isValid;

    qint32 m_max_delivery_attempts;
    bool m_max_delivery_attempts_isSet;
    bool m_max_delivery_attempts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeadLetterPolicy)

#endif // OAIDeadLetterPolicy_H
