/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AwsKinesis model module.
 * @module model/AwsKinesis
 * @version v1
 */
class AwsKinesis {
    /**
     * Constructs a new <code>AwsKinesis</code>.
     * Ingestion settings for Amazon Kinesis Data Streams.
     * @alias module:model/AwsKinesis
     */
    constructor() { 
        
        AwsKinesis.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AwsKinesis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AwsKinesis} obj Optional instance to populate.
     * @return {module:model/AwsKinesis} The populated <code>AwsKinesis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AwsKinesis();

            if (data.hasOwnProperty('awsRoleArn')) {
                obj['awsRoleArn'] = ApiClient.convertToType(data['awsRoleArn'], 'String');
            }
            if (data.hasOwnProperty('consumerArn')) {
                obj['consumerArn'] = ApiClient.convertToType(data['consumerArn'], 'String');
            }
            if (data.hasOwnProperty('gcpServiceAccount')) {
                obj['gcpServiceAccount'] = ApiClient.convertToType(data['gcpServiceAccount'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('streamArn')) {
                obj['streamArn'] = ApiClient.convertToType(data['streamArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AwsKinesis</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AwsKinesis</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['awsRoleArn'] && !(typeof data['awsRoleArn'] === 'string' || data['awsRoleArn'] instanceof String)) {
            throw new Error("Expected the field `awsRoleArn` to be a primitive type in the JSON string but got " + data['awsRoleArn']);
        }
        // ensure the json data is a string
        if (data['consumerArn'] && !(typeof data['consumerArn'] === 'string' || data['consumerArn'] instanceof String)) {
            throw new Error("Expected the field `consumerArn` to be a primitive type in the JSON string but got " + data['consumerArn']);
        }
        // ensure the json data is a string
        if (data['gcpServiceAccount'] && !(typeof data['gcpServiceAccount'] === 'string' || data['gcpServiceAccount'] instanceof String)) {
            throw new Error("Expected the field `gcpServiceAccount` to be a primitive type in the JSON string but got " + data['gcpServiceAccount']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['streamArn'] && !(typeof data['streamArn'] === 'string' || data['streamArn'] instanceof String)) {
            throw new Error("Expected the field `streamArn` to be a primitive type in the JSON string but got " + data['streamArn']);
        }

        return true;
    }


}



/**
 * Required. AWS role ARN to be used for Federated Identity authentication with Kinesis. Check the Pub/Sub docs for how to set up this role and the required permissions that need to be attached to it.
 * @member {String} awsRoleArn
 */
AwsKinesis.prototype['awsRoleArn'] = undefined;

/**
 * Required. The Kinesis consumer ARN to used for ingestion in Enhanced Fan-Out mode. The consumer must be already created and ready to be used.
 * @member {String} consumerArn
 */
AwsKinesis.prototype['consumerArn'] = undefined;

/**
 * Required. The GCP service account to be used for Federated Identity authentication with Kinesis (via a `AssumeRoleWithWebIdentity` call for the provided role). The `aws_role_arn` must be set up with `accounts.google.com:sub` equals to this service account number.
 * @member {String} gcpServiceAccount
 */
AwsKinesis.prototype['gcpServiceAccount'] = undefined;

/**
 * Output only. An output-only field that indicates the state of the Kinesis ingestion source.
 * @member {module:model/AwsKinesis.StateEnum} state
 */
AwsKinesis.prototype['state'] = undefined;

/**
 * Required. The Kinesis stream ARN to ingest data from.
 * @member {String} streamArn
 */
AwsKinesis.prototype['streamArn'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
AwsKinesis['StateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "KINESIS_PERMISSION_DENIED"
     * @const
     */
    "KINESIS_PERMISSION_DENIED": "KINESIS_PERMISSION_DENIED",

    /**
     * value: "PUBLISH_PERMISSION_DENIED"
     * @const
     */
    "PUBLISH_PERMISSION_DENIED": "PUBLISH_PERMISSION_DENIED",

    /**
     * value: "STREAM_NOT_FOUND"
     * @const
     */
    "STREAM_NOT_FOUND": "STREAM_NOT_FOUND",

    /**
     * value: "CONSUMER_NOT_FOUND"
     * @const
     */
    "CONSUMER_NOT_FOUND": "CONSUMER_NOT_FOUND"
};



export default AwsKinesis;

