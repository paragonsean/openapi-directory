/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NoWrapper from './NoWrapper';
import OidcToken from './OidcToken';

/**
 * The PushConfig model module.
 * @module model/PushConfig
 * @version v1
 */
class PushConfig {
    /**
     * Constructs a new <code>PushConfig</code>.
     * Configuration for a push delivery endpoint.
     * @alias module:model/PushConfig
     */
    constructor() { 
        
        PushConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PushConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PushConfig} obj Optional instance to populate.
     * @return {module:model/PushConfig} The populated <code>PushConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PushConfig();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': 'String'});
            }
            if (data.hasOwnProperty('noWrapper')) {
                obj['noWrapper'] = NoWrapper.constructFromObject(data['noWrapper']);
            }
            if (data.hasOwnProperty('oidcToken')) {
                obj['oidcToken'] = OidcToken.constructFromObject(data['oidcToken']);
            }
            if (data.hasOwnProperty('pubsubWrapper')) {
                obj['pubsubWrapper'] = ApiClient.convertToType(data['pubsubWrapper'], Object);
            }
            if (data.hasOwnProperty('pushEndpoint')) {
                obj['pushEndpoint'] = ApiClient.convertToType(data['pushEndpoint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PushConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PushConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `noWrapper`
        if (data['noWrapper']) { // data not null
          NoWrapper.validateJSON(data['noWrapper']);
        }
        // validate the optional field `oidcToken`
        if (data['oidcToken']) { // data not null
          OidcToken.validateJSON(data['oidcToken']);
        }
        // ensure the json data is a string
        if (data['pushEndpoint'] && !(typeof data['pushEndpoint'] === 'string' || data['pushEndpoint'] instanceof String)) {
            throw new Error("Expected the field `pushEndpoint` to be a primitive type in the JSON string but got " + data['pushEndpoint']);
        }

        return true;
    }


}



/**
 * Optional. Endpoint configuration attributes that can be used to control different aspects of the message delivery. The only currently supported attribute is `x-goog-version`, which you can use to change the format of the pushed message. This attribute indicates the version of the data expected by the endpoint. This controls the shape of the pushed message (i.e., its fields and metadata). If not present during the `CreateSubscription` call, it will default to the version of the Pub/Sub API used to make such call. If not present in a `ModifyPushConfig` call, its value will not be changed. `GetSubscription` calls will always return a valid version, even if the subscription was created without this attribute. The only supported values for the `x-goog-version` attribute are: * `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API. * `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API. For example: `attributes { \"x-goog-version\": \"v1\" }`
 * @member {Object.<String, String>} attributes
 */
PushConfig.prototype['attributes'] = undefined;

/**
 * @member {module:model/NoWrapper} noWrapper
 */
PushConfig.prototype['noWrapper'] = undefined;

/**
 * @member {module:model/OidcToken} oidcToken
 */
PushConfig.prototype['oidcToken'] = undefined;

/**
 * The payload to the push endpoint is in the form of the JSON representation of a PubsubMessage (https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#pubsubmessage).
 * @member {Object} pubsubWrapper
 */
PushConfig.prototype['pubsubWrapper'] = undefined;

/**
 * Optional. A URL locating the endpoint to which messages should be pushed. For example, a Webhook endpoint might use `https://example.com/push`.
 * @member {String} pushEndpoint
 */
PushConfig.prototype['pushEndpoint'] = undefined;






export default PushConfig;

