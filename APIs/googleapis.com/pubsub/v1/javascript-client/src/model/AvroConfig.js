/**
 * Cloud Pub/Sub API
 * Provides reliable, many-to-many, asynchronous messaging between applications. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AvroConfig model module.
 * @module model/AvroConfig
 * @version v1
 */
class AvroConfig {
    /**
     * Constructs a new <code>AvroConfig</code>.
     * Configuration for writing message data in Avro format. Message payloads and metadata will be written to files as an Avro binary.
     * @alias module:model/AvroConfig
     */
    constructor() { 
        
        AvroConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AvroConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvroConfig} obj Optional instance to populate.
     * @return {module:model/AvroConfig} The populated <code>AvroConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvroConfig();

            if (data.hasOwnProperty('writeMetadata')) {
                obj['writeMetadata'] = ApiClient.convertToType(data['writeMetadata'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvroConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvroConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Optional. When true, write the subscription name, message_id, publish_time, attributes, and ordering_key as additional fields in the output. The subscription name, message_id, and publish_time fields are put in their own fields while all other message properties other than data (for example, an ordering_key, if present) are added as entries in the attributes map.
 * @member {Boolean} writeMetadata
 */
AvroConfig.prototype['writeMetadata'] = undefined;






export default AvroConfig;

