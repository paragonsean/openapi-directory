/**
 * OMDb
 * The Open Movie Database. The OMDb API is a free web service to obtain movie information, all content and images on the site are contributed and maintained by our users.
 *
 * The version of the OpenAPI document: 1
 * Contact: bfritz@fadingsignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Omdb);
  }
}(this, function(expect, Omdb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Omdb.CombinedResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CombinedResult', function() {
    it('should create an instance of CombinedResult', function() {
      // uncomment below and update the code to test CombinedResult
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be.a(Omdb.CombinedResult);
    });

    it('should have the property actors (base name: "Actors")', function() {
      // uncomment below and update the code to test the property actors
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property awards (base name: "Awards")', function() {
      // uncomment below and update the code to test the property awards
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property boxOffice (base name: "BoxOffice")', function() {
      // uncomment below and update the code to test the property boxOffice
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "Country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property DVD (base name: "DVD")', function() {
      // uncomment below and update the code to test the property DVD
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property director (base name: "Director")', function() {
      // uncomment below and update the code to test the property director
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property genre (base name: "Genre")', function() {
      // uncomment below and update the code to test the property genre
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "Language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property metascore (base name: "Metascore")', function() {
      // uncomment below and update the code to test the property metascore
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property plot (base name: "Plot")', function() {
      // uncomment below and update the code to test the property plot
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property poster (base name: "Poster")', function() {
      // uncomment below and update the code to test the property poster
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property production (base name: "Production")', function() {
      // uncomment below and update the code to test the property production
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property rated (base name: "Rated")', function() {
      // uncomment below and update the code to test the property rated
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property released (base name: "Released")', function() {
      // uncomment below and update the code to test the property released
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property response (base name: "Response")', function() {
      // uncomment below and update the code to test the property response
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property runtime (base name: "Runtime")', function() {
      // uncomment below and update the code to test the property runtime
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property search (base name: "Search")', function() {
      // uncomment below and update the code to test the property search
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "Title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "Website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property writer (base name: "Writer")', function() {
      // uncomment below and update the code to test the property writer
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property year (base name: "Year")', function() {
      // uncomment below and update the code to test the property year
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property imdbID (base name: "imdbID")', function() {
      // uncomment below and update the code to test the property imdbID
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property imdbRating (base name: "imdbRating")', function() {
      // uncomment below and update the code to test the property imdbRating
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property imdbVotes (base name: "imdbVotes")', function() {
      // uncomment below and update the code to test the property imdbVotes
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoConsensus (base name: "tomatoConsensus")', function() {
      // uncomment below and update the code to test the property tomatoConsensus
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoFresh (base name: "tomatoFresh")', function() {
      // uncomment below and update the code to test the property tomatoFresh
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoImage (base name: "tomatoImage")', function() {
      // uncomment below and update the code to test the property tomatoImage
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoMeter (base name: "tomatoMeter")', function() {
      // uncomment below and update the code to test the property tomatoMeter
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoRating (base name: "tomatoRating")', function() {
      // uncomment below and update the code to test the property tomatoRating
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoReviews (base name: "tomatoReviews")', function() {
      // uncomment below and update the code to test the property tomatoReviews
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoRotten (base name: "tomatoRotten")', function() {
      // uncomment below and update the code to test the property tomatoRotten
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoURL (base name: "tomatoURL")', function() {
      // uncomment below and update the code to test the property tomatoURL
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoUserMeter (base name: "tomatoUserMeter")', function() {
      // uncomment below and update the code to test the property tomatoUserMeter
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoUserRating (base name: "tomatoUserRating")', function() {
      // uncomment below and update the code to test the property tomatoUserRating
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property tomatoUserReviews (base name: "tomatoUserReviews")', function() {
      // uncomment below and update the code to test the property tomatoUserReviews
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property totalResults (base name: "totalResults")', function() {
      // uncomment below and update the code to test the property totalResults
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

    it('should have the property totalSeasons (base name: "totalSeasons")', function() {
      // uncomment below and update the code to test the property totalSeasons
      //var instance = new Omdb.CombinedResult();
      //expect(instance).to.be();
    });

  });

}));
