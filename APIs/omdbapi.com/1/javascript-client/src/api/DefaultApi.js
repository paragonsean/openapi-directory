/**
 * OMDb
 * The Open Movie Database. The OMDb API is a free web service to obtain movie information, all content and images on the site are contributed and maintained by our users.
 *
 * The version of the OpenAPI document: 1
 * Contact: bfritz@fadingsignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CombinedResult from '../model/CombinedResult';

/**
* Default service.
* @module api/DefaultApi
* @version 1
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getOMDbSearch operation.
     * @callback module:api/DefaultApi~getOMDbSearchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CombinedResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * OMDb Search
     * Find a movie, series or episode from the OMDb by title, IMDb-id or by free-text search
     * @param {module:model/String} r The data type to return.
     * @param {Object} opts Optional parameters
     * @param {String} [t] Movie title to search for. One of t, i or s is required.
     * @param {String} [i] A valid IMDb ID (e.g. tt1285016). One of t, i or s is required.
     * @param {String} [s] Movie title to search for. One of t, i or s is required.
     * @param {Number} [y] Year of release.
     * @param {module:model/String} [type] Type of result to return.
     * @param {module:model/String} [plot = 'short')] Return short or full plot.
     * @param {Boolean} [tomatoes = false)] Include Rotten Tomatoes ratings.
     * @param {Number} [v = 1)] API version (reserved for future use).
     * @param {Number} [page = 1)] Page number to return.
     * @param {String} [callback] JSONP callback name.
     * @param {module:api/DefaultApi~getOMDbSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CombinedResult}
     */
    getOMDbSearch(r, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'r' is set
      if (r === undefined || r === null) {
        throw new Error("Missing the required parameter 'r' when calling getOMDbSearch");
      }

      let pathParams = {
      };
      let queryParams = {
        't': opts['t'],
        'i': opts['i'],
        's': opts['s'],
        'y': opts['y'],
        'type': opts['type'],
        'plot': opts['plot'],
        'tomatoes': opts['tomatoes'],
        'r': r,
        'v': opts['v'],
        'page': opts['page'],
        'callback': opts['callback']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = CombinedResult;
      return this.apiClient.callApi(
        '/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
