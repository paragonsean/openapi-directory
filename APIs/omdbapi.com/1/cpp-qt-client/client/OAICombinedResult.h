/**
 * OMDb
 * The Open Movie Database. The OMDb API is a free web service to obtain movie information, all content and images on the site are contributed and maintained by our users.
 *
 * The version of the OpenAPI document: 1
 * Contact: bfritz@fadingsignal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICombinedResult.h
 *
 * 
 */

#ifndef OAICombinedResult_H
#define OAICombinedResult_H

#include <QJsonObject>

#include "OAICombinedResult_Search_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICombinedResult_Search_inner;

class OAICombinedResult : public OAIObject {
public:
    OAICombinedResult();
    OAICombinedResult(QString json);
    ~OAICombinedResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActors() const;
    void setActors(const QString &actors);
    bool is_actors_Set() const;
    bool is_actors_Valid() const;

    QString getAwards() const;
    void setAwards(const QString &awards);
    bool is_awards_Set() const;
    bool is_awards_Valid() const;

    QString getBoxOffice() const;
    void setBoxOffice(const QString &box_office);
    bool is_box_office_Set() const;
    bool is_box_office_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDvd() const;
    void setDvd(const QString &dvd);
    bool is_dvd_Set() const;
    bool is_dvd_Valid() const;

    QString getDirector() const;
    void setDirector(const QString &director);
    bool is_director_Set() const;
    bool is_director_Valid() const;

    QString getGenre() const;
    void setGenre(const QString &genre);
    bool is_genre_Set() const;
    bool is_genre_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getMetascore() const;
    void setMetascore(const QString &metascore);
    bool is_metascore_Set() const;
    bool is_metascore_Valid() const;

    QString getPlot() const;
    void setPlot(const QString &plot);
    bool is_plot_Set() const;
    bool is_plot_Valid() const;

    QString getPoster() const;
    void setPoster(const QString &poster);
    bool is_poster_Set() const;
    bool is_poster_Valid() const;

    QString getProduction() const;
    void setProduction(const QString &production);
    bool is_production_Set() const;
    bool is_production_Valid() const;

    QString getRated() const;
    void setRated(const QString &rated);
    bool is_rated_Set() const;
    bool is_rated_Valid() const;

    QString getReleased() const;
    void setReleased(const QString &released);
    bool is_released_Set() const;
    bool is_released_Valid() const;

    QString getResponse() const;
    void setResponse(const QString &response);
    bool is_response_Set() const;
    bool is_response_Valid() const;

    QString getRuntime() const;
    void setRuntime(const QString &runtime);
    bool is_runtime_Set() const;
    bool is_runtime_Valid() const;

    QList<OAICombinedResult_Search_inner> getSearch() const;
    void setSearch(const QList<OAICombinedResult_Search_inner> &search);
    bool is_search_Set() const;
    bool is_search_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    QString getWriter() const;
    void setWriter(const QString &writer);
    bool is_writer_Set() const;
    bool is_writer_Valid() const;

    QString getYear() const;
    void setYear(const QString &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    QString getImdbId() const;
    void setImdbId(const QString &imdb_id);
    bool is_imdb_id_Set() const;
    bool is_imdb_id_Valid() const;

    QString getImdbRating() const;
    void setImdbRating(const QString &imdb_rating);
    bool is_imdb_rating_Set() const;
    bool is_imdb_rating_Valid() const;

    QString getImdbVotes() const;
    void setImdbVotes(const QString &imdb_votes);
    bool is_imdb_votes_Set() const;
    bool is_imdb_votes_Valid() const;

    QString getTomatoConsensus() const;
    void setTomatoConsensus(const QString &tomato_consensus);
    bool is_tomato_consensus_Set() const;
    bool is_tomato_consensus_Valid() const;

    QString getTomatoFresh() const;
    void setTomatoFresh(const QString &tomato_fresh);
    bool is_tomato_fresh_Set() const;
    bool is_tomato_fresh_Valid() const;

    QString getTomatoImage() const;
    void setTomatoImage(const QString &tomato_image);
    bool is_tomato_image_Set() const;
    bool is_tomato_image_Valid() const;

    QString getTomatoMeter() const;
    void setTomatoMeter(const QString &tomato_meter);
    bool is_tomato_meter_Set() const;
    bool is_tomato_meter_Valid() const;

    QString getTomatoRating() const;
    void setTomatoRating(const QString &tomato_rating);
    bool is_tomato_rating_Set() const;
    bool is_tomato_rating_Valid() const;

    QString getTomatoReviews() const;
    void setTomatoReviews(const QString &tomato_reviews);
    bool is_tomato_reviews_Set() const;
    bool is_tomato_reviews_Valid() const;

    QString getTomatoRotten() const;
    void setTomatoRotten(const QString &tomato_rotten);
    bool is_tomato_rotten_Set() const;
    bool is_tomato_rotten_Valid() const;

    QString getTomatoUrl() const;
    void setTomatoUrl(const QString &tomato_url);
    bool is_tomato_url_Set() const;
    bool is_tomato_url_Valid() const;

    QString getTomatoUserMeter() const;
    void setTomatoUserMeter(const QString &tomato_user_meter);
    bool is_tomato_user_meter_Set() const;
    bool is_tomato_user_meter_Valid() const;

    QString getTomatoUserRating() const;
    void setTomatoUserRating(const QString &tomato_user_rating);
    bool is_tomato_user_rating_Set() const;
    bool is_tomato_user_rating_Valid() const;

    QString getTomatoUserReviews() const;
    void setTomatoUserReviews(const QString &tomato_user_reviews);
    bool is_tomato_user_reviews_Set() const;
    bool is_tomato_user_reviews_Valid() const;

    QString getTotalResults() const;
    void setTotalResults(const QString &total_results);
    bool is_total_results_Set() const;
    bool is_total_results_Valid() const;

    QString getTotalSeasons() const;
    void setTotalSeasons(const QString &total_seasons);
    bool is_total_seasons_Set() const;
    bool is_total_seasons_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_actors;
    bool m_actors_isSet;
    bool m_actors_isValid;

    QString m_awards;
    bool m_awards_isSet;
    bool m_awards_isValid;

    QString m_box_office;
    bool m_box_office_isSet;
    bool m_box_office_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_dvd;
    bool m_dvd_isSet;
    bool m_dvd_isValid;

    QString m_director;
    bool m_director_isSet;
    bool m_director_isValid;

    QString m_genre;
    bool m_genre_isSet;
    bool m_genre_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_metascore;
    bool m_metascore_isSet;
    bool m_metascore_isValid;

    QString m_plot;
    bool m_plot_isSet;
    bool m_plot_isValid;

    QString m_poster;
    bool m_poster_isSet;
    bool m_poster_isValid;

    QString m_production;
    bool m_production_isSet;
    bool m_production_isValid;

    QString m_rated;
    bool m_rated_isSet;
    bool m_rated_isValid;

    QString m_released;
    bool m_released_isSet;
    bool m_released_isValid;

    QString m_response;
    bool m_response_isSet;
    bool m_response_isValid;

    QString m_runtime;
    bool m_runtime_isSet;
    bool m_runtime_isValid;

    QList<OAICombinedResult_Search_inner> m_search;
    bool m_search_isSet;
    bool m_search_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;

    QString m_writer;
    bool m_writer_isSet;
    bool m_writer_isValid;

    QString m_year;
    bool m_year_isSet;
    bool m_year_isValid;

    QString m_imdb_id;
    bool m_imdb_id_isSet;
    bool m_imdb_id_isValid;

    QString m_imdb_rating;
    bool m_imdb_rating_isSet;
    bool m_imdb_rating_isValid;

    QString m_imdb_votes;
    bool m_imdb_votes_isSet;
    bool m_imdb_votes_isValid;

    QString m_tomato_consensus;
    bool m_tomato_consensus_isSet;
    bool m_tomato_consensus_isValid;

    QString m_tomato_fresh;
    bool m_tomato_fresh_isSet;
    bool m_tomato_fresh_isValid;

    QString m_tomato_image;
    bool m_tomato_image_isSet;
    bool m_tomato_image_isValid;

    QString m_tomato_meter;
    bool m_tomato_meter_isSet;
    bool m_tomato_meter_isValid;

    QString m_tomato_rating;
    bool m_tomato_rating_isSet;
    bool m_tomato_rating_isValid;

    QString m_tomato_reviews;
    bool m_tomato_reviews_isSet;
    bool m_tomato_reviews_isValid;

    QString m_tomato_rotten;
    bool m_tomato_rotten_isSet;
    bool m_tomato_rotten_isValid;

    QString m_tomato_url;
    bool m_tomato_url_isSet;
    bool m_tomato_url_isValid;

    QString m_tomato_user_meter;
    bool m_tomato_user_meter_isSet;
    bool m_tomato_user_meter_isValid;

    QString m_tomato_user_rating;
    bool m_tomato_user_rating_isSet;
    bool m_tomato_user_rating_isValid;

    QString m_tomato_user_reviews;
    bool m_tomato_user_reviews_isSet;
    bool m_tomato_user_reviews_isValid;

    QString m_total_results;
    bool m_total_results_isSet;
    bool m_total_results_isValid;

    QString m_total_seasons;
    bool m_total_seasons_isSet;
    bool m_total_seasons_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICombinedResult)

#endif // OAICombinedResult_H
