/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISystemInfo.h
 *
 * System information (default language and authentication methods)
 */

#ifndef OAISystemInfo_H
#define OAISystemInfo_H

#include <QJsonObject>

#include "OAIAuthMethod.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthMethod;

class OAISystemInfo : public OAIObject {
public:
    OAISystemInfo();
    OAISystemInfo(QString json);
    ~OAISystemInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QList<OAIAuthMethod> getAuthMethods() const;
    Q_DECL_DEPRECATED void setAuthMethods(const QList<OAIAuthMethod> &auth_methods);
    Q_DECL_DEPRECATED bool is_auth_methods_Set() const;
    Q_DECL_DEPRECATED bool is_auth_methods_Valid() const;

    Q_DECL_DEPRECATED bool isHideLoginInputFields() const;
    Q_DECL_DEPRECATED void setHideLoginInputFields(const bool &hide_login_input_fields);
    Q_DECL_DEPRECATED bool is_hide_login_input_fields_Set() const;
    Q_DECL_DEPRECATED bool is_hide_login_input_fields_Valid() const;

    QString getLanguageDefault() const;
    void setLanguageDefault(const QString &language_default);
    bool is_language_default_Set() const;
    bool is_language_default_Valid() const;

    bool isS3EnforceDirectUpload() const;
    void setS3EnforceDirectUpload(const bool &s3_enforce_direct_upload);
    bool is_s3_enforce_direct_upload_Set() const;
    bool is_s3_enforce_direct_upload_Valid() const;

    QList<QString> getS3Hosts() const;
    void setS3Hosts(const QList<QString> &s3_hosts);
    bool is_s3_hosts_Set() const;
    bool is_s3_hosts_Valid() const;

    bool isUseS3Storage() const;
    void setUseS3Storage(const bool &use_s3_storage);
    bool is_use_s3_storage_Set() const;
    bool is_use_s3_storage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAuthMethod> m_auth_methods;
    bool m_auth_methods_isSet;
    bool m_auth_methods_isValid;

    bool m_hide_login_input_fields;
    bool m_hide_login_input_fields_isSet;
    bool m_hide_login_input_fields_isValid;

    QString m_language_default;
    bool m_language_default_isSet;
    bool m_language_default_isValid;

    bool m_s3_enforce_direct_upload;
    bool m_s3_enforce_direct_upload_isSet;
    bool m_s3_enforce_direct_upload_isValid;

    QList<QString> m_s3_hosts;
    bool m_s3_hosts_isSet;
    bool m_s3_hosts_isValid;

    bool m_use_s3_storage;
    bool m_use_s3_storage_isSet;
    bool m_use_s3_storage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISystemInfo)

#endif // OAISystemInfo_H
