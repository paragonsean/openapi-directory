/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInfrastructureProperties.h
 *
 * Infrastructure properties
 */

#ifndef OAIInfrastructureProperties_H
#define OAIInfrastructureProperties_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInfrastructureProperties : public OAIObject {
public:
    OAIInfrastructureProperties();
    OAIInfrastructureProperties(QString json);
    ~OAIInfrastructureProperties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsDracoonCloud() const;
    void setIsDracoonCloud(const bool &is_dracoon_cloud);
    bool is_is_dracoon_cloud_Set() const;
    bool is_is_dracoon_cloud_Valid() const;

    bool isMediaServerConfigEnabled() const;
    void setMediaServerConfigEnabled(const bool &media_server_config_enabled);
    bool is_media_server_config_enabled_Set() const;
    bool is_media_server_config_enabled_Valid() const;

    QString getS3DefaultRegion() const;
    void setS3DefaultRegion(const QString &s3_default_region);
    bool is_s3_default_region_Set() const;
    bool is_s3_default_region_Valid() const;

    bool isS3EnforceDirectUpload() const;
    void setS3EnforceDirectUpload(const bool &s3_enforce_direct_upload);
    bool is_s3_enforce_direct_upload_Set() const;
    bool is_s3_enforce_direct_upload_Valid() const;

    bool isSmsConfigEnabled() const;
    void setSmsConfigEnabled(const bool &sms_config_enabled);
    bool is_sms_config_enabled_Set() const;
    bool is_sms_config_enabled_Valid() const;

    QString getTenantUuid() const;
    void setTenantUuid(const QString &tenant_uuid);
    bool is_tenant_uuid_Set() const;
    bool is_tenant_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_dracoon_cloud;
    bool m_is_dracoon_cloud_isSet;
    bool m_is_dracoon_cloud_isValid;

    bool m_media_server_config_enabled;
    bool m_media_server_config_enabled_isSet;
    bool m_media_server_config_enabled_isValid;

    QString m_s3_default_region;
    bool m_s3_default_region_isSet;
    bool m_s3_default_region_isValid;

    bool m_s3_enforce_direct_upload;
    bool m_s3_enforce_direct_upload_isSet;
    bool m_s3_enforce_direct_upload_isValid;

    bool m_sms_config_enabled;
    bool m_sms_config_enabled_isSet;
    bool m_sms_config_enabled_isValid;

    QString m_tenant_uuid;
    bool m_tenant_uuid_isSet;
    bool m_tenant_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInfrastructureProperties)

#endif // OAIInfrastructureProperties_H
