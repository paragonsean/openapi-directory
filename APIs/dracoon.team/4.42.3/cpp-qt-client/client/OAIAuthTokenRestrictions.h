/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthTokenRestrictions.h
 *
 * Auth token restrictions
 */

#ifndef OAIAuthTokenRestrictions_H
#define OAIAuthTokenRestrictions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthTokenRestrictions : public OAIObject {
public:
    OAIAuthTokenRestrictions();
    OAIAuthTokenRestrictions(QString json);
    ~OAIAuthTokenRestrictions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAccessTokenValidity() const;
    void setAccessTokenValidity(const qint32 &access_token_validity);
    bool is_access_token_validity_Set() const;
    bool is_access_token_validity_Valid() const;

    qint32 getRefreshTokenValidity() const;
    void setRefreshTokenValidity(const qint32 &refresh_token_validity);
    bool is_refresh_token_validity_Set() const;
    bool is_refresh_token_validity_Valid() const;

    bool isRestrictionEnabled() const;
    void setRestrictionEnabled(const bool &restriction_enabled);
    bool is_restriction_enabled_Set() const;
    bool is_restriction_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_access_token_validity;
    bool m_access_token_validity_isSet;
    bool m_access_token_validity_isValid;

    qint32 m_refresh_token_validity;
    bool m_refresh_token_validity_isSet;
    bool m_refresh_token_validity_isValid;

    bool m_restriction_enabled;
    bool m_restriction_enabled_isSet;
    bool m_restriction_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthTokenRestrictions)

#endif // OAIAuthTokenRestrictions_H
