/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductPackageResponse.h
 *
 * ProductPackageResponse
 */

#ifndef OAIProductPackageResponse_H
#define OAIProductPackageResponse_H

#include <QJsonObject>

#include "OAIFeature.h"
#include "OAIFeaturedOAuthClient.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFeaturedOAuthClient;
class OAIFeature;

class OAIProductPackageResponse : public OAIObject {
public:
    OAIProductPackageResponse();
    OAIProductPackageResponse(QString json);
    ~OAIProductPackageResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFeaturedOAuthClient> getClients() const;
    void setClients(const QList<OAIFeaturedOAuthClient> &clients);
    bool is_clients_Set() const;
    bool is_clients_Valid() const;

    QList<OAIFeature> getFeatures() const;
    void setFeatures(const QList<OAIFeature> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    qint64 getProductPackageId() const;
    void setProductPackageId(const qint64 &product_package_id);
    bool is_product_package_id_Set() const;
    bool is_product_package_id_Valid() const;

    QString getProductPackageName() const;
    void setProductPackageName(const QString &product_package_name);
    bool is_product_package_name_Set() const;
    bool is_product_package_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFeaturedOAuthClient> m_clients;
    bool m_clients_isSet;
    bool m_clients_isValid;

    QList<OAIFeature> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    qint64 m_product_package_id;
    bool m_product_package_id_isSet;
    bool m_product_package_id_isValid;

    QString m_product_package_name;
    bool m_product_package_name_isSet;
    bool m_product_package_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductPackageResponse)

#endif // OAIProductPackageResponse_H
