/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISystemDefaults.h
 *
 * System defaults
 */

#ifndef OAISystemDefaults_H
#define OAISystemDefaults_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISystemDefaults : public OAIObject {
public:
    OAISystemDefaults();
    OAISystemDefaults(QString json);
    ~OAISystemDefaults() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDownloadShareDefaultExpirationPeriod() const;
    void setDownloadShareDefaultExpirationPeriod(const qint32 &download_share_default_expiration_period);
    bool is_download_share_default_expiration_period_Set() const;
    bool is_download_share_default_expiration_period_Valid() const;

    qint32 getFileDefaultExpirationPeriod() const;
    void setFileDefaultExpirationPeriod(const qint32 &file_default_expiration_period);
    bool is_file_default_expiration_period_Set() const;
    bool is_file_default_expiration_period_Valid() const;

    Q_DECL_DEPRECATED bool isHideLoginInputFields() const;
    Q_DECL_DEPRECATED void setHideLoginInputFields(const bool &hide_login_input_fields);
    Q_DECL_DEPRECATED bool is_hide_login_input_fields_Set() const;
    Q_DECL_DEPRECATED bool is_hide_login_input_fields_Valid() const;

    QString getLanguageDefault() const;
    void setLanguageDefault(const QString &language_default);
    bool is_language_default_Set() const;
    bool is_language_default_Valid() const;

    bool isNonmemberViewerDefault() const;
    void setNonmemberViewerDefault(const bool &nonmember_viewer_default);
    bool is_nonmember_viewer_default_Set() const;
    bool is_nonmember_viewer_default_Valid() const;

    qint32 getUploadShareDefaultExpirationPeriod() const;
    void setUploadShareDefaultExpirationPeriod(const qint32 &upload_share_default_expiration_period);
    bool is_upload_share_default_expiration_period_Set() const;
    bool is_upload_share_default_expiration_period_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_download_share_default_expiration_period;
    bool m_download_share_default_expiration_period_isSet;
    bool m_download_share_default_expiration_period_isValid;

    qint32 m_file_default_expiration_period;
    bool m_file_default_expiration_period_isSet;
    bool m_file_default_expiration_period_isValid;

    bool m_hide_login_input_fields;
    bool m_hide_login_input_fields_isSet;
    bool m_hide_login_input_fields_isValid;

    QString m_language_default;
    bool m_language_default_isSet;
    bool m_language_default_isValid;

    bool m_nonmember_viewer_default;
    bool m_nonmember_viewer_default_isSet;
    bool m_nonmember_viewer_default_isValid;

    qint32 m_upload_share_default_expiration_period;
    bool m_upload_share_default_expiration_period_isSet;
    bool m_upload_share_default_expiration_period_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISystemDefaults)

#endif // OAISystemDefaults_H
