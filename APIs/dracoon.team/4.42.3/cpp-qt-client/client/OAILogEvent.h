/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogEvent.h
 *
 * Log event information
 */

#ifndef OAILogEvent_H
#define OAILogEvent_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILogEvent : public OAIObject {
public:
    OAILogEvent();
    OAILogEvent(QString json);
    ~OAILogEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttribute1() const;
    void setAttribute1(const QString &attribute1);
    bool is_attribute1_Set() const;
    bool is_attribute1_Valid() const;

    QString getAttribute2() const;
    void setAttribute2(const QString &attribute2);
    bool is_attribute2_Set() const;
    bool is_attribute2_Valid() const;

    QString getAttribute3() const;
    void setAttribute3(const QString &attribute3);
    bool is_attribute3_Set() const;
    bool is_attribute3_Valid() const;

    QString getAuthParentSource() const;
    void setAuthParentSource(const QString &auth_parent_source);
    bool is_auth_parent_source_Set() const;
    bool is_auth_parent_source_Valid() const;

    QString getAuthParentTarget() const;
    void setAuthParentTarget(const QString &auth_parent_target);
    bool is_auth_parent_target_Set() const;
    bool is_auth_parent_target_Valid() const;

    qint64 getCustomerId() const;
    void setCustomerId(const qint64 &customer_id);
    bool is_customer_id_Set() const;
    bool is_customer_id_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    qint64 getObjectId1() const;
    void setObjectId1(const qint64 &object_id1);
    bool is_object_id1_Set() const;
    bool is_object_id1_Valid() const;

    qint64 getObjectId2() const;
    void setObjectId2(const qint64 &object_id2);
    bool is_object_id2_Set() const;
    bool is_object_id2_Valid() const;

    QString getObjectName1() const;
    void setObjectName1(const QString &object_name1);
    bool is_object_name1_Set() const;
    bool is_object_name1_Valid() const;

    QString getObjectName2() const;
    void setObjectName2(const QString &object_name2);
    bool is_object_name2_Set() const;
    bool is_object_name2_Valid() const;

    qint32 getObjectType1() const;
    void setObjectType1(const qint32 &object_type1);
    bool is_object_type1_Set() const;
    bool is_object_type1_Valid() const;

    qint32 getObjectType2() const;
    void setObjectType2(const qint32 &object_type2);
    bool is_object_type2_Set() const;
    bool is_object_type2_Valid() const;

    qint32 getOperationId() const;
    void setOperationId(const qint32 &operation_id);
    bool is_operation_id_Set() const;
    bool is_operation_id_Valid() const;

    QString getOperationName() const;
    void setOperationName(const QString &operation_name);
    bool is_operation_name_Set() const;
    bool is_operation_name_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getTime() const;
    void setTime(const QDateTime &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    QString getUserClient() const;
    void setUserClient(const QString &user_client);
    bool is_user_client_Set() const;
    bool is_user_client_Valid() const;

    qint64 getUserId() const;
    void setUserId(const qint64 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getUserIp() const;
    void setUserIp(const QString &user_ip);
    bool is_user_ip_Set() const;
    bool is_user_ip_Valid() const;

    QString getUserName() const;
    void setUserName(const QString &user_name);
    bool is_user_name_Set() const;
    bool is_user_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attribute1;
    bool m_attribute1_isSet;
    bool m_attribute1_isValid;

    QString m_attribute2;
    bool m_attribute2_isSet;
    bool m_attribute2_isValid;

    QString m_attribute3;
    bool m_attribute3_isSet;
    bool m_attribute3_isValid;

    QString m_auth_parent_source;
    bool m_auth_parent_source_isSet;
    bool m_auth_parent_source_isValid;

    QString m_auth_parent_target;
    bool m_auth_parent_target_isSet;
    bool m_auth_parent_target_isValid;

    qint64 m_customer_id;
    bool m_customer_id_isSet;
    bool m_customer_id_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    qint64 m_object_id1;
    bool m_object_id1_isSet;
    bool m_object_id1_isValid;

    qint64 m_object_id2;
    bool m_object_id2_isSet;
    bool m_object_id2_isValid;

    QString m_object_name1;
    bool m_object_name1_isSet;
    bool m_object_name1_isValid;

    QString m_object_name2;
    bool m_object_name2_isSet;
    bool m_object_name2_isValid;

    qint32 m_object_type1;
    bool m_object_type1_isSet;
    bool m_object_type1_isValid;

    qint32 m_object_type2;
    bool m_object_type2_isSet;
    bool m_object_type2_isValid;

    qint32 m_operation_id;
    bool m_operation_id_isSet;
    bool m_operation_id_isValid;

    QString m_operation_name;
    bool m_operation_name_isSet;
    bool m_operation_name_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    QString m_user_client;
    bool m_user_client_isSet;
    bool m_user_client_isValid;

    qint64 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_user_ip;
    bool m_user_ip_isSet;
    bool m_user_ip_isValid;

    QString m_user_name;
    bool m_user_name_isSet;
    bool m_user_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogEvent)

#endif // OAILogEvent_H
