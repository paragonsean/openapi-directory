/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINode.h
 *
 * Node information (Node can be a room, folder or file)
 */

#ifndef OAINode_H
#define OAINode_H

#include <QJsonObject>

#include "OAIEncryptionInfo.h"
#include "OAINodePermissions.h"
#include "OAIUserInfo.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserInfo;
class OAIEncryptionInfo;
class OAINodePermissions;

class OAINode : public OAIObject {
public:
    OAINode();
    OAINode(QString json);
    ~OAINode() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAuthParentId() const;
    void setAuthParentId(const qint64 &auth_parent_id);
    bool is_auth_parent_id_Set() const;
    bool is_auth_parent_id_Valid() const;

    qint64 getBranchVersion() const;
    void setBranchVersion(const qint64 &branch_version);
    bool is_branch_version_Set() const;
    bool is_branch_version_Valid() const;

    Q_DECL_DEPRECATED QList<OAINode> getChildren() const;
    Q_DECL_DEPRECATED void setChildren(const QList<OAINode> &children);
    Q_DECL_DEPRECATED bool is_children_Set() const;
    Q_DECL_DEPRECATED bool is_children_Valid() const;

    qint32 getClassification() const;
    void setClassification(const qint32 &classification);
    bool is_classification_Set() const;
    bool is_classification_Valid() const;

    Q_DECL_DEPRECATED qint32 getCntChildren() const;
    Q_DECL_DEPRECATED void setCntChildren(const qint32 &cnt_children);
    Q_DECL_DEPRECATED bool is_cnt_children_Set() const;
    Q_DECL_DEPRECATED bool is_cnt_children_Valid() const;

    qint32 getCntComments() const;
    void setCntComments(const qint32 &cnt_comments);
    bool is_cnt_comments_Set() const;
    bool is_cnt_comments_Valid() const;

    qint32 getCntDeletedVersions() const;
    void setCntDeletedVersions(const qint32 &cnt_deleted_versions);
    bool is_cnt_deleted_versions_Set() const;
    bool is_cnt_deleted_versions_Valid() const;

    qint32 getCntDownloadShares() const;
    void setCntDownloadShares(const qint32 &cnt_download_shares);
    bool is_cnt_download_shares_Set() const;
    bool is_cnt_download_shares_Valid() const;

    qint32 getCntFiles() const;
    void setCntFiles(const qint32 &cnt_files);
    bool is_cnt_files_Set() const;
    bool is_cnt_files_Valid() const;

    qint32 getCntFolders() const;
    void setCntFolders(const qint32 &cnt_folders);
    bool is_cnt_folders_Set() const;
    bool is_cnt_folders_Valid() const;

    qint32 getCntRooms() const;
    void setCntRooms(const qint32 &cnt_rooms);
    bool is_cnt_rooms_Set() const;
    bool is_cnt_rooms_Valid() const;

    qint32 getCntUploadShares() const;
    void setCntUploadShares(const qint32 &cnt_upload_shares);
    bool is_cnt_upload_shares_Set() const;
    bool is_cnt_upload_shares_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIUserInfo getCreatedBy() const;
    void setCreatedBy(const OAIUserInfo &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    OAIEncryptionInfo getEncryptionInfo() const;
    void setEncryptionInfo(const OAIEncryptionInfo &encryption_info);
    bool is_encryption_info_Set() const;
    bool is_encryption_info_Valid() const;

    QDateTime getExpireAt() const;
    void setExpireAt(const QDateTime &expire_at);
    bool is_expire_at_Set() const;
    bool is_expire_at_Valid() const;

    QString getFileType() const;
    void setFileType(const QString &file_type);
    bool is_file_type_Set() const;
    bool is_file_type_Valid() const;

    bool isHasActivitiesLog() const;
    void setHasActivitiesLog(const bool &has_activities_log);
    bool is_has_activities_log_Set() const;
    bool is_has_activities_log_Valid() const;

    QString getHash() const;
    void setHash(const QString &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isInheritPermissions() const;
    void setInheritPermissions(const bool &inherit_permissions);
    bool is_inherit_permissions_Set() const;
    bool is_inherit_permissions_Valid() const;

    bool isIsBrowsable() const;
    void setIsBrowsable(const bool &is_browsable);
    bool is_is_browsable_Set() const;
    bool is_is_browsable_Valid() const;

    bool isIsEncrypted() const;
    void setIsEncrypted(const bool &is_encrypted);
    bool is_is_encrypted_Set() const;
    bool is_is_encrypted_Valid() const;

    bool isIsFavorite() const;
    void setIsFavorite(const bool &is_favorite);
    bool is_is_favorite_Set() const;
    bool is_is_favorite_Valid() const;

    QString getMediaToken() const;
    void setMediaToken(const QString &media_token);
    bool is_media_token_Set() const;
    bool is_media_token_Valid() const;

    QString getMediaType() const;
    void setMediaType(const QString &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    qint64 getParentId() const;
    void setParentId(const qint64 &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    QString getParentPath() const;
    void setParentPath(const QString &parent_path);
    bool is_parent_path_Set() const;
    bool is_parent_path_Valid() const;

    OAINodePermissions getPermissions() const;
    void setPermissions(const OAINodePermissions &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    qint64 getQuota() const;
    void setQuota(const qint64 &quota);
    bool is_quota_Set() const;
    bool is_quota_Valid() const;

    qint32 getRecycleBinRetentionPeriod() const;
    void setRecycleBinRetentionPeriod(const qint32 &recycle_bin_retention_period);
    bool is_recycle_bin_retention_period_Set() const;
    bool is_recycle_bin_retention_period_Valid() const;

    qint64 getReferenceId() const;
    void setReferenceId(const qint64 &reference_id);
    bool is_reference_id_Set() const;
    bool is_reference_id_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QDateTime getTimestampCreation() const;
    void setTimestampCreation(const QDateTime &timestamp_creation);
    bool is_timestamp_creation_Set() const;
    bool is_timestamp_creation_Valid() const;

    QDateTime getTimestampModification() const;
    void setTimestampModification(const QDateTime &timestamp_modification);
    bool is_timestamp_modification_Set() const;
    bool is_timestamp_modification_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUserInfo getUpdatedBy() const;
    void setUpdatedBy(const OAIUserInfo &updated_by);
    bool is_updated_by_Set() const;
    bool is_updated_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_auth_parent_id;
    bool m_auth_parent_id_isSet;
    bool m_auth_parent_id_isValid;

    qint64 m_branch_version;
    bool m_branch_version_isSet;
    bool m_branch_version_isValid;

    QList<OAINode> m_children;
    bool m_children_isSet;
    bool m_children_isValid;

    qint32 m_classification;
    bool m_classification_isSet;
    bool m_classification_isValid;

    qint32 m_cnt_children;
    bool m_cnt_children_isSet;
    bool m_cnt_children_isValid;

    qint32 m_cnt_comments;
    bool m_cnt_comments_isSet;
    bool m_cnt_comments_isValid;

    qint32 m_cnt_deleted_versions;
    bool m_cnt_deleted_versions_isSet;
    bool m_cnt_deleted_versions_isValid;

    qint32 m_cnt_download_shares;
    bool m_cnt_download_shares_isSet;
    bool m_cnt_download_shares_isValid;

    qint32 m_cnt_files;
    bool m_cnt_files_isSet;
    bool m_cnt_files_isValid;

    qint32 m_cnt_folders;
    bool m_cnt_folders_isSet;
    bool m_cnt_folders_isValid;

    qint32 m_cnt_rooms;
    bool m_cnt_rooms_isSet;
    bool m_cnt_rooms_isValid;

    qint32 m_cnt_upload_shares;
    bool m_cnt_upload_shares_isSet;
    bool m_cnt_upload_shares_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIUserInfo m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    OAIEncryptionInfo m_encryption_info;
    bool m_encryption_info_isSet;
    bool m_encryption_info_isValid;

    QDateTime m_expire_at;
    bool m_expire_at_isSet;
    bool m_expire_at_isValid;

    QString m_file_type;
    bool m_file_type_isSet;
    bool m_file_type_isValid;

    bool m_has_activities_log;
    bool m_has_activities_log_isSet;
    bool m_has_activities_log_isValid;

    QString m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_inherit_permissions;
    bool m_inherit_permissions_isSet;
    bool m_inherit_permissions_isValid;

    bool m_is_browsable;
    bool m_is_browsable_isSet;
    bool m_is_browsable_isValid;

    bool m_is_encrypted;
    bool m_is_encrypted_isSet;
    bool m_is_encrypted_isValid;

    bool m_is_favorite;
    bool m_is_favorite_isSet;
    bool m_is_favorite_isValid;

    QString m_media_token;
    bool m_media_token_isSet;
    bool m_media_token_isValid;

    QString m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    qint64 m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    QString m_parent_path;
    bool m_parent_path_isSet;
    bool m_parent_path_isValid;

    OAINodePermissions m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    qint64 m_quota;
    bool m_quota_isSet;
    bool m_quota_isValid;

    qint32 m_recycle_bin_retention_period;
    bool m_recycle_bin_retention_period_isSet;
    bool m_recycle_bin_retention_period_isValid;

    qint64 m_reference_id;
    bool m_reference_id_isSet;
    bool m_reference_id_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QDateTime m_timestamp_creation;
    bool m_timestamp_creation_isSet;
    bool m_timestamp_creation_isValid;

    QDateTime m_timestamp_modification;
    bool m_timestamp_modification_isSet;
    bool m_timestamp_modification_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUserInfo m_updated_by;
    bool m_updated_by_isSet;
    bool m_updated_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINode)

#endif // OAINode_H
