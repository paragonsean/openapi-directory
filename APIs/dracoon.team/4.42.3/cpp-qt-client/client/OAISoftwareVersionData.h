/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISoftwareVersionData.h
 *
 * Software version information
 */

#ifndef OAISoftwareVersionData_H
#define OAISoftwareVersionData_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISoftwareVersionData : public OAIObject {
public:
    OAISoftwareVersionData();
    OAISoftwareVersionData(QString json);
    ~OAISoftwareVersionData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getBuildDate() const;
    void setBuildDate(const QDateTime &build_date);
    bool is_build_date_Set() const;
    bool is_build_date_Valid() const;

    bool isIsDracoonCloud() const;
    void setIsDracoonCloud(const bool &is_dracoon_cloud);
    bool is_is_dracoon_cloud_Set() const;
    bool is_is_dracoon_cloud_Valid() const;

    QString getRestApiVersion() const;
    void setRestApiVersion(const QString &rest_api_version);
    bool is_rest_api_version_Set() const;
    bool is_rest_api_version_Valid() const;

    QString getScmRevisionNumber() const;
    void setScmRevisionNumber(const QString &scm_revision_number);
    bool is_scm_revision_number_Set() const;
    bool is_scm_revision_number_Valid() const;

    QString getSdsServerVersion() const;
    void setSdsServerVersion(const QString &sds_server_version);
    bool is_sds_server_version_Set() const;
    bool is_sds_server_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_build_date;
    bool m_build_date_isSet;
    bool m_build_date_isValid;

    bool m_is_dracoon_cloud;
    bool m_is_dracoon_cloud_isSet;
    bool m_is_dracoon_cloud_isValid;

    QString m_rest_api_version;
    bool m_rest_api_version_isSet;
    bool m_rest_api_version_isValid;

    QString m_scm_revision_number;
    bool m_scm_revision_number_isSet;
    bool m_scm_revision_number_isValid;

    QString m_sds_server_version;
    bool m_sds_server_version_isSet;
    bool m_sds_server_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISoftwareVersionData)

#endif // OAISoftwareVersionData_H
