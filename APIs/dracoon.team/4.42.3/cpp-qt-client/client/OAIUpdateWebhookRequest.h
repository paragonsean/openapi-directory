/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateWebhookRequest.h
 *
 * Request model for updating a webhook
 */

#ifndef OAIUpdateWebhookRequest_H
#define OAIUpdateWebhookRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateWebhookRequest : public OAIObject {
public:
    OAIUpdateWebhookRequest();
    OAIUpdateWebhookRequest(QString json);
    ~OAIUpdateWebhookRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getEventTypeNames() const;
    void setEventTypeNames(const QList<QString> &event_type_names);
    bool is_event_type_names_Set() const;
    bool is_event_type_names_Valid() const;

    bool isIsEnabled() const;
    void setIsEnabled(const bool &is_enabled);
    bool is_is_enabled_Set() const;
    bool is_is_enabled_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    bool isTriggerExampleEvent() const;
    void setTriggerExampleEvent(const bool &trigger_example_event);
    bool is_trigger_example_event_Set() const;
    bool is_trigger_example_event_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_event_type_names;
    bool m_event_type_names_isSet;
    bool m_event_type_names_isValid;

    bool m_is_enabled;
    bool m_is_enabled_isSet;
    bool m_is_enabled_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    bool m_trigger_example_event;
    bool m_trigger_example_event_isSet;
    bool m_trigger_example_event_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateWebhookRequest)

#endif // OAIUpdateWebhookRequest_H
