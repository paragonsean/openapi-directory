/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserAuthData.h
 *
 * User Authentication Data
 */

#ifndef OAIUserAuthData_H
#define OAIUserAuthData_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserAuthData : public OAIObject {
public:
    OAIUserAuthData();
    OAIUserAuthData(QString json);
    ~OAIUserAuthData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdConfigId() const;
    void setAdConfigId(const qint32 &ad_config_id);
    bool is_ad_config_id_Set() const;
    bool is_ad_config_id_Valid() const;

    QString getLogin() const;
    void setLogin(const QString &login);
    bool is_login_Set() const;
    bool is_login_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    bool isMustChangePassword() const;
    void setMustChangePassword(const bool &must_change_password);
    bool is_must_change_password_Set() const;
    bool is_must_change_password_Valid() const;

    qint32 getOidConfigId() const;
    void setOidConfigId(const qint32 &oid_config_id);
    bool is_oid_config_id_Set() const;
    bool is_oid_config_id_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_ad_config_id;
    bool m_ad_config_id_isSet;
    bool m_ad_config_id_isValid;

    QString m_login;
    bool m_login_isSet;
    bool m_login_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    bool m_must_change_password;
    bool m_must_change_password_isSet;
    bool m_must_change_password_isValid;

    qint32 m_oid_config_id;
    bool m_oid_config_id_isSet;
    bool m_oid_config_id_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserAuthData)

#endif // OAIUserAuthData_H
