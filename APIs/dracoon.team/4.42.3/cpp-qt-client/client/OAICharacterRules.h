/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICharacterRules.h
 *
 * Password character rules
 */

#ifndef OAICharacterRules_H
#define OAICharacterRules_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICharacterRules : public OAIObject {
public:
    OAICharacterRules();
    OAICharacterRules(QString json);
    ~OAICharacterRules() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getMustContainCharacters() const;
    void setMustContainCharacters(const QList<QString> &must_contain_characters);
    bool is_must_contain_characters_Set() const;
    bool is_must_contain_characters_Valid() const;

    qint32 getNumberOfCharacteristicsToEnforce() const;
    void setNumberOfCharacteristicsToEnforce(const qint32 &number_of_characteristics_to_enforce);
    bool is_number_of_characteristics_to_enforce_Set() const;
    bool is_number_of_characteristics_to_enforce_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_must_contain_characters;
    bool m_must_contain_characters_isSet;
    bool m_must_contain_characters_isValid;

    qint32 m_number_of_characteristics_to_enforce;
    bool m_number_of_characteristics_to_enforce_isSet;
    bool m_number_of_characteristics_to_enforce_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICharacterRules)

#endif // OAICharacterRules_H
