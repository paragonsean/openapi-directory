/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUploadShare.h
 *
 * Upload Share information
 */

#ifndef OAIUploadShare_H
#define OAIUploadShare_H

#include <QJsonObject>

#include "OAIUserInfo.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserInfo;

class OAIUploadShare : public OAIObject {
public:
    OAIUploadShare();
    OAIUploadShare(QString json);
    ~OAIUploadShare() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessKey() const;
    void setAccessKey(const QString &access_key);
    bool is_access_key_Set() const;
    bool is_access_key_Valid() const;

    qint32 getCntFiles() const;
    void setCntFiles(const qint32 &cnt_files);
    bool is_cnt_files_Set() const;
    bool is_cnt_files_Valid() const;

    qint32 getCntUploads() const;
    void setCntUploads(const qint32 &cnt_uploads);
    bool is_cnt_uploads_Set() const;
    bool is_cnt_uploads_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIUserInfo getCreatedBy() const;
    void setCreatedBy(const OAIUserInfo &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QString getDataUrl() const;
    void setDataUrl(const QString &data_url);
    bool is_data_url_Set() const;
    bool is_data_url_Valid() const;

    QDateTime getExpireAt() const;
    void setExpireAt(const QDateTime &expire_at);
    bool is_expire_at_Set() const;
    bool is_expire_at_Valid() const;

    qint32 getFilesExpiryPeriod() const;
    void setFilesExpiryPeriod(const qint32 &files_expiry_period);
    bool is_files_expiry_period_Set() const;
    bool is_files_expiry_period_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInternalNotes() const;
    void setInternalNotes(const QString &internal_notes);
    bool is_internal_notes_Set() const;
    bool is_internal_notes_Valid() const;

    bool isIsEncrypted() const;
    void setIsEncrypted(const bool &is_encrypted);
    bool is_is_encrypted_Set() const;
    bool is_is_encrypted_Valid() const;

    bool isIsProtected() const;
    void setIsProtected(const bool &is_protected);
    bool is_is_protected_Set() const;
    bool is_is_protected_Valid() const;

    qint64 getMaxSize() const;
    void setMaxSize(const qint64 &max_size);
    bool is_max_size_Set() const;
    bool is_max_size_Valid() const;

    qint32 getMaxSlots() const;
    void setMaxSlots(const qint32 &max_slots);
    bool is_max_slots_Set() const;
    bool is_max_slots_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    Q_DECL_DEPRECATED bool isNotifyCreator() const;
    Q_DECL_DEPRECATED void setNotifyCreator(const bool &notify_creator);
    Q_DECL_DEPRECATED bool is_notify_creator_Set() const;
    Q_DECL_DEPRECATED bool is_notify_creator_Valid() const;

    Q_DECL_DEPRECATED QString getRecipients() const;
    Q_DECL_DEPRECATED void setRecipients(const QString &recipients);
    Q_DECL_DEPRECATED bool is_recipients_Set() const;
    Q_DECL_DEPRECATED bool is_recipients_Valid() const;

    bool isShowCreatorName() const;
    void setShowCreatorName(const bool &show_creator_name);
    bool is_show_creator_name_Set() const;
    bool is_show_creator_name_Valid() const;

    bool isShowCreatorUsername() const;
    void setShowCreatorUsername(const bool &show_creator_username);
    bool is_show_creator_username_Set() const;
    bool is_show_creator_username_Valid() const;

    bool isShowUploadedFiles() const;
    void setShowUploadedFiles(const bool &show_uploaded_files);
    bool is_show_uploaded_files_Set() const;
    bool is_show_uploaded_files_Valid() const;

    Q_DECL_DEPRECATED QString getSmsRecipients() const;
    Q_DECL_DEPRECATED void setSmsRecipients(const QString &sms_recipients);
    Q_DECL_DEPRECATED bool is_sms_recipients_Set() const;
    Q_DECL_DEPRECATED bool is_sms_recipients_Valid() const;

    qint64 getTargetId() const;
    void setTargetId(const qint64 &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    QString getTargetPath() const;
    void setTargetPath(const QString &target_path);
    bool is_target_path_Set() const;
    bool is_target_path_Valid() const;

    QString getTargetType() const;
    void setTargetType(const QString &target_type);
    bool is_target_type_Set() const;
    bool is_target_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUserInfo getUpdatedBy() const;
    void setUpdatedBy(const OAIUserInfo &updated_by);
    bool is_updated_by_Set() const;
    bool is_updated_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_key;
    bool m_access_key_isSet;
    bool m_access_key_isValid;

    qint32 m_cnt_files;
    bool m_cnt_files_isSet;
    bool m_cnt_files_isValid;

    qint32 m_cnt_uploads;
    bool m_cnt_uploads_isSet;
    bool m_cnt_uploads_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIUserInfo m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QString m_data_url;
    bool m_data_url_isSet;
    bool m_data_url_isValid;

    QDateTime m_expire_at;
    bool m_expire_at_isSet;
    bool m_expire_at_isValid;

    qint32 m_files_expiry_period;
    bool m_files_expiry_period_isSet;
    bool m_files_expiry_period_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_internal_notes;
    bool m_internal_notes_isSet;
    bool m_internal_notes_isValid;

    bool m_is_encrypted;
    bool m_is_encrypted_isSet;
    bool m_is_encrypted_isValid;

    bool m_is_protected;
    bool m_is_protected_isSet;
    bool m_is_protected_isValid;

    qint64 m_max_size;
    bool m_max_size_isSet;
    bool m_max_size_isValid;

    qint32 m_max_slots;
    bool m_max_slots_isSet;
    bool m_max_slots_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    bool m_notify_creator;
    bool m_notify_creator_isSet;
    bool m_notify_creator_isValid;

    QString m_recipients;
    bool m_recipients_isSet;
    bool m_recipients_isValid;

    bool m_show_creator_name;
    bool m_show_creator_name_isSet;
    bool m_show_creator_name_isValid;

    bool m_show_creator_username;
    bool m_show_creator_username_isSet;
    bool m_show_creator_username_isValid;

    bool m_show_uploaded_files;
    bool m_show_uploaded_files_isSet;
    bool m_show_uploaded_files_isValid;

    QString m_sms_recipients;
    bool m_sms_recipients_isSet;
    bool m_sms_recipients_isValid;

    qint64 m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;

    QString m_target_path;
    bool m_target_path_isSet;
    bool m_target_path_isValid;

    QString m_target_type;
    bool m_target_type_isSet;
    bool m_target_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUserInfo m_updated_by;
    bool m_updated_by_isSet;
    bool m_updated_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUploadShare)

#endif // OAIUploadShare_H
