/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeneratePresignedUrlsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeneratePresignedUrlsRequest::OAIGeneratePresignedUrlsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeneratePresignedUrlsRequest::OAIGeneratePresignedUrlsRequest() {
    this->initializeModel();
}

OAIGeneratePresignedUrlsRequest::~OAIGeneratePresignedUrlsRequest() {}

void OAIGeneratePresignedUrlsRequest::initializeModel() {

    m_first_part_number_isSet = false;
    m_first_part_number_isValid = false;

    m_last_part_number_isSet = false;
    m_last_part_number_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIGeneratePresignedUrlsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeneratePresignedUrlsRequest::fromJsonObject(QJsonObject json) {

    m_first_part_number_isValid = ::OpenAPI::fromJsonValue(m_first_part_number, json[QString("firstPartNumber")]);
    m_first_part_number_isSet = !json[QString("firstPartNumber")].isNull() && m_first_part_number_isValid;

    m_last_part_number_isValid = ::OpenAPI::fromJsonValue(m_last_part_number, json[QString("lastPartNumber")]);
    m_last_part_number_isSet = !json[QString("lastPartNumber")].isNull() && m_last_part_number_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIGeneratePresignedUrlsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeneratePresignedUrlsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_first_part_number_isSet) {
        obj.insert(QString("firstPartNumber"), ::OpenAPI::toJsonValue(m_first_part_number));
    }
    if (m_last_part_number_isSet) {
        obj.insert(QString("lastPartNumber"), ::OpenAPI::toJsonValue(m_last_part_number));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

qint32 OAIGeneratePresignedUrlsRequest::getFirstPartNumber() const {
    return m_first_part_number;
}
void OAIGeneratePresignedUrlsRequest::setFirstPartNumber(const qint32 &first_part_number) {
    m_first_part_number = first_part_number;
    m_first_part_number_isSet = true;
}

bool OAIGeneratePresignedUrlsRequest::is_first_part_number_Set() const{
    return m_first_part_number_isSet;
}

bool OAIGeneratePresignedUrlsRequest::is_first_part_number_Valid() const{
    return m_first_part_number_isValid;
}

qint32 OAIGeneratePresignedUrlsRequest::getLastPartNumber() const {
    return m_last_part_number;
}
void OAIGeneratePresignedUrlsRequest::setLastPartNumber(const qint32 &last_part_number) {
    m_last_part_number = last_part_number;
    m_last_part_number_isSet = true;
}

bool OAIGeneratePresignedUrlsRequest::is_last_part_number_Set() const{
    return m_last_part_number_isSet;
}

bool OAIGeneratePresignedUrlsRequest::is_last_part_number_Valid() const{
    return m_last_part_number_isValid;
}

qint64 OAIGeneratePresignedUrlsRequest::getSize() const {
    return m_size;
}
void OAIGeneratePresignedUrlsRequest::setSize(const qint64 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIGeneratePresignedUrlsRequest::is_size_Set() const{
    return m_size_isSet;
}

bool OAIGeneratePresignedUrlsRequest::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIGeneratePresignedUrlsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_part_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_part_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeneratePresignedUrlsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_first_part_number_isValid && m_last_part_number_isValid && m_size_isValid && true;
}

} // namespace OpenAPI
