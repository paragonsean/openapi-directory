/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeletedNodeSummary.h
 *
 * Deleted node information (Deleted node can be a folder or file)
 */

#ifndef OAIDeletedNodeSummary_H
#define OAIDeletedNodeSummary_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeletedNodeSummary : public OAIObject {
public:
    OAIDeletedNodeSummary();
    OAIDeletedNodeSummary(QString json);
    ~OAIDeletedNodeSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCntVersions() const;
    void setCntVersions(const qint32 &cnt_versions);
    bool is_cnt_versions_Set() const;
    bool is_cnt_versions_Valid() const;

    QDateTime getFirstDeletedAt() const;
    void setFirstDeletedAt(const QDateTime &first_deleted_at);
    bool is_first_deleted_at_Set() const;
    bool is_first_deleted_at_Valid() const;

    QDateTime getLastDeletedAt() const;
    void setLastDeletedAt(const QDateTime &last_deleted_at);
    bool is_last_deleted_at_Set() const;
    bool is_last_deleted_at_Valid() const;

    qint64 getLastDeletedNodeId() const;
    void setLastDeletedNodeId(const qint64 &last_deleted_node_id);
    bool is_last_deleted_node_id_Set() const;
    bool is_last_deleted_node_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getParentId() const;
    void setParentId(const qint64 &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    QString getParentPath() const;
    void setParentPath(const QString &parent_path);
    bool is_parent_path_Set() const;
    bool is_parent_path_Valid() const;

    qint64 getReferenceId() const;
    void setReferenceId(const qint64 &reference_id);
    bool is_reference_id_Set() const;
    bool is_reference_id_Valid() const;

    QDateTime getTimestampCreation() const;
    void setTimestampCreation(const QDateTime &timestamp_creation);
    bool is_timestamp_creation_Set() const;
    bool is_timestamp_creation_Valid() const;

    QDateTime getTimestampModification() const;
    void setTimestampModification(const QDateTime &timestamp_modification);
    bool is_timestamp_modification_Set() const;
    bool is_timestamp_modification_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_cnt_versions;
    bool m_cnt_versions_isSet;
    bool m_cnt_versions_isValid;

    QDateTime m_first_deleted_at;
    bool m_first_deleted_at_isSet;
    bool m_first_deleted_at_isValid;

    QDateTime m_last_deleted_at;
    bool m_last_deleted_at_isSet;
    bool m_last_deleted_at_isValid;

    qint64 m_last_deleted_node_id;
    bool m_last_deleted_node_id_isSet;
    bool m_last_deleted_node_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    QString m_parent_path;
    bool m_parent_path_isSet;
    bool m_parent_path_isValid;

    qint64 m_reference_id;
    bool m_reference_id_isSet;
    bool m_reference_id_isValid;

    QDateTime m_timestamp_creation;
    bool m_timestamp_creation_isSet;
    bool m_timestamp_creation_isValid;

    QDateTime m_timestamp_modification;
    bool m_timestamp_modification_isSet;
    bool m_timestamp_modification_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeletedNodeSummary)

#endif // OAIDeletedNodeSummary_H
