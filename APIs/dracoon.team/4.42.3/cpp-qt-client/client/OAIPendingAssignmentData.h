/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPendingAssignmentData.h
 *
 * Pending assignment information
 */

#ifndef OAIPendingAssignmentData_H
#define OAIPendingAssignmentData_H

#include <QJsonObject>

#include "OAIGroupInfo.h"
#include "OAIPendingGroupData.h"
#include "OAIPendingUserData.h"
#include "OAIUserInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroupInfo;
class OAIPendingGroupData;
class OAIPendingUserData;
class OAIUserInfo;

class OAIPendingAssignmentData : public OAIObject {
public:
    OAIPendingAssignmentData();
    OAIPendingAssignmentData(QString json);
    ~OAIPendingAssignmentData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGroupInfo getGroupInfo() const;
    void setGroupInfo(const OAIGroupInfo &group_info);
    bool is_group_info_Set() const;
    bool is_group_info_Valid() const;

    Q_DECL_DEPRECATED OAIPendingGroupData getPendingGroupData() const;
    Q_DECL_DEPRECATED void setPendingGroupData(const OAIPendingGroupData &pending_group_data);
    Q_DECL_DEPRECATED bool is_pending_group_data_Set() const;
    Q_DECL_DEPRECATED bool is_pending_group_data_Valid() const;

    Q_DECL_DEPRECATED OAIPendingUserData getPendingUserData() const;
    Q_DECL_DEPRECATED void setPendingUserData(const OAIPendingUserData &pending_user_data);
    Q_DECL_DEPRECATED bool is_pending_user_data_Set() const;
    Q_DECL_DEPRECATED bool is_pending_user_data_Valid() const;

    qint64 getRoomId() const;
    void setRoomId(const qint64 &room_id);
    bool is_room_id_Set() const;
    bool is_room_id_Valid() const;

    QString getRoomName() const;
    void setRoomName(const QString &room_name);
    bool is_room_name_Set() const;
    bool is_room_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    OAIUserInfo getUserInfo() const;
    void setUserInfo(const OAIUserInfo &user_info);
    bool is_user_info_Set() const;
    bool is_user_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGroupInfo m_group_info;
    bool m_group_info_isSet;
    bool m_group_info_isValid;

    OAIPendingGroupData m_pending_group_data;
    bool m_pending_group_data_isSet;
    bool m_pending_group_data_isValid;

    OAIPendingUserData m_pending_user_data;
    bool m_pending_user_data_isSet;
    bool m_pending_user_data_isValid;

    qint64 m_room_id;
    bool m_room_id_isSet;
    bool m_room_id_isValid;

    QString m_room_name;
    bool m_room_name_isSet;
    bool m_room_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    OAIUserInfo m_user_info;
    bool m_user_info_isSet;
    bool m_user_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPendingAssignmentData)

#endif // OAIPendingAssignmentData_H
