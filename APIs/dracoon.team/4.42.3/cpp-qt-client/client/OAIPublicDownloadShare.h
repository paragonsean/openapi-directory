/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPublicDownloadShare.h
 *
 * Download Share information
 */

#ifndef OAIPublicDownloadShare_H
#define OAIPublicDownloadShare_H

#include <QJsonObject>

#include "OAIFileKey.h"
#include "OAIPrivateKeyContainer.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFileKey;
class OAIPrivateKeyContainer;

class OAIPublicDownloadShare : public OAIObject {
public:
    OAIPublicDownloadShare();
    OAIPublicDownloadShare(QString json);
    ~OAIPublicDownloadShare() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatorName() const;
    void setCreatorName(const QString &creator_name);
    bool is_creator_name_Set() const;
    bool is_creator_name_Valid() const;

    QString getCreatorUsername() const;
    void setCreatorUsername(const QString &creator_username);
    bool is_creator_username_Set() const;
    bool is_creator_username_Valid() const;

    QDateTime getExpireAt() const;
    void setExpireAt(const QDateTime &expire_at);
    bool is_expire_at_Set() const;
    bool is_expire_at_Valid() const;

    OAIFileKey getFileKey() const;
    void setFileKey(const OAIFileKey &file_key);
    bool is_file_key_Set() const;
    bool is_file_key_Valid() const;

    QString getFileName() const;
    void setFileName(const QString &file_name);
    bool is_file_name_Set() const;
    bool is_file_name_Valid() const;

    bool isHasDownloadLimit() const;
    void setHasDownloadLimit(const bool &has_download_limit);
    bool is_has_download_limit_Set() const;
    bool is_has_download_limit_Valid() const;

    bool isIsEncrypted() const;
    void setIsEncrypted(const bool &is_encrypted);
    bool is_is_encrypted_Set() const;
    bool is_is_encrypted_Valid() const;

    bool isIsProtected() const;
    void setIsProtected(const bool &is_protected);
    bool is_is_protected_Set() const;
    bool is_is_protected_Valid() const;

    bool isLimitReached() const;
    void setLimitReached(const bool &limit_reached);
    bool is_limit_reached_Set() const;
    bool is_limit_reached_Valid() const;

    QString getMediaType() const;
    void setMediaType(const QString &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    OAIPrivateKeyContainer getPrivateKeyContainer() const;
    void setPrivateKeyContainer(const OAIPrivateKeyContainer &private_key_container);
    bool is_private_key_container_Set() const;
    bool is_private_key_container_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_creator_name;
    bool m_creator_name_isSet;
    bool m_creator_name_isValid;

    QString m_creator_username;
    bool m_creator_username_isSet;
    bool m_creator_username_isValid;

    QDateTime m_expire_at;
    bool m_expire_at_isSet;
    bool m_expire_at_isValid;

    OAIFileKey m_file_key;
    bool m_file_key_isSet;
    bool m_file_key_isValid;

    QString m_file_name;
    bool m_file_name_isSet;
    bool m_file_name_isValid;

    bool m_has_download_limit;
    bool m_has_download_limit_isSet;
    bool m_has_download_limit_isValid;

    bool m_is_encrypted;
    bool m_is_encrypted_isSet;
    bool m_is_encrypted_isValid;

    bool m_is_protected;
    bool m_is_protected_isSet;
    bool m_is_protected_isValid;

    bool m_limit_reached;
    bool m_limit_reached_isSet;
    bool m_limit_reached_isValid;

    QString m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    OAIPrivateKeyContainer m_private_key_container;
    bool m_private_key_container_isSet;
    bool m_private_key_container_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPublicDownloadShare)

#endif // OAIPublicDownloadShare_H
