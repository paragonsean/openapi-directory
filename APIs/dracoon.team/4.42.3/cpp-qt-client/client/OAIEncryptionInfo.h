/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEncryptionInfo.h
 *
 * Encryption states
 */

#ifndef OAIEncryptionInfo_H
#define OAIEncryptionInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEncryptionInfo : public OAIObject {
public:
    OAIEncryptionInfo();
    OAIEncryptionInfo(QString json);
    ~OAIEncryptionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataSpaceKeyState() const;
    void setDataSpaceKeyState(const QString &data_space_key_state);
    bool is_data_space_key_state_Set() const;
    bool is_data_space_key_state_Valid() const;

    QString getRoomKeyState() const;
    void setRoomKeyState(const QString &room_key_state);
    bool is_room_key_state_Set() const;
    bool is_room_key_state_Valid() const;

    QString getUserKeyState() const;
    void setUserKeyState(const QString &user_key_state);
    bool is_user_key_state_Set() const;
    bool is_user_key_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_space_key_state;
    bool m_data_space_key_state_isSet;
    bool m_data_space_key_state_isValid;

    QString m_room_key_state;
    bool m_room_key_state_isSet;
    bool m_room_key_state_isValid;

    QString m_user_key_state;
    bool m_user_key_state_isSet;
    bool m_user_key_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEncryptionInfo)

#endif // OAIEncryptionInfo_H
