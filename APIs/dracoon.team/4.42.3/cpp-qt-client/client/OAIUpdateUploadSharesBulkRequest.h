/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateUploadSharesBulkRequest.h
 *
 * Request model for updating a list of Download Shares
 */

#ifndef OAIUpdateUploadSharesBulkRequest_H
#define OAIUpdateUploadSharesBulkRequest_H

#include <QJsonObject>

#include "OAIObjectExpiration.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjectExpiration;

class OAIUpdateUploadSharesBulkRequest : public OAIObject {
public:
    OAIUpdateUploadSharesBulkRequest();
    OAIUpdateUploadSharesBulkRequest(QString json);
    ~OAIUpdateUploadSharesBulkRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObjectExpiration getExpiration() const;
    void setExpiration(const OAIObjectExpiration &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    qint32 getFilesExpiryPeriod() const;
    void setFilesExpiryPeriod(const qint32 &files_expiry_period);
    bool is_files_expiry_period_Set() const;
    bool is_files_expiry_period_Valid() const;

    qint64 getMaxSize() const;
    void setMaxSize(const qint64 &max_size);
    bool is_max_size_Set() const;
    bool is_max_size_Valid() const;

    qint32 getMaxSlots() const;
    void setMaxSlots(const qint32 &max_slots);
    bool is_max_slots_Set() const;
    bool is_max_slots_Valid() const;

    QList<qint64> getObjectIds() const;
    void setObjectIds(const QList<qint64> &object_ids);
    bool is_object_ids_Set() const;
    bool is_object_ids_Valid() const;

    bool isResetFilesExpiryPeriod() const;
    void setResetFilesExpiryPeriod(const bool &reset_files_expiry_period);
    bool is_reset_files_expiry_period_Set() const;
    bool is_reset_files_expiry_period_Valid() const;

    bool isResetMaxSize() const;
    void setResetMaxSize(const bool &reset_max_size);
    bool is_reset_max_size_Set() const;
    bool is_reset_max_size_Valid() const;

    bool isResetMaxSlots() const;
    void setResetMaxSlots(const bool &reset_max_slots);
    bool is_reset_max_slots_Set() const;
    bool is_reset_max_slots_Valid() const;

    bool isShowCreatorName() const;
    void setShowCreatorName(const bool &show_creator_name);
    bool is_show_creator_name_Set() const;
    bool is_show_creator_name_Valid() const;

    bool isShowCreatorUsername() const;
    void setShowCreatorUsername(const bool &show_creator_username);
    bool is_show_creator_username_Set() const;
    bool is_show_creator_username_Valid() const;

    bool isShowUploadedFiles() const;
    void setShowUploadedFiles(const bool &show_uploaded_files);
    bool is_show_uploaded_files_Set() const;
    bool is_show_uploaded_files_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObjectExpiration m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    qint32 m_files_expiry_period;
    bool m_files_expiry_period_isSet;
    bool m_files_expiry_period_isValid;

    qint64 m_max_size;
    bool m_max_size_isSet;
    bool m_max_size_isValid;

    qint32 m_max_slots;
    bool m_max_slots_isSet;
    bool m_max_slots_isValid;

    QList<qint64> m_object_ids;
    bool m_object_ids_isSet;
    bool m_object_ids_isValid;

    bool m_reset_files_expiry_period;
    bool m_reset_files_expiry_period_isSet;
    bool m_reset_files_expiry_period_isValid;

    bool m_reset_max_size;
    bool m_reset_max_size_isSet;
    bool m_reset_max_size_isValid;

    bool m_reset_max_slots;
    bool m_reset_max_slots_isSet;
    bool m_reset_max_slots_isValid;

    bool m_show_creator_name;
    bool m_show_creator_name_isSet;
    bool m_show_creator_name_isValid;

    bool m_show_creator_username;
    bool m_show_creator_username_isSet;
    bool m_show_creator_username_isValid;

    bool m_show_uploaded_files;
    bool m_show_uploaded_files_isSet;
    bool m_show_uploaded_files_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateUploadSharesBulkRequest)

#endif // OAIUpdateUploadSharesBulkRequest_H
