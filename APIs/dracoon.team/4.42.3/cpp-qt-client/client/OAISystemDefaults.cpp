/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISystemDefaults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISystemDefaults::OAISystemDefaults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISystemDefaults::OAISystemDefaults() {
    this->initializeModel();
}

OAISystemDefaults::~OAISystemDefaults() {}

void OAISystemDefaults::initializeModel() {

    m_download_share_default_expiration_period_isSet = false;
    m_download_share_default_expiration_period_isValid = false;

    m_file_default_expiration_period_isSet = false;
    m_file_default_expiration_period_isValid = false;

    m_hide_login_input_fields_isSet = false;
    m_hide_login_input_fields_isValid = false;

    m_language_default_isSet = false;
    m_language_default_isValid = false;

    m_nonmember_viewer_default_isSet = false;
    m_nonmember_viewer_default_isValid = false;

    m_upload_share_default_expiration_period_isSet = false;
    m_upload_share_default_expiration_period_isValid = false;
}

void OAISystemDefaults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISystemDefaults::fromJsonObject(QJsonObject json) {

    m_download_share_default_expiration_period_isValid = ::OpenAPI::fromJsonValue(m_download_share_default_expiration_period, json[QString("downloadShareDefaultExpirationPeriod")]);
    m_download_share_default_expiration_period_isSet = !json[QString("downloadShareDefaultExpirationPeriod")].isNull() && m_download_share_default_expiration_period_isValid;

    m_file_default_expiration_period_isValid = ::OpenAPI::fromJsonValue(m_file_default_expiration_period, json[QString("fileDefaultExpirationPeriod")]);
    m_file_default_expiration_period_isSet = !json[QString("fileDefaultExpirationPeriod")].isNull() && m_file_default_expiration_period_isValid;

    m_hide_login_input_fields_isValid = ::OpenAPI::fromJsonValue(m_hide_login_input_fields, json[QString("hideLoginInputFields")]);
    m_hide_login_input_fields_isSet = !json[QString("hideLoginInputFields")].isNull() && m_hide_login_input_fields_isValid;

    m_language_default_isValid = ::OpenAPI::fromJsonValue(m_language_default, json[QString("languageDefault")]);
    m_language_default_isSet = !json[QString("languageDefault")].isNull() && m_language_default_isValid;

    m_nonmember_viewer_default_isValid = ::OpenAPI::fromJsonValue(m_nonmember_viewer_default, json[QString("nonmemberViewerDefault")]);
    m_nonmember_viewer_default_isSet = !json[QString("nonmemberViewerDefault")].isNull() && m_nonmember_viewer_default_isValid;

    m_upload_share_default_expiration_period_isValid = ::OpenAPI::fromJsonValue(m_upload_share_default_expiration_period, json[QString("uploadShareDefaultExpirationPeriod")]);
    m_upload_share_default_expiration_period_isSet = !json[QString("uploadShareDefaultExpirationPeriod")].isNull() && m_upload_share_default_expiration_period_isValid;
}

QString OAISystemDefaults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISystemDefaults::asJsonObject() const {
    QJsonObject obj;
    if (m_download_share_default_expiration_period_isSet) {
        obj.insert(QString("downloadShareDefaultExpirationPeriod"), ::OpenAPI::toJsonValue(m_download_share_default_expiration_period));
    }
    if (m_file_default_expiration_period_isSet) {
        obj.insert(QString("fileDefaultExpirationPeriod"), ::OpenAPI::toJsonValue(m_file_default_expiration_period));
    }
    if (m_hide_login_input_fields_isSet) {
        obj.insert(QString("hideLoginInputFields"), ::OpenAPI::toJsonValue(m_hide_login_input_fields));
    }
    if (m_language_default_isSet) {
        obj.insert(QString("languageDefault"), ::OpenAPI::toJsonValue(m_language_default));
    }
    if (m_nonmember_viewer_default_isSet) {
        obj.insert(QString("nonmemberViewerDefault"), ::OpenAPI::toJsonValue(m_nonmember_viewer_default));
    }
    if (m_upload_share_default_expiration_period_isSet) {
        obj.insert(QString("uploadShareDefaultExpirationPeriod"), ::OpenAPI::toJsonValue(m_upload_share_default_expiration_period));
    }
    return obj;
}

qint32 OAISystemDefaults::getDownloadShareDefaultExpirationPeriod() const {
    return m_download_share_default_expiration_period;
}
void OAISystemDefaults::setDownloadShareDefaultExpirationPeriod(const qint32 &download_share_default_expiration_period) {
    m_download_share_default_expiration_period = download_share_default_expiration_period;
    m_download_share_default_expiration_period_isSet = true;
}

bool OAISystemDefaults::is_download_share_default_expiration_period_Set() const{
    return m_download_share_default_expiration_period_isSet;
}

bool OAISystemDefaults::is_download_share_default_expiration_period_Valid() const{
    return m_download_share_default_expiration_period_isValid;
}

qint32 OAISystemDefaults::getFileDefaultExpirationPeriod() const {
    return m_file_default_expiration_period;
}
void OAISystemDefaults::setFileDefaultExpirationPeriod(const qint32 &file_default_expiration_period) {
    m_file_default_expiration_period = file_default_expiration_period;
    m_file_default_expiration_period_isSet = true;
}

bool OAISystemDefaults::is_file_default_expiration_period_Set() const{
    return m_file_default_expiration_period_isSet;
}

bool OAISystemDefaults::is_file_default_expiration_period_Valid() const{
    return m_file_default_expiration_period_isValid;
}

bool OAISystemDefaults::isHideLoginInputFields() const {
    return m_hide_login_input_fields;
}
void OAISystemDefaults::setHideLoginInputFields(const bool &hide_login_input_fields) {
    m_hide_login_input_fields = hide_login_input_fields;
    m_hide_login_input_fields_isSet = true;
}

bool OAISystemDefaults::is_hide_login_input_fields_Set() const{
    return m_hide_login_input_fields_isSet;
}

bool OAISystemDefaults::is_hide_login_input_fields_Valid() const{
    return m_hide_login_input_fields_isValid;
}

QString OAISystemDefaults::getLanguageDefault() const {
    return m_language_default;
}
void OAISystemDefaults::setLanguageDefault(const QString &language_default) {
    m_language_default = language_default;
    m_language_default_isSet = true;
}

bool OAISystemDefaults::is_language_default_Set() const{
    return m_language_default_isSet;
}

bool OAISystemDefaults::is_language_default_Valid() const{
    return m_language_default_isValid;
}

bool OAISystemDefaults::isNonmemberViewerDefault() const {
    return m_nonmember_viewer_default;
}
void OAISystemDefaults::setNonmemberViewerDefault(const bool &nonmember_viewer_default) {
    m_nonmember_viewer_default = nonmember_viewer_default;
    m_nonmember_viewer_default_isSet = true;
}

bool OAISystemDefaults::is_nonmember_viewer_default_Set() const{
    return m_nonmember_viewer_default_isSet;
}

bool OAISystemDefaults::is_nonmember_viewer_default_Valid() const{
    return m_nonmember_viewer_default_isValid;
}

qint32 OAISystemDefaults::getUploadShareDefaultExpirationPeriod() const {
    return m_upload_share_default_expiration_period;
}
void OAISystemDefaults::setUploadShareDefaultExpirationPeriod(const qint32 &upload_share_default_expiration_period) {
    m_upload_share_default_expiration_period = upload_share_default_expiration_period;
    m_upload_share_default_expiration_period_isSet = true;
}

bool OAISystemDefaults::is_upload_share_default_expiration_period_Set() const{
    return m_upload_share_default_expiration_period_isSet;
}

bool OAISystemDefaults::is_upload_share_default_expiration_period_Valid() const{
    return m_upload_share_default_expiration_period_isValid;
}

bool OAISystemDefaults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_download_share_default_expiration_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_default_expiration_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hide_login_input_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nonmember_viewer_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_upload_share_default_expiration_period_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISystemDefaults::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
