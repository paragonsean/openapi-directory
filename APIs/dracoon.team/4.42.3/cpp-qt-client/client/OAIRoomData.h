/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoomData.h
 *
 * Room information
 */

#ifndef OAIRoomData_H
#define OAIRoomData_H

#include <QJsonObject>

#include "OAINodePermissions.h"
#include "OAIUserInfo.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserInfo;
class OAINodePermissions;

class OAIRoomData : public OAIObject {
public:
    OAIRoomData();
    OAIRoomData(QString json);
    ~OAIRoomData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QList<OAIRoomData> getChildren() const;
    Q_DECL_DEPRECATED void setChildren(const QList<OAIRoomData> &children);
    Q_DECL_DEPRECATED bool is_children_Set() const;
    Q_DECL_DEPRECATED bool is_children_Valid() const;

    qint32 getCntDownloadShares() const;
    void setCntDownloadShares(const qint32 &cnt_download_shares);
    bool is_cnt_download_shares_Set() const;
    bool is_cnt_download_shares_Valid() const;

    qint32 getCntUploadShares() const;
    void setCntUploadShares(const qint32 &cnt_upload_shares);
    bool is_cnt_upload_shares_Set() const;
    bool is_cnt_upload_shares_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIUserInfo getCreatedBy() const;
    void setCreatedBy(const OAIUserInfo &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    Q_DECL_DEPRECATED bool isHasRecycleBin() const;
    Q_DECL_DEPRECATED void setHasRecycleBin(const bool &has_recycle_bin);
    Q_DECL_DEPRECATED bool is_has_recycle_bin_Set() const;
    Q_DECL_DEPRECATED bool is_has_recycle_bin_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsEncrypted() const;
    void setIsEncrypted(const bool &is_encrypted);
    bool is_is_encrypted_Set() const;
    bool is_is_encrypted_Valid() const;

    bool isIsFavorite() const;
    void setIsFavorite(const bool &is_favorite);
    bool is_is_favorite_Set() const;
    bool is_is_favorite_Valid() const;

    bool isIsGranted() const;
    void setIsGranted(const bool &is_granted);
    bool is_is_granted_Set() const;
    bool is_is_granted_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getParentId() const;
    void setParentId(const qint64 &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    OAINodePermissions getPermissions() const;
    void setPermissions(const OAINodePermissions &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    qint64 getQuota() const;
    void setQuota(const qint64 &quota);
    bool is_quota_Set() const;
    bool is_quota_Valid() const;

    qint32 getRecycleBinRetentionPeriod() const;
    void setRecycleBinRetentionPeriod(const qint32 &recycle_bin_retention_period);
    bool is_recycle_bin_retention_period_Set() const;
    bool is_recycle_bin_retention_period_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUserInfo getUpdatedBy() const;
    void setUpdatedBy(const OAIUserInfo &updated_by);
    bool is_updated_by_Set() const;
    bool is_updated_by_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIRoomData> m_children;
    bool m_children_isSet;
    bool m_children_isValid;

    qint32 m_cnt_download_shares;
    bool m_cnt_download_shares_isSet;
    bool m_cnt_download_shares_isValid;

    qint32 m_cnt_upload_shares;
    bool m_cnt_upload_shares_isSet;
    bool m_cnt_upload_shares_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIUserInfo m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    bool m_has_recycle_bin;
    bool m_has_recycle_bin_isSet;
    bool m_has_recycle_bin_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_encrypted;
    bool m_is_encrypted_isSet;
    bool m_is_encrypted_isValid;

    bool m_is_favorite;
    bool m_is_favorite_isSet;
    bool m_is_favorite_isValid;

    bool m_is_granted;
    bool m_is_granted_isSet;
    bool m_is_granted_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    OAINodePermissions m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    qint64 m_quota;
    bool m_quota_isSet;
    bool m_quota_isValid;

    qint32 m_recycle_bin_retention_period;
    bool m_recycle_bin_retention_period_isSet;
    bool m_recycle_bin_retention_period_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUserInfo m_updated_by;
    bool m_updated_by_isSet;
    bool m_updated_by_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoomData)

#endif // OAIRoomData_H
