/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductPackageResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductPackageResponse::OAIProductPackageResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductPackageResponse::OAIProductPackageResponse() {
    this->initializeModel();
}

OAIProductPackageResponse::~OAIProductPackageResponse() {}

void OAIProductPackageResponse::initializeModel() {

    m_clients_isSet = false;
    m_clients_isValid = false;

    m_features_isSet = false;
    m_features_isValid = false;

    m_product_package_id_isSet = false;
    m_product_package_id_isValid = false;

    m_product_package_name_isSet = false;
    m_product_package_name_isValid = false;
}

void OAIProductPackageResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductPackageResponse::fromJsonObject(QJsonObject json) {

    m_clients_isValid = ::OpenAPI::fromJsonValue(m_clients, json[QString("clients")]);
    m_clients_isSet = !json[QString("clients")].isNull() && m_clients_isValid;

    m_features_isValid = ::OpenAPI::fromJsonValue(m_features, json[QString("features")]);
    m_features_isSet = !json[QString("features")].isNull() && m_features_isValid;

    m_product_package_id_isValid = ::OpenAPI::fromJsonValue(m_product_package_id, json[QString("productPackageId")]);
    m_product_package_id_isSet = !json[QString("productPackageId")].isNull() && m_product_package_id_isValid;

    m_product_package_name_isValid = ::OpenAPI::fromJsonValue(m_product_package_name, json[QString("productPackageName")]);
    m_product_package_name_isSet = !json[QString("productPackageName")].isNull() && m_product_package_name_isValid;
}

QString OAIProductPackageResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductPackageResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_clients.size() > 0) {
        obj.insert(QString("clients"), ::OpenAPI::toJsonValue(m_clients));
    }
    if (m_features.size() > 0) {
        obj.insert(QString("features"), ::OpenAPI::toJsonValue(m_features));
    }
    if (m_product_package_id_isSet) {
        obj.insert(QString("productPackageId"), ::OpenAPI::toJsonValue(m_product_package_id));
    }
    if (m_product_package_name_isSet) {
        obj.insert(QString("productPackageName"), ::OpenAPI::toJsonValue(m_product_package_name));
    }
    return obj;
}

QList<OAIFeaturedOAuthClient> OAIProductPackageResponse::getClients() const {
    return m_clients;
}
void OAIProductPackageResponse::setClients(const QList<OAIFeaturedOAuthClient> &clients) {
    m_clients = clients;
    m_clients_isSet = true;
}

bool OAIProductPackageResponse::is_clients_Set() const{
    return m_clients_isSet;
}

bool OAIProductPackageResponse::is_clients_Valid() const{
    return m_clients_isValid;
}

QList<OAIFeature> OAIProductPackageResponse::getFeatures() const {
    return m_features;
}
void OAIProductPackageResponse::setFeatures(const QList<OAIFeature> &features) {
    m_features = features;
    m_features_isSet = true;
}

bool OAIProductPackageResponse::is_features_Set() const{
    return m_features_isSet;
}

bool OAIProductPackageResponse::is_features_Valid() const{
    return m_features_isValid;
}

qint64 OAIProductPackageResponse::getProductPackageId() const {
    return m_product_package_id;
}
void OAIProductPackageResponse::setProductPackageId(const qint64 &product_package_id) {
    m_product_package_id = product_package_id;
    m_product_package_id_isSet = true;
}

bool OAIProductPackageResponse::is_product_package_id_Set() const{
    return m_product_package_id_isSet;
}

bool OAIProductPackageResponse::is_product_package_id_Valid() const{
    return m_product_package_id_isValid;
}

QString OAIProductPackageResponse::getProductPackageName() const {
    return m_product_package_name;
}
void OAIProductPackageResponse::setProductPackageName(const QString &product_package_name) {
    m_product_package_name = product_package_name;
    m_product_package_name_isSet = true;
}

bool OAIProductPackageResponse::is_product_package_name_Set() const{
    return m_product_package_name_isSet;
}

bool OAIProductPackageResponse::is_product_package_name_Valid() const{
    return m_product_package_name_isValid;
}

bool OAIProductPackageResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_clients.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_features.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_package_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_package_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductPackageResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_clients_isValid && m_features_isValid && m_product_package_id_isValid && m_product_package_name_isValid && true;
}

} // namespace OpenAPI
