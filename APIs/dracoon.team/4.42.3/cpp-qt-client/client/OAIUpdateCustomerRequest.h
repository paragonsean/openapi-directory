/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateCustomerRequest.h
 *
 * Request model for updating a customer
 */

#ifndef OAIUpdateCustomerRequest_H
#define OAIUpdateCustomerRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateCustomerRequest : public OAIObject {
public:
    OAIUpdateCustomerRequest();
    OAIUpdateCustomerRequest(QString json);
    ~OAIUpdateCustomerRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCompanyName() const;
    void setCompanyName(const QString &company_name);
    bool is_company_name_Set() const;
    bool is_company_name_Valid() const;

    QString getCustomerContractType() const;
    void setCustomerContractType(const QString &customer_contract_type);
    bool is_customer_contract_type_Set() const;
    bool is_customer_contract_type_Valid() const;

    bool isIsLocked() const;
    void setIsLocked(const bool &is_locked);
    bool is_is_locked_Set() const;
    bool is_is_locked_Valid() const;

    Q_DECL_DEPRECATED bool isLockStatus() const;
    Q_DECL_DEPRECATED void setLockStatus(const bool &lock_status);
    Q_DECL_DEPRECATED bool is_lock_status_Set() const;
    Q_DECL_DEPRECATED bool is_lock_status_Valid() const;

    QString getProviderCustomerId() const;
    void setProviderCustomerId(const QString &provider_customer_id);
    bool is_provider_customer_id_Set() const;
    bool is_provider_customer_id_Valid() const;

    qint64 getQuotaMax() const;
    void setQuotaMax(const qint64 &quota_max);
    bool is_quota_max_Set() const;
    bool is_quota_max_Valid() const;

    qint32 getUserMax() const;
    void setUserMax(const qint32 &user_max);
    bool is_user_max_Set() const;
    bool is_user_max_Valid() const;

    qint64 getWebhooksMax() const;
    void setWebhooksMax(const qint64 &webhooks_max);
    bool is_webhooks_max_Set() const;
    bool is_webhooks_max_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_company_name;
    bool m_company_name_isSet;
    bool m_company_name_isValid;

    QString m_customer_contract_type;
    bool m_customer_contract_type_isSet;
    bool m_customer_contract_type_isValid;

    bool m_is_locked;
    bool m_is_locked_isSet;
    bool m_is_locked_isValid;

    bool m_lock_status;
    bool m_lock_status_isSet;
    bool m_lock_status_isValid;

    QString m_provider_customer_id;
    bool m_provider_customer_id_isSet;
    bool m_provider_customer_id_isValid;

    qint64 m_quota_max;
    bool m_quota_max_isSet;
    bool m_quota_max_isValid;

    qint32 m_user_max;
    bool m_user_max_isSet;
    bool m_user_max_isValid;

    qint64 m_webhooks_max;
    bool m_webhooks_max_isSet;
    bool m_webhooks_max_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateCustomerRequest)

#endif // OAIUpdateCustomerRequest_H
