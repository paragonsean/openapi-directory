/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodePermissions.h
 *
 * Node permissions
 */

#ifndef OAINodePermissions_H
#define OAINodePermissions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINodePermissions : public OAIObject {
public:
    OAINodePermissions();
    OAINodePermissions(QString json);
    ~OAINodePermissions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isChange() const;
    void setChange(const bool &change);
    bool is_change_Set() const;
    bool is_change_Valid() const;

    bool isCreate() const;
    void setCreate(const bool &create);
    bool is_create_Set() const;
    bool is_create_Valid() const;

    bool isRDelete() const;
    void setRDelete(const bool &r_delete);
    bool is_r_delete_Set() const;
    bool is_r_delete_Valid() const;

    bool isDeleteRecycleBin() const;
    void setDeleteRecycleBin(const bool &delete_recycle_bin);
    bool is_delete_recycle_bin_Set() const;
    bool is_delete_recycle_bin_Valid() const;

    bool isManage() const;
    void setManage(const bool &manage);
    bool is_manage_Set() const;
    bool is_manage_Valid() const;

    bool isManageDownloadShare() const;
    void setManageDownloadShare(const bool &manage_download_share);
    bool is_manage_download_share_Set() const;
    bool is_manage_download_share_Valid() const;

    bool isManageUploadShare() const;
    void setManageUploadShare(const bool &manage_upload_share);
    bool is_manage_upload_share_Set() const;
    bool is_manage_upload_share_Valid() const;

    bool isRead() const;
    void setRead(const bool &read);
    bool is_read_Set() const;
    bool is_read_Valid() const;

    bool isReadRecycleBin() const;
    void setReadRecycleBin(const bool &read_recycle_bin);
    bool is_read_recycle_bin_Set() const;
    bool is_read_recycle_bin_Valid() const;

    bool isRestoreRecycleBin() const;
    void setRestoreRecycleBin(const bool &restore_recycle_bin);
    bool is_restore_recycle_bin_Set() const;
    bool is_restore_recycle_bin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_change;
    bool m_change_isSet;
    bool m_change_isValid;

    bool m_create;
    bool m_create_isSet;
    bool m_create_isValid;

    bool m_r_delete;
    bool m_r_delete_isSet;
    bool m_r_delete_isValid;

    bool m_delete_recycle_bin;
    bool m_delete_recycle_bin_isSet;
    bool m_delete_recycle_bin_isValid;

    bool m_manage;
    bool m_manage_isSet;
    bool m_manage_isValid;

    bool m_manage_download_share;
    bool m_manage_download_share_isSet;
    bool m_manage_download_share_isValid;

    bool m_manage_upload_share;
    bool m_manage_upload_share_isSet;
    bool m_manage_upload_share_isValid;

    bool m_read;
    bool m_read_isSet;
    bool m_read_isValid;

    bool m_read_recycle_bin;
    bool m_read_recycle_bin_isSet;
    bool m_read_recycle_bin_isValid;

    bool m_restore_recycle_bin;
    bool m_restore_recycle_bin_isSet;
    bool m_restore_recycle_bin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodePermissions)

#endif // OAINodePermissions_H
