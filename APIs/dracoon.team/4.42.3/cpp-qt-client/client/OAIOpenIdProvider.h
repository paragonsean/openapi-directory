/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOpenIdProvider.h
 *
 * OpenID Connect provider information
 */

#ifndef OAIOpenIdProvider_H
#define OAIOpenIdProvider_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOpenIdProvider : public OAIObject {
public:
    OAIOpenIdProvider();
    OAIOpenIdProvider(QString json);
    ~OAIOpenIdProvider() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsGlobalAvailable() const;
    void setIsGlobalAvailable(const bool &is_global_available);
    bool is_is_global_available_Set() const;
    bool is_is_global_available_Valid() const;

    QString getIssuer() const;
    void setIssuer(const QString &issuer);
    bool is_issuer_Set() const;
    bool is_issuer_Valid() const;

    QString getMappingClaim() const;
    void setMappingClaim(const QString &mapping_claim);
    bool is_mapping_claim_Set() const;
    bool is_mapping_claim_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUserManagementUrl() const;
    void setUserManagementUrl(const QString &user_management_url);
    bool is_user_management_url_Set() const;
    bool is_user_management_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_global_available;
    bool m_is_global_available_isSet;
    bool m_is_global_available_isValid;

    QString m_issuer;
    bool m_issuer_isSet;
    bool m_issuer_isValid;

    QString m_mapping_claim;
    bool m_mapping_claim_isSet;
    bool m_mapping_claim_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_user_management_url;
    bool m_user_management_url_isSet;
    bool m_user_management_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOpenIdProvider)

#endif // OAIOpenIdProvider_H
