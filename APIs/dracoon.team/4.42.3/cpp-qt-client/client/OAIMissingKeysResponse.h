/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMissingKeysResponse.h
 *
 * Missing keys information
 */

#ifndef OAIMissingKeysResponse_H
#define OAIMissingKeysResponse_H

#include <QJsonObject>

#include "OAIFileFileKeys.h"
#include "OAIRange.h"
#include "OAIUserIdFileIdItem.h"
#include "OAIUserUserPublicKey.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFileFileKeys;
class OAIUserIdFileIdItem;
class OAIRange;
class OAIUserUserPublicKey;

class OAIMissingKeysResponse : public OAIObject {
public:
    OAIMissingKeysResponse();
    OAIMissingKeysResponse(QString json);
    ~OAIMissingKeysResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFileFileKeys> getFiles() const;
    void setFiles(const QList<OAIFileFileKeys> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    QList<OAIUserIdFileIdItem> getItems() const;
    void setItems(const QList<OAIUserIdFileIdItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    OAIRange getRange() const;
    void setRange(const OAIRange &range);
    bool is_range_Set() const;
    bool is_range_Valid() const;

    QList<OAIUserUserPublicKey> getUsers() const;
    void setUsers(const QList<OAIUserUserPublicKey> &users);
    bool is_users_Set() const;
    bool is_users_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFileFileKeys> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    QList<OAIUserIdFileIdItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    OAIRange m_range;
    bool m_range_isSet;
    bool m_range_isValid;

    QList<OAIUserUserPublicKey> m_users;
    bool m_users_isSet;
    bool m_users_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMissingKeysResponse)

#endif // OAIMissingKeysResponse_H
