/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserAuthDataUpdateRequest model module.
 * @module model/UserAuthDataUpdateRequest
 * @version 4.42.3
 */
class UserAuthDataUpdateRequest {
    /**
     * Constructs a new <code>UserAuthDataUpdateRequest</code>.
     * User Authentication Data Update Request
     * @alias module:model/UserAuthDataUpdateRequest
     */
    constructor() { 
        
        UserAuthDataUpdateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserAuthDataUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserAuthDataUpdateRequest} obj Optional instance to populate.
     * @return {module:model/UserAuthDataUpdateRequest} The populated <code>UserAuthDataUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserAuthDataUpdateRequest();

            if (data.hasOwnProperty('adConfigId')) {
                obj['adConfigId'] = ApiClient.convertToType(data['adConfigId'], 'Number');
            }
            if (data.hasOwnProperty('login')) {
                obj['login'] = ApiClient.convertToType(data['login'], 'String');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('oidConfigId')) {
                obj['oidConfigId'] = ApiClient.convertToType(data['oidConfigId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserAuthDataUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserAuthDataUpdateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['login'] && !(typeof data['login'] === 'string' || data['login'] instanceof String)) {
            throw new Error("Expected the field `login` to be a primitive type in the JSON string but got " + data['login']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }

        return true;
    }


}



/**
 * ID of the user's Active Directory.
 * @member {Number} adConfigId
 */
UserAuthDataUpdateRequest.prototype['adConfigId'] = undefined;

/**
 * User login name
 * @member {String} login
 */
UserAuthDataUpdateRequest.prototype['login'] = undefined;

/**
 * Authentication method    Authentication methods:  * `basic`  * `active_directory`  * `radius`  * `openid`
 * @member {String} method
 */
UserAuthDataUpdateRequest.prototype['method'] = undefined;

/**
 * ID of the user's OIDC provider.
 * @member {Number} oidConfigId
 */
UserAuthDataUpdateRequest.prototype['oidConfigId'] = undefined;






export default UserAuthDataUpdateRequest;

