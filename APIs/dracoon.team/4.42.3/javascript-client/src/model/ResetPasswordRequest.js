/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResetPasswordRequest model module.
 * @module model/ResetPasswordRequest
 * @version 4.42.3
 */
class ResetPasswordRequest {
    /**
     * Constructs a new <code>ResetPasswordRequest</code>.
     * Request model for reseting user&#39;s login password
     * @alias module:model/ResetPasswordRequest
     */
    constructor() { 
        
        ResetPasswordRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResetPasswordRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResetPasswordRequest} obj Optional instance to populate.
     * @return {module:model/ResetPasswordRequest} The populated <code>ResetPasswordRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResetPasswordRequest();

            if (data.hasOwnProperty('creatorLanguage')) {
                obj['creatorLanguage'] = ApiClient.convertToType(data['creatorLanguage'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('login')) {
                obj['login'] = ApiClient.convertToType(data['login'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResetPasswordRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResetPasswordRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creatorLanguage'] && !(typeof data['creatorLanguage'] === 'string' || data['creatorLanguage'] instanceof String)) {
            throw new Error("Expected the field `creatorLanguage` to be a primitive type in the JSON string but got " + data['creatorLanguage']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['login'] && !(typeof data['login'] === 'string' || data['login'] instanceof String)) {
            throw new Error("Expected the field `login` to be a primitive type in the JSON string but got " + data['login']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }

        return true;
    }


}



/**
 * IETF language tag
 * @member {String} creatorLanguage
 */
ResetPasswordRequest.prototype['creatorLanguage'] = undefined;

/**
 * &#128679; Deprecated since v4.7.0  Language ID or ISO 639-1 code
 * @member {String} language
 */
ResetPasswordRequest.prototype['language'] = undefined;

/**
 * &#128679; Deprecated since v4.13.0  User login name
 * @member {String} login
 */
ResetPasswordRequest.prototype['login'] = undefined;

/**
 * &#128640; Since v4.13.0  Username
 * @member {String} userName
 */
ResetPasswordRequest.prototype['userName'] = undefined;






export default ResetPasswordRequest;

