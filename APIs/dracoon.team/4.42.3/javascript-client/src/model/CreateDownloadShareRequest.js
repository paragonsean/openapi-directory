/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileKey from './FileKey';
import ObjectExpiration from './ObjectExpiration';
import UserKeyPairContainer from './UserKeyPairContainer';

/**
 * The CreateDownloadShareRequest model module.
 * @module model/CreateDownloadShareRequest
 * @version 4.42.3
 */
class CreateDownloadShareRequest {
    /**
     * Constructs a new <code>CreateDownloadShareRequest</code>.
     * Request model for creating a Download Share
     * @alias module:model/CreateDownloadShareRequest
     * @param nodeId {Number} Source node ID
     */
    constructor(nodeId) { 
        
        CreateDownloadShareRequest.initialize(this, nodeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nodeId) { 
        obj['nodeId'] = nodeId;
        obj['notifyCreator'] = false;
        obj['sendMail'] = false;
        obj['sendSms'] = false;
        obj['showCreatorName'] = false;
        obj['showCreatorUsername'] = false;
    }

    /**
     * Constructs a <code>CreateDownloadShareRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDownloadShareRequest} obj Optional instance to populate.
     * @return {module:model/CreateDownloadShareRequest} The populated <code>CreateDownloadShareRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDownloadShareRequest();

            if (data.hasOwnProperty('creatorLanguage')) {
                obj['creatorLanguage'] = ApiClient.convertToType(data['creatorLanguage'], 'String');
            }
            if (data.hasOwnProperty('expiration')) {
                obj['expiration'] = ObjectExpiration.constructFromObject(data['expiration']);
            }
            if (data.hasOwnProperty('fileKey')) {
                obj['fileKey'] = FileKey.constructFromObject(data['fileKey']);
            }
            if (data.hasOwnProperty('internalNotes')) {
                obj['internalNotes'] = ApiClient.convertToType(data['internalNotes'], 'String');
            }
            if (data.hasOwnProperty('keyPair')) {
                obj['keyPair'] = UserKeyPairContainer.constructFromObject(data['keyPair']);
            }
            if (data.hasOwnProperty('mailBody')) {
                obj['mailBody'] = ApiClient.convertToType(data['mailBody'], 'String');
            }
            if (data.hasOwnProperty('mailRecipients')) {
                obj['mailRecipients'] = ApiClient.convertToType(data['mailRecipients'], 'String');
            }
            if (data.hasOwnProperty('mailSubject')) {
                obj['mailSubject'] = ApiClient.convertToType(data['mailSubject'], 'String');
            }
            if (data.hasOwnProperty('maxDownloads')) {
                obj['maxDownloads'] = ApiClient.convertToType(data['maxDownloads'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nodeId')) {
                obj['nodeId'] = ApiClient.convertToType(data['nodeId'], 'Number');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('notifyCreator')) {
                obj['notifyCreator'] = ApiClient.convertToType(data['notifyCreator'], 'Boolean');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('receiverLanguage')) {
                obj['receiverLanguage'] = ApiClient.convertToType(data['receiverLanguage'], 'String');
            }
            if (data.hasOwnProperty('sendMail')) {
                obj['sendMail'] = ApiClient.convertToType(data['sendMail'], 'Boolean');
            }
            if (data.hasOwnProperty('sendSms')) {
                obj['sendSms'] = ApiClient.convertToType(data['sendSms'], 'Boolean');
            }
            if (data.hasOwnProperty('showCreatorName')) {
                obj['showCreatorName'] = ApiClient.convertToType(data['showCreatorName'], 'Boolean');
            }
            if (data.hasOwnProperty('showCreatorUsername')) {
                obj['showCreatorUsername'] = ApiClient.convertToType(data['showCreatorUsername'], 'Boolean');
            }
            if (data.hasOwnProperty('smsRecipients')) {
                obj['smsRecipients'] = ApiClient.convertToType(data['smsRecipients'], 'String');
            }
            if (data.hasOwnProperty('textMessageRecipients')) {
                obj['textMessageRecipients'] = ApiClient.convertToType(data['textMessageRecipients'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDownloadShareRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDownloadShareRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDownloadShareRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['creatorLanguage'] && !(typeof data['creatorLanguage'] === 'string' || data['creatorLanguage'] instanceof String)) {
            throw new Error("Expected the field `creatorLanguage` to be a primitive type in the JSON string but got " + data['creatorLanguage']);
        }
        // validate the optional field `expiration`
        if (data['expiration']) { // data not null
          ObjectExpiration.validateJSON(data['expiration']);
        }
        // validate the optional field `fileKey`
        if (data['fileKey']) { // data not null
          FileKey.validateJSON(data['fileKey']);
        }
        // ensure the json data is a string
        if (data['internalNotes'] && !(typeof data['internalNotes'] === 'string' || data['internalNotes'] instanceof String)) {
            throw new Error("Expected the field `internalNotes` to be a primitive type in the JSON string but got " + data['internalNotes']);
        }
        // validate the optional field `keyPair`
        if (data['keyPair']) { // data not null
          UserKeyPairContainer.validateJSON(data['keyPair']);
        }
        // ensure the json data is a string
        if (data['mailBody'] && !(typeof data['mailBody'] === 'string' || data['mailBody'] instanceof String)) {
            throw new Error("Expected the field `mailBody` to be a primitive type in the JSON string but got " + data['mailBody']);
        }
        // ensure the json data is a string
        if (data['mailRecipients'] && !(typeof data['mailRecipients'] === 'string' || data['mailRecipients'] instanceof String)) {
            throw new Error("Expected the field `mailRecipients` to be a primitive type in the JSON string but got " + data['mailRecipients']);
        }
        // ensure the json data is a string
        if (data['mailSubject'] && !(typeof data['mailSubject'] === 'string' || data['mailSubject'] instanceof String)) {
            throw new Error("Expected the field `mailSubject` to be a primitive type in the JSON string but got " + data['mailSubject']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['receiverLanguage'] && !(typeof data['receiverLanguage'] === 'string' || data['receiverLanguage'] instanceof String)) {
            throw new Error("Expected the field `receiverLanguage` to be a primitive type in the JSON string but got " + data['receiverLanguage']);
        }
        // ensure the json data is a string
        if (data['smsRecipients'] && !(typeof data['smsRecipients'] === 'string' || data['smsRecipients'] instanceof String)) {
            throw new Error("Expected the field `smsRecipients` to be a primitive type in the JSON string but got " + data['smsRecipients']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['textMessageRecipients'])) {
            throw new Error("Expected the field `textMessageRecipients` to be an array in the JSON data but got " + data['textMessageRecipients']);
        }

        return true;
    }


}

CreateDownloadShareRequest.RequiredProperties = ["nodeId"];

/**
 * &#128679; Deprecated since v4.20.0  Language tag for messages to creator
 * @member {String} creatorLanguage
 */
CreateDownloadShareRequest.prototype['creatorLanguage'] = undefined;

/**
 * @member {module:model/ObjectExpiration} expiration
 */
CreateDownloadShareRequest.prototype['expiration'] = undefined;

/**
 * @member {module:model/FileKey} fileKey
 */
CreateDownloadShareRequest.prototype['fileKey'] = undefined;

/**
 * &#128640; Since v4.11.0  Internal notes
 * @member {String} internalNotes
 */
CreateDownloadShareRequest.prototype['internalNotes'] = undefined;

/**
 * @member {module:model/UserKeyPairContainer} keyPair
 */
CreateDownloadShareRequest.prototype['keyPair'] = undefined;

/**
 * &#128679; Deprecated since v4.11.0  Notification email content
 * @member {String} mailBody
 */
CreateDownloadShareRequest.prototype['mailBody'] = undefined;

/**
 * &#128679; Deprecated since v4.11.0  CSV string of recipient email addresses
 * @member {String} mailRecipients
 */
CreateDownloadShareRequest.prototype['mailRecipients'] = undefined;

/**
 * &#128679; Deprecated since v4.11.0  Notification email subject
 * @member {String} mailSubject
 */
CreateDownloadShareRequest.prototype['mailSubject'] = undefined;

/**
 * Max allowed downloads
 * @member {Number} maxDownloads
 */
CreateDownloadShareRequest.prototype['maxDownloads'] = undefined;

/**
 * Alias name  (default: name of the shared node)
 * @member {String} name
 */
CreateDownloadShareRequest.prototype['name'] = undefined;

/**
 * Source node ID
 * @member {Number} nodeId
 */
CreateDownloadShareRequest.prototype['nodeId'] = undefined;

/**
 * User notes
 * @member {String} notes
 */
CreateDownloadShareRequest.prototype['notes'] = undefined;

/**
 * &#128679; Deprecated since v4.20.0  Notify creator on every download.
 * @member {Boolean} notifyCreator
 * @default false
 */
CreateDownloadShareRequest.prototype['notifyCreator'] = false;

/**
 * Access password, not allowed for encrypted shares
 * @member {String} password
 */
CreateDownloadShareRequest.prototype['password'] = undefined;

/**
 * Language tag for messages to receiver
 * @member {String} receiverLanguage
 */
CreateDownloadShareRequest.prototype['receiverLanguage'] = undefined;

/**
 * &#128679; Deprecated since v4.11.0  Notify recipients via email  Please use `POST /shares/downloads/{share_id}/email` API instead.
 * @member {Boolean} sendMail
 * @default false
 */
CreateDownloadShareRequest.prototype['sendMail'] = false;

/**
 * &#128679; Deprecated since v4.11.0  Send share password via SMS  Please use `textMessageRecipients` attribute instead.
 * @member {Boolean} sendSms
 * @default false
 */
CreateDownloadShareRequest.prototype['sendSms'] = false;

/**
 * Show creator first and last name.
 * @member {Boolean} showCreatorName
 * @default false
 */
CreateDownloadShareRequest.prototype['showCreatorName'] = false;

/**
 * Show creator email address.
 * @member {Boolean} showCreatorUsername
 * @default false
 */
CreateDownloadShareRequest.prototype['showCreatorUsername'] = false;

/**
 * &#128679; Deprecated since v4.11.0  CSV string of recipient MSISDNs
 * @member {String} smsRecipients
 */
CreateDownloadShareRequest.prototype['smsRecipients'] = undefined;

/**
 * &#128640; Since v4.11.0  List of recipient FQTNs  E.123 / E.164 Format
 * @member {Array.<String>} textMessageRecipients
 */
CreateDownloadShareRequest.prototype['textMessageRecipients'] = undefined;






export default CreateDownloadShareRequest;

