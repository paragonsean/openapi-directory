/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RoomWebhookAssignment model module.
 * @module model/RoomWebhookAssignment
 * @version 4.42.3
 */
class RoomWebhookAssignment {
    /**
     * Constructs a new <code>RoomWebhookAssignment</code>.
     * Request model for handling webhook assignments
     * @alias module:model/RoomWebhookAssignment
     * @param isAssigned {Boolean} Determines whether webhook is assigned to the room.
     * @param webhookId {Number} Webhook ID
     */
    constructor(isAssigned, webhookId) { 
        
        RoomWebhookAssignment.initialize(this, isAssigned, webhookId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isAssigned, webhookId) { 
        obj['isAssigned'] = isAssigned;
        obj['webhookId'] = webhookId;
    }

    /**
     * Constructs a <code>RoomWebhookAssignment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoomWebhookAssignment} obj Optional instance to populate.
     * @return {module:model/RoomWebhookAssignment} The populated <code>RoomWebhookAssignment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoomWebhookAssignment();

            if (data.hasOwnProperty('isAssigned')) {
                obj['isAssigned'] = ApiClient.convertToType(data['isAssigned'], 'Boolean');
            }
            if (data.hasOwnProperty('webhookId')) {
                obj['webhookId'] = ApiClient.convertToType(data['webhookId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoomWebhookAssignment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoomWebhookAssignment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RoomWebhookAssignment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

RoomWebhookAssignment.RequiredProperties = ["isAssigned", "webhookId"];

/**
 * Determines whether webhook is assigned to the room.
 * @member {Boolean} isAssigned
 */
RoomWebhookAssignment.prototype['isAssigned'] = undefined;

/**
 * Webhook ID
 * @member {Number} webhookId
 */
RoomWebhookAssignment.prototype['webhookId'] = undefined;






export default RoomWebhookAssignment;

