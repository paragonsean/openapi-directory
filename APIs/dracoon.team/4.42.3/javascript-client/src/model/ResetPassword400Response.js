/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorResponse from './ErrorResponse';
import PasswordPolicyViolationResponse from './PasswordPolicyViolationResponse';
import ViolatedPasswordPolicy from './ViolatedPasswordPolicy';

/**
 * The ResetPassword400Response model module.
 * @module model/ResetPassword400Response
 * @version 4.42.3
 */
class ResetPassword400Response {
    /**
     * Constructs a new <code>ResetPassword400Response</code>.
     * @alias module:model/ResetPassword400Response
     * @param {(module:model/ErrorResponse|module:model/PasswordPolicyViolationResponse)} instance The actual instance to initialize ResetPassword400Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ErrorResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ErrorResponse.validateJSON(instance); // throw an exception if no match
                // create ErrorResponse from JS object
                this.actualInstance = ErrorResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ErrorResponse
            errorMessages.push("Failed to construct ErrorResponse: " + err)
        }

        try {
            if (typeof instance === "PasswordPolicyViolationResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                PasswordPolicyViolationResponse.validateJSON(instance); // throw an exception if no match
                // create PasswordPolicyViolationResponse from JS object
                this.actualInstance = PasswordPolicyViolationResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into PasswordPolicyViolationResponse
            errorMessages.push("Failed to construct PasswordPolicyViolationResponse: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ResetPassword400Response` with oneOf schemas ErrorResponse, PasswordPolicyViolationResponse. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ResetPassword400Response` with oneOf schemas ErrorResponse, PasswordPolicyViolationResponse. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ResetPassword400Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResetPassword400Response} obj Optional instance to populate.
     * @return {module:model/ResetPassword400Response} The populated <code>ResetPassword400Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ResetPassword400Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>ErrorResponse</code>, <code>PasswordPolicyViolationResponse</code>.
     * @return {(module:model/ErrorResponse|module:model/PasswordPolicyViolationResponse)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ErrorResponse</code>, <code>PasswordPolicyViolationResponse</code>.
     * @param {(module:model/ErrorResponse|module:model/PasswordPolicyViolationResponse)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ResetPassword400Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ResetPassword400Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ResetPassword400Response} An instance of ResetPassword400Response.
     */
    static fromJSON = function(json_string){
        return ResetPassword400Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * HTTP status code
 * @member {Number} code
 */
ResetPassword400Response.prototype['code'] = undefined;

/**
 * Debug information
 * @member {String} debugInfo
 */
ResetPassword400Response.prototype['debugInfo'] = undefined;

/**
 * Internal error code
 * @member {Number} errorCode
 */
ResetPassword400Response.prototype['errorCode'] = undefined;

/**
 * HTTP status code description
 * @member {String} message
 */
ResetPassword400Response.prototype['message'] = undefined;

/**
 * List of violated password policies
 * @member {Array.<module:model/ViolatedPasswordPolicy>} violatedPasswordPolicies
 */
ResetPassword400Response.prototype['violatedPasswordPolicies'] = undefined;


ResetPassword400Response.OneOf = ["ErrorResponse", "PasswordPolicyViolationResponse"];

export default ResetPassword400Response;

