/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RestoreDeletedNodesRequest model module.
 * @module model/RestoreDeletedNodesRequest
 * @version 4.42.3
 */
class RestoreDeletedNodesRequest {
    /**
     * Constructs a new <code>RestoreDeletedNodesRequest</code>.
     * Request model for restoring deleted nodes
     * @alias module:model/RestoreDeletedNodesRequest
     * @param deletedNodeIds {Array.<Number>} List of deleted node IDs
     */
    constructor(deletedNodeIds) { 
        
        RestoreDeletedNodesRequest.initialize(this, deletedNodeIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deletedNodeIds) { 
        obj['deletedNodeIds'] = deletedNodeIds;
        obj['keepShareLinks'] = false;
        obj['resolutionStrategy'] = 'autorename';
    }

    /**
     * Constructs a <code>RestoreDeletedNodesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RestoreDeletedNodesRequest} obj Optional instance to populate.
     * @return {module:model/RestoreDeletedNodesRequest} The populated <code>RestoreDeletedNodesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RestoreDeletedNodesRequest();

            if (data.hasOwnProperty('deletedNodeIds')) {
                obj['deletedNodeIds'] = ApiClient.convertToType(data['deletedNodeIds'], ['Number']);
            }
            if (data.hasOwnProperty('keepShareLinks')) {
                obj['keepShareLinks'] = ApiClient.convertToType(data['keepShareLinks'], 'Boolean');
            }
            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], 'Number');
            }
            if (data.hasOwnProperty('resolutionStrategy')) {
                obj['resolutionStrategy'] = ApiClient.convertToType(data['resolutionStrategy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RestoreDeletedNodesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RestoreDeletedNodesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RestoreDeletedNodesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['deletedNodeIds'])) {
            throw new Error("Expected the field `deletedNodeIds` to be an array in the JSON data but got " + data['deletedNodeIds']);
        }
        // ensure the json data is a string
        if (data['resolutionStrategy'] && !(typeof data['resolutionStrategy'] === 'string' || data['resolutionStrategy'] instanceof String)) {
            throw new Error("Expected the field `resolutionStrategy` to be a primitive type in the JSON string but got " + data['resolutionStrategy']);
        }

        return true;
    }


}

RestoreDeletedNodesRequest.RequiredProperties = ["deletedNodeIds"];

/**
 * List of deleted node IDs
 * @member {Array.<Number>} deletedNodeIds
 */
RestoreDeletedNodesRequest.prototype['deletedNodeIds'] = undefined;

/**
 * Preserve Download Share Links and point them to the new node.
 * @member {Boolean} keepShareLinks
 * @default false
 */
RestoreDeletedNodesRequest.prototype['keepShareLinks'] = false;

/**
 * Node parent ID  (default: previous parent ID)
 * @member {Number} parentId
 */
RestoreDeletedNodesRequest.prototype['parentId'] = undefined;

/**
 * Node conflict resolution strategy:  * `autorename`  * `overwrite`  * `fail`
 * @member {module:model/RestoreDeletedNodesRequest.ResolutionStrategyEnum} resolutionStrategy
 * @default 'autorename'
 */
RestoreDeletedNodesRequest.prototype['resolutionStrategy'] = 'autorename';





/**
 * Allowed values for the <code>resolutionStrategy</code> property.
 * @enum {String}
 * @readonly
 */
RestoreDeletedNodesRequest['ResolutionStrategyEnum'] = {

    /**
     * value: "autorename"
     * @const
     */
    "autorename": "autorename",

    /**
     * value: "overwrite"
     * @const
     */
    "overwrite": "overwrite",

    /**
     * value: "fail"
     * @const
     */
    "fail": "fail"
};



export default RestoreDeletedNodesRequest;

