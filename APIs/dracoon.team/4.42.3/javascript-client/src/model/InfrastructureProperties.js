/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InfrastructureProperties model module.
 * @module model/InfrastructureProperties
 * @version 4.42.3
 */
class InfrastructureProperties {
    /**
     * Constructs a new <code>InfrastructureProperties</code>.
     * Infrastructure properties
     * @alias module:model/InfrastructureProperties
     */
    constructor() { 
        
        InfrastructureProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InfrastructureProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InfrastructureProperties} obj Optional instance to populate.
     * @return {module:model/InfrastructureProperties} The populated <code>InfrastructureProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InfrastructureProperties();

            if (data.hasOwnProperty('isDracoonCloud')) {
                obj['isDracoonCloud'] = ApiClient.convertToType(data['isDracoonCloud'], 'Boolean');
            }
            if (data.hasOwnProperty('mediaServerConfigEnabled')) {
                obj['mediaServerConfigEnabled'] = ApiClient.convertToType(data['mediaServerConfigEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('s3DefaultRegion')) {
                obj['s3DefaultRegion'] = ApiClient.convertToType(data['s3DefaultRegion'], 'String');
            }
            if (data.hasOwnProperty('s3EnforceDirectUpload')) {
                obj['s3EnforceDirectUpload'] = ApiClient.convertToType(data['s3EnforceDirectUpload'], 'Boolean');
            }
            if (data.hasOwnProperty('smsConfigEnabled')) {
                obj['smsConfigEnabled'] = ApiClient.convertToType(data['smsConfigEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('tenantUuid')) {
                obj['tenantUuid'] = ApiClient.convertToType(data['tenantUuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InfrastructureProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InfrastructureProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['s3DefaultRegion'] && !(typeof data['s3DefaultRegion'] === 'string' || data['s3DefaultRegion'] instanceof String)) {
            throw new Error("Expected the field `s3DefaultRegion` to be a primitive type in the JSON string but got " + data['s3DefaultRegion']);
        }
        // ensure the json data is a string
        if (data['tenantUuid'] && !(typeof data['tenantUuid'] === 'string' || data['tenantUuid'] instanceof String)) {
            throw new Error("Expected the field `tenantUuid` to be a primitive type in the JSON string but got " + data['tenantUuid']);
        }

        return true;
    }


}



/**
 * &#128640; Since v4.21.0  Determines if the DRACOON Core is deployed in the cloud environment
 * @member {Boolean} isDracoonCloud
 */
InfrastructureProperties.prototype['isDracoonCloud'] = undefined;

/**
 * Determines if the media server is enabled
 * @member {Boolean} mediaServerConfigEnabled
 */
InfrastructureProperties.prototype['mediaServerConfigEnabled'] = undefined;

/**
 * Suggested S3 Region
 * @member {String} s3DefaultRegion
 */
InfrastructureProperties.prototype['s3DefaultRegion'] = undefined;

/**
 * &#128640; Since v4.15.0  Enforce direct upload to S3
 * @member {Boolean} s3EnforceDirectUpload
 */
InfrastructureProperties.prototype['s3EnforceDirectUpload'] = undefined;

/**
 * Allow sending of share passwords via SMS
 * @member {Boolean} smsConfigEnabled
 */
InfrastructureProperties.prototype['smsConfigEnabled'] = undefined;

/**
 * &#128640; Since v4.21.0  Current tenant UUID
 * @member {String} tenantUuid
 */
InfrastructureProperties.prototype['tenantUuid'] = undefined;






export default InfrastructureProperties;

