/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectExpiration from './ObjectExpiration';

/**
 * The CreateFileUploadRequest model module.
 * @module model/CreateFileUploadRequest
 * @version 4.42.3
 */
class CreateFileUploadRequest {
    /**
     * Constructs a new <code>CreateFileUploadRequest</code>.
     * Request model for creating an upload channel
     * @alias module:model/CreateFileUploadRequest
     * @param name {String} File name
     * @param parentId {Number} Parent node ID (room or folder)
     */
    constructor(name, parentId) { 
        
        CreateFileUploadRequest.initialize(this, name, parentId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, parentId) { 
        obj['directS3Upload'] = false;
        obj['name'] = name;
        obj['parentId'] = parentId;
    }

    /**
     * Constructs a <code>CreateFileUploadRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFileUploadRequest} obj Optional instance to populate.
     * @return {module:model/CreateFileUploadRequest} The populated <code>CreateFileUploadRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFileUploadRequest();

            if (data.hasOwnProperty('classification')) {
                obj['classification'] = ApiClient.convertToType(data['classification'], 'Number');
            }
            if (data.hasOwnProperty('directS3Upload')) {
                obj['directS3Upload'] = ApiClient.convertToType(data['directS3Upload'], 'Boolean');
            }
            if (data.hasOwnProperty('expiration')) {
                obj['expiration'] = ObjectExpiration.constructFromObject(data['expiration']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], 'Number');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('timestampCreation')) {
                obj['timestampCreation'] = ApiClient.convertToType(data['timestampCreation'], 'Date');
            }
            if (data.hasOwnProperty('timestampModification')) {
                obj['timestampModification'] = ApiClient.convertToType(data['timestampModification'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFileUploadRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFileUploadRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateFileUploadRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `expiration`
        if (data['expiration']) { // data not null
          ObjectExpiration.validateJSON(data['expiration']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }

        return true;
    }


}

CreateFileUploadRequest.RequiredProperties = ["name", "parentId"];

/**
 * Classification ID:  * `1` - public  * `2` - internal  * `3` - confidential  * `4` - strictly confidential    (default: classification from parent room)
 * @member {module:model/CreateFileUploadRequest.ClassificationEnum} classification
 */
CreateFileUploadRequest.prototype['classification'] = undefined;

/**
 * &#128640; Since v4.15.0  Upload direct to S3
 * @member {Boolean} directS3Upload
 * @default false
 */
CreateFileUploadRequest.prototype['directS3Upload'] = false;

/**
 * @member {module:model/ObjectExpiration} expiration
 */
CreateFileUploadRequest.prototype['expiration'] = undefined;

/**
 * File name
 * @member {String} name
 */
CreateFileUploadRequest.prototype['name'] = undefined;

/**
 * User notes  Use empty string to remove.
 * @member {String} notes
 */
CreateFileUploadRequest.prototype['notes'] = undefined;

/**
 * Parent node ID (room or folder)
 * @member {Number} parentId
 */
CreateFileUploadRequest.prototype['parentId'] = undefined;

/**
 * File size in byte
 * @member {Number} size
 */
CreateFileUploadRequest.prototype['size'] = undefined;

/**
 * &#128640; Since v4.22.0  Time the node was created on external file system  (default: current server datetime in UTC format)
 * @member {Date} timestampCreation
 */
CreateFileUploadRequest.prototype['timestampCreation'] = undefined;

/**
 * &#128640; Since v4.22.0  Time the content of a node was last modified on external file system  (default: current server datetime in UTC format)
 * @member {Date} timestampModification
 */
CreateFileUploadRequest.prototype['timestampModification'] = undefined;





/**
 * Allowed values for the <code>classification</code> property.
 * @enum {Number}
 * @readonly
 */
CreateFileUploadRequest['ClassificationEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4
};



export default CreateFileUploadRequest;

