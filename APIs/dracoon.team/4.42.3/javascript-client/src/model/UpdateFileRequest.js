/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectExpiration from './ObjectExpiration';

/**
 * The UpdateFileRequest model module.
 * @module model/UpdateFileRequest
 * @version 4.42.3
 */
class UpdateFileRequest {
    /**
     * Constructs a new <code>UpdateFileRequest</code>.
     * Request model for updating file&#39;s metadata
     * @alias module:model/UpdateFileRequest
     */
    constructor() { 
        
        UpdateFileRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateFileRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateFileRequest} obj Optional instance to populate.
     * @return {module:model/UpdateFileRequest} The populated <code>UpdateFileRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateFileRequest();

            if (data.hasOwnProperty('classification')) {
                obj['classification'] = ApiClient.convertToType(data['classification'], 'Number');
            }
            if (data.hasOwnProperty('expiration')) {
                obj['expiration'] = ObjectExpiration.constructFromObject(data['expiration']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('timestampCreation')) {
                obj['timestampCreation'] = ApiClient.convertToType(data['timestampCreation'], 'Date');
            }
            if (data.hasOwnProperty('timestampModification')) {
                obj['timestampModification'] = ApiClient.convertToType(data['timestampModification'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateFileRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateFileRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `expiration`
        if (data['expiration']) { // data not null
          ObjectExpiration.validateJSON(data['expiration']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }

        return true;
    }


}



/**
 * Classification ID:  * `1` - public  * `2` - internal  * `3` - confidential  * `4` - strictly confidential
 * @member {Number} classification
 */
UpdateFileRequest.prototype['classification'] = undefined;

/**
 * @member {module:model/ObjectExpiration} expiration
 */
UpdateFileRequest.prototype['expiration'] = undefined;

/**
 * File name
 * @member {String} name
 */
UpdateFileRequest.prototype['name'] = undefined;

/**
 * User notes  Use empty string to remove.
 * @member {String} notes
 */
UpdateFileRequest.prototype['notes'] = undefined;

/**
 * &#128640; Since v4.22.0  Time the node was created on external file system  (default: current server datetime in UTC format)
 * @member {Date} timestampCreation
 */
UpdateFileRequest.prototype['timestampCreation'] = undefined;

/**
 * &#128640; Since v4.22.0  Time the content of a node was last modified on external file system  (default: current server datetime in UTC format)
 * @member {Date} timestampModification
 */
UpdateFileRequest.prototype['timestampModification'] = undefined;






export default UpdateFileRequest;

