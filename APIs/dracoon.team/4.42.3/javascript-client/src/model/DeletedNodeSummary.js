/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeletedNodeSummary model module.
 * @module model/DeletedNodeSummary
 * @version 4.42.3
 */
class DeletedNodeSummary {
    /**
     * Constructs a new <code>DeletedNodeSummary</code>.
     * Deleted node information (Deleted node can be a folder or file)
     * @alias module:model/DeletedNodeSummary
     * @param cntVersions {Number} Number of deleted versions of this file
     * @param firstDeletedAt {Date} First deleted version
     * @param lastDeletedAt {Date} Last deleted version
     * @param lastDeletedNodeId {Number} Node ID of last deleted version
     * @param name {String} Node name
     * @param parentId {Number} Parent node ID (room or folder)
     * @param parentPath {String} Parent node path  `/` if node is a root node (room)
     * @param type {module:model/DeletedNodeSummary.TypeEnum} Node type
     */
    constructor(cntVersions, firstDeletedAt, lastDeletedAt, lastDeletedNodeId, name, parentId, parentPath, type) { 
        
        DeletedNodeSummary.initialize(this, cntVersions, firstDeletedAt, lastDeletedAt, lastDeletedNodeId, name, parentId, parentPath, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cntVersions, firstDeletedAt, lastDeletedAt, lastDeletedNodeId, name, parentId, parentPath, type) { 
        obj['cntVersions'] = cntVersions;
        obj['firstDeletedAt'] = firstDeletedAt;
        obj['lastDeletedAt'] = lastDeletedAt;
        obj['lastDeletedNodeId'] = lastDeletedNodeId;
        obj['name'] = name;
        obj['parentId'] = parentId;
        obj['parentPath'] = parentPath;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>DeletedNodeSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeletedNodeSummary} obj Optional instance to populate.
     * @return {module:model/DeletedNodeSummary} The populated <code>DeletedNodeSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeletedNodeSummary();

            if (data.hasOwnProperty('cntVersions')) {
                obj['cntVersions'] = ApiClient.convertToType(data['cntVersions'], 'Number');
            }
            if (data.hasOwnProperty('firstDeletedAt')) {
                obj['firstDeletedAt'] = ApiClient.convertToType(data['firstDeletedAt'], 'Date');
            }
            if (data.hasOwnProperty('lastDeletedAt')) {
                obj['lastDeletedAt'] = ApiClient.convertToType(data['lastDeletedAt'], 'Date');
            }
            if (data.hasOwnProperty('lastDeletedNodeId')) {
                obj['lastDeletedNodeId'] = ApiClient.convertToType(data['lastDeletedNodeId'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], 'Number');
            }
            if (data.hasOwnProperty('parentPath')) {
                obj['parentPath'] = ApiClient.convertToType(data['parentPath'], 'String');
            }
            if (data.hasOwnProperty('referenceId')) {
                obj['referenceId'] = ApiClient.convertToType(data['referenceId'], 'Number');
            }
            if (data.hasOwnProperty('timestampCreation')) {
                obj['timestampCreation'] = ApiClient.convertToType(data['timestampCreation'], 'Date');
            }
            if (data.hasOwnProperty('timestampModification')) {
                obj['timestampModification'] = ApiClient.convertToType(data['timestampModification'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeletedNodeSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeletedNodeSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeletedNodeSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['parentPath'] && !(typeof data['parentPath'] === 'string' || data['parentPath'] instanceof String)) {
            throw new Error("Expected the field `parentPath` to be a primitive type in the JSON string but got " + data['parentPath']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

DeletedNodeSummary.RequiredProperties = ["cntVersions", "firstDeletedAt", "lastDeletedAt", "lastDeletedNodeId", "name", "parentId", "parentPath", "type"];

/**
 * Number of deleted versions of this file
 * @member {Number} cntVersions
 */
DeletedNodeSummary.prototype['cntVersions'] = undefined;

/**
 * First deleted version
 * @member {Date} firstDeletedAt
 */
DeletedNodeSummary.prototype['firstDeletedAt'] = undefined;

/**
 * Last deleted version
 * @member {Date} lastDeletedAt
 */
DeletedNodeSummary.prototype['lastDeletedAt'] = undefined;

/**
 * Node ID of last deleted version
 * @member {Number} lastDeletedNodeId
 */
DeletedNodeSummary.prototype['lastDeletedNodeId'] = undefined;

/**
 * Node name
 * @member {String} name
 */
DeletedNodeSummary.prototype['name'] = undefined;

/**
 * Parent node ID (room or folder)
 * @member {Number} parentId
 */
DeletedNodeSummary.prototype['parentId'] = undefined;

/**
 * Parent node path  `/` if node is a root node (room)
 * @member {String} parentPath
 */
DeletedNodeSummary.prototype['parentPath'] = undefined;

/**
 * &#128640; Since v4.37.0  Reference ID. Identical across all versions of a file
 * @member {Number} referenceId
 */
DeletedNodeSummary.prototype['referenceId'] = undefined;

/**
 * &#128640; Since v4.22.0  Time the node was created on external file system
 * @member {Date} timestampCreation
 */
DeletedNodeSummary.prototype['timestampCreation'] = undefined;

/**
 * &#128640; Since v4.22.0  Time the content of a node was last modified on external file system
 * @member {Date} timestampModification
 */
DeletedNodeSummary.prototype['timestampModification'] = undefined;

/**
 * Node type
 * @member {module:model/DeletedNodeSummary.TypeEnum} type
 */
DeletedNodeSummary.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
DeletedNodeSummary['TypeEnum'] = {

    /**
     * value: "folder"
     * @const
     */
    "folder": "folder",

    /**
     * value: "file"
     * @const
     */
    "file": "file"
};



export default DeletedNodeSummary;

