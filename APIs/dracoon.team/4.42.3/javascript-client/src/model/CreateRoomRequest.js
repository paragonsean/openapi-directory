/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateRoomRequest model module.
 * @module model/CreateRoomRequest
 * @version 4.42.3
 */
class CreateRoomRequest {
    /**
     * Constructs a new <code>CreateRoomRequest</code>.
     * Request model for creating a room
     * @alias module:model/CreateRoomRequest
     * @param name {String} Name
     */
    constructor(name) { 
        
        CreateRoomRequest.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['classification'] = ClassificationEnum.2;
        obj['hasActivitiesLog'] = true;
        obj['name'] = name;
        obj['newGroupMemberAcceptance'] = 'autoallow';
    }

    /**
     * Constructs a <code>CreateRoomRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRoomRequest} obj Optional instance to populate.
     * @return {module:model/CreateRoomRequest} The populated <code>CreateRoomRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRoomRequest();

            if (data.hasOwnProperty('adminGroupIds')) {
                obj['adminGroupIds'] = ApiClient.convertToType(data['adminGroupIds'], ['Number']);
            }
            if (data.hasOwnProperty('adminIds')) {
                obj['adminIds'] = ApiClient.convertToType(data['adminIds'], ['Number']);
            }
            if (data.hasOwnProperty('classification')) {
                obj['classification'] = ApiClient.convertToType(data['classification'], 'Number');
            }
            if (data.hasOwnProperty('hasActivitiesLog')) {
                obj['hasActivitiesLog'] = ApiClient.convertToType(data['hasActivitiesLog'], 'Boolean');
            }
            if (data.hasOwnProperty('hasRecycleBin')) {
                obj['hasRecycleBin'] = ApiClient.convertToType(data['hasRecycleBin'], 'Boolean');
            }
            if (data.hasOwnProperty('inheritPermissions')) {
                obj['inheritPermissions'] = ApiClient.convertToType(data['inheritPermissions'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('newGroupMemberAcceptance')) {
                obj['newGroupMemberAcceptance'] = ApiClient.convertToType(data['newGroupMemberAcceptance'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], 'Number');
            }
            if (data.hasOwnProperty('quota')) {
                obj['quota'] = ApiClient.convertToType(data['quota'], 'Number');
            }
            if (data.hasOwnProperty('recycleBinRetentionPeriod')) {
                obj['recycleBinRetentionPeriod'] = ApiClient.convertToType(data['recycleBinRetentionPeriod'], 'Number');
            }
            if (data.hasOwnProperty('timestampCreation')) {
                obj['timestampCreation'] = ApiClient.convertToType(data['timestampCreation'], 'Date');
            }
            if (data.hasOwnProperty('timestampModification')) {
                obj['timestampModification'] = ApiClient.convertToType(data['timestampModification'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRoomRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRoomRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRoomRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['adminGroupIds'])) {
            throw new Error("Expected the field `adminGroupIds` to be an array in the JSON data but got " + data['adminGroupIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['adminIds'])) {
            throw new Error("Expected the field `adminIds` to be an array in the JSON data but got " + data['adminIds']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['newGroupMemberAcceptance'] && !(typeof data['newGroupMemberAcceptance'] === 'string' || data['newGroupMemberAcceptance'] instanceof String)) {
            throw new Error("Expected the field `newGroupMemberAcceptance` to be a primitive type in the JSON string but got " + data['newGroupMemberAcceptance']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }

        return true;
    }


}

CreateRoomRequest.RequiredProperties = ["name"];

/**
 * List of group ids  A room requires at least one admin (user or group)
 * @member {Array.<Number>} adminGroupIds
 */
CreateRoomRequest.prototype['adminGroupIds'] = undefined;

/**
 * List of user ids  A room requires at least one admin (user or group)
 * @member {Array.<Number>} adminIds
 */
CreateRoomRequest.prototype['adminIds'] = undefined;

/**
 * Classification ID:  * `1` - public  * `2` - internal  * `3` - confidential  * `4` - strictly confidential    Provided (or default) classification is taken from room  when file gets uploaded without any classification.
 * @member {module:model/CreateRoomRequest.ClassificationEnum} classification
 * @default ClassificationEnum.2
 */
CreateRoomRequest.prototype['classification'] = ClassificationEnum.2;

/**
 * Is activities log active (for rooms only)
 * @member {Boolean} hasActivitiesLog
 * @default true
 */
CreateRoomRequest.prototype['hasActivitiesLog'] = true;

/**
 * &#128679; Deprecated since v4.10.0  Is recycle bin active (for rooms only)  Recycle bin is always on (disabling is not possible).
 * @member {Boolean} hasRecycleBin
 */
CreateRoomRequest.prototype['hasRecycleBin'] = undefined;

/**
 * Inherit permissions from parent room  (default: `false` if `parentId` is `0`; otherwise: `true`)
 * @member {Boolean} inheritPermissions
 */
CreateRoomRequest.prototype['inheritPermissions'] = undefined;

/**
 * Name
 * @member {String} name
 */
CreateRoomRequest.prototype['name'] = undefined;

/**
 * Behaviour when new users are added to the group:  * `autoallow`  * `pending`    Only relevant if `adminGroupIds` has items.
 * @member {module:model/CreateRoomRequest.NewGroupMemberAcceptanceEnum} newGroupMemberAcceptance
 * @default 'autoallow'
 */
CreateRoomRequest.prototype['newGroupMemberAcceptance'] = 'autoallow';

/**
 * User notes  Use empty string to remove.
 * @member {String} notes
 */
CreateRoomRequest.prototype['notes'] = undefined;

/**
 * Parent room ID or `null` (not 0) to create a top level room
 * @member {Number} parentId
 */
CreateRoomRequest.prototype['parentId'] = undefined;

/**
 * Quota in byte
 * @member {Number} quota
 */
CreateRoomRequest.prototype['quota'] = undefined;

/**
 * Retention period for deleted nodes in days
 * @member {Number} recycleBinRetentionPeriod
 */
CreateRoomRequest.prototype['recycleBinRetentionPeriod'] = undefined;

/**
 * &#128640; Since v4.22.0  Time the node was created on external file system  (default: current server datetime in UTC format)
 * @member {Date} timestampCreation
 */
CreateRoomRequest.prototype['timestampCreation'] = undefined;

/**
 * &#128640; Since v4.22.0  Time the content of a node was last modified on external file system  (default: current server datetime in UTC format)
 * @member {Date} timestampModification
 */
CreateRoomRequest.prototype['timestampModification'] = undefined;





/**
 * Allowed values for the <code>classification</code> property.
 * @enum {Number}
 * @readonly
 */
CreateRoomRequest['ClassificationEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4
};


/**
 * Allowed values for the <code>newGroupMemberAcceptance</code> property.
 * @enum {String}
 * @readonly
 */
CreateRoomRequest['NewGroupMemberAcceptanceEnum'] = {

    /**
     * value: "autoallow"
     * @const
     */
    "autoallow": "autoallow",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending"
};



export default CreateRoomRequest;

