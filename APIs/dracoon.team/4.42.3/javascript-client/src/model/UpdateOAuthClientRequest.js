/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateOAuthClientRequest model module.
 * @module model/UpdateOAuthClientRequest
 * @version 4.42.3
 */
class UpdateOAuthClientRequest {
    /**
     * Constructs a new <code>UpdateOAuthClientRequest</code>.
     * Request model for updating an OAuth client
     * @alias module:model/UpdateOAuthClientRequest
     * @param grantTypes {Array.<module:model/UpdateOAuthClientRequest.GrantTypesEnum>} Authorized grant types  * `authorization_code`  * `implicit`  * `password`  * `client_credentials`  * `refresh_token`    cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
     */
    constructor(grantTypes) { 
        
        UpdateOAuthClientRequest.initialize(this, grantTypes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, grantTypes) { 
        obj['grantTypes'] = grantTypes;
    }

    /**
     * Constructs a <code>UpdateOAuthClientRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateOAuthClientRequest} obj Optional instance to populate.
     * @return {module:model/UpdateOAuthClientRequest} The populated <code>UpdateOAuthClientRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateOAuthClientRequest();

            if (data.hasOwnProperty('accessTokenValidity')) {
                obj['accessTokenValidity'] = ApiClient.convertToType(data['accessTokenValidity'], 'Number');
            }
            if (data.hasOwnProperty('approvalValidity')) {
                obj['approvalValidity'] = ApiClient.convertToType(data['approvalValidity'], 'Number');
            }
            if (data.hasOwnProperty('clientName')) {
                obj['clientName'] = ApiClient.convertToType(data['clientName'], 'String');
            }
            if (data.hasOwnProperty('clientSecret')) {
                obj['clientSecret'] = ApiClient.convertToType(data['clientSecret'], 'String');
            }
            if (data.hasOwnProperty('clientType')) {
                obj['clientType'] = ApiClient.convertToType(data['clientType'], 'String');
            }
            if (data.hasOwnProperty('grantTypes')) {
                obj['grantTypes'] = ApiClient.convertToType(data['grantTypes'], ['String']);
            }
            if (data.hasOwnProperty('isEnabled')) {
                obj['isEnabled'] = ApiClient.convertToType(data['isEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('redirectUris')) {
                obj['redirectUris'] = ApiClient.convertToType(data['redirectUris'], ['String']);
            }
            if (data.hasOwnProperty('refreshTokenValidity')) {
                obj['refreshTokenValidity'] = ApiClient.convertToType(data['refreshTokenValidity'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateOAuthClientRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateOAuthClientRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateOAuthClientRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clientName'] && !(typeof data['clientName'] === 'string' || data['clientName'] instanceof String)) {
            throw new Error("Expected the field `clientName` to be a primitive type in the JSON string but got " + data['clientName']);
        }
        // ensure the json data is a string
        if (data['clientSecret'] && !(typeof data['clientSecret'] === 'string' || data['clientSecret'] instanceof String)) {
            throw new Error("Expected the field `clientSecret` to be a primitive type in the JSON string but got " + data['clientSecret']);
        }
        // ensure the json data is a string
        if (data['clientType'] && !(typeof data['clientType'] === 'string' || data['clientType'] instanceof String)) {
            throw new Error("Expected the field `clientType` to be a primitive type in the JSON string but got " + data['clientType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['grantTypes'])) {
            throw new Error("Expected the field `grantTypes` to be an array in the JSON data but got " + data['grantTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['redirectUris'])) {
            throw new Error("Expected the field `redirectUris` to be an array in the JSON data but got " + data['redirectUris']);
        }

        return true;
    }


}

UpdateOAuthClientRequest.RequiredProperties = ["grantTypes"];

/**
 * Validity of the access token in seconds.
 * @member {Number} accessTokenValidity
 */
UpdateOAuthClientRequest.prototype['accessTokenValidity'] = undefined;

/**
 * &#128640; Since v4.22.0  Validity of the approval interval in seconds.
 * @member {Number} approvalValidity
 */
UpdateOAuthClientRequest.prototype['approvalValidity'] = undefined;

/**
 * Name, which is shown at the client configuration and authorization.
 * @member {String} clientName
 */
UpdateOAuthClientRequest.prototype['clientName'] = undefined;

/**
 * Secret, which client uses at authentication.
 * @member {String} clientSecret
 */
UpdateOAuthClientRequest.prototype['clientSecret'] = undefined;

/**
 * Determines whether client is a confidential or public client.
 * @member {module:model/UpdateOAuthClientRequest.ClientTypeEnum} clientType
 */
UpdateOAuthClientRequest.prototype['clientType'] = undefined;

/**
 * Authorized grant types  * `authorization_code`  * `implicit`  * `password`  * `client_credentials`  * `refresh_token`    cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
 * @member {Array.<module:model/UpdateOAuthClientRequest.GrantTypesEnum>} grantTypes
 */
UpdateOAuthClientRequest.prototype['grantTypes'] = undefined;

/**
 * Determines whether client is enabled.
 * @member {Boolean} isEnabled
 */
UpdateOAuthClientRequest.prototype['isEnabled'] = undefined;

/**
 * URIs, to which a user is redirected after authorization.
 * @member {Array.<String>} redirectUris
 */
UpdateOAuthClientRequest.prototype['redirectUris'] = undefined;

/**
 * Validity of the refresh token in seconds.
 * @member {Number} refreshTokenValidity
 */
UpdateOAuthClientRequest.prototype['refreshTokenValidity'] = undefined;





/**
 * Allowed values for the <code>clientType</code> property.
 * @enum {String}
 * @readonly
 */
UpdateOAuthClientRequest['ClientTypeEnum'] = {

    /**
     * value: "confidential"
     * @const
     */
    "confidential": "confidential",

    /**
     * value: "public"
     * @const
     */
    "public": "public"
};


/**
 * Allowed values for the <code>grantTypes</code> property.
 * @enum {String}
 * @readonly
 */
UpdateOAuthClientRequest['GrantTypesEnum'] = {

    /**
     * value: "authorization_code"
     * @const
     */
    "authorization_code": "authorization_code",

    /**
     * value: "client_credentials"
     * @const
     */
    "client_credentials": "client_credentials",

    /**
     * value: "implicit"
     * @const
     */
    "implicit": "implicit",

    /**
     * value: "password"
     * @const
     */
    "password": "password",

    /**
     * value: "refresh_token"
     * @const
     */
    "refresh_token": "refresh_token"
};



export default UpdateOAuthClientRequest;

