/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileKey model module.
 * @module model/FileKey
 * @version 4.42.3
 */
class FileKey {
    /**
     * Constructs a new <code>FileKey</code>.
     * File key information
     * @alias module:model/FileKey
     * @param iv {String} Initial vector
     * @param key {String} Encryption key
     * @param tag {String} Authentication tag  (needed with authenticated encryption)
     * @param version {String} Version
     */
    constructor(iv, key, tag, version) { 
        
        FileKey.initialize(this, iv, key, tag, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, iv, key, tag, version) { 
        obj['iv'] = iv;
        obj['key'] = key;
        obj['tag'] = tag;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>FileKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileKey} obj Optional instance to populate.
     * @return {module:model/FileKey} The populated <code>FileKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileKey();

            if (data.hasOwnProperty('iv')) {
                obj['iv'] = ApiClient.convertToType(data['iv'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileKey</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FileKey.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['iv'] && !(typeof data['iv'] === 'string' || data['iv'] instanceof String)) {
            throw new Error("Expected the field `iv` to be a primitive type in the JSON string but got " + data['iv']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

FileKey.RequiredProperties = ["iv", "key", "tag", "version"];

/**
 * Initial vector
 * @member {String} iv
 */
FileKey.prototype['iv'] = undefined;

/**
 * Encryption key
 * @member {String} key
 */
FileKey.prototype['key'] = undefined;

/**
 * Authentication tag  (needed with authenticated encryption)
 * @member {String} tag
 */
FileKey.prototype['tag'] = undefined;

/**
 * Version
 * @member {String} version
 */
FileKey.prototype['version'] = undefined;






export default FileKey;

