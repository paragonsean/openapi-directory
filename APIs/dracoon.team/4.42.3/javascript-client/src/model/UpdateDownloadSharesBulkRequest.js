/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjectExpiration from './ObjectExpiration';

/**
 * The UpdateDownloadSharesBulkRequest model module.
 * @module model/UpdateDownloadSharesBulkRequest
 * @version 4.42.3
 */
class UpdateDownloadSharesBulkRequest {
    /**
     * Constructs a new <code>UpdateDownloadSharesBulkRequest</code>.
     * Request model for updating a list of Download Shares
     * @alias module:model/UpdateDownloadSharesBulkRequest
     * @param objectIds {Array.<Number>} List of ids
     */
    constructor(objectIds) { 
        
        UpdateDownloadSharesBulkRequest.initialize(this, objectIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, objectIds) { 
        obj['objectIds'] = objectIds;
    }

    /**
     * Constructs a <code>UpdateDownloadSharesBulkRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateDownloadSharesBulkRequest} obj Optional instance to populate.
     * @return {module:model/UpdateDownloadSharesBulkRequest} The populated <code>UpdateDownloadSharesBulkRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDownloadSharesBulkRequest();

            if (data.hasOwnProperty('expiration')) {
                obj['expiration'] = ObjectExpiration.constructFromObject(data['expiration']);
            }
            if (data.hasOwnProperty('maxDownloads')) {
                obj['maxDownloads'] = ApiClient.convertToType(data['maxDownloads'], 'Number');
            }
            if (data.hasOwnProperty('objectIds')) {
                obj['objectIds'] = ApiClient.convertToType(data['objectIds'], ['Number']);
            }
            if (data.hasOwnProperty('resetMaxDownloads')) {
                obj['resetMaxDownloads'] = ApiClient.convertToType(data['resetMaxDownloads'], 'Boolean');
            }
            if (data.hasOwnProperty('showCreatorName')) {
                obj['showCreatorName'] = ApiClient.convertToType(data['showCreatorName'], 'Boolean');
            }
            if (data.hasOwnProperty('showCreatorUsername')) {
                obj['showCreatorUsername'] = ApiClient.convertToType(data['showCreatorUsername'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDownloadSharesBulkRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDownloadSharesBulkRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateDownloadSharesBulkRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `expiration`
        if (data['expiration']) { // data not null
          ObjectExpiration.validateJSON(data['expiration']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['objectIds'])) {
            throw new Error("Expected the field `objectIds` to be an array in the JSON data but got " + data['objectIds']);
        }

        return true;
    }


}

UpdateDownloadSharesBulkRequest.RequiredProperties = ["objectIds"];

/**
 * @member {module:model/ObjectExpiration} expiration
 */
UpdateDownloadSharesBulkRequest.prototype['expiration'] = undefined;

/**
 * Max allowed downloads
 * @member {Number} maxDownloads
 */
UpdateDownloadSharesBulkRequest.prototype['maxDownloads'] = undefined;

/**
 * List of ids
 * @member {Array.<Number>} objectIds
 */
UpdateDownloadSharesBulkRequest.prototype['objectIds'] = undefined;

/**
 * Set 'true' to reset 'maxDownloads' for Download Share.
 * @member {Boolean} resetMaxDownloads
 */
UpdateDownloadSharesBulkRequest.prototype['resetMaxDownloads'] = undefined;

/**
 * Show creator first and last name.
 * @member {Boolean} showCreatorName
 */
UpdateDownloadSharesBulkRequest.prototype['showCreatorName'] = undefined;

/**
 * Show creator email address.
 * @member {Boolean} showCreatorUsername
 */
UpdateDownloadSharesBulkRequest.prototype['showCreatorUsername'] = undefined;






export default UpdateDownloadSharesBulkRequest;

