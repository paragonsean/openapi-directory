/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DracoonApi);
  }
}(this, function(expect, DracoonApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DracoonApi.Customer();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Customer', function() {
    it('should create an instance of Customer', function() {
      // uncomment below and update the code to test Customer
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be.a(DracoonApi.Customer);
    });

    it('should have the property activationCode (base name: "activationCode")', function() {
      // uncomment below and update the code to test the property activationCode
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property cntGuestUser (base name: "cntGuestUser")', function() {
      // uncomment below and update the code to test the property cntGuestUser
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property cntInternalUser (base name: "cntInternalUser")', function() {
      // uncomment below and update the code to test the property cntInternalUser
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property customerAttributes (base name: "customerAttributes")', function() {
      // uncomment below and update the code to test the property customerAttributes
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property customerContractType (base name: "customerContractType")', function() {
      // uncomment below and update the code to test the property customerContractType
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property customerUuid (base name: "customerUuid")', function() {
      // uncomment below and update the code to test the property customerUuid
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property isLocked (base name: "isLocked")', function() {
      // uncomment below and update the code to test the property isLocked
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property lastLoginAt (base name: "lastLoginAt")', function() {
      // uncomment below and update the code to test the property lastLoginAt
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property lockStatus (base name: "lockStatus")', function() {
      // uncomment below and update the code to test the property lockStatus
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property providerCustomerId (base name: "providerCustomerId")', function() {
      // uncomment below and update the code to test the property providerCustomerId
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property quotaMax (base name: "quotaMax")', function() {
      // uncomment below and update the code to test the property quotaMax
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property quotaUsed (base name: "quotaUsed")', function() {
      // uncomment below and update the code to test the property quotaUsed
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property trialDaysLeft (base name: "trialDaysLeft")', function() {
      // uncomment below and update the code to test the property trialDaysLeft
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property userMax (base name: "userMax")', function() {
      // uncomment below and update the code to test the property userMax
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property userUsed (base name: "userUsed")', function() {
      // uncomment below and update the code to test the property userUsed
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

    it('should have the property webhooksMax (base name: "webhooksMax")', function() {
      // uncomment below and update the code to test the property webhooksMax
      //var instance = new DracoonApi.Customer();
      //expect(instance).to.be();
    });

  });

}));
