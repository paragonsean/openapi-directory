/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DracoonApi);
  }
}(this, function(expect, DracoonApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DracoonApi.SharesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SharesApi', function() {
    describe('createDownloadShare', function() {
      it('should call createDownloadShare successfully', function(done) {
        //uncomment below and update the code to test createDownloadShare
        //instance.createDownloadShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUploadShare', function() {
      it('should call createUploadShare successfully', function(done) {
        //uncomment below and update the code to test createUploadShare
        //instance.createUploadShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDownloadShares', function() {
      it('should call deleteDownloadShares successfully', function(done) {
        //uncomment below and update the code to test deleteDownloadShares
        //instance.deleteDownloadShares(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUploadShares', function() {
      it('should call deleteUploadShares successfully', function(done) {
        //uncomment below and update the code to test deleteUploadShares
        //instance.deleteUploadShares(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeDownloadShare', function() {
      it('should call removeDownloadShare successfully', function(done) {
        //uncomment below and update the code to test removeDownloadShare
        //instance.removeDownloadShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeUploadShare', function() {
      it('should call removeUploadShare successfully', function(done) {
        //uncomment below and update the code to test removeUploadShare
        //instance.removeUploadShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestDownloadShare', function() {
      it('should call requestDownloadShare successfully', function(done) {
        //uncomment below and update the code to test requestDownloadShare
        //instance.requestDownloadShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestDownloadShareQr', function() {
      it('should call requestDownloadShareQr successfully', function(done) {
        //uncomment below and update the code to test requestDownloadShareQr
        //instance.requestDownloadShareQr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestDownloadShares', function() {
      it('should call requestDownloadShares successfully', function(done) {
        //uncomment below and update the code to test requestDownloadShares
        //instance.requestDownloadShares(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestUploadShare', function() {
      it('should call requestUploadShare successfully', function(done) {
        //uncomment below and update the code to test requestUploadShare
        //instance.requestUploadShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestUploadShareQr', function() {
      it('should call requestUploadShareQr successfully', function(done) {
        //uncomment below and update the code to test requestUploadShareQr
        //instance.requestUploadShareQr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestUploadShares', function() {
      it('should call requestUploadShares successfully', function(done) {
        //uncomment below and update the code to test requestUploadShares
        //instance.requestUploadShares(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendDownloadShareLinkViaEmail', function() {
      it('should call sendDownloadShareLinkViaEmail successfully', function(done) {
        //uncomment below and update the code to test sendDownloadShareLinkViaEmail
        //instance.sendDownloadShareLinkViaEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendUploadShareLinkViaEmail', function() {
      it('should call sendUploadShareLinkViaEmail successfully', function(done) {
        //uncomment below and update the code to test sendUploadShareLinkViaEmail
        //instance.sendUploadShareLinkViaEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDownloadShare', function() {
      it('should call updateDownloadShare successfully', function(done) {
        //uncomment below and update the code to test updateDownloadShare
        //instance.updateDownloadShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDownloadShares', function() {
      it('should call updateDownloadShares successfully', function(done) {
        //uncomment below and update the code to test updateDownloadShares
        //instance.updateDownloadShares(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUploadShare', function() {
      it('should call updateUploadShare successfully', function(done) {
        //uncomment below and update the code to test updateUploadShare
        //instance.updateUploadShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUploadShares', function() {
      it('should call updateUploadShares successfully', function(done) {
        //uncomment below and update the code to test updateUploadShares
        //instance.updateUploadShares(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
