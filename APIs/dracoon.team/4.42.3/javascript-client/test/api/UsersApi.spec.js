/**
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * The version of the OpenAPI document: 4.42.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DracoonApi);
  }
}(this, function(expect, DracoonApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DracoonApi.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('createUser', function() {
      it('should call createUser successfully', function(done) {
        //uncomment below and update the code to test createUser
        //instance.createUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeUser', function() {
      it('should call removeUser successfully', function(done) {
        //uncomment below and update the code to test removeUser
        //instance.removeUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeUserAttribute', function() {
      it('should call removeUserAttribute successfully', function(done) {
        //uncomment below and update the code to test removeUserAttribute
        //instance.removeUserAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestEmergencyMfaCode', function() {
      it('should call requestEmergencyMfaCode successfully', function(done) {
        //uncomment below and update the code to test requestEmergencyMfaCode
        //instance.requestEmergencyMfaCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestLastAdminRoomsUsers', function() {
      it('should call requestLastAdminRoomsUsers successfully', function(done) {
        //uncomment below and update the code to test requestLastAdminRoomsUsers
        //instance.requestLastAdminRoomsUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestUser', function() {
      it('should call requestUser successfully', function(done) {
        //uncomment below and update the code to test requestUser
        //instance.requestUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestUserAttributes', function() {
      it('should call requestUserAttributes successfully', function(done) {
        //uncomment below and update the code to test requestUserAttributes
        //instance.requestUserAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestUserGroups', function() {
      it('should call requestUserGroups successfully', function(done) {
        //uncomment below and update the code to test requestUserGroups
        //instance.requestUserGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestUserRoles', function() {
      it('should call requestUserRoles successfully', function(done) {
        //uncomment below and update the code to test requestUserRoles
        //instance.requestUserRoles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestUsers', function() {
      it('should call requestUsers successfully', function(done) {
        //uncomment below and update the code to test requestUsers
        //instance.requestUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestUsersRooms', function() {
      it('should call requestUsersRooms successfully', function(done) {
        //uncomment below and update the code to test requestUsersRooms
        //instance.requestUsersRooms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setUserAttributes', function() {
      it('should call setUserAttributes successfully', function(done) {
        //uncomment below and update the code to test setUserAttributes
        //instance.setUserAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUser', function() {
      it('should call updateUser successfully', function(done) {
        //uncomment below and update the code to test updateUser
        //instance.updateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserAttributes', function() {
      it('should call updateUserAttributes successfully', function(done) {
        //uncomment below and update the code to test updateUserAttributes
        //instance.updateUserAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
