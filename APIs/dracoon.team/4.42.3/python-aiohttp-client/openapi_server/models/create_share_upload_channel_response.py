# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateShareUploadChannelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upload_id: str=None, upload_url: str=None):
        """CreateShareUploadChannelResponse - a model defined in OpenAPI

        :param upload_id: The upload_id of this CreateShareUploadChannelResponse.
        :param upload_url: The upload_url of this CreateShareUploadChannelResponse.
        """
        self.openapi_types = {
            'upload_id': str,
            'upload_url': str
        }

        self.attribute_map = {
            'upload_id': 'uploadId',
            'upload_url': 'uploadUrl'
        }

        self._upload_id = upload_id
        self._upload_url = upload_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateShareUploadChannelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateShareUploadChannelResponse of this CreateShareUploadChannelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upload_id(self):
        """Gets the upload_id of this CreateShareUploadChannelResponse.

        Upload (channel) ID

        :return: The upload_id of this CreateShareUploadChannelResponse.
        :rtype: str
        """
        return self._upload_id

    @upload_id.setter
    def upload_id(self, upload_id):
        """Sets the upload_id of this CreateShareUploadChannelResponse.

        Upload (channel) ID

        :param upload_id: The upload_id of this CreateShareUploadChannelResponse.
        :type upload_id: str
        """
        if upload_id is None:
            raise ValueError("Invalid value for `upload_id`, must not be `None`")

        self._upload_id = upload_id

    @property
    def upload_url(self):
        """Gets the upload_url of this CreateShareUploadChannelResponse.

        (public) Upload URL

        :return: The upload_url of this CreateShareUploadChannelResponse.
        :rtype: str
        """
        return self._upload_url

    @upload_url.setter
    def upload_url(self, upload_url):
        """Sets the upload_url of this CreateShareUploadChannelResponse.

        (public) Upload URL

        :param upload_url: The upload_url of this CreateShareUploadChannelResponse.
        :type upload_url: str
        """
        if upload_url is None:
            raise ValueError("Invalid value for `upload_url`, must not be `None`")

        self._upload_url = upload_url
