# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrivateKeyContainer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, created_by: int=None, private_key: str=None, version: str=None):
        """PrivateKeyContainer - a model defined in OpenAPI

        :param created_at: The created_at of this PrivateKeyContainer.
        :param created_by: The created_by of this PrivateKeyContainer.
        :param private_key: The private_key of this PrivateKeyContainer.
        :param version: The version of this PrivateKeyContainer.
        """
        self.openapi_types = {
            'created_at': datetime,
            'created_by': int,
            'private_key': str,
            'version': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'created_by': 'createdBy',
            'private_key': 'privateKey',
            'version': 'version'
        }

        self._created_at = created_at
        self._created_by = created_by
        self._private_key = private_key
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateKeyContainer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateKeyContainer of this PrivateKeyContainer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this PrivateKeyContainer.

        &#128640; Since v4.24.0  Creation date

        :return: The created_at of this PrivateKeyContainer.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PrivateKeyContainer.

        &#128640; Since v4.24.0  Creation date

        :param created_at: The created_at of this PrivateKeyContainer.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this PrivateKeyContainer.

        &#128640; Since v4.24.0  Created by user

        :return: The created_by of this PrivateKeyContainer.
        :rtype: int
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this PrivateKeyContainer.

        &#128640; Since v4.24.0  Created by user

        :param created_by: The created_by of this PrivateKeyContainer.
        :type created_by: int
        """

        self._created_by = created_by

    @property
    def private_key(self):
        """Gets the private_key of this PrivateKeyContainer.

        Private key

        :return: The private_key of this PrivateKeyContainer.
        :rtype: str
        """
        return self._private_key

    @private_key.setter
    def private_key(self, private_key):
        """Sets the private_key of this PrivateKeyContainer.

        Private key

        :param private_key: The private_key of this PrivateKeyContainer.
        :type private_key: str
        """
        if private_key is None:
            raise ValueError("Invalid value for `private_key`, must not be `None`")

        self._private_key = private_key

    @property
    def version(self):
        """Gets the version of this PrivateKeyContainer.

        Version

        :return: The version of this PrivateKeyContainer.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PrivateKeyContainer.

        Version

        :param version: The version of this PrivateKeyContainer.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version
