# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.algorithm_version_info import AlgorithmVersionInfo
from openapi_server import util


class AlgorithmVersionInfoList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_key_algorithms: List[AlgorithmVersionInfo]=None, key_pair_algorithms: List[AlgorithmVersionInfo]=None):
        """AlgorithmVersionInfoList - a model defined in OpenAPI

        :param file_key_algorithms: The file_key_algorithms of this AlgorithmVersionInfoList.
        :param key_pair_algorithms: The key_pair_algorithms of this AlgorithmVersionInfoList.
        """
        self.openapi_types = {
            'file_key_algorithms': List[AlgorithmVersionInfo],
            'key_pair_algorithms': List[AlgorithmVersionInfo]
        }

        self.attribute_map = {
            'file_key_algorithms': 'fileKeyAlgorithms',
            'key_pair_algorithms': 'keyPairAlgorithms'
        }

        self._file_key_algorithms = file_key_algorithms
        self._key_pair_algorithms = key_pair_algorithms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlgorithmVersionInfoList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlgorithmVersionInfoList of this AlgorithmVersionInfoList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_key_algorithms(self):
        """Gets the file_key_algorithms of this AlgorithmVersionInfoList.

        List of file key algorithms

        :return: The file_key_algorithms of this AlgorithmVersionInfoList.
        :rtype: List[AlgorithmVersionInfo]
        """
        return self._file_key_algorithms

    @file_key_algorithms.setter
    def file_key_algorithms(self, file_key_algorithms):
        """Sets the file_key_algorithms of this AlgorithmVersionInfoList.

        List of file key algorithms

        :param file_key_algorithms: The file_key_algorithms of this AlgorithmVersionInfoList.
        :type file_key_algorithms: List[AlgorithmVersionInfo]
        """
        if file_key_algorithms is None:
            raise ValueError("Invalid value for `file_key_algorithms`, must not be `None`")

        self._file_key_algorithms = file_key_algorithms

    @property
    def key_pair_algorithms(self):
        """Gets the key_pair_algorithms of this AlgorithmVersionInfoList.

        List of key pair algorithms

        :return: The key_pair_algorithms of this AlgorithmVersionInfoList.
        :rtype: List[AlgorithmVersionInfo]
        """
        return self._key_pair_algorithms

    @key_pair_algorithms.setter
    def key_pair_algorithms(self, key_pair_algorithms):
        """Sets the key_pair_algorithms of this AlgorithmVersionInfoList.

        List of key pair algorithms

        :param key_pair_algorithms: The key_pair_algorithms of this AlgorithmVersionInfoList.
        :type key_pair_algorithms: List[AlgorithmVersionInfo]
        """
        if key_pair_algorithms is None:
            raise ValueError("Invalid value for `key_pair_algorithms`, must not be `None`")

        self._key_pair_algorithms = key_pair_algorithms
