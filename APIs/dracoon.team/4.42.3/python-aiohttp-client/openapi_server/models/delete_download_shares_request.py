# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteDownloadSharesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, share_ids: List[int]=None):
        """DeleteDownloadSharesRequest - a model defined in OpenAPI

        :param share_ids: The share_ids of this DeleteDownloadSharesRequest.
        """
        self.openapi_types = {
            'share_ids': List[int]
        }

        self.attribute_map = {
            'share_ids': 'shareIds'
        }

        self._share_ids = share_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteDownloadSharesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteDownloadSharesRequest of this DeleteDownloadSharesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def share_ids(self):
        """Gets the share_ids of this DeleteDownloadSharesRequest.

        List of share IDs

        :return: The share_ids of this DeleteDownloadSharesRequest.
        :rtype: List[int]
        """
        return self._share_ids

    @share_ids.setter
    def share_ids(self, share_ids):
        """Sets the share_ids of this DeleteDownloadSharesRequest.

        List of share IDs

        :param share_ids: The share_ids of this DeleteDownloadSharesRequest.
        :type share_ids: List[int]
        """
        if share_ids is None:
            raise ValueError("Invalid value for `share_ids`, must not be `None`")

        self._share_ids = share_ids
