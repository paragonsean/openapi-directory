# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UploadShareLinkEmail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, receiver_language: str=None, recipients: List[str]=None):
        """UploadShareLinkEmail - a model defined in OpenAPI

        :param body: The body of this UploadShareLinkEmail.
        :param receiver_language: The receiver_language of this UploadShareLinkEmail.
        :param recipients: The recipients of this UploadShareLinkEmail.
        """
        self.openapi_types = {
            'body': str,
            'receiver_language': str,
            'recipients': List[str]
        }

        self.attribute_map = {
            'body': 'body',
            'receiver_language': 'receiverLanguage',
            'recipients': 'recipients'
        }

        self._body = body
        self._receiver_language = receiver_language
        self._recipients = recipients

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadShareLinkEmail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UploadShareLinkEmail of this UploadShareLinkEmail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this UploadShareLinkEmail.

        Notification email content

        :return: The body of this UploadShareLinkEmail.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this UploadShareLinkEmail.

        Notification email content

        :param body: The body of this UploadShareLinkEmail.
        :type body: str
        """
        if body is None:
            raise ValueError("Invalid value for `body`, must not be `None`")

        self._body = body

    @property
    def receiver_language(self):
        """Gets the receiver_language of this UploadShareLinkEmail.

        Language tag for messages to receiver

        :return: The receiver_language of this UploadShareLinkEmail.
        :rtype: str
        """
        return self._receiver_language

    @receiver_language.setter
    def receiver_language(self, receiver_language):
        """Sets the receiver_language of this UploadShareLinkEmail.

        Language tag for messages to receiver

        :param receiver_language: The receiver_language of this UploadShareLinkEmail.
        :type receiver_language: str
        """

        self._receiver_language = receiver_language

    @property
    def recipients(self):
        """Gets the recipients of this UploadShareLinkEmail.

        List of recipient email addresses

        :return: The recipients of this UploadShareLinkEmail.
        :rtype: List[str]
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients):
        """Sets the recipients of this UploadShareLinkEmail.

        List of recipient email addresses

        :param recipients: The recipients of this UploadShareLinkEmail.
        :type recipients: List[str]
        """
        if recipients is None:
            raise ValueError("Invalid value for `recipients`, must not be `None`")

        self._recipients = recipients
