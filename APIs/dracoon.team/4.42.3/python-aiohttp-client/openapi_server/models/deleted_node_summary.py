# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeletedNodeSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cnt_versions: int=None, first_deleted_at: datetime=None, last_deleted_at: datetime=None, last_deleted_node_id: int=None, name: str=None, parent_id: int=None, parent_path: str=None, reference_id: int=None, timestamp_creation: datetime=None, timestamp_modification: datetime=None, type: str=None):
        """DeletedNodeSummary - a model defined in OpenAPI

        :param cnt_versions: The cnt_versions of this DeletedNodeSummary.
        :param first_deleted_at: The first_deleted_at of this DeletedNodeSummary.
        :param last_deleted_at: The last_deleted_at of this DeletedNodeSummary.
        :param last_deleted_node_id: The last_deleted_node_id of this DeletedNodeSummary.
        :param name: The name of this DeletedNodeSummary.
        :param parent_id: The parent_id of this DeletedNodeSummary.
        :param parent_path: The parent_path of this DeletedNodeSummary.
        :param reference_id: The reference_id of this DeletedNodeSummary.
        :param timestamp_creation: The timestamp_creation of this DeletedNodeSummary.
        :param timestamp_modification: The timestamp_modification of this DeletedNodeSummary.
        :param type: The type of this DeletedNodeSummary.
        """
        self.openapi_types = {
            'cnt_versions': int,
            'first_deleted_at': datetime,
            'last_deleted_at': datetime,
            'last_deleted_node_id': int,
            'name': str,
            'parent_id': int,
            'parent_path': str,
            'reference_id': int,
            'timestamp_creation': datetime,
            'timestamp_modification': datetime,
            'type': str
        }

        self.attribute_map = {
            'cnt_versions': 'cntVersions',
            'first_deleted_at': 'firstDeletedAt',
            'last_deleted_at': 'lastDeletedAt',
            'last_deleted_node_id': 'lastDeletedNodeId',
            'name': 'name',
            'parent_id': 'parentId',
            'parent_path': 'parentPath',
            'reference_id': 'referenceId',
            'timestamp_creation': 'timestampCreation',
            'timestamp_modification': 'timestampModification',
            'type': 'type'
        }

        self._cnt_versions = cnt_versions
        self._first_deleted_at = first_deleted_at
        self._last_deleted_at = last_deleted_at
        self._last_deleted_node_id = last_deleted_node_id
        self._name = name
        self._parent_id = parent_id
        self._parent_path = parent_path
        self._reference_id = reference_id
        self._timestamp_creation = timestamp_creation
        self._timestamp_modification = timestamp_modification
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeletedNodeSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeletedNodeSummary of this DeletedNodeSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cnt_versions(self):
        """Gets the cnt_versions of this DeletedNodeSummary.

        Number of deleted versions of this file

        :return: The cnt_versions of this DeletedNodeSummary.
        :rtype: int
        """
        return self._cnt_versions

    @cnt_versions.setter
    def cnt_versions(self, cnt_versions):
        """Sets the cnt_versions of this DeletedNodeSummary.

        Number of deleted versions of this file

        :param cnt_versions: The cnt_versions of this DeletedNodeSummary.
        :type cnt_versions: int
        """
        if cnt_versions is None:
            raise ValueError("Invalid value for `cnt_versions`, must not be `None`")

        self._cnt_versions = cnt_versions

    @property
    def first_deleted_at(self):
        """Gets the first_deleted_at of this DeletedNodeSummary.

        First deleted version

        :return: The first_deleted_at of this DeletedNodeSummary.
        :rtype: datetime
        """
        return self._first_deleted_at

    @first_deleted_at.setter
    def first_deleted_at(self, first_deleted_at):
        """Sets the first_deleted_at of this DeletedNodeSummary.

        First deleted version

        :param first_deleted_at: The first_deleted_at of this DeletedNodeSummary.
        :type first_deleted_at: datetime
        """
        if first_deleted_at is None:
            raise ValueError("Invalid value for `first_deleted_at`, must not be `None`")

        self._first_deleted_at = first_deleted_at

    @property
    def last_deleted_at(self):
        """Gets the last_deleted_at of this DeletedNodeSummary.

        Last deleted version

        :return: The last_deleted_at of this DeletedNodeSummary.
        :rtype: datetime
        """
        return self._last_deleted_at

    @last_deleted_at.setter
    def last_deleted_at(self, last_deleted_at):
        """Sets the last_deleted_at of this DeletedNodeSummary.

        Last deleted version

        :param last_deleted_at: The last_deleted_at of this DeletedNodeSummary.
        :type last_deleted_at: datetime
        """
        if last_deleted_at is None:
            raise ValueError("Invalid value for `last_deleted_at`, must not be `None`")

        self._last_deleted_at = last_deleted_at

    @property
    def last_deleted_node_id(self):
        """Gets the last_deleted_node_id of this DeletedNodeSummary.

        Node ID of last deleted version

        :return: The last_deleted_node_id of this DeletedNodeSummary.
        :rtype: int
        """
        return self._last_deleted_node_id

    @last_deleted_node_id.setter
    def last_deleted_node_id(self, last_deleted_node_id):
        """Sets the last_deleted_node_id of this DeletedNodeSummary.

        Node ID of last deleted version

        :param last_deleted_node_id: The last_deleted_node_id of this DeletedNodeSummary.
        :type last_deleted_node_id: int
        """
        if last_deleted_node_id is None:
            raise ValueError("Invalid value for `last_deleted_node_id`, must not be `None`")

        self._last_deleted_node_id = last_deleted_node_id

    @property
    def name(self):
        """Gets the name of this DeletedNodeSummary.

        Node name

        :return: The name of this DeletedNodeSummary.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeletedNodeSummary.

        Node name

        :param name: The name of this DeletedNodeSummary.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def parent_id(self):
        """Gets the parent_id of this DeletedNodeSummary.

        Parent node ID (room or folder)

        :return: The parent_id of this DeletedNodeSummary.
        :rtype: int
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this DeletedNodeSummary.

        Parent node ID (room or folder)

        :param parent_id: The parent_id of this DeletedNodeSummary.
        :type parent_id: int
        """
        if parent_id is None:
            raise ValueError("Invalid value for `parent_id`, must not be `None`")

        self._parent_id = parent_id

    @property
    def parent_path(self):
        """Gets the parent_path of this DeletedNodeSummary.

        Parent node path  `/` if node is a root node (room)

        :return: The parent_path of this DeletedNodeSummary.
        :rtype: str
        """
        return self._parent_path

    @parent_path.setter
    def parent_path(self, parent_path):
        """Sets the parent_path of this DeletedNodeSummary.

        Parent node path  `/` if node is a root node (room)

        :param parent_path: The parent_path of this DeletedNodeSummary.
        :type parent_path: str
        """
        if parent_path is None:
            raise ValueError("Invalid value for `parent_path`, must not be `None`")

        self._parent_path = parent_path

    @property
    def reference_id(self):
        """Gets the reference_id of this DeletedNodeSummary.

        &#128640; Since v4.37.0  Reference ID. Identical across all versions of a file

        :return: The reference_id of this DeletedNodeSummary.
        :rtype: int
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this DeletedNodeSummary.

        &#128640; Since v4.37.0  Reference ID. Identical across all versions of a file

        :param reference_id: The reference_id of this DeletedNodeSummary.
        :type reference_id: int
        """

        self._reference_id = reference_id

    @property
    def timestamp_creation(self):
        """Gets the timestamp_creation of this DeletedNodeSummary.

        &#128640; Since v4.22.0  Time the node was created on external file system

        :return: The timestamp_creation of this DeletedNodeSummary.
        :rtype: datetime
        """
        return self._timestamp_creation

    @timestamp_creation.setter
    def timestamp_creation(self, timestamp_creation):
        """Sets the timestamp_creation of this DeletedNodeSummary.

        &#128640; Since v4.22.0  Time the node was created on external file system

        :param timestamp_creation: The timestamp_creation of this DeletedNodeSummary.
        :type timestamp_creation: datetime
        """

        self._timestamp_creation = timestamp_creation

    @property
    def timestamp_modification(self):
        """Gets the timestamp_modification of this DeletedNodeSummary.

        &#128640; Since v4.22.0  Time the content of a node was last modified on external file system

        :return: The timestamp_modification of this DeletedNodeSummary.
        :rtype: datetime
        """
        return self._timestamp_modification

    @timestamp_modification.setter
    def timestamp_modification(self, timestamp_modification):
        """Sets the timestamp_modification of this DeletedNodeSummary.

        &#128640; Since v4.22.0  Time the content of a node was last modified on external file system

        :param timestamp_modification: The timestamp_modification of this DeletedNodeSummary.
        :type timestamp_modification: datetime
        """

        self._timestamp_modification = timestamp_modification

    @property
    def type(self):
        """Gets the type of this DeletedNodeSummary.

        Node type

        :return: The type of this DeletedNodeSummary.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DeletedNodeSummary.

        Node type

        :param type: The type of this DeletedNodeSummary.
        :type type: str
        """
        allowed_values = ["folder", "file"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
