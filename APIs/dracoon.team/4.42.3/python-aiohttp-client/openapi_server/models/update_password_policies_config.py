# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_encryption_password_policies import UpdateEncryptionPasswordPolicies
from openapi_server.models.update_login_password_policies import UpdateLoginPasswordPolicies
from openapi_server.models.update_shares_password_policies import UpdateSharesPasswordPolicies
from openapi_server import util


class UpdatePasswordPoliciesConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_password_policies: UpdateEncryptionPasswordPolicies=None, login_password_policies: UpdateLoginPasswordPolicies=None, shares_password_policies: UpdateSharesPasswordPolicies=None):
        """UpdatePasswordPoliciesConfig - a model defined in OpenAPI

        :param encryption_password_policies: The encryption_password_policies of this UpdatePasswordPoliciesConfig.
        :param login_password_policies: The login_password_policies of this UpdatePasswordPoliciesConfig.
        :param shares_password_policies: The shares_password_policies of this UpdatePasswordPoliciesConfig.
        """
        self.openapi_types = {
            'encryption_password_policies': UpdateEncryptionPasswordPolicies,
            'login_password_policies': UpdateLoginPasswordPolicies,
            'shares_password_policies': UpdateSharesPasswordPolicies
        }

        self.attribute_map = {
            'encryption_password_policies': 'encryptionPasswordPolicies',
            'login_password_policies': 'loginPasswordPolicies',
            'shares_password_policies': 'sharesPasswordPolicies'
        }

        self._encryption_password_policies = encryption_password_policies
        self._login_password_policies = login_password_policies
        self._shares_password_policies = shares_password_policies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePasswordPoliciesConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePasswordPoliciesConfig of this UpdatePasswordPoliciesConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_password_policies(self):
        """Gets the encryption_password_policies of this UpdatePasswordPoliciesConfig.


        :return: The encryption_password_policies of this UpdatePasswordPoliciesConfig.
        :rtype: UpdateEncryptionPasswordPolicies
        """
        return self._encryption_password_policies

    @encryption_password_policies.setter
    def encryption_password_policies(self, encryption_password_policies):
        """Sets the encryption_password_policies of this UpdatePasswordPoliciesConfig.


        :param encryption_password_policies: The encryption_password_policies of this UpdatePasswordPoliciesConfig.
        :type encryption_password_policies: UpdateEncryptionPasswordPolicies
        """

        self._encryption_password_policies = encryption_password_policies

    @property
    def login_password_policies(self):
        """Gets the login_password_policies of this UpdatePasswordPoliciesConfig.


        :return: The login_password_policies of this UpdatePasswordPoliciesConfig.
        :rtype: UpdateLoginPasswordPolicies
        """
        return self._login_password_policies

    @login_password_policies.setter
    def login_password_policies(self, login_password_policies):
        """Sets the login_password_policies of this UpdatePasswordPoliciesConfig.


        :param login_password_policies: The login_password_policies of this UpdatePasswordPoliciesConfig.
        :type login_password_policies: UpdateLoginPasswordPolicies
        """

        self._login_password_policies = login_password_policies

    @property
    def shares_password_policies(self):
        """Gets the shares_password_policies of this UpdatePasswordPoliciesConfig.


        :return: The shares_password_policies of this UpdatePasswordPoliciesConfig.
        :rtype: UpdateSharesPasswordPolicies
        """
        return self._shares_password_policies

    @shares_password_policies.setter
    def shares_password_policies(self, shares_password_policies):
        """Sets the shares_password_policies of this UpdatePasswordPoliciesConfig.


        :param shares_password_policies: The shares_password_policies of this UpdatePasswordPoliciesConfig.
        :type shares_password_policies: UpdateSharesPasswordPolicies
        """

        self._shares_password_policies = shares_password_policies
