# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CopyNode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str=None, timestamp_creation: datetime=None, timestamp_modification: datetime=None):
        """CopyNode - a model defined in OpenAPI

        :param id: The id of this CopyNode.
        :param name: The name of this CopyNode.
        :param timestamp_creation: The timestamp_creation of this CopyNode.
        :param timestamp_modification: The timestamp_modification of this CopyNode.
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'timestamp_creation': datetime,
            'timestamp_modification': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'timestamp_creation': 'timestampCreation',
            'timestamp_modification': 'timestampModification'
        }

        self._id = id
        self._name = name
        self._timestamp_creation = timestamp_creation
        self._timestamp_modification = timestamp_modification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyNode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyNode of this CopyNode.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this CopyNode.

        Source node ID

        :return: The id of this CopyNode.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CopyNode.

        Source node ID

        :param id: The id of this CopyNode.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def name(self):
        """Gets the name of this CopyNode.

        New node name

        :return: The name of this CopyNode.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CopyNode.

        New node name

        :param name: The name of this CopyNode.
        :type name: str
        """

        self._name = name

    @property
    def timestamp_creation(self):
        """Gets the timestamp_creation of this CopyNode.

        &#128640; Since v4.22.0  Time the node was created on external file system  (default: current server datetime in UTC format)

        :return: The timestamp_creation of this CopyNode.
        :rtype: datetime
        """
        return self._timestamp_creation

    @timestamp_creation.setter
    def timestamp_creation(self, timestamp_creation):
        """Sets the timestamp_creation of this CopyNode.

        &#128640; Since v4.22.0  Time the node was created on external file system  (default: current server datetime in UTC format)

        :param timestamp_creation: The timestamp_creation of this CopyNode.
        :type timestamp_creation: datetime
        """

        self._timestamp_creation = timestamp_creation

    @property
    def timestamp_modification(self):
        """Gets the timestamp_modification of this CopyNode.

        &#128640; Since v4.22.0  Time the content of a node was last modified on external file system  (default: current server datetime in UTC format)

        :return: The timestamp_modification of this CopyNode.
        :rtype: datetime
        """
        return self._timestamp_modification

    @timestamp_modification.setter
    def timestamp_modification(self, timestamp_modification):
        """Sets the timestamp_modification of this CopyNode.

        &#128640; Since v4.22.0  Time the content of a node was last modified on external file system  (default: current server datetime in UTC format)

        :param timestamp_modification: The timestamp_modification of this CopyNode.
        :type timestamp_modification: datetime
        """

        self._timestamp_modification = timestamp_modification
