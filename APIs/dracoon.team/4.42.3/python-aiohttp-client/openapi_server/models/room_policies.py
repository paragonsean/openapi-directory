# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RoomPolicies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_expiration_period: int=None):
        """RoomPolicies - a model defined in OpenAPI

        :param default_expiration_period: The default_expiration_period of this RoomPolicies.
        """
        self.openapi_types = {
            'default_expiration_period': int
        }

        self.attribute_map = {
            'default_expiration_period': 'defaultExpirationPeriod'
        }

        self._default_expiration_period = default_expiration_period

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoomPolicies':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoomPolicies of this RoomPolicies.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_expiration_period(self):
        """Gets the default_expiration_period of this RoomPolicies.

        Default policy room expiration period in seconds.  All files in a room will have their expiration date set to this period after their respective upload.   0 means no default expiration policy is set.

        :return: The default_expiration_period of this RoomPolicies.
        :rtype: int
        """
        return self._default_expiration_period

    @default_expiration_period.setter
    def default_expiration_period(self, default_expiration_period):
        """Sets the default_expiration_period of this RoomPolicies.

        Default policy room expiration period in seconds.  All files in a room will have their expiration date set to this period after their respective upload.   0 means no default expiration policy is set.

        :param default_expiration_period: The default_expiration_period of this RoomPolicies.
        :type default_expiration_period: int
        """
        if default_expiration_period is None:
            raise ValueError("Invalid value for `default_expiration_period`, must not be `None`")

        self._default_expiration_period = default_expiration_period
