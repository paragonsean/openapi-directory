# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateUserAccountRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accept_eula: bool=None, email: str=None, first_name: str=None, gender: str='n', language: str=None, last_name: str=None, login: str=None, phone: str=None, title: str=None, user_name: str=None):
        """UpdateUserAccountRequest - a model defined in OpenAPI

        :param accept_eula: The accept_eula of this UpdateUserAccountRequest.
        :param email: The email of this UpdateUserAccountRequest.
        :param first_name: The first_name of this UpdateUserAccountRequest.
        :param gender: The gender of this UpdateUserAccountRequest.
        :param language: The language of this UpdateUserAccountRequest.
        :param last_name: The last_name of this UpdateUserAccountRequest.
        :param login: The login of this UpdateUserAccountRequest.
        :param phone: The phone of this UpdateUserAccountRequest.
        :param title: The title of this UpdateUserAccountRequest.
        :param user_name: The user_name of this UpdateUserAccountRequest.
        """
        self.openapi_types = {
            'accept_eula': bool,
            'email': str,
            'first_name': str,
            'gender': str,
            'language': str,
            'last_name': str,
            'login': str,
            'phone': str,
            'title': str,
            'user_name': str
        }

        self.attribute_map = {
            'accept_eula': 'acceptEULA',
            'email': 'email',
            'first_name': 'firstName',
            'gender': 'gender',
            'language': 'language',
            'last_name': 'lastName',
            'login': 'login',
            'phone': 'phone',
            'title': 'title',
            'user_name': 'userName'
        }

        self._accept_eula = accept_eula
        self._email = email
        self._first_name = first_name
        self._gender = gender
        self._language = language
        self._last_name = last_name
        self._login = login
        self._phone = phone
        self._title = title
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateUserAccountRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateUserAccountRequest of this UpdateUserAccountRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accept_eula(self):
        """Gets the accept_eula of this UpdateUserAccountRequest.

        Accept EULA  Present, if EULA is system global active.  cf. `GET system/config/settings/general` - `eulaEnabled`  If accepted can not be undone.

        :return: The accept_eula of this UpdateUserAccountRequest.
        :rtype: bool
        """
        return self._accept_eula

    @accept_eula.setter
    def accept_eula(self, accept_eula):
        """Sets the accept_eula of this UpdateUserAccountRequest.

        Accept EULA  Present, if EULA is system global active.  cf. `GET system/config/settings/general` - `eulaEnabled`  If accepted can not be undone.

        :param accept_eula: The accept_eula of this UpdateUserAccountRequest.
        :type accept_eula: bool
        """

        self._accept_eula = accept_eula

    @property
    def email(self):
        """Gets the email of this UpdateUserAccountRequest.

        Email 

        :return: The email of this UpdateUserAccountRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UpdateUserAccountRequest.

        Email 

        :param email: The email of this UpdateUserAccountRequest.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this UpdateUserAccountRequest.

        User first name

        :return: The first_name of this UpdateUserAccountRequest.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this UpdateUserAccountRequest.

        User first name

        :param first_name: The first_name of this UpdateUserAccountRequest.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def gender(self):
        """Gets the gender of this UpdateUserAccountRequest.

        &#128679; Deprecated since v4.12.0  Gender  Do NOT use `gender`! It will be ignored.

        :return: The gender of this UpdateUserAccountRequest.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this UpdateUserAccountRequest.

        &#128679; Deprecated since v4.12.0  Gender  Do NOT use `gender`! It will be ignored.

        :param gender: The gender of this UpdateUserAccountRequest.
        :type gender: str
        """

        self._gender = gender

    @property
    def language(self):
        """Gets the language of this UpdateUserAccountRequest.

        &#128640; Since v4.20.0  IETF language tag

        :return: The language of this UpdateUserAccountRequest.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this UpdateUserAccountRequest.

        &#128640; Since v4.20.0  IETF language tag

        :param language: The language of this UpdateUserAccountRequest.
        :type language: str
        """

        self._language = language

    @property
    def last_name(self):
        """Gets the last_name of this UpdateUserAccountRequest.

        User last name

        :return: The last_name of this UpdateUserAccountRequest.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this UpdateUserAccountRequest.

        User last name

        :param last_name: The last_name of this UpdateUserAccountRequest.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def login(self):
        """Gets the login of this UpdateUserAccountRequest.

        &#128679; Deprecated since v4.13.0  User login name

        :return: The login of this UpdateUserAccountRequest.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """Sets the login of this UpdateUserAccountRequest.

        &#128679; Deprecated since v4.13.0  User login name

        :param login: The login of this UpdateUserAccountRequest.
        :type login: str
        """

        self._login = login

    @property
    def phone(self):
        """Gets the phone of this UpdateUserAccountRequest.

        Phone number

        :return: The phone of this UpdateUserAccountRequest.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this UpdateUserAccountRequest.

        Phone number

        :param phone: The phone of this UpdateUserAccountRequest.
        :type phone: str
        """

        self._phone = phone

    @property
    def title(self):
        """Gets the title of this UpdateUserAccountRequest.

        &#128679; Deprecated since v4.18.0  Job title

        :return: The title of this UpdateUserAccountRequest.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this UpdateUserAccountRequest.

        &#128679; Deprecated since v4.18.0  Job title

        :param title: The title of this UpdateUserAccountRequest.
        :type title: str
        """

        self._title = title

    @property
    def user_name(self):
        """Gets the user_name of this UpdateUserAccountRequest.

        &#128640; Since v4.13.0  Username

        :return: The user_name of this UpdateUserAccountRequest.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this UpdateUserAccountRequest.

        &#128640; Since v4.13.0  Username

        :param user_name: The user_name of this UpdateUserAccountRequest.
        :type user_name: str
        """

        self._user_name = user_name
