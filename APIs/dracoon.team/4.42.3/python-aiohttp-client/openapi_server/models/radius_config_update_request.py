# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.failover_server import FailoverServer
from openapi_server import util


class RadiusConfigUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failover_server: FailoverServer=None, ip_address: str=None, otp_pin_first: bool=True, port: int=None, shared_secret: str=None):
        """RadiusConfigUpdateRequest - a model defined in OpenAPI

        :param failover_server: The failover_server of this RadiusConfigUpdateRequest.
        :param ip_address: The ip_address of this RadiusConfigUpdateRequest.
        :param otp_pin_first: The otp_pin_first of this RadiusConfigUpdateRequest.
        :param port: The port of this RadiusConfigUpdateRequest.
        :param shared_secret: The shared_secret of this RadiusConfigUpdateRequest.
        """
        self.openapi_types = {
            'failover_server': FailoverServer,
            'ip_address': str,
            'otp_pin_first': bool,
            'port': int,
            'shared_secret': str
        }

        self.attribute_map = {
            'failover_server': 'failoverServer',
            'ip_address': 'ipAddress',
            'otp_pin_first': 'otpPinFirst',
            'port': 'port',
            'shared_secret': 'sharedSecret'
        }

        self._failover_server = failover_server
        self._ip_address = ip_address
        self._otp_pin_first = otp_pin_first
        self._port = port
        self._shared_secret = shared_secret

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RadiusConfigUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RadiusConfigUpdateRequest of this RadiusConfigUpdateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failover_server(self):
        """Gets the failover_server of this RadiusConfigUpdateRequest.


        :return: The failover_server of this RadiusConfigUpdateRequest.
        :rtype: FailoverServer
        """
        return self._failover_server

    @failover_server.setter
    def failover_server(self, failover_server):
        """Sets the failover_server of this RadiusConfigUpdateRequest.


        :param failover_server: The failover_server of this RadiusConfigUpdateRequest.
        :type failover_server: FailoverServer
        """

        self._failover_server = failover_server

    @property
    def ip_address(self):
        """Gets the ip_address of this RadiusConfigUpdateRequest.

        RADIUS Server IP Address

        :return: The ip_address of this RadiusConfigUpdateRequest.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this RadiusConfigUpdateRequest.

        RADIUS Server IP Address

        :param ip_address: The ip_address of this RadiusConfigUpdateRequest.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def otp_pin_first(self):
        """Gets the otp_pin_first of this RadiusConfigUpdateRequest.

        Sequence order of concatenated PIN and one-time token

        :return: The otp_pin_first of this RadiusConfigUpdateRequest.
        :rtype: bool
        """
        return self._otp_pin_first

    @otp_pin_first.setter
    def otp_pin_first(self, otp_pin_first):
        """Sets the otp_pin_first of this RadiusConfigUpdateRequest.

        Sequence order of concatenated PIN and one-time token

        :param otp_pin_first: The otp_pin_first of this RadiusConfigUpdateRequest.
        :type otp_pin_first: bool
        """

        self._otp_pin_first = otp_pin_first

    @property
    def port(self):
        """Gets the port of this RadiusConfigUpdateRequest.

        RADIUS Server Port

        :return: The port of this RadiusConfigUpdateRequest.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this RadiusConfigUpdateRequest.

        RADIUS Server Port

        :param port: The port of this RadiusConfigUpdateRequest.
        :type port: int
        """

        self._port = port

    @property
    def shared_secret(self):
        """Gets the shared_secret of this RadiusConfigUpdateRequest.

        Shared Secret to access the RADIUS server

        :return: The shared_secret of this RadiusConfigUpdateRequest.
        :rtype: str
        """
        return self._shared_secret

    @shared_secret.setter
    def shared_secret(self, shared_secret):
        """Sets the shared_secret of this RadiusConfigUpdateRequest.

        Shared Secret to access the RADIUS server

        :param shared_secret: The shared_secret of this RadiusConfigUpdateRequest.
        :type shared_secret: str
        """

        self._shared_secret = shared_secret
