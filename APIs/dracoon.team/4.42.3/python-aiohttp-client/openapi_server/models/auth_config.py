# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auth_method import AuthMethod
from openapi_server import util


class AuthConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_methods: List[AuthMethod]=None):
        """AuthConfig - a model defined in OpenAPI

        :param auth_methods: The auth_methods of this AuthConfig.
        """
        self.openapi_types = {
            'auth_methods': List[AuthMethod]
        }

        self.attribute_map = {
            'auth_methods': 'authMethods'
        }

        self._auth_methods = auth_methods

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthConfig of this AuthConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_methods(self):
        """Gets the auth_methods of this AuthConfig.

        List of authentication methods

        :return: The auth_methods of this AuthConfig.
        :rtype: List[AuthMethod]
        """
        return self._auth_methods

    @auth_methods.setter
    def auth_methods(self, auth_methods):
        """Sets the auth_methods of this AuthConfig.

        List of authentication methods

        :param auth_methods: The auth_methods of this AuthConfig.
        :type auth_methods: List[AuthMethod]
        """
        if auth_methods is None:
            raise ValueError("Invalid value for `auth_methods`, must not be `None`")

        self._auth_methods = auth_methods
