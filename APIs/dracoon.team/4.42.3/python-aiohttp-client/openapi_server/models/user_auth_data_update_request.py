# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserAuthDataUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_config_id: int=None, login: str=None, method: str=None, oid_config_id: int=None):
        """UserAuthDataUpdateRequest - a model defined in OpenAPI

        :param ad_config_id: The ad_config_id of this UserAuthDataUpdateRequest.
        :param login: The login of this UserAuthDataUpdateRequest.
        :param method: The method of this UserAuthDataUpdateRequest.
        :param oid_config_id: The oid_config_id of this UserAuthDataUpdateRequest.
        """
        self.openapi_types = {
            'ad_config_id': int,
            'login': str,
            'method': str,
            'oid_config_id': int
        }

        self.attribute_map = {
            'ad_config_id': 'adConfigId',
            'login': 'login',
            'method': 'method',
            'oid_config_id': 'oidConfigId'
        }

        self._ad_config_id = ad_config_id
        self._login = login
        self._method = method
        self._oid_config_id = oid_config_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserAuthDataUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserAuthDataUpdateRequest of this UserAuthDataUpdateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_config_id(self):
        """Gets the ad_config_id of this UserAuthDataUpdateRequest.

        ID of the user's Active Directory.

        :return: The ad_config_id of this UserAuthDataUpdateRequest.
        :rtype: int
        """
        return self._ad_config_id

    @ad_config_id.setter
    def ad_config_id(self, ad_config_id):
        """Sets the ad_config_id of this UserAuthDataUpdateRequest.

        ID of the user's Active Directory.

        :param ad_config_id: The ad_config_id of this UserAuthDataUpdateRequest.
        :type ad_config_id: int
        """

        self._ad_config_id = ad_config_id

    @property
    def login(self):
        """Gets the login of this UserAuthDataUpdateRequest.

        User login name

        :return: The login of this UserAuthDataUpdateRequest.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """Sets the login of this UserAuthDataUpdateRequest.

        User login name

        :param login: The login of this UserAuthDataUpdateRequest.
        :type login: str
        """

        self._login = login

    @property
    def method(self):
        """Gets the method of this UserAuthDataUpdateRequest.

        Authentication method    Authentication methods:  * `basic`  * `active_directory`  * `radius`  * `openid`

        :return: The method of this UserAuthDataUpdateRequest.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this UserAuthDataUpdateRequest.

        Authentication method    Authentication methods:  * `basic`  * `active_directory`  * `radius`  * `openid`

        :param method: The method of this UserAuthDataUpdateRequest.
        :type method: str
        """

        self._method = method

    @property
    def oid_config_id(self):
        """Gets the oid_config_id of this UserAuthDataUpdateRequest.

        ID of the user's OIDC provider.

        :return: The oid_config_id of this UserAuthDataUpdateRequest.
        :rtype: int
        """
        return self._oid_config_id

    @oid_config_id.setter
    def oid_config_id(self, oid_config_id):
        """Sets the oid_config_id of this UserAuthDataUpdateRequest.

        ID of the user's OIDC provider.

        :param oid_config_id: The oid_config_id of this UserAuthDataUpdateRequest.
        :type oid_config_id: int
        """

        self._oid_config_id = oid_config_id
