# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateShareUploadChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, direct_s3_upload: bool=False, name: str=None, password: str=None, size: int=None, timestamp_creation: datetime=None, timestamp_modification: datetime=None):
        """CreateShareUploadChannelRequest - a model defined in OpenAPI

        :param direct_s3_upload: The direct_s3_upload of this CreateShareUploadChannelRequest.
        :param name: The name of this CreateShareUploadChannelRequest.
        :param password: The password of this CreateShareUploadChannelRequest.
        :param size: The size of this CreateShareUploadChannelRequest.
        :param timestamp_creation: The timestamp_creation of this CreateShareUploadChannelRequest.
        :param timestamp_modification: The timestamp_modification of this CreateShareUploadChannelRequest.
        """
        self.openapi_types = {
            'direct_s3_upload': bool,
            'name': str,
            'password': str,
            'size': int,
            'timestamp_creation': datetime,
            'timestamp_modification': datetime
        }

        self.attribute_map = {
            'direct_s3_upload': 'directS3Upload',
            'name': 'name',
            'password': 'password',
            'size': 'size',
            'timestamp_creation': 'timestampCreation',
            'timestamp_modification': 'timestampModification'
        }

        self._direct_s3_upload = direct_s3_upload
        self._name = name
        self._password = password
        self._size = size
        self._timestamp_creation = timestamp_creation
        self._timestamp_modification = timestamp_modification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateShareUploadChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateShareUploadChannelRequest of this CreateShareUploadChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def direct_s3_upload(self):
        """Gets the direct_s3_upload of this CreateShareUploadChannelRequest.

        &#128640; Since v4.15.0  Upload direct to S3

        :return: The direct_s3_upload of this CreateShareUploadChannelRequest.
        :rtype: bool
        """
        return self._direct_s3_upload

    @direct_s3_upload.setter
    def direct_s3_upload(self, direct_s3_upload):
        """Sets the direct_s3_upload of this CreateShareUploadChannelRequest.

        &#128640; Since v4.15.0  Upload direct to S3

        :param direct_s3_upload: The direct_s3_upload of this CreateShareUploadChannelRequest.
        :type direct_s3_upload: bool
        """

        self._direct_s3_upload = direct_s3_upload

    @property
    def name(self):
        """Gets the name of this CreateShareUploadChannelRequest.

        File name

        :return: The name of this CreateShareUploadChannelRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateShareUploadChannelRequest.

        File name

        :param name: The name of this CreateShareUploadChannelRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def password(self):
        """Gets the password of this CreateShareUploadChannelRequest.

        Password

        :return: The password of this CreateShareUploadChannelRequest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this CreateShareUploadChannelRequest.

        Password

        :param password: The password of this CreateShareUploadChannelRequest.
        :type password: str
        """

        self._password = password

    @property
    def size(self):
        """Gets the size of this CreateShareUploadChannelRequest.

        File size in byte

        :return: The size of this CreateShareUploadChannelRequest.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this CreateShareUploadChannelRequest.

        File size in byte

        :param size: The size of this CreateShareUploadChannelRequest.
        :type size: int
        """

        self._size = size

    @property
    def timestamp_creation(self):
        """Gets the timestamp_creation of this CreateShareUploadChannelRequest.

        &#128640; Since v4.22.0  Time the node was created on external file system  (default: current server datetime in UTC format)

        :return: The timestamp_creation of this CreateShareUploadChannelRequest.
        :rtype: datetime
        """
        return self._timestamp_creation

    @timestamp_creation.setter
    def timestamp_creation(self, timestamp_creation):
        """Sets the timestamp_creation of this CreateShareUploadChannelRequest.

        &#128640; Since v4.22.0  Time the node was created on external file system  (default: current server datetime in UTC format)

        :param timestamp_creation: The timestamp_creation of this CreateShareUploadChannelRequest.
        :type timestamp_creation: datetime
        """

        self._timestamp_creation = timestamp_creation

    @property
    def timestamp_modification(self):
        """Gets the timestamp_modification of this CreateShareUploadChannelRequest.

        &#128640; Since v4.22.0  Time the content of a node was last modified on external file system  (default: current server datetime in UTC format)

        :return: The timestamp_modification of this CreateShareUploadChannelRequest.
        :rtype: datetime
        """
        return self._timestamp_modification

    @timestamp_modification.setter
    def timestamp_modification(self, timestamp_modification):
        """Sets the timestamp_modification of this CreateShareUploadChannelRequest.

        &#128640; Since v4.22.0  Time the content of a node was last modified on external file system  (default: current server datetime in UTC format)

        :param timestamp_modification: The timestamp_modification of this CreateShareUploadChannelRequest.
        :type timestamp_modification: datetime
        """

        self._timestamp_modification = timestamp_modification
