# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.login_password_policies import LoginPasswordPolicies
from openapi_server import util


class ResetPasswordTokenValidateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_system_global_weak_password: bool=None, first_name: str=None, gender: str='n', last_name: str=None, login_password_policies: LoginPasswordPolicies=None, title: str=None):
        """ResetPasswordTokenValidateResponse - a model defined in OpenAPI

        :param allow_system_global_weak_password: The allow_system_global_weak_password of this ResetPasswordTokenValidateResponse.
        :param first_name: The first_name of this ResetPasswordTokenValidateResponse.
        :param gender: The gender of this ResetPasswordTokenValidateResponse.
        :param last_name: The last_name of this ResetPasswordTokenValidateResponse.
        :param login_password_policies: The login_password_policies of this ResetPasswordTokenValidateResponse.
        :param title: The title of this ResetPasswordTokenValidateResponse.
        """
        self.openapi_types = {
            'allow_system_global_weak_password': bool,
            'first_name': str,
            'gender': str,
            'last_name': str,
            'login_password_policies': LoginPasswordPolicies,
            'title': str
        }

        self.attribute_map = {
            'allow_system_global_weak_password': 'allowSystemGlobalWeakPassword',
            'first_name': 'firstName',
            'gender': 'gender',
            'last_name': 'lastName',
            'login_password_policies': 'loginPasswordPolicies',
            'title': 'title'
        }

        self._allow_system_global_weak_password = allow_system_global_weak_password
        self._first_name = first_name
        self._gender = gender
        self._last_name = last_name
        self._login_password_policies = login_password_policies
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResetPasswordTokenValidateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResetPasswordTokenValidateResponse of this ResetPasswordTokenValidateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_system_global_weak_password(self):
        """Gets the allow_system_global_weak_password of this ResetPasswordTokenValidateResponse.

        &#128679; Deprecated since v4.14.0  Allow weak password  Please use `loginPasswordPolicies` instead

        :return: The allow_system_global_weak_password of this ResetPasswordTokenValidateResponse.
        :rtype: bool
        """
        return self._allow_system_global_weak_password

    @allow_system_global_weak_password.setter
    def allow_system_global_weak_password(self, allow_system_global_weak_password):
        """Sets the allow_system_global_weak_password of this ResetPasswordTokenValidateResponse.

        &#128679; Deprecated since v4.14.0  Allow weak password  Please use `loginPasswordPolicies` instead

        :param allow_system_global_weak_password: The allow_system_global_weak_password of this ResetPasswordTokenValidateResponse.
        :type allow_system_global_weak_password: bool
        """

        self._allow_system_global_weak_password = allow_system_global_weak_password

    @property
    def first_name(self):
        """Gets the first_name of this ResetPasswordTokenValidateResponse.

        User first name

        :return: The first_name of this ResetPasswordTokenValidateResponse.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ResetPasswordTokenValidateResponse.

        User first name

        :param first_name: The first_name of this ResetPasswordTokenValidateResponse.
        :type first_name: str
        """
        if first_name is None:
            raise ValueError("Invalid value for `first_name`, must not be `None`")

        self._first_name = first_name

    @property
    def gender(self):
        """Gets the gender of this ResetPasswordTokenValidateResponse.

        &#128679; Deprecated since v4.12.0  Gender

        :return: The gender of this ResetPasswordTokenValidateResponse.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this ResetPasswordTokenValidateResponse.

        &#128679; Deprecated since v4.12.0  Gender

        :param gender: The gender of this ResetPasswordTokenValidateResponse.
        :type gender: str
        """

        self._gender = gender

    @property
    def last_name(self):
        """Gets the last_name of this ResetPasswordTokenValidateResponse.

        User last name

        :return: The last_name of this ResetPasswordTokenValidateResponse.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ResetPasswordTokenValidateResponse.

        User last name

        :param last_name: The last_name of this ResetPasswordTokenValidateResponse.
        :type last_name: str
        """
        if last_name is None:
            raise ValueError("Invalid value for `last_name`, must not be `None`")

        self._last_name = last_name

    @property
    def login_password_policies(self):
        """Gets the login_password_policies of this ResetPasswordTokenValidateResponse.


        :return: The login_password_policies of this ResetPasswordTokenValidateResponse.
        :rtype: LoginPasswordPolicies
        """
        return self._login_password_policies

    @login_password_policies.setter
    def login_password_policies(self, login_password_policies):
        """Sets the login_password_policies of this ResetPasswordTokenValidateResponse.


        :param login_password_policies: The login_password_policies of this ResetPasswordTokenValidateResponse.
        :type login_password_policies: LoginPasswordPolicies
        """

        self._login_password_policies = login_password_policies

    @property
    def title(self):
        """Gets the title of this ResetPasswordTokenValidateResponse.

        &#128679; Deprecated since v4.18.0  Job title

        :return: The title of this ResetPasswordTokenValidateResponse.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ResetPasswordTokenValidateResponse.

        &#128679; Deprecated since v4.18.0  Job title

        :param title: The title of this ResetPasswordTokenValidateResponse.
        :type title: str
        """

        self._title = title
