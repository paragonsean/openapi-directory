# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.object_expiration import ObjectExpiration
from openapi_server import util


class UpdateFilesBulkRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, classification: int=None, expiration: ObjectExpiration=None, object_ids: List[int]=None):
        """UpdateFilesBulkRequest - a model defined in OpenAPI

        :param classification: The classification of this UpdateFilesBulkRequest.
        :param expiration: The expiration of this UpdateFilesBulkRequest.
        :param object_ids: The object_ids of this UpdateFilesBulkRequest.
        """
        self.openapi_types = {
            'classification': int,
            'expiration': ObjectExpiration,
            'object_ids': List[int]
        }

        self.attribute_map = {
            'classification': 'classification',
            'expiration': 'expiration',
            'object_ids': 'objectIds'
        }

        self._classification = classification
        self._expiration = expiration
        self._object_ids = object_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFilesBulkRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFilesBulkRequest of this UpdateFilesBulkRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def classification(self):
        """Gets the classification of this UpdateFilesBulkRequest.

        Classification ID:  * `1` - public  * `2` - internal  * `3` - confidential  * `4` - strictly confidential

        :return: The classification of this UpdateFilesBulkRequest.
        :rtype: int
        """
        return self._classification

    @classification.setter
    def classification(self, classification):
        """Sets the classification of this UpdateFilesBulkRequest.

        Classification ID:  * `1` - public  * `2` - internal  * `3` - confidential  * `4` - strictly confidential

        :param classification: The classification of this UpdateFilesBulkRequest.
        :type classification: int
        """

        self._classification = classification

    @property
    def expiration(self):
        """Gets the expiration of this UpdateFilesBulkRequest.


        :return: The expiration of this UpdateFilesBulkRequest.
        :rtype: ObjectExpiration
        """
        return self._expiration

    @expiration.setter
    def expiration(self, expiration):
        """Sets the expiration of this UpdateFilesBulkRequest.


        :param expiration: The expiration of this UpdateFilesBulkRequest.
        :type expiration: ObjectExpiration
        """

        self._expiration = expiration

    @property
    def object_ids(self):
        """Gets the object_ids of this UpdateFilesBulkRequest.

        List of ids

        :return: The object_ids of this UpdateFilesBulkRequest.
        :rtype: List[int]
        """
        return self._object_ids

    @object_ids.setter
    def object_ids(self, object_ids):
        """Sets the object_ids of this UpdateFilesBulkRequest.

        List of ids

        :param object_ids: The object_ids of this UpdateFilesBulkRequest.
        :type object_ids: List[int]
        """
        if object_ids is None:
            raise ValueError("Invalid value for `object_ids`, must not be `None`")

        self._object_ids = object_ids
