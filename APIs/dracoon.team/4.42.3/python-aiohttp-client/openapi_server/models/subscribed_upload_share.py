# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscribedUploadShare(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, target_node_id: int=None):
        """SubscribedUploadShare - a model defined in OpenAPI

        :param id: The id of this SubscribedUploadShare.
        :param target_node_id: The target_node_id of this SubscribedUploadShare.
        """
        self.openapi_types = {
            'id': int,
            'target_node_id': int
        }

        self.attribute_map = {
            'id': 'id',
            'target_node_id': 'targetNodeId'
        }

        self._id = id
        self._target_node_id = target_node_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscribedUploadShare':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscribedUploadShare of this SubscribedUploadShare.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SubscribedUploadShare.

        Share ID

        :return: The id of this SubscribedUploadShare.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SubscribedUploadShare.

        Share ID

        :param id: The id of this SubscribedUploadShare.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def target_node_id(self):
        """Gets the target_node_id of this SubscribedUploadShare.

        Target room or folder ID

        :return: The target_node_id of this SubscribedUploadShare.
        :rtype: int
        """
        return self._target_node_id

    @target_node_id.setter
    def target_node_id(self, target_node_id):
        """Sets the target_node_id of this SubscribedUploadShare.

        Target room or folder ID

        :param target_node_id: The target_node_id of this SubscribedUploadShare.
        :type target_node_id: int
        """

        self._target_node_id = target_node_id
