# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ObjectExpiration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_expiration: bool=None, expire_at: datetime=None):
        """ObjectExpiration - a model defined in OpenAPI

        :param enable_expiration: The enable_expiration of this ObjectExpiration.
        :param expire_at: The expire_at of this ObjectExpiration.
        """
        self.openapi_types = {
            'enable_expiration': bool,
            'expire_at': datetime
        }

        self.attribute_map = {
            'enable_expiration': 'enableExpiration',
            'expire_at': 'expireAt'
        }

        self._enable_expiration = enable_expiration
        self._expire_at = expire_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectExpiration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObjectExpiration of this ObjectExpiration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_expiration(self):
        """Gets the enable_expiration of this ObjectExpiration.

        enabled / disabled

        :return: The enable_expiration of this ObjectExpiration.
        :rtype: bool
        """
        return self._enable_expiration

    @enable_expiration.setter
    def enable_expiration(self, enable_expiration):
        """Sets the enable_expiration of this ObjectExpiration.

        enabled / disabled

        :param enable_expiration: The enable_expiration of this ObjectExpiration.
        :type enable_expiration: bool
        """
        if enable_expiration is None:
            raise ValueError("Invalid value for `enable_expiration`, must not be `None`")

        self._enable_expiration = enable_expiration

    @property
    def expire_at(self):
        """Gets the expire_at of this ObjectExpiration.

        Expiration date

        :return: The expire_at of this ObjectExpiration.
        :rtype: datetime
        """
        return self._expire_at

    @expire_at.setter
    def expire_at(self, expire_at):
        """Sets the expire_at of this ObjectExpiration.

        Expiration date

        :param expire_at: The expire_at of this ObjectExpiration.
        :type expire_at: datetime
        """

        self._expire_at = expire_at
