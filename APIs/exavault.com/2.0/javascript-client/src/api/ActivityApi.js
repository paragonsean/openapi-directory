/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SessionActivityResponse from '../model/SessionActivityResponse';
import WebhookActivityResponse from '../model/WebhookActivityResponse';

/**
* Activity service.
* @module api/ActivityApi
* @version 2.0
*/
export default class ActivityApi {

    /**
    * Constructs a new ActivityApi. 
    * @alias module:api/ActivityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getSessionLogs operation.
     * @callback module:api/ActivityApi~getSessionLogsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SessionActivityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get activity logs
     * Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.   **NOTE:** Total Results will always return as 0 to avoid quering data you're not using and stay as performant as possible.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |-----|----|---| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
     * @param {String} evApiKey API Key
     * @param {String} evAccessToken Access Token
     * @param {Object} opts Optional parameters
     * @param {Date} [startDate] Start date of the filter data range
     * @param {Date} [endDate] End date of the filter data range
     * @param {String} [ipAddress] Used to filter session logs by ip address.
     * @param {String} [username] Username used for filtering a list
     * @param {String} [path] Path used to filter records
     * @param {String} [type] Filter session logs for operation type (see table above for acceptable values)
     * @param {Number} [offset] Offset of the records list
     * @param {Number} [limit] Limit of the records list
     * @param {String} [sort] Comma separated list sort params
     * @param {module:api/ActivityApi~getSessionLogsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SessionActivityResponse}
     */
    getSessionLogs(evApiKey, evAccessToken, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'evApiKey' is set
      if (evApiKey === undefined || evApiKey === null) {
        throw new Error("Missing the required parameter 'evApiKey' when calling getSessionLogs");
      }
      // verify the required parameter 'evAccessToken' is set
      if (evAccessToken === undefined || evAccessToken === null) {
        throw new Error("Missing the required parameter 'evAccessToken' when calling getSessionLogs");
      }

      let pathParams = {
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'ipAddress': opts['ipAddress'],
        'username': opts['username'],
        'path': opts['path'],
        'type': opts['type'],
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort']
      };
      let headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SessionActivityResponse;
      return this.apiClient.callApi(
        '/activity/session', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWebhookLogs operation.
     * @callback module:api/ActivityApi~getWebhookLogsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebhookActivityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get webhook logs
     * Returns the webhook logs for your account. Use the available query parameters to filter the listing of activity that is returned.  **NOTE:** Total Results will always return as 0 to avoid querying data you're not using and stay as performant as possible.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). Not all event types may be allowed for your account type. These are the valid options for event types:  - resources.upload - resources.download - resources.delete - resources.createFolder - resources.rename - resources.move - resources.copy - resources.compress - resources.extract - shares.formSubmit 
     * @param {String} evApiKey API Key
     * @param {String} evAccessToken Access Token
     * @param {Object} opts Optional parameters
     * @param {Date} [startDate] Earliest date of entries to include in list
     * @param {Date} [endDate] Latest date of entries to include in list
     * @param {String} [endpointUrl] Webhook listener endpoint
     * @param {String} [event] Type of activity that triggered the webhook attempt
     * @param {Number} [statusCode] Response code from the webhook endpoint
     * @param {String} [resourcePath] Path of the resource that triggered the webhook attempt
     * @param {String} [username] Filter by triggering username.
     * @param {Number} [offset] Records to skip before returning results.
     * @param {Number} [limit] Limit of the records list
     * @param {String} [sort] Comma separated list sort params
     * @param {module:api/ActivityApi~getWebhookLogsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebhookActivityResponse}
     */
    getWebhookLogs(evApiKey, evAccessToken, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'evApiKey' is set
      if (evApiKey === undefined || evApiKey === null) {
        throw new Error("Missing the required parameter 'evApiKey' when calling getWebhookLogs");
      }
      // verify the required parameter 'evAccessToken' is set
      if (evAccessToken === undefined || evAccessToken === null) {
        throw new Error("Missing the required parameter 'evAccessToken' when calling getWebhookLogs");
      }

      let pathParams = {
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'endpointUrl': opts['endpointUrl'],
        'event': opts['event'],
        'statusCode': opts['statusCode'],
        'resourcePath': opts['resourcePath'],
        'username': opts['username'],
        'offset': opts['offset'],
        'limit': opts['limit'],
        'sort': opts['sort']
      };
      let headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebhookActivityResponse;
      return this.apiClient.callApi(
        '/activity/webhooks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
