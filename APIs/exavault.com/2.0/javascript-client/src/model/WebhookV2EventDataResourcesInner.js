/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebhookV2EventDataResourcesInner model module.
 * @module model/WebhookV2EventDataResourcesInner
 * @version 2.0
 */
class WebhookV2EventDataResourcesInner {
    /**
     * Constructs a new <code>WebhookV2EventDataResourcesInner</code>.
     * @alias module:model/WebhookV2EventDataResourcesInner
     */
    constructor() { 
        
        WebhookV2EventDataResourcesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebhookV2EventDataResourcesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookV2EventDataResourcesInner} obj Optional instance to populate.
     * @return {module:model/WebhookV2EventDataResourcesInner} The populated <code>WebhookV2EventDataResourcesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookV2EventDataResourcesInner();

            if (data.hasOwnProperty('accessedAt')) {
                obj['accessedAt'] = ApiClient.convertToType(data['accessedAt'], 'Date');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('fileCount')) {
                obj['fileCount'] = ApiClient.convertToType(data['fileCount'], 'Number');
            }
            if (data.hasOwnProperty('hash')) {
                obj['hash'] = ApiClient.convertToType(data['hash'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('previewable')) {
                obj['previewable'] = ApiClient.convertToType(data['previewable'], 'Boolean');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
            if (data.hasOwnProperty('uploadDate')) {
                obj['uploadDate'] = ApiClient.convertToType(data['uploadDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookV2EventDataResourcesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookV2EventDataResourcesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['hash'] && !(typeof data['hash'] === 'string' || data['hash'] instanceof String)) {
            throw new Error("Expected the field `hash` to be a primitive type in the JSON string but got " + data['hash']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Date and time resource was most recently downloaded
 * @member {Date} accessedAt
 */
WebhookV2EventDataResourcesInner.prototype['accessedAt'] = undefined;

/**
 * Date and time of resource creation
 * @member {Date} createdAt
 */
WebhookV2EventDataResourcesInner.prototype['createdAt'] = undefined;

/**
 * Username who originally created resource
 * @member {String} createdBy
 */
WebhookV2EventDataResourcesInner.prototype['createdBy'] = undefined;

/**
 * Number of resources contained in this folder. If this is a file, fileCount is null
 * @member {Number} fileCount
 */
WebhookV2EventDataResourcesInner.prototype['fileCount'] = undefined;

/**
 * Resource hash value
 * @member {String} hash
 */
WebhookV2EventDataResourcesInner.prototype['hash'] = undefined;

/**
 * Resource ID
 * @member {Number} id
 */
WebhookV2EventDataResourcesInner.prototype['id'] = undefined;

/**
 * Resource name
 * @member {String} name
 */
WebhookV2EventDataResourcesInner.prototype['name'] = undefined;

/**
 * Full path to resource
 * @member {String} path
 */
WebhookV2EventDataResourcesInner.prototype['path'] = undefined;

/**
 * Whether the resource can be previewed
 * @member {Boolean} previewable
 */
WebhookV2EventDataResourcesInner.prototype['previewable'] = undefined;

/**
 * Size of resource in bytes
 * @member {Number} size
 */
WebhookV2EventDataResourcesInner.prototype['size'] = undefined;

/**
 * Type of resource `file` or `dir`
 * @member {String} type
 */
WebhookV2EventDataResourcesInner.prototype['type'] = undefined;

/**
 * Date and time resource was most recently changed
 * @member {Date} updatedAt
 */
WebhookV2EventDataResourcesInner.prototype['updatedAt'] = undefined;

/**
 * Date resource was first uploaded
 * @member {Date} uploadDate
 */
WebhookV2EventDataResourcesInner.prototype['uploadDate'] = undefined;






export default WebhookV2EventDataResourcesInner;

