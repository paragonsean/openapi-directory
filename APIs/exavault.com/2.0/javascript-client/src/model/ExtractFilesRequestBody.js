/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExtractFilesRequestBody model module.
 * @module model/ExtractFilesRequestBody
 * @version 2.0
 */
class ExtractFilesRequestBody {
    /**
     * Constructs a new <code>ExtractFilesRequestBody</code>.
     * @alias module:model/ExtractFilesRequestBody
     * @param parentResource {String} Resource identifier for folder files should be extracted to.
     * @param resource {String} Resource identifier of zip archive to be extracted.
     */
    constructor(parentResource, resource) { 
        
        ExtractFilesRequestBody.initialize(this, parentResource, resource);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, parentResource, resource) { 
        obj['parentResource'] = parentResource;
        obj['resource'] = resource;
    }

    /**
     * Constructs a <code>ExtractFilesRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtractFilesRequestBody} obj Optional instance to populate.
     * @return {module:model/ExtractFilesRequestBody} The populated <code>ExtractFilesRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtractFilesRequestBody();

            if (data.hasOwnProperty('parentResource')) {
                obj['parentResource'] = ApiClient.convertToType(data['parentResource'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtractFilesRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtractFilesRequestBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExtractFilesRequestBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['parentResource'] && !(typeof data['parentResource'] === 'string' || data['parentResource'] instanceof String)) {
            throw new Error("Expected the field `parentResource` to be a primitive type in the JSON string but got " + data['parentResource']);
        }
        // ensure the json data is a string
        if (data['resource'] && !(typeof data['resource'] === 'string' || data['resource'] instanceof String)) {
            throw new Error("Expected the field `resource` to be a primitive type in the JSON string but got " + data['resource']);
        }

        return true;
    }


}

ExtractFilesRequestBody.RequiredProperties = ["parentResource", "resource"];

/**
 * Resource identifier for folder files should be extracted to.
 * @member {String} parentResource
 */
ExtractFilesRequestBody.prototype['parentResource'] = undefined;

/**
 * Resource identifier of zip archive to be extracted.
 * @member {String} resource
 */
ExtractFilesRequestBody.prototype['resource'] = undefined;






export default ExtractFilesRequestBody;

