/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebhookV1Details from './WebhookV1Details';

/**
 * The WebhookActivityAttributesV1 model module.
 * @module model/WebhookActivityAttributesV1
 * @version 2.0
 */
class WebhookActivityAttributesV1 {
    /**
     * Constructs a new <code>WebhookActivityAttributesV1</code>.
     * @alias module:model/WebhookActivityAttributesV1
     */
    constructor() { 
        
        WebhookActivityAttributesV1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebhookActivityAttributesV1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookActivityAttributesV1} obj Optional instance to populate.
     * @return {module:model/WebhookActivityAttributesV1} The populated <code>WebhookActivityAttributesV1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookActivityAttributesV1();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('attemptId')) {
                obj['attemptId'] = ApiClient.convertToType(data['attemptId'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = WebhookV1Details.constructFromObject(data['details']);
            }
            if (data.hasOwnProperty('endpointUrl')) {
                obj['endpointUrl'] = ApiClient.convertToType(data['endpointUrl'], 'String');
            }
            if (data.hasOwnProperty('event')) {
                obj['event'] = ApiClient.convertToType(data['event'], 'String');
            }
            if (data.hasOwnProperty('ipAddress')) {
                obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
            }
            if (data.hasOwnProperty('resend')) {
                obj['resend'] = ApiClient.convertToType(data['resend'], 'Boolean');
            }
            if (data.hasOwnProperty('resourcePath')) {
                obj['resourcePath'] = ApiClient.convertToType(data['resourcePath'], 'String');
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = ApiClient.convertToType(data['response'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('webhookFormat')) {
                obj['webhookFormat'] = ApiClient.convertToType(data['webhookFormat'], 'String');
            }
            if (data.hasOwnProperty('webhookId')) {
                obj['webhookId'] = ApiClient.convertToType(data['webhookId'], 'Number');
            }
            if (data.hasOwnProperty('webhookPath')) {
                obj['webhookPath'] = ApiClient.convertToType(data['webhookPath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookActivityAttributesV1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookActivityAttributesV1</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['attemptId'] && !(typeof data['attemptId'] === 'string' || data['attemptId'] instanceof String)) {
            throw new Error("Expected the field `attemptId` to be a primitive type in the JSON string but got " + data['attemptId']);
        }
        // ensure the json data is a string
        if (data['created'] && !(typeof data['created'] === 'string' || data['created'] instanceof String)) {
            throw new Error("Expected the field `created` to be a primitive type in the JSON string but got " + data['created']);
        }
        // validate the optional field `details`
        if (data['details']) { // data not null
          WebhookV1Details.validateJSON(data['details']);
        }
        // ensure the json data is a string
        if (data['endpointUrl'] && !(typeof data['endpointUrl'] === 'string' || data['endpointUrl'] instanceof String)) {
            throw new Error("Expected the field `endpointUrl` to be a primitive type in the JSON string but got " + data['endpointUrl']);
        }
        // ensure the json data is a string
        if (data['event'] && !(typeof data['event'] === 'string' || data['event'] instanceof String)) {
            throw new Error("Expected the field `event` to be a primitive type in the JSON string but got " + data['event']);
        }
        // ensure the json data is a string
        if (data['ipAddress'] && !(typeof data['ipAddress'] === 'string' || data['ipAddress'] instanceof String)) {
            throw new Error("Expected the field `ipAddress` to be a primitive type in the JSON string but got " + data['ipAddress']);
        }
        // ensure the json data is a string
        if (data['resourcePath'] && !(typeof data['resourcePath'] === 'string' || data['resourcePath'] instanceof String)) {
            throw new Error("Expected the field `resourcePath` to be a primitive type in the JSON string but got " + data['resourcePath']);
        }
        // ensure the json data is a string
        if (data['response'] && !(typeof data['response'] === 'string' || data['response'] instanceof String)) {
            throw new Error("Expected the field `response` to be a primitive type in the JSON string but got " + data['response']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // ensure the json data is a string
        if (data['webhookFormat'] && !(typeof data['webhookFormat'] === 'string' || data['webhookFormat'] instanceof String)) {
            throw new Error("Expected the field `webhookFormat` to be a primitive type in the JSON string but got " + data['webhookFormat']);
        }
        // ensure the json data is a string
        if (data['webhookPath'] && !(typeof data['webhookPath'] === 'string' || data['webhookPath'] instanceof String)) {
            throw new Error("Expected the field `webhookPath` to be a primitive type in the JSON string but got " + data['webhookPath']);
        }

        return true;
    }


}



/**
 * Unique ID of account
 * @member {String} accountId
 */
WebhookActivityAttributesV1.prototype['accountId'] = undefined;

/**
 * Event - retry identifier
 * @member {String} attemptId
 */
WebhookActivityAttributesV1.prototype['attemptId'] = undefined;

/**
 * Date and time of webhook message being generated by system
 * @member {String} created
 */
WebhookActivityAttributesV1.prototype['created'] = undefined;

/**
 * @member {module:model/WebhookV1Details} details
 */
WebhookActivityAttributesV1.prototype['details'] = undefined;

/**
 * The URL the message was sent to
 * @member {String} endpointUrl
 */
WebhookActivityAttributesV1.prototype['endpointUrl'] = undefined;

/**
 * Event type
 * @member {module:model/WebhookActivityAttributesV1.EventEnum} event
 */
WebhookActivityAttributesV1.prototype['event'] = undefined;

/**
 * IP Address of related activity
 * @member {String} ipAddress
 */
WebhookActivityAttributesV1.prototype['ipAddress'] = undefined;

/**
 * Whether this attempt was a re-send of a previous attempt
 * @member {Boolean} resend
 */
WebhookActivityAttributesV1.prototype['resend'] = undefined;

/**
 * Path of resource that matched webhook
 * @member {String} resourcePath
 */
WebhookActivityAttributesV1.prototype['resourcePath'] = undefined;

/**
 * Body of web response returned by webhook listener
 * @member {String} response
 */
WebhookActivityAttributesV1.prototype['response'] = undefined;

/**
 * HTTP Status Code returned by webhook listener
 * @member {Number} status
 */
WebhookActivityAttributesV1.prototype['status'] = undefined;

/**
 * Username of related activity
 * @member {String} username
 */
WebhookActivityAttributesV1.prototype['username'] = undefined;

/**
 * What version of webhook message is being sent `v1`
 * @member {String} webhookFormat
 */
WebhookActivityAttributesV1.prototype['webhookFormat'] = undefined;

/**
 * Unique ID of webhook configuration
 * @member {Number} webhookId
 */
WebhookActivityAttributesV1.prototype['webhookId'] = undefined;

/**
 * Path that webhook is watching
 * @member {String} webhookPath
 */
WebhookActivityAttributesV1.prototype['webhookPath'] = undefined;





/**
 * Allowed values for the <code>event</code> property.
 * @enum {String}
 * @readonly
 */
WebhookActivityAttributesV1['EventEnum'] = {

    /**
     * value: "resources.upload"
     * @const
     */
    "resources.upload": "resources.upload",

    /**
     * value: "resources.download"
     * @const
     */
    "resources.download": "resources.download",

    /**
     * value: "resources.delete"
     * @const
     */
    "resources.delete": "resources.delete",

    /**
     * value: "resources.rename"
     * @const
     */
    "resources.rename": "resources.rename",

    /**
     * value: "resources.copy"
     * @const
     */
    "resources.copy": "resources.copy",

    /**
     * value: "resources.move"
     * @const
     */
    "resources.move": "resources.move",

    /**
     * value: "resources.compress"
     * @const
     */
    "resources.compress": "resources.compress",

    /**
     * value: "resources.extract"
     * @const
     */
    "resources.extract": "resources.extract",

    /**
     * value: "resources.createFolder"
     * @const
     */
    "resources.createFolder": "resources.createFolder",

    /**
     * value: "shares.formSubmit"
     * @const
     */
    "shares.formSubmit": "shares.formSubmit"
};



export default WebhookActivityAttributesV1;

