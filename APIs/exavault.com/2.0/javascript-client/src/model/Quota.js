/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Quota model module.
 * @module model/Quota
 * @version 2.0
 */
class Quota {
    /**
     * Constructs a new <code>Quota</code>.
     * @alias module:model/Quota
     */
    constructor() { 
        
        Quota.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Quota</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Quota} obj Optional instance to populate.
     * @return {module:model/Quota} The populated <code>Quota</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Quota();

            if (data.hasOwnProperty('bandwidthLimit')) {
                obj['bandwidthLimit'] = ApiClient.convertToType(data['bandwidthLimit'], 'Number');
            }
            if (data.hasOwnProperty('bandwidthUsed')) {
                obj['bandwidthUsed'] = ApiClient.convertToType(data['bandwidthUsed'], 'Number');
            }
            if (data.hasOwnProperty('diskLimit')) {
                obj['diskLimit'] = ApiClient.convertToType(data['diskLimit'], 'Number');
            }
            if (data.hasOwnProperty('diskUsed')) {
                obj['diskUsed'] = ApiClient.convertToType(data['diskUsed'], 'Number');
            }
            if (data.hasOwnProperty('noticeEnabled')) {
                obj['noticeEnabled'] = ApiClient.convertToType(data['noticeEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('noticeThreshold')) {
                obj['noticeThreshold'] = ApiClient.convertToType(data['noticeThreshold'], 'Number');
            }
            if (data.hasOwnProperty('transactionsLimit')) {
                obj['transactionsLimit'] = ApiClient.convertToType(data['transactionsLimit'], 'Number');
            }
            if (data.hasOwnProperty('transactionsNoticeEnabled')) {
                obj['transactionsNoticeEnabled'] = ApiClient.convertToType(data['transactionsNoticeEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('transactionsNoticeThreshold')) {
                obj['transactionsNoticeThreshold'] = ApiClient.convertToType(data['transactionsNoticeThreshold'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Quota</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Quota</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Total number of bytes that can be transferred per month.
 * @member {Number} bandwidthLimit
 */
Quota.prototype['bandwidthLimit'] = undefined;

/**
 * Number of bytes transferred this month.
 * @member {Number} bandwidthUsed
 */
Quota.prototype['bandwidthUsed'] = undefined;

/**
 * Amount of disk space that the account has available to it. This may be increased by upgrading to a larger plan.
 * @member {Number} diskLimit
 */
Quota.prototype['diskLimit'] = undefined;

/**
 * Amount of disk space currently in use.
 * @member {Number} diskUsed
 */
Quota.prototype['diskUsed'] = undefined;

/**
 * Should a quota warning be sent to the account owner when a threshold level of space utilization is reached?
 * @member {Boolean} noticeEnabled
 */
Quota.prototype['noticeEnabled'] = undefined;

/**
 * Treshold that triggers a quota notification. This represents the \"percent full\" your account must be before the quota notification is generated.
 * @member {Number} noticeThreshold
 */
Quota.prototype['noticeThreshold'] = undefined;

/**
 * Total number of transactions allowed in a 24-hour period.
 * @member {Number} transactionsLimit
 */
Quota.prototype['transactionsLimit'] = undefined;

/**
 * Whether an email should be sent to the account owner up to once per day if transaction usage exceeds `transactionsNoticeThreshold` value.
 * @member {Boolean} transactionsNoticeEnabled
 */
Quota.prototype['transactionsNoticeEnabled'] = undefined;

/**
 * Percent of daily transactions limit that will trigger an email if activity exceeds it.
 * @member {Number} transactionsNoticeThreshold
 */
Quota.prototype['transactionsNoticeThreshold'] = undefined;






export default Quota;

