/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ExaVault);
  }
}(this, function(expect, ExaVault) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ExaVault.WebhookTriggersResources();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WebhookTriggersResources', function() {
    it('should create an instance of WebhookTriggersResources', function() {
      // uncomment below and update the code to test WebhookTriggersResources
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be.a(ExaVault.WebhookTriggersResources);
    });

    it('should have the property compress (base name: "compress")', function() {
      // uncomment below and update the code to test the property compress
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be();
    });

    it('should have the property copy (base name: "copy")', function() {
      // uncomment below and update the code to test the property copy
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be();
    });

    it('should have the property createFolder (base name: "createFolder")', function() {
      // uncomment below and update the code to test the property createFolder
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be();
    });

    it('should have the property _delete (base name: "delete")', function() {
      // uncomment below and update the code to test the property _delete
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be();
    });

    it('should have the property download (base name: "download")', function() {
      // uncomment below and update the code to test the property download
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be();
    });

    it('should have the property extract (base name: "extract")', function() {
      // uncomment below and update the code to test the property extract
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be();
    });

    it('should have the property move (base name: "move")', function() {
      // uncomment below and update the code to test the property move
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be();
    });

    it('should have the property rename (base name: "rename")', function() {
      // uncomment below and update the code to test the property rename
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be();
    });

    it('should have the property upload (base name: "upload")', function() {
      // uncomment below and update the code to test the property upload
      //var instance = new ExaVault.WebhookTriggersResources();
      //expect(instance).to.be();
    });

  });

}));
