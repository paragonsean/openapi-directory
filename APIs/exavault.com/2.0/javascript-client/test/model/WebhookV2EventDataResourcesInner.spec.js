/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ExaVault);
  }
}(this, function(expect, ExaVault) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ExaVault.WebhookV2EventDataResourcesInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WebhookV2EventDataResourcesInner', function() {
    it('should create an instance of WebhookV2EventDataResourcesInner', function() {
      // uncomment below and update the code to test WebhookV2EventDataResourcesInner
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be.a(ExaVault.WebhookV2EventDataResourcesInner);
    });

    it('should have the property accessedAt (base name: "accessedAt")', function() {
      // uncomment below and update the code to test the property accessedAt
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property createdBy (base name: "createdBy")', function() {
      // uncomment below and update the code to test the property createdBy
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property fileCount (base name: "fileCount")', function() {
      // uncomment below and update the code to test the property fileCount
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property hash (base name: "hash")', function() {
      // uncomment below and update the code to test the property hash
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property previewable (base name: "previewable")', function() {
      // uncomment below and update the code to test the property previewable
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

    it('should have the property uploadDate (base name: "uploadDate")', function() {
      // uncomment below and update the code to test the property uploadDate
      //var instance = new ExaVault.WebhookV2EventDataResourcesInner();
      //expect(instance).to.be();
    });

  });

}));
