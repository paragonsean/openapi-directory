/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ExaVault);
  }
}(this, function(expect, ExaVault) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ExaVault.Quota();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Quota', function() {
    it('should create an instance of Quota', function() {
      // uncomment below and update the code to test Quota
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be.a(ExaVault.Quota);
    });

    it('should have the property bandwidthLimit (base name: "bandwidthLimit")', function() {
      // uncomment below and update the code to test the property bandwidthLimit
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be();
    });

    it('should have the property bandwidthUsed (base name: "bandwidthUsed")', function() {
      // uncomment below and update the code to test the property bandwidthUsed
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be();
    });

    it('should have the property diskLimit (base name: "diskLimit")', function() {
      // uncomment below and update the code to test the property diskLimit
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be();
    });

    it('should have the property diskUsed (base name: "diskUsed")', function() {
      // uncomment below and update the code to test the property diskUsed
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be();
    });

    it('should have the property noticeEnabled (base name: "noticeEnabled")', function() {
      // uncomment below and update the code to test the property noticeEnabled
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be();
    });

    it('should have the property noticeThreshold (base name: "noticeThreshold")', function() {
      // uncomment below and update the code to test the property noticeThreshold
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be();
    });

    it('should have the property transactionsLimit (base name: "transactionsLimit")', function() {
      // uncomment below and update the code to test the property transactionsLimit
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be();
    });

    it('should have the property transactionsNoticeEnabled (base name: "transactionsNoticeEnabled")', function() {
      // uncomment below and update the code to test the property transactionsNoticeEnabled
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be();
    });

    it('should have the property transactionsNoticeThreshold (base name: "transactionsNoticeThreshold")', function() {
      // uncomment below and update the code to test the property transactionsNoticeThreshold
      //var instance = new ExaVault.Quota();
      //expect(instance).to.be();
    });

  });

}));
