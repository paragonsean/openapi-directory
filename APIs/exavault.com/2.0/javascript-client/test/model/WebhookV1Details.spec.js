/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ExaVault);
  }
}(this, function(expect, ExaVault) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ExaVault.WebhookV1Details();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WebhookV1Details', function() {
    it('should create an instance of WebhookV1Details', function() {
      // uncomment below and update the code to test WebhookV1Details
      //var instance = new ExaVault.WebhookV1Details();
      //expect(instance).to.be.a(ExaVault.WebhookV1Details);
    });

    it('should have the property accountName (base name: "accountName")', function() {
      // uncomment below and update the code to test the property accountName
      //var instance = new ExaVault.WebhookV1Details();
      //expect(instance).to.be();
    });

    it('should have the property attempt (base name: "attempt")', function() {
      // uncomment below and update the code to test the property attempt
      //var instance = new ExaVault.WebhookV1Details();
      //expect(instance).to.be();
    });

    it('should have the property attemptId (base name: "attemptId")', function() {
      // uncomment below and update the code to test the property attemptId
      //var instance = new ExaVault.WebhookV1Details();
      //expect(instance).to.be();
    });

    it('should have the property event (base name: "event")', function() {
      // uncomment below and update the code to test the property event
      //var instance = new ExaVault.WebhookV1Details();
      //expect(instance).to.be();
    });

    it('should have the property protocol (base name: "protocol")', function() {
      // uncomment below and update the code to test the property protocol
      //var instance = new ExaVault.WebhookV1Details();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new ExaVault.WebhookV1Details();
      //expect(instance).to.be();
    });

  });

}));
