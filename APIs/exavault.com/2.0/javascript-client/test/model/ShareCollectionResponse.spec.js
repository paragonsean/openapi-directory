/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ExaVault);
  }
}(this, function(expect, ExaVault) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ExaVault.ShareCollectionResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ShareCollectionResponse', function() {
    it('should create an instance of ShareCollectionResponse', function() {
      // uncomment below and update the code to test ShareCollectionResponse
      //var instance = new ExaVault.ShareCollectionResponse();
      //expect(instance).to.be.a(ExaVault.ShareCollectionResponse);
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new ExaVault.ShareCollectionResponse();
      //expect(instance).to.be();
    });

    it('should have the property included (base name: "included")', function() {
      // uncomment below and update the code to test the property included
      //var instance = new ExaVault.ShareCollectionResponse();
      //expect(instance).to.be();
    });

    it('should have the property responseStatus (base name: "responseStatus")', function() {
      // uncomment below and update the code to test the property responseStatus
      //var instance = new ExaVault.ShareCollectionResponse();
      //expect(instance).to.be();
    });

    it('should have the property returnedResults (base name: "returnedResults")', function() {
      // uncomment below and update the code to test the property returnedResults
      //var instance = new ExaVault.ShareCollectionResponse();
      //expect(instance).to.be();
    });

    it('should have the property totalResults (base name: "totalResults")', function() {
      // uncomment below and update the code to test the property totalResults
      //var instance = new ExaVault.ShareCollectionResponse();
      //expect(instance).to.be();
    });

  });

}));
