/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateUserRequestBody.h
 *
 * 
 */

#ifndef OAIUpdateUserRequestBody_H
#define OAIUpdateUserRequestBody_H

#include <QJsonObject>

#include "OAIUserPermissions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserPermissions;

class OAIUpdateUserRequestBody : public OAIObject {
public:
    OAIUpdateUserRequestBody();
    OAIUpdateUserRequestBody(QString json);
    ~OAIUpdateUserRequestBody() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getExpiration() const;
    void setExpiration(const QString &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    QString getHomeResource() const;
    void setHomeResource(const QString &home_resource);
    bool is_home_resource_Set() const;
    bool is_home_resource_Valid() const;

    bool isLocked() const;
    void setLocked(const bool &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    QString getNickname() const;
    void setNickname(const QString &nickname);
    bool is_nickname_Set() const;
    bool is_nickname_Valid() const;

    bool isOnboarding() const;
    void setOnboarding(const bool &onboarding);
    bool is_onboarding_Set() const;
    bool is_onboarding_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    OAIUserPermissions getPermissions() const;
    void setPermissions(const OAIUserPermissions &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    QString m_home_resource;
    bool m_home_resource_isSet;
    bool m_home_resource_isValid;

    bool m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    QString m_nickname;
    bool m_nickname_isSet;
    bool m_nickname_isValid;

    bool m_onboarding;
    bool m_onboarding_isSet;
    bool m_onboarding_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    OAIUserPermissions m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateUserRequestBody)

#endif // OAIUpdateUserRequestBody_H
