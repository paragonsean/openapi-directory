/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAccountRequestBody_allowedIpRanges_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAccountRequestBody_allowedIpRanges_inner::OAIUpdateAccountRequestBody_allowedIpRanges_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAccountRequestBody_allowedIpRanges_inner::OAIUpdateAccountRequestBody_allowedIpRanges_inner() {
    this->initializeModel();
}

OAIUpdateAccountRequestBody_allowedIpRanges_inner::~OAIUpdateAccountRequestBody_allowedIpRanges_inner() {}

void OAIUpdateAccountRequestBody_allowedIpRanges_inner::initializeModel() {

    m_ip_end_isSet = false;
    m_ip_end_isValid = false;

    m_ip_start_isSet = false;
    m_ip_start_isValid = false;
}

void OAIUpdateAccountRequestBody_allowedIpRanges_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAccountRequestBody_allowedIpRanges_inner::fromJsonObject(QJsonObject json) {

    m_ip_end_isValid = ::OpenAPI::fromJsonValue(m_ip_end, json[QString("ipEnd")]);
    m_ip_end_isSet = !json[QString("ipEnd")].isNull() && m_ip_end_isValid;

    m_ip_start_isValid = ::OpenAPI::fromJsonValue(m_ip_start, json[QString("ipStart")]);
    m_ip_start_isSet = !json[QString("ipStart")].isNull() && m_ip_start_isValid;
}

QString OAIUpdateAccountRequestBody_allowedIpRanges_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAccountRequestBody_allowedIpRanges_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_end_isSet) {
        obj.insert(QString("ipEnd"), ::OpenAPI::toJsonValue(m_ip_end));
    }
    if (m_ip_start_isSet) {
        obj.insert(QString("ipStart"), ::OpenAPI::toJsonValue(m_ip_start));
    }
    return obj;
}

QString OAIUpdateAccountRequestBody_allowedIpRanges_inner::getIpEnd() const {
    return m_ip_end;
}
void OAIUpdateAccountRequestBody_allowedIpRanges_inner::setIpEnd(const QString &ip_end) {
    m_ip_end = ip_end;
    m_ip_end_isSet = true;
}

bool OAIUpdateAccountRequestBody_allowedIpRanges_inner::is_ip_end_Set() const{
    return m_ip_end_isSet;
}

bool OAIUpdateAccountRequestBody_allowedIpRanges_inner::is_ip_end_Valid() const{
    return m_ip_end_isValid;
}

QString OAIUpdateAccountRequestBody_allowedIpRanges_inner::getIpStart() const {
    return m_ip_start;
}
void OAIUpdateAccountRequestBody_allowedIpRanges_inner::setIpStart(const QString &ip_start) {
    m_ip_start = ip_start;
    m_ip_start_isSet = true;
}

bool OAIUpdateAccountRequestBody_allowedIpRanges_inner::is_ip_start_Set() const{
    return m_ip_start_isSet;
}

bool OAIUpdateAccountRequestBody_allowedIpRanges_inner::is_ip_start_Valid() const{
    return m_ip_start_isValid;
}

bool OAIUpdateAccountRequestBody_allowedIpRanges_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_end_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_start_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAccountRequestBody_allowedIpRanges_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
