/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhookAttributes.h
 *
 * 
 */

#ifndef OAIWebhookAttributes_H
#define OAIWebhookAttributes_H

#include <QJsonObject>

#include "OAIWebhookTriggers.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWebhookTriggers;

class OAIWebhookAttributes : public OAIObject {
public:
    OAIWebhookAttributes();
    OAIWebhookAttributes(QString json);
    ~OAIWebhookAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getEndpointUrl() const;
    void setEndpointUrl(const QString &endpoint_url);
    bool is_endpoint_url_Set() const;
    bool is_endpoint_url_Valid() const;

    bool isFailed() const;
    void setFailed(const bool &failed);
    bool is_failed_Set() const;
    bool is_failed_Valid() const;

    QDateTime getModified() const;
    void setModified(const QDateTime &modified);
    bool is_modified_Set() const;
    bool is_modified_Valid() const;

    QString getResponseVersion() const;
    void setResponseVersion(const QString &response_version);
    bool is_response_version_Set() const;
    bool is_response_version_Valid() const;

    OAIWebhookTriggers getTriggers() const;
    void setTriggers(const OAIWebhookTriggers &triggers);
    bool is_triggers_Set() const;
    bool is_triggers_Valid() const;

    QString getVerificationToken() const;
    void setVerificationToken(const QString &verification_token);
    bool is_verification_token_Set() const;
    bool is_verification_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_endpoint_url;
    bool m_endpoint_url_isSet;
    bool m_endpoint_url_isValid;

    bool m_failed;
    bool m_failed_isSet;
    bool m_failed_isValid;

    QDateTime m_modified;
    bool m_modified_isSet;
    bool m_modified_isValid;

    QString m_response_version;
    bool m_response_version_isSet;
    bool m_response_version_isValid;

    OAIWebhookTriggers m_triggers;
    bool m_triggers_isSet;
    bool m_triggers_isValid;

    QString m_verification_token;
    bool m_verification_token_isSet;
    bool m_verification_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhookAttributes)

#endif // OAIWebhookAttributes_H
