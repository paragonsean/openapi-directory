/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBrandingSettingsValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBrandingSettingsValues::OAIBrandingSettingsValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBrandingSettingsValues::OAIBrandingSettingsValues() {
    this->initializeModel();
}

OAIBrandingSettingsValues::~OAIBrandingSettingsValues() {}

void OAIBrandingSettingsValues::initializeModel() {

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_custom_email_isSet = false;
    m_custom_email_isValid = false;

    m_theme_isSet = false;
    m_theme_isValid = false;
}

void OAIBrandingSettingsValues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBrandingSettingsValues::fromJsonObject(QJsonObject json) {

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_custom_email_isValid = ::OpenAPI::fromJsonValue(m_custom_email, json[QString("customEmail")]);
    m_custom_email_isSet = !json[QString("customEmail")].isNull() && m_custom_email_isValid;

    m_theme_isValid = ::OpenAPI::fromJsonValue(m_theme, json[QString("theme")]);
    m_theme_isSet = !json[QString("theme")].isNull() && m_theme_isValid;
}

QString OAIBrandingSettingsValues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBrandingSettingsValues::asJsonObject() const {
    QJsonObject obj;
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_custom_email_isSet) {
        obj.insert(QString("customEmail"), ::OpenAPI::toJsonValue(m_custom_email));
    }
    if (m_theme_isSet) {
        obj.insert(QString("theme"), ::OpenAPI::toJsonValue(m_theme));
    }
    return obj;
}

QString OAIBrandingSettingsValues::getCompanyName() const {
    return m_company_name;
}
void OAIBrandingSettingsValues::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIBrandingSettingsValues::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIBrandingSettingsValues::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAIBrandingSettingsValues::getCustomEmail() const {
    return m_custom_email;
}
void OAIBrandingSettingsValues::setCustomEmail(const QString &custom_email) {
    m_custom_email = custom_email;
    m_custom_email_isSet = true;
}

bool OAIBrandingSettingsValues::is_custom_email_Set() const{
    return m_custom_email_isSet;
}

bool OAIBrandingSettingsValues::is_custom_email_Valid() const{
    return m_custom_email_isValid;
}

QString OAIBrandingSettingsValues::getTheme() const {
    return m_theme;
}
void OAIBrandingSettingsValues::setTheme(const QString &theme) {
    m_theme = theme;
    m_theme_isSet = true;
}

bool OAIBrandingSettingsValues::is_theme_Set() const{
    return m_theme_isSet;
}

bool OAIBrandingSettingsValues::is_theme_Valid() const{
    return m_theme_isValid;
}

bool OAIBrandingSettingsValues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_theme_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBrandingSettingsValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
