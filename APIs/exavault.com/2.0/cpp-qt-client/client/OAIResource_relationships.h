/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResource_relationships.h
 *
 * 
 */

#ifndef OAIResource_relationships_H
#define OAIResource_relationships_H

#include <QJsonObject>

#include "OAIResource_relationships_directFile.h"
#include "OAIResource_relationships_notifications_inner.h"
#include "OAIResource_relationships_parentResource.h"
#include "OAIResource_relationships_share.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResource_relationships_directFile;
class OAIResource_relationships_notifications_inner;
class OAIResource_relationships_parentResource;
class OAIResource_relationships_share;

class OAIResource_relationships : public OAIObject {
public:
    OAIResource_relationships();
    OAIResource_relationships(QString json);
    ~OAIResource_relationships() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResource_relationships_directFile getDirectFile() const;
    void setDirectFile(const OAIResource_relationships_directFile &direct_file);
    bool is_direct_file_Set() const;
    bool is_direct_file_Valid() const;

    QList<OAIResource_relationships_notifications_inner> getNotifications() const;
    void setNotifications(const QList<OAIResource_relationships_notifications_inner> &notifications);
    bool is_notifications_Set() const;
    bool is_notifications_Valid() const;

    OAIResource_relationships_parentResource getParentResource() const;
    void setParentResource(const OAIResource_relationships_parentResource &parent_resource);
    bool is_parent_resource_Set() const;
    bool is_parent_resource_Valid() const;

    OAIResource_relationships_share getShare() const;
    void setShare(const OAIResource_relationships_share &share);
    bool is_share_Set() const;
    bool is_share_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResource_relationships_directFile m_direct_file;
    bool m_direct_file_isSet;
    bool m_direct_file_isValid;

    QList<OAIResource_relationships_notifications_inner> m_notifications;
    bool m_notifications_isSet;
    bool m_notifications_isValid;

    OAIResource_relationships_parentResource m_parent_resource;
    bool m_parent_resource_isSet;
    bool m_parent_resource_isValid;

    OAIResource_relationships_share m_share;
    bool m_share_isSet;
    bool m_share_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResource_relationships)

#endif // OAIResource_relationships_H
