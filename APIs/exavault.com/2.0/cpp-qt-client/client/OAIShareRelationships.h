/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShareRelationships.h
 *
 * Message, owner, resource, and notification relationships of the share. 
 */

#ifndef OAIShareRelationships_H
#define OAIShareRelationships_H

#include <QJsonObject>

#include "OAIShareRelationshipsMessage.h"
#include "OAIShareRelationshipsNotification.h"
#include "OAIShareRelationshipsOwner.h"
#include "OAIShareRelationshipsResource.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIShareRelationshipsMessage;
class OAIShareRelationshipsNotification;
class OAIShareRelationshipsOwner;
class OAIShareRelationshipsResource;

class OAIShareRelationships : public OAIObject {
public:
    OAIShareRelationships();
    OAIShareRelationships(QString json);
    ~OAIShareRelationships() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIShareRelationshipsMessage> getMessages() const;
    void setMessages(const QList<OAIShareRelationshipsMessage> &messages);
    bool is_messages_Set() const;
    bool is_messages_Valid() const;

    QList<OAIShareRelationshipsNotification> getNotifications() const;
    void setNotifications(const QList<OAIShareRelationshipsNotification> &notifications);
    bool is_notifications_Set() const;
    bool is_notifications_Valid() const;

    OAIShareRelationshipsOwner getOwner() const;
    void setOwner(const OAIShareRelationshipsOwner &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QList<OAIShareRelationshipsResource> getResources() const;
    void setResources(const QList<OAIShareRelationshipsResource> &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIShareRelationshipsMessage> m_messages;
    bool m_messages_isSet;
    bool m_messages_isValid;

    QList<OAIShareRelationshipsNotification> m_notifications;
    bool m_notifications_isSet;
    bool m_notifications_isValid;

    OAIShareRelationshipsOwner m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QList<OAIShareRelationshipsResource> m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShareRelationships)

#endif // OAIShareRelationships_H
