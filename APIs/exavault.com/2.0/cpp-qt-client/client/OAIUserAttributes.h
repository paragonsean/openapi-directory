/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserAttributes.h
 *
 * Attributes of the user including expiration, home directory, and permissions. 
 */

#ifndef OAIUserAttributes_H
#define OAIUserAttributes_H

#include <QJsonObject>

#include "OAIUserPermissions.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserPermissions;

class OAIUserAttributes : public OAIObject {
public:
    OAIUserAttributes();
    OAIUserAttributes(QString json);
    ~OAIUserAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessTimestamp() const;
    void setAccessTimestamp(const QString &access_timestamp);
    bool is_access_timestamp_Set() const;
    bool is_access_timestamp_Valid() const;

    QString getAccountName() const;
    void setAccountName(const QString &account_name);
    bool is_account_name_Set() const;
    bool is_account_name_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getExpiration() const;
    void setExpiration(const QString &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    bool isFirstLogin() const;
    void setFirstLogin(const bool &first_login);
    bool is_first_login_Set() const;
    bool is_first_login_Valid() const;

    QString getHomePath() const;
    void setHomePath(const QString &home_path);
    bool is_home_path_Set() const;
    bool is_home_path_Valid() const;

    bool isLocked() const;
    void setLocked(const bool &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    QDateTime getModified() const;
    void setModified(const QDateTime &modified);
    bool is_modified_Set() const;
    bool is_modified_Valid() const;

    QString getNickname() const;
    void setNickname(const QString &nickname);
    bool is_nickname_Set() const;
    bool is_nickname_Valid() const;

    bool isOnboarding() const;
    void setOnboarding(const bool &onboarding);
    bool is_onboarding_Set() const;
    bool is_onboarding_Valid() const;

    OAIUserPermissions getPermissions() const;
    void setPermissions(const OAIUserPermissions &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_timestamp;
    bool m_access_timestamp_isSet;
    bool m_access_timestamp_isValid;

    QString m_account_name;
    bool m_account_name_isSet;
    bool m_account_name_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    bool m_first_login;
    bool m_first_login_isSet;
    bool m_first_login_isValid;

    QString m_home_path;
    bool m_home_path_isSet;
    bool m_home_path_isValid;

    bool m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    QDateTime m_modified;
    bool m_modified_isSet;
    bool m_modified_isValid;

    QString m_nickname;
    bool m_nickname_isSet;
    bool m_nickname_isValid;

    bool m_onboarding;
    bool m_onboarding_isSet;
    bool m_onboarding_isValid;

    OAIUserPermissions m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserAttributes)

#endif // OAIUserAttributes_H
