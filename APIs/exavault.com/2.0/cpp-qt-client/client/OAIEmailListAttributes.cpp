/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmailListAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmailListAttributes::OAIEmailListAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmailListAttributes::OAIEmailListAttributes() {
    this->initializeModel();
}

OAIEmailListAttributes::~OAIEmailListAttributes() {}

void OAIEmailListAttributes::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_emails_isSet = false;
    m_emails_isValid = false;

    m_modified_isSet = false;
    m_modified_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIEmailListAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmailListAttributes::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_emails_isValid = ::OpenAPI::fromJsonValue(m_emails, json[QString("emails")]);
    m_emails_isSet = !json[QString("emails")].isNull() && m_emails_isValid;

    m_modified_isValid = ::OpenAPI::fromJsonValue(m_modified, json[QString("modified")]);
    m_modified_isSet = !json[QString("modified")].isNull() && m_modified_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIEmailListAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmailListAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_emails.size() > 0) {
        obj.insert(QString("emails"), ::OpenAPI::toJsonValue(m_emails));
    }
    if (m_modified_isSet) {
        obj.insert(QString("modified"), ::OpenAPI::toJsonValue(m_modified));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QDateTime OAIEmailListAttributes::getCreated() const {
    return m_created;
}
void OAIEmailListAttributes::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIEmailListAttributes::is_created_Set() const{
    return m_created_isSet;
}

bool OAIEmailListAttributes::is_created_Valid() const{
    return m_created_isValid;
}

QList<QString> OAIEmailListAttributes::getEmails() const {
    return m_emails;
}
void OAIEmailListAttributes::setEmails(const QList<QString> &emails) {
    m_emails = emails;
    m_emails_isSet = true;
}

bool OAIEmailListAttributes::is_emails_Set() const{
    return m_emails_isSet;
}

bool OAIEmailListAttributes::is_emails_Valid() const{
    return m_emails_isValid;
}

QDateTime OAIEmailListAttributes::getModified() const {
    return m_modified;
}
void OAIEmailListAttributes::setModified(const QDateTime &modified) {
    m_modified = modified;
    m_modified_isSet = true;
}

bool OAIEmailListAttributes::is_modified_Set() const{
    return m_modified_isSet;
}

bool OAIEmailListAttributes::is_modified_Valid() const{
    return m_modified_isValid;
}

QString OAIEmailListAttributes::getName() const {
    return m_name;
}
void OAIEmailListAttributes::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEmailListAttributes::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEmailListAttributes::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIEmailListAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmailListAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
