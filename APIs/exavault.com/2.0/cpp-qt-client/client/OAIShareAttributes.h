/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShareAttributes.h
 *
 * Attributes of the share including the name, path and share recipients. 
 */

#ifndef OAIShareAttributes_H
#define OAIShareAttributes_H

#include <QJsonObject>

#include "OAIAccessMode.h"
#include "OAIShareMessage.h"
#include "OAIShareRecipient.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccessMode;
class OAIShareMessage;
class OAIShareRecipient;

class OAIShareAttributes : public OAIObject {
public:
    OAIShareAttributes();
    OAIShareAttributes(QString json);
    ~OAIShareAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessDescription() const;
    void setAccessDescription(const QString &access_description);
    bool is_access_description_Set() const;
    bool is_access_description_Valid() const;

    OAIAccessMode getAccessMode() const;
    void setAccessMode(const OAIAccessMode &access_mode);
    bool is_access_mode_Set() const;
    bool is_access_mode_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    bool isEmbed() const;
    void setEmbed(const bool &embed);
    bool is_embed_Set() const;
    bool is_embed_Valid() const;

    QString getExpiration() const;
    void setExpiration(const QString &expiration);
    bool is_expiration_Set() const;
    bool is_expiration_Valid() const;

    bool isExpired() const;
    void setExpired(const bool &expired);
    bool is_expired_Set() const;
    bool is_expired_Valid() const;

    bool isFileDropCreateFolders() const;
    void setFileDropCreateFolders(const bool &file_drop_create_folders);
    bool is_file_drop_create_folders_Set() const;
    bool is_file_drop_create_folders_Valid() const;

    qint32 getFormId() const;
    void setFormId(const qint32 &form_id);
    bool is_form_id_Set() const;
    bool is_form_id_Valid() const;

    bool isHasNotification() const;
    void setHasNotification(const bool &has_notification);
    bool is_has_notification_Set() const;
    bool is_has_notification_Valid() const;

    bool isHasPassword() const;
    void setHasPassword(const bool &has_password);
    bool is_has_password_Set() const;
    bool is_has_password_Valid() const;

    QString getHash() const;
    void setHash(const QString &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    bool isInherited() const;
    void setInherited(const bool &inherited);
    bool is_inherited_Set() const;
    bool is_inherited_Valid() const;

    QList<OAIShareMessage> getMessages() const;
    void setMessages(const QList<OAIShareMessage> &messages);
    bool is_messages_Set() const;
    bool is_messages_Valid() const;

    QDateTime getModified() const;
    void setModified(const QDateTime &modified);
    bool is_modified_Set() const;
    bool is_modified_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOwnerHash() const;
    void setOwnerHash(const QString &owner_hash);
    bool is_owner_hash_Set() const;
    bool is_owner_hash_Valid() const;

    QList<QString> getPaths() const;
    void setPaths(const QList<QString> &paths);
    bool is_paths_Set() const;
    bool is_paths_Valid() const;

    bool isRPublic() const;
    void setRPublic(const bool &r_public);
    bool is_r_public_Set() const;
    bool is_r_public_Valid() const;

    QList<OAIShareRecipient> getRecipients() const;
    void setRecipients(const QList<OAIShareRecipient> &recipients);
    bool is_recipients_Set() const;
    bool is_recipients_Valid() const;

    bool isRequireEmail() const;
    void setRequireEmail(const bool &require_email);
    bool is_require_email_Set() const;
    bool is_require_email_Valid() const;

    QDateTime getResent() const;
    void setResent(const QDateTime &resent);
    bool is_resent_Set() const;
    bool is_resent_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTrackingStatus() const;
    void setTrackingStatus(const QString &tracking_status);
    bool is_tracking_status_Set() const;
    bool is_tracking_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_description;
    bool m_access_description_isSet;
    bool m_access_description_isValid;

    OAIAccessMode m_access_mode;
    bool m_access_mode_isSet;
    bool m_access_mode_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    bool m_embed;
    bool m_embed_isSet;
    bool m_embed_isValid;

    QString m_expiration;
    bool m_expiration_isSet;
    bool m_expiration_isValid;

    bool m_expired;
    bool m_expired_isSet;
    bool m_expired_isValid;

    bool m_file_drop_create_folders;
    bool m_file_drop_create_folders_isSet;
    bool m_file_drop_create_folders_isValid;

    qint32 m_form_id;
    bool m_form_id_isSet;
    bool m_form_id_isValid;

    bool m_has_notification;
    bool m_has_notification_isSet;
    bool m_has_notification_isValid;

    bool m_has_password;
    bool m_has_password_isSet;
    bool m_has_password_isValid;

    QString m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    bool m_inherited;
    bool m_inherited_isSet;
    bool m_inherited_isValid;

    QList<OAIShareMessage> m_messages;
    bool m_messages_isSet;
    bool m_messages_isValid;

    QDateTime m_modified;
    bool m_modified_isSet;
    bool m_modified_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_owner_hash;
    bool m_owner_hash_isSet;
    bool m_owner_hash_isValid;

    QList<QString> m_paths;
    bool m_paths_isSet;
    bool m_paths_isValid;

    bool m_r_public;
    bool m_r_public_isSet;
    bool m_r_public_isValid;

    QList<OAIShareRecipient> m_recipients;
    bool m_recipients_isSet;
    bool m_recipients_isValid;

    bool m_require_email;
    bool m_require_email_isSet;
    bool m_require_email_isValid;

    QDateTime m_resent;
    bool m_resent_isSet;
    bool m_resent_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_tracking_status;
    bool m_tracking_status_isSet;
    bool m_tracking_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShareAttributes)

#endif // OAIShareAttributes_H
