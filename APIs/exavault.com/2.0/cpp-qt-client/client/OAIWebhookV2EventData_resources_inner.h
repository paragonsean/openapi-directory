/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhookV2EventData_resources_inner.h
 *
 * 
 */

#ifndef OAIWebhookV2EventData_resources_inner_H
#define OAIWebhookV2EventData_resources_inner_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebhookV2EventData_resources_inner : public OAIObject {
public:
    OAIWebhookV2EventData_resources_inner();
    OAIWebhookV2EventData_resources_inner(QString json);
    ~OAIWebhookV2EventData_resources_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAccessedAt() const;
    void setAccessedAt(const QDateTime &accessed_at);
    bool is_accessed_at_Set() const;
    bool is_accessed_at_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    qint32 getFileCount() const;
    void setFileCount(const qint32 &file_count);
    bool is_file_count_Set() const;
    bool is_file_count_Valid() const;

    QString getHash() const;
    void setHash(const QString &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    bool isPreviewable() const;
    void setPreviewable(const bool &previewable);
    bool is_previewable_Set() const;
    bool is_previewable_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QDateTime getUploadDate() const;
    void setUploadDate(const QDateTime &upload_date);
    bool is_upload_date_Set() const;
    bool is_upload_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_accessed_at;
    bool m_accessed_at_isSet;
    bool m_accessed_at_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    qint32 m_file_count;
    bool m_file_count_isSet;
    bool m_file_count_isValid;

    QString m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    bool m_previewable;
    bool m_previewable_isSet;
    bool m_previewable_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QDateTime m_upload_date;
    bool m_upload_date_isSet;
    bool m_upload_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhookV2EventData_resources_inner)

#endif // OAIWebhookV2EventData_resources_inner_H
