/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISSHKey_relationships.h
 *
 * 
 */

#ifndef OAISSHKey_relationships_H
#define OAISSHKey_relationships_H

#include <QJsonObject>

#include "OAISSHKey_relationships_ownerUser.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISSHKey_relationships_ownerUser;

class OAISSHKey_relationships : public OAIObject {
public:
    OAISSHKey_relationships();
    OAISSHKey_relationships(QString json);
    ~OAISSHKey_relationships() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISSHKey_relationships_ownerUser getOwnerUser() const;
    void setOwnerUser(const OAISSHKey_relationships_ownerUser &owner_user);
    bool is_owner_user_Set() const;
    bool is_owner_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISSHKey_relationships_ownerUser m_owner_user;
    bool m_owner_user_isSet;
    bool m_owner_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISSHKey_relationships)

#endif // OAISSHKey_relationships_H
