/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotification_relationships.h
 *
 * 
 */

#ifndef OAINotification_relationships_H
#define OAINotification_relationships_H

#include <QJsonObject>

#include "OAINotification_relationships_ownerUser.h"
#include "OAINotification_relationships_resource.h"
#include "OAINotification_relationships_share.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINotification_relationships_ownerUser;
class OAINotification_relationships_resource;
class OAINotification_relationships_share;

class OAINotification_relationships : public OAIObject {
public:
    OAINotification_relationships();
    OAINotification_relationships(QString json);
    ~OAINotification_relationships() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINotification_relationships_ownerUser getOwnerUser() const;
    void setOwnerUser(const OAINotification_relationships_ownerUser &owner_user);
    bool is_owner_user_Set() const;
    bool is_owner_user_Valid() const;

    OAINotification_relationships_resource getResource() const;
    void setResource(const OAINotification_relationships_resource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    OAINotification_relationships_share getShare() const;
    void setShare(const OAINotification_relationships_share &share);
    bool is_share_Set() const;
    bool is_share_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINotification_relationships_ownerUser m_owner_user;
    bool m_owner_user_isSet;
    bool m_owner_user_isValid;

    OAINotification_relationships_resource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    OAINotification_relationships_share m_share;
    bool m_share_isSet;
    bool m_share_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotification_relationships)

#endif // OAINotification_relationships_H
