/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountAttributes.h
 *
 * 
 */

#ifndef OAIAccountAttributes_H
#define OAIAccountAttributes_H

#include <QJsonObject>

#include "OAIAccountAttributes_allowedIp_inner.h"
#include "OAIBrandingSettings.h"
#include "OAIPlanDetails.h"
#include "OAIQuota.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccountAttributes_allowedIp_inner;
class OAIBrandingSettings;
class OAIPlanDetails;
class OAIQuota;

class OAIAccountAttributes : public OAIObject {
public:
    OAIAccountAttributes();
    OAIAccountAttributes(QString json);
    ~OAIAccountAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountName() const;
    void setAccountName(const QString &account_name);
    bool is_account_name_Set() const;
    bool is_account_name_Valid() const;

    bool isAccountOnboarding() const;
    void setAccountOnboarding(const bool &account_onboarding);
    bool is_account_onboarding_Set() const;
    bool is_account_onboarding_Valid() const;

    QList<OAIAccountAttributes_allowedIp_inner> getAllowedIp() const;
    void setAllowedIp(const QList<OAIAccountAttributes_allowedIp_inner> &allowed_ip);
    bool is_allowed_ip_Set() const;
    bool is_allowed_ip_Valid() const;

    bool isBranding() const;
    void setBranding(const bool &branding);
    bool is_branding_Set() const;
    bool is_branding_Valid() const;

    OAIBrandingSettings getBrandingSettings() const;
    void setBrandingSettings(const OAIBrandingSettings &branding_settings);
    bool is_branding_settings_Set() const;
    bool is_branding_settings_Valid() const;

    qint32 getClientId() const;
    void setClientId(const qint32 &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    bool isComplexPasswords() const;
    void setComplexPasswords(const bool &complex_passwords);
    bool is_complex_passwords_Set() const;
    bool is_complex_passwords_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    bool isCustomDomain() const;
    void setCustomDomain(const bool &custom_domain);
    bool is_custom_domain_Set() const;
    bool is_custom_domain_Valid() const;

    QString getCustomSignature() const;
    void setCustomSignature(const QString &custom_signature);
    bool is_custom_signature_Set() const;
    bool is_custom_signature_Valid() const;

    QList<QString> getExternalDomains() const;
    void setExternalDomains(const QList<QString> &external_domains);
    bool is_external_domains_Set() const;
    bool is_external_domains_Valid() const;

    qint32 getMaxUsers() const;
    void setMaxUsers(const qint32 &max_users);
    bool is_max_users_Set() const;
    bool is_max_users_Valid() const;

    QDateTime getModified() const;
    void setModified(const QDateTime &modified);
    bool is_modified_Set() const;
    bool is_modified_Valid() const;

    OAIPlanDetails getPlanDetails() const;
    void setPlanDetails(const OAIPlanDetails &plan_details);
    bool is_plan_details_Set() const;
    bool is_plan_details_Valid() const;

    OAIQuota getQuota() const;
    void setQuota(const OAIQuota &quota);
    bool is_quota_Set() const;
    bool is_quota_Valid() const;

    bool isSecureOnly() const;
    void setSecureOnly(const bool &secure_only);
    bool is_secure_only_Set() const;
    bool is_secure_only_Valid() const;

    bool isShowReferralLinks() const;
    void setShowReferralLinks(const bool &show_referral_links);
    bool is_show_referral_links_Set() const;
    bool is_show_referral_links_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getUserCount() const;
    void setUserCount(const qint32 &user_count);
    bool is_user_count_Set() const;
    bool is_user_count_Valid() const;

    QString getWelcomeEmailContent() const;
    void setWelcomeEmailContent(const QString &welcome_email_content);
    bool is_welcome_email_content_Set() const;
    bool is_welcome_email_content_Valid() const;

    QString getWelcomeEmailSubject() const;
    void setWelcomeEmailSubject(const QString &welcome_email_subject);
    bool is_welcome_email_subject_Set() const;
    bool is_welcome_email_subject_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_name;
    bool m_account_name_isSet;
    bool m_account_name_isValid;

    bool m_account_onboarding;
    bool m_account_onboarding_isSet;
    bool m_account_onboarding_isValid;

    QList<OAIAccountAttributes_allowedIp_inner> m_allowed_ip;
    bool m_allowed_ip_isSet;
    bool m_allowed_ip_isValid;

    bool m_branding;
    bool m_branding_isSet;
    bool m_branding_isValid;

    OAIBrandingSettings m_branding_settings;
    bool m_branding_settings_isSet;
    bool m_branding_settings_isValid;

    qint32 m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    bool m_complex_passwords;
    bool m_complex_passwords_isSet;
    bool m_complex_passwords_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    bool m_custom_domain;
    bool m_custom_domain_isSet;
    bool m_custom_domain_isValid;

    QString m_custom_signature;
    bool m_custom_signature_isSet;
    bool m_custom_signature_isValid;

    QList<QString> m_external_domains;
    bool m_external_domains_isSet;
    bool m_external_domains_isValid;

    qint32 m_max_users;
    bool m_max_users_isSet;
    bool m_max_users_isValid;

    QDateTime m_modified;
    bool m_modified_isSet;
    bool m_modified_isValid;

    OAIPlanDetails m_plan_details;
    bool m_plan_details_isSet;
    bool m_plan_details_isValid;

    OAIQuota m_quota;
    bool m_quota_isSet;
    bool m_quota_isValid;

    bool m_secure_only;
    bool m_secure_only_isSet;
    bool m_secure_only_isValid;

    bool m_show_referral_links;
    bool m_show_referral_links_isSet;
    bool m_show_referral_links_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_user_count;
    bool m_user_count_isSet;
    bool m_user_count_isValid;

    QString m_welcome_email_content;
    bool m_welcome_email_content_isSet;
    bool m_welcome_email_content_isValid;

    QString m_welcome_email_subject;
    bool m_welcome_email_subject_isSet;
    bool m_welcome_email_subject_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountAttributes)

#endif // OAIAccountAttributes_H
