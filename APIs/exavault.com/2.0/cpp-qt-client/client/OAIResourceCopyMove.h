/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceCopyMove.h
 *
 * Resource which was successfully copied or moved.
 */

#ifndef OAIResourceCopyMove_H
#define OAIResourceCopyMove_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIResource.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResource;

class OAIResourceCopyMove : public OAIObject {
public:
    OAIResourceCopyMove();
    OAIResourceCopyMove(QString json);
    ~OAIResourceCopyMove() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResource getData() const;
    void setData(const OAIResource &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    OAIObject getMeta() const;
    void setMeta(const OAIObject &meta);
    bool is_meta_Set() const;
    bool is_meta_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResource m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    OAIObject m_meta;
    bool m_meta_isSet;
    bool m_meta_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceCopyMove)

#endif // OAIResourceCopyMove_H
