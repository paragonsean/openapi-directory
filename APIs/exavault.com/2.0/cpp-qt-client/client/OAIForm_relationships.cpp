/**
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIForm_relationships.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIForm_relationships::OAIForm_relationships(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIForm_relationships::OAIForm_relationships() {
    this->initializeModel();
}

OAIForm_relationships::~OAIForm_relationships() {}

void OAIForm_relationships::initializeModel() {

    m_share_isSet = false;
    m_share_isValid = false;
}

void OAIForm_relationships::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIForm_relationships::fromJsonObject(QJsonObject json) {

    m_share_isValid = ::OpenAPI::fromJsonValue(m_share, json[QString("share")]);
    m_share_isSet = !json[QString("share")].isNull() && m_share_isValid;
}

QString OAIForm_relationships::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIForm_relationships::asJsonObject() const {
    QJsonObject obj;
    if (m_share.isSet()) {
        obj.insert(QString("share"), ::OpenAPI::toJsonValue(m_share));
    }
    return obj;
}

OAIForm_relationships_share OAIForm_relationships::getShare() const {
    return m_share;
}
void OAIForm_relationships::setShare(const OAIForm_relationships_share &share) {
    m_share = share;
    m_share_isSet = true;
}

bool OAIForm_relationships::is_share_Set() const{
    return m_share_isSet;
}

bool OAIForm_relationships::is_share_Valid() const{
    return m_share_isValid;
}

bool OAIForm_relationships::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_share.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIForm_relationships::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
