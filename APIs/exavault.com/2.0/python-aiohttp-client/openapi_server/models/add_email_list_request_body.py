# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddEmailListRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, emails: List[str]=None, name: str=None):
        """AddEmailListRequestBody - a model defined in OpenAPI

        :param emails: The emails of this AddEmailListRequestBody.
        :param name: The name of this AddEmailListRequestBody.
        """
        self.openapi_types = {
            'emails': List[str],
            'name': str
        }

        self.attribute_map = {
            'emails': 'emails',
            'name': 'name'
        }

        self._emails = emails
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddEmailListRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddEmailListRequestBody of this AddEmailListRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def emails(self):
        """Gets the emails of this AddEmailListRequestBody.

        Array of email addresses to include in the email list. 

        :return: The emails of this AddEmailListRequestBody.
        :rtype: List[str]
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this AddEmailListRequestBody.

        Array of email addresses to include in the email list. 

        :param emails: The emails of this AddEmailListRequestBody.
        :type emails: List[str]
        """
        if emails is None:
            raise ValueError("Invalid value for `emails`, must not be `None`")

        self._emails = emails

    @property
    def name(self):
        """Gets the name of this AddEmailListRequestBody.

        Name of the email list. 

        :return: The name of this AddEmailListRequestBody.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AddEmailListRequestBody.

        Name of the email list. 

        :param name: The name of this AddEmailListRequestBody.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name
