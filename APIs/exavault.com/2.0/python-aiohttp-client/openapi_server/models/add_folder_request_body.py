# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddFolderRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, parent_resource: str=None, path: str=None):
        """AddFolderRequestBody - a model defined in OpenAPI

        :param name: The name of this AddFolderRequestBody.
        :param parent_resource: The parent_resource of this AddFolderRequestBody.
        :param path: The path of this AddFolderRequestBody.
        """
        self.openapi_types = {
            'name': str,
            'parent_resource': str,
            'path': str
        }

        self.attribute_map = {
            'name': 'name',
            'parent_resource': 'parentResource',
            'path': 'path'
        }

        self._name = name
        self._parent_resource = parent_resource
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddFolderRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddFolderRequestBody of this AddFolderRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this AddFolderRequestBody.

        Name of the folder to create. Required if **path** is not used

        :return: The name of this AddFolderRequestBody.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AddFolderRequestBody.

        Name of the folder to create. Required if **path** is not used

        :param name: The name of this AddFolderRequestBody.
        :type name: str
        """

        self._name = name

    @property
    def parent_resource(self):
        """Gets the parent_resource of this AddFolderRequestBody.

        Resource identifier where to create a folder. Required if **path** is not used

        :return: The parent_resource of this AddFolderRequestBody.
        :rtype: str
        """
        return self._parent_resource

    @parent_resource.setter
    def parent_resource(self, parent_resource):
        """Sets the parent_resource of this AddFolderRequestBody.

        Resource identifier where to create a folder. Required if **path** is not used

        :param parent_resource: The parent_resource of this AddFolderRequestBody.
        :type parent_resource: str
        """

        self._parent_resource = parent_resource

    @property
    def path(self):
        """Gets the path of this AddFolderRequestBody.

        Fully-qualified path to the new folder including folder's name

        :return: The path of this AddFolderRequestBody.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this AddFolderRequestBody.

        Fully-qualified path to the new folder including folder's name

        :param path: The path of this AddFolderRequestBody.
        :type path: str
        """

        self._path = path
