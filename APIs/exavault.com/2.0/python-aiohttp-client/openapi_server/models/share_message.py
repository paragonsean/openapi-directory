# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShareMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, created: datetime=None, id: int=None, modified: datetime=None, share_id: int=None, subject: str=None, user_id: int=None):
        """ShareMessage - a model defined in OpenAPI

        :param body: The body of this ShareMessage.
        :param created: The created of this ShareMessage.
        :param id: The id of this ShareMessage.
        :param modified: The modified of this ShareMessage.
        :param share_id: The share_id of this ShareMessage.
        :param subject: The subject of this ShareMessage.
        :param user_id: The user_id of this ShareMessage.
        """
        self.openapi_types = {
            'body': str,
            'created': datetime,
            'id': int,
            'modified': datetime,
            'share_id': int,
            'subject': str,
            'user_id': int
        }

        self.attribute_map = {
            'body': 'body',
            'created': 'created',
            'id': 'id',
            'modified': 'modified',
            'share_id': 'shareId',
            'subject': 'subject',
            'user_id': 'userId'
        }

        self._body = body
        self._created = created
        self._id = id
        self._modified = modified
        self._share_id = share_id
        self._subject = subject
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShareMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShareMessage of this ShareMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this ShareMessage.

        Share invitation message text.

        :return: The body of this ShareMessage.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this ShareMessage.

        Share invitation message text.

        :param body: The body of this ShareMessage.
        :type body: str
        """

        self._body = body

    @property
    def created(self):
        """Gets the created of this ShareMessage.

        Timestamp of message creation.

        :return: The created of this ShareMessage.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ShareMessage.

        Timestamp of message creation.

        :param created: The created of this ShareMessage.
        :type created: datetime
        """

        self._created = created

    @property
    def id(self):
        """Gets the id of this ShareMessage.

        Message id.

        :return: The id of this ShareMessage.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ShareMessage.

        Message id.

        :param id: The id of this ShareMessage.
        :type id: int
        """

        self._id = id

    @property
    def modified(self):
        """Gets the modified of this ShareMessage.

        Timestamp of message modification.

        :return: The modified of this ShareMessage.
        :rtype: datetime
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this ShareMessage.

        Timestamp of message modification.

        :param modified: The modified of this ShareMessage.
        :type modified: datetime
        """

        self._modified = modified

    @property
    def share_id(self):
        """Gets the share_id of this ShareMessage.

        ID of associated share

        :return: The share_id of this ShareMessage.
        :rtype: int
        """
        return self._share_id

    @share_id.setter
    def share_id(self, share_id):
        """Sets the share_id of this ShareMessage.

        ID of associated share

        :param share_id: The share_id of this ShareMessage.
        :type share_id: int
        """

        self._share_id = share_id

    @property
    def subject(self):
        """Gets the subject of this ShareMessage.

        Share invitation message subject.

        :return: The subject of this ShareMessage.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this ShareMessage.

        Share invitation message subject.

        :param subject: The subject of this ShareMessage.
        :type subject: str
        """

        self._subject = subject

    @property
    def user_id(self):
        """Gets the user_id of this ShareMessage.

        User ID who generated share invite

        :return: The user_id of this ShareMessage.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ShareMessage.

        User ID who generated share invite

        :param user_id: The user_id of this ShareMessage.
        :type user_id: int
        """

        self._user_id = user_id
