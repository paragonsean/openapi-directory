# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.form_field import FormField
from openapi_server import util


class FormAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, css_styles: str=None, elements: List[FormField]=None, form_description: str=None, submit_button_text: str=None, success_message: str=None):
        """FormAttributes - a model defined in OpenAPI

        :param css_styles: The css_styles of this FormAttributes.
        :param elements: The elements of this FormAttributes.
        :param form_description: The form_description of this FormAttributes.
        :param submit_button_text: The submit_button_text of this FormAttributes.
        :param success_message: The success_message of this FormAttributes.
        """
        self.openapi_types = {
            'css_styles': str,
            'elements': List[FormField],
            'form_description': str,
            'submit_button_text': str,
            'success_message': str
        }

        self.attribute_map = {
            'css_styles': 'cssStyles',
            'elements': 'elements',
            'form_description': 'formDescription',
            'submit_button_text': 'submitButtonText',
            'success_message': 'successMessage'
        }

        self._css_styles = css_styles
        self._elements = elements
        self._form_description = form_description
        self._submit_button_text = submit_button_text
        self._success_message = success_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormAttributes of this FormAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def css_styles(self):
        """Gets the css_styles of this FormAttributes.

        CSS Styles of the form.

        :return: The css_styles of this FormAttributes.
        :rtype: str
        """
        return self._css_styles

    @css_styles.setter
    def css_styles(self, css_styles):
        """Sets the css_styles of this FormAttributes.

        CSS Styles of the form.

        :param css_styles: The css_styles of this FormAttributes.
        :type css_styles: str
        """

        self._css_styles = css_styles

    @property
    def elements(self):
        """Gets the elements of this FormAttributes.

        Array of form fields defined for the form

        :return: The elements of this FormAttributes.
        :rtype: List[FormField]
        """
        return self._elements

    @elements.setter
    def elements(self, elements):
        """Sets the elements of this FormAttributes.

        Array of form fields defined for the form

        :param elements: The elements of this FormAttributes.
        :type elements: List[FormField]
        """

        self._elements = elements

    @property
    def form_description(self):
        """Gets the form_description of this FormAttributes.

        Text that appears at the top of a receive form

        :return: The form_description of this FormAttributes.
        :rtype: str
        """
        return self._form_description

    @form_description.setter
    def form_description(self, form_description):
        """Sets the form_description of this FormAttributes.

        Text that appears at the top of a receive form

        :param form_description: The form_description of this FormAttributes.
        :type form_description: str
        """

        self._form_description = form_description

    @property
    def submit_button_text(self):
        """Gets the submit_button_text of this FormAttributes.

        Text that appears on the submit button for the form

        :return: The submit_button_text of this FormAttributes.
        :rtype: str
        """
        return self._submit_button_text

    @submit_button_text.setter
    def submit_button_text(self, submit_button_text):
        """Sets the submit_button_text of this FormAttributes.

        Text that appears on the submit button for the form

        :param submit_button_text: The submit_button_text of this FormAttributes.
        :type submit_button_text: str
        """

        self._submit_button_text = submit_button_text

    @property
    def success_message(self):
        """Gets the success_message of this FormAttributes.

        Message displayed to submitter after files are uploaded

        :return: The success_message of this FormAttributes.
        :rtype: str
        """
        return self._success_message

    @success_message.setter
    def success_message(self, success_message):
        """Sets the success_message of this FormAttributes.

        Message displayed to submitter after files are uploaded

        :param success_message: The success_message of this FormAttributes.
        :type success_message: str
        """

        self._success_message = success_message
