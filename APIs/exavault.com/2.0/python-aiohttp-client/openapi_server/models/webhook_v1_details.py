# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebhookV1Details(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_name: str=None, attempt: int=None, attempt_id: str=None, event: str=None, protocol: str=None, username: str=None):
        """WebhookV1Details - a model defined in OpenAPI

        :param account_name: The account_name of this WebhookV1Details.
        :param attempt: The attempt of this WebhookV1Details.
        :param attempt_id: The attempt_id of this WebhookV1Details.
        :param event: The event of this WebhookV1Details.
        :param protocol: The protocol of this WebhookV1Details.
        :param username: The username of this WebhookV1Details.
        """
        self.openapi_types = {
            'account_name': str,
            'attempt': int,
            'attempt_id': str,
            'event': str,
            'protocol': str,
            'username': str
        }

        self.attribute_map = {
            'account_name': 'accountName',
            'attempt': 'attempt',
            'attempt_id': 'attemptId',
            'event': 'event',
            'protocol': 'protocol',
            'username': 'username'
        }

        self._account_name = account_name
        self._attempt = attempt
        self._attempt_id = attempt_id
        self._event = event
        self._protocol = protocol
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebhookV1Details':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebhookV1Details of this WebhookV1Details.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_name(self):
        """Gets the account_name of this WebhookV1Details.

        Account master username

        :return: The account_name of this WebhookV1Details.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this WebhookV1Details.

        Account master username

        :param account_name: The account_name of this WebhookV1Details.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def attempt(self):
        """Gets the attempt of this WebhookV1Details.

        Number of times the system has attempted to send

        :return: The attempt of this WebhookV1Details.
        :rtype: int
        """
        return self._attempt

    @attempt.setter
    def attempt(self, attempt):
        """Sets the attempt of this WebhookV1Details.

        Number of times the system has attempted to send

        :param attempt: The attempt of this WebhookV1Details.
        :type attempt: int
        """

        self._attempt = attempt

    @property
    def attempt_id(self):
        """Gets the attempt_id of this WebhookV1Details.

        Entry - retry identifier

        :return: The attempt_id of this WebhookV1Details.
        :rtype: str
        """
        return self._attempt_id

    @attempt_id.setter
    def attempt_id(self, attempt_id):
        """Sets the attempt_id of this WebhookV1Details.

        Entry - retry identifier

        :param attempt_id: The attempt_id of this WebhookV1Details.
        :type attempt_id: str
        """

        self._attempt_id = attempt_id

    @property
    def event(self):
        """Gets the event of this WebhookV1Details.

        Type of related activity

        :return: The event of this WebhookV1Details.
        :rtype: str
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this WebhookV1Details.

        Type of related activity

        :param event: The event of this WebhookV1Details.
        :type event: str
        """

        self._event = event

    @property
    def protocol(self):
        """Gets the protocol of this WebhookV1Details.

        Type of connection used for related activity

        :return: The protocol of this WebhookV1Details.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this WebhookV1Details.

        Type of connection used for related activity

        :param protocol: The protocol of this WebhookV1Details.
        :type protocol: str
        """

        self._protocol = protocol

    @property
    def username(self):
        """Gets the username of this WebhookV1Details.

        Username logged for related activity. May refer to someone who is not a user of the account, such as a share recipient or \"publ

        :return: The username of this WebhookV1Details.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this WebhookV1Details.

        Username logged for related activity. May refer to someone who is not a user of the account, such as a share recipient or \"publ

        :param username: The username of this WebhookV1Details.
        :type username: str
        """

        self._username = username
