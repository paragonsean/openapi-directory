# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.form import Form
from openapi_server.models.share import Share
from openapi_server import util


class FormResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: Form=None, included: List[Share]=None, response_status: int=None):
        """FormResponse - a model defined in OpenAPI

        :param data: The data of this FormResponse.
        :param included: The included of this FormResponse.
        :param response_status: The response_status of this FormResponse.
        """
        self.openapi_types = {
            'data': Form,
            'included': List[Share],
            'response_status': int
        }

        self.attribute_map = {
            'data': 'data',
            'included': 'included',
            'response_status': 'responseStatus'
        }

        self._data = data
        self._included = included
        self._response_status = response_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormResponse of this FormResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this FormResponse.


        :return: The data of this FormResponse.
        :rtype: Form
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this FormResponse.


        :param data: The data of this FormResponse.
        :type data: Form
        """

        self._data = data

    @property
    def included(self):
        """Gets the included of this FormResponse.


        :return: The included of this FormResponse.
        :rtype: List[Share]
        """
        return self._included

    @included.setter
    def included(self, included):
        """Sets the included of this FormResponse.


        :param included: The included of this FormResponse.
        :type included: List[Share]
        """

        self._included = included

    @property
    def response_status(self):
        """Gets the response_status of this FormResponse.

        Http status code of the response. 

        :return: The response_status of this FormResponse.
        :rtype: int
        """
        return self._response_status

    @response_status.setter
    def response_status(self, response_status):
        """Sets the response_status of this FormResponse.

        Http status code of the response. 

        :param response_status: The response_status of this FormResponse.
        :type response_status: int
        """

        self._response_status = response_status
