# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_relationships_home_resource import UserRelationshipsHomeResource
from openapi_server.models.user_relationships_owner_account import UserRelationshipsOwnerAccount
from openapi_server import util


class UserRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, home_resource: UserRelationshipsHomeResource=None, owner_account: UserRelationshipsOwnerAccount=None):
        """UserRelationships - a model defined in OpenAPI

        :param home_resource: The home_resource of this UserRelationships.
        :param owner_account: The owner_account of this UserRelationships.
        """
        self.openapi_types = {
            'home_resource': UserRelationshipsHomeResource,
            'owner_account': UserRelationshipsOwnerAccount
        }

        self.attribute_map = {
            'home_resource': 'homeResource',
            'owner_account': 'ownerAccount'
        }

        self._home_resource = home_resource
        self._owner_account = owner_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User_relationships of this UserRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def home_resource(self):
        """Gets the home_resource of this UserRelationships.


        :return: The home_resource of this UserRelationships.
        :rtype: UserRelationshipsHomeResource
        """
        return self._home_resource

    @home_resource.setter
    def home_resource(self, home_resource):
        """Sets the home_resource of this UserRelationships.


        :param home_resource: The home_resource of this UserRelationships.
        :type home_resource: UserRelationshipsHomeResource
        """

        self._home_resource = home_resource

    @property
    def owner_account(self):
        """Gets the owner_account of this UserRelationships.


        :return: The owner_account of this UserRelationships.
        :rtype: UserRelationshipsOwnerAccount
        """
        return self._owner_account

    @owner_account.setter
    def owner_account(self, owner_account):
        """Sets the owner_account of this UserRelationships.


        :param owner_account: The owner_account of this UserRelationships.
        :type owner_account: UserRelationshipsOwnerAccount
        """
        if owner_account is None:
            raise ValueError("Invalid value for `owner_account`, must not be `None`")

        self._owner_account = owner_account
