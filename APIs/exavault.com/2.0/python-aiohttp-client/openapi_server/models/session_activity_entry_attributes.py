# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SessionActivityEntryAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bytes_transferred: int=None, created: str=None, duration: int=None, file_name: str=None, file_source: str=None, ip_address: str=None, operation: str=None, protocol: str=None, session_id: str=None, status: str=None, username: str=None):
        """SessionActivityEntryAttributes - a model defined in OpenAPI

        :param bytes_transferred: The bytes_transferred of this SessionActivityEntryAttributes.
        :param created: The created of this SessionActivityEntryAttributes.
        :param duration: The duration of this SessionActivityEntryAttributes.
        :param file_name: The file_name of this SessionActivityEntryAttributes.
        :param file_source: The file_source of this SessionActivityEntryAttributes.
        :param ip_address: The ip_address of this SessionActivityEntryAttributes.
        :param operation: The operation of this SessionActivityEntryAttributes.
        :param protocol: The protocol of this SessionActivityEntryAttributes.
        :param session_id: The session_id of this SessionActivityEntryAttributes.
        :param status: The status of this SessionActivityEntryAttributes.
        :param username: The username of this SessionActivityEntryAttributes.
        """
        self.openapi_types = {
            'bytes_transferred': int,
            'created': str,
            'duration': int,
            'file_name': str,
            'file_source': str,
            'ip_address': str,
            'operation': str,
            'protocol': str,
            'session_id': str,
            'status': str,
            'username': str
        }

        self.attribute_map = {
            'bytes_transferred': 'bytesTransferred',
            'created': 'created',
            'duration': 'duration',
            'file_name': 'fileName',
            'file_source': 'fileSource',
            'ip_address': 'ipAddress',
            'operation': 'operation',
            'protocol': 'protocol',
            'session_id': 'sessionId',
            'status': 'status',
            'username': 'username'
        }

        self._bytes_transferred = bytes_transferred
        self._created = created
        self._duration = duration
        self._file_name = file_name
        self._file_source = file_source
        self._ip_address = ip_address
        self._operation = operation
        self._protocol = protocol
        self._session_id = session_id
        self._status = status
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SessionActivityEntryAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SessionActivityEntry_attributes of this SessionActivityEntryAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bytes_transferred(self):
        """Gets the bytes_transferred of this SessionActivityEntryAttributes.


        :return: The bytes_transferred of this SessionActivityEntryAttributes.
        :rtype: int
        """
        return self._bytes_transferred

    @bytes_transferred.setter
    def bytes_transferred(self, bytes_transferred):
        """Sets the bytes_transferred of this SessionActivityEntryAttributes.


        :param bytes_transferred: The bytes_transferred of this SessionActivityEntryAttributes.
        :type bytes_transferred: int
        """

        self._bytes_transferred = bytes_transferred

    @property
    def created(self):
        """Gets the created of this SessionActivityEntryAttributes.


        :return: The created of this SessionActivityEntryAttributes.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this SessionActivityEntryAttributes.


        :param created: The created of this SessionActivityEntryAttributes.
        :type created: str
        """

        self._created = created

    @property
    def duration(self):
        """Gets the duration of this SessionActivityEntryAttributes.


        :return: The duration of this SessionActivityEntryAttributes.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this SessionActivityEntryAttributes.


        :param duration: The duration of this SessionActivityEntryAttributes.
        :type duration: int
        """

        self._duration = duration

    @property
    def file_name(self):
        """Gets the file_name of this SessionActivityEntryAttributes.


        :return: The file_name of this SessionActivityEntryAttributes.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this SessionActivityEntryAttributes.


        :param file_name: The file_name of this SessionActivityEntryAttributes.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def file_source(self):
        """Gets the file_source of this SessionActivityEntryAttributes.


        :return: The file_source of this SessionActivityEntryAttributes.
        :rtype: str
        """
        return self._file_source

    @file_source.setter
    def file_source(self, file_source):
        """Sets the file_source of this SessionActivityEntryAttributes.


        :param file_source: The file_source of this SessionActivityEntryAttributes.
        :type file_source: str
        """

        self._file_source = file_source

    @property
    def ip_address(self):
        """Gets the ip_address of this SessionActivityEntryAttributes.


        :return: The ip_address of this SessionActivityEntryAttributes.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this SessionActivityEntryAttributes.


        :param ip_address: The ip_address of this SessionActivityEntryAttributes.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def operation(self):
        """Gets the operation of this SessionActivityEntryAttributes.


        :return: The operation of this SessionActivityEntryAttributes.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this SessionActivityEntryAttributes.


        :param operation: The operation of this SessionActivityEntryAttributes.
        :type operation: str
        """

        self._operation = operation

    @property
    def protocol(self):
        """Gets the protocol of this SessionActivityEntryAttributes.


        :return: The protocol of this SessionActivityEntryAttributes.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this SessionActivityEntryAttributes.


        :param protocol: The protocol of this SessionActivityEntryAttributes.
        :type protocol: str
        """

        self._protocol = protocol

    @property
    def session_id(self):
        """Gets the session_id of this SessionActivityEntryAttributes.


        :return: The session_id of this SessionActivityEntryAttributes.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this SessionActivityEntryAttributes.


        :param session_id: The session_id of this SessionActivityEntryAttributes.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def status(self):
        """Gets the status of this SessionActivityEntryAttributes.


        :return: The status of this SessionActivityEntryAttributes.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SessionActivityEntryAttributes.


        :param status: The status of this SessionActivityEntryAttributes.
        :type status: str
        """

        self._status = status

    @property
    def username(self):
        """Gets the username of this SessionActivityEntryAttributes.


        :return: The username of this SessionActivityEntryAttributes.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this SessionActivityEntryAttributes.


        :param username: The username of this SessionActivityEntryAttributes.
        :type username: str
        """

        self._username = username
