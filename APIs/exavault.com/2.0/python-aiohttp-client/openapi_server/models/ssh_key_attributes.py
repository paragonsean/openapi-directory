# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SSHKeyAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, fingerprint: str=None, last_login: datetime=None):
        """SSHKeyAttributes - a model defined in OpenAPI

        :param created: The created of this SSHKeyAttributes.
        :param fingerprint: The fingerprint of this SSHKeyAttributes.
        :param last_login: The last_login of this SSHKeyAttributes.
        """
        self.openapi_types = {
            'created': datetime,
            'fingerprint': str,
            'last_login': datetime
        }

        self.attribute_map = {
            'created': 'created',
            'fingerprint': 'fingerprint',
            'last_login': 'lastLogin'
        }

        self._created = created
        self._fingerprint = fingerprint
        self._last_login = last_login

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SSHKeyAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SSHKeyAttributes of this SSHKeyAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this SSHKeyAttributes.

        The date-time the SSH Key was created.

        :return: The created of this SSHKeyAttributes.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this SSHKeyAttributes.

        The date-time the SSH Key was created.

        :param created: The created of this SSHKeyAttributes.
        :type created: datetime
        """

        self._created = created

    @property
    def fingerprint(self):
        """Gets the fingerprint of this SSHKeyAttributes.

        The Key Fingerprint. The fingerprint can be used to identify and keep track of the key without exposing the actual credential. 

        :return: The fingerprint of this SSHKeyAttributes.
        :rtype: str
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint):
        """Sets the fingerprint of this SSHKeyAttributes.

        The Key Fingerprint. The fingerprint can be used to identify and keep track of the key without exposing the actual credential. 

        :param fingerprint: The fingerprint of this SSHKeyAttributes.
        :type fingerprint: str
        """

        self._fingerprint = fingerprint

    @property
    def last_login(self):
        """Gets the last_login of this SSHKeyAttributes.

        The date-time the SSH Key was last used to access ExaVault. 

        :return: The last_login of this SSHKeyAttributes.
        :rtype: datetime
        """
        return self._last_login

    @last_login.setter
    def last_login(self, last_login):
        """Sets the last_login of this SSHKeyAttributes.

        The date-time the SSH Key was last used to access ExaVault. 

        :param last_login: The last_login of this SSHKeyAttributes.
        :type last_login: datetime
        """

        self._last_login = last_login
