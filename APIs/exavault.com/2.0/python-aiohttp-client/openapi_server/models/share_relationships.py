# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.share_relationships_message import ShareRelationshipsMessage
from openapi_server.models.share_relationships_notification import ShareRelationshipsNotification
from openapi_server.models.share_relationships_owner import ShareRelationshipsOwner
from openapi_server.models.share_relationships_resource import ShareRelationshipsResource
from openapi_server import util


class ShareRelationships(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages: List[ShareRelationshipsMessage]=None, notifications: List[ShareRelationshipsNotification]=None, owner: ShareRelationshipsOwner=None, resources: List[ShareRelationshipsResource]=None):
        """ShareRelationships - a model defined in OpenAPI

        :param messages: The messages of this ShareRelationships.
        :param notifications: The notifications of this ShareRelationships.
        :param owner: The owner of this ShareRelationships.
        :param resources: The resources of this ShareRelationships.
        """
        self.openapi_types = {
            'messages': List[ShareRelationshipsMessage],
            'notifications': List[ShareRelationshipsNotification],
            'owner': ShareRelationshipsOwner,
            'resources': List[ShareRelationshipsResource]
        }

        self.attribute_map = {
            'messages': 'messages',
            'notifications': 'notifications',
            'owner': 'owner',
            'resources': 'resources'
        }

        self._messages = messages
        self._notifications = notifications
        self._owner = owner
        self._resources = resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShareRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShareRelationships of this ShareRelationships.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages(self):
        """Gets the messages of this ShareRelationships.


        :return: The messages of this ShareRelationships.
        :rtype: List[ShareRelationshipsMessage]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this ShareRelationships.


        :param messages: The messages of this ShareRelationships.
        :type messages: List[ShareRelationshipsMessage]
        """

        self._messages = messages

    @property
    def notifications(self):
        """Gets the notifications of this ShareRelationships.


        :return: The notifications of this ShareRelationships.
        :rtype: List[ShareRelationshipsNotification]
        """
        return self._notifications

    @notifications.setter
    def notifications(self, notifications):
        """Sets the notifications of this ShareRelationships.


        :param notifications: The notifications of this ShareRelationships.
        :type notifications: List[ShareRelationshipsNotification]
        """

        self._notifications = notifications

    @property
    def owner(self):
        """Gets the owner of this ShareRelationships.


        :return: The owner of this ShareRelationships.
        :rtype: ShareRelationshipsOwner
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this ShareRelationships.


        :param owner: The owner of this ShareRelationships.
        :type owner: ShareRelationshipsOwner
        """

        self._owner = owner

    @property
    def resources(self):
        """Gets the resources of this ShareRelationships.


        :return: The resources of this ShareRelationships.
        :rtype: List[ShareRelationshipsResource]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this ShareRelationships.


        :param resources: The resources of this ShareRelationships.
        :type resources: List[ShareRelationshipsResource]
        """

        self._resources = resources
