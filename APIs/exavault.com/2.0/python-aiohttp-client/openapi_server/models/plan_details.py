# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.plan_details_webhook_options import PlanDetailsWebhookOptions
from openapi_server import util


class PlanDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_keys: int=None, api_tokens: int=None, color_schema: bool=None, custom_domain: bool=None, custom_name: bool=None, direct_links: bool=None, ip_whitelist: bool=None, sharing_options: List[str]=None, ssh_keys: int=None, storage_add_on: int=None, unlimited_users: bool=None, user_expiration: bool=None, user_import: bool=None, webhook_options: PlanDetailsWebhookOptions=None):
        """PlanDetails - a model defined in OpenAPI

        :param api_keys: The api_keys of this PlanDetails.
        :param api_tokens: The api_tokens of this PlanDetails.
        :param color_schema: The color_schema of this PlanDetails.
        :param custom_domain: The custom_domain of this PlanDetails.
        :param custom_name: The custom_name of this PlanDetails.
        :param direct_links: The direct_links of this PlanDetails.
        :param ip_whitelist: The ip_whitelist of this PlanDetails.
        :param sharing_options: The sharing_options of this PlanDetails.
        :param ssh_keys: The ssh_keys of this PlanDetails.
        :param storage_add_on: The storage_add_on of this PlanDetails.
        :param unlimited_users: The unlimited_users of this PlanDetails.
        :param user_expiration: The user_expiration of this PlanDetails.
        :param user_import: The user_import of this PlanDetails.
        :param webhook_options: The webhook_options of this PlanDetails.
        """
        self.openapi_types = {
            'api_keys': int,
            'api_tokens': int,
            'color_schema': bool,
            'custom_domain': bool,
            'custom_name': bool,
            'direct_links': bool,
            'ip_whitelist': bool,
            'sharing_options': List[str],
            'ssh_keys': int,
            'storage_add_on': int,
            'unlimited_users': bool,
            'user_expiration': bool,
            'user_import': bool,
            'webhook_options': PlanDetailsWebhookOptions
        }

        self.attribute_map = {
            'api_keys': 'apiKeys',
            'api_tokens': 'apiTokens',
            'color_schema': 'colorSchema',
            'custom_domain': 'customDomain',
            'custom_name': 'customName',
            'direct_links': 'directLinks',
            'ip_whitelist': 'ipWhitelist',
            'sharing_options': 'sharingOptions',
            'ssh_keys': 'sshKeys',
            'storage_add_on': 'storageAddOn',
            'unlimited_users': 'unlimitedUsers',
            'user_expiration': 'userExpiration',
            'user_import': 'userImport',
            'webhook_options': 'webhookOptions'
        }

        self._api_keys = api_keys
        self._api_tokens = api_tokens
        self._color_schema = color_schema
        self._custom_domain = custom_domain
        self._custom_name = custom_name
        self._direct_links = direct_links
        self._ip_whitelist = ip_whitelist
        self._sharing_options = sharing_options
        self._ssh_keys = ssh_keys
        self._storage_add_on = storage_add_on
        self._unlimited_users = unlimited_users
        self._user_expiration = user_expiration
        self._user_import = user_import
        self._webhook_options = webhook_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlanDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlanDetails of this PlanDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_keys(self):
        """Gets the api_keys of this PlanDetails.


        :return: The api_keys of this PlanDetails.
        :rtype: int
        """
        return self._api_keys

    @api_keys.setter
    def api_keys(self, api_keys):
        """Sets the api_keys of this PlanDetails.


        :param api_keys: The api_keys of this PlanDetails.
        :type api_keys: int
        """

        self._api_keys = api_keys

    @property
    def api_tokens(self):
        """Gets the api_tokens of this PlanDetails.


        :return: The api_tokens of this PlanDetails.
        :rtype: int
        """
        return self._api_tokens

    @api_tokens.setter
    def api_tokens(self, api_tokens):
        """Sets the api_tokens of this PlanDetails.


        :param api_tokens: The api_tokens of this PlanDetails.
        :type api_tokens: int
        """

        self._api_tokens = api_tokens

    @property
    def color_schema(self):
        """Gets the color_schema of this PlanDetails.


        :return: The color_schema of this PlanDetails.
        :rtype: bool
        """
        return self._color_schema

    @color_schema.setter
    def color_schema(self, color_schema):
        """Sets the color_schema of this PlanDetails.


        :param color_schema: The color_schema of this PlanDetails.
        :type color_schema: bool
        """

        self._color_schema = color_schema

    @property
    def custom_domain(self):
        """Gets the custom_domain of this PlanDetails.


        :return: The custom_domain of this PlanDetails.
        :rtype: bool
        """
        return self._custom_domain

    @custom_domain.setter
    def custom_domain(self, custom_domain):
        """Sets the custom_domain of this PlanDetails.


        :param custom_domain: The custom_domain of this PlanDetails.
        :type custom_domain: bool
        """

        self._custom_domain = custom_domain

    @property
    def custom_name(self):
        """Gets the custom_name of this PlanDetails.


        :return: The custom_name of this PlanDetails.
        :rtype: bool
        """
        return self._custom_name

    @custom_name.setter
    def custom_name(self, custom_name):
        """Sets the custom_name of this PlanDetails.


        :param custom_name: The custom_name of this PlanDetails.
        :type custom_name: bool
        """

        self._custom_name = custom_name

    @property
    def direct_links(self):
        """Gets the direct_links of this PlanDetails.


        :return: The direct_links of this PlanDetails.
        :rtype: bool
        """
        return self._direct_links

    @direct_links.setter
    def direct_links(self, direct_links):
        """Sets the direct_links of this PlanDetails.


        :param direct_links: The direct_links of this PlanDetails.
        :type direct_links: bool
        """

        self._direct_links = direct_links

    @property
    def ip_whitelist(self):
        """Gets the ip_whitelist of this PlanDetails.


        :return: The ip_whitelist of this PlanDetails.
        :rtype: bool
        """
        return self._ip_whitelist

    @ip_whitelist.setter
    def ip_whitelist(self, ip_whitelist):
        """Sets the ip_whitelist of this PlanDetails.


        :param ip_whitelist: The ip_whitelist of this PlanDetails.
        :type ip_whitelist: bool
        """

        self._ip_whitelist = ip_whitelist

    @property
    def sharing_options(self):
        """Gets the sharing_options of this PlanDetails.


        :return: The sharing_options of this PlanDetails.
        :rtype: List[str]
        """
        return self._sharing_options

    @sharing_options.setter
    def sharing_options(self, sharing_options):
        """Sets the sharing_options of this PlanDetails.


        :param sharing_options: The sharing_options of this PlanDetails.
        :type sharing_options: List[str]
        """

        self._sharing_options = sharing_options

    @property
    def ssh_keys(self):
        """Gets the ssh_keys of this PlanDetails.


        :return: The ssh_keys of this PlanDetails.
        :rtype: int
        """
        return self._ssh_keys

    @ssh_keys.setter
    def ssh_keys(self, ssh_keys):
        """Sets the ssh_keys of this PlanDetails.


        :param ssh_keys: The ssh_keys of this PlanDetails.
        :type ssh_keys: int
        """

        self._ssh_keys = ssh_keys

    @property
    def storage_add_on(self):
        """Gets the storage_add_on of this PlanDetails.


        :return: The storage_add_on of this PlanDetails.
        :rtype: int
        """
        return self._storage_add_on

    @storage_add_on.setter
    def storage_add_on(self, storage_add_on):
        """Sets the storage_add_on of this PlanDetails.


        :param storage_add_on: The storage_add_on of this PlanDetails.
        :type storage_add_on: int
        """

        self._storage_add_on = storage_add_on

    @property
    def unlimited_users(self):
        """Gets the unlimited_users of this PlanDetails.


        :return: The unlimited_users of this PlanDetails.
        :rtype: bool
        """
        return self._unlimited_users

    @unlimited_users.setter
    def unlimited_users(self, unlimited_users):
        """Sets the unlimited_users of this PlanDetails.


        :param unlimited_users: The unlimited_users of this PlanDetails.
        :type unlimited_users: bool
        """

        self._unlimited_users = unlimited_users

    @property
    def user_expiration(self):
        """Gets the user_expiration of this PlanDetails.


        :return: The user_expiration of this PlanDetails.
        :rtype: bool
        """
        return self._user_expiration

    @user_expiration.setter
    def user_expiration(self, user_expiration):
        """Sets the user_expiration of this PlanDetails.


        :param user_expiration: The user_expiration of this PlanDetails.
        :type user_expiration: bool
        """

        self._user_expiration = user_expiration

    @property
    def user_import(self):
        """Gets the user_import of this PlanDetails.


        :return: The user_import of this PlanDetails.
        :rtype: bool
        """
        return self._user_import

    @user_import.setter
    def user_import(self, user_import):
        """Sets the user_import of this PlanDetails.


        :param user_import: The user_import of this PlanDetails.
        :type user_import: bool
        """

        self._user_import = user_import

    @property
    def webhook_options(self):
        """Gets the webhook_options of this PlanDetails.


        :return: The webhook_options of this PlanDetails.
        :rtype: PlanDetailsWebhookOptions
        """
        return self._webhook_options

    @webhook_options.setter
    def webhook_options(self, webhook_options):
        """Sets the webhook_options of this PlanDetails.


        :param webhook_options: The webhook_options of this PlanDetails.
        :type webhook_options: PlanDetailsWebhookOptions
        """

        self._webhook_options = webhook_options
