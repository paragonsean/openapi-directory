# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteResourcesRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resources: List[str]=None):
        """DeleteResourcesRequestBody - a model defined in OpenAPI

        :param resources: The resources of this DeleteResourcesRequestBody.
        """
        self.openapi_types = {
            'resources': List[str]
        }

        self.attribute_map = {
            'resources': 'resources'
        }

        self._resources = resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteResourcesRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteResourcesRequestBody of this DeleteResourcesRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resources(self):
        """Gets the resources of this DeleteResourcesRequestBody.

        Resource identifiers of items to delete.

        :return: The resources of this DeleteResourcesRequestBody.
        :rtype: List[str]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this DeleteResourcesRequestBody.

        Resource identifiers of items to delete.

        :param resources: The resources of this DeleteResourcesRequestBody.
        :type resources: List[str]
        """
        if resources is None:
            raise ValueError("Invalid value for `resources`, must not be `None`")

        self._resources = resources
