/*
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccessMode;
import org.openapitools.client.model.AddShareRequestBodyRecipientsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateShareRequestBody
 */
public class UpdateShareRequestBodyTest {
    private final UpdateShareRequestBody model = new UpdateShareRequestBody();

    /**
     * Model tests for UpdateShareRequestBody
     */
    @Test
    public void testUpdateShareRequestBody() {
        // TODO: test UpdateShareRequestBody
    }

    /**
     * Test the property 'accessMode'
     */
    @Test
    public void accessModeTest() {
        // TODO: test accessMode
    }

    /**
     * Test the property 'embed'
     */
    @Test
    public void embedTest() {
        // TODO: test embed
    }

    /**
     * Test the property 'expiration'
     */
    @Test
    public void expirationTest() {
        // TODO: test expiration
    }

    /**
     * Test the property 'fileDropCreateFolders'
     */
    @Test
    public void fileDropCreateFoldersTest() {
        // TODO: test fileDropCreateFolders
    }

    /**
     * Test the property 'hasNotification'
     */
    @Test
    public void hasNotificationTest() {
        // TODO: test hasNotification
    }

    /**
     * Test the property 'isPublic'
     */
    @Test
    public void isPublicTest() {
        // TODO: test isPublic
    }

    /**
     * Test the property 'messageBody'
     */
    @Test
    public void messageBodyTest() {
        // TODO: test messageBody
    }

    /**
     * Test the property 'messageSubject'
     */
    @Test
    public void messageSubjectTest() {
        // TODO: test messageSubject
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'notificationEmails'
     */
    @Test
    public void notificationEmailsTest() {
        // TODO: test notificationEmails
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'recipients'
     */
    @Test
    public void recipientsTest() {
        // TODO: test recipients
    }

    /**
     * Test the property 'requireEmail'
     */
    @Test
    public void requireEmailTest() {
        // TODO: test requireEmail
    }

    /**
     * Test the property 'resources'
     */
    @Test
    public void resourcesTest() {
        // TODO: test resources
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

}
