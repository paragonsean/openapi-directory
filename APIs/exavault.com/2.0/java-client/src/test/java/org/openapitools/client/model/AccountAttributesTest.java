/*
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountAttributesAllowedIpInner;
import org.openapitools.client.model.BrandingSettings;
import org.openapitools.client.model.PlanDetails;
import org.openapitools.client.model.Quota;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AccountAttributes
 */
public class AccountAttributesTest {
    private final AccountAttributes model = new AccountAttributes();

    /**
     * Model tests for AccountAttributes
     */
    @Test
    public void testAccountAttributes() {
        // TODO: test AccountAttributes
    }

    /**
     * Test the property 'accountName'
     */
    @Test
    public void accountNameTest() {
        // TODO: test accountName
    }

    /**
     * Test the property 'accountOnboarding'
     */
    @Test
    public void accountOnboardingTest() {
        // TODO: test accountOnboarding
    }

    /**
     * Test the property 'allowedIp'
     */
    @Test
    public void allowedIpTest() {
        // TODO: test allowedIp
    }

    /**
     * Test the property 'branding'
     */
    @Test
    public void brandingTest() {
        // TODO: test branding
    }

    /**
     * Test the property 'brandingSettings'
     */
    @Test
    public void brandingSettingsTest() {
        // TODO: test brandingSettings
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    public void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'complexPasswords'
     */
    @Test
    public void complexPasswordsTest() {
        // TODO: test complexPasswords
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'customDomain'
     */
    @Test
    public void customDomainTest() {
        // TODO: test customDomain
    }

    /**
     * Test the property 'customSignature'
     */
    @Test
    public void customSignatureTest() {
        // TODO: test customSignature
    }

    /**
     * Test the property 'externalDomains'
     */
    @Test
    public void externalDomainsTest() {
        // TODO: test externalDomains
    }

    /**
     * Test the property 'maxUsers'
     */
    @Test
    public void maxUsersTest() {
        // TODO: test maxUsers
    }

    /**
     * Test the property 'modified'
     */
    @Test
    public void modifiedTest() {
        // TODO: test modified
    }

    /**
     * Test the property 'planDetails'
     */
    @Test
    public void planDetailsTest() {
        // TODO: test planDetails
    }

    /**
     * Test the property 'quota'
     */
    @Test
    public void quotaTest() {
        // TODO: test quota
    }

    /**
     * Test the property 'secureOnly'
     */
    @Test
    public void secureOnlyTest() {
        // TODO: test secureOnly
    }

    /**
     * Test the property 'showReferralLinks'
     */
    @Test
    public void showReferralLinksTest() {
        // TODO: test showReferralLinks
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'userCount'
     */
    @Test
    public void userCountTest() {
        // TODO: test userCount
    }

    /**
     * Test the property 'welcomeEmailContent'
     */
    @Test
    public void welcomeEmailContentTest() {
        // TODO: test welcomeEmailContent
    }

    /**
     * Test the property 'welcomeEmailSubject'
     */
    @Test
    public void welcomeEmailSubjectTest() {
        // TODO: test welcomeEmailSubject
    }

}
