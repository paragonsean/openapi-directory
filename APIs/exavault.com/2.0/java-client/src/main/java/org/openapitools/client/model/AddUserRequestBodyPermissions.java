/*
 * ExaVault
 * ExaVaults API allows you to incorporate ExaVaults suite of file transfer and user management tools into your own application.\\nExaVault supports both POST (recommended when requesting large data sets) and GET operations, and requires an API key in order to use.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@exavault.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An object containing name/value pairs for each permission. Any permission that is not passed will be set to &#x60;false&#x60; by default. Note that users will be unable to see any files in the account unless you include &#x60;list&#x60; permission. When creating a user with the &#x60;role&#x60; **admin**, you should set all of the permissions to &#x60;true&#x60;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:39.505408-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AddUserRequestBodyPermissions {
  public static final String SERIALIZED_NAME_CHANGE_PASSWORD = "changePassword";
  @SerializedName(SERIALIZED_NAME_CHANGE_PASSWORD)
  private Boolean changePassword;

  public static final String SERIALIZED_NAME_DELETE = "delete";
  @SerializedName(SERIALIZED_NAME_DELETE)
  private Boolean delete;

  public static final String SERIALIZED_NAME_DELETE_FORM_DATA = "deleteFormData";
  @SerializedName(SERIALIZED_NAME_DELETE_FORM_DATA)
  private Boolean deleteFormData;

  public static final String SERIALIZED_NAME_DOWNLOAD = "download";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD)
  private Boolean download;

  public static final String SERIALIZED_NAME_LIST = "list";
  @SerializedName(SERIALIZED_NAME_LIST)
  private Boolean _list;

  public static final String SERIALIZED_NAME_MODIFY = "modify";
  @SerializedName(SERIALIZED_NAME_MODIFY)
  private Boolean modify;

  public static final String SERIALIZED_NAME_NOTIFICATION = "notification";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION)
  private Boolean notification;

  public static final String SERIALIZED_NAME_SHARE = "share";
  @SerializedName(SERIALIZED_NAME_SHARE)
  private Boolean share;

  public static final String SERIALIZED_NAME_UPLOAD = "upload";
  @SerializedName(SERIALIZED_NAME_UPLOAD)
  private Boolean upload;

  public static final String SERIALIZED_NAME_VIEW_FORM_DATA = "viewFormData";
  @SerializedName(SERIALIZED_NAME_VIEW_FORM_DATA)
  private Boolean viewFormData;

  public AddUserRequestBodyPermissions() {
  }

  public AddUserRequestBodyPermissions changePassword(Boolean changePassword) {
    this.changePassword = changePassword;
    return this;
  }

  /**
   * Get changePassword
   * @return changePassword
   */
  @javax.annotation.Nullable
  public Boolean getChangePassword() {
    return changePassword;
  }

  public void setChangePassword(Boolean changePassword) {
    this.changePassword = changePassword;
  }


  public AddUserRequestBodyPermissions delete(Boolean delete) {
    this.delete = delete;
    return this;
  }

  /**
   * Get delete
   * @return delete
   */
  @javax.annotation.Nullable
  public Boolean getDelete() {
    return delete;
  }

  public void setDelete(Boolean delete) {
    this.delete = delete;
  }


  public AddUserRequestBodyPermissions deleteFormData(Boolean deleteFormData) {
    this.deleteFormData = deleteFormData;
    return this;
  }

  /**
   * Get deleteFormData
   * @return deleteFormData
   */
  @javax.annotation.Nullable
  public Boolean getDeleteFormData() {
    return deleteFormData;
  }

  public void setDeleteFormData(Boolean deleteFormData) {
    this.deleteFormData = deleteFormData;
  }


  public AddUserRequestBodyPermissions download(Boolean download) {
    this.download = download;
    return this;
  }

  /**
   * Get download
   * @return download
   */
  @javax.annotation.Nullable
  public Boolean getDownload() {
    return download;
  }

  public void setDownload(Boolean download) {
    this.download = download;
  }


  public AddUserRequestBodyPermissions _list(Boolean _list) {
    this._list = _list;
    return this;
  }

  /**
   * Get _list
   * @return _list
   */
  @javax.annotation.Nullable
  public Boolean getList() {
    return _list;
  }

  public void setList(Boolean _list) {
    this._list = _list;
  }


  public AddUserRequestBodyPermissions modify(Boolean modify) {
    this.modify = modify;
    return this;
  }

  /**
   * Get modify
   * @return modify
   */
  @javax.annotation.Nullable
  public Boolean getModify() {
    return modify;
  }

  public void setModify(Boolean modify) {
    this.modify = modify;
  }


  public AddUserRequestBodyPermissions notification(Boolean notification) {
    this.notification = notification;
    return this;
  }

  /**
   * Get notification
   * @return notification
   */
  @javax.annotation.Nullable
  public Boolean getNotification() {
    return notification;
  }

  public void setNotification(Boolean notification) {
    this.notification = notification;
  }


  public AddUserRequestBodyPermissions share(Boolean share) {
    this.share = share;
    return this;
  }

  /**
   * Get share
   * @return share
   */
  @javax.annotation.Nullable
  public Boolean getShare() {
    return share;
  }

  public void setShare(Boolean share) {
    this.share = share;
  }


  public AddUserRequestBodyPermissions upload(Boolean upload) {
    this.upload = upload;
    return this;
  }

  /**
   * Get upload
   * @return upload
   */
  @javax.annotation.Nullable
  public Boolean getUpload() {
    return upload;
  }

  public void setUpload(Boolean upload) {
    this.upload = upload;
  }


  public AddUserRequestBodyPermissions viewFormData(Boolean viewFormData) {
    this.viewFormData = viewFormData;
    return this;
  }

  /**
   * Get viewFormData
   * @return viewFormData
   */
  @javax.annotation.Nullable
  public Boolean getViewFormData() {
    return viewFormData;
  }

  public void setViewFormData(Boolean viewFormData) {
    this.viewFormData = viewFormData;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddUserRequestBodyPermissions addUserRequestBodyPermissions = (AddUserRequestBodyPermissions) o;
    return Objects.equals(this.changePassword, addUserRequestBodyPermissions.changePassword) &&
        Objects.equals(this.delete, addUserRequestBodyPermissions.delete) &&
        Objects.equals(this.deleteFormData, addUserRequestBodyPermissions.deleteFormData) &&
        Objects.equals(this.download, addUserRequestBodyPermissions.download) &&
        Objects.equals(this._list, addUserRequestBodyPermissions._list) &&
        Objects.equals(this.modify, addUserRequestBodyPermissions.modify) &&
        Objects.equals(this.notification, addUserRequestBodyPermissions.notification) &&
        Objects.equals(this.share, addUserRequestBodyPermissions.share) &&
        Objects.equals(this.upload, addUserRequestBodyPermissions.upload) &&
        Objects.equals(this.viewFormData, addUserRequestBodyPermissions.viewFormData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changePassword, delete, deleteFormData, download, _list, modify, notification, share, upload, viewFormData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddUserRequestBodyPermissions {\n");
    sb.append("    changePassword: ").append(toIndentedString(changePassword)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("    deleteFormData: ").append(toIndentedString(deleteFormData)).append("\n");
    sb.append("    download: ").append(toIndentedString(download)).append("\n");
    sb.append("    _list: ").append(toIndentedString(_list)).append("\n");
    sb.append("    modify: ").append(toIndentedString(modify)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    share: ").append(toIndentedString(share)).append("\n");
    sb.append("    upload: ").append(toIndentedString(upload)).append("\n");
    sb.append("    viewFormData: ").append(toIndentedString(viewFormData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("changePassword");
    openapiFields.add("delete");
    openapiFields.add("deleteFormData");
    openapiFields.add("download");
    openapiFields.add("list");
    openapiFields.add("modify");
    openapiFields.add("notification");
    openapiFields.add("share");
    openapiFields.add("upload");
    openapiFields.add("viewFormData");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AddUserRequestBodyPermissions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AddUserRequestBodyPermissions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddUserRequestBodyPermissions is not found in the empty JSON string", AddUserRequestBodyPermissions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AddUserRequestBodyPermissions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AddUserRequestBodyPermissions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddUserRequestBodyPermissions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddUserRequestBodyPermissions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddUserRequestBodyPermissions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddUserRequestBodyPermissions.class));

       return (TypeAdapter<T>) new TypeAdapter<AddUserRequestBodyPermissions>() {
           @Override
           public void write(JsonWriter out, AddUserRequestBodyPermissions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AddUserRequestBodyPermissions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AddUserRequestBodyPermissions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AddUserRequestBodyPermissions
   * @throws IOException if the JSON string is invalid with respect to AddUserRequestBodyPermissions
   */
  public static AddUserRequestBodyPermissions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddUserRequestBodyPermissions.class);
  }

  /**
   * Convert an instance of AddUserRequestBodyPermissions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

