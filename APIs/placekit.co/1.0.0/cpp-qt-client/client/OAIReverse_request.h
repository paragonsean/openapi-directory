/**
 * PlaceKit API Reference
 * PlaceKit OpenAPI Specifications ([repository](https://github.com/placekit/api-reference))
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReverse_request.h
 *
 * 
 */

#ifndef OAIReverse_request_H
#define OAIReverse_request_H

#include <QJsonObject>

#include "OAITypes.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIReverse_request : public OAIObject {
public:
    OAIReverse_request();
    OAIReverse_request(QString json);
    ~OAIReverse_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCoordinates() const;
    void setCoordinates(const QString &coordinates);
    bool is_coordinates_Set() const;
    bool is_coordinates_Valid() const;

    QList<QString> getCountries() const;
    void setCountries(const QList<QString> &countries);
    bool is_countries_Set() const;
    bool is_countries_Valid() const;

    bool isCountryByIp() const;
    void setCountryByIp(const bool &country_by_ip);
    bool is_country_by_ip_Set() const;
    bool is_country_by_ip_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QList<OAITypes> getTypes() const;
    void setTypes(const QList<OAITypes> &types);
    bool is_types_Set() const;
    bool is_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_coordinates;
    bool m_coordinates_isSet;
    bool m_coordinates_isValid;

    QList<QString> m_countries;
    bool m_countries_isSet;
    bool m_countries_isValid;

    bool m_country_by_ip;
    bool m_country_by_ip_isSet;
    bool m_country_by_ip_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QList<OAITypes> m_types;
    bool m_types_isSet;
    bool m_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReverse_request)

#endif // OAIReverse_request_H
