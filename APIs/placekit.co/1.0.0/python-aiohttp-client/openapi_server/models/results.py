# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entity import Entity
from openapi_server import util


class Results(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_results: int=None, query: str=None, results: List[Entity]=None, results_count: int=None):
        """Results - a model defined in OpenAPI

        :param max_results: The max_results of this Results.
        :param query: The query of this Results.
        :param results: The results of this Results.
        :param results_count: The results_count of this Results.
        """
        self.openapi_types = {
            'max_results': int,
            'query': str,
            'results': List[Entity],
            'results_count': int
        }

        self.attribute_map = {
            'max_results': 'maxResults',
            'query': 'query',
            'results': 'results',
            'results_count': 'resultsCount'
        }

        self._max_results = max_results
        self._query = query
        self._results = results
        self._results_count = results_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Results':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The results of this Results.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_results(self):
        """Gets the max_results of this Results.

        Maximum number of results items returned.

        :return: The max_results of this Results.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this Results.

        Maximum number of results items returned.

        :param max_results: The max_results of this Results.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def query(self):
        """Gets the query of this Results.

        Search text query used for this response.

        :return: The query of this Results.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this Results.

        Search text query used for this response.

        :param query: The query of this Results.
        :type query: str
        """

        self._query = query

    @property
    def results(self):
        """Gets the results of this Results.


        :return: The results of this Results.
        :rtype: List[Entity]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this Results.


        :param results: The results of this Results.
        :type results: List[Entity]
        """

        self._results = results

    @property
    def results_count(self):
        """Gets the results_count of this Results.

        Number of items results found.

        :return: The results_count of this Results.
        :rtype: int
        """
        return self._results_count

    @results_count.setter
    def results_count(self, results_count):
        """Sets the results_count of this Results.

        Number of items results found.

        :param results_count: The results_count of this Results.
        :type results_count: int
        """

        self._results_count = results_count
