/*
 * PlaceKit API Reference
 * PlaceKit OpenAPI Specifications ([repository](https://github.com/placekit/api-reference))
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Results;
import org.openapitools.client.model.ReverseRequest;
import org.openapitools.client.model.SearchRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Reverse geocoding
     *
     * Performs a reverse geocoding search.  It will return the closest results around &#x60;coordinates&#x60;.\\ If &#x60;coordinates&#x60; are not set, it will use the user&#39;s IP to approximate its coordinates but results will be less accurate (city level accuracy instead of street level accuracy). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reverseTest() throws ApiException {
        ReverseRequest payload = null;
        Results response = api.reverse(payload);
        // TODO: test validations
    }

    /**
     * Search for addresses
     *
     * Performs a forward geocoding search.  It will return results around &#x60;coordinates&#x60; (if provided) and the best matching textual relevance.  **It is highly recommended** to set the &#x60;countries&#x60; parameter with the country you need results from for the best accuracy and revelance possible. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchTest() throws ApiException {
        SearchRequest payload = null;
        Results response = api.search(payload);
        // TODO: test validations
    }

}
