/**
 * PlaceKit API Reference
 * PlaceKit OpenAPI Specifications ([repository](https://github.com/placekit/api-reference))
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Parameters from './Parameters';
import Types from './Types';

/**
 * The SearchRequest model module.
 * @module model/SearchRequest
 * @version 1.0.0
 */
class SearchRequest {
    /**
     * Constructs a new <code>SearchRequest</code>.
     * @alias module:model/SearchRequest
     * @implements module:model/Parameters
     */
    constructor() { 
        Parameters.initialize(this);
        SearchRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['countryByIP'] = false;
        obj['maxResults'] = 5;
        obj['query'] = '';
    }

    /**
     * Constructs a <code>SearchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchRequest} obj Optional instance to populate.
     * @return {module:model/SearchRequest} The populated <code>SearchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchRequest();
            Parameters.constructFromObject(data, obj);

            if (data.hasOwnProperty('coordinates')) {
                obj['coordinates'] = ApiClient.convertToType(data['coordinates'], 'String');
            }
            if (data.hasOwnProperty('countries')) {
                obj['countries'] = ApiClient.convertToType(data['countries'], ['String']);
            }
            if (data.hasOwnProperty('countryByIP')) {
                obj['countryByIP'] = ApiClient.convertToType(data['countryByIP'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = ApiClient.convertToType(data['types'], [Types]);
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['coordinates'] && !(typeof data['coordinates'] === 'string' || data['coordinates'] instanceof String)) {
            throw new Error("Expected the field `coordinates` to be a primitive type in the JSON string but got " + data['coordinates']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['countries'])) {
            throw new Error("Expected the field `countries` to be an array in the JSON data but got " + data['countries']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['types'])) {
            throw new Error("Expected the field `types` to be an array in the JSON data but got " + data['types']);
        }
        // ensure the json data is a string
        if (data['query'] && !(typeof data['query'] === 'string' || data['query'] instanceof String)) {
            throw new Error("Expected the field `query` to be a primitive type in the JSON string but got " + data['query']);
        }

        return true;
    }


}



/**
 * GPS coordinates latitude and longitude.\\ Used to improve relevancy of results around the given area. 
 * @member {String} coordinates
 */
SearchRequest.prototype['coordinates'] = undefined;

/**
 * Array of [two-letter ISO 3166-1 alpha-2 country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\\ Limit the results to given countries.\\ Select only one country for the best results. 
 * @member {Array.<String>} countries
 */
SearchRequest.prototype['countries'] = undefined;

/**
 * Automatically select the country to search in via the user IP's detected location.\\ Returned results will be coming from the user's country's IP.\\ If set to `true`, the parameter `countries` acts as a fallback. 
 * @member {Boolean} countryByIP
 * @default false
 */
SearchRequest.prototype['countryByIP'] = false;

/**
 * [Two-letter ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\\ Default results are in their original language.\\ By setting this parameter, you can change the language of the results, if the translation is available.\\ Contact us if you need other languages. 
 * @member {module:model/SearchRequest.LanguageEnum} language
 */
SearchRequest.prototype['language'] = undefined;

/**
 * Maximum number of results to return.
 * @member {Number} maxResults
 * @default 5
 */
SearchRequest.prototype['maxResults'] = 5;

/**
 * Select the types of record to return.\\ Prepend with `-` to omit a type.\\ Returns all types by default. 
 * @member {Array.<module:model/Types>} types
 */
SearchRequest.prototype['types'] = undefined;

/**
 * Search query terms.
 * @member {String} query
 * @default ''
 */
SearchRequest.prototype['query'] = '';


// Implement Parameters interface:
/**
 * GPS coordinates latitude and longitude.\\ Used to improve relevancy of results around the given area. 
 * @member {String} coordinates
 */
Parameters.prototype['coordinates'] = undefined;
/**
 * Array of [two-letter ISO 3166-1 alpha-2 country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\\ Limit the results to given countries.\\ Select only one country for the best results. 
 * @member {Array.<String>} countries
 */
Parameters.prototype['countries'] = undefined;
/**
 * Automatically select the country to search in via the user IP's detected location.\\ Returned results will be coming from the user's country's IP.\\ If set to `true`, the parameter `countries` acts as a fallback. 
 * @member {Boolean} countryByIP
 * @default false
 */
Parameters.prototype['countryByIP'] = false;
/**
 * [Two-letter ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\\ Default results are in their original language.\\ By setting this parameter, you can change the language of the results, if the translation is available.\\ Contact us if you need other languages. 
 * @member {module:model/Parameters.LanguageEnum} language
 */
Parameters.prototype['language'] = undefined;
/**
 * Maximum number of results to return.
 * @member {Number} maxResults
 * @default 5
 */
Parameters.prototype['maxResults'] = 5;
/**
 * Select the types of record to return.\\ Prepend with `-` to omit a type.\\ Returns all types by default. 
 * @member {Array.<module:model/Types>} types
 */
Parameters.prototype['types'] = undefined;



/**
 * Allowed values for the <code>language</code> property.
 * @enum {String}
 * @readonly
 */
SearchRequest['LanguageEnum'] = {

    /**
     * value: "en"
     * @const
     */
    "en": "en",

    /**
     * value: "fr"
     * @const
     */
    "fr": "fr"
};



export default SearchRequest;

