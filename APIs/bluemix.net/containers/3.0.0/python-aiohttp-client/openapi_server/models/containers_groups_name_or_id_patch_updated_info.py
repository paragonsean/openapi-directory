# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.containers_groups_name_or_id_patch_updated_info_number_instances import ContainersGroupsNameOrIdPatchUpdatedInfoNumberInstances
from openapi_server import util


class ContainersGroupsNameOrIdPatchUpdatedInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, autorecovery: str=None, environment: List[str]=None, number_instances: ContainersGroupsNameOrIdPatchUpdatedInfoNumberInstances=None):
        """ContainersGroupsNameOrIdPatchUpdatedInfo - a model defined in OpenAPI

        :param autorecovery: The autorecovery of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        :param environment: The environment of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        :param number_instances: The number_instances of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        """
        self.openapi_types = {
            'autorecovery': str,
            'environment': List[str],
            'number_instances': ContainersGroupsNameOrIdPatchUpdatedInfoNumberInstances
        }

        self.attribute_map = {
            'autorecovery': 'Autorecovery',
            'environment': 'Environment',
            'number_instances': 'NumberInstances'
        }

        self._autorecovery = autorecovery
        self._environment = environment
        self._number_instances = number_instances

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainersGroupsNameOrIdPatchUpdatedInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainersGroupsNameOrIdPatchUpdatedInfo of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def autorecovery(self):
        """Gets the autorecovery of this ContainersGroupsNameOrIdPatchUpdatedInfo.

        Enable or disable the Autorecovery mode for your container group. To enable it, enter true. If you want to disable it, enter false. Note: You can only enable/ disable Autorecovery mode if your container group was initially created with Autorecovery mode enabled.

        :return: The autorecovery of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        :rtype: str
        """
        return self._autorecovery

    @autorecovery.setter
    def autorecovery(self, autorecovery):
        """Sets the autorecovery of this ContainersGroupsNameOrIdPatchUpdatedInfo.

        Enable or disable the Autorecovery mode for your container group. To enable it, enter true. If you want to disable it, enter false. Note: You can only enable/ disable Autorecovery mode if your container group was initially created with Autorecovery mode enabled.

        :param autorecovery: The autorecovery of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        :type autorecovery: str
        """

        self._autorecovery = autorecovery

    @property
    def environment(self):
        """Gets the environment of this ContainersGroupsNameOrIdPatchUpdatedInfo.

        A list of environment variables that you want to add to your container group. Every environment variable needs to be a key=value pair. Every key that you use needs to be unique for this container group. Multiple environment variables are separated with comma (,)

        :return: The environment of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        :rtype: List[str]
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this ContainersGroupsNameOrIdPatchUpdatedInfo.

        A list of environment variables that you want to add to your container group. Every environment variable needs to be a key=value pair. Every key that you use needs to be unique for this container group. Multiple environment variables are separated with comma (,)

        :param environment: The environment of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        :type environment: List[str]
        """

        self._environment = environment

    @property
    def number_instances(self):
        """Gets the number_instances of this ContainersGroupsNameOrIdPatchUpdatedInfo.


        :return: The number_instances of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        :rtype: ContainersGroupsNameOrIdPatchUpdatedInfoNumberInstances
        """
        return self._number_instances

    @number_instances.setter
    def number_instances(self, number_instances):
        """Sets the number_instances of this ContainersGroupsNameOrIdPatchUpdatedInfo.


        :param number_instances: The number_instances of this ContainersGroupsNameOrIdPatchUpdatedInfo.
        :type number_instances: ContainersGroupsNameOrIdPatchUpdatedInfoNumberInstances
        """

        self._number_instances = number_instances
