# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainersGroupsNameOrIdGetDetailsRouteStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, in_progress: bool=None, message: str=None, successful: bool=None):
        """ContainersGroupsNameOrIdGetDetailsRouteStatus - a model defined in OpenAPI

        :param in_progress: The in_progress of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        :param message: The message of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        :param successful: The successful of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        """
        self.openapi_types = {
            'in_progress': bool,
            'message': str,
            'successful': bool
        }

        self.attribute_map = {
            'in_progress': 'in_progress',
            'message': 'message',
            'successful': 'successful'
        }

        self._in_progress = in_progress
        self._message = message
        self._successful = successful

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainersGroupsNameOrIdGetDetailsRouteStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainersGroupsNameOrIdGetDetails_Route_Status of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def in_progress(self):
        """Gets the in_progress of this ContainersGroupsNameOrIdGetDetailsRouteStatus.

        Can be either true or false. If set to true, then the route is in the process of being mapped to the container group and set up in the GoRouter. Is set to false, then the set up of the route is completed.

        :return: The in_progress of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        :rtype: bool
        """
        return self._in_progress

    @in_progress.setter
    def in_progress(self, in_progress):
        """Sets the in_progress of this ContainersGroupsNameOrIdGetDetailsRouteStatus.

        Can be either true or false. If set to true, then the route is in the process of being mapped to the container group and set up in the GoRouter. Is set to false, then the set up of the route is completed.

        :param in_progress: The in_progress of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        :type in_progress: bool
        """

        self._in_progress = in_progress

    @property
    def message(self):
        """Gets the message of this ContainersGroupsNameOrIdGetDetailsRouteStatus.

        Info message for the user.

        :return: The message of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ContainersGroupsNameOrIdGetDetailsRouteStatus.

        Info message for the user.

        :param message: The message of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        :type message: str
        """

        self._message = message

    @property
    def successful(self):
        """Gets the successful of this ContainersGroupsNameOrIdGetDetailsRouteStatus.

        Can be either true or false. If set to true, then the route is successfully registrered with the GoRouter. If set to false, then the route registration has not yet finished yet or could not be completed without errors.

        :return: The successful of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        :rtype: bool
        """
        return self._successful

    @successful.setter
    def successful(self, successful):
        """Sets the successful of this ContainersGroupsNameOrIdGetDetailsRouteStatus.

        Can be either true or false. If set to true, then the route is successfully registrered with the GoRouter. If set to false, then the route registration has not yet finished yet or could not be completed without errors.

        :param successful: The successful of this ContainersGroupsNameOrIdGetDetailsRouteStatus.
        :type successful: bool
        """

        self._successful = successful
