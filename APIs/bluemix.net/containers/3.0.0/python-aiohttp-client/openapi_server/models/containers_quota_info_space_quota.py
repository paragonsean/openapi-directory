# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainersQuotaInfoSpaceQuota(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, floating_ips_max: str=None, ram_max: int=None, subnets_max: int=None):
        """ContainersQuotaInfoSpaceQuota - a model defined in OpenAPI

        :param floating_ips_max: The floating_ips_max of this ContainersQuotaInfoSpaceQuota.
        :param ram_max: The ram_max of this ContainersQuotaInfoSpaceQuota.
        :param subnets_max: The subnets_max of this ContainersQuotaInfoSpaceQuota.
        """
        self.openapi_types = {
            'floating_ips_max': str,
            'ram_max': int,
            'subnets_max': int
        }

        self.attribute_map = {
            'floating_ips_max': 'floating_ips_max',
            'ram_max': 'ram_max',
            'subnets_max': 'subnets_max'
        }

        self._floating_ips_max = floating_ips_max
        self._ram_max = ram_max
        self._subnets_max = subnets_max

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainersQuotaInfoSpaceQuota':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainersQuotaInfo_space_quota of this ContainersQuotaInfoSpaceQuota.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def floating_ips_max(self):
        """Gets the floating_ips_max of this ContainersQuotaInfoSpaceQuota.

        The maximum number of public IP addresses that can be allocated to a space.

        :return: The floating_ips_max of this ContainersQuotaInfoSpaceQuota.
        :rtype: str
        """
        return self._floating_ips_max

    @floating_ips_max.setter
    def floating_ips_max(self, floating_ips_max):
        """Sets the floating_ips_max of this ContainersQuotaInfoSpaceQuota.

        The maximum number of public IP addresses that can be allocated to a space.

        :param floating_ips_max: The floating_ips_max of this ContainersQuotaInfoSpaceQuota.
        :type floating_ips_max: str
        """

        self._floating_ips_max = floating_ips_max

    @property
    def ram_max(self):
        """Gets the ram_max of this ContainersQuotaInfoSpaceQuota.

        The maximum amount of container memory that can be shared across all containers that are created in a space.

        :return: The ram_max of this ContainersQuotaInfoSpaceQuota.
        :rtype: int
        """
        return self._ram_max

    @ram_max.setter
    def ram_max(self, ram_max):
        """Sets the ram_max of this ContainersQuotaInfoSpaceQuota.

        The maximum amount of container memory that can be shared across all containers that are created in a space.

        :param ram_max: The ram_max of this ContainersQuotaInfoSpaceQuota.
        :type ram_max: int
        """

        self._ram_max = ram_max

    @property
    def subnets_max(self):
        """Gets the subnets_max of this ContainersQuotaInfoSpaceQuota.

        The maximum number of private subnets that can be created in one space.

        :return: The subnets_max of this ContainersQuotaInfoSpaceQuota.
        :rtype: int
        """
        return self._subnets_max

    @subnets_max.setter
    def subnets_max(self, subnets_max):
        """Sets the subnets_max of this ContainersQuotaInfoSpaceQuota.

        The maximum number of private subnets that can be created in one space.

        :param subnets_max: The subnets_max of this ContainersQuotaInfoSpaceQuota.
        :type subnets_max: int
        """

        self._subnets_max = subnets_max
