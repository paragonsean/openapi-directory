# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Volume(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fs_id: str=None, host_path: str=None, other_space_visibility: List[str]=None, space_guid: str=None, vol_name: str=None):
        """Volume - a model defined in OpenAPI

        :param fs_id: The fs_id of this Volume.
        :param host_path: The host_path of this Volume.
        :param other_space_visibility: The other_space_visibility of this Volume.
        :param space_guid: The space_guid of this Volume.
        :param vol_name: The vol_name of this Volume.
        """
        self.openapi_types = {
            'fs_id': str,
            'host_path': str,
            'other_space_visibility': List[str],
            'space_guid': str,
            'vol_name': str
        }

        self.attribute_map = {
            'fs_id': 'fsID',
            'host_path': 'hostPath',
            'other_space_visibility': 'otherSpaceVisibility',
            'space_guid': 'spaceGuid',
            'vol_name': 'volName'
        }

        self._fs_id = fs_id
        self._host_path = host_path
        self._other_space_visibility = other_space_visibility
        self._space_guid = space_guid
        self._vol_name = vol_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Volume':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Volume of this Volume.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fs_id(self):
        """Gets the fs_id of this Volume.

         Unique identifier representing the file share on which the volume is hosted. 

        :return: The fs_id of this Volume.
        :rtype: str
        """
        return self._fs_id

    @fs_id.setter
    def fs_id(self, fs_id):
        """Sets the fs_id of this Volume.

         Unique identifier representing the file share on which the volume is hosted. 

        :param fs_id: The fs_id of this Volume.
        :type fs_id: str
        """

        self._fs_id = fs_id

    @property
    def host_path(self):
        """Gets the host_path of this Volume.

        Full path to the mounted volume inside the container.

        :return: The host_path of this Volume.
        :rtype: str
        """
        return self._host_path

    @host_path.setter
    def host_path(self, host_path):
        """Sets the host_path of this Volume.

        Full path to the mounted volume inside the container.

        :param host_path: The host_path of this Volume.
        :type host_path: str
        """

        self._host_path = host_path

    @property
    def other_space_visibility(self):
        """Gets the other_space_visibility of this Volume.

        List of space IDs in which the volume is visible and can be used by all the single containers and container groups. 

        :return: The other_space_visibility of this Volume.
        :rtype: List[str]
        """
        return self._other_space_visibility

    @other_space_visibility.setter
    def other_space_visibility(self, other_space_visibility):
        """Sets the other_space_visibility of this Volume.

        List of space IDs in which the volume is visible and can be used by all the single containers and container groups. 

        :param other_space_visibility: The other_space_visibility of this Volume.
        :type other_space_visibility: List[str]
        """

        self._other_space_visibility = other_space_visibility

    @property
    def space_guid(self):
        """Gets the space_guid of this Volume.

        Unique identifier representing the space where the volume got created.

        :return: The space_guid of this Volume.
        :rtype: str
        """
        return self._space_guid

    @space_guid.setter
    def space_guid(self, space_guid):
        """Sets the space_guid of this Volume.

        Unique identifier representing the space where the volume got created.

        :param space_guid: The space_guid of this Volume.
        :type space_guid: str
        """

        self._space_guid = space_guid

    @property
    def vol_name(self):
        """Gets the vol_name of this Volume.

        The name of the volume.

        :return: The vol_name of this Volume.
        :rtype: str
        """
        return self._vol_name

    @vol_name.setter
    def vol_name(self, vol_name):
        """Sets the vol_name of this Volume.

        The name of the volume.

        :param vol_name: The vol_name of this Volume.
        :type vol_name: str
        """

        self._vol_name = vol_name
