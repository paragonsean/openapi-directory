# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContainersGroupsNameOrIdGetDetailsNumberInstances(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_size: int=None, desired: int=None, max: int=None, min: int=None):
        """ContainersGroupsNameOrIdGetDetailsNumberInstances - a model defined in OpenAPI

        :param current_size: The current_size of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :param desired: The desired of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :param max: The max of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :param min: The min of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        """
        self.openapi_types = {
            'current_size': int,
            'desired': int,
            'max': int,
            'min': int
        }

        self.attribute_map = {
            'current_size': 'CurrentSize',
            'desired': 'Desired',
            'max': 'Max',
            'min': 'Min'
        }

        self._current_size = current_size
        self._desired = desired
        self._max = max
        self._min = min

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContainersGroupsNameOrIdGetDetailsNumberInstances':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContainersGroupsNameOrIdGetDetails_NumberInstances of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_size(self):
        """Gets the current_size of this ContainersGroupsNameOrIdGetDetailsNumberInstances.

        The current number of container instances that are running in your container group. 

        :return: The current_size of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :rtype: int
        """
        return self._current_size

    @current_size.setter
    def current_size(self, current_size):
        """Sets the current_size of this ContainersGroupsNameOrIdGetDetailsNumberInstances.

        The current number of container instances that are running in your container group. 

        :param current_size: The current_size of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :type current_size: int
        """

        self._current_size = current_size

    @property
    def desired(self):
        """Gets the desired of this ContainersGroupsNameOrIdGetDetailsNumberInstances.

        The number of container instances that you require.

        :return: The desired of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :rtype: int
        """
        return self._desired

    @desired.setter
    def desired(self, desired):
        """Sets the desired of this ContainersGroupsNameOrIdGetDetailsNumberInstances.

        The number of container instances that you require.

        :param desired: The desired of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :type desired: int
        """

        self._desired = desired

    @property
    def max(self):
        """Gets the max of this ContainersGroupsNameOrIdGetDetailsNumberInstances.

        The maximum number of container instance that you want to run in your container group.

        :return: The max of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :rtype: int
        """
        return self._max

    @max.setter
    def max(self, max):
        """Sets the max of this ContainersGroupsNameOrIdGetDetailsNumberInstances.

        The maximum number of container instance that you want to run in your container group.

        :param max: The max of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :type max: int
        """

        self._max = max

    @property
    def min(self):
        """Gets the min of this ContainersGroupsNameOrIdGetDetailsNumberInstances.

        The minimum number of container instances that you want to run in your container group.

        :return: The min of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :rtype: int
        """
        return self._min

    @min.setter
    def min(self, min):
        """Sets the min of this ContainersGroupsNameOrIdGetDetailsNumberInstances.

        The minimum number of container instances that you want to run in your container group.

        :param min: The min of this ContainersGroupsNameOrIdGetDetailsNumberInstances.
        :type min: int
        """

        self._min = min
