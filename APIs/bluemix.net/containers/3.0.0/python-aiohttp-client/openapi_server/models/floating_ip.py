# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.binding import Binding
from openapi_server import util


class FloatingIP(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bindings: Binding=None, ip_address: str=None):
        """FloatingIP - a model defined in OpenAPI

        :param bindings: The bindings of this FloatingIP.
        :param ip_address: The ip_address of this FloatingIP.
        """
        self.openapi_types = {
            'bindings': Binding,
            'ip_address': str
        }

        self.attribute_map = {
            'bindings': 'Bindings',
            'ip_address': 'IpAddress'
        }

        self._bindings = bindings
        self._ip_address = ip_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FloatingIP':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FloatingIP of this FloatingIP.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bindings(self):
        """Gets the bindings of this FloatingIP.


        :return: The bindings of this FloatingIP.
        :rtype: Binding
        """
        return self._bindings

    @bindings.setter
    def bindings(self, bindings):
        """Sets the bindings of this FloatingIP.


        :param bindings: The bindings of this FloatingIP.
        :type bindings: Binding
        """

        self._bindings = bindings

    @property
    def ip_address(self):
        """Gets the ip_address of this FloatingIP.

        The public IP address that is allocated to the organization space.

        :return: The ip_address of this FloatingIP.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this FloatingIP.

        The public IP address that is allocated to the organization space.

        :param ip_address: The ip_address of this FloatingIP.
        :type ip_address: str
        """

        self._ip_address = ip_address
