# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileshareParam(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fs_iops: float=None, fs_name: str=None, fs_size: int=None):
        """FileshareParam - a model defined in OpenAPI

        :param fs_iops: The fs_iops of this FileshareParam.
        :param fs_name: The fs_name of this FileshareParam.
        :param fs_size: The fs_size of this FileshareParam.
        """
        self.openapi_types = {
            'fs_iops': float,
            'fs_name': str,
            'fs_size': int
        }

        self.attribute_map = {
            'fs_iops': 'fsIOPS',
            'fs_name': 'fsName',
            'fs_size': 'fsSize'
        }

        self._fs_iops = fs_iops
        self._fs_name = fs_name
        self._fs_size = fs_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileshareParam':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileshareParam of this FileshareParam.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fs_iops(self):
        """Gets the fs_iops of this FileshareParam.

        The number of input/output transactions per second. Available values are 0.25, 2 or 4.

        :return: The fs_iops of this FileshareParam.
        :rtype: float
        """
        return self._fs_iops

    @fs_iops.setter
    def fs_iops(self, fs_iops):
        """Sets the fs_iops of this FileshareParam.

        The number of input/output transactions per second. Available values are 0.25, 2 or 4.

        :param fs_iops: The fs_iops of this FileshareParam.
        :type fs_iops: float
        """
        if fs_iops is None:
            raise ValueError("Invalid value for `fs_iops`, must not be `None`")

        self._fs_iops = fs_iops

    @property
    def fs_name(self):
        """Gets the fs_name of this FileshareParam.

        The name of the new file share that you want to create. The name can contain uppercase letters, lowercase letters, numbers, underscores (_), and hyphens (-).

        :return: The fs_name of this FileshareParam.
        :rtype: str
        """
        return self._fs_name

    @fs_name.setter
    def fs_name(self, fs_name):
        """Sets the fs_name of this FileshareParam.

        The name of the new file share that you want to create. The name can contain uppercase letters, lowercase letters, numbers, underscores (_), and hyphens (-).

        :param fs_name: The fs_name of this FileshareParam.
        :type fs_name: str
        """
        if fs_name is None:
            raise ValueError("Invalid value for `fs_name`, must not be `None`")

        self._fs_name = fs_name

    @property
    def fs_size(self):
        """Gets the fs_size of this FileshareParam.

        The size of the file share in gigabyte. Run `cf ic volume fs-flavor-list` or call the GET /volumes/fs/flavors/json API endpoint to retrieve a list of available file share sizes. 

        :return: The fs_size of this FileshareParam.
        :rtype: int
        """
        return self._fs_size

    @fs_size.setter
    def fs_size(self, fs_size):
        """Sets the fs_size of this FileshareParam.

        The size of the file share in gigabyte. Run `cf ic volume fs-flavor-list` or call the GET /volumes/fs/flavors/json API endpoint to retrieve a list of available file share sizes. 

        :param fs_size: The fs_size of this FileshareParam.
        :type fs_size: int
        """
        if fs_size is None:
            raise ValueError("Invalid value for `fs_size`, must not be `None`")

        self._fs_size = fs_size
