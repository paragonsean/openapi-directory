# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HostConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, binds: List[str]=None, extra_hosts: List[str]=None, links: List[str]=None, port_bindings: List[str]=None):
        """HostConfig - a model defined in OpenAPI

        :param binds: The binds of this HostConfig.
        :param extra_hosts: The extra_hosts of this HostConfig.
        :param links: The links of this HostConfig.
        :param port_bindings: The port_bindings of this HostConfig.
        """
        self.openapi_types = {
            'binds': List[str],
            'extra_hosts': List[str],
            'links': List[str],
            'port_bindings': List[str]
        }

        self.attribute_map = {
            'binds': 'Binds',
            'extra_hosts': 'ExtraHosts',
            'links': 'Links',
            'port_bindings': 'PortBindings'
        }

        self._binds = binds
        self._extra_hosts = extra_hosts
        self._links = links
        self._port_bindings = port_bindings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HostConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HostConfig of this HostConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def binds(self):
        """Gets the binds of this HostConfig.

        A list of volumes to be bound to the container. Each volume must be listed in the following format: VOLNAME:/CONTAINER_PATH:rw [ro]. 

        :return: The binds of this HostConfig.
        :rtype: List[str]
        """
        return self._binds

    @binds.setter
    def binds(self, binds):
        """Sets the binds of this HostConfig.

        A list of volumes to be bound to the container. Each volume must be listed in the following format: VOLNAME:/CONTAINER_PATH:rw [ro]. 

        :param binds: The binds of this HostConfig.
        :type binds: List[str]
        """

        self._binds = binds

    @property
    def extra_hosts(self):
        """Gets the extra_hosts of this HostConfig.

        A list of hostnames/IP mappings to be added to the container’s /etc/hosts file. Specified in the form [\"hostname:IP\"] 

        :return: The extra_hosts of this HostConfig.
        :rtype: List[str]
        """
        return self._extra_hosts

    @extra_hosts.setter
    def extra_hosts(self, extra_hosts):
        """Sets the extra_hosts of this HostConfig.

        A list of hostnames/IP mappings to be added to the container’s /etc/hosts file. Specified in the form [\"hostname:IP\"] 

        :param extra_hosts: The extra_hosts of this HostConfig.
        :type extra_hosts: List[str]
        """

        self._extra_hosts = extra_hosts

    @property
    def links(self):
        """Gets the links of this HostConfig.

        A list of containers that need to be linked.

        :return: The links of this HostConfig.
        :rtype: List[str]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this HostConfig.

        A list of containers that need to be linked.

        :param links: The links of this HostConfig.
        :type links: List[str]
        """

        self._links = links

    @property
    def port_bindings(self):
        """Gets the port_bindings of this HostConfig.

        The container ports that you want to expose to the public. Ports need to be specified in the form of &lt;port&gt;/&lt;protocol&gt;: [{ \"HostIp\": \"&lt;IP&gt;\", \"HostPort\": \"&lt;port&gt;\" }] 

        :return: The port_bindings of this HostConfig.
        :rtype: List[str]
        """
        return self._port_bindings

    @port_bindings.setter
    def port_bindings(self, port_bindings):
        """Sets the port_bindings of this HostConfig.

        The container ports that you want to expose to the public. Ports need to be specified in the form of &lt;port&gt;/&lt;protocol&gt;: [{ \"HostIp\": \"&lt;IP&gt;\", \"HostPort\": \"&lt;port&gt;\" }] 

        :param port_bindings: The port_bindings of this HostConfig.
        :type port_bindings: List[str]
        """

        self._port_bindings = port_bindings
