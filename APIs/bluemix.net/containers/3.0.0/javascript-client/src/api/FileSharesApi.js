/**
 * IBM Containers API
 * Containers are virtual software objects that include all the elements that an app needs to run. A container has the benefits of resource isolation and allocation but is more portable and efficient than, for example, a virtual machine.   This documentation describes the IBM Containers API, which is based on the Docker Remote API. The API provides endpoints that you can use to create and manage your single containers and container groups in Bluemix. Endpoints are summarized under the following tags:   - **Authentication**: Retrieve and refresh your TLS certificates.  - **Private Docker images registry**: Create your own private Docker images registry in Bluemix by setting a namespace for your organization.  - **Images**: View, build, and push your images to your private Bluemix registry so you can use them with IBM Containers. You can also scan your container images with the Vulnerability Advisor against standard policies set by the organization manager and a database of known Ubuntu issues.  - **Single Containers**: Create and manage single containers in Bluemix. Use a single container to implement short-lived processes or to run simple tests as you develop an app or service. To make your single container available from the internet, review the `Public IP addresses` endpoints.  - **Container Groups**: Create and manage your container groups in Bluemix. A container group consists of multiple single containers that are all created from the same container image and as a consequence are configured in the same way. Container groups offer further options at no cost to make your app highly available. These options include in-built load balancing, auto-recovery of unhealthy container instances, and auto-scaling of container instances based on CPU and memory usage. Map a public route to your container group to make your app accessible from the internet.   - **Public IP addresses**: Use these endpoints to request public IP addresses for your space. You can bind this IP address to your container to make your container accessible from the internet.  - **File shares**: Create, list and delete file shares in a space. A file share is a NFS storage system that hosts Docker volumes.   - **Volumes**: Create and manage container volumes in your space to persist the data of your containers.      Each API request requires an HTTP header that includes the 'X-Auth-Token’ and 'X-Auth-Project-Id’ parameter.   - **X-Auth-Token**: The JSON web token (JWT) that you receive when logging into the Bluemix platform. It allows you to use the IBM Containers REST API, access services, and resources. Run `cf oauth-token` to retrieve your access token information. - **X-Auth-Project-Id**: The unique ID of your organization space where you want to create or work with your containers. Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space, to retrieve your space ID.    For further information about how containers work in the IBM Containers service, review the documentation under https://new-console.ng.bluemix.net/docs/containers/container_index.html. 
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Fileshare from '../model/Fileshare';
import FileshareParam from '../model/FileshareParam';
import GetFileshareDetails from '../model/GetFileshareDetails';

/**
* FileShares service.
* @module api/FileSharesApi
* @version 3.0.0
*/
export default class FileSharesApi {

    /**
    * Constructs a new FileSharesApi. 
    * @alias module:api/FileSharesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the volumesFsCreatePost operation.
     * @callback module:api/FileSharesApi~volumesFsCreatePostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a file share in a space
     * This endpoint creates a new file share in a space (corresponding IBM Containers command: `cf ic volume fs-create FSNAME FSSIZE FSIOPS`).    A file share is a persistent NFS-based (Network File System) storage system that hosts Docker volumes in a Bluemix space and allows a user to store and access container and app-related files. To store files in a file share, you must create a container volume and save the data into this volume.   As soon as you create your first volume in a space with the `cf ic volume create VOLNAME` command or the `POST /volumes/create` API endpoint, a default file share with 20 GB at 4 IOPS (Input Output operations Per Second) is created at no cost.   The organization manager can create file shares with specific storage size and IOPS to meet the storage needs of the space. File shares can be provisioned in sizes from 20 GB to 12 TB and at IOPS per GB of 0.25, 2 or 4. Run `cf ic volume fs-flavor-list` or call the `GET /volumes/fs/flavors/json` API endpoint to retrieve a list of available file share sizes. The file share size in relation to the number of IOPS impacts the speed that data can be read and written from and to the container volume.
     * @param {String} xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run `cf oauth-token` to retrieve your access token.
     * @param {String} xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space, to retrieve your space ID.
     * @param {module:model/FileshareParam} fileshareParam The input parameter to create a new file share in a space.
     * @param {module:api/FileSharesApi~volumesFsCreatePostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    volumesFsCreatePost(xAuthToken, xAuthProjectId, fileshareParam, callback) {
      let postBody = fileshareParam;
      // verify the required parameter 'xAuthToken' is set
      if (xAuthToken === undefined || xAuthToken === null) {
        throw new Error("Missing the required parameter 'xAuthToken' when calling volumesFsCreatePost");
      }
      // verify the required parameter 'xAuthProjectId' is set
      if (xAuthProjectId === undefined || xAuthProjectId === null) {
        throw new Error("Missing the required parameter 'xAuthProjectId' when calling volumesFsCreatePost");
      }
      // verify the required parameter 'fileshareParam' is set
      if (fileshareParam === undefined || fileshareParam === null) {
        throw new Error("Missing the required parameter 'fileshareParam' when calling volumesFsCreatePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Auth-Token': xAuthToken,
        'X-Auth-Project-Id': xAuthProjectId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/volumes/fs/create', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the volumesFsFlavorsJsonGet operation.
     * @callback module:api/FileSharesApi~volumesFsFlavorsJsonGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Number>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List available file share sizes
     * This endpoint returns a list of available file shares in gigabyte (corresponding IBM Containers command: `cf ic volume fs-flavor-list`).
     * @param {String} xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run `cf oauth-token` to retrieve your access token.
     * @param {String} xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space, to retrieve your space ID.
     * @param {module:api/FileSharesApi~volumesFsFlavorsJsonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Number>}
     */
    volumesFsFlavorsJsonGet(xAuthToken, xAuthProjectId, callback) {
      let postBody = null;
      // verify the required parameter 'xAuthToken' is set
      if (xAuthToken === undefined || xAuthToken === null) {
        throw new Error("Missing the required parameter 'xAuthToken' when calling volumesFsFlavorsJsonGet");
      }
      // verify the required parameter 'xAuthProjectId' is set
      if (xAuthProjectId === undefined || xAuthProjectId === null) {
        throw new Error("Missing the required parameter 'xAuthProjectId' when calling volumesFsFlavorsJsonGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Auth-Token': xAuthToken,
        'X-Auth-Project-Id': xAuthProjectId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ['Number'];
      return this.apiClient.callApi(
        '/volumes/fs/flavors/json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the volumesFsJsonGet operation.
     * @callback module:api/FileSharesApi~volumesFsJsonGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Fileshare>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List available file shares in a space
     * This endpoint returns a list of all file shares that are availble in a space (corresponding IBM Containers command: `cf ic volume fs-list`).
     * @param {String} xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run `cf oauth-token` to retrieve your access token.
     * @param {String} xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space, to retrieve your space ID.
     * @param {module:api/FileSharesApi~volumesFsJsonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Fileshare>}
     */
    volumesFsJsonGet(xAuthToken, xAuthProjectId, callback) {
      let postBody = null;
      // verify the required parameter 'xAuthToken' is set
      if (xAuthToken === undefined || xAuthToken === null) {
        throw new Error("Missing the required parameter 'xAuthToken' when calling volumesFsJsonGet");
      }
      // verify the required parameter 'xAuthProjectId' is set
      if (xAuthProjectId === undefined || xAuthProjectId === null) {
        throw new Error("Missing the required parameter 'xAuthProjectId' when calling volumesFsJsonGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Auth-Token': xAuthToken,
        'X-Auth-Project-Id': xAuthProjectId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Fileshare];
      return this.apiClient.callApi(
        '/volumes/fs/json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the volumesFsNameDelete operation.
     * @callback module:api/FileSharesApi~volumesFsNameDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a file share
     * This endpoint deletes a file share from a space (corresponding IBM Containers command: `cf ic volume fs-rm FSNAME`).   Before you can delete a file share, all mounted volumes must be deleted first. To delete a volume, run `cf ic volume rm VOLNAME` or call the `DELETE /volumes/{name}` API endpoint.    **Note:** To delete a file share you must have been granted organization developer rights.
     * @param {String} xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run `cf oauth-token` to retrieve your access token.
     * @param {String} xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space, to retrieve your space ID.
     * @param {String} name The name of the file share that you want to delete. Run `cf ic volume fs-list` or call the `GET /volumes/fs/json` API endpoint to retrieve a list of available file shares in your space.
     * @param {module:api/FileSharesApi~volumesFsNameDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    volumesFsNameDelete(xAuthToken, xAuthProjectId, name, callback) {
      let postBody = null;
      // verify the required parameter 'xAuthToken' is set
      if (xAuthToken === undefined || xAuthToken === null) {
        throw new Error("Missing the required parameter 'xAuthToken' when calling volumesFsNameDelete");
      }
      // verify the required parameter 'xAuthProjectId' is set
      if (xAuthProjectId === undefined || xAuthProjectId === null) {
        throw new Error("Missing the required parameter 'xAuthProjectId' when calling volumesFsNameDelete");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling volumesFsNameDelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Auth-Token': xAuthToken,
        'X-Auth-Project-Id': xAuthProjectId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/volumes/fs/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the volumesFsNameJsonGet operation.
     * @callback module:api/FileSharesApi~volumesFsNameJsonGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetFileshareDetails>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Inspect a file share
     * This endpoint returns detailed information about a file share (corresponding IBM Containers command: `cf ic volume fs-inspect FSNAME`).
     * @param {String} xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run `cf oauth-token` to retrieve your access token.
     * @param {String} xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space, to retrieve your space ID.
     * @param {String} name The name of the file share that you want to inspect. Run `cf ic volume fs-list` or call the `GET /volumes/fs/json` endpoint to retrieve a list of available file shares in your space.
     * @param {module:api/FileSharesApi~volumesFsNameJsonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetFileshareDetails>}
     */
    volumesFsNameJsonGet(xAuthToken, xAuthProjectId, name, callback) {
      let postBody = null;
      // verify the required parameter 'xAuthToken' is set
      if (xAuthToken === undefined || xAuthToken === null) {
        throw new Error("Missing the required parameter 'xAuthToken' when calling volumesFsNameJsonGet");
      }
      // verify the required parameter 'xAuthProjectId' is set
      if (xAuthProjectId === undefined || xAuthProjectId === null) {
        throw new Error("Missing the required parameter 'xAuthProjectId' when calling volumesFsNameJsonGet");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling volumesFsNameJsonGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Auth-Token': xAuthToken,
        'X-Auth-Project-Id': xAuthProjectId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetFileshareDetails];
      return this.apiClient.callApi(
        '/volumes/fs/{name}/json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
