/*
 * IBM Containers API
 * Containers are virtual software objects that include all the elements that an app needs to run. A container has the benefits of resource isolation and allocation but is more portable and efficient than, for example, a virtual machine.   This documentation describes the IBM Containers API, which is based on the Docker Remote API. The API provides endpoints that you can use to create and manage your single containers and container groups in Bluemix. Endpoints are summarized under the following tags:   - **Authentication**: Retrieve and refresh your TLS certificates.  - **Private Docker images registry**: Create your own private Docker images registry in Bluemix by setting a namespace for your organization.  - **Images**: View, build, and push your images to your private Bluemix registry so you can use them with IBM Containers. You can also scan your container images with the Vulnerability Advisor against standard policies set by the organization manager and a database of known Ubuntu issues.  - **Single Containers**: Create and manage single containers in Bluemix. Use a single container to implement short-lived processes or to run simple tests as you develop an app or service. To make your single container available from the internet, review the `Public IP addresses` endpoints.  - **Container Groups**: Create and manage your container groups in Bluemix. A container group consists of multiple single containers that are all created from the same container image and as a consequence are configured in the same way. Container groups offer further options at no cost to make your app highly available. These options include in-built load balancing, auto-recovery of unhealthy container instances, and auto-scaling of container instances based on CPU and memory usage. Map a public route to your container group to make your app accessible from the internet.   - **Public IP addresses**: Use these endpoints to request public IP addresses for your space. You can bind this IP address to your container to make your container accessible from the internet.  - **File shares**: Create, list and delete file shares in a space. A file share is a NFS storage system that hosts Docker volumes.   - **Volumes**: Create and manage container volumes in your space to persist the data of your containers.      Each API request requires an HTTP header that includes the 'X-Auth-Token’ and 'X-Auth-Project-Id’ parameter.   - **X-Auth-Token**: The JSON web token (JWT) that you receive when logging into the Bluemix platform. It allows you to use the IBM Containers REST API, access services, and resources. Run `cf oauth-token` to retrieve your access token information. - **X-Auth-Project-Id**: The unique ID of your organization space where you want to create or work with your containers. Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space, to retrieve your space ID.    For further information about how containers work in the IBM Containers service, review the documentation under https://new-console.ng.bluemix.net/docs/containers/container_index.html. 
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Container;
import org.openapitools.client.model.ContainerId;
import org.openapitools.client.model.ContainerInfo;
import org.openapitools.client.model.CreateContainer;
import org.openapitools.client.model.GetContainerStatus;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SingleContainersApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public SingleContainersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SingleContainersApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for containersCreatePost
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param createContainer Summary of input parameter to create a container in IBM Containers. (required)
     * @param name Choose a name for your container. The characters in the name can include uppercase letters, lowercase letters, numbers, periods (.), underscores (_), or hyphens (-), but the name must start with a letter. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The creation of a single container with the specified attributes has been initiated. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The data that you entered in the request body are either incomplete or in the wrong format. Be sure to include at least the Docker image that you want to use in JSON format and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td>  Conflict. A container with the same name already exists. Choose another name for your container and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersCreatePostCall(String xAuthToken, String xAuthProjectId, CreateContainer createContainer, String name, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createContainer;

        // create path and map variables
        String localVarPath = "/containers/create";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersCreatePostValidateBeforeCall(String xAuthToken, String xAuthProjectId, CreateContainer createContainer, String name, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersCreatePost(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersCreatePost(Async)");
        }

        // verify the required parameter 'createContainer' is set
        if (createContainer == null) {
            throw new ApiException("Missing the required parameter 'createContainer' when calling containersCreatePost(Async)");
        }

        return containersCreatePostCall(xAuthToken, xAuthProjectId, createContainer, name, _callback);

    }

    /**
     * Create and start a single container
     * This endpoint creates and starts a single container in your space based on the Docker image that is specified in the Image field of the request json. A single container in IBM Containers is similar to a container that you create in your local Docker environment. Single containers are a good way to start with IBM Containers and to learn about how containers work in the IBM Cloud and the features that IBM Containers provides. They are also recommended when you want to run simple app tests or during the development process of an app.    In the Docker API there are two separate APIs to create and start a container. However in IBM Containers a container is created and started in a single API call. Therefore, this API merges parameters from the Docker API to create and start container.    To create a container with IBM Containers, you must at least define the image that the container is based on.  - Image: You must include the full path to the image in your private Bluemix registry in the format: &#x60;registry.ng.bluemix.net/&lt;namespace&gt;/&lt;image&gt;&#x60;.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param createContainer Summary of input parameter to create a container in IBM Containers. (required)
     * @param name Choose a name for your container. The characters in the name can include uppercase letters, lowercase letters, numbers, periods (.), underscores (_), or hyphens (-), but the name must start with a letter. (optional)
     * @return ContainerId
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The creation of a single container with the specified attributes has been initiated. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The data that you entered in the request body are either incomplete or in the wrong format. Be sure to include at least the Docker image that you want to use in JSON format and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td>  Conflict. A container with the same name already exists. Choose another name for your container and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public ContainerId containersCreatePost(String xAuthToken, String xAuthProjectId, CreateContainer createContainer, String name) throws ApiException {
        ApiResponse<ContainerId> localVarResp = containersCreatePostWithHttpInfo(xAuthToken, xAuthProjectId, createContainer, name);
        return localVarResp.getData();
    }

    /**
     * Create and start a single container
     * This endpoint creates and starts a single container in your space based on the Docker image that is specified in the Image field of the request json. A single container in IBM Containers is similar to a container that you create in your local Docker environment. Single containers are a good way to start with IBM Containers and to learn about how containers work in the IBM Cloud and the features that IBM Containers provides. They are also recommended when you want to run simple app tests or during the development process of an app.    In the Docker API there are two separate APIs to create and start a container. However in IBM Containers a container is created and started in a single API call. Therefore, this API merges parameters from the Docker API to create and start container.    To create a container with IBM Containers, you must at least define the image that the container is based on.  - Image: You must include the full path to the image in your private Bluemix registry in the format: &#x60;registry.ng.bluemix.net/&lt;namespace&gt;/&lt;image&gt;&#x60;.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param createContainer Summary of input parameter to create a container in IBM Containers. (required)
     * @param name Choose a name for your container. The characters in the name can include uppercase letters, lowercase letters, numbers, periods (.), underscores (_), or hyphens (-), but the name must start with a letter. (optional)
     * @return ApiResponse&lt;ContainerId&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The creation of a single container with the specified attributes has been initiated. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The data that you entered in the request body are either incomplete or in the wrong format. Be sure to include at least the Docker image that you want to use in JSON format and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td>  Conflict. A container with the same name already exists. Choose another name for your container and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ContainerId> containersCreatePostWithHttpInfo(String xAuthToken, String xAuthProjectId, CreateContainer createContainer, String name) throws ApiException {
        okhttp3.Call localVarCall = containersCreatePostValidateBeforeCall(xAuthToken, xAuthProjectId, createContainer, name, null);
        Type localVarReturnType = new TypeToken<ContainerId>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create and start a single container (asynchronously)
     * This endpoint creates and starts a single container in your space based on the Docker image that is specified in the Image field of the request json. A single container in IBM Containers is similar to a container that you create in your local Docker environment. Single containers are a good way to start with IBM Containers and to learn about how containers work in the IBM Cloud and the features that IBM Containers provides. They are also recommended when you want to run simple app tests or during the development process of an app.    In the Docker API there are two separate APIs to create and start a container. However in IBM Containers a container is created and started in a single API call. Therefore, this API merges parameters from the Docker API to create and start container.    To create a container with IBM Containers, you must at least define the image that the container is based on.  - Image: You must include the full path to the image in your private Bluemix registry in the format: &#x60;registry.ng.bluemix.net/&lt;namespace&gt;/&lt;image&gt;&#x60;.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param createContainer Summary of input parameter to create a container in IBM Containers. (required)
     * @param name Choose a name for your container. The characters in the name can include uppercase letters, lowercase letters, numbers, periods (.), underscores (_), or hyphens (-), but the name must start with a letter. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The creation of a single container with the specified attributes has been initiated. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The data that you entered in the request body are either incomplete or in the wrong format. Be sure to include at least the Docker image that you want to use in JSON format and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td>  Conflict. A container with the same name already exists. Choose another name for your container and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersCreatePostAsync(String xAuthToken, String xAuthProjectId, CreateContainer createContainer, String name, final ApiCallback<ContainerId> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersCreatePostValidateBeforeCall(xAuthToken, xAuthProjectId, createContainer, name, _callback);
        Type localVarReturnType = new TypeToken<ContainerId>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersIdStatusGet
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param id The unique identifier that represents the container. Run &#x60;cf ic ps&#x60;, or call the &#x60;GET /containers/json&#x60; endpoint to retrieve the ID of the container. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The current status of a container is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersIdStatusGetCall(String xAuthToken, String xAuthProjectId, String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/{id}/status"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersIdStatusGetValidateBeforeCall(String xAuthToken, String xAuthProjectId, String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersIdStatusGet(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersIdStatusGet(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling containersIdStatusGet(Async)");
        }

        return containersIdStatusGetCall(xAuthToken, xAuthProjectId, id, _callback);

    }

    /**
     * List the current state of a container.
     * This endpoint returns the current state of a container. This state can either be a transient state, such as BUILDING and NETWORKING, or a non-transient state, such as RUNNING, SHUTDOWN, CRASHED, or SUSPENDED.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param id The unique identifier that represents the container. Run &#x60;cf ic ps&#x60;, or call the &#x60;GET /containers/json&#x60; endpoint to retrieve the ID of the container. (required)
     * @return GetContainerStatus
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The current status of a container is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public GetContainerStatus containersIdStatusGet(String xAuthToken, String xAuthProjectId, String id) throws ApiException {
        ApiResponse<GetContainerStatus> localVarResp = containersIdStatusGetWithHttpInfo(xAuthToken, xAuthProjectId, id);
        return localVarResp.getData();
    }

    /**
     * List the current state of a container.
     * This endpoint returns the current state of a container. This state can either be a transient state, such as BUILDING and NETWORKING, or a non-transient state, such as RUNNING, SHUTDOWN, CRASHED, or SUSPENDED.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param id The unique identifier that represents the container. Run &#x60;cf ic ps&#x60;, or call the &#x60;GET /containers/json&#x60; endpoint to retrieve the ID of the container. (required)
     * @return ApiResponse&lt;GetContainerStatus&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The current status of a container is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetContainerStatus> containersIdStatusGetWithHttpInfo(String xAuthToken, String xAuthProjectId, String id) throws ApiException {
        okhttp3.Call localVarCall = containersIdStatusGetValidateBeforeCall(xAuthToken, xAuthProjectId, id, null);
        Type localVarReturnType = new TypeToken<GetContainerStatus>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List the current state of a container. (asynchronously)
     * This endpoint returns the current state of a container. This state can either be a transient state, such as BUILDING and NETWORKING, or a non-transient state, such as RUNNING, SHUTDOWN, CRASHED, or SUSPENDED.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param id The unique identifier that represents the container. Run &#x60;cf ic ps&#x60;, or call the &#x60;GET /containers/json&#x60; endpoint to retrieve the ID of the container. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The current status of a container is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersIdStatusGetAsync(String xAuthToken, String xAuthProjectId, String id, final ApiCallback<GetContainerStatus> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersIdStatusGetValidateBeforeCall(xAuthToken, xAuthProjectId, id, _callback);
        Type localVarReturnType = new TypeToken<GetContainerStatus>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersJsonGet
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param all By default, the &#x60;GET /containers/json&#x60; endpoint returns a list of all single containers in a space that are in a running state. To request a list of all containers independent of their current state, set the &#x60;all&#x60; query parameter to true. Allowed values are: &#x60;all&#x3D;true&#x60;, &#x60;all&#x3D;True&#x60;, and &#x60;all&#x3D;1&#x60;.  (optional)
     * @param filters You can filter your containers by any environment variable key or value that is listed in the &#x60;Env&#x60; section of your CLI/ API response when you run the &#x60;cf ic inspect &lt;container&gt;&#x60; command, or call the &#x60;GET /containers/{id}/json&#x60; endpoint. Your search criteria does not need to be an exact match. It can also be a part of the key or value you are looking for. For example, to filter all containers with an environment variable that contains &#x60;id&#x60; in one of their environment variables, use &#x60;filter&#x3D;id&#x60;. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list of single containers that match the search criteria is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersJsonGetCall(String xAuthToken, String xAuthProjectId, String all, String filters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/json";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (all != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("all", all));
        }

        if (filters != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filters", filters));
        }

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersJsonGetValidateBeforeCall(String xAuthToken, String xAuthProjectId, String all, String filters, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersJsonGet(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersJsonGet(Async)");
        }

        return containersJsonGetCall(xAuthToken, xAuthProjectId, all, filters, _callback);

    }

    /**
     * List single containers in a space.
     * This endpoint returns a list of all single containers in a space that are currently in a running state (corresponding IBM Containers command: &#x60;cf ic ps&#x60;). To list all single containers independent of their current state, set the &#x60;all&#x60; query parameter to true.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param all By default, the &#x60;GET /containers/json&#x60; endpoint returns a list of all single containers in a space that are in a running state. To request a list of all containers independent of their current state, set the &#x60;all&#x60; query parameter to true. Allowed values are: &#x60;all&#x3D;true&#x60;, &#x60;all&#x3D;True&#x60;, and &#x60;all&#x3D;1&#x60;.  (optional)
     * @param filters You can filter your containers by any environment variable key or value that is listed in the &#x60;Env&#x60; section of your CLI/ API response when you run the &#x60;cf ic inspect &lt;container&gt;&#x60; command, or call the &#x60;GET /containers/{id}/json&#x60; endpoint. Your search criteria does not need to be an exact match. It can also be a part of the key or value you are looking for. For example, to filter all containers with an environment variable that contains &#x60;id&#x60; in one of their environment variables, use &#x60;filter&#x3D;id&#x60;. (optional)
     * @return List&lt;Container&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list of single containers that match the search criteria is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public List<Container> containersJsonGet(String xAuthToken, String xAuthProjectId, String all, String filters) throws ApiException {
        ApiResponse<List<Container>> localVarResp = containersJsonGetWithHttpInfo(xAuthToken, xAuthProjectId, all, filters);
        return localVarResp.getData();
    }

    /**
     * List single containers in a space.
     * This endpoint returns a list of all single containers in a space that are currently in a running state (corresponding IBM Containers command: &#x60;cf ic ps&#x60;). To list all single containers independent of their current state, set the &#x60;all&#x60; query parameter to true.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param all By default, the &#x60;GET /containers/json&#x60; endpoint returns a list of all single containers in a space that are in a running state. To request a list of all containers independent of their current state, set the &#x60;all&#x60; query parameter to true. Allowed values are: &#x60;all&#x3D;true&#x60;, &#x60;all&#x3D;True&#x60;, and &#x60;all&#x3D;1&#x60;.  (optional)
     * @param filters You can filter your containers by any environment variable key or value that is listed in the &#x60;Env&#x60; section of your CLI/ API response when you run the &#x60;cf ic inspect &lt;container&gt;&#x60; command, or call the &#x60;GET /containers/{id}/json&#x60; endpoint. Your search criteria does not need to be an exact match. It can also be a part of the key or value you are looking for. For example, to filter all containers with an environment variable that contains &#x60;id&#x60; in one of their environment variables, use &#x60;filter&#x3D;id&#x60;. (optional)
     * @return ApiResponse&lt;List&lt;Container&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list of single containers that match the search criteria is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<Container>> containersJsonGetWithHttpInfo(String xAuthToken, String xAuthProjectId, String all, String filters) throws ApiException {
        okhttp3.Call localVarCall = containersJsonGetValidateBeforeCall(xAuthToken, xAuthProjectId, all, filters, null);
        Type localVarReturnType = new TypeToken<List<Container>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List single containers in a space. (asynchronously)
     * This endpoint returns a list of all single containers in a space that are currently in a running state (corresponding IBM Containers command: &#x60;cf ic ps&#x60;). To list all single containers independent of their current state, set the &#x60;all&#x60; query parameter to true.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param all By default, the &#x60;GET /containers/json&#x60; endpoint returns a list of all single containers in a space that are in a running state. To request a list of all containers independent of their current state, set the &#x60;all&#x60; query parameter to true. Allowed values are: &#x60;all&#x3D;true&#x60;, &#x60;all&#x3D;True&#x60;, and &#x60;all&#x3D;1&#x60;.  (optional)
     * @param filters You can filter your containers by any environment variable key or value that is listed in the &#x60;Env&#x60; section of your CLI/ API response when you run the &#x60;cf ic inspect &lt;container&gt;&#x60; command, or call the &#x60;GET /containers/{id}/json&#x60; endpoint. Your search criteria does not need to be an exact match. It can also be a part of the key or value you are looking for. For example, to filter all containers with an environment variable that contains &#x60;id&#x60; in one of their environment variables, use &#x60;filter&#x3D;id&#x60;. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list of single containers that match the search criteria is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support.  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersJsonGetAsync(String xAuthToken, String xAuthProjectId, String all, String filters, final ApiCallback<List<Container>> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersJsonGetValidateBeforeCall(xAuthToken, xAuthProjectId, all, filters, _callback);
        Type localVarReturnType = new TypeToken<List<Container>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersNameOrIdDelete
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to delete. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param force Use the &#x60;force&#x60; query parameter if you want to delete the container independent of their current state. The container does not need to be stopped first. To force the deletion of a container, enter &#x60;force&#x3D;true&#x60;, &#x60;force&#x3D;True&#x60;, or &#x60;force&#x3D;1&#x60;. If you want to delete containers that are in a non-running state only, do either not set this query parameter, or enter &#x60;force&#x3D;false&#x60;, &#x60;force&#x3D;False&#x60;, or &#x60;force&#x3D;0&#x60;. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The deletion of your container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdDeleteCall(String xAuthToken, String xAuthProjectId, String nameOrId, Boolean force, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/{name_or_id}"
            .replace("{" + "name_or_id" + "}", localVarApiClient.escapeString(nameOrId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (force != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("force", force));
        }

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersNameOrIdDeleteValidateBeforeCall(String xAuthToken, String xAuthProjectId, String nameOrId, Boolean force, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersNameOrIdDelete(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersNameOrIdDelete(Async)");
        }

        // verify the required parameter 'nameOrId' is set
        if (nameOrId == null) {
            throw new ApiException("Missing the required parameter 'nameOrId' when calling containersNameOrIdDelete(Async)");
        }

        return containersNameOrIdDeleteCall(xAuthToken, xAuthProjectId, nameOrId, force, _callback);

    }

    /**
     * Remove a single container
     * Remove a single container that is identified by container ID or name from a space (corresponding IBM Containers command: &#x60;cf ic delete &lt;container&gt;&#x60;). The container must be stopped before it can be deleted, unless the &#x60;force&#x60; query parameter is set to true.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to delete. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param force Use the &#x60;force&#x60; query parameter if you want to delete the container independent of their current state. The container does not need to be stopped first. To force the deletion of a container, enter &#x60;force&#x3D;true&#x60;, &#x60;force&#x3D;True&#x60;, or &#x60;force&#x3D;1&#x60;. If you want to delete containers that are in a non-running state only, do either not set this query parameter, or enter &#x60;force&#x3D;false&#x60;, &#x60;force&#x3D;False&#x60;, or &#x60;force&#x3D;0&#x60;. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The deletion of your container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public void containersNameOrIdDelete(String xAuthToken, String xAuthProjectId, String nameOrId, Boolean force) throws ApiException {
        containersNameOrIdDeleteWithHttpInfo(xAuthToken, xAuthProjectId, nameOrId, force);
    }

    /**
     * Remove a single container
     * Remove a single container that is identified by container ID or name from a space (corresponding IBM Containers command: &#x60;cf ic delete &lt;container&gt;&#x60;). The container must be stopped before it can be deleted, unless the &#x60;force&#x60; query parameter is set to true.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to delete. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param force Use the &#x60;force&#x60; query parameter if you want to delete the container independent of their current state. The container does not need to be stopped first. To force the deletion of a container, enter &#x60;force&#x3D;true&#x60;, &#x60;force&#x3D;True&#x60;, or &#x60;force&#x3D;1&#x60;. If you want to delete containers that are in a non-running state only, do either not set this query parameter, or enter &#x60;force&#x3D;false&#x60;, &#x60;force&#x3D;False&#x60;, or &#x60;force&#x3D;0&#x60;. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The deletion of your container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> containersNameOrIdDeleteWithHttpInfo(String xAuthToken, String xAuthProjectId, String nameOrId, Boolean force) throws ApiException {
        okhttp3.Call localVarCall = containersNameOrIdDeleteValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, force, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Remove a single container (asynchronously)
     * Remove a single container that is identified by container ID or name from a space (corresponding IBM Containers command: &#x60;cf ic delete &lt;container&gt;&#x60;). The container must be stopped before it can be deleted, unless the &#x60;force&#x60; query parameter is set to true.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to delete. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param force Use the &#x60;force&#x60; query parameter if you want to delete the container independent of their current state. The container does not need to be stopped first. To force the deletion of a container, enter &#x60;force&#x3D;true&#x60;, &#x60;force&#x3D;True&#x60;, or &#x60;force&#x3D;1&#x60;. If you want to delete containers that are in a non-running state only, do either not set this query parameter, or enter &#x60;force&#x3D;false&#x60;, &#x60;force&#x3D;False&#x60;, or &#x60;force&#x3D;0&#x60;. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The deletion of your container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdDeleteAsync(String xAuthToken, String xAuthProjectId, String nameOrId, Boolean force, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersNameOrIdDeleteValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, force, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersNameOrIdJsonGet
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The name or ID of the container that you want to inspect. Run the &#x60;cf ic ps&#x60; command or call the &#x60;GET /containers/json&#x60; endpoint to retrieve a list of containers in your space. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list with detailed information about the container is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container name or ID that you entered, could not be found. Run the &#x60;cf ic ps&#x60; command or call the &#x60;GET /containers/json&#x60; to review the name or ID of the container that you want to inspect. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdJsonGetCall(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/{name_or_id}/json"
            .replace("{" + "name_or_id" + "}", localVarApiClient.escapeString(nameOrId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersNameOrIdJsonGetValidateBeforeCall(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersNameOrIdJsonGet(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersNameOrIdJsonGet(Async)");
        }

        // verify the required parameter 'nameOrId' is set
        if (nameOrId == null) {
            throw new ApiException("Missing the required parameter 'nameOrId' when calling containersNameOrIdJsonGet(Async)");
        }

        return containersNameOrIdJsonGetCall(xAuthToken, xAuthProjectId, nameOrId, _callback);

    }

    /**
     * Inspect a single container
     * This endpoint retrieves detailed information about a single container (corresponding IBM Containers command: &#x60;cf ic inspect &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The name or ID of the container that you want to inspect. Run the &#x60;cf ic ps&#x60; command or call the &#x60;GET /containers/json&#x60; endpoint to retrieve a list of containers in your space. (required)
     * @return ContainerInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list with detailed information about the container is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container name or ID that you entered, could not be found. Run the &#x60;cf ic ps&#x60; command or call the &#x60;GET /containers/json&#x60; to review the name or ID of the container that you want to inspect. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ContainerInfo containersNameOrIdJsonGet(String xAuthToken, String xAuthProjectId, String nameOrId) throws ApiException {
        ApiResponse<ContainerInfo> localVarResp = containersNameOrIdJsonGetWithHttpInfo(xAuthToken, xAuthProjectId, nameOrId);
        return localVarResp.getData();
    }

    /**
     * Inspect a single container
     * This endpoint retrieves detailed information about a single container (corresponding IBM Containers command: &#x60;cf ic inspect &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The name or ID of the container that you want to inspect. Run the &#x60;cf ic ps&#x60; command or call the &#x60;GET /containers/json&#x60; endpoint to retrieve a list of containers in your space. (required)
     * @return ApiResponse&lt;ContainerInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list with detailed information about the container is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container name or ID that you entered, could not be found. Run the &#x60;cf ic ps&#x60; command or call the &#x60;GET /containers/json&#x60; to review the name or ID of the container that you want to inspect. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ContainerInfo> containersNameOrIdJsonGetWithHttpInfo(String xAuthToken, String xAuthProjectId, String nameOrId) throws ApiException {
        okhttp3.Call localVarCall = containersNameOrIdJsonGetValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, null);
        Type localVarReturnType = new TypeToken<ContainerInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Inspect a single container (asynchronously)
     * This endpoint retrieves detailed information about a single container (corresponding IBM Containers command: &#x60;cf ic inspect &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The name or ID of the container that you want to inspect. Run the &#x60;cf ic ps&#x60; command or call the &#x60;GET /containers/json&#x60; endpoint to retrieve a list of containers in your space. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list with detailed information about the container is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container name or ID that you entered, could not be found. Run the &#x60;cf ic ps&#x60; command or call the &#x60;GET /containers/json&#x60; to review the name or ID of the container that you want to inspect. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdJsonGetAsync(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback<ContainerInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersNameOrIdJsonGetValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, _callback);
        Type localVarReturnType = new TypeToken<ContainerInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersNameOrIdPausePost
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to pause. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review all containers in your space that are currently in a running state. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The pausing of all processes inside the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdPausePostCall(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/{name_or_id}/pause"
            .replace("{" + "name_or_id" + "}", localVarApiClient.escapeString(nameOrId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersNameOrIdPausePostValidateBeforeCall(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersNameOrIdPausePost(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersNameOrIdPausePost(Async)");
        }

        // verify the required parameter 'nameOrId' is set
        if (nameOrId == null) {
            throw new ApiException("Missing the required parameter 'nameOrId' when calling containersNameOrIdPausePost(Async)");
        }

        return containersNameOrIdPausePostCall(xAuthToken, xAuthProjectId, nameOrId, _callback);

    }

    /**
     * Pause a single container
     * Pause all processes in a running single container with a given container ID or name (corresponding IBM Containers command: &#x60;cf ic pause &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to pause. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review all containers in your space that are currently in a running state. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The pausing of all processes inside the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public void containersNameOrIdPausePost(String xAuthToken, String xAuthProjectId, String nameOrId) throws ApiException {
        containersNameOrIdPausePostWithHttpInfo(xAuthToken, xAuthProjectId, nameOrId);
    }

    /**
     * Pause a single container
     * Pause all processes in a running single container with a given container ID or name (corresponding IBM Containers command: &#x60;cf ic pause &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to pause. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review all containers in your space that are currently in a running state. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The pausing of all processes inside the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> containersNameOrIdPausePostWithHttpInfo(String xAuthToken, String xAuthProjectId, String nameOrId) throws ApiException {
        okhttp3.Call localVarCall = containersNameOrIdPausePostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Pause a single container (asynchronously)
     * Pause all processes in a running single container with a given container ID or name (corresponding IBM Containers command: &#x60;cf ic pause &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to pause. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review all containers in your space that are currently in a running state. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The pausing of all processes inside the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdPausePostAsync(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersNameOrIdPausePostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersNameOrIdRenamePost
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to rename. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param name The new name for the container. The characters in the name can include uppercase letters, lowercase letters, numbers, periods (.), underscores (_), or hyphens (-), but the name must start with a letter. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The request to rename the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict. A container with the same name already exists. Choose another name for your container and re-run the API call.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdRenamePostCall(String xAuthToken, String xAuthProjectId, String nameOrId, String name, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/{name_or_id}/rename"
            .replace("{" + "name_or_id" + "}", localVarApiClient.escapeString(nameOrId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersNameOrIdRenamePostValidateBeforeCall(String xAuthToken, String xAuthProjectId, String nameOrId, String name, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersNameOrIdRenamePost(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersNameOrIdRenamePost(Async)");
        }

        // verify the required parameter 'nameOrId' is set
        if (nameOrId == null) {
            throw new ApiException("Missing the required parameter 'nameOrId' when calling containersNameOrIdRenamePost(Async)");
        }

        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling containersNameOrIdRenamePost(Async)");
        }

        return containersNameOrIdRenamePostCall(xAuthToken, xAuthProjectId, nameOrId, name, _callback);

    }

    /**
     * Rename a single container
     * Change the current name of an existing single container that is identified by the container ID or name (corresponding IBM Containers command: &#x60;cf ic rename &lt;old_name&gt; &lt;new_name&gt;&#x60;). 
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to rename. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param name The new name for the container. The characters in the name can include uppercase letters, lowercase letters, numbers, periods (.), underscores (_), or hyphens (-), but the name must start with a letter. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The request to rename the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict. A container with the same name already exists. Choose another name for your container and re-run the API call.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public void containersNameOrIdRenamePost(String xAuthToken, String xAuthProjectId, String nameOrId, String name) throws ApiException {
        containersNameOrIdRenamePostWithHttpInfo(xAuthToken, xAuthProjectId, nameOrId, name);
    }

    /**
     * Rename a single container
     * Change the current name of an existing single container that is identified by the container ID or name (corresponding IBM Containers command: &#x60;cf ic rename &lt;old_name&gt; &lt;new_name&gt;&#x60;). 
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to rename. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param name The new name for the container. The characters in the name can include uppercase letters, lowercase letters, numbers, periods (.), underscores (_), or hyphens (-), but the name must start with a letter. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The request to rename the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict. A container with the same name already exists. Choose another name for your container and re-run the API call.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> containersNameOrIdRenamePostWithHttpInfo(String xAuthToken, String xAuthProjectId, String nameOrId, String name) throws ApiException {
        okhttp3.Call localVarCall = containersNameOrIdRenamePostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, name, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Rename a single container (asynchronously)
     * Change the current name of an existing single container that is identified by the container ID or name (corresponding IBM Containers command: &#x60;cf ic rename &lt;old_name&gt; &lt;new_name&gt;&#x60;). 
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to rename. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param name The new name for the container. The characters in the name can include uppercase letters, lowercase letters, numbers, periods (.), underscores (_), or hyphens (-), but the name must start with a letter. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The request to rename the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict. A container with the same name already exists. Choose another name for your container and re-run the API call.  </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdRenamePostAsync(String xAuthToken, String xAuthProjectId, String nameOrId, String name, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersNameOrIdRenamePostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, name, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersNameOrIdRestartPost
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to restart. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review all containers in your space. (required)
     * @param t The number of seconds to wait before the container is restarted. For example, if you want a container to restart after 10 seconds, enter &#x60;t&#x3D;10&#x60;. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The restart of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to restart the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdRestartPostCall(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/{name_or_id}/restart"
            .replace("{" + "name_or_id" + "}", localVarApiClient.escapeString(nameOrId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (t != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("t", t));
        }

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersNameOrIdRestartPostValidateBeforeCall(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersNameOrIdRestartPost(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersNameOrIdRestartPost(Async)");
        }

        // verify the required parameter 'nameOrId' is set
        if (nameOrId == null) {
            throw new ApiException("Missing the required parameter 'nameOrId' when calling containersNameOrIdRestartPost(Async)");
        }

        return containersNameOrIdRestartPostCall(xAuthToken, xAuthProjectId, nameOrId, t, _callback);

    }

    /**
     * Restart a single container
     * Restart a container with a given container ID or name (corresponding IBM Containers command: &#x60;cf ic restart &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to restart. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review all containers in your space. (required)
     * @param t The number of seconds to wait before the container is restarted. For example, if you want a container to restart after 10 seconds, enter &#x60;t&#x3D;10&#x60;. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The restart of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to restart the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public void containersNameOrIdRestartPost(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t) throws ApiException {
        containersNameOrIdRestartPostWithHttpInfo(xAuthToken, xAuthProjectId, nameOrId, t);
    }

    /**
     * Restart a single container
     * Restart a container with a given container ID or name (corresponding IBM Containers command: &#x60;cf ic restart &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to restart. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review all containers in your space. (required)
     * @param t The number of seconds to wait before the container is restarted. For example, if you want a container to restart after 10 seconds, enter &#x60;t&#x3D;10&#x60;. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The restart of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to restart the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> containersNameOrIdRestartPostWithHttpInfo(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t) throws ApiException {
        okhttp3.Call localVarCall = containersNameOrIdRestartPostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, t, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Restart a single container (asynchronously)
     * Restart a container with a given container ID or name (corresponding IBM Containers command: &#x60;cf ic restart &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to restart. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review all containers in your space. (required)
     * @param t The number of seconds to wait before the container is restarted. For example, if you want a container to restart after 10 seconds, enter &#x60;t&#x3D;10&#x60;. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The restart of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to restart the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdRestartPostAsync(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersNameOrIdRestartPostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, t, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersNameOrIdStartPost
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to start. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the containers in your space that are currently not in a running state. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The start of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to start the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdStartPostCall(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/{name_or_id}/start"
            .replace("{" + "name_or_id" + "}", localVarApiClient.escapeString(nameOrId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersNameOrIdStartPostValidateBeforeCall(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersNameOrIdStartPost(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersNameOrIdStartPost(Async)");
        }

        // verify the required parameter 'nameOrId' is set
        if (nameOrId == null) {
            throw new ApiException("Missing the required parameter 'nameOrId' when calling containersNameOrIdStartPost(Async)");
        }

        return containersNameOrIdStartPostCall(xAuthToken, xAuthProjectId, nameOrId, _callback);

    }

    /**
     * Start a single container
     * Start a single container with a given container name or ID (corresponding IBM Containers command: &#x60;cf ic start &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to start. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the containers in your space that are currently not in a running state. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The start of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to start the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public void containersNameOrIdStartPost(String xAuthToken, String xAuthProjectId, String nameOrId) throws ApiException {
        containersNameOrIdStartPostWithHttpInfo(xAuthToken, xAuthProjectId, nameOrId);
    }

    /**
     * Start a single container
     * Start a single container with a given container name or ID (corresponding IBM Containers command: &#x60;cf ic start &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to start. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the containers in your space that are currently not in a running state. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The start of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to start the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> containersNameOrIdStartPostWithHttpInfo(String xAuthToken, String xAuthProjectId, String nameOrId) throws ApiException {
        okhttp3.Call localVarCall = containersNameOrIdStartPostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Start a single container (asynchronously)
     * Start a single container with a given container name or ID (corresponding IBM Containers command: &#x60;cf ic start &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to start. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the containers in your space that are currently not in a running state. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The start of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to start the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdStartPostAsync(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersNameOrIdStartPostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersNameOrIdStopPost
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to stop. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the containers in your space that are currently in a running state. (required)
     * @param t The number of seconds to wait before the container is stopped. For example, if you want a container to stop after 10 seconds, enter &#x60;t&#x3D;10&#x60;. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The stop of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to stop the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdStopPostCall(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/{name_or_id}/stop"
            .replace("{" + "name_or_id" + "}", localVarApiClient.escapeString(nameOrId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (t != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("t", t));
        }

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersNameOrIdStopPostValidateBeforeCall(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersNameOrIdStopPost(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersNameOrIdStopPost(Async)");
        }

        // verify the required parameter 'nameOrId' is set
        if (nameOrId == null) {
            throw new ApiException("Missing the required parameter 'nameOrId' when calling containersNameOrIdStopPost(Async)");
        }

        return containersNameOrIdStopPostCall(xAuthToken, xAuthProjectId, nameOrId, t, _callback);

    }

    /**
     * Stop a single container
     * Stop a single container with a given container name or ID (corresponding IBM Containers command: &#x60;cf ic stop &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to stop. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the containers in your space that are currently in a running state. (required)
     * @param t The number of seconds to wait before the container is stopped. For example, if you want a container to stop after 10 seconds, enter &#x60;t&#x3D;10&#x60;. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The stop of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to stop the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public void containersNameOrIdStopPost(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t) throws ApiException {
        containersNameOrIdStopPostWithHttpInfo(xAuthToken, xAuthProjectId, nameOrId, t);
    }

    /**
     * Stop a single container
     * Stop a single container with a given container name or ID (corresponding IBM Containers command: &#x60;cf ic stop &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to stop. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the containers in your space that are currently in a running state. (required)
     * @param t The number of seconds to wait before the container is stopped. For example, if you want a container to stop after 10 seconds, enter &#x60;t&#x3D;10&#x60;. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The stop of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to stop the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> containersNameOrIdStopPostWithHttpInfo(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t) throws ApiException {
        okhttp3.Call localVarCall = containersNameOrIdStopPostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, t, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Stop a single container (asynchronously)
     * Stop a single container with a given container name or ID (corresponding IBM Containers command: &#x60;cf ic stop &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to stop. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the containers in your space that are currently in a running state. (required)
     * @param t The number of seconds to wait before the container is stopped. For example, if you want a container to stop after 10 seconds, enter &#x60;t&#x3D;10&#x60;. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The stop of the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 304 </td><td> Not Modified. A request to stop the container with the specified name or ID has already been initiated. To review the current state of your container, run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps&#x60; or call the &#x60;GET /containers/json&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdStopPostAsync(String xAuthToken, String xAuthProjectId, String nameOrId, Integer t, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersNameOrIdStopPostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, t, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersNameOrIdUnpausePost
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to unpause. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The unpausing of all processes inside the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdUnpausePostCall(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/{name_or_id}/unpause"
            .replace("{" + "name_or_id" + "}", localVarApiClient.escapeString(nameOrId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersNameOrIdUnpausePostValidateBeforeCall(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersNameOrIdUnpausePost(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersNameOrIdUnpausePost(Async)");
        }

        // verify the required parameter 'nameOrId' is set
        if (nameOrId == null) {
            throw new ApiException("Missing the required parameter 'nameOrId' when calling containersNameOrIdUnpausePost(Async)");
        }

        return containersNameOrIdUnpausePostCall(xAuthToken, xAuthProjectId, nameOrId, _callback);

    }

    /**
     * Unpause a single container
     * Unpause all processes that are currently stopped inside a single containers with a given container ID or name (corresponding IBM Containers command: &#x60;cf ic unpause &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to unpause. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The unpausing of all processes inside the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public void containersNameOrIdUnpausePost(String xAuthToken, String xAuthProjectId, String nameOrId) throws ApiException {
        containersNameOrIdUnpausePostWithHttpInfo(xAuthToken, xAuthProjectId, nameOrId);
    }

    /**
     * Unpause a single container
     * Unpause all processes that are currently stopped inside a single containers with a given container ID or name (corresponding IBM Containers command: &#x60;cf ic unpause &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to unpause. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The unpausing of all processes inside the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> containersNameOrIdUnpausePostWithHttpInfo(String xAuthToken, String xAuthProjectId, String nameOrId) throws ApiException {
        okhttp3.Call localVarCall = containersNameOrIdUnpausePostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Unpause a single container (asynchronously)
     * Unpause all processes that are currently stopped inside a single containers with a given container ID or name (corresponding IBM Containers command: &#x60;cf ic unpause &lt;container&gt;&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param nameOrId The unique identifier or name of the container that you want to unpause. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review all containers in your space. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content. The unpausing of all processes inside the container has been initiated. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The container with the specified name or ID could not be found. Run &#x60;cf ic ps -a&#x60; or call the &#x60;GET /containers/json?all&#x3D;true&#x60; endpoint to review the ID and name of your container. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersNameOrIdUnpausePostAsync(String xAuthToken, String xAuthProjectId, String nameOrId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersNameOrIdUnpausePostValidateBeforeCall(xAuthToken, xAuthProjectId, nameOrId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
