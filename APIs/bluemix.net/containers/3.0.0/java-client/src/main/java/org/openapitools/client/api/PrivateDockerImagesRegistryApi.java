/*
 * IBM Containers API
 * Containers are virtual software objects that include all the elements that an app needs to run. A container has the benefits of resource isolation and allocation but is more portable and efficient than, for example, a virtual machine.   This documentation describes the IBM Containers API, which is based on the Docker Remote API. The API provides endpoints that you can use to create and manage your single containers and container groups in Bluemix. Endpoints are summarized under the following tags:   - **Authentication**: Retrieve and refresh your TLS certificates.  - **Private Docker images registry**: Create your own private Docker images registry in Bluemix by setting a namespace for your organization.  - **Images**: View, build, and push your images to your private Bluemix registry so you can use them with IBM Containers. You can also scan your container images with the Vulnerability Advisor against standard policies set by the organization manager and a database of known Ubuntu issues.  - **Single Containers**: Create and manage single containers in Bluemix. Use a single container to implement short-lived processes or to run simple tests as you develop an app or service. To make your single container available from the internet, review the `Public IP addresses` endpoints.  - **Container Groups**: Create and manage your container groups in Bluemix. A container group consists of multiple single containers that are all created from the same container image and as a consequence are configured in the same way. Container groups offer further options at no cost to make your app highly available. These options include in-built load balancing, auto-recovery of unhealthy container instances, and auto-scaling of container instances based on CPU and memory usage. Map a public route to your container group to make your app accessible from the internet.   - **Public IP addresses**: Use these endpoints to request public IP addresses for your space. You can bind this IP address to your container to make your container accessible from the internet.  - **File shares**: Create, list and delete file shares in a space. A file share is a NFS storage system that hosts Docker volumes.   - **Volumes**: Create and manage container volumes in your space to persist the data of your containers.      Each API request requires an HTTP header that includes the 'X-Auth-Token’ and 'X-Auth-Project-Id’ parameter.   - **X-Auth-Token**: The JSON web token (JWT) that you receive when logging into the Bluemix platform. It allows you to use the IBM Containers REST API, access services, and resources. Run `cf oauth-token` to retrieve your access token information. - **X-Auth-Project-Id**: The unique ID of your organization space where you want to create or work with your containers. Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space, to retrieve your space ID.    For further information about how containers work in the IBM Containers service, review the documentation under https://new-console.ng.bluemix.net/docs/containers/container_index.html. 
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Namespace;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PrivateDockerImagesRegistryApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public PrivateDockerImagesRegistryApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PrivateDockerImagesRegistryApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for registryNamespacesGet
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The namespace of the organization is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. A namespace could not be found for the organization. Set a namespace by running &#x60;cf ic namespace set &lt;namespace&gt;&#x60;, or calling the &#x60;PUT /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call registryNamespacesGetCall(String xAuthToken, String xAuthProjectId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/registry/namespaces";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call registryNamespacesGetValidateBeforeCall(String xAuthToken, String xAuthProjectId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling registryNamespacesGet(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling registryNamespacesGet(Async)");
        }

        return registryNamespacesGetCall(xAuthToken, xAuthProjectId, _callback);

    }

    /**
     * Retrieve the namespace of an organization.
     * This endpoint retrieves the namespace that was set for the organization that owns the current space (corresponding IBM Containers command: &#x60;cf ic namespace get&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @return Namespace
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The namespace of the organization is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. A namespace could not be found for the organization. Set a namespace by running &#x60;cf ic namespace set &lt;namespace&gt;&#x60;, or calling the &#x60;PUT /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public Namespace registryNamespacesGet(String xAuthToken, String xAuthProjectId) throws ApiException {
        ApiResponse<Namespace> localVarResp = registryNamespacesGetWithHttpInfo(xAuthToken, xAuthProjectId);
        return localVarResp.getData();
    }

    /**
     * Retrieve the namespace of an organization.
     * This endpoint retrieves the namespace that was set for the organization that owns the current space (corresponding IBM Containers command: &#x60;cf ic namespace get&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @return ApiResponse&lt;Namespace&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The namespace of the organization is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. A namespace could not be found for the organization. Set a namespace by running &#x60;cf ic namespace set &lt;namespace&gt;&#x60;, or calling the &#x60;PUT /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Namespace> registryNamespacesGetWithHttpInfo(String xAuthToken, String xAuthProjectId) throws ApiException {
        okhttp3.Call localVarCall = registryNamespacesGetValidateBeforeCall(xAuthToken, xAuthProjectId, null);
        Type localVarReturnType = new TypeToken<Namespace>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve the namespace of an organization. (asynchronously)
     * This endpoint retrieves the namespace that was set for the organization that owns the current space (corresponding IBM Containers command: &#x60;cf ic namespace get&#x60;).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The namespace of the organization is returned. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. A namespace could not be found for the organization. Set a namespace by running &#x60;cf ic namespace set &lt;namespace&gt;&#x60;, or calling the &#x60;PUT /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call registryNamespacesGetAsync(String xAuthToken, String xAuthProjectId, final ApiCallback<Namespace> _callback) throws ApiException {

        okhttp3.Call localVarCall = registryNamespacesGetValidateBeforeCall(xAuthToken, xAuthProjectId, _callback);
        Type localVarReturnType = new TypeToken<Namespace>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for registryNamespacesNamespaceGet
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param namespace The name of the namespace that you would like to use for your organization and for which you would like to check availability in Bluemix. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The namespace that you chose is already used in Bluemix. Choose another namespace and re-run the API call. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. The namespace that you chose does not exist. You can use it to set it for your organization by running &#x60;cf ic namespace set &lt;namespace&gt;&#x60;, or calling the &#x60;PUT /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call registryNamespacesNamespaceGetCall(String xAuthToken, String xAuthProjectId, String namespace, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/registry/namespaces/{namespace}"
            .replace("{" + "namespace" + "}", localVarApiClient.escapeString(namespace.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call registryNamespacesNamespaceGetValidateBeforeCall(String xAuthToken, String xAuthProjectId, String namespace, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling registryNamespacesNamespaceGet(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling registryNamespacesNamespaceGet(Async)");
        }

        // verify the required parameter 'namespace' is set
        if (namespace == null) {
            throw new ApiException("Missing the required parameter 'namespace' when calling registryNamespacesNamespaceGet(Async)");
        }

        return registryNamespacesNamespaceGetCall(xAuthToken, xAuthProjectId, namespace, _callback);

    }

    /**
     * Check the availability of a namespace
     * This endpoint checks whether a namespace is available in Bluemix and can be used to set up the private Docker images registry for an organization. When a HTTP code &#x60;201 Ok&#x60; is returned, the namespace is already assigned to another organization in Bluemix and cannot be used. When a HTTP code &#x60;404 Not found&#x60; is returned, the namespace can be used for your organization.    Consider the following rules when choosing a namespace for your organization:   - Every organization can have one namespace at a time only  - The namespace must be unique in Bluemix.  - The namespace can be 4-30 characters long.  - The namespace must start with at least one letter or number.  - The namespace can only contain lowercase letters, numbers or underscores (_). 
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param namespace The name of the namespace that you would like to use for your organization and for which you would like to check availability in Bluemix. (required)
     * @return Namespace
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The namespace that you chose is already used in Bluemix. Choose another namespace and re-run the API call. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. The namespace that you chose does not exist. You can use it to set it for your organization by running &#x60;cf ic namespace set &lt;namespace&gt;&#x60;, or calling the &#x60;PUT /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public Namespace registryNamespacesNamespaceGet(String xAuthToken, String xAuthProjectId, String namespace) throws ApiException {
        ApiResponse<Namespace> localVarResp = registryNamespacesNamespaceGetWithHttpInfo(xAuthToken, xAuthProjectId, namespace);
        return localVarResp.getData();
    }

    /**
     * Check the availability of a namespace
     * This endpoint checks whether a namespace is available in Bluemix and can be used to set up the private Docker images registry for an organization. When a HTTP code &#x60;201 Ok&#x60; is returned, the namespace is already assigned to another organization in Bluemix and cannot be used. When a HTTP code &#x60;404 Not found&#x60; is returned, the namespace can be used for your organization.    Consider the following rules when choosing a namespace for your organization:   - Every organization can have one namespace at a time only  - The namespace must be unique in Bluemix.  - The namespace can be 4-30 characters long.  - The namespace must start with at least one letter or number.  - The namespace can only contain lowercase letters, numbers or underscores (_). 
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param namespace The name of the namespace that you would like to use for your organization and for which you would like to check availability in Bluemix. (required)
     * @return ApiResponse&lt;Namespace&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The namespace that you chose is already used in Bluemix. Choose another namespace and re-run the API call. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. The namespace that you chose does not exist. You can use it to set it for your organization by running &#x60;cf ic namespace set &lt;namespace&gt;&#x60;, or calling the &#x60;PUT /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Namespace> registryNamespacesNamespaceGetWithHttpInfo(String xAuthToken, String xAuthProjectId, String namespace) throws ApiException {
        okhttp3.Call localVarCall = registryNamespacesNamespaceGetValidateBeforeCall(xAuthToken, xAuthProjectId, namespace, null);
        Type localVarReturnType = new TypeToken<Namespace>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Check the availability of a namespace (asynchronously)
     * This endpoint checks whether a namespace is available in Bluemix and can be used to set up the private Docker images registry for an organization. When a HTTP code &#x60;201 Ok&#x60; is returned, the namespace is already assigned to another organization in Bluemix and cannot be used. When a HTTP code &#x60;404 Not found&#x60; is returned, the namespace can be used for your organization.    Consider the following rules when choosing a namespace for your organization:   - Every organization can have one namespace at a time only  - The namespace must be unique in Bluemix.  - The namespace can be 4-30 characters long.  - The namespace must start with at least one letter or number.  - The namespace can only contain lowercase letters, numbers or underscores (_). 
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param namespace The name of the namespace that you would like to use for your organization and for which you would like to check availability in Bluemix. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The namespace that you chose is already used in Bluemix. Choose another namespace and re-run the API call. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. The namespace that you chose does not exist. You can use it to set it for your organization by running &#x60;cf ic namespace set &lt;namespace&gt;&#x60;, or calling the &#x60;PUT /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call registryNamespacesNamespaceGetAsync(String xAuthToken, String xAuthProjectId, String namespace, final ApiCallback<Namespace> _callback) throws ApiException {

        okhttp3.Call localVarCall = registryNamespacesNamespaceGetValidateBeforeCall(xAuthToken, xAuthProjectId, namespace, _callback);
        Type localVarReturnType = new TypeToken<Namespace>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for registryNamespacesNamespacePut
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param namespace The name for your namespace to create your private Docker images registry in Bluemix. You cannot change the name afterward. The namespace can be 4-30 characters long, must start with at least one letter or number, and can only contain lowercase letters, numbers or underscores (_). You can test the availability of your namespace by calling the &#x60;GET /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. When a HTTP code &#x60;404 Not Found&#x60; is returned, the namespace is available in Bluemix.  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The namespace is successfully set for your organization. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The specified namespace does not meet the Bluemix namespace requirements. The namespace can be 4-30 characters long, must start with at least one letter or number, and can only contain lowercase letters, numbers or underscores (_). Verify your namespace and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict. The namespace that you chose either already exists in Bluemix, or a namespace is already been set for your organization. Run &#x60;cf ic namespace get&#x60; or call the &#x60;GET /registry/namespaces&#x60; endpoint to retrieve your namespace information. If a namespace is not yet set for your organization, choose another name. You can test the namespace by calling the &#x60;GET /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. Re-run the API call with the updated namespace. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call registryNamespacesNamespacePutCall(String xAuthToken, String xAuthProjectId, String namespace, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/registry/namespaces/{namespace}"
            .replace("{" + "namespace" + "}", localVarApiClient.escapeString(namespace.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call registryNamespacesNamespacePutValidateBeforeCall(String xAuthToken, String xAuthProjectId, String namespace, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling registryNamespacesNamespacePut(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling registryNamespacesNamespacePut(Async)");
        }

        // verify the required parameter 'namespace' is set
        if (namespace == null) {
            throw new ApiException("Missing the required parameter 'namespace' when calling registryNamespacesNamespacePut(Async)");
        }

        return registryNamespacesNamespacePutCall(xAuthToken, xAuthProjectId, namespace, _callback);

    }

    /**
     * Set a namespace for your private Bluemix registry.
     * Set up your own Docker images registry in Bluemix by defining a namespace for your organization (corresponding IBM Containers command: &#x60;cf ic namespace set &lt;namespace&gt;&#x60;). The namespace is used to generate a unique URL to your private Bluemix registry. In your private registry you store all Docker images that you want to share across your organization. To create a container from an image, you must first push the image to your registry.    The namespace cannot be changed after is has been set. Consider the following rules to choose a namespace for your organization:   - Every organization can have one namespace at a time only  - The namespace must be unique in Bluemix.  - The namespace can be 4-30 characters long.  - The namespace must start with at least one letter or number.  - The namespace can only contain lowercase letters, numbers or underscores (_).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param namespace The name for your namespace to create your private Docker images registry in Bluemix. You cannot change the name afterward. The namespace can be 4-30 characters long, must start with at least one letter or number, and can only contain lowercase letters, numbers or underscores (_). You can test the availability of your namespace by calling the &#x60;GET /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. When a HTTP code &#x60;404 Not Found&#x60; is returned, the namespace is available in Bluemix.  (required)
     * @return Namespace
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The namespace is successfully set for your organization. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The specified namespace does not meet the Bluemix namespace requirements. The namespace can be 4-30 characters long, must start with at least one letter or number, and can only contain lowercase letters, numbers or underscores (_). Verify your namespace and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict. The namespace that you chose either already exists in Bluemix, or a namespace is already been set for your organization. Run &#x60;cf ic namespace get&#x60; or call the &#x60;GET /registry/namespaces&#x60; endpoint to retrieve your namespace information. If a namespace is not yet set for your organization, choose another name. You can test the namespace by calling the &#x60;GET /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. Re-run the API call with the updated namespace. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public Namespace registryNamespacesNamespacePut(String xAuthToken, String xAuthProjectId, String namespace) throws ApiException {
        ApiResponse<Namespace> localVarResp = registryNamespacesNamespacePutWithHttpInfo(xAuthToken, xAuthProjectId, namespace);
        return localVarResp.getData();
    }

    /**
     * Set a namespace for your private Bluemix registry.
     * Set up your own Docker images registry in Bluemix by defining a namespace for your organization (corresponding IBM Containers command: &#x60;cf ic namespace set &lt;namespace&gt;&#x60;). The namespace is used to generate a unique URL to your private Bluemix registry. In your private registry you store all Docker images that you want to share across your organization. To create a container from an image, you must first push the image to your registry.    The namespace cannot be changed after is has been set. Consider the following rules to choose a namespace for your organization:   - Every organization can have one namespace at a time only  - The namespace must be unique in Bluemix.  - The namespace can be 4-30 characters long.  - The namespace must start with at least one letter or number.  - The namespace can only contain lowercase letters, numbers or underscores (_).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param namespace The name for your namespace to create your private Docker images registry in Bluemix. You cannot change the name afterward. The namespace can be 4-30 characters long, must start with at least one letter or number, and can only contain lowercase letters, numbers or underscores (_). You can test the availability of your namespace by calling the &#x60;GET /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. When a HTTP code &#x60;404 Not Found&#x60; is returned, the namespace is available in Bluemix.  (required)
     * @return ApiResponse&lt;Namespace&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The namespace is successfully set for your organization. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The specified namespace does not meet the Bluemix namespace requirements. The namespace can be 4-30 characters long, must start with at least one letter or number, and can only contain lowercase letters, numbers or underscores (_). Verify your namespace and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict. The namespace that you chose either already exists in Bluemix, or a namespace is already been set for your organization. Run &#x60;cf ic namespace get&#x60; or call the &#x60;GET /registry/namespaces&#x60; endpoint to retrieve your namespace information. If a namespace is not yet set for your organization, choose another name. You can test the namespace by calling the &#x60;GET /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. Re-run the API call with the updated namespace. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Namespace> registryNamespacesNamespacePutWithHttpInfo(String xAuthToken, String xAuthProjectId, String namespace) throws ApiException {
        okhttp3.Call localVarCall = registryNamespacesNamespacePutValidateBeforeCall(xAuthToken, xAuthProjectId, namespace, null);
        Type localVarReturnType = new TypeToken<Namespace>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Set a namespace for your private Bluemix registry. (asynchronously)
     * Set up your own Docker images registry in Bluemix by defining a namespace for your organization (corresponding IBM Containers command: &#x60;cf ic namespace set &lt;namespace&gt;&#x60;). The namespace is used to generate a unique URL to your private Bluemix registry. In your private registry you store all Docker images that you want to share across your organization. To create a container from an image, you must first push the image to your registry.    The namespace cannot be changed after is has been set. Consider the following rules to choose a namespace for your organization:   - Every organization can have one namespace at a time only  - The namespace must be unique in Bluemix.  - The namespace can be 4-30 characters long.  - The namespace must start with at least one letter or number.  - The namespace can only contain lowercase letters, numbers or underscores (_).
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param namespace The name for your namespace to create your private Docker images registry in Bluemix. You cannot change the name afterward. The namespace can be 4-30 characters long, must start with at least one letter or number, and can only contain lowercase letters, numbers or underscores (_). You can test the availability of your namespace by calling the &#x60;GET /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. When a HTTP code &#x60;404 Not Found&#x60; is returned, the namespace is available in Bluemix.  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> OK. The namespace is successfully set for your organization. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The specified namespace does not meet the Bluemix namespace requirements. The namespace can be 4-30 characters long, must start with at least one letter or number, and can only contain lowercase letters, numbers or underscores (_). Verify your namespace and re-run the API request. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> Conflict. The namespace that you chose either already exists in Bluemix, or a namespace is already been set for your organization. Run &#x60;cf ic namespace get&#x60; or call the &#x60;GET /registry/namespaces&#x60; endpoint to retrieve your namespace information. If a namespace is not yet set for your organization, choose another name. You can test the namespace by calling the &#x60;GET /registry/namespaces/&lt;namespace&gt;&#x60; endpoint. Re-run the API call with the updated namespace. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call registryNamespacesNamespacePutAsync(String xAuthToken, String xAuthProjectId, String namespace, final ApiCallback<Namespace> _callback) throws ApiException {

        okhttp3.Call localVarCall = registryNamespacesNamespacePutValidateBeforeCall(xAuthToken, xAuthProjectId, namespace, _callback);
        Type localVarReturnType = new TypeToken<Namespace>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
