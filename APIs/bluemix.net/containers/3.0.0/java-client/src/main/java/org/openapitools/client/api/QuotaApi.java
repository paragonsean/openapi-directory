/*
 * IBM Containers API
 * Containers are virtual software objects that include all the elements that an app needs to run. A container has the benefits of resource isolation and allocation but is more portable and efficient than, for example, a virtual machine.   This documentation describes the IBM Containers API, which is based on the Docker Remote API. The API provides endpoints that you can use to create and manage your single containers and container groups in Bluemix. Endpoints are summarized under the following tags:   - **Authentication**: Retrieve and refresh your TLS certificates.  - **Private Docker images registry**: Create your own private Docker images registry in Bluemix by setting a namespace for your organization.  - **Images**: View, build, and push your images to your private Bluemix registry so you can use them with IBM Containers. You can also scan your container images with the Vulnerability Advisor against standard policies set by the organization manager and a database of known Ubuntu issues.  - **Single Containers**: Create and manage single containers in Bluemix. Use a single container to implement short-lived processes or to run simple tests as you develop an app or service. To make your single container available from the internet, review the `Public IP addresses` endpoints.  - **Container Groups**: Create and manage your container groups in Bluemix. A container group consists of multiple single containers that are all created from the same container image and as a consequence are configured in the same way. Container groups offer further options at no cost to make your app highly available. These options include in-built load balancing, auto-recovery of unhealthy container instances, and auto-scaling of container instances based on CPU and memory usage. Map a public route to your container group to make your app accessible from the internet.   - **Public IP addresses**: Use these endpoints to request public IP addresses for your space. You can bind this IP address to your container to make your container accessible from the internet.  - **File shares**: Create, list and delete file shares in a space. A file share is a NFS storage system that hosts Docker volumes.   - **Volumes**: Create and manage container volumes in your space to persist the data of your containers.      Each API request requires an HTTP header that includes the 'X-Auth-Token’ and 'X-Auth-Project-Id’ parameter.   - **X-Auth-Token**: The JSON web token (JWT) that you receive when logging into the Bluemix platform. It allows you to use the IBM Containers REST API, access services, and resources. Run `cf oauth-token` to retrieve your access token information. - **X-Auth-Project-Id**: The unique ID of your organization space where you want to create or work with your containers. Run `cf space <space_name> --guid`, where `<space_name>` is the name of your space, to retrieve your space ID.    For further information about how containers work in the IBM Containers service, review the documentation under https://new-console.ng.bluemix.net/docs/containers/container_index.html. 
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ContainersQuotaInfo;
import org.openapitools.client.model.ContainersQuotaList;
import org.openapitools.client.model.ContainersUsageInfo;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class QuotaApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public QuotaApi() {
        this(Configuration.getDefaultApiClient());
    }

    public QuotaApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for containersQuotaGet
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The current quota that is assigned to the organization and space is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersQuotaGetCall(String xAuthToken, String xAuthProjectId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/quota";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersQuotaGetValidateBeforeCall(String xAuthToken, String xAuthProjectId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersQuotaGet(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersQuotaGet(Async)");
        }

        return containersQuotaGetCall(xAuthToken, xAuthProjectId, _callback);

    }

    /**
     * Retrieve organization and space specific quota
     * Retrieve the quota that is assigned to the organization and space.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @return ContainersQuotaInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The current quota that is assigned to the organization and space is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ContainersQuotaInfo containersQuotaGet(String xAuthToken, String xAuthProjectId) throws ApiException {
        ApiResponse<ContainersQuotaInfo> localVarResp = containersQuotaGetWithHttpInfo(xAuthToken, xAuthProjectId);
        return localVarResp.getData();
    }

    /**
     * Retrieve organization and space specific quota
     * Retrieve the quota that is assigned to the organization and space.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @return ApiResponse&lt;ContainersQuotaInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The current quota that is assigned to the organization and space is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ContainersQuotaInfo> containersQuotaGetWithHttpInfo(String xAuthToken, String xAuthProjectId) throws ApiException {
        okhttp3.Call localVarCall = containersQuotaGetValidateBeforeCall(xAuthToken, xAuthProjectId, null);
        Type localVarReturnType = new TypeToken<ContainersQuotaInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve organization and space specific quota (asynchronously)
     * Retrieve the quota that is assigned to the organization and space.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. The current quota that is assigned to the organization and space is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersQuotaGetAsync(String xAuthToken, String xAuthProjectId, final ApiCallback<ContainersQuotaInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersQuotaGetValidateBeforeCall(xAuthToken, xAuthProjectId, _callback);
        Type localVarReturnType = new TypeToken<ContainersQuotaInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersQuotaPut
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param containersQuotaList The space quota details that you want to update. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No content. The request to update the organization and/ or space quota has been processed.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersQuotaPutCall(String xAuthToken, String xAuthProjectId, ContainersQuotaList containersQuotaList, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = containersQuotaList;

        // create path and map variables
        String localVarPath = "/containers/quota";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersQuotaPutValidateBeforeCall(String xAuthToken, String xAuthProjectId, ContainersQuotaList containersQuotaList, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersQuotaPut(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersQuotaPut(Async)");
        }

        // verify the required parameter 'containersQuotaList' is set
        if (containersQuotaList == null) {
            throw new ApiException("Missing the required parameter 'containersQuotaList' when calling containersQuotaPut(Async)");
        }

        return containersQuotaPutCall(xAuthToken, xAuthProjectId, containersQuotaList, _callback);

    }

    /**
     * Update space quota
     * This endpoint updates the quota that is allocated to a Bluemix space.    **Note**: Only paid accounts are eligbile to update the space quota. If you are using a free-trial account, upgrade to a paid account first.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param containersQuotaList The space quota details that you want to update. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No content. The request to update the organization and/ or space quota has been processed.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public void containersQuotaPut(String xAuthToken, String xAuthProjectId, ContainersQuotaList containersQuotaList) throws ApiException {
        containersQuotaPutWithHttpInfo(xAuthToken, xAuthProjectId, containersQuotaList);
    }

    /**
     * Update space quota
     * This endpoint updates the quota that is allocated to a Bluemix space.    **Note**: Only paid accounts are eligbile to update the space quota. If you are using a free-trial account, upgrade to a paid account first.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param containersQuotaList The space quota details that you want to update. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No content. The request to update the organization and/ or space quota has been processed.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> containersQuotaPutWithHttpInfo(String xAuthToken, String xAuthProjectId, ContainersQuotaList containersQuotaList) throws ApiException {
        okhttp3.Call localVarCall = containersQuotaPutValidateBeforeCall(xAuthToken, xAuthProjectId, containersQuotaList, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update space quota (asynchronously)
     * This endpoint updates the quota that is allocated to a Bluemix space.    **Note**: Only paid accounts are eligbile to update the space quota. If you are using a free-trial account, upgrade to a paid account first.
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param containersQuotaList The space quota details that you want to update. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No content. The request to update the organization and/ or space quota has been processed.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. The  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersQuotaPutAsync(String xAuthToken, String xAuthProjectId, ContainersQuotaList containersQuotaList, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersQuotaPutValidateBeforeCall(xAuthToken, xAuthProjectId, containersQuotaList, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for containersUsageGet
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list of available container sizes as well as the quota limit and usage for a space is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersUsageGetCall(String xAuthToken, String xAuthProjectId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/containers/usage";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xAuthToken != null) {
            localVarHeaderParams.put("X-Auth-Token", localVarApiClient.parameterToString(xAuthToken));
        }

        if (xAuthProjectId != null) {
            localVarHeaderParams.put("X-Auth-Project-Id", localVarApiClient.parameterToString(xAuthProjectId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call containersUsageGetValidateBeforeCall(String xAuthToken, String xAuthProjectId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'xAuthToken' is set
        if (xAuthToken == null) {
            throw new ApiException("Missing the required parameter 'xAuthToken' when calling containersUsageGet(Async)");
        }

        // verify the required parameter 'xAuthProjectId' is set
        if (xAuthProjectId == null) {
            throw new ApiException("Missing the required parameter 'xAuthProjectId' when calling containersUsageGet(Async)");
        }

        return containersUsageGetCall(xAuthToken, xAuthProjectId, _callback);

    }

    /**
     * List container sizes and quota limits
     * This endpoint returns a list of available container sizes and the quota limit and usage for the space.   - Container sizes: A list of available container sizes indicating the amount of container memory, disk space and virtual CPUs that can be assigned to the container. - Quota limit: Lists the number of containers, public IP addresses, available container memory, and virtual CPUS that are allocated to a space.  - Quota usage: Lists the current number of containers, images, and public IP addresses in a space that is counted towards your quota limit. 
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @return ContainersUsageInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list of available container sizes as well as the quota limit and usage for a space is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ContainersUsageInfo containersUsageGet(String xAuthToken, String xAuthProjectId) throws ApiException {
        ApiResponse<ContainersUsageInfo> localVarResp = containersUsageGetWithHttpInfo(xAuthToken, xAuthProjectId);
        return localVarResp.getData();
    }

    /**
     * List container sizes and quota limits
     * This endpoint returns a list of available container sizes and the quota limit and usage for the space.   - Container sizes: A list of available container sizes indicating the amount of container memory, disk space and virtual CPUs that can be assigned to the container. - Quota limit: Lists the number of containers, public IP addresses, available container memory, and virtual CPUS that are allocated to a space.  - Quota usage: Lists the current number of containers, images, and public IP addresses in a space that is counted towards your quota limit. 
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @return ApiResponse&lt;ContainersUsageInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list of available container sizes as well as the quota limit and usage for a space is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ContainersUsageInfo> containersUsageGetWithHttpInfo(String xAuthToken, String xAuthProjectId) throws ApiException {
        okhttp3.Call localVarCall = containersUsageGetValidateBeforeCall(xAuthToken, xAuthProjectId, null);
        Type localVarReturnType = new TypeToken<ContainersUsageInfo>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List container sizes and quota limits (asynchronously)
     * This endpoint returns a list of available container sizes and the quota limit and usage for the space.   - Container sizes: A list of available container sizes indicating the amount of container memory, disk space and virtual CPUs that can be assigned to the container. - Quota limit: Lists the number of containers, public IP addresses, available container memory, and virtual CPUS that are allocated to a space.  - Quota usage: Lists the current number of containers, images, and public IP addresses in a space that is counted towards your quota limit. 
     * @param xAuthToken The Bluemix JSON web token that you receive when logging into Bluemix. Run &#x60;cf oauth-token&#x60; to retrieve your access token. (required)
     * @param xAuthProjectId The unique ID of your organization space where you want to create or work with your containers. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK. A list of available container sizes as well as the quota limit and usage for a space is returned.  </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Authentication failed. The Access Token is invalid, or the Space ID that you entered could not be found. Run &#x60;cf oauth-token&#x60; to retrieve your access token. Run &#x60;cf space &lt;space_name&gt; --guid&#x60;, where &#x60;&lt;space_name&gt;&#x60; is the name of your space, to retrieve your space ID. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error. The IBM Containers service is currently unavailable. Your request could not be processed. Please wait a few minutes and try again. If you still encounter this problem, note the incident ID and contact the IBM Bluemix support. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call containersUsageGetAsync(String xAuthToken, String xAuthProjectId, final ApiCallback<ContainersUsageInfo> _callback) throws ApiException {

        okhttp3.Call localVarCall = containersUsageGetValidateBeforeCall(xAuthToken, xAuthProjectId, _callback);
        Type localVarReturnType = new TypeToken<ContainersUsageInfo>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
