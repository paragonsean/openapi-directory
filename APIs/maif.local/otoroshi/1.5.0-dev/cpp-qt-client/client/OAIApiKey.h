/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiKey.h
 *
 * An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.
 */

#ifndef OAIApiKey_H
#define OAIApiKey_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApiKey : public OAIObject {
public:
    OAIApiKey();
    OAIApiKey(QString json);
    ~OAIApiKey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAuthorizedEntities() const;
    void setAuthorizedEntities(const QList<QString> &authorized_entities);
    bool is_authorized_entities_Set() const;
    bool is_authorized_entities_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientName() const;
    void setClientName(const QString &client_name);
    bool is_client_name_Set() const;
    bool is_client_name_Valid() const;

    QString getClientSecret() const;
    void setClientSecret(const QString &client_secret);
    bool is_client_secret_Set() const;
    bool is_client_secret_Valid() const;

    qint64 getDailyQuota() const;
    void setDailyQuota(const qint64 &daily_quota);
    bool is_daily_quota_Set() const;
    bool is_daily_quota_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    qint64 getMonthlyQuota() const;
    void setMonthlyQuota(const qint64 &monthly_quota);
    bool is_monthly_quota_Set() const;
    bool is_monthly_quota_Valid() const;

    qint64 getThrottlingQuota() const;
    void setThrottlingQuota(const qint64 &throttling_quota);
    bool is_throttling_quota_Set() const;
    bool is_throttling_quota_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_authorized_entities;
    bool m_authorized_entities_isSet;
    bool m_authorized_entities_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_name;
    bool m_client_name_isSet;
    bool m_client_name_isValid;

    QString m_client_secret;
    bool m_client_secret_isSet;
    bool m_client_secret_isValid;

    qint64 m_daily_quota;
    bool m_daily_quota_isSet;
    bool m_daily_quota_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    qint64 m_monthly_quota;
    bool m_monthly_quota_isSet;
    bool m_monthly_quota_isValid;

    qint64 m_throttling_quota;
    bool m_throttling_quota_isSet;
    bool m_throttling_quota_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiKey)

#endif // OAIApiKey_H
