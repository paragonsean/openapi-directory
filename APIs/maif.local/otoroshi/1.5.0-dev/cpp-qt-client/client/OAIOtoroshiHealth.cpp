/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOtoroshiHealth.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOtoroshiHealth::OAIOtoroshiHealth(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOtoroshiHealth::OAIOtoroshiHealth() {
    this->initializeModel();
}

OAIOtoroshiHealth::~OAIOtoroshiHealth() {}

void OAIOtoroshiHealth::initializeModel() {

    m_datastore_isSet = false;
    m_datastore_isValid = false;

    m_otoroshi_isSet = false;
    m_otoroshi_isValid = false;
}

void OAIOtoroshiHealth::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOtoroshiHealth::fromJsonObject(QJsonObject json) {

    m_datastore_isValid = ::OpenAPI::fromJsonValue(m_datastore, json[QString("datastore")]);
    m_datastore_isSet = !json[QString("datastore")].isNull() && m_datastore_isValid;

    m_otoroshi_isValid = ::OpenAPI::fromJsonValue(m_otoroshi, json[QString("otoroshi")]);
    m_otoroshi_isSet = !json[QString("otoroshi")].isNull() && m_otoroshi_isValid;
}

QString OAIOtoroshiHealth::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOtoroshiHealth::asJsonObject() const {
    QJsonObject obj;
    if (m_datastore_isSet) {
        obj.insert(QString("datastore"), ::OpenAPI::toJsonValue(m_datastore));
    }
    if (m_otoroshi_isSet) {
        obj.insert(QString("otoroshi"), ::OpenAPI::toJsonValue(m_otoroshi));
    }
    return obj;
}

QString OAIOtoroshiHealth::getDatastore() const {
    return m_datastore;
}
void OAIOtoroshiHealth::setDatastore(const QString &datastore) {
    m_datastore = datastore;
    m_datastore_isSet = true;
}

bool OAIOtoroshiHealth::is_datastore_Set() const{
    return m_datastore_isSet;
}

bool OAIOtoroshiHealth::is_datastore_Valid() const{
    return m_datastore_isValid;
}

QString OAIOtoroshiHealth::getOtoroshi() const {
    return m_otoroshi;
}
void OAIOtoroshiHealth::setOtoroshi(const QString &otoroshi) {
    m_otoroshi = otoroshi;
    m_otoroshi_isSet = true;
}

bool OAIOtoroshiHealth::is_otoroshi_Set() const{
    return m_otoroshi_isSet;
}

bool OAIOtoroshiHealth::is_otoroshi_Valid() const{
    return m_otoroshi_isValid;
}

bool OAIOtoroshiHealth::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_datastore_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otoroshi_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOtoroshiHealth::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_datastore_isValid && m_otoroshi_isValid && true;
}

} // namespace OpenAPI
