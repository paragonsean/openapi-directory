/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIpFiltering.h
 *
 * The filtering configuration block for a service of globally.
 */

#ifndef OAIIpFiltering_H
#define OAIIpFiltering_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIpFiltering : public OAIObject {
public:
    OAIIpFiltering();
    OAIIpFiltering(QString json);
    ~OAIIpFiltering() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBlacklist() const;
    void setBlacklist(const QList<QString> &blacklist);
    bool is_blacklist_Set() const;
    bool is_blacklist_Valid() const;

    QList<QString> getWhitelist() const;
    void setWhitelist(const QList<QString> &whitelist);
    bool is_whitelist_Set() const;
    bool is_whitelist_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_blacklist;
    bool m_blacklist_isSet;
    bool m_blacklist_isValid;

    QList<QString> m_whitelist;
    bool m_whitelist_isSet;
    bool m_whitelist_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIpFiltering)

#endif // OAIIpFiltering_H
