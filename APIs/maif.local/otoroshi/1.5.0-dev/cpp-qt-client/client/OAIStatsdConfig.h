/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatsdConfig.h
 *
 * The configuration for statsd metrics push
 */

#ifndef OAIStatsdConfig_H
#define OAIStatsdConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStatsdConfig : public OAIObject {
public:
    OAIStatsdConfig();
    OAIStatsdConfig(QString json);
    ~OAIStatsdConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDatadog() const;
    void setDatadog(const bool &datadog);
    bool is_datadog_Set() const;
    bool is_datadog_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    qint32 getPort() const;
    void setPort(const qint32 &port);
    bool is_port_Set() const;
    bool is_port_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_datadog;
    bool m_datadog_isSet;
    bool m_datadog_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    qint32 m_port;
    bool m_port_isSet;
    bool m_port_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatsdConfig)

#endif // OAIStatsdConfig_H
