/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILdapAuthModuleConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILdapAuthModuleConfig::OAILdapAuthModuleConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILdapAuthModuleConfig::OAILdapAuthModuleConfig() {
    this->initializeModel();
}

OAILdapAuthModuleConfig::~OAILdapAuthModuleConfig() {}

void OAILdapAuthModuleConfig::initializeModel() {

    m_admin_password_isSet = false;
    m_admin_password_isValid = false;

    m_admin_username_isSet = false;
    m_admin_username_isValid = false;

    m_desc_isSet = false;
    m_desc_isValid = false;

    m_email_field_isSet = false;
    m_email_field_isValid = false;

    m_group_filter_isSet = false;
    m_group_filter_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_name_field_isSet = false;
    m_name_field_isValid = false;

    m_otoroshi_data_field_isSet = false;
    m_otoroshi_data_field_isValid = false;

    m_search_base_isSet = false;
    m_search_base_isValid = false;

    m_search_filter_isSet = false;
    m_search_filter_isValid = false;

    m_server_url_isSet = false;
    m_server_url_isValid = false;

    m_session_max_age_isSet = false;
    m_session_max_age_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_user_base_isSet = false;
    m_user_base_isValid = false;
}

void OAILdapAuthModuleConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILdapAuthModuleConfig::fromJsonObject(QJsonObject json) {

    m_admin_password_isValid = ::OpenAPI::fromJsonValue(m_admin_password, json[QString("adminPassword")]);
    m_admin_password_isSet = !json[QString("adminPassword")].isNull() && m_admin_password_isValid;

    m_admin_username_isValid = ::OpenAPI::fromJsonValue(m_admin_username, json[QString("adminUsername")]);
    m_admin_username_isSet = !json[QString("adminUsername")].isNull() && m_admin_username_isValid;

    m_desc_isValid = ::OpenAPI::fromJsonValue(m_desc, json[QString("desc")]);
    m_desc_isSet = !json[QString("desc")].isNull() && m_desc_isValid;

    m_email_field_isValid = ::OpenAPI::fromJsonValue(m_email_field, json[QString("emailField")]);
    m_email_field_isSet = !json[QString("emailField")].isNull() && m_email_field_isValid;

    m_group_filter_isValid = ::OpenAPI::fromJsonValue(m_group_filter, json[QString("groupFilter")]);
    m_group_filter_isSet = !json[QString("groupFilter")].isNull() && m_group_filter_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_name_field_isValid = ::OpenAPI::fromJsonValue(m_name_field, json[QString("nameField")]);
    m_name_field_isSet = !json[QString("nameField")].isNull() && m_name_field_isValid;

    m_otoroshi_data_field_isValid = ::OpenAPI::fromJsonValue(m_otoroshi_data_field, json[QString("otoroshiDataField")]);
    m_otoroshi_data_field_isSet = !json[QString("otoroshiDataField")].isNull() && m_otoroshi_data_field_isValid;

    m_search_base_isValid = ::OpenAPI::fromJsonValue(m_search_base, json[QString("searchBase")]);
    m_search_base_isSet = !json[QString("searchBase")].isNull() && m_search_base_isValid;

    m_search_filter_isValid = ::OpenAPI::fromJsonValue(m_search_filter, json[QString("searchFilter")]);
    m_search_filter_isSet = !json[QString("searchFilter")].isNull() && m_search_filter_isValid;

    m_server_url_isValid = ::OpenAPI::fromJsonValue(m_server_url, json[QString("serverUrl")]);
    m_server_url_isSet = !json[QString("serverUrl")].isNull() && m_server_url_isValid;

    m_session_max_age_isValid = ::OpenAPI::fromJsonValue(m_session_max_age, json[QString("sessionMaxAge")]);
    m_session_max_age_isSet = !json[QString("sessionMaxAge")].isNull() && m_session_max_age_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_user_base_isValid = ::OpenAPI::fromJsonValue(m_user_base, json[QString("userBase")]);
    m_user_base_isSet = !json[QString("userBase")].isNull() && m_user_base_isValid;
}

QString OAILdapAuthModuleConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILdapAuthModuleConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_admin_password_isSet) {
        obj.insert(QString("adminPassword"), ::OpenAPI::toJsonValue(m_admin_password));
    }
    if (m_admin_username_isSet) {
        obj.insert(QString("adminUsername"), ::OpenAPI::toJsonValue(m_admin_username));
    }
    if (m_desc_isSet) {
        obj.insert(QString("desc"), ::OpenAPI::toJsonValue(m_desc));
    }
    if (m_email_field_isSet) {
        obj.insert(QString("emailField"), ::OpenAPI::toJsonValue(m_email_field));
    }
    if (m_group_filter_isSet) {
        obj.insert(QString("groupFilter"), ::OpenAPI::toJsonValue(m_group_filter));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_name_field_isSet) {
        obj.insert(QString("nameField"), ::OpenAPI::toJsonValue(m_name_field));
    }
    if (m_otoroshi_data_field_isSet) {
        obj.insert(QString("otoroshiDataField"), ::OpenAPI::toJsonValue(m_otoroshi_data_field));
    }
    if (m_search_base_isSet) {
        obj.insert(QString("searchBase"), ::OpenAPI::toJsonValue(m_search_base));
    }
    if (m_search_filter_isSet) {
        obj.insert(QString("searchFilter"), ::OpenAPI::toJsonValue(m_search_filter));
    }
    if (m_server_url_isSet) {
        obj.insert(QString("serverUrl"), ::OpenAPI::toJsonValue(m_server_url));
    }
    if (m_session_max_age_isSet) {
        obj.insert(QString("sessionMaxAge"), ::OpenAPI::toJsonValue(m_session_max_age));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_user_base_isSet) {
        obj.insert(QString("userBase"), ::OpenAPI::toJsonValue(m_user_base));
    }
    return obj;
}

QString OAILdapAuthModuleConfig::getAdminPassword() const {
    return m_admin_password;
}
void OAILdapAuthModuleConfig::setAdminPassword(const QString &admin_password) {
    m_admin_password = admin_password;
    m_admin_password_isSet = true;
}

bool OAILdapAuthModuleConfig::is_admin_password_Set() const{
    return m_admin_password_isSet;
}

bool OAILdapAuthModuleConfig::is_admin_password_Valid() const{
    return m_admin_password_isValid;
}

QString OAILdapAuthModuleConfig::getAdminUsername() const {
    return m_admin_username;
}
void OAILdapAuthModuleConfig::setAdminUsername(const QString &admin_username) {
    m_admin_username = admin_username;
    m_admin_username_isSet = true;
}

bool OAILdapAuthModuleConfig::is_admin_username_Set() const{
    return m_admin_username_isSet;
}

bool OAILdapAuthModuleConfig::is_admin_username_Valid() const{
    return m_admin_username_isValid;
}

QString OAILdapAuthModuleConfig::getDesc() const {
    return m_desc;
}
void OAILdapAuthModuleConfig::setDesc(const QString &desc) {
    m_desc = desc;
    m_desc_isSet = true;
}

bool OAILdapAuthModuleConfig::is_desc_Set() const{
    return m_desc_isSet;
}

bool OAILdapAuthModuleConfig::is_desc_Valid() const{
    return m_desc_isValid;
}

QString OAILdapAuthModuleConfig::getEmailField() const {
    return m_email_field;
}
void OAILdapAuthModuleConfig::setEmailField(const QString &email_field) {
    m_email_field = email_field;
    m_email_field_isSet = true;
}

bool OAILdapAuthModuleConfig::is_email_field_Set() const{
    return m_email_field_isSet;
}

bool OAILdapAuthModuleConfig::is_email_field_Valid() const{
    return m_email_field_isValid;
}

QString OAILdapAuthModuleConfig::getGroupFilter() const {
    return m_group_filter;
}
void OAILdapAuthModuleConfig::setGroupFilter(const QString &group_filter) {
    m_group_filter = group_filter;
    m_group_filter_isSet = true;
}

bool OAILdapAuthModuleConfig::is_group_filter_Set() const{
    return m_group_filter_isSet;
}

bool OAILdapAuthModuleConfig::is_group_filter_Valid() const{
    return m_group_filter_isValid;
}

QString OAILdapAuthModuleConfig::getId() const {
    return m_id;
}
void OAILdapAuthModuleConfig::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAILdapAuthModuleConfig::is_id_Set() const{
    return m_id_isSet;
}

bool OAILdapAuthModuleConfig::is_id_Valid() const{
    return m_id_isValid;
}

QString OAILdapAuthModuleConfig::getName() const {
    return m_name;
}
void OAILdapAuthModuleConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILdapAuthModuleConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAILdapAuthModuleConfig::is_name_Valid() const{
    return m_name_isValid;
}

QString OAILdapAuthModuleConfig::getNameField() const {
    return m_name_field;
}
void OAILdapAuthModuleConfig::setNameField(const QString &name_field) {
    m_name_field = name_field;
    m_name_field_isSet = true;
}

bool OAILdapAuthModuleConfig::is_name_field_Set() const{
    return m_name_field_isSet;
}

bool OAILdapAuthModuleConfig::is_name_field_Valid() const{
    return m_name_field_isValid;
}

QString OAILdapAuthModuleConfig::getOtoroshiDataField() const {
    return m_otoroshi_data_field;
}
void OAILdapAuthModuleConfig::setOtoroshiDataField(const QString &otoroshi_data_field) {
    m_otoroshi_data_field = otoroshi_data_field;
    m_otoroshi_data_field_isSet = true;
}

bool OAILdapAuthModuleConfig::is_otoroshi_data_field_Set() const{
    return m_otoroshi_data_field_isSet;
}

bool OAILdapAuthModuleConfig::is_otoroshi_data_field_Valid() const{
    return m_otoroshi_data_field_isValid;
}

QString OAILdapAuthModuleConfig::getSearchBase() const {
    return m_search_base;
}
void OAILdapAuthModuleConfig::setSearchBase(const QString &search_base) {
    m_search_base = search_base;
    m_search_base_isSet = true;
}

bool OAILdapAuthModuleConfig::is_search_base_Set() const{
    return m_search_base_isSet;
}

bool OAILdapAuthModuleConfig::is_search_base_Valid() const{
    return m_search_base_isValid;
}

QString OAILdapAuthModuleConfig::getSearchFilter() const {
    return m_search_filter;
}
void OAILdapAuthModuleConfig::setSearchFilter(const QString &search_filter) {
    m_search_filter = search_filter;
    m_search_filter_isSet = true;
}

bool OAILdapAuthModuleConfig::is_search_filter_Set() const{
    return m_search_filter_isSet;
}

bool OAILdapAuthModuleConfig::is_search_filter_Valid() const{
    return m_search_filter_isValid;
}

QString OAILdapAuthModuleConfig::getServerUrl() const {
    return m_server_url;
}
void OAILdapAuthModuleConfig::setServerUrl(const QString &server_url) {
    m_server_url = server_url;
    m_server_url_isSet = true;
}

bool OAILdapAuthModuleConfig::is_server_url_Set() const{
    return m_server_url_isSet;
}

bool OAILdapAuthModuleConfig::is_server_url_Valid() const{
    return m_server_url_isValid;
}

qint32 OAILdapAuthModuleConfig::getSessionMaxAge() const {
    return m_session_max_age;
}
void OAILdapAuthModuleConfig::setSessionMaxAge(const qint32 &session_max_age) {
    m_session_max_age = session_max_age;
    m_session_max_age_isSet = true;
}

bool OAILdapAuthModuleConfig::is_session_max_age_Set() const{
    return m_session_max_age_isSet;
}

bool OAILdapAuthModuleConfig::is_session_max_age_Valid() const{
    return m_session_max_age_isValid;
}

QString OAILdapAuthModuleConfig::getType() const {
    return m_type;
}
void OAILdapAuthModuleConfig::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAILdapAuthModuleConfig::is_type_Set() const{
    return m_type_isSet;
}

bool OAILdapAuthModuleConfig::is_type_Valid() const{
    return m_type_isValid;
}

QString OAILdapAuthModuleConfig::getUserBase() const {
    return m_user_base;
}
void OAILdapAuthModuleConfig::setUserBase(const QString &user_base) {
    m_user_base = user_base;
    m_user_base_isSet = true;
}

bool OAILdapAuthModuleConfig::is_user_base_Set() const{
    return m_user_base_isSet;
}

bool OAILdapAuthModuleConfig::is_user_base_Valid() const{
    return m_user_base_isValid;
}

bool OAILdapAuthModuleConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_admin_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_admin_username_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otoroshi_data_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_base_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_server_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_max_age_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_base_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILdapAuthModuleConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_admin_password_isValid && m_admin_username_isValid && m_desc_isValid && m_email_field_isValid && m_group_filter_isValid && m_id_isValid && m_name_isValid && m_name_field_isValid && m_search_base_isValid && m_search_filter_isValid && m_server_url_isValid && m_session_max_age_isValid && m_type_isValid && m_user_base_isValid && true;
}

} // namespace OpenAPI
