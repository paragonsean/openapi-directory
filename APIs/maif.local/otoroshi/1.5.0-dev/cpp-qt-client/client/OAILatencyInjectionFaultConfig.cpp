/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILatencyInjectionFaultConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILatencyInjectionFaultConfig::OAILatencyInjectionFaultConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILatencyInjectionFaultConfig::OAILatencyInjectionFaultConfig() {
    this->initializeModel();
}

OAILatencyInjectionFaultConfig::~OAILatencyInjectionFaultConfig() {}

void OAILatencyInjectionFaultConfig::initializeModel() {

    m_from_isSet = false;
    m_from_isValid = false;

    m_ratio_isSet = false;
    m_ratio_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAILatencyInjectionFaultConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILatencyInjectionFaultConfig::fromJsonObject(QJsonObject json) {

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_ratio_isValid = ::OpenAPI::fromJsonValue(m_ratio, json[QString("ratio")]);
    m_ratio_isSet = !json[QString("ratio")].isNull() && m_ratio_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;
}

QString OAILatencyInjectionFaultConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILatencyInjectionFaultConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_ratio_isSet) {
        obj.insert(QString("ratio"), ::OpenAPI::toJsonValue(m_ratio));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

qint32 OAILatencyInjectionFaultConfig::getFrom() const {
    return m_from;
}
void OAILatencyInjectionFaultConfig::setFrom(const qint32 &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAILatencyInjectionFaultConfig::is_from_Set() const{
    return m_from_isSet;
}

bool OAILatencyInjectionFaultConfig::is_from_Valid() const{
    return m_from_isValid;
}

double OAILatencyInjectionFaultConfig::getRatio() const {
    return m_ratio;
}
void OAILatencyInjectionFaultConfig::setRatio(const double &ratio) {
    m_ratio = ratio;
    m_ratio_isSet = true;
}

bool OAILatencyInjectionFaultConfig::is_ratio_Set() const{
    return m_ratio_isSet;
}

bool OAILatencyInjectionFaultConfig::is_ratio_Valid() const{
    return m_ratio_isValid;
}

qint32 OAILatencyInjectionFaultConfig::getTo() const {
    return m_to;
}
void OAILatencyInjectionFaultConfig::setTo(const qint32 &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAILatencyInjectionFaultConfig::is_to_Set() const{
    return m_to_isSet;
}

bool OAILatencyInjectionFaultConfig::is_to_Valid() const{
    return m_to_isValid;
}

bool OAILatencyInjectionFaultConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ratio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILatencyInjectionFaultConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_from_isValid && m_ratio_isValid && m_to_isValid && true;
}

} // namespace OpenAPI
