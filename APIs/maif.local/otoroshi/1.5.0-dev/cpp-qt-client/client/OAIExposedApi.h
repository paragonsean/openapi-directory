/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExposedApi.h
 *
 * The Open API configuration for your service (if one)
 */

#ifndef OAIExposedApi_H
#define OAIExposedApi_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExposedApi : public OAIObject {
public:
    OAIExposedApi();
    OAIExposedApi(QString json);
    ~OAIExposedApi() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isExposeApi() const;
    void setExposeApi(const bool &expose_api);
    bool is_expose_api_Set() const;
    bool is_expose_api_Valid() const;

    QString getOpenApiDescriptorUrl() const;
    void setOpenApiDescriptorUrl(const QString &open_api_descriptor_url);
    bool is_open_api_descriptor_url_Set() const;
    bool is_open_api_descriptor_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_expose_api;
    bool m_expose_api_isSet;
    bool m_expose_api_isValid;

    QString m_open_api_descriptor_url;
    bool m_open_api_descriptor_url_isSet;
    bool m_open_api_descriptor_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExposedApi)

#endif // OAIExposedApi_H
