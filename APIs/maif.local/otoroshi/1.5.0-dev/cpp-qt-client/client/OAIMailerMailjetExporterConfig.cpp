/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMailerMailjetExporterConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMailerMailjetExporterConfig::OAIMailerMailjetExporterConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMailerMailjetExporterConfig::OAIMailerMailjetExporterConfig() {
    this->initializeModel();
}

OAIMailerMailjetExporterConfig::~OAIMailerMailjetExporterConfig() {}

void OAIMailerMailjetExporterConfig::initializeModel() {

    m_api_key_private_isSet = false;
    m_api_key_private_isValid = false;

    m_api_key_public_isSet = false;
    m_api_key_public_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIMailerMailjetExporterConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMailerMailjetExporterConfig::fromJsonObject(QJsonObject json) {

    m_api_key_private_isValid = ::OpenAPI::fromJsonValue(m_api_key_private, json[QString("apiKeyPrivate")]);
    m_api_key_private_isSet = !json[QString("apiKeyPrivate")].isNull() && m_api_key_private_isValid;

    m_api_key_public_isValid = ::OpenAPI::fromJsonValue(m_api_key_public, json[QString("apiKeyPublic")]);
    m_api_key_public_isSet = !json[QString("apiKeyPublic")].isNull() && m_api_key_public_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIMailerMailjetExporterConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMailerMailjetExporterConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_api_key_private_isSet) {
        obj.insert(QString("apiKeyPrivate"), ::OpenAPI::toJsonValue(m_api_key_private));
    }
    if (m_api_key_public_isSet) {
        obj.insert(QString("apiKeyPublic"), ::OpenAPI::toJsonValue(m_api_key_public));
    }
    if (m_to.size() > 0) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIMailerMailjetExporterConfig::getApiKeyPrivate() const {
    return m_api_key_private;
}
void OAIMailerMailjetExporterConfig::setApiKeyPrivate(const QString &api_key_private) {
    m_api_key_private = api_key_private;
    m_api_key_private_isSet = true;
}

bool OAIMailerMailjetExporterConfig::is_api_key_private_Set() const{
    return m_api_key_private_isSet;
}

bool OAIMailerMailjetExporterConfig::is_api_key_private_Valid() const{
    return m_api_key_private_isValid;
}

QString OAIMailerMailjetExporterConfig::getApiKeyPublic() const {
    return m_api_key_public;
}
void OAIMailerMailjetExporterConfig::setApiKeyPublic(const QString &api_key_public) {
    m_api_key_public = api_key_public;
    m_api_key_public_isSet = true;
}

bool OAIMailerMailjetExporterConfig::is_api_key_public_Set() const{
    return m_api_key_public_isSet;
}

bool OAIMailerMailjetExporterConfig::is_api_key_public_Valid() const{
    return m_api_key_public_isValid;
}

QList<QString> OAIMailerMailjetExporterConfig::getTo() const {
    return m_to;
}
void OAIMailerMailjetExporterConfig::setTo(const QList<QString> &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIMailerMailjetExporterConfig::is_to_Set() const{
    return m_to_isSet;
}

bool OAIMailerMailjetExporterConfig::is_to_Valid() const{
    return m_to_isValid;
}

QString OAIMailerMailjetExporterConfig::getType() const {
    return m_type;
}
void OAIMailerMailjetExporterConfig::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIMailerMailjetExporterConfig::is_type_Set() const{
    return m_type_isSet;
}

bool OAIMailerMailjetExporterConfig::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIMailerMailjetExporterConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_key_private_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_key_public_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMailerMailjetExporterConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && true;
}

} // namespace OpenAPI
