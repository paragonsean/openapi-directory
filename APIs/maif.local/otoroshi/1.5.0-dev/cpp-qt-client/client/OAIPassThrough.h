/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPassThrough.h
 *
 * Strategy where only signature and field values are verified
 */

#ifndef OAIPassThrough_H
#define OAIPassThrough_H

#include <QJsonObject>

#include "OAIVerificationSettings.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVerificationSettings;

class OAIPassThrough : public OAIObject {
public:
    OAIPassThrough();
    OAIPassThrough(QString json);
    ~OAIPassThrough() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIVerificationSettings getVerificationSettings() const;
    void setVerificationSettings(const OAIVerificationSettings &verification_settings);
    bool is_verification_settings_Set() const;
    bool is_verification_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIVerificationSettings m_verification_settings;
    bool m_verification_settings_isSet;
    bool m_verification_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPassThrough)

#endif // OAIPassThrough_H
