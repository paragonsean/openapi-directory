/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGzip.h
 *
 * Configuration for gzip of service responses
 */

#ifndef OAIGzip_H
#define OAIGzip_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGzip : public OAIObject {
public:
    OAIGzip();
    OAIGzip(QString json);
    ~OAIGzip() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBlackList() const;
    void setBlackList(const QList<QString> &black_list);
    bool is_black_list_Set() const;
    bool is_black_list_Valid() const;

    qint64 getBufferSize() const;
    void setBufferSize(const qint64 &buffer_size);
    bool is_buffer_size_Set() const;
    bool is_buffer_size_Valid() const;

    qint64 getChunkedThreshold() const;
    void setChunkedThreshold(const qint64 &chunked_threshold);
    bool is_chunked_threshold_Set() const;
    bool is_chunked_threshold_Valid() const;

    qint32 getCompressionLevel() const;
    void setCompressionLevel(const qint32 &compression_level);
    bool is_compression_level_Set() const;
    bool is_compression_level_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList<QString> getExcludedPatterns() const;
    void setExcludedPatterns(const QList<QString> &excluded_patterns);
    bool is_excluded_patterns_Set() const;
    bool is_excluded_patterns_Valid() const;

    QList<QString> getWhiteList() const;
    void setWhiteList(const QList<QString> &white_list);
    bool is_white_list_Set() const;
    bool is_white_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_black_list;
    bool m_black_list_isSet;
    bool m_black_list_isValid;

    qint64 m_buffer_size;
    bool m_buffer_size_isSet;
    bool m_buffer_size_isValid;

    qint64 m_chunked_threshold;
    bool m_chunked_threshold_isSet;
    bool m_chunked_threshold_isValid;

    qint32 m_compression_level;
    bool m_compression_level_isSet;
    bool m_compression_level_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList<QString> m_excluded_patterns;
    bool m_excluded_patterns_isSet;
    bool m_excluded_patterns_isValid;

    QList<QString> m_white_list;
    bool m_white_list_isSet;
    bool m_white_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGzip)

#endif // OAIGzip_H
