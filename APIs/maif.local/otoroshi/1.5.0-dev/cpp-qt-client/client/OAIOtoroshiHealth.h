/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOtoroshiHealth.h
 *
 * The structure that represent current Otoroshi health
 */

#ifndef OAIOtoroshiHealth_H
#define OAIOtoroshiHealth_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOtoroshiHealth : public OAIObject {
public:
    OAIOtoroshiHealth();
    OAIOtoroshiHealth(QString json);
    ~OAIOtoroshiHealth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDatastore() const;
    void setDatastore(const QString &datastore);
    bool is_datastore_Set() const;
    bool is_datastore_Valid() const;

    QString getOtoroshi() const;
    void setOtoroshi(const QString &otoroshi);
    bool is_otoroshi_Set() const;
    bool is_otoroshi_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_datastore;
    bool m_datastore_isSet;
    bool m_datastore_isValid;

    QString m_otoroshi;
    bool m_otoroshi_isSet;
    bool m_otoroshi_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOtoroshiHealth)

#endif // OAIOtoroshiHealth_H
