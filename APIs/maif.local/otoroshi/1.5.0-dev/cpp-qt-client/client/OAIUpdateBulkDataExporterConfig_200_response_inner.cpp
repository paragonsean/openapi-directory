/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateBulkDataExporterConfig_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateBulkDataExporterConfig_200_response_inner::OAIUpdateBulkDataExporterConfig_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateBulkDataExporterConfig_200_response_inner::OAIUpdateBulkDataExporterConfig_200_response_inner() {
    this->initializeModel();
}

OAIUpdateBulkDataExporterConfig_200_response_inner::~OAIUpdateBulkDataExporterConfig_200_response_inner() {}

void OAIUpdateBulkDataExporterConfig_200_response_inner::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_updated_isSet = false;
    m_updated_isValid = false;
}

void OAIUpdateBulkDataExporterConfig_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateBulkDataExporterConfig_200_response_inner::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_updated_isValid = ::OpenAPI::fromJsonValue(m_updated, json[QString("updated")]);
    m_updated_isSet = !json[QString("updated")].isNull() && m_updated_isValid;
}

QString OAIUpdateBulkDataExporterConfig_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateBulkDataExporterConfig_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_updated_isSet) {
        obj.insert(QString("updated"), ::OpenAPI::toJsonValue(m_updated));
    }
    return obj;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::isId() const {
    return m_id;
}
void OAIUpdateBulkDataExporterConfig_200_response_inner::setId(const bool &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIUpdateBulkDataExporterConfig_200_response_inner::getStatus() const {
    return m_status;
}
void OAIUpdateBulkDataExporterConfig_200_response_inner::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::isUpdated() const {
    return m_updated;
}
void OAIUpdateBulkDataExporterConfig_200_response_inner::setUpdated(const bool &updated) {
    m_updated = updated;
    m_updated_isSet = true;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::is_updated_Set() const{
    return m_updated_isSet;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::is_updated_Valid() const{
    return m_updated_isValid;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateBulkDataExporterConfig_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
