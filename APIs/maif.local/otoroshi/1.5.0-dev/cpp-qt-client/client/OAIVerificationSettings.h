/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerificationSettings.h
 *
 * Settings to verify the value of JWT token fields
 */

#ifndef OAIVerificationSettings_H
#define OAIVerificationSettings_H

#include <QJsonObject>

#include "OAIMappingSettings.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMappingSettings;

class OAIVerificationSettings : public OAIObject {
public:
    OAIVerificationSettings();
    OAIVerificationSettings(QString json);
    ~OAIVerificationSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getFields() const;
    void setFields(const QMap<QString, QString> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    OAIMappingSettings getMappingSettings() const;
    void setMappingSettings(const OAIMappingSettings &mapping_settings);
    bool is_mapping_settings_Set() const;
    bool is_mapping_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    OAIMappingSettings m_mapping_settings;
    bool m_mapping_settings_isSet;
    bool m_mapping_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerificationSettings)

#endif // OAIVerificationSettings_H
