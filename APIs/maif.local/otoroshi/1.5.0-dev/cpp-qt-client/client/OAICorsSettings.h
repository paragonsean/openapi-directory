/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICorsSettings.h
 *
 * The configuration for cors support
 */

#ifndef OAICorsSettings_H
#define OAICorsSettings_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICorsSettings : public OAIObject {
public:
    OAICorsSettings();
    OAICorsSettings(QString json);
    ~OAICorsSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowCredentials() const;
    void setAllowCredentials(const bool &allow_credentials);
    bool is_allow_credentials_Set() const;
    bool is_allow_credentials_Valid() const;

    QList<QString> getAllowHeaders() const;
    void setAllowHeaders(const QList<QString> &allow_headers);
    bool is_allow_headers_Set() const;
    bool is_allow_headers_Valid() const;

    QList<QString> getAllowMethods() const;
    void setAllowMethods(const QList<QString> &allow_methods);
    bool is_allow_methods_Set() const;
    bool is_allow_methods_Valid() const;

    QString getAllowOrigin() const;
    void setAllowOrigin(const QString &allow_origin);
    bool is_allow_origin_Set() const;
    bool is_allow_origin_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList<QString> getExcludedPatterns() const;
    void setExcludedPatterns(const QList<QString> &excluded_patterns);
    bool is_excluded_patterns_Set() const;
    bool is_excluded_patterns_Valid() const;

    QList<QString> getExposeHeaders() const;
    void setExposeHeaders(const QList<QString> &expose_headers);
    bool is_expose_headers_Set() const;
    bool is_expose_headers_Valid() const;

    qint32 getMaxAge() const;
    void setMaxAge(const qint32 &max_age);
    bool is_max_age_Set() const;
    bool is_max_age_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_credentials;
    bool m_allow_credentials_isSet;
    bool m_allow_credentials_isValid;

    QList<QString> m_allow_headers;
    bool m_allow_headers_isSet;
    bool m_allow_headers_isValid;

    QList<QString> m_allow_methods;
    bool m_allow_methods_isSet;
    bool m_allow_methods_isValid;

    QString m_allow_origin;
    bool m_allow_origin_isSet;
    bool m_allow_origin_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList<QString> m_excluded_patterns;
    bool m_excluded_patterns_isSet;
    bool m_excluded_patterns_isValid;

    QList<QString> m_expose_headers;
    bool m_expose_headers_isSet;
    bool m_expose_headers_isValid;

    qint32 m_max_age;
    bool m_max_age_isSet;
    bool m_max_age_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICorsSettings)

#endif // OAICorsSettings_H
