/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIValidationAuthority.h
 *
 * Settings to access a validation authority server
 */

#ifndef OAIValidationAuthority_H
#define OAIValidationAuthority_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIValidationAuthority : public OAIObject {
public:
    OAIValidationAuthority();
    OAIValidationAuthority(QString json);
    ~OAIValidationAuthority() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAlwaysValid() const;
    void setAlwaysValid(const bool &always_valid);
    bool is_always_valid_Set() const;
    bool is_always_valid_Valid() const;

    qint64 getBadTtl() const;
    void setBadTtl(const qint64 &bad_ttl);
    bool is_bad_ttl_Set() const;
    bool is_bad_ttl_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint64 getGoodTtl() const;
    void setGoodTtl(const qint64 &good_ttl);
    bool is_good_ttl_Set() const;
    bool is_good_ttl_Valid() const;

    QMap<QString, QString> getHeaders() const;
    void setHeaders(const QMap<QString, QString> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isNoCache() const;
    void setNoCache(const bool &no_cache);
    bool is_no_cache_Set() const;
    bool is_no_cache_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    qint64 getTimeout() const;
    void setTimeout(const qint64 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_always_valid;
    bool m_always_valid_isSet;
    bool m_always_valid_isValid;

    qint64 m_bad_ttl;
    bool m_bad_ttl_isSet;
    bool m_bad_ttl_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint64 m_good_ttl;
    bool m_good_ttl_isSet;
    bool m_good_ttl_isValid;

    QMap<QString, QString> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_no_cache;
    bool m_no_cache_isSet;
    bool m_no_cache_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    qint64 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIValidationAuthority)

#endif // OAIValidationAuthority_H
