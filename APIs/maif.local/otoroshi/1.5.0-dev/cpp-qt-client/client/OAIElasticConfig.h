/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElasticConfig.h
 *
 * The configuration for elastic access
 */

#ifndef OAIElasticConfig_H
#define OAIElasticConfig_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIElasticConfig : public OAIObject {
public:
    OAIElasticConfig();
    OAIElasticConfig(QString json);
    ~OAIElasticConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterUri() const;
    void setClusterUri(const QString &cluster_uri);
    bool is_cluster_uri_Set() const;
    bool is_cluster_uri_Valid() const;

    QMap<QString, QString> getHeaders() const;
    void setHeaders(const QMap<QString, QString> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getIndex() const;
    void setIndex(const QString &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_uri;
    bool m_cluster_uri_isSet;
    bool m_cluster_uri_isValid;

    QMap<QString, QString> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElasticConfig)

#endif // OAIElasticConfig_H
