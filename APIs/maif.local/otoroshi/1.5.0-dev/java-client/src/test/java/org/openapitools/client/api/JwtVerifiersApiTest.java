/*
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Deleted;
import org.openapitools.client.model.GlobalJwtVerifier;
import org.openapitools.client.model.PatchInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JwtVerifiersApi
 */
@Disabled
public class JwtVerifiersApiTest {

    private final JwtVerifiersApi api = new JwtVerifiersApi();

    /**
     * Create one global JWT verifiers
     *
     * Create one global JWT verifiers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGlobalJwtVerifierTest() throws ApiException {
        GlobalJwtVerifier globalJwtVerifier = null;
        GlobalJwtVerifier response = api.createGlobalJwtVerifier(globalJwtVerifier);
        // TODO: test validations
    }

    /**
     * Delete one global JWT verifiers
     *
     * Delete one global JWT verifiers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteGlobalJwtVerifierTest() throws ApiException {
        String verifierId = null;
        Deleted response = api.deleteGlobalJwtVerifier(verifierId);
        // TODO: test validations
    }

    /**
     * Get all global JWT verifiers
     *
     * Get all global JWT verifiers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllGlobalJwtVerifiersTest() throws ApiException {
        List<GlobalJwtVerifier> response = api.findAllGlobalJwtVerifiers();
        // TODO: test validations
    }

    /**
     * Get one global JWT verifiers
     *
     * Get one global JWT verifiers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findGlobalJwtVerifiersByIdTest() throws ApiException {
        String verifierId = null;
        GlobalJwtVerifier response = api.findGlobalJwtVerifiersById(verifierId);
        // TODO: test validations
    }

    /**
     * Update one global JWT verifiers
     *
     * Update one global JWT verifiers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchGlobalJwtVerifierTest() throws ApiException {
        String verifierId = null;
        List<PatchInner> patchInner = null;
        GlobalJwtVerifier response = api.patchGlobalJwtVerifier(verifierId, patchInner);
        // TODO: test validations
    }

    /**
     * Update one global JWT verifiers
     *
     * Update one global JWT verifiers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGlobalJwtVerifierTest() throws ApiException {
        String verifierId = null;
        GlobalJwtVerifier globalJwtVerifier = null;
        GlobalJwtVerifier response = api.updateGlobalJwtVerifier(verifierId, globalJwtVerifier);
        // TODO: test validations
    }

}
