/*
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GenericOauth2ModuleConfig;
import org.openapitools.client.model.GenericOauth2ModuleConfigJwtVerifier;
import org.openapitools.client.model.InMemoryAuthModuleConfig;
import org.openapitools.client.model.InMemoryUser;
import org.openapitools.client.model.LdapAuthModuleConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FindAllGlobalAuthModules200ResponseInner
 */
public class FindAllGlobalAuthModules200ResponseInnerTest {
    private final FindAllGlobalAuthModules200ResponseInner model = new FindAllGlobalAuthModules200ResponseInner();

    /**
     * Model tests for FindAllGlobalAuthModules200ResponseInner
     */
    @Test
    public void testFindAllGlobalAuthModules200ResponseInner() {
        // TODO: test FindAllGlobalAuthModules200ResponseInner
    }

    /**
     * Test the property 'adminPassword'
     */
    @Test
    public void adminPasswordTest() {
        // TODO: test adminPassword
    }

    /**
     * Test the property 'adminUsername'
     */
    @Test
    public void adminUsernameTest() {
        // TODO: test adminUsername
    }

    /**
     * Test the property 'desc'
     */
    @Test
    public void descTest() {
        // TODO: test desc
    }

    /**
     * Test the property 'emailField'
     */
    @Test
    public void emailFieldTest() {
        // TODO: test emailField
    }

    /**
     * Test the property 'groupFilter'
     */
    @Test
    public void groupFilterTest() {
        // TODO: test groupFilter
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nameField'
     */
    @Test
    public void nameFieldTest() {
        // TODO: test nameField
    }

    /**
     * Test the property 'otoroshiDataField'
     */
    @Test
    public void otoroshiDataFieldTest() {
        // TODO: test otoroshiDataField
    }

    /**
     * Test the property 'searchBase'
     */
    @Test
    public void searchBaseTest() {
        // TODO: test searchBase
    }

    /**
     * Test the property 'searchFilter'
     */
    @Test
    public void searchFilterTest() {
        // TODO: test searchFilter
    }

    /**
     * Test the property 'serverUrl'
     */
    @Test
    public void serverUrlTest() {
        // TODO: test serverUrl
    }

    /**
     * Test the property 'sessionMaxAge'
     */
    @Test
    public void sessionMaxAgeTest() {
        // TODO: test sessionMaxAge
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'userBase'
     */
    @Test
    public void userBaseTest() {
        // TODO: test userBase
    }

    /**
     * Test the property 'users'
     */
    @Test
    public void usersTest() {
        // TODO: test users
    }

    /**
     * Test the property 'accessTokenField'
     */
    @Test
    public void accessTokenFieldTest() {
        // TODO: test accessTokenField
    }

    /**
     * Test the property 'authorizeUrl'
     */
    @Test
    public void authorizeUrlTest() {
        // TODO: test authorizeUrl
    }

    /**
     * Test the property 'callbackUrl'
     */
    @Test
    public void callbackUrlTest() {
        // TODO: test callbackUrl
    }

    /**
     * Test the property 'claims'
     */
    @Test
    public void claimsTest() {
        // TODO: test claims
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    public void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'clientSecret'
     */
    @Test
    public void clientSecretTest() {
        // TODO: test clientSecret
    }

    /**
     * Test the property 'jwtVerifier'
     */
    @Test
    public void jwtVerifierTest() {
        // TODO: test jwtVerifier
    }

    /**
     * Test the property 'loginUrl'
     */
    @Test
    public void loginUrlTest() {
        // TODO: test loginUrl
    }

    /**
     * Test the property 'logoutUrl'
     */
    @Test
    public void logoutUrlTest() {
        // TODO: test logoutUrl
    }

    /**
     * Test the property 'oidConfig'
     */
    @Test
    public void oidConfigTest() {
        // TODO: test oidConfig
    }

    /**
     * Test the property 'readProfileFromToken'
     */
    @Test
    public void readProfileFromTokenTest() {
        // TODO: test readProfileFromToken
    }

    /**
     * Test the property 'scope'
     */
    @Test
    public void scopeTest() {
        // TODO: test scope
    }

    /**
     * Test the property 'tokenUrl'
     */
    @Test
    public void tokenUrlTest() {
        // TODO: test tokenUrl
    }

    /**
     * Test the property 'useCookies'
     */
    @Test
    public void useCookiesTest() {
        // TODO: test useCookies
    }

    /**
     * Test the property 'useJson'
     */
    @Test
    public void useJsonTest() {
        // TODO: test useJson
    }

    /**
     * Test the property 'userInfoUrl'
     */
    @Test
    public void userInfoUrlTest() {
        // TODO: test userInfoUrl
    }

}
