/*
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Done;
import org.openapitools.client.model.Group;
import org.openapitools.client.model.Outage;
import org.openapitools.client.model.SnowMonkeyConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SnowmonkeyApi
 */
@Disabled
public class SnowmonkeyApiTest {

    private final SnowmonkeyApi api = new SnowmonkeyApi();

    /**
     * Get current Snow Monkey config
     *
     * Get current Snow Monkey config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSnowMonkeyConfigTest() throws ApiException {
        SnowMonkeyConfig response = api.getSnowMonkeyConfig();
        // TODO: test validations
    }

    /**
     * Get all current Snow Monkey ourages
     *
     * Get all current Snow Monkey ourages
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSnowMonkeyOutagesTest() throws ApiException {
        List<Outage> response = api.getSnowMonkeyOutages();
        // TODO: test validations
    }

    /**
     * Update current Snow Monkey config
     *
     * Update current Snow Monkey config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchSnowMonkeyTest() throws ApiException {
        Group group = null;
        SnowMonkeyConfig response = api.patchSnowMonkey(group);
        // TODO: test validations
    }

    /**
     * Reset Snow Monkey Outages for the day
     *
     * Reset Snow Monkey Outages for the day
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetSnowMonkeyTest() throws ApiException {
        Done response = api.resetSnowMonkey();
        // TODO: test validations
    }

    /**
     * Start the Snow Monkey
     *
     * Start the Snow Monkey
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startSnowMonkeyTest() throws ApiException {
        Done response = api.startSnowMonkey();
        // TODO: test validations
    }

    /**
     * Stop the Snow Monkey
     *
     * Stop the Snow Monkey
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopSnowMonkeyTest() throws ApiException {
        Done response = api.stopSnowMonkey();
        // TODO: test validations
    }

    /**
     * Update current Snow Monkey config
     *
     * Update current Snow Monkey config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSnowMonkeyTest() throws ApiException {
        Group group = null;
        SnowMonkeyConfig response = api.updateSnowMonkey(group);
        // TODO: test validations
    }

}
