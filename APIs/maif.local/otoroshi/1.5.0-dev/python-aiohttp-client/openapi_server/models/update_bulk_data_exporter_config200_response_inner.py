# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateBulkDataExporterConfig200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: bool=None, status: str=None, updated: bool=None):
        """UpdateBulkDataExporterConfig200ResponseInner - a model defined in OpenAPI

        :param id: The id of this UpdateBulkDataExporterConfig200ResponseInner.
        :param status: The status of this UpdateBulkDataExporterConfig200ResponseInner.
        :param updated: The updated of this UpdateBulkDataExporterConfig200ResponseInner.
        """
        self.openapi_types = {
            'id': bool,
            'status': str,
            'updated': bool
        }

        self.attribute_map = {
            'id': 'id',
            'status': 'status',
            'updated': 'updated'
        }

        self._id = id
        self._status = status
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateBulkDataExporterConfig200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateBulkDataExporterConfig_200_response_inner of this UpdateBulkDataExporterConfig200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UpdateBulkDataExporterConfig200ResponseInner.

        Data exporter id

        :return: The id of this UpdateBulkDataExporterConfig200ResponseInner.
        :rtype: bool
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateBulkDataExporterConfig200ResponseInner.

        Data exporter id

        :param id: The id of this UpdateBulkDataExporterConfig200ResponseInner.
        :type id: bool
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this UpdateBulkDataExporterConfig200ResponseInner.

        Status

        :return: The status of this UpdateBulkDataExporterConfig200ResponseInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateBulkDataExporterConfig200ResponseInner.

        Status

        :param status: The status of this UpdateBulkDataExporterConfig200ResponseInner.
        :type status: str
        """
        allowed_values = ["200"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def updated(self):
        """Gets the updated of this UpdateBulkDataExporterConfig200ResponseInner.

        Whether the action was carried out correctly or not

        :return: The updated of this UpdateBulkDataExporterConfig200ResponseInner.
        :rtype: bool
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this UpdateBulkDataExporterConfig200ResponseInner.

        Whether the action was carried out correctly or not

        :param updated: The updated of this UpdateBulkDataExporterConfig200ResponseInner.
        :type updated: bool
        """

        self._updated = updated
