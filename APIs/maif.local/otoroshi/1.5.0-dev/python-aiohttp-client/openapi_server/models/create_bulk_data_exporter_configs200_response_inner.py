# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateBulkDataExporterConfigs200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: bool=None, id: bool=None, status: str=None):
        """CreateBulkDataExporterConfigs200ResponseInner - a model defined in OpenAPI

        :param created: The created of this CreateBulkDataExporterConfigs200ResponseInner.
        :param id: The id of this CreateBulkDataExporterConfigs200ResponseInner.
        :param status: The status of this CreateBulkDataExporterConfigs200ResponseInner.
        """
        self.openapi_types = {
            'created': bool,
            'id': bool,
            'status': str
        }

        self.attribute_map = {
            'created': 'created',
            'id': 'id',
            'status': 'status'
        }

        self._created = created
        self._id = id
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBulkDataExporterConfigs200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createBulkDataExporterConfigs_200_response_inner of this CreateBulkDataExporterConfigs200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this CreateBulkDataExporterConfigs200ResponseInner.

        Whether the action was carried out correctly or not

        :return: The created of this CreateBulkDataExporterConfigs200ResponseInner.
        :rtype: bool
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this CreateBulkDataExporterConfigs200ResponseInner.

        Whether the action was carried out correctly or not

        :param created: The created of this CreateBulkDataExporterConfigs200ResponseInner.
        :type created: bool
        """

        self._created = created

    @property
    def id(self):
        """Gets the id of this CreateBulkDataExporterConfigs200ResponseInner.

        Data exporter id

        :return: The id of this CreateBulkDataExporterConfigs200ResponseInner.
        :rtype: bool
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CreateBulkDataExporterConfigs200ResponseInner.

        Data exporter id

        :param id: The id of this CreateBulkDataExporterConfigs200ResponseInner.
        :type id: bool
        """

        self._id = id

    @property
    def status(self):
        """Gets the status of this CreateBulkDataExporterConfigs200ResponseInner.

        Status

        :return: The status of this CreateBulkDataExporterConfigs200ResponseInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateBulkDataExporterConfigs200ResponseInner.

        Status

        :param status: The status of this CreateBulkDataExporterConfigs200ResponseInner.
        :type status: str
        """
        allowed_values = ["201"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
