# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Done(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, done: bool=None):
        """Done - a model defined in OpenAPI

        :param done: The done of this Done.
        """
        self.openapi_types = {
            'done': bool
        }

        self.attribute_map = {
            'done': 'done'
        }

        self._done = done

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Done':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Done of this Done.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def done(self):
        """Gets the done of this Done.


        :return: The done of this Done.
        :rtype: bool
        """
        return self._done

    @done.setter
    def done(self, done):
        """Sets the done of this Done.


        :param done: The done of this Done.
        :type done: bool
        """
        if done is None:
            raise ValueError("Invalid value for `done`, must not be `None`")

        self._done = done
