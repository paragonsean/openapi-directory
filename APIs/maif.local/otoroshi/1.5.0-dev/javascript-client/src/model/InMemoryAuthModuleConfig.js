/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InMemoryUser from './InMemoryUser';

/**
 * The InMemoryAuthModuleConfig model module.
 * @module model/InMemoryAuthModuleConfig
 * @version 1.5.0-dev
 */
class InMemoryAuthModuleConfig {
    /**
     * Constructs a new <code>InMemoryAuthModuleConfig</code>.
     * Settings to authenticate users using the in memory user store
     * @alias module:model/InMemoryAuthModuleConfig
     * @param desc {String} Description of the config
     * @param id {String} Unique id of the config
     * @param name {String} Name of the config
     * @param sessionMaxAge {String} Max age of the session
     * @param type {String} Type of settings. value is basic
     * @param users {Array.<module:model/InMemoryUser>} List of users
     */
    constructor(desc, id, name, sessionMaxAge, type, users) { 
        
        InMemoryAuthModuleConfig.initialize(this, desc, id, name, sessionMaxAge, type, users);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, desc, id, name, sessionMaxAge, type, users) { 
        obj['desc'] = desc;
        obj['id'] = id;
        obj['name'] = name;
        obj['sessionMaxAge'] = sessionMaxAge;
        obj['type'] = type;
        obj['users'] = users;
    }

    /**
     * Constructs a <code>InMemoryAuthModuleConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InMemoryAuthModuleConfig} obj Optional instance to populate.
     * @return {module:model/InMemoryAuthModuleConfig} The populated <code>InMemoryAuthModuleConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InMemoryAuthModuleConfig();

            if (data.hasOwnProperty('desc')) {
                obj['desc'] = ApiClient.convertToType(data['desc'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sessionMaxAge')) {
                obj['sessionMaxAge'] = ApiClient.convertToType(data['sessionMaxAge'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], [InMemoryUser]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InMemoryAuthModuleConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InMemoryAuthModuleConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InMemoryAuthModuleConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['desc'] && !(typeof data['desc'] === 'string' || data['desc'] instanceof String)) {
            throw new Error("Expected the field `desc` to be a primitive type in the JSON string but got " + data['desc']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['sessionMaxAge'] && !(typeof data['sessionMaxAge'] === 'string' || data['sessionMaxAge'] instanceof String)) {
            throw new Error("Expected the field `sessionMaxAge` to be a primitive type in the JSON string but got " + data['sessionMaxAge']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        if (data['users']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['users'])) {
                throw new Error("Expected the field `users` to be an array in the JSON data but got " + data['users']);
            }
            // validate the optional field `users` (array)
            for (const item of data['users']) {
                InMemoryUser.validateJSON(item);
            };
        }

        return true;
    }


}

InMemoryAuthModuleConfig.RequiredProperties = ["desc", "id", "name", "sessionMaxAge", "type", "users"];

/**
 * Description of the config
 * @member {String} desc
 */
InMemoryAuthModuleConfig.prototype['desc'] = undefined;

/**
 * Unique id of the config
 * @member {String} id
 */
InMemoryAuthModuleConfig.prototype['id'] = undefined;

/**
 * Name of the config
 * @member {String} name
 */
InMemoryAuthModuleConfig.prototype['name'] = undefined;

/**
 * Max age of the session
 * @member {String} sessionMaxAge
 */
InMemoryAuthModuleConfig.prototype['sessionMaxAge'] = undefined;

/**
 * Type of settings. value is basic
 * @member {String} type
 */
InMemoryAuthModuleConfig.prototype['type'] = undefined;

/**
 * List of users
 * @member {Array.<module:model/InMemoryUser>} users
 */
InMemoryAuthModuleConfig.prototype['users'] = undefined;






export default InMemoryAuthModuleConfig;

