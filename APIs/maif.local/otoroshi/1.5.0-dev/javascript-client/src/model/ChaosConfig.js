/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BadResponsesFaultConfig from './BadResponsesFaultConfig';
import LargeRequestFaultConfig from './LargeRequestFaultConfig';
import LargeResponseFaultConfig from './LargeResponseFaultConfig';
import LatencyInjectionFaultConfig from './LatencyInjectionFaultConfig';

/**
 * The ChaosConfig model module.
 * @module model/ChaosConfig
 * @version 1.5.0-dev
 */
class ChaosConfig {
    /**
     * Constructs a new <code>ChaosConfig</code>.
     * Configuration for the faults that can be injected in requests
     * @alias module:model/ChaosConfig
     * @param enabled {Boolean} Whether or not this config is enabled
     */
    constructor(enabled) { 
        
        ChaosConfig.initialize(this, enabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled) { 
        obj['enabled'] = enabled;
    }

    /**
     * Constructs a <code>ChaosConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChaosConfig} obj Optional instance to populate.
     * @return {module:model/ChaosConfig} The populated <code>ChaosConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChaosConfig();

            if (data.hasOwnProperty('badResponsesFaultConfig')) {
                obj['badResponsesFaultConfig'] = BadResponsesFaultConfig.constructFromObject(data['badResponsesFaultConfig']);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('largeRequestFaultConfig')) {
                obj['largeRequestFaultConfig'] = LargeRequestFaultConfig.constructFromObject(data['largeRequestFaultConfig']);
            }
            if (data.hasOwnProperty('largeResponseFaultConfig')) {
                obj['largeResponseFaultConfig'] = LargeResponseFaultConfig.constructFromObject(data['largeResponseFaultConfig']);
            }
            if (data.hasOwnProperty('latencyInjectionFaultConfig')) {
                obj['latencyInjectionFaultConfig'] = LatencyInjectionFaultConfig.constructFromObject(data['latencyInjectionFaultConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChaosConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChaosConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ChaosConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `badResponsesFaultConfig`
        if (data['badResponsesFaultConfig']) { // data not null
          BadResponsesFaultConfig.validateJSON(data['badResponsesFaultConfig']);
        }
        // validate the optional field `largeRequestFaultConfig`
        if (data['largeRequestFaultConfig']) { // data not null
          LargeRequestFaultConfig.validateJSON(data['largeRequestFaultConfig']);
        }
        // validate the optional field `largeResponseFaultConfig`
        if (data['largeResponseFaultConfig']) { // data not null
          LargeResponseFaultConfig.validateJSON(data['largeResponseFaultConfig']);
        }
        // validate the optional field `latencyInjectionFaultConfig`
        if (data['latencyInjectionFaultConfig']) { // data not null
          LatencyInjectionFaultConfig.validateJSON(data['latencyInjectionFaultConfig']);
        }

        return true;
    }


}

ChaosConfig.RequiredProperties = ["enabled"];

/**
 * @member {module:model/BadResponsesFaultConfig} badResponsesFaultConfig
 */
ChaosConfig.prototype['badResponsesFaultConfig'] = undefined;

/**
 * Whether or not this config is enabled
 * @member {Boolean} enabled
 */
ChaosConfig.prototype['enabled'] = undefined;

/**
 * @member {module:model/LargeRequestFaultConfig} largeRequestFaultConfig
 */
ChaosConfig.prototype['largeRequestFaultConfig'] = undefined;

/**
 * @member {module:model/LargeResponseFaultConfig} largeResponseFaultConfig
 */
ChaosConfig.prototype['largeResponseFaultConfig'] = undefined;

/**
 * @member {module:model/LatencyInjectionFaultConfig} latencyInjectionFaultConfig
 */
ChaosConfig.prototype['latencyInjectionFaultConfig'] = undefined;






export default ChaosConfig;

