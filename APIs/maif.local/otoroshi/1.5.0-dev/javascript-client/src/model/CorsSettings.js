/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CorsSettings model module.
 * @module model/CorsSettings
 * @version 1.5.0-dev
 */
class CorsSettings {
    /**
     * Constructs a new <code>CorsSettings</code>.
     * The configuration for cors support
     * @alias module:model/CorsSettings
     * @param allowCredentials {Boolean} Allow to pass credentials
     * @param allowHeaders {Array.<String>} The cors allowed headers
     * @param allowMethods {Array.<String>} The cors allowed methods
     * @param allowOrigin {String} The cors allowed origin
     * @param enabled {Boolean} Whether or not cors is enabled
     * @param excludedPatterns {Array.<String>} The cors excluded patterns
     * @param exposeHeaders {Array.<String>} The cors exposed header
     * @param maxAge {Number} Cors max age
     */
    constructor(allowCredentials, allowHeaders, allowMethods, allowOrigin, enabled, excludedPatterns, exposeHeaders, maxAge) { 
        
        CorsSettings.initialize(this, allowCredentials, allowHeaders, allowMethods, allowOrigin, enabled, excludedPatterns, exposeHeaders, maxAge);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allowCredentials, allowHeaders, allowMethods, allowOrigin, enabled, excludedPatterns, exposeHeaders, maxAge) { 
        obj['allowCredentials'] = allowCredentials;
        obj['allowHeaders'] = allowHeaders;
        obj['allowMethods'] = allowMethods;
        obj['allowOrigin'] = allowOrigin;
        obj['enabled'] = enabled;
        obj['excludedPatterns'] = excludedPatterns;
        obj['exposeHeaders'] = exposeHeaders;
        obj['maxAge'] = maxAge;
    }

    /**
     * Constructs a <code>CorsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CorsSettings} obj Optional instance to populate.
     * @return {module:model/CorsSettings} The populated <code>CorsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CorsSettings();

            if (data.hasOwnProperty('allowCredentials')) {
                obj['allowCredentials'] = ApiClient.convertToType(data['allowCredentials'], 'Boolean');
            }
            if (data.hasOwnProperty('allowHeaders')) {
                obj['allowHeaders'] = ApiClient.convertToType(data['allowHeaders'], ['String']);
            }
            if (data.hasOwnProperty('allowMethods')) {
                obj['allowMethods'] = ApiClient.convertToType(data['allowMethods'], ['String']);
            }
            if (data.hasOwnProperty('allowOrigin')) {
                obj['allowOrigin'] = ApiClient.convertToType(data['allowOrigin'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('excludedPatterns')) {
                obj['excludedPatterns'] = ApiClient.convertToType(data['excludedPatterns'], ['String']);
            }
            if (data.hasOwnProperty('exposeHeaders')) {
                obj['exposeHeaders'] = ApiClient.convertToType(data['exposeHeaders'], ['String']);
            }
            if (data.hasOwnProperty('maxAge')) {
                obj['maxAge'] = ApiClient.convertToType(data['maxAge'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CorsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CorsSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CorsSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowHeaders'])) {
            throw new Error("Expected the field `allowHeaders` to be an array in the JSON data but got " + data['allowHeaders']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowMethods'])) {
            throw new Error("Expected the field `allowMethods` to be an array in the JSON data but got " + data['allowMethods']);
        }
        // ensure the json data is a string
        if (data['allowOrigin'] && !(typeof data['allowOrigin'] === 'string' || data['allowOrigin'] instanceof String)) {
            throw new Error("Expected the field `allowOrigin` to be a primitive type in the JSON string but got " + data['allowOrigin']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['excludedPatterns'])) {
            throw new Error("Expected the field `excludedPatterns` to be an array in the JSON data but got " + data['excludedPatterns']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['exposeHeaders'])) {
            throw new Error("Expected the field `exposeHeaders` to be an array in the JSON data but got " + data['exposeHeaders']);
        }

        return true;
    }


}

CorsSettings.RequiredProperties = ["allowCredentials", "allowHeaders", "allowMethods", "allowOrigin", "enabled", "excludedPatterns", "exposeHeaders", "maxAge"];

/**
 * Allow to pass credentials
 * @member {Boolean} allowCredentials
 */
CorsSettings.prototype['allowCredentials'] = undefined;

/**
 * The cors allowed headers
 * @member {Array.<String>} allowHeaders
 */
CorsSettings.prototype['allowHeaders'] = undefined;

/**
 * The cors allowed methods
 * @member {Array.<String>} allowMethods
 */
CorsSettings.prototype['allowMethods'] = undefined;

/**
 * The cors allowed origin
 * @member {String} allowOrigin
 */
CorsSettings.prototype['allowOrigin'] = undefined;

/**
 * Whether or not cors is enabled
 * @member {Boolean} enabled
 */
CorsSettings.prototype['enabled'] = undefined;

/**
 * The cors excluded patterns
 * @member {Array.<String>} excludedPatterns
 */
CorsSettings.prototype['excludedPatterns'] = undefined;

/**
 * The cors exposed header
 * @member {Array.<String>} exposeHeaders
 */
CorsSettings.prototype['exposeHeaders'] = undefined;

/**
 * Cors max age
 * @member {Number} maxAge
 */
CorsSettings.prototype['maxAge'] = undefined;






export default CorsSettings;

