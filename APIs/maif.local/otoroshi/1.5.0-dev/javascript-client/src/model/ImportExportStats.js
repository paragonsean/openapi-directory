/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImportExportStats model module.
 * @module model/ImportExportStats
 * @version 1.5.0-dev
 */
class ImportExportStats {
    /**
     * Constructs a new <code>ImportExportStats</code>.
     * Global stats for the current Otoroshi instances
     * @alias module:model/ImportExportStats
     * @param calls {Number} Number of calls to Otoroshi globally
     * @param dataIn {Number} The amount of data sent to Otoroshi globally
     * @param dataOut {Number} The amount of data sent from Otoroshi globally
     */
    constructor(calls, dataIn, dataOut) { 
        
        ImportExportStats.initialize(this, calls, dataIn, dataOut);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, calls, dataIn, dataOut) { 
        obj['calls'] = calls;
        obj['dataIn'] = dataIn;
        obj['dataOut'] = dataOut;
    }

    /**
     * Constructs a <code>ImportExportStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportExportStats} obj Optional instance to populate.
     * @return {module:model/ImportExportStats} The populated <code>ImportExportStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportExportStats();

            if (data.hasOwnProperty('calls')) {
                obj['calls'] = ApiClient.convertToType(data['calls'], 'Number');
            }
            if (data.hasOwnProperty('dataIn')) {
                obj['dataIn'] = ApiClient.convertToType(data['dataIn'], 'Number');
            }
            if (data.hasOwnProperty('dataOut')) {
                obj['dataOut'] = ApiClient.convertToType(data['dataOut'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportExportStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportExportStats</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImportExportStats.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ImportExportStats.RequiredProperties = ["calls", "dataIn", "dataOut"];

/**
 * Number of calls to Otoroshi globally
 * @member {Number} calls
 */
ImportExportStats.prototype['calls'] = undefined;

/**
 * The amount of data sent to Otoroshi globally
 * @member {Number} dataIn
 */
ImportExportStats.prototype['dataIn'] = undefined;

/**
 * The amount of data sent from Otoroshi globally
 * @member {Number} dataOut
 */
ImportExportStats.prototype['dataOut'] = undefined;






export default ImportExportStats;

