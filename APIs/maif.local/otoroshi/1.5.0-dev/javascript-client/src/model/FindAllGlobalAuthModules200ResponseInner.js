/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GenericOauth2ModuleConfig from './GenericOauth2ModuleConfig';
import GenericOauth2ModuleConfigJwtVerifier from './GenericOauth2ModuleConfigJwtVerifier';
import InMemoryAuthModuleConfig from './InMemoryAuthModuleConfig';
import InMemoryUser from './InMemoryUser';
import LdapAuthModuleConfig from './LdapAuthModuleConfig';

/**
 * The FindAllGlobalAuthModules200ResponseInner model module.
 * @module model/FindAllGlobalAuthModules200ResponseInner
 * @version 1.5.0-dev
 */
class FindAllGlobalAuthModules200ResponseInner {
    /**
     * Constructs a new <code>FindAllGlobalAuthModules200ResponseInner</code>.
     * @alias module:model/FindAllGlobalAuthModules200ResponseInner
     * @param {(module:model/GenericOauth2ModuleConfig|module:model/InMemoryAuthModuleConfig|module:model/LdapAuthModuleConfig)} instance The actual instance to initialize FindAllGlobalAuthModules200ResponseInner.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "LdapAuthModuleConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                LdapAuthModuleConfig.validateJSON(instance); // throw an exception if no match
                // create LdapAuthModuleConfig from JS object
                this.actualInstance = LdapAuthModuleConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into LdapAuthModuleConfig
            errorMessages.push("Failed to construct LdapAuthModuleConfig: " + err)
        }

        try {
            if (typeof instance === "InMemoryAuthModuleConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                InMemoryAuthModuleConfig.validateJSON(instance); // throw an exception if no match
                // create InMemoryAuthModuleConfig from JS object
                this.actualInstance = InMemoryAuthModuleConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into InMemoryAuthModuleConfig
            errorMessages.push("Failed to construct InMemoryAuthModuleConfig: " + err)
        }

        try {
            if (typeof instance === "GenericOauth2ModuleConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GenericOauth2ModuleConfig.validateJSON(instance); // throw an exception if no match
                // create GenericOauth2ModuleConfig from JS object
                this.actualInstance = GenericOauth2ModuleConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GenericOauth2ModuleConfig
            errorMessages.push("Failed to construct GenericOauth2ModuleConfig: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `FindAllGlobalAuthModules200ResponseInner` with oneOf schemas GenericOauth2ModuleConfig, InMemoryAuthModuleConfig, LdapAuthModuleConfig. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `FindAllGlobalAuthModules200ResponseInner` with oneOf schemas GenericOauth2ModuleConfig, InMemoryAuthModuleConfig, LdapAuthModuleConfig. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>FindAllGlobalAuthModules200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FindAllGlobalAuthModules200ResponseInner} obj Optional instance to populate.
     * @return {module:model/FindAllGlobalAuthModules200ResponseInner} The populated <code>FindAllGlobalAuthModules200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        return new FindAllGlobalAuthModules200ResponseInner(data);
    }

    /**
     * Gets the actual instance, which can be <code>GenericOauth2ModuleConfig</code>, <code>InMemoryAuthModuleConfig</code>, <code>LdapAuthModuleConfig</code>.
     * @return {(module:model/GenericOauth2ModuleConfig|module:model/InMemoryAuthModuleConfig|module:model/LdapAuthModuleConfig)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>GenericOauth2ModuleConfig</code>, <code>InMemoryAuthModuleConfig</code>, <code>LdapAuthModuleConfig</code>.
     * @param {(module:model/GenericOauth2ModuleConfig|module:model/InMemoryAuthModuleConfig|module:model/LdapAuthModuleConfig)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = FindAllGlobalAuthModules200ResponseInner.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of FindAllGlobalAuthModules200ResponseInner from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/FindAllGlobalAuthModules200ResponseInner} An instance of FindAllGlobalAuthModules200ResponseInner.
     */
    static fromJSON = function(json_string){
        return FindAllGlobalAuthModules200ResponseInner.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The admin password
 * @member {String} adminPassword
 */
FindAllGlobalAuthModules200ResponseInner.prototype['adminPassword'] = undefined;

/**
 * The admin username
 * @member {String} adminUsername
 */
FindAllGlobalAuthModules200ResponseInner.prototype['adminUsername'] = undefined;

/**
 * Description of the config
 * @member {String} desc
 */
FindAllGlobalAuthModules200ResponseInner.prototype['desc'] = undefined;

/**
 * Field name to get email from user profile
 * @member {String} emailField
 */
FindAllGlobalAuthModules200ResponseInner.prototype['emailField'] = undefined;

/**
 * Filter for groups
 * @member {String} groupFilter
 */
FindAllGlobalAuthModules200ResponseInner.prototype['groupFilter'] = undefined;

/**
 * Unique id of the config
 * @member {String} id
 */
FindAllGlobalAuthModules200ResponseInner.prototype['id'] = undefined;

/**
 * Name of the config
 * @member {String} name
 */
FindAllGlobalAuthModules200ResponseInner.prototype['name'] = undefined;

/**
 * Field name to get name from user profile
 * @member {String} nameField
 */
FindAllGlobalAuthModules200ResponseInner.prototype['nameField'] = undefined;

/**
 * Field name to get otoroshi metadata from. You can specify sub fields using | as separator
 * @member {String} otoroshiDataField
 */
FindAllGlobalAuthModules200ResponseInner.prototype['otoroshiDataField'] = undefined;

/**
 * LDAP search base
 * @member {String} searchBase
 */
FindAllGlobalAuthModules200ResponseInner.prototype['searchBase'] = undefined;

/**
 * Filter for users
 * @member {String} searchFilter
 */
FindAllGlobalAuthModules200ResponseInner.prototype['searchFilter'] = undefined;

/**
 * URL of the ldap server
 * @member {String} serverUrl
 */
FindAllGlobalAuthModules200ResponseInner.prototype['serverUrl'] = undefined;

/**
 * Max age of the session
 * @member {Number} sessionMaxAge
 */
FindAllGlobalAuthModules200ResponseInner.prototype['sessionMaxAge'] = undefined;

/**
 * Type of settings. value is oauth2
 * @member {String} type
 */
FindAllGlobalAuthModules200ResponseInner.prototype['type'] = undefined;

/**
 * LDAP user base DN
 * @member {String} userBase
 */
FindAllGlobalAuthModules200ResponseInner.prototype['userBase'] = undefined;

/**
 * List of users
 * @member {Array.<module:model/InMemoryUser>} users
 */
FindAllGlobalAuthModules200ResponseInner.prototype['users'] = undefined;

/**
 * Field name to get access token
 * @member {String} accessTokenField
 */
FindAllGlobalAuthModules200ResponseInner.prototype['accessTokenField'] = undefined;

/**
 * OAuth authorize URL
 * @member {String} authorizeUrl
 */
FindAllGlobalAuthModules200ResponseInner.prototype['authorizeUrl'] = undefined;

/**
 * Otoroshi callback URL
 * @member {String} callbackUrl
 */
FindAllGlobalAuthModules200ResponseInner.prototype['callbackUrl'] = undefined;

/**
 * The claims of the token
 * @member {String} claims
 */
FindAllGlobalAuthModules200ResponseInner.prototype['claims'] = undefined;

/**
 * OAuth Client id
 * @member {String} clientId
 */
FindAllGlobalAuthModules200ResponseInner.prototype['clientId'] = undefined;

/**
 * OAuth Client secret
 * @member {String} clientSecret
 */
FindAllGlobalAuthModules200ResponseInner.prototype['clientSecret'] = undefined;

/**
 * @member {module:model/GenericOauth2ModuleConfigJwtVerifier} jwtVerifier
 */
FindAllGlobalAuthModules200ResponseInner.prototype['jwtVerifier'] = undefined;

/**
 * OAuth login URL
 * @member {String} loginUrl
 */
FindAllGlobalAuthModules200ResponseInner.prototype['loginUrl'] = undefined;

/**
 * OAuth logout URL
 * @member {String} logoutUrl
 */
FindAllGlobalAuthModules200ResponseInner.prototype['logoutUrl'] = undefined;

/**
 * URL of the OIDC config. file
 * @member {String} oidConfig
 */
FindAllGlobalAuthModules200ResponseInner.prototype['oidConfig'] = undefined;

/**
 * The user profile will be read from the JWT token in id_token
 * @member {Boolean} readProfileFromToken
 */
FindAllGlobalAuthModules200ResponseInner.prototype['readProfileFromToken'] = undefined;

/**
 * The scope of the token
 * @member {String} scope
 */
FindAllGlobalAuthModules200ResponseInner.prototype['scope'] = undefined;

/**
 * OAuth token URL
 * @member {String} tokenUrl
 */
FindAllGlobalAuthModules200ResponseInner.prototype['tokenUrl'] = undefined;

/**
 * Use for redirection to actual service
 * @member {Boolean} useCookies
 */
FindAllGlobalAuthModules200ResponseInner.prototype['useCookies'] = undefined;

/**
 * Use JSON or URL Form Encoded as payload with the OAuth provider
 * @member {Boolean} useJson
 */
FindAllGlobalAuthModules200ResponseInner.prototype['useJson'] = undefined;

/**
 * OAuth userinfo to get user profile
 * @member {String} userInfoUrl
 */
FindAllGlobalAuthModules200ResponseInner.prototype['userInfoUrl'] = undefined;


FindAllGlobalAuthModules200ResponseInner.OneOf = ["GenericOauth2ModuleConfig", "InMemoryAuthModuleConfig", "LdapAuthModuleConfig"];

export default FindAllGlobalAuthModules200ResponseInner;

