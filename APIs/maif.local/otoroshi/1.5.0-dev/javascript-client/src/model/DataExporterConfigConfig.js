/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomDataExporterConfig from './CustomDataExporterConfig';
import ElasticConfig from './ElasticConfig';
import FileDataExporterConfig from './FileDataExporterConfig';
import KafkaConfig from './KafkaConfig';
import MailerConsoleExporterConfig from './MailerConsoleExporterConfig';
import MailerGenericExporterConfig from './MailerGenericExporterConfig';
import MailerMailgunExporterConfig from './MailerMailgunExporterConfig';
import MailerMailjetExporterConfig from './MailerMailjetExporterConfig';
import MailerSendgridExporterConfig from './MailerSendgridExporterConfig';
import PulsarDataExporterConfig from './PulsarDataExporterConfig';

/**
 * The DataExporterConfigConfig model module.
 * @module model/DataExporterConfigConfig
 * @version 1.5.0-dev
 */
class DataExporterConfigConfig {
    /**
     * Constructs a new <code>DataExporterConfigConfig</code>.
     * Data Exporter config
     * @alias module:model/DataExporterConfigConfig
     * @param {(module:model/CustomDataExporterConfig|module:model/ElasticConfig|module:model/FileDataExporterConfig|module:model/KafkaConfig|module:model/MailerConsoleExporterConfig|module:model/MailerGenericExporterConfig|module:model/MailerMailgunExporterConfig|module:model/MailerMailjetExporterConfig|module:model/MailerSendgridExporterConfig|module:model/Object|module:model/PulsarDataExporterConfig)} instance The actual instance to initialize DataExporterConfigConfig.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ElasticConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ElasticConfig.validateJSON(instance); // throw an exception if no match
                // create ElasticConfig from JS object
                this.actualInstance = ElasticConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ElasticConfig
            errorMessages.push("Failed to construct ElasticConfig: " + err)
        }

        try {
            if (typeof instance === "KafkaConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                KafkaConfig.validateJSON(instance); // throw an exception if no match
                // create KafkaConfig from JS object
                this.actualInstance = KafkaConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into KafkaConfig
            errorMessages.push("Failed to construct KafkaConfig: " + err)
        }

        try {
            if (typeof instance === "PulsarDataExporterConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                PulsarDataExporterConfig.validateJSON(instance); // throw an exception if no match
                // create PulsarDataExporterConfig from JS object
                this.actualInstance = PulsarDataExporterConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into PulsarDataExporterConfig
            errorMessages.push("Failed to construct PulsarDataExporterConfig: " + err)
        }

        try {
            if (typeof instance === "FileDataExporterConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                FileDataExporterConfig.validateJSON(instance); // throw an exception if no match
                // create FileDataExporterConfig from JS object
                this.actualInstance = FileDataExporterConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into FileDataExporterConfig
            errorMessages.push("Failed to construct FileDataExporterConfig: " + err)
        }

        try {
            if (typeof instance === "MailerGenericExporterConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MailerGenericExporterConfig.validateJSON(instance); // throw an exception if no match
                // create MailerGenericExporterConfig from JS object
                this.actualInstance = MailerGenericExporterConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MailerGenericExporterConfig
            errorMessages.push("Failed to construct MailerGenericExporterConfig: " + err)
        }

        try {
            if (typeof instance === "MailerConsoleExporterConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MailerConsoleExporterConfig.validateJSON(instance); // throw an exception if no match
                // create MailerConsoleExporterConfig from JS object
                this.actualInstance = MailerConsoleExporterConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MailerConsoleExporterConfig
            errorMessages.push("Failed to construct MailerConsoleExporterConfig: " + err)
        }

        try {
            if (typeof instance === "MailerMailgunExporterConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MailerMailgunExporterConfig.validateJSON(instance); // throw an exception if no match
                // create MailerMailgunExporterConfig from JS object
                this.actualInstance = MailerMailgunExporterConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MailerMailgunExporterConfig
            errorMessages.push("Failed to construct MailerMailgunExporterConfig: " + err)
        }

        try {
            if (typeof instance === "MailerMailjetExporterConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MailerMailjetExporterConfig.validateJSON(instance); // throw an exception if no match
                // create MailerMailjetExporterConfig from JS object
                this.actualInstance = MailerMailjetExporterConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MailerMailjetExporterConfig
            errorMessages.push("Failed to construct MailerMailjetExporterConfig: " + err)
        }

        try {
            if (typeof instance === "MailerSendgridExporterConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                MailerSendgridExporterConfig.validateJSON(instance); // throw an exception if no match
                // create MailerSendgridExporterConfig from JS object
                this.actualInstance = MailerSendgridExporterConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into MailerSendgridExporterConfig
            errorMessages.push("Failed to construct MailerSendgridExporterConfig: " + err)
        }

        try {
            this.actualInstance = instance;
            match++;
        } catch(err) {
            // json data failed to deserialize into Object
            errorMessages.push("Failed to construct Object: " + err)
        }

        try {
            if (typeof instance === "CustomDataExporterConfig") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CustomDataExporterConfig.validateJSON(instance); // throw an exception if no match
                // create CustomDataExporterConfig from JS object
                this.actualInstance = CustomDataExporterConfig.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CustomDataExporterConfig
            errorMessages.push("Failed to construct CustomDataExporterConfig: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `DataExporterConfigConfig` with oneOf schemas CustomDataExporterConfig, ElasticConfig, FileDataExporterConfig, KafkaConfig, MailerConsoleExporterConfig, MailerGenericExporterConfig, MailerMailgunExporterConfig, MailerMailjetExporterConfig, MailerSendgridExporterConfig, Object, PulsarDataExporterConfig. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `DataExporterConfigConfig` with oneOf schemas CustomDataExporterConfig, ElasticConfig, FileDataExporterConfig, KafkaConfig, MailerConsoleExporterConfig, MailerGenericExporterConfig, MailerMailgunExporterConfig, MailerMailjetExporterConfig, MailerSendgridExporterConfig, Object, PulsarDataExporterConfig. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>DataExporterConfigConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataExporterConfigConfig} obj Optional instance to populate.
     * @return {module:model/DataExporterConfigConfig} The populated <code>DataExporterConfigConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        return new DataExporterConfigConfig(data);
    }

    /**
     * Gets the actual instance, which can be <code>CustomDataExporterConfig</code>, <code>ElasticConfig</code>, <code>FileDataExporterConfig</code>, <code>KafkaConfig</code>, <code>MailerConsoleExporterConfig</code>, <code>MailerGenericExporterConfig</code>, <code>MailerMailgunExporterConfig</code>, <code>MailerMailjetExporterConfig</code>, <code>MailerSendgridExporterConfig</code>, <code>Object</code>, <code>PulsarDataExporterConfig</code>.
     * @return {(module:model/CustomDataExporterConfig|module:model/ElasticConfig|module:model/FileDataExporterConfig|module:model/KafkaConfig|module:model/MailerConsoleExporterConfig|module:model/MailerGenericExporterConfig|module:model/MailerMailgunExporterConfig|module:model/MailerMailjetExporterConfig|module:model/MailerSendgridExporterConfig|module:model/Object|module:model/PulsarDataExporterConfig)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CustomDataExporterConfig</code>, <code>ElasticConfig</code>, <code>FileDataExporterConfig</code>, <code>KafkaConfig</code>, <code>MailerConsoleExporterConfig</code>, <code>MailerGenericExporterConfig</code>, <code>MailerMailgunExporterConfig</code>, <code>MailerMailjetExporterConfig</code>, <code>MailerSendgridExporterConfig</code>, <code>Object</code>, <code>PulsarDataExporterConfig</code>.
     * @param {(module:model/CustomDataExporterConfig|module:model/ElasticConfig|module:model/FileDataExporterConfig|module:model/KafkaConfig|module:model/MailerConsoleExporterConfig|module:model/MailerGenericExporterConfig|module:model/MailerMailgunExporterConfig|module:model/MailerMailjetExporterConfig|module:model/MailerSendgridExporterConfig|module:model/Object|module:model/PulsarDataExporterConfig)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = DataExporterConfigConfig.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of DataExporterConfigConfig from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/DataExporterConfigConfig} An instance of DataExporterConfigConfig.
     */
    static fromJSON = function(json_string){
        return DataExporterConfigConfig.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * URL of the elastic cluster
 * @member {String} clusterUri
 */
DataExporterConfigConfig.prototype['clusterUri'] = undefined;

/**
 * Optional headers
 * @member {Object.<String, String>} headers
 */
DataExporterConfigConfig.prototype['headers'] = undefined;

/**
 * Index for events. Default is otoroshi-events
 * @member {String} index
 */
DataExporterConfigConfig.prototype['index'] = undefined;

/**
 * Optional password
 * @member {String} password
 */
DataExporterConfigConfig.prototype['password'] = undefined;

/**
 * Type of events. Default is event
 * @member {String} type
 */
DataExporterConfigConfig.prototype['type'] = undefined;

/**
 * Optional user
 * @member {String} user
 */
DataExporterConfigConfig.prototype['user'] = undefined;

/**
 * Optional keypass
 * @member {String} keyPass
 */
DataExporterConfigConfig.prototype['keyPass'] = undefined;

/**
 * Optional path to keystore
 * @member {String} keyStore
 */
DataExporterConfigConfig.prototype['keyStore'] = undefined;

/**
 * URLs of the kafka servers
 * @member {Array.<String>} servers
 */
DataExporterConfigConfig.prototype['servers'] = undefined;

/**
 * Topic
 * @member {String} topic
 */
DataExporterConfigConfig.prototype['topic'] = undefined;

/**
 * Optional path to trustore
 * @member {String} trustore
 */
DataExporterConfigConfig.prototype['trustore'] = undefined;

/**
 * Namespace
 * @member {String} namespace
 */
DataExporterConfigConfig.prototype['namespace'] = undefined;

/**
 * Tenant
 * @member {String} tenant
 */
DataExporterConfigConfig.prototype['tenant'] = undefined;

/**
 * URI of the pulsar server
 * @member {Array.<String>} uri
 */
DataExporterConfigConfig.prototype['uri'] = undefined;

/**
 * Path to file
 * @member {String} path
 */
DataExporterConfigConfig.prototype['path'] = undefined;

/**
 * Email adresses of recipents
 * @member {Array.<String>} to
 */
DataExporterConfigConfig.prototype['to'] = undefined;

/**
 * Url of mailer
 * @member {String} url
 */
DataExporterConfigConfig.prototype['url'] = undefined;

/**
 * Mailgun apiKey
 * @member {String} apiKey
 */
DataExporterConfigConfig.prototype['apiKey'] = undefined;

/**
 * Mailgun domain
 * @member {String} domain
 */
DataExporterConfigConfig.prototype['domain'] = undefined;

/**
 * Whether the mailgun server is european
 * @member {Boolean} eu
 */
DataExporterConfigConfig.prototype['eu'] = undefined;

/**
 * Mailjet private apiKey
 * @member {String} apiKeyPrivate
 */
DataExporterConfigConfig.prototype['apiKeyPrivate'] = undefined;

/**
 * Sendgrid apiKey
 * @member {String} apiKeyPublic
 */
DataExporterConfigConfig.prototype['apiKeyPublic'] = undefined;

/**
 * Custom data exporter config
 * @member {Object.<String, String>} config
 */
DataExporterConfigConfig.prototype['config'] = undefined;

/**
 * Script Ref
 * @member {String} ref
 */
DataExporterConfigConfig.prototype['ref'] = undefined;


DataExporterConfigConfig.OneOf = ["CustomDataExporterConfig", "ElasticConfig", "FileDataExporterConfig", "KafkaConfig", "MailerConsoleExporterConfig", "MailerGenericExporterConfig", "MailerMailgunExporterConfig", "MailerMailjetExporterConfig", "MailerSendgridExporterConfig", "Object", "PulsarDataExporterConfig"];

export default DataExporterConfigConfig;

