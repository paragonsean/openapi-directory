/**
 * Otoroshi Admin API
 * Admin API of the Otoroshi reverse proxy
 *
 * The version of the OpenAPI document: 1.5.0-dev
 * Contact: oss@maif.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OtoroshiAdminApi);
  }
}(this, function(expect, OtoroshiAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OtoroshiAdminApi.DataExporterConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DataExporterConfig', function() {
    it('should create an instance of DataExporterConfig', function() {
      // uncomment below and update the code to test DataExporterConfig
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be.a(OtoroshiAdminApi.DataExporterConfig);
    });

    it('should have the property bufferSize (base name: "bufferSize")', function() {
      // uncomment below and update the code to test the property bufferSize
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property config (base name: "config")', function() {
      // uncomment below and update the code to test the property config
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property desc (base name: "desc")', function() {
      // uncomment below and update the code to test the property desc
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property filtering (base name: "filtering")', function() {
      // uncomment below and update the code to test the property filtering
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property groupDuration (base name: "groupDuration")', function() {
      // uncomment below and update the code to test the property groupDuration
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property groupSize (base name: "groupSize")', function() {
      // uncomment below and update the code to test the property groupSize
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property jsonWorkers (base name: "jsonWorkers")', function() {
      // uncomment below and update the code to test the property jsonWorkers
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property projection (base name: "projection")', function() {
      // uncomment below and update the code to test the property projection
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property sendWorkers (base name: "sendWorkers")', function() {
      // uncomment below and update the code to test the property sendWorkers
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

    it('should have the property typ (base name: "typ")', function() {
      // uncomment below and update the code to test the property typ
      //var instance = new OtoroshiAdminApi.DataExporterConfig();
      //expect(instance).to.be();
    });

  });

}));
