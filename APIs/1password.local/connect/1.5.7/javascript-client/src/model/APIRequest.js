/**
 * 1Password Connect
 * REST API interface for 1Password Connect.
 *
 * The version of the OpenAPI document: 1.5.7
 * Contact: support@1password.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import APIRequestActor from './APIRequestActor';
import APIRequestResource from './APIRequestResource';

/**
 * The APIRequest model module.
 * @module model/APIRequest
 * @version 1.5.7
 */
class APIRequest {
    /**
     * Constructs a new <code>APIRequest</code>.
     * Represents a request that was made to the API. Including what Token was used and what resource was accessed.
     * @alias module:model/APIRequest
     */
    constructor() { 
        
        APIRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>APIRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIRequest} obj Optional instance to populate.
     * @return {module:model/APIRequest} The populated <code>APIRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIRequest();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('actor')) {
                obj['actor'] = APIRequestActor.constructFromObject(data['actor']);
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = APIRequestResource.constructFromObject(data['resource']);
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APIRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APIRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // validate the optional field `actor`
        if (data['actor']) { // data not null
          APIRequestActor.validateJSON(data['actor']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          APIRequestResource.validateJSON(data['resource']);
        }
        // ensure the json data is a string
        if (data['result'] && !(typeof data['result'] === 'string' || data['result'] instanceof String)) {
            throw new Error("Expected the field `result` to be a primitive type in the JSON string but got " + data['result']);
        }

        return true;
    }


}



/**
 * @member {module:model/APIRequest.ActionEnum} action
 */
APIRequest.prototype['action'] = undefined;

/**
 * @member {module:model/APIRequestActor} actor
 */
APIRequest.prototype['actor'] = undefined;

/**
 * The unique id used to identify a single request.
 * @member {String} requestId
 */
APIRequest.prototype['requestId'] = undefined;

/**
 * @member {module:model/APIRequestResource} resource
 */
APIRequest.prototype['resource'] = undefined;

/**
 * @member {module:model/APIRequest.ResultEnum} result
 */
APIRequest.prototype['result'] = undefined;

/**
 * The time at which the request was processed by the server.
 * @member {Date} timestamp
 */
APIRequest.prototype['timestamp'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
APIRequest['ActionEnum'] = {

    /**
     * value: "READ"
     * @const
     */
    "READ": "READ",

    /**
     * value: "CREATE"
     * @const
     */
    "CREATE": "CREATE",

    /**
     * value: "UPDATE"
     * @const
     */
    "UPDATE": "UPDATE",

    /**
     * value: "DELETE"
     * @const
     */
    "DELETE": "DELETE"
};


/**
 * Allowed values for the <code>result</code> property.
 * @enum {String}
 * @readonly
 */
APIRequest['ResultEnum'] = {

    /**
     * value: "SUCCESS"
     * @const
     */
    "SUCCESS": "SUCCESS",

    /**
     * value: "DENY"
     * @const
     */
    "DENY": "DENY"
};



export default APIRequest;

