/**
 * 1Password Connect
 * REST API interface for 1Password Connect.
 *
 * The version of the OpenAPI document: 1.5.7
 * Contact: support@1password.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileSection from './FileSection';

/**
 * The File model module.
 * @module model/File
 * @version 1.5.7
 */
class File {
    /**
     * Constructs a new <code>File</code>.
     * @alias module:model/File
     */
    constructor() { 
        
        File.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>File</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/File} obj Optional instance to populate.
     * @return {module:model/File} The populated <code>File</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new File();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'Blob');
            }
            if (data.hasOwnProperty('content_path')) {
                obj['content_path'] = ApiClient.convertToType(data['content_path'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('section')) {
                obj['section'] = FileSection.constructFromObject(data['section']);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>File</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>File</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['content_path'] && !(typeof data['content_path'] === 'string' || data['content_path'] instanceof String)) {
            throw new Error("Expected the field `content_path` to be a primitive type in the JSON string but got " + data['content_path']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `section`
        if (data['section']) { // data not null
          FileSection.validateJSON(data['section']);
        }

        return true;
    }


}



/**
 * Base64-encoded contents of the file. Only set if size <= OP_MAX_INLINE_FILE_SIZE_KB kb and `inline_files` is set to `true`.
 * @member {Blob} content
 */
File.prototype['content'] = undefined;

/**
 * Path of the Connect API that can be used to download the contents of this file.
 * @member {String} content_path
 */
File.prototype['content_path'] = undefined;

/**
 * ID of the file
 * @member {String} id
 */
File.prototype['id'] = undefined;

/**
 * Name of the file
 * @member {String} name
 */
File.prototype['name'] = undefined;

/**
 * @member {module:model/FileSection} section
 */
File.prototype['section'] = undefined;

/**
 * Size in bytes of the file
 * @member {Number} size
 */
File.prototype['size'] = undefined;






export default File;

