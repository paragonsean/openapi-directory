/**
 * 1Password Connect
 * REST API interface for 1Password Connect.
 *
 * The version of the OpenAPI document: 1.5.7
 * Contact: support@1password.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceDependency from './ServiceDependency';

/**
 * The GetServerHealth200Response model module.
 * @module model/GetServerHealth200Response
 * @version 1.5.7
 */
class GetServerHealth200Response {
    /**
     * Constructs a new <code>GetServerHealth200Response</code>.
     * @alias module:model/GetServerHealth200Response
     * @param name {String} 
     * @param version {String} The Connect server's version
     */
    constructor(name, version) { 
        
        GetServerHealth200Response.initialize(this, name, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, version) { 
        obj['name'] = name;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>GetServerHealth200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetServerHealth200Response} obj Optional instance to populate.
     * @return {module:model/GetServerHealth200Response} The populated <code>GetServerHealth200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetServerHealth200Response();

            if (data.hasOwnProperty('dependencies')) {
                obj['dependencies'] = ApiClient.convertToType(data['dependencies'], [ServiceDependency]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetServerHealth200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetServerHealth200Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetServerHealth200Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['dependencies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dependencies'])) {
                throw new Error("Expected the field `dependencies` to be an array in the JSON data but got " + data['dependencies']);
            }
            // validate the optional field `dependencies` (array)
            for (const item of data['dependencies']) {
                ServiceDependency.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

GetServerHealth200Response.RequiredProperties = ["name", "version"];

/**
 * @member {Array.<module:model/ServiceDependency>} dependencies
 */
GetServerHealth200Response.prototype['dependencies'] = undefined;

/**
 * @member {String} name
 */
GetServerHealth200Response.prototype['name'] = undefined;

/**
 * The Connect server's version
 * @member {String} version
 */
GetServerHealth200Response.prototype['version'] = undefined;






export default GetServerHealth200Response;

