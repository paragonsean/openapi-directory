/**
 * 1Password Connect
 * REST API interface for 1Password Connect.
 *
 * The version of the OpenAPI document: 1.5.7
 * Contact: support@1password.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import APIRequestResourceItem from './APIRequestResourceItem';

/**
 * The APIRequestResource model module.
 * @module model/APIRequestResource
 * @version 1.5.7
 */
class APIRequestResource {
    /**
     * Constructs a new <code>APIRequestResource</code>.
     * @alias module:model/APIRequestResource
     */
    constructor() { 
        
        APIRequestResource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>APIRequestResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIRequestResource} obj Optional instance to populate.
     * @return {module:model/APIRequestResource} The populated <code>APIRequestResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIRequestResource();

            if (data.hasOwnProperty('item')) {
                obj['item'] = APIRequestResourceItem.constructFromObject(data['item']);
            }
            if (data.hasOwnProperty('itemVersion')) {
                obj['itemVersion'] = ApiClient.convertToType(data['itemVersion'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('vault')) {
                obj['vault'] = APIRequestResourceItem.constructFromObject(data['vault']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APIRequestResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APIRequestResource</code>.
     */
    static validateJSON(data) {
        // validate the optional field `item`
        if (data['item']) { // data not null
          APIRequestResourceItem.validateJSON(data['item']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `vault`
        if (data['vault']) { // data not null
          APIRequestResourceItem.validateJSON(data['vault']);
        }

        return true;
    }


}



/**
 * @member {module:model/APIRequestResourceItem} item
 */
APIRequestResource.prototype['item'] = undefined;

/**
 * @member {Number} itemVersion
 */
APIRequestResource.prototype['itemVersion'] = undefined;

/**
 * @member {module:model/APIRequestResource.TypeEnum} type
 */
APIRequestResource.prototype['type'] = undefined;

/**
 * @member {module:model/APIRequestResourceItem} vault
 */
APIRequestResource.prototype['vault'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
APIRequestResource['TypeEnum'] = {

    /**
     * value: "ITEM"
     * @const
     */
    "ITEM": "ITEM",

    /**
     * value: "VAULT"
     * @const
     */
    "VAULT": "VAULT"
};



export default APIRequestResource;

