/**
 * Mon-voyage-pas-cher.com Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimezoneResponse_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimezoneResponse_data::OAITimezoneResponse_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimezoneResponse_data::OAITimezoneResponse_data() {
    this->initializeModel();
}

OAITimezoneResponse_data::~OAITimezoneResponse_data() {}

void OAITimezoneResponse_data::initializeModel() {

    m_time_now_isSet = false;
    m_time_now_isValid = false;

    m_timezone_name_isSet = false;
    m_timezone_name_isValid = false;
}

void OAITimezoneResponse_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimezoneResponse_data::fromJsonObject(QJsonObject json) {

    m_time_now_isValid = ::OpenAPI::fromJsonValue(m_time_now, json[QString("time_now")]);
    m_time_now_isSet = !json[QString("time_now")].isNull() && m_time_now_isValid;

    m_timezone_name_isValid = ::OpenAPI::fromJsonValue(m_timezone_name, json[QString("timezone_name")]);
    m_timezone_name_isSet = !json[QString("timezone_name")].isNull() && m_timezone_name_isValid;
}

QString OAITimezoneResponse_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimezoneResponse_data::asJsonObject() const {
    QJsonObject obj;
    if (m_time_now_isSet) {
        obj.insert(QString("time_now"), ::OpenAPI::toJsonValue(m_time_now));
    }
    if (m_timezone_name_isSet) {
        obj.insert(QString("timezone_name"), ::OpenAPI::toJsonValue(m_timezone_name));
    }
    return obj;
}

QDateTime OAITimezoneResponse_data::getTimeNow() const {
    return m_time_now;
}
void OAITimezoneResponse_data::setTimeNow(const QDateTime &time_now) {
    m_time_now = time_now;
    m_time_now_isSet = true;
}

bool OAITimezoneResponse_data::is_time_now_Set() const{
    return m_time_now_isSet;
}

bool OAITimezoneResponse_data::is_time_now_Valid() const{
    return m_time_now_isValid;
}

QString OAITimezoneResponse_data::getTimezoneName() const {
    return m_timezone_name;
}
void OAITimezoneResponse_data::setTimezoneName(const QString &timezone_name) {
    m_timezone_name = timezone_name;
    m_timezone_name_isSet = true;
}

bool OAITimezoneResponse_data::is_timezone_name_Set() const{
    return m_timezone_name_isSet;
}

bool OAITimezoneResponse_data::is_timezone_name_Valid() const{
    return m_timezone_name_isValid;
}

bool OAITimezoneResponse_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_time_now_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timezone_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimezoneResponse_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
