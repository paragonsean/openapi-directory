/**
 * Mon-voyage-pas-cher.com Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICountriesData.h
 *
 * This is the data object for the response of a Countries API call
 */

#ifndef OAICountriesData_H
#define OAICountriesData_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICountriesData : public OAIObject {
public:
    OAICountriesData();
    OAICountriesData(QString json);
    ~OAICountriesData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAirportscount() const;
    void setAirportscount(const double &airportscount);
    bool is_airportscount_Set() const;
    bool is_airportscount_Valid() const;

    QList<QString> getAlternatename() const;
    void setAlternatename(const QList<QString> &alternatename);
    bool is_alternatename_Set() const;
    bool is_alternatename_Valid() const;

    double getAreainsqkm() const;
    void setAreainsqkm(const double &areainsqkm);
    bool is_areainsqkm_Set() const;
    bool is_areainsqkm_Valid() const;

    QString getCapital() const;
    void setCapital(const QString &capital);
    bool is_capital_Set() const;
    bool is_capital_Valid() const;

    QString getCurrencycode() const;
    void setCurrencycode(const QString &currencycode);
    bool is_currencycode_Set() const;
    bool is_currencycode_Valid() const;

    QString getCurrencyname() const;
    void setCurrencyname(const QString &currencyname);
    bool is_currencyname_Set() const;
    bool is_currencyname_Valid() const;

    QString getFrArticle() const;
    void setFrArticle(const QString &fr_article);
    bool is_fr_article_Set() const;
    bool is_fr_article_Valid() const;

    QString getFrPreposition() const;
    void setFrPreposition(const QString &fr_preposition);
    bool is_fr_preposition_Set() const;
    bool is_fr_preposition_Valid() const;

    QString getIsoAlpha2() const;
    void setIsoAlpha2(const QString &iso_alpha2);
    bool is_iso_alpha2_Set() const;
    bool is_iso_alpha2_Valid() const;

    QString getLanguages() const;
    void setLanguages(const QString &languages);
    bool is_languages_Set() const;
    bool is_languages_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNameLocale() const;
    void setNameLocale(const QString &name_locale);
    bool is_name_locale_Set() const;
    bool is_name_locale_Valid() const;

    QList<QString> getNeighbors() const;
    void setNeighbors(const QList<QString> &neighbors);
    bool is_neighbors_Set() const;
    bool is_neighbors_Valid() const;

    double getPopulation() const;
    void setPopulation(const double &population);
    bool is_population_Set() const;
    bool is_population_Valid() const;

    QString getPostalcode() const;
    void setPostalcode(const QString &postalcode);
    bool is_postalcode_Set() const;
    bool is_postalcode_Valid() const;

    QString getPostalcoderegex() const;
    void setPostalcoderegex(const QString &postalcoderegex);
    bool is_postalcoderegex_Set() const;
    bool is_postalcoderegex_Valid() const;

    QString getTld() const;
    void setTld(const QString &tld);
    bool is_tld_Set() const;
    bool is_tld_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_airportscount;
    bool m_airportscount_isSet;
    bool m_airportscount_isValid;

    QList<QString> m_alternatename;
    bool m_alternatename_isSet;
    bool m_alternatename_isValid;

    double m_areainsqkm;
    bool m_areainsqkm_isSet;
    bool m_areainsqkm_isValid;

    QString m_capital;
    bool m_capital_isSet;
    bool m_capital_isValid;

    QString m_currencycode;
    bool m_currencycode_isSet;
    bool m_currencycode_isValid;

    QString m_currencyname;
    bool m_currencyname_isSet;
    bool m_currencyname_isValid;

    QString m_fr_article;
    bool m_fr_article_isSet;
    bool m_fr_article_isValid;

    QString m_fr_preposition;
    bool m_fr_preposition_isSet;
    bool m_fr_preposition_isValid;

    QString m_iso_alpha2;
    bool m_iso_alpha2_isSet;
    bool m_iso_alpha2_isValid;

    QString m_languages;
    bool m_languages_isSet;
    bool m_languages_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_name_locale;
    bool m_name_locale_isSet;
    bool m_name_locale_isValid;

    QList<QString> m_neighbors;
    bool m_neighbors_isSet;
    bool m_neighbors_isValid;

    double m_population;
    bool m_population_isSet;
    bool m_population_isValid;

    QString m_postalcode;
    bool m_postalcode_isSet;
    bool m_postalcode_isValid;

    QString m_postalcoderegex;
    bool m_postalcoderegex_isSet;
    bool m_postalcoderegex_isValid;

    QString m_tld;
    bool m_tld_isSet;
    bool m_tld_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICountriesData)

#endif // OAICountriesData_H
