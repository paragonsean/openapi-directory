/**
 * Mon-voyage-pas-cher.com Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataAirportsSearch.h
 *
 * 
 */

#ifndef OAIDataAirportsSearch_H
#define OAIDataAirportsSearch_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDataAirportsSearch : public OAIObject {
public:
    OAIDataAirportsSearch();
    OAIDataAirportsSearch(QString json);
    ~OAIDataAirportsSearch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAirlineroutescount() const;
    void setAirlineroutescount(const qint32 &airlineroutescount);
    bool is_airlineroutescount_Set() const;
    bool is_airlineroutescount_Valid() const;

    QString getAirportWebsite() const;
    void setAirportWebsite(const QString &airport_website);
    bool is_airport_website_Set() const;
    bool is_airport_website_Valid() const;

    qint32 getAltitude() const;
    void setAltitude(const qint32 &altitude);
    bool is_altitude_Set() const;
    bool is_altitude_Valid() const;

    QString getCityname() const;
    void setCityname(const QString &cityname);
    bool is_cityname_Set() const;
    bool is_cityname_Valid() const;

    QString getCountrycode() const;
    void setCountrycode(const QString &countrycode);
    bool is_countrycode_Set() const;
    bool is_countrycode_Valid() const;

    qint32 getDestinationscount() const;
    void setDestinationscount(const qint32 &destinationscount);
    bool is_destinationscount_Set() const;
    bool is_destinationscount_Valid() const;

    QString getDistance() const;
    void setDistance(const QString &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    QString getIatacode() const;
    void setIatacode(const QString &iatacode);
    bool is_iatacode_Set() const;
    bool is_iatacode_Valid() const;

    QString getIcao() const;
    void setIcao(const QString &icao);
    bool is_icao_Set() const;
    bool is_icao_Valid() const;

    bool isIstopdestination() const;
    void setIstopdestination(const bool &istopdestination);
    bool is_istopdestination_Set() const;
    bool is_istopdestination_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getWikipediaPage() const;
    void setWikipediaPage(const QString &wikipedia_page);
    bool is_wikipedia_page_Set() const;
    bool is_wikipedia_page_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_airlineroutescount;
    bool m_airlineroutescount_isSet;
    bool m_airlineroutescount_isValid;

    QString m_airport_website;
    bool m_airport_website_isSet;
    bool m_airport_website_isValid;

    qint32 m_altitude;
    bool m_altitude_isSet;
    bool m_altitude_isValid;

    QString m_cityname;
    bool m_cityname_isSet;
    bool m_cityname_isValid;

    QString m_countrycode;
    bool m_countrycode_isSet;
    bool m_countrycode_isValid;

    qint32 m_destinationscount;
    bool m_destinationscount_isSet;
    bool m_destinationscount_isValid;

    QString m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    QString m_iatacode;
    bool m_iatacode_isSet;
    bool m_iatacode_isValid;

    QString m_icao;
    bool m_icao_isSet;
    bool m_icao_isValid;

    bool m_istopdestination;
    bool m_istopdestination_isSet;
    bool m_istopdestination_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString m_wikipedia_page;
    bool m_wikipedia_page_isSet;
    bool m_wikipedia_page_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataAirportsSearch)

#endif // OAIDataAirportsSearch_H
