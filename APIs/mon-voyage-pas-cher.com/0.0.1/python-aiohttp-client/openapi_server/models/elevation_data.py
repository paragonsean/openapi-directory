# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ElevationData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, elevation: int=None, location: str=None, unit: str=None):
        """ElevationData - a model defined in OpenAPI

        :param elevation: The elevation of this ElevationData.
        :param location: The location of this ElevationData.
        :param unit: The unit of this ElevationData.
        """
        self.openapi_types = {
            'elevation': int,
            'location': str,
            'unit': str
        }

        self.attribute_map = {
            'elevation': 'elevation',
            'location': 'location',
            'unit': 'unit'
        }

        self._elevation = elevation
        self._location = location
        self._unit = unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ElevationData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ElevationData of this ElevationData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def elevation(self):
        """Gets the elevation of this ElevationData.


        :return: The elevation of this ElevationData.
        :rtype: int
        """
        return self._elevation

    @elevation.setter
    def elevation(self, elevation):
        """Sets the elevation of this ElevationData.


        :param elevation: The elevation of this ElevationData.
        :type elevation: int
        """

        self._elevation = elevation

    @property
    def location(self):
        """Gets the location of this ElevationData.


        :return: The location of this ElevationData.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ElevationData.


        :param location: The location of this ElevationData.
        :type location: str
        """

        self._location = location

    @property
    def unit(self):
        """Gets the unit of this ElevationData.


        :return: The unit of this ElevationData.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this ElevationData.


        :param unit: The unit of this ElevationData.
        :type unit: str
        """

        self._unit = unit
