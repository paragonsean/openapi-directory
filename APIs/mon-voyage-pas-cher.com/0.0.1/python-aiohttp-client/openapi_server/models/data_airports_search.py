# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataAirportsSearch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, airlineroutescount: int=None, airport_website: str=None, altitude: int=None, cityname: str=None, countrycode: str=None, destinationscount: int=None, distance: str=None, iatacode: str=None, icao: str=None, istopdestination: bool=None, latitude: float=None, longitude: float=None, name: str=None, timezone: str=None, wikipedia_page: str=None):
        """DataAirportsSearch - a model defined in OpenAPI

        :param airlineroutescount: The airlineroutescount of this DataAirportsSearch.
        :param airport_website: The airport_website of this DataAirportsSearch.
        :param altitude: The altitude of this DataAirportsSearch.
        :param cityname: The cityname of this DataAirportsSearch.
        :param countrycode: The countrycode of this DataAirportsSearch.
        :param destinationscount: The destinationscount of this DataAirportsSearch.
        :param distance: The distance of this DataAirportsSearch.
        :param iatacode: The iatacode of this DataAirportsSearch.
        :param icao: The icao of this DataAirportsSearch.
        :param istopdestination: The istopdestination of this DataAirportsSearch.
        :param latitude: The latitude of this DataAirportsSearch.
        :param longitude: The longitude of this DataAirportsSearch.
        :param name: The name of this DataAirportsSearch.
        :param timezone: The timezone of this DataAirportsSearch.
        :param wikipedia_page: The wikipedia_page of this DataAirportsSearch.
        """
        self.openapi_types = {
            'airlineroutescount': int,
            'airport_website': str,
            'altitude': int,
            'cityname': str,
            'countrycode': str,
            'destinationscount': int,
            'distance': str,
            'iatacode': str,
            'icao': str,
            'istopdestination': bool,
            'latitude': float,
            'longitude': float,
            'name': str,
            'timezone': str,
            'wikipedia_page': str
        }

        self.attribute_map = {
            'airlineroutescount': 'airlineroutescount',
            'airport_website': 'airport_website',
            'altitude': 'altitude',
            'cityname': 'cityname',
            'countrycode': 'countrycode',
            'destinationscount': 'destinationscount',
            'distance': 'distance',
            'iatacode': 'iatacode',
            'icao': 'icao',
            'istopdestination': 'istopdestination',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'name': 'name',
            'timezone': 'timezone',
            'wikipedia_page': 'wikipedia_page'
        }

        self._airlineroutescount = airlineroutescount
        self._airport_website = airport_website
        self._altitude = altitude
        self._cityname = cityname
        self._countrycode = countrycode
        self._destinationscount = destinationscount
        self._distance = distance
        self._iatacode = iatacode
        self._icao = icao
        self._istopdestination = istopdestination
        self._latitude = latitude
        self._longitude = longitude
        self._name = name
        self._timezone = timezone
        self._wikipedia_page = wikipedia_page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataAirportsSearch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataAirportsSearch of this DataAirportsSearch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def airlineroutescount(self):
        """Gets the airlineroutescount of this DataAirportsSearch.


        :return: The airlineroutescount of this DataAirportsSearch.
        :rtype: int
        """
        return self._airlineroutescount

    @airlineroutescount.setter
    def airlineroutescount(self, airlineroutescount):
        """Sets the airlineroutescount of this DataAirportsSearch.


        :param airlineroutescount: The airlineroutescount of this DataAirportsSearch.
        :type airlineroutescount: int
        """

        self._airlineroutescount = airlineroutescount

    @property
    def airport_website(self):
        """Gets the airport_website of this DataAirportsSearch.


        :return: The airport_website of this DataAirportsSearch.
        :rtype: str
        """
        return self._airport_website

    @airport_website.setter
    def airport_website(self, airport_website):
        """Sets the airport_website of this DataAirportsSearch.


        :param airport_website: The airport_website of this DataAirportsSearch.
        :type airport_website: str
        """

        self._airport_website = airport_website

    @property
    def altitude(self):
        """Gets the altitude of this DataAirportsSearch.


        :return: The altitude of this DataAirportsSearch.
        :rtype: int
        """
        return self._altitude

    @altitude.setter
    def altitude(self, altitude):
        """Sets the altitude of this DataAirportsSearch.


        :param altitude: The altitude of this DataAirportsSearch.
        :type altitude: int
        """

        self._altitude = altitude

    @property
    def cityname(self):
        """Gets the cityname of this DataAirportsSearch.


        :return: The cityname of this DataAirportsSearch.
        :rtype: str
        """
        return self._cityname

    @cityname.setter
    def cityname(self, cityname):
        """Sets the cityname of this DataAirportsSearch.


        :param cityname: The cityname of this DataAirportsSearch.
        :type cityname: str
        """

        self._cityname = cityname

    @property
    def countrycode(self):
        """Gets the countrycode of this DataAirportsSearch.


        :return: The countrycode of this DataAirportsSearch.
        :rtype: str
        """
        return self._countrycode

    @countrycode.setter
    def countrycode(self, countrycode):
        """Sets the countrycode of this DataAirportsSearch.


        :param countrycode: The countrycode of this DataAirportsSearch.
        :type countrycode: str
        """

        self._countrycode = countrycode

    @property
    def destinationscount(self):
        """Gets the destinationscount of this DataAirportsSearch.


        :return: The destinationscount of this DataAirportsSearch.
        :rtype: int
        """
        return self._destinationscount

    @destinationscount.setter
    def destinationscount(self, destinationscount):
        """Sets the destinationscount of this DataAirportsSearch.


        :param destinationscount: The destinationscount of this DataAirportsSearch.
        :type destinationscount: int
        """

        self._destinationscount = destinationscount

    @property
    def distance(self):
        """Gets the distance of this DataAirportsSearch.

        only in response when operating a lat/long search

        :return: The distance of this DataAirportsSearch.
        :rtype: str
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this DataAirportsSearch.

        only in response when operating a lat/long search

        :param distance: The distance of this DataAirportsSearch.
        :type distance: str
        """

        self._distance = distance

    @property
    def iatacode(self):
        """Gets the iatacode of this DataAirportsSearch.


        :return: The iatacode of this DataAirportsSearch.
        :rtype: str
        """
        return self._iatacode

    @iatacode.setter
    def iatacode(self, iatacode):
        """Sets the iatacode of this DataAirportsSearch.


        :param iatacode: The iatacode of this DataAirportsSearch.
        :type iatacode: str
        """

        self._iatacode = iatacode

    @property
    def icao(self):
        """Gets the icao of this DataAirportsSearch.


        :return: The icao of this DataAirportsSearch.
        :rtype: str
        """
        return self._icao

    @icao.setter
    def icao(self, icao):
        """Sets the icao of this DataAirportsSearch.


        :param icao: The icao of this DataAirportsSearch.
        :type icao: str
        """

        self._icao = icao

    @property
    def istopdestination(self):
        """Gets the istopdestination of this DataAirportsSearch.


        :return: The istopdestination of this DataAirportsSearch.
        :rtype: bool
        """
        return self._istopdestination

    @istopdestination.setter
    def istopdestination(self, istopdestination):
        """Sets the istopdestination of this DataAirportsSearch.


        :param istopdestination: The istopdestination of this DataAirportsSearch.
        :type istopdestination: bool
        """

        self._istopdestination = istopdestination

    @property
    def latitude(self):
        """Gets the latitude of this DataAirportsSearch.


        :return: The latitude of this DataAirportsSearch.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this DataAirportsSearch.


        :param latitude: The latitude of this DataAirportsSearch.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this DataAirportsSearch.


        :return: The longitude of this DataAirportsSearch.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this DataAirportsSearch.


        :param longitude: The longitude of this DataAirportsSearch.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def name(self):
        """Gets the name of this DataAirportsSearch.


        :return: The name of this DataAirportsSearch.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DataAirportsSearch.


        :param name: The name of this DataAirportsSearch.
        :type name: str
        """

        self._name = name

    @property
    def timezone(self):
        """Gets the timezone of this DataAirportsSearch.


        :return: The timezone of this DataAirportsSearch.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this DataAirportsSearch.


        :param timezone: The timezone of this DataAirportsSearch.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def wikipedia_page(self):
        """Gets the wikipedia_page of this DataAirportsSearch.


        :return: The wikipedia_page of this DataAirportsSearch.
        :rtype: str
        """
        return self._wikipedia_page

    @wikipedia_page.setter
    def wikipedia_page(self, wikipedia_page):
        """Sets the wikipedia_page of this DataAirportsSearch.


        :param wikipedia_page: The wikipedia_page of this DataAirportsSearch.
        :type wikipedia_page: str
        """

        self._wikipedia_page = wikipedia_page
