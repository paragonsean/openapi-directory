/*
 * Mon-voyage-pas-cher.com Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AirportsSearchResponse;
import java.math.BigDecimal;
import org.openapitools.client.model.CitiesResponse;
import org.openapitools.client.model.ContinentsResponse;
import org.openapitools.client.model.CountriesResponse;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GeographyApisApi
 */
@Disabled
public class GeographyApisApiTest {

    private final GeographyApisApi api = new GeographyApisApi();

    /**
     * Search airports by country / Search nearby airports / Search an airport
     *
     * This webservice is providing you the ability to retrieve a list of airports matching your search criterias.&lt;br /&gt;The 3 mains search criterias are&lt;br /&gt;- by country code, this will list all airports for a given country.&lt;br /&gt;- by latitude/longitude with a radius in km. You can actually combine those 2 criterias, and search for example the closest airport in the USA of Vancoucer, Canada.&lt;br /&gt;- The last way to use the API is by searching directly with a IATA CODE in the location parameter, this will only return one result in the array of data results
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAirportTest() throws ApiException {
        String language = null;
        String location = null;
        Integer radius = null;
        String countrycode = null;
        Boolean topAirports = null;
        AirportsSearchResponse response = api.getAirport(language, location, radius, countrycode, topAirports);
        // TODO: test validations
    }

    /**
     * Retrieve cities informations from a string / build an autocomplete
     *
     * Search cities from a string parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAutocompleteTest() throws ApiException {
        String q = null;
        String language = null;
        String sort = null;
        String countrycode = null;
        CitiesResponse response = api.getAutocomplete(q, language, sort, countrycode);
        // TODO: test validations
    }

    /**
     * Search all cities from lat/long or countrycode
     *
     * Search cities according to given criterias. Either lat/long + radius or country code. A limit can be given but cannot exceed 50 results.&lt;br /&gt; A significant city will be defined according to the pourcent of population within a country.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCitiesTest() throws ApiException {
        String language = null;
        String sort = null;
        String countrycode = null;
        String location = null;
        Integer radius = null;
        Integer limit = null;
        Integer offset = null;
        CitiesResponse response = api.getCities(language, sort, countrycode, location, radius, limit, offset);
        // TODO: test validations
    }

    /**
     * Search all continents or one specific continent
     *
     * This webservice is providing you the ability to retrieve all informations about continents
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContinentsTest() throws ApiException {
        String language = null;
        String continentcode = null;
        ContinentsResponse response = api.getContinents(language, continentcode);
        // TODO: test validations
    }

    /**
     * Search all countries or one specific country
     *
     * This webservice is providing you the ability to retrieve a list of countries matching your search criterias.&lt;br /&gt;The 2 mains ways to search use this API are&lt;br /&gt;- by countrycode, it will only returns you one country&lt;br /&gt;- without the countrycode parameter which will return the full list of countries
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCountriesTest() throws ApiException {
        String language = null;
        String countrycode = null;
        CountriesResponse response = api.getCountries(language, countrycode);
        // TODO: test validations
    }

    /**
     * Search significant cities from lat/long or countrycode
     *
     * Search cities according to given criterias. Either lat/long + radius or country code. A limit can be given but cannot exceed 50 results.&lt;br /&gt; A significant city will be defined according to the pourcent of population within a country.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSignificantCitiesTest() throws ApiException {
        String language = null;
        String sort = null;
        BigDecimal pourcent = null;
        String countrycode = null;
        String location = null;
        Integer radius = null;
        Integer limit = null;
        Integer offset = null;
        CitiesResponse response = api.getSignificantCities(language, sort, pourcent, countrycode, location, radius, limit, offset);
        // TODO: test validations
    }

}
