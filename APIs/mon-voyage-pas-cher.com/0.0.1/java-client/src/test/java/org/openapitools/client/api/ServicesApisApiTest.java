/*
 * Mon-voyage-pas-cher.com Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DistanceResponse;
import org.openapitools.client.model.ElevationResponse;
import org.openapitools.client.model.ErrorResponse;
import java.time.LocalDate;
import org.openapitools.client.model.SunPositionResponse;
import org.openapitools.client.model.TimezoneResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServicesApisApi
 */
@Disabled
public class ServicesApisApiTest {

    private final ServicesApisApi api = new ServicesApisApi();

    /**
     * Calculate distance between lats/longs
     *
     * This webservice is providing you the ability to calculate the distance between 2 lat/long points, it returns you the value in km or miles
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDistanceTest() throws ApiException {
        String locationA = null;
        String locationB = null;
        String unit = null;
        DistanceResponse response = api.getDistance(locationA, locationB, unit);
        // TODO: test validations
    }

    /**
     * Search elevation informations from lat/long
     *
     * This webservice is providing you the ability to retrieve the elevation in meters or feet of ONE or MULTIPLE given latitude/longitude point(s). &lt;br /&gt;If you use MULTIPLE lat/long point, the maximum number of point you can send in one request is 256. Be aware that if MULTIPLE mode, the results are de-deplicated if you are sending the same latitude/longitude point multiple times.&lt;br /&gt;If your workload is a batch of millions of lat/long point, You will also get better throughput if you send around 100 lat/long points in one request than the maximum. This maximum is mostly allowed for people trying to graph altitudes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getElevationTest() throws ApiException {
        String locations = null;
        String unit = null;
        ElevationResponse response = api.getElevation(locations, unit);
        // TODO: test validations
    }

    /**
     * Search position of sun from lat/long and date
     *
     * This webservice is providing you the ability to retrieve the time of each phases of the sunlight cycle. Sunset, sunrise, sunriseEnd, golden hour, solarNoon, dawn, dusk and more for a given location and date. If the date if not provided, the response provided return informations for today at UTC time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSunTest() throws ApiException {
        String location = null;
        LocalDate date = null;
        SunPositionResponse response = api.getSun(location, date);
        // TODO: test validations
    }

    /**
     * Search timezone and time informations from lat/long
     *
     * This webservice is providing you the ability to retrieve the tz database time zones ( https://en.wikipedia.org/wiki/List_of_tz_database_time_zones )  from a given location ( )latitude and longitude or IATA code ). It also returns you the current time at the provided location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTimezoneTest() throws ApiException {
        String location = null;
        TimezoneResponse response = api.getTimezone(location);
        // TODO: test validations
    }

}
