/**
 * Mon-voyage-pas-cher.com Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataAirportsSearch model module.
 * @module model/DataAirportsSearch
 * @version 0.0.1
 */
class DataAirportsSearch {
    /**
     * Constructs a new <code>DataAirportsSearch</code>.
     * @alias module:model/DataAirportsSearch
     */
    constructor() { 
        
        DataAirportsSearch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataAirportsSearch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataAirportsSearch} obj Optional instance to populate.
     * @return {module:model/DataAirportsSearch} The populated <code>DataAirportsSearch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataAirportsSearch();

            if (data.hasOwnProperty('airlineroutescount')) {
                obj['airlineroutescount'] = ApiClient.convertToType(data['airlineroutescount'], 'Number');
            }
            if (data.hasOwnProperty('airport_website')) {
                obj['airport_website'] = ApiClient.convertToType(data['airport_website'], 'String');
            }
            if (data.hasOwnProperty('altitude')) {
                obj['altitude'] = ApiClient.convertToType(data['altitude'], 'Number');
            }
            if (data.hasOwnProperty('cityname')) {
                obj['cityname'] = ApiClient.convertToType(data['cityname'], 'String');
            }
            if (data.hasOwnProperty('countrycode')) {
                obj['countrycode'] = ApiClient.convertToType(data['countrycode'], 'String');
            }
            if (data.hasOwnProperty('destinationscount')) {
                obj['destinationscount'] = ApiClient.convertToType(data['destinationscount'], 'Number');
            }
            if (data.hasOwnProperty('distance')) {
                obj['distance'] = ApiClient.convertToType(data['distance'], 'String');
            }
            if (data.hasOwnProperty('iatacode')) {
                obj['iatacode'] = ApiClient.convertToType(data['iatacode'], 'String');
            }
            if (data.hasOwnProperty('icao')) {
                obj['icao'] = ApiClient.convertToType(data['icao'], 'String');
            }
            if (data.hasOwnProperty('istopdestination')) {
                obj['istopdestination'] = ApiClient.convertToType(data['istopdestination'], 'Boolean');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
            if (data.hasOwnProperty('wikipedia_page')) {
                obj['wikipedia_page'] = ApiClient.convertToType(data['wikipedia_page'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataAirportsSearch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataAirportsSearch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['airport_website'] && !(typeof data['airport_website'] === 'string' || data['airport_website'] instanceof String)) {
            throw new Error("Expected the field `airport_website` to be a primitive type in the JSON string but got " + data['airport_website']);
        }
        // ensure the json data is a string
        if (data['cityname'] && !(typeof data['cityname'] === 'string' || data['cityname'] instanceof String)) {
            throw new Error("Expected the field `cityname` to be a primitive type in the JSON string but got " + data['cityname']);
        }
        // ensure the json data is a string
        if (data['countrycode'] && !(typeof data['countrycode'] === 'string' || data['countrycode'] instanceof String)) {
            throw new Error("Expected the field `countrycode` to be a primitive type in the JSON string but got " + data['countrycode']);
        }
        // ensure the json data is a string
        if (data['distance'] && !(typeof data['distance'] === 'string' || data['distance'] instanceof String)) {
            throw new Error("Expected the field `distance` to be a primitive type in the JSON string but got " + data['distance']);
        }
        // ensure the json data is a string
        if (data['iatacode'] && !(typeof data['iatacode'] === 'string' || data['iatacode'] instanceof String)) {
            throw new Error("Expected the field `iatacode` to be a primitive type in the JSON string but got " + data['iatacode']);
        }
        // ensure the json data is a string
        if (data['icao'] && !(typeof data['icao'] === 'string' || data['icao'] instanceof String)) {
            throw new Error("Expected the field `icao` to be a primitive type in the JSON string but got " + data['icao']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['timezone'] && !(typeof data['timezone'] === 'string' || data['timezone'] instanceof String)) {
            throw new Error("Expected the field `timezone` to be a primitive type in the JSON string but got " + data['timezone']);
        }
        // ensure the json data is a string
        if (data['wikipedia_page'] && !(typeof data['wikipedia_page'] === 'string' || data['wikipedia_page'] instanceof String)) {
            throw new Error("Expected the field `wikipedia_page` to be a primitive type in the JSON string but got " + data['wikipedia_page']);
        }

        return true;
    }


}



/**
 * @member {Number} airlineroutescount
 */
DataAirportsSearch.prototype['airlineroutescount'] = undefined;

/**
 * @member {String} airport_website
 */
DataAirportsSearch.prototype['airport_website'] = undefined;

/**
 * @member {Number} altitude
 */
DataAirportsSearch.prototype['altitude'] = undefined;

/**
 * @member {String} cityname
 */
DataAirportsSearch.prototype['cityname'] = undefined;

/**
 * @member {String} countrycode
 */
DataAirportsSearch.prototype['countrycode'] = undefined;

/**
 * @member {Number} destinationscount
 */
DataAirportsSearch.prototype['destinationscount'] = undefined;

/**
 * only in response when operating a lat/long search
 * @member {String} distance
 */
DataAirportsSearch.prototype['distance'] = undefined;

/**
 * @member {String} iatacode
 */
DataAirportsSearch.prototype['iatacode'] = undefined;

/**
 * @member {String} icao
 */
DataAirportsSearch.prototype['icao'] = undefined;

/**
 * @member {Boolean} istopdestination
 */
DataAirportsSearch.prototype['istopdestination'] = undefined;

/**
 * @member {Number} latitude
 */
DataAirportsSearch.prototype['latitude'] = undefined;

/**
 * @member {Number} longitude
 */
DataAirportsSearch.prototype['longitude'] = undefined;

/**
 * @member {String} name
 */
DataAirportsSearch.prototype['name'] = undefined;

/**
 * @member {String} timezone
 */
DataAirportsSearch.prototype['timezone'] = undefined;

/**
 * @member {String} wikipedia_page
 */
DataAirportsSearch.prototype['wikipedia_page'] = undefined;






export default DataAirportsSearch;

