/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Gitlab);
  }
}(this, function(expect, Gitlab) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Gitlab.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('deleteV3ProjectsId', function() {
      it('should call deleteV3ProjectsId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsId
        //instance.deleteV3ProjectsId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdAccessRequestsUserId', function() {
      it('should call deleteV3ProjectsIdAccessRequestsUserId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdAccessRequestsUserId
        //instance.deleteV3ProjectsIdAccessRequestsUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdBoardsBoardIdListsListId', function() {
      it('should call deleteV3ProjectsIdBoardsBoardIdListsListId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdBoardsBoardIdListsListId
        //instance.deleteV3ProjectsIdBoardsBoardIdListsListId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdDeployKeysKeyId', function() {
      it('should call deleteV3ProjectsIdDeployKeysKeyId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdDeployKeysKeyId
        //instance.deleteV3ProjectsIdDeployKeysKeyId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdDeployKeysKeyIdDisable', function() {
      it('should call deleteV3ProjectsIdDeployKeysKeyIdDisable successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdDeployKeysKeyIdDisable
        //instance.deleteV3ProjectsIdDeployKeysKeyIdDisable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdEnvironmentsEnvironmentId', function() {
      it('should call deleteV3ProjectsIdEnvironmentsEnvironmentId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdEnvironmentsEnvironmentId
        //instance.deleteV3ProjectsIdEnvironmentsEnvironmentId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdFork', function() {
      it('should call deleteV3ProjectsIdFork successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdFork
        //instance.deleteV3ProjectsIdFork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdHooksHookId', function() {
      it('should call deleteV3ProjectsIdHooksHookId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdHooksHookId
        //instance.deleteV3ProjectsIdHooksHookId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdIssuesIssueId', function() {
      it('should call deleteV3ProjectsIdIssuesIssueId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdIssuesIssueId
        //instance.deleteV3ProjectsIdIssuesIssueId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdIssuesIssueIdAwardEmojiAwardId', function() {
      it('should call deleteV3ProjectsIdIssuesIssueIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdIssuesIssueIdAwardEmojiAwardId
        //instance.deleteV3ProjectsIdIssuesIssueIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId', function() {
      it('should call deleteV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId
        //instance.deleteV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdIssuesNoteableIdNotesNoteId', function() {
      it('should call deleteV3ProjectsIdIssuesNoteableIdNotesNoteId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdIssuesNoteableIdNotesNoteId
        //instance.deleteV3ProjectsIdIssuesNoteableIdNotesNoteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdIssuesSubscribableIdSubscription', function() {
      it('should call deleteV3ProjectsIdIssuesSubscribableIdSubscription successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdIssuesSubscribableIdSubscription
        //instance.deleteV3ProjectsIdIssuesSubscribableIdSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdKeysKeyId', function() {
      it('should call deleteV3ProjectsIdKeysKeyId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdKeysKeyId
        //instance.deleteV3ProjectsIdKeysKeyId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdKeysKeyIdDisable', function() {
      it('should call deleteV3ProjectsIdKeysKeyIdDisable successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdKeysKeyIdDisable
        //instance.deleteV3ProjectsIdKeysKeyIdDisable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdLabels', function() {
      it('should call deleteV3ProjectsIdLabels successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdLabels
        //instance.deleteV3ProjectsIdLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdLabelsSubscribableIdSubscription', function() {
      it('should call deleteV3ProjectsIdLabelsSubscribableIdSubscription successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdLabelsSubscribableIdSubscription
        //instance.deleteV3ProjectsIdLabelsSubscribableIdSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdMembersUserId', function() {
      it('should call deleteV3ProjectsIdMembersUserId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdMembersUserId
        //instance.deleteV3ProjectsIdMembersUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdMergeRequestSubscribableIdSubscription', function() {
      it('should call deleteV3ProjectsIdMergeRequestSubscribableIdSubscription successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdMergeRequestSubscribableIdSubscription
        //instance.deleteV3ProjectsIdMergeRequestSubscribableIdSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdMergeRequestsMergeRequestId', function() {
      it('should call deleteV3ProjectsIdMergeRequestsMergeRequestId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdMergeRequestsMergeRequestId
        //instance.deleteV3ProjectsIdMergeRequestsMergeRequestId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId', function() {
      it('should call deleteV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId
        //instance.deleteV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId', function() {
      it('should call deleteV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId
        //instance.deleteV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdMergeRequestsNoteableIdNotesNoteId', function() {
      it('should call deleteV3ProjectsIdMergeRequestsNoteableIdNotesNoteId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdMergeRequestsNoteableIdNotesNoteId
        //instance.deleteV3ProjectsIdMergeRequestsNoteableIdNotesNoteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdMergeRequestsSubscribableIdSubscription', function() {
      it('should call deleteV3ProjectsIdMergeRequestsSubscribableIdSubscription successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdMergeRequestsSubscribableIdSubscription
        //instance.deleteV3ProjectsIdMergeRequestsSubscribableIdSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdRepositoryBranchesBranch', function() {
      it('should call deleteV3ProjectsIdRepositoryBranchesBranch successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdRepositoryBranchesBranch
        //instance.deleteV3ProjectsIdRepositoryBranchesBranch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdRepositoryFiles', function() {
      it('should call deleteV3ProjectsIdRepositoryFiles successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdRepositoryFiles
        //instance.deleteV3ProjectsIdRepositoryFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdRepositoryMergedBranches', function() {
      it('should call deleteV3ProjectsIdRepositoryMergedBranches successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdRepositoryMergedBranches
        //instance.deleteV3ProjectsIdRepositoryMergedBranches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdRepositoryTagsTagName', function() {
      it('should call deleteV3ProjectsIdRepositoryTagsTagName successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdRepositoryTagsTagName
        //instance.deleteV3ProjectsIdRepositoryTagsTagName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdRunnersRunnerId', function() {
      it('should call deleteV3ProjectsIdRunnersRunnerId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdRunnersRunnerId
        //instance.deleteV3ProjectsIdRunnersRunnerId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdServicesServiceSlug', function() {
      it('should call deleteV3ProjectsIdServicesServiceSlug successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdServicesServiceSlug
        //instance.deleteV3ProjectsIdServicesServiceSlug(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdShareGroupId', function() {
      it('should call deleteV3ProjectsIdShareGroupId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdShareGroupId
        //instance.deleteV3ProjectsIdShareGroupId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdSnippetsNoteableIdNotesNoteId', function() {
      it('should call deleteV3ProjectsIdSnippetsNoteableIdNotesNoteId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdSnippetsNoteableIdNotesNoteId
        //instance.deleteV3ProjectsIdSnippetsNoteableIdNotesNoteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdSnippetsSnippetId', function() {
      it('should call deleteV3ProjectsIdSnippetsSnippetId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdSnippetsSnippetId
        //instance.deleteV3ProjectsIdSnippetsSnippetId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId', function() {
      it('should call deleteV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId
        //instance.deleteV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId', function() {
      it('should call deleteV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId
        //instance.deleteV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdStar', function() {
      it('should call deleteV3ProjectsIdStar successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdStar
        //instance.deleteV3ProjectsIdStar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdTriggersToken', function() {
      it('should call deleteV3ProjectsIdTriggersToken successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdTriggersToken
        //instance.deleteV3ProjectsIdTriggersToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3ProjectsIdVariablesKey', function() {
      it('should call deleteV3ProjectsIdVariablesKey successfully', function(done) {
        //uncomment below and update the code to test deleteV3ProjectsIdVariablesKey
        //instance.deleteV3ProjectsIdVariablesKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3Projects', function() {
      it('should call getV3Projects successfully', function(done) {
        //uncomment below and update the code to test getV3Projects
        //instance.getV3Projects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsAll', function() {
      it('should call getV3ProjectsAll successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsAll
        //instance.getV3ProjectsAll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsId', function() {
      it('should call getV3ProjectsId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsId
        //instance.getV3ProjectsId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdAccessRequests', function() {
      it('should call getV3ProjectsIdAccessRequests successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdAccessRequests
        //instance.getV3ProjectsIdAccessRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdBoards', function() {
      it('should call getV3ProjectsIdBoards successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdBoards
        //instance.getV3ProjectsIdBoards(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdBoardsBoardIdLists', function() {
      it('should call getV3ProjectsIdBoardsBoardIdLists successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdBoardsBoardIdLists
        //instance.getV3ProjectsIdBoardsBoardIdLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdBoardsBoardIdListsListId', function() {
      it('should call getV3ProjectsIdBoardsBoardIdListsListId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdBoardsBoardIdListsListId
        //instance.getV3ProjectsIdBoardsBoardIdListsListId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdBuilds', function() {
      it('should call getV3ProjectsIdBuilds successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdBuilds
        //instance.getV3ProjectsIdBuilds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdBuildsArtifactsRefNameDownload', function() {
      it('should call getV3ProjectsIdBuildsArtifactsRefNameDownload successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdBuildsArtifactsRefNameDownload
        //instance.getV3ProjectsIdBuildsArtifactsRefNameDownload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdBuildsBuildId', function() {
      it('should call getV3ProjectsIdBuildsBuildId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdBuildsBuildId
        //instance.getV3ProjectsIdBuildsBuildId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdBuildsBuildIdArtifacts', function() {
      it('should call getV3ProjectsIdBuildsBuildIdArtifacts successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdBuildsBuildIdArtifacts
        //instance.getV3ProjectsIdBuildsBuildIdArtifacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdBuildsBuildIdTrace', function() {
      it('should call getV3ProjectsIdBuildsBuildIdTrace successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdBuildsBuildIdTrace
        //instance.getV3ProjectsIdBuildsBuildIdTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdDeployKeys', function() {
      it('should call getV3ProjectsIdDeployKeys successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdDeployKeys
        //instance.getV3ProjectsIdDeployKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdDeployKeysKeyId', function() {
      it('should call getV3ProjectsIdDeployKeysKeyId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdDeployKeysKeyId
        //instance.getV3ProjectsIdDeployKeysKeyId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdDeployments', function() {
      it('should call getV3ProjectsIdDeployments successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdDeployments
        //instance.getV3ProjectsIdDeployments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdDeploymentsDeploymentId', function() {
      it('should call getV3ProjectsIdDeploymentsDeploymentId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdDeploymentsDeploymentId
        //instance.getV3ProjectsIdDeploymentsDeploymentId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdEnvironments', function() {
      it('should call getV3ProjectsIdEnvironments successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdEnvironments
        //instance.getV3ProjectsIdEnvironments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdEvents', function() {
      it('should call getV3ProjectsIdEvents successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdEvents
        //instance.getV3ProjectsIdEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdHooks', function() {
      it('should call getV3ProjectsIdHooks successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdHooks
        //instance.getV3ProjectsIdHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdHooksHookId', function() {
      it('should call getV3ProjectsIdHooksHookId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdHooksHookId
        //instance.getV3ProjectsIdHooksHookId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdIssues', function() {
      it('should call getV3ProjectsIdIssues successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdIssues
        //instance.getV3ProjectsIdIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdIssuesIssueId', function() {
      it('should call getV3ProjectsIdIssuesIssueId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdIssuesIssueId
        //instance.getV3ProjectsIdIssuesIssueId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdIssuesIssueIdAwardEmoji', function() {
      it('should call getV3ProjectsIdIssuesIssueIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdIssuesIssueIdAwardEmoji
        //instance.getV3ProjectsIdIssuesIssueIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdIssuesIssueIdAwardEmojiAwardId', function() {
      it('should call getV3ProjectsIdIssuesIssueIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdIssuesIssueIdAwardEmojiAwardId
        //instance.getV3ProjectsIdIssuesIssueIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji', function() {
      it('should call getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji
        //instance.getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId', function() {
      it('should call getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId
        //instance.getV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdIssuesIssueIdTimeStats', function() {
      it('should call getV3ProjectsIdIssuesIssueIdTimeStats successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdIssuesIssueIdTimeStats
        //instance.getV3ProjectsIdIssuesIssueIdTimeStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdIssuesNoteableIdNotes', function() {
      it('should call getV3ProjectsIdIssuesNoteableIdNotes successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdIssuesNoteableIdNotes
        //instance.getV3ProjectsIdIssuesNoteableIdNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdIssuesNoteableIdNotesNoteId', function() {
      it('should call getV3ProjectsIdIssuesNoteableIdNotesNoteId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdIssuesNoteableIdNotesNoteId
        //instance.getV3ProjectsIdIssuesNoteableIdNotesNoteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdKeys', function() {
      it('should call getV3ProjectsIdKeys successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdKeys
        //instance.getV3ProjectsIdKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdKeysKeyId', function() {
      it('should call getV3ProjectsIdKeysKeyId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdKeysKeyId
        //instance.getV3ProjectsIdKeysKeyId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdLabels', function() {
      it('should call getV3ProjectsIdLabels successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdLabels
        //instance.getV3ProjectsIdLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMembers', function() {
      it('should call getV3ProjectsIdMembers successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMembers
        //instance.getV3ProjectsIdMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMembersUserId', function() {
      it('should call getV3ProjectsIdMembersUserId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMembersUserId
        //instance.getV3ProjectsIdMembersUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestMergeRequestId', function() {
      it('should call getV3ProjectsIdMergeRequestMergeRequestId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestMergeRequestId
        //instance.getV3ProjectsIdMergeRequestMergeRequestId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestMergeRequestIdChanges', function() {
      it('should call getV3ProjectsIdMergeRequestMergeRequestIdChanges successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestMergeRequestIdChanges
        //instance.getV3ProjectsIdMergeRequestMergeRequestIdChanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestMergeRequestIdClosesIssues', function() {
      it('should call getV3ProjectsIdMergeRequestMergeRequestIdClosesIssues successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestMergeRequestIdClosesIssues
        //instance.getV3ProjectsIdMergeRequestMergeRequestIdClosesIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestMergeRequestIdComments', function() {
      it('should call getV3ProjectsIdMergeRequestMergeRequestIdComments successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestMergeRequestIdComments
        //instance.getV3ProjectsIdMergeRequestMergeRequestIdComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestMergeRequestIdCommits', function() {
      it('should call getV3ProjectsIdMergeRequestMergeRequestIdCommits successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestMergeRequestIdCommits
        //instance.getV3ProjectsIdMergeRequestMergeRequestIdCommits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequests', function() {
      it('should call getV3ProjectsIdMergeRequests successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequests
        //instance.getV3ProjectsIdMergeRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestId', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestId
        //instance.getV3ProjectsIdMergeRequestsMergeRequestId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdChanges', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdChanges successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdChanges
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdChanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdClosesIssues', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdClosesIssues successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdClosesIssues
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdClosesIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdComments', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdComments successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdComments
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdCommits', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdCommits successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdCommits
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdCommits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdTimeStats', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdTimeStats successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdTimeStats
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdTimeStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdVersions', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdVersions successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdVersions
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsMergeRequestIdVersionsVersionId', function() {
      it('should call getV3ProjectsIdMergeRequestsMergeRequestIdVersionsVersionId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsMergeRequestIdVersionsVersionId
        //instance.getV3ProjectsIdMergeRequestsMergeRequestIdVersionsVersionId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsNoteableIdNotes', function() {
      it('should call getV3ProjectsIdMergeRequestsNoteableIdNotes successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsNoteableIdNotes
        //instance.getV3ProjectsIdMergeRequestsNoteableIdNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMergeRequestsNoteableIdNotesNoteId', function() {
      it('should call getV3ProjectsIdMergeRequestsNoteableIdNotesNoteId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMergeRequestsNoteableIdNotesNoteId
        //instance.getV3ProjectsIdMergeRequestsNoteableIdNotesNoteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMilestones', function() {
      it('should call getV3ProjectsIdMilestones successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMilestones
        //instance.getV3ProjectsIdMilestones(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMilestonesMilestoneId', function() {
      it('should call getV3ProjectsIdMilestonesMilestoneId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMilestonesMilestoneId
        //instance.getV3ProjectsIdMilestonesMilestoneId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdMilestonesMilestoneIdIssues', function() {
      it('should call getV3ProjectsIdMilestonesMilestoneIdIssues successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdMilestonesMilestoneIdIssues
        //instance.getV3ProjectsIdMilestonesMilestoneIdIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdNotificationSettings', function() {
      it('should call getV3ProjectsIdNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdNotificationSettings
        //instance.getV3ProjectsIdNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdPipelines', function() {
      it('should call getV3ProjectsIdPipelines successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdPipelines
        //instance.getV3ProjectsIdPipelines(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdPipelinesPipelineId', function() {
      it('should call getV3ProjectsIdPipelinesPipelineId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdPipelinesPipelineId
        //instance.getV3ProjectsIdPipelinesPipelineId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryArchive', function() {
      it('should call getV3ProjectsIdRepositoryArchive successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryArchive
        //instance.getV3ProjectsIdRepositoryArchive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryBlobsSha', function() {
      it('should call getV3ProjectsIdRepositoryBlobsSha successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryBlobsSha
        //instance.getV3ProjectsIdRepositoryBlobsSha(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryBranches', function() {
      it('should call getV3ProjectsIdRepositoryBranches successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryBranches
        //instance.getV3ProjectsIdRepositoryBranches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryBranchesBranch', function() {
      it('should call getV3ProjectsIdRepositoryBranchesBranch successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryBranchesBranch
        //instance.getV3ProjectsIdRepositoryBranchesBranch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryCommits', function() {
      it('should call getV3ProjectsIdRepositoryCommits successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryCommits
        //instance.getV3ProjectsIdRepositoryCommits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryCommitsSha', function() {
      it('should call getV3ProjectsIdRepositoryCommitsSha successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryCommitsSha
        //instance.getV3ProjectsIdRepositoryCommitsSha(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryCommitsShaBlob', function() {
      it('should call getV3ProjectsIdRepositoryCommitsShaBlob successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryCommitsShaBlob
        //instance.getV3ProjectsIdRepositoryCommitsShaBlob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryCommitsShaBuilds', function() {
      it('should call getV3ProjectsIdRepositoryCommitsShaBuilds successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryCommitsShaBuilds
        //instance.getV3ProjectsIdRepositoryCommitsShaBuilds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryCommitsShaComments', function() {
      it('should call getV3ProjectsIdRepositoryCommitsShaComments successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryCommitsShaComments
        //instance.getV3ProjectsIdRepositoryCommitsShaComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryCommitsShaDiff', function() {
      it('should call getV3ProjectsIdRepositoryCommitsShaDiff successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryCommitsShaDiff
        //instance.getV3ProjectsIdRepositoryCommitsShaDiff(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryCommitsShaStatuses', function() {
      it('should call getV3ProjectsIdRepositoryCommitsShaStatuses successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryCommitsShaStatuses
        //instance.getV3ProjectsIdRepositoryCommitsShaStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryCompare', function() {
      it('should call getV3ProjectsIdRepositoryCompare successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryCompare
        //instance.getV3ProjectsIdRepositoryCompare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryContributors', function() {
      it('should call getV3ProjectsIdRepositoryContributors successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryContributors
        //instance.getV3ProjectsIdRepositoryContributors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryFiles', function() {
      it('should call getV3ProjectsIdRepositoryFiles successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryFiles
        //instance.getV3ProjectsIdRepositoryFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryRawBlobsSha', function() {
      it('should call getV3ProjectsIdRepositoryRawBlobsSha successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryRawBlobsSha
        //instance.getV3ProjectsIdRepositoryRawBlobsSha(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryTags', function() {
      it('should call getV3ProjectsIdRepositoryTags successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryTags
        //instance.getV3ProjectsIdRepositoryTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryTagsTagName', function() {
      it('should call getV3ProjectsIdRepositoryTagsTagName successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryTagsTagName
        //instance.getV3ProjectsIdRepositoryTagsTagName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRepositoryTree', function() {
      it('should call getV3ProjectsIdRepositoryTree successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRepositoryTree
        //instance.getV3ProjectsIdRepositoryTree(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdRunners', function() {
      it('should call getV3ProjectsIdRunners successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdRunners
        //instance.getV3ProjectsIdRunners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdServicesServiceSlug', function() {
      it('should call getV3ProjectsIdServicesServiceSlug successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdServicesServiceSlug
        //instance.getV3ProjectsIdServicesServiceSlug(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdSnippets', function() {
      it('should call getV3ProjectsIdSnippets successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdSnippets
        //instance.getV3ProjectsIdSnippets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdSnippetsNoteableIdNotes', function() {
      it('should call getV3ProjectsIdSnippetsNoteableIdNotes successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdSnippetsNoteableIdNotes
        //instance.getV3ProjectsIdSnippetsNoteableIdNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdSnippetsNoteableIdNotesNoteId', function() {
      it('should call getV3ProjectsIdSnippetsNoteableIdNotesNoteId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdSnippetsNoteableIdNotesNoteId
        //instance.getV3ProjectsIdSnippetsNoteableIdNotesNoteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdSnippetsSnippetId', function() {
      it('should call getV3ProjectsIdSnippetsSnippetId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdSnippetsSnippetId
        //instance.getV3ProjectsIdSnippetsSnippetId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdSnippetsSnippetIdAwardEmoji', function() {
      it('should call getV3ProjectsIdSnippetsSnippetIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdSnippetsSnippetIdAwardEmoji
        //instance.getV3ProjectsIdSnippetsSnippetIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId', function() {
      it('should call getV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId
        //instance.getV3ProjectsIdSnippetsSnippetIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji', function() {
      it('should call getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji
        //instance.getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId', function() {
      it('should call getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId
        //instance.getV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmojiAwardId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdSnippetsSnippetIdRaw', function() {
      it('should call getV3ProjectsIdSnippetsSnippetIdRaw successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdSnippetsSnippetIdRaw
        //instance.getV3ProjectsIdSnippetsSnippetIdRaw(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdTriggers', function() {
      it('should call getV3ProjectsIdTriggers successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdTriggers
        //instance.getV3ProjectsIdTriggers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdTriggersToken', function() {
      it('should call getV3ProjectsIdTriggersToken successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdTriggersToken
        //instance.getV3ProjectsIdTriggersToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdUsers', function() {
      it('should call getV3ProjectsIdUsers successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdUsers
        //instance.getV3ProjectsIdUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdVariables', function() {
      it('should call getV3ProjectsIdVariables successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdVariables
        //instance.getV3ProjectsIdVariables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsIdVariablesKey', function() {
      it('should call getV3ProjectsIdVariablesKey successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsIdVariablesKey
        //instance.getV3ProjectsIdVariablesKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsOwned', function() {
      it('should call getV3ProjectsOwned successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsOwned
        //instance.getV3ProjectsOwned(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsSearchQuery', function() {
      it('should call getV3ProjectsSearchQuery successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsSearchQuery
        //instance.getV3ProjectsSearchQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsStarred', function() {
      it('should call getV3ProjectsStarred successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsStarred
        //instance.getV3ProjectsStarred(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3ProjectsVisible', function() {
      it('should call getV3ProjectsVisible successfully', function(done) {
        //uncomment below and update the code to test getV3ProjectsVisible
        //instance.getV3ProjectsVisible(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3Projects', function() {
      it('should call postV3Projects successfully', function(done) {
        //uncomment below and update the code to test postV3Projects
        //instance.postV3Projects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsForkId', function() {
      it('should call postV3ProjectsForkId successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsForkId
        //instance.postV3ProjectsForkId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdAccessRequests', function() {
      it('should call postV3ProjectsIdAccessRequests successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdAccessRequests
        //instance.postV3ProjectsIdAccessRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdArchive', function() {
      it('should call postV3ProjectsIdArchive successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdArchive
        //instance.postV3ProjectsIdArchive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdBoardsBoardIdLists', function() {
      it('should call postV3ProjectsIdBoardsBoardIdLists successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdBoardsBoardIdLists
        //instance.postV3ProjectsIdBoardsBoardIdLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdBuildsBuildIdArtifactsKeep', function() {
      it('should call postV3ProjectsIdBuildsBuildIdArtifactsKeep successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdBuildsBuildIdArtifactsKeep
        //instance.postV3ProjectsIdBuildsBuildIdArtifactsKeep(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdBuildsBuildIdCancel', function() {
      it('should call postV3ProjectsIdBuildsBuildIdCancel successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdBuildsBuildIdCancel
        //instance.postV3ProjectsIdBuildsBuildIdCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdBuildsBuildIdErase', function() {
      it('should call postV3ProjectsIdBuildsBuildIdErase successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdBuildsBuildIdErase
        //instance.postV3ProjectsIdBuildsBuildIdErase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdBuildsBuildIdPlay', function() {
      it('should call postV3ProjectsIdBuildsBuildIdPlay successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdBuildsBuildIdPlay
        //instance.postV3ProjectsIdBuildsBuildIdPlay(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdBuildsBuildIdRetry', function() {
      it('should call postV3ProjectsIdBuildsBuildIdRetry successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdBuildsBuildIdRetry
        //instance.postV3ProjectsIdBuildsBuildIdRetry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdDeployKeys', function() {
      it('should call postV3ProjectsIdDeployKeys successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdDeployKeys
        //instance.postV3ProjectsIdDeployKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdDeployKeysKeyIdEnable', function() {
      it('should call postV3ProjectsIdDeployKeysKeyIdEnable successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdDeployKeysKeyIdEnable
        //instance.postV3ProjectsIdDeployKeysKeyIdEnable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdEnvironments', function() {
      it('should call postV3ProjectsIdEnvironments successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdEnvironments
        //instance.postV3ProjectsIdEnvironments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdForkForkedFromId', function() {
      it('should call postV3ProjectsIdForkForkedFromId successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdForkForkedFromId
        //instance.postV3ProjectsIdForkForkedFromId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdHooks', function() {
      it('should call postV3ProjectsIdHooks successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdHooks
        //instance.postV3ProjectsIdHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssues', function() {
      it('should call postV3ProjectsIdIssues successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssues
        //instance.postV3ProjectsIdIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesIssueIdAddSpentTime', function() {
      it('should call postV3ProjectsIdIssuesIssueIdAddSpentTime successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesIssueIdAddSpentTime
        //instance.postV3ProjectsIdIssuesIssueIdAddSpentTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesIssueIdAwardEmoji', function() {
      it('should call postV3ProjectsIdIssuesIssueIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesIssueIdAwardEmoji
        //instance.postV3ProjectsIdIssuesIssueIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesIssueIdMove', function() {
      it('should call postV3ProjectsIdIssuesIssueIdMove successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesIssueIdMove
        //instance.postV3ProjectsIdIssuesIssueIdMove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji', function() {
      it('should call postV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji
        //instance.postV3ProjectsIdIssuesIssueIdNotesNoteIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesIssueIdResetSpentTime', function() {
      it('should call postV3ProjectsIdIssuesIssueIdResetSpentTime successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesIssueIdResetSpentTime
        //instance.postV3ProjectsIdIssuesIssueIdResetSpentTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesIssueIdResetTimeEstimate', function() {
      it('should call postV3ProjectsIdIssuesIssueIdResetTimeEstimate successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesIssueIdResetTimeEstimate
        //instance.postV3ProjectsIdIssuesIssueIdResetTimeEstimate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesIssueIdTimeEstimate', function() {
      it('should call postV3ProjectsIdIssuesIssueIdTimeEstimate successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesIssueIdTimeEstimate
        //instance.postV3ProjectsIdIssuesIssueIdTimeEstimate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesIssueIdTodo', function() {
      it('should call postV3ProjectsIdIssuesIssueIdTodo successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesIssueIdTodo
        //instance.postV3ProjectsIdIssuesIssueIdTodo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesNoteableIdNotes', function() {
      it('should call postV3ProjectsIdIssuesNoteableIdNotes successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesNoteableIdNotes
        //instance.postV3ProjectsIdIssuesNoteableIdNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdIssuesSubscribableIdSubscription', function() {
      it('should call postV3ProjectsIdIssuesSubscribableIdSubscription successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdIssuesSubscribableIdSubscription
        //instance.postV3ProjectsIdIssuesSubscribableIdSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdKeys', function() {
      it('should call postV3ProjectsIdKeys successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdKeys
        //instance.postV3ProjectsIdKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdKeysKeyIdEnable', function() {
      it('should call postV3ProjectsIdKeysKeyIdEnable successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdKeysKeyIdEnable
        //instance.postV3ProjectsIdKeysKeyIdEnable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdLabels', function() {
      it('should call postV3ProjectsIdLabels successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdLabels
        //instance.postV3ProjectsIdLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdLabelsSubscribableIdSubscription', function() {
      it('should call postV3ProjectsIdLabelsSubscribableIdSubscription successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdLabelsSubscribableIdSubscription
        //instance.postV3ProjectsIdLabelsSubscribableIdSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMembers', function() {
      it('should call postV3ProjectsIdMembers successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMembers
        //instance.postV3ProjectsIdMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestMergeRequestIdCancelMergeWhenBuildSucceeds', function() {
      it('should call postV3ProjectsIdMergeRequestMergeRequestIdCancelMergeWhenBuildSucceeds successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestMergeRequestIdCancelMergeWhenBuildSucceeds
        //instance.postV3ProjectsIdMergeRequestMergeRequestIdCancelMergeWhenBuildSucceeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestMergeRequestIdComments', function() {
      it('should call postV3ProjectsIdMergeRequestMergeRequestIdComments successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestMergeRequestIdComments
        //instance.postV3ProjectsIdMergeRequestMergeRequestIdComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestSubscribableIdSubscription', function() {
      it('should call postV3ProjectsIdMergeRequestSubscribableIdSubscription successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestSubscribableIdSubscription
        //instance.postV3ProjectsIdMergeRequestSubscribableIdSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequests', function() {
      it('should call postV3ProjectsIdMergeRequests successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequests
        //instance.postV3ProjectsIdMergeRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsMergeRequestIdAddSpentTime', function() {
      it('should call postV3ProjectsIdMergeRequestsMergeRequestIdAddSpentTime successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsMergeRequestIdAddSpentTime
        //instance.postV3ProjectsIdMergeRequestsMergeRequestIdAddSpentTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji', function() {
      it('should call postV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji
        //instance.postV3ProjectsIdMergeRequestsMergeRequestIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsMergeRequestIdCancelMergeWhenBuildSucceeds', function() {
      it('should call postV3ProjectsIdMergeRequestsMergeRequestIdCancelMergeWhenBuildSucceeds successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsMergeRequestIdCancelMergeWhenBuildSucceeds
        //instance.postV3ProjectsIdMergeRequestsMergeRequestIdCancelMergeWhenBuildSucceeds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsMergeRequestIdComments', function() {
      it('should call postV3ProjectsIdMergeRequestsMergeRequestIdComments successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsMergeRequestIdComments
        //instance.postV3ProjectsIdMergeRequestsMergeRequestIdComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji', function() {
      it('should call postV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji
        //instance.postV3ProjectsIdMergeRequestsMergeRequestIdNotesNoteIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsMergeRequestIdResetSpentTime', function() {
      it('should call postV3ProjectsIdMergeRequestsMergeRequestIdResetSpentTime successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsMergeRequestIdResetSpentTime
        //instance.postV3ProjectsIdMergeRequestsMergeRequestIdResetSpentTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsMergeRequestIdResetTimeEstimate', function() {
      it('should call postV3ProjectsIdMergeRequestsMergeRequestIdResetTimeEstimate successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsMergeRequestIdResetTimeEstimate
        //instance.postV3ProjectsIdMergeRequestsMergeRequestIdResetTimeEstimate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsMergeRequestIdTimeEstimate', function() {
      it('should call postV3ProjectsIdMergeRequestsMergeRequestIdTimeEstimate successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsMergeRequestIdTimeEstimate
        //instance.postV3ProjectsIdMergeRequestsMergeRequestIdTimeEstimate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsMergeRequestIdTodo', function() {
      it('should call postV3ProjectsIdMergeRequestsMergeRequestIdTodo successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsMergeRequestIdTodo
        //instance.postV3ProjectsIdMergeRequestsMergeRequestIdTodo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsNoteableIdNotes', function() {
      it('should call postV3ProjectsIdMergeRequestsNoteableIdNotes successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsNoteableIdNotes
        //instance.postV3ProjectsIdMergeRequestsNoteableIdNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMergeRequestsSubscribableIdSubscription', function() {
      it('should call postV3ProjectsIdMergeRequestsSubscribableIdSubscription successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMergeRequestsSubscribableIdSubscription
        //instance.postV3ProjectsIdMergeRequestsSubscribableIdSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdMilestones', function() {
      it('should call postV3ProjectsIdMilestones successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdMilestones
        //instance.postV3ProjectsIdMilestones(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdPipeline', function() {
      it('should call postV3ProjectsIdPipeline successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdPipeline
        //instance.postV3ProjectsIdPipeline(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdPipelinesPipelineIdCancel', function() {
      it('should call postV3ProjectsIdPipelinesPipelineIdCancel successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdPipelinesPipelineIdCancel
        //instance.postV3ProjectsIdPipelinesPipelineIdCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdPipelinesPipelineIdRetry', function() {
      it('should call postV3ProjectsIdPipelinesPipelineIdRetry successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdPipelinesPipelineIdRetry
        //instance.postV3ProjectsIdPipelinesPipelineIdRetry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdRefReftriggerBuilds', function() {
      it('should call postV3ProjectsIdRefReftriggerBuilds successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdRefReftriggerBuilds
        //instance.postV3ProjectsIdRefReftriggerBuilds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdRepositoryBranches', function() {
      it('should call postV3ProjectsIdRepositoryBranches successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdRepositoryBranches
        //instance.postV3ProjectsIdRepositoryBranches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdRepositoryCommits', function() {
      it('should call postV3ProjectsIdRepositoryCommits successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdRepositoryCommits
        //instance.postV3ProjectsIdRepositoryCommits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdRepositoryCommitsShaCherryPick', function() {
      it('should call postV3ProjectsIdRepositoryCommitsShaCherryPick successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdRepositoryCommitsShaCherryPick
        //instance.postV3ProjectsIdRepositoryCommitsShaCherryPick(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdRepositoryCommitsShaComments', function() {
      it('should call postV3ProjectsIdRepositoryCommitsShaComments successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdRepositoryCommitsShaComments
        //instance.postV3ProjectsIdRepositoryCommitsShaComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdRepositoryFiles', function() {
      it('should call postV3ProjectsIdRepositoryFiles successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdRepositoryFiles
        //instance.postV3ProjectsIdRepositoryFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdRepositoryTags', function() {
      it('should call postV3ProjectsIdRepositoryTags successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdRepositoryTags
        //instance.postV3ProjectsIdRepositoryTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdRepositoryTagsTagNameRelease', function() {
      it('should call postV3ProjectsIdRepositoryTagsTagNameRelease successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdRepositoryTagsTagNameRelease
        //instance.postV3ProjectsIdRepositoryTagsTagNameRelease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdRunners', function() {
      it('should call postV3ProjectsIdRunners successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdRunners
        //instance.postV3ProjectsIdRunners(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdServicesMattermostSlashCommandsTrigger', function() {
      it('should call postV3ProjectsIdServicesMattermostSlashCommandsTrigger successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdServicesMattermostSlashCommandsTrigger
        //instance.postV3ProjectsIdServicesMattermostSlashCommandsTrigger(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdServicesSlackSlashCommandsTrigger', function() {
      it('should call postV3ProjectsIdServicesSlackSlashCommandsTrigger successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdServicesSlackSlashCommandsTrigger
        //instance.postV3ProjectsIdServicesSlackSlashCommandsTrigger(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdShare', function() {
      it('should call postV3ProjectsIdShare successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdShare
        //instance.postV3ProjectsIdShare(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdSnippets', function() {
      it('should call postV3ProjectsIdSnippets successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdSnippets
        //instance.postV3ProjectsIdSnippets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdSnippetsNoteableIdNotes', function() {
      it('should call postV3ProjectsIdSnippetsNoteableIdNotes successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdSnippetsNoteableIdNotes
        //instance.postV3ProjectsIdSnippetsNoteableIdNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdSnippetsSnippetIdAwardEmoji', function() {
      it('should call postV3ProjectsIdSnippetsSnippetIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdSnippetsSnippetIdAwardEmoji
        //instance.postV3ProjectsIdSnippetsSnippetIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji', function() {
      it('should call postV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji
        //instance.postV3ProjectsIdSnippetsSnippetIdNotesNoteIdAwardEmoji(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdStar', function() {
      it('should call postV3ProjectsIdStar successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdStar
        //instance.postV3ProjectsIdStar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdStatusesSha', function() {
      it('should call postV3ProjectsIdStatusesSha successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdStatusesSha
        //instance.postV3ProjectsIdStatusesSha(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdTriggers', function() {
      it('should call postV3ProjectsIdTriggers successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdTriggers
        //instance.postV3ProjectsIdTriggers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdUnarchive', function() {
      it('should call postV3ProjectsIdUnarchive successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdUnarchive
        //instance.postV3ProjectsIdUnarchive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdUploads', function() {
      it('should call postV3ProjectsIdUploads successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdUploads
        //instance.postV3ProjectsIdUploads(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsIdVariables', function() {
      it('should call postV3ProjectsIdVariables successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsIdVariables
        //instance.postV3ProjectsIdVariables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3ProjectsUserUserId', function() {
      it('should call postV3ProjectsUserUserId successfully', function(done) {
        //uncomment below and update the code to test postV3ProjectsUserUserId
        //instance.postV3ProjectsUserUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsId', function() {
      it('should call putV3ProjectsId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsId
        //instance.putV3ProjectsId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdAccessRequestsUserIdApprove', function() {
      it('should call putV3ProjectsIdAccessRequestsUserIdApprove successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdAccessRequestsUserIdApprove
        //instance.putV3ProjectsIdAccessRequestsUserIdApprove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdBoardsBoardIdListsListId', function() {
      it('should call putV3ProjectsIdBoardsBoardIdListsListId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdBoardsBoardIdListsListId
        //instance.putV3ProjectsIdBoardsBoardIdListsListId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdEnvironmentsEnvironmentId', function() {
      it('should call putV3ProjectsIdEnvironmentsEnvironmentId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdEnvironmentsEnvironmentId
        //instance.putV3ProjectsIdEnvironmentsEnvironmentId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdHooksHookId', function() {
      it('should call putV3ProjectsIdHooksHookId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdHooksHookId
        //instance.putV3ProjectsIdHooksHookId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdIssuesIssueId', function() {
      it('should call putV3ProjectsIdIssuesIssueId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdIssuesIssueId
        //instance.putV3ProjectsIdIssuesIssueId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdIssuesNoteableIdNotesNoteId', function() {
      it('should call putV3ProjectsIdIssuesNoteableIdNotesNoteId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdIssuesNoteableIdNotesNoteId
        //instance.putV3ProjectsIdIssuesNoteableIdNotesNoteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdLabels', function() {
      it('should call putV3ProjectsIdLabels successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdLabels
        //instance.putV3ProjectsIdLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdMembersUserId', function() {
      it('should call putV3ProjectsIdMembersUserId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdMembersUserId
        //instance.putV3ProjectsIdMembersUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdMergeRequestMergeRequestId', function() {
      it('should call putV3ProjectsIdMergeRequestMergeRequestId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdMergeRequestMergeRequestId
        //instance.putV3ProjectsIdMergeRequestMergeRequestId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdMergeRequestMergeRequestIdMerge', function() {
      it('should call putV3ProjectsIdMergeRequestMergeRequestIdMerge successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdMergeRequestMergeRequestIdMerge
        //instance.putV3ProjectsIdMergeRequestMergeRequestIdMerge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdMergeRequestsMergeRequestId', function() {
      it('should call putV3ProjectsIdMergeRequestsMergeRequestId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdMergeRequestsMergeRequestId
        //instance.putV3ProjectsIdMergeRequestsMergeRequestId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdMergeRequestsMergeRequestIdMerge', function() {
      it('should call putV3ProjectsIdMergeRequestsMergeRequestIdMerge successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdMergeRequestsMergeRequestIdMerge
        //instance.putV3ProjectsIdMergeRequestsMergeRequestIdMerge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdMergeRequestsNoteableIdNotesNoteId', function() {
      it('should call putV3ProjectsIdMergeRequestsNoteableIdNotesNoteId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdMergeRequestsNoteableIdNotesNoteId
        //instance.putV3ProjectsIdMergeRequestsNoteableIdNotesNoteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdMilestonesMilestoneId', function() {
      it('should call putV3ProjectsIdMilestonesMilestoneId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdMilestonesMilestoneId
        //instance.putV3ProjectsIdMilestonesMilestoneId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdNotificationSettings', function() {
      it('should call putV3ProjectsIdNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdNotificationSettings
        //instance.putV3ProjectsIdNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdRepositoryBranchesBranchProtect', function() {
      it('should call putV3ProjectsIdRepositoryBranchesBranchProtect successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdRepositoryBranchesBranchProtect
        //instance.putV3ProjectsIdRepositoryBranchesBranchProtect(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdRepositoryBranchesBranchUnprotect', function() {
      it('should call putV3ProjectsIdRepositoryBranchesBranchUnprotect successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdRepositoryBranchesBranchUnprotect
        //instance.putV3ProjectsIdRepositoryBranchesBranchUnprotect(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdRepositoryFiles', function() {
      it('should call putV3ProjectsIdRepositoryFiles successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdRepositoryFiles
        //instance.putV3ProjectsIdRepositoryFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdRepositoryTagsTagNameRelease', function() {
      it('should call putV3ProjectsIdRepositoryTagsTagNameRelease successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdRepositoryTagsTagNameRelease
        //instance.putV3ProjectsIdRepositoryTagsTagNameRelease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesAsana', function() {
      it('should call putV3ProjectsIdServicesAsana successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesAsana
        //instance.putV3ProjectsIdServicesAsana(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesAssembla', function() {
      it('should call putV3ProjectsIdServicesAssembla successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesAssembla
        //instance.putV3ProjectsIdServicesAssembla(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesBamboo', function() {
      it('should call putV3ProjectsIdServicesBamboo successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesBamboo
        //instance.putV3ProjectsIdServicesBamboo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesBugzilla', function() {
      it('should call putV3ProjectsIdServicesBugzilla successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesBugzilla
        //instance.putV3ProjectsIdServicesBugzilla(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesBuildkite', function() {
      it('should call putV3ProjectsIdServicesBuildkite successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesBuildkite
        //instance.putV3ProjectsIdServicesBuildkite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesBuildsEmail', function() {
      it('should call putV3ProjectsIdServicesBuildsEmail successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesBuildsEmail
        //instance.putV3ProjectsIdServicesBuildsEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesCampfire', function() {
      it('should call putV3ProjectsIdServicesCampfire successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesCampfire
        //instance.putV3ProjectsIdServicesCampfire(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesCustomIssueTracker', function() {
      it('should call putV3ProjectsIdServicesCustomIssueTracker successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesCustomIssueTracker
        //instance.putV3ProjectsIdServicesCustomIssueTracker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesDroneCi', function() {
      it('should call putV3ProjectsIdServicesDroneCi successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesDroneCi
        //instance.putV3ProjectsIdServicesDroneCi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesEmailsOnPush', function() {
      it('should call putV3ProjectsIdServicesEmailsOnPush successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesEmailsOnPush
        //instance.putV3ProjectsIdServicesEmailsOnPush(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesExternalWiki', function() {
      it('should call putV3ProjectsIdServicesExternalWiki successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesExternalWiki
        //instance.putV3ProjectsIdServicesExternalWiki(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesFlowdock', function() {
      it('should call putV3ProjectsIdServicesFlowdock successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesFlowdock
        //instance.putV3ProjectsIdServicesFlowdock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesGemnasium', function() {
      it('should call putV3ProjectsIdServicesGemnasium successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesGemnasium
        //instance.putV3ProjectsIdServicesGemnasium(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesHipchat', function() {
      it('should call putV3ProjectsIdServicesHipchat successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesHipchat
        //instance.putV3ProjectsIdServicesHipchat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesIrker', function() {
      it('should call putV3ProjectsIdServicesIrker successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesIrker
        //instance.putV3ProjectsIdServicesIrker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesJira', function() {
      it('should call putV3ProjectsIdServicesJira successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesJira
        //instance.putV3ProjectsIdServicesJira(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesKubernetes', function() {
      it('should call putV3ProjectsIdServicesKubernetes successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesKubernetes
        //instance.putV3ProjectsIdServicesKubernetes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesMattermost', function() {
      it('should call putV3ProjectsIdServicesMattermost successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesMattermost
        //instance.putV3ProjectsIdServicesMattermost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesMattermostSlashCommands', function() {
      it('should call putV3ProjectsIdServicesMattermostSlashCommands successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesMattermostSlashCommands
        //instance.putV3ProjectsIdServicesMattermostSlashCommands(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesPipelinesEmail', function() {
      it('should call putV3ProjectsIdServicesPipelinesEmail successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesPipelinesEmail
        //instance.putV3ProjectsIdServicesPipelinesEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesPivotaltracker', function() {
      it('should call putV3ProjectsIdServicesPivotaltracker successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesPivotaltracker
        //instance.putV3ProjectsIdServicesPivotaltracker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesPushover', function() {
      it('should call putV3ProjectsIdServicesPushover successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesPushover
        //instance.putV3ProjectsIdServicesPushover(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesRedmine', function() {
      it('should call putV3ProjectsIdServicesRedmine successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesRedmine
        //instance.putV3ProjectsIdServicesRedmine(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesSlack', function() {
      it('should call putV3ProjectsIdServicesSlack successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesSlack
        //instance.putV3ProjectsIdServicesSlack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesSlackSlashCommands', function() {
      it('should call putV3ProjectsIdServicesSlackSlashCommands successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesSlackSlashCommands
        //instance.putV3ProjectsIdServicesSlackSlashCommands(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdServicesTeamcity', function() {
      it('should call putV3ProjectsIdServicesTeamcity successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdServicesTeamcity
        //instance.putV3ProjectsIdServicesTeamcity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdSnippetsNoteableIdNotesNoteId', function() {
      it('should call putV3ProjectsIdSnippetsNoteableIdNotesNoteId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdSnippetsNoteableIdNotesNoteId
        //instance.putV3ProjectsIdSnippetsNoteableIdNotesNoteId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdSnippetsSnippetId', function() {
      it('should call putV3ProjectsIdSnippetsSnippetId successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdSnippetsSnippetId
        //instance.putV3ProjectsIdSnippetsSnippetId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3ProjectsIdVariablesKey', function() {
      it('should call putV3ProjectsIdVariablesKey successfully', function(done) {
        //uncomment below and update the code to test putV3ProjectsIdVariablesKey
        //instance.putV3ProjectsIdVariablesKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
