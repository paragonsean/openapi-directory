/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Gitlab);
  }
}(this, function(expect, Gitlab) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Gitlab.GroupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GroupsApi', function() {
    describe('deleteV3GroupsId', function() {
      it('should call deleteV3GroupsId successfully', function(done) {
        //uncomment below and update the code to test deleteV3GroupsId
        //instance.deleteV3GroupsId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3GroupsIdAccessRequestsUserId', function() {
      it('should call deleteV3GroupsIdAccessRequestsUserId successfully', function(done) {
        //uncomment below and update the code to test deleteV3GroupsIdAccessRequestsUserId
        //instance.deleteV3GroupsIdAccessRequestsUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteV3GroupsIdMembersUserId', function() {
      it('should call deleteV3GroupsIdMembersUserId successfully', function(done) {
        //uncomment below and update the code to test deleteV3GroupsIdMembersUserId
        //instance.deleteV3GroupsIdMembersUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3Groups', function() {
      it('should call getV3Groups successfully', function(done) {
        //uncomment below and update the code to test getV3Groups
        //instance.getV3Groups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3GroupsId', function() {
      it('should call getV3GroupsId successfully', function(done) {
        //uncomment below and update the code to test getV3GroupsId
        //instance.getV3GroupsId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3GroupsIdAccessRequests', function() {
      it('should call getV3GroupsIdAccessRequests successfully', function(done) {
        //uncomment below and update the code to test getV3GroupsIdAccessRequests
        //instance.getV3GroupsIdAccessRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3GroupsIdIssues', function() {
      it('should call getV3GroupsIdIssues successfully', function(done) {
        //uncomment below and update the code to test getV3GroupsIdIssues
        //instance.getV3GroupsIdIssues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3GroupsIdMembers', function() {
      it('should call getV3GroupsIdMembers successfully', function(done) {
        //uncomment below and update the code to test getV3GroupsIdMembers
        //instance.getV3GroupsIdMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3GroupsIdMembersUserId', function() {
      it('should call getV3GroupsIdMembersUserId successfully', function(done) {
        //uncomment below and update the code to test getV3GroupsIdMembersUserId
        //instance.getV3GroupsIdMembersUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3GroupsIdNotificationSettings', function() {
      it('should call getV3GroupsIdNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test getV3GroupsIdNotificationSettings
        //instance.getV3GroupsIdNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3GroupsIdProjects', function() {
      it('should call getV3GroupsIdProjects successfully', function(done) {
        //uncomment below and update the code to test getV3GroupsIdProjects
        //instance.getV3GroupsIdProjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getV3GroupsOwned', function() {
      it('should call getV3GroupsOwned successfully', function(done) {
        //uncomment below and update the code to test getV3GroupsOwned
        //instance.getV3GroupsOwned(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3Groups', function() {
      it('should call postV3Groups successfully', function(done) {
        //uncomment below and update the code to test postV3Groups
        //instance.postV3Groups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3GroupsIdAccessRequests', function() {
      it('should call postV3GroupsIdAccessRequests successfully', function(done) {
        //uncomment below and update the code to test postV3GroupsIdAccessRequests
        //instance.postV3GroupsIdAccessRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3GroupsIdMembers', function() {
      it('should call postV3GroupsIdMembers successfully', function(done) {
        //uncomment below and update the code to test postV3GroupsIdMembers
        //instance.postV3GroupsIdMembers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postV3GroupsIdProjectsProjectId', function() {
      it('should call postV3GroupsIdProjectsProjectId successfully', function(done) {
        //uncomment below and update the code to test postV3GroupsIdProjectsProjectId
        //instance.postV3GroupsIdProjectsProjectId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3GroupsId', function() {
      it('should call putV3GroupsId successfully', function(done) {
        //uncomment below and update the code to test putV3GroupsId
        //instance.putV3GroupsId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3GroupsIdAccessRequestsUserIdApprove', function() {
      it('should call putV3GroupsIdAccessRequestsUserIdApprove successfully', function(done) {
        //uncomment below and update the code to test putV3GroupsIdAccessRequestsUserIdApprove
        //instance.putV3GroupsIdAccessRequestsUserIdApprove(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3GroupsIdMembersUserId', function() {
      it('should call putV3GroupsIdMembersUserId successfully', function(done) {
        //uncomment below and update the code to test putV3GroupsIdMembersUserId
        //instance.putV3GroupsIdMembersUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putV3GroupsIdNotificationSettings', function() {
      it('should call putV3GroupsIdNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test putV3GroupsIdNotificationSettings
        //instance.putV3GroupsIdNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
