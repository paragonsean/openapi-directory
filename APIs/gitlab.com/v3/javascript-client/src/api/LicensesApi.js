/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RepoLicense from '../model/RepoLicense';

/**
* Licenses service.
* @module api/LicensesApi
* @version v3
*/
export default class LicensesApi {

    /**
    * Constructs a new LicensesApi. 
    * @alias module:api/LicensesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getV3Licenses operation.
     * @callback module:api/LicensesApi~getV3LicensesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RepoLicense} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of the available license template
     * This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [popular] If passed, returns only popular licenses
     * @param {module:api/LicensesApi~getV3LicensesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RepoLicense}
     */
    getV3Licenses(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'popular': opts['popular']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['private_token_query', 'private_token_header'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RepoLicense;
      return this.apiClient.callApi(
        '/v3/licenses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getV3LicensesName operation.
     * @callback module:api/LicensesApi~getV3LicensesNameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RepoLicense} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the text for a specific license
     * This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0.
     * @param {String} name The name of the template
     * @param {module:api/LicensesApi~getV3LicensesNameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RepoLicense}
     */
    getV3LicensesName(name, callback) {
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling getV3LicensesName");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['private_token_query', 'private_token_header'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RepoLicense;
      return this.apiClient.callApi(
        '/v3/licenses/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
