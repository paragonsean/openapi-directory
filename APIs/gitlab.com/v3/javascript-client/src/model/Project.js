/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BasicProjectDetails from './BasicProjectDetails';
import Namespace from './Namespace';
import ProjectStatistics from './ProjectStatistics';
import UserBasic from './UserBasic';

/**
 * The Project model module.
 * @module model/Project
 * @version v3
 */
class Project {
    /**
     * Constructs a new <code>Project</code>.
     * Unstar a project
     * @alias module:model/Project
     */
    constructor() { 
        
        Project.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Project</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Project} obj Optional instance to populate.
     * @return {module:model/Project} The populated <code>Project</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Project();

            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'String');
            }
            if (data.hasOwnProperty('avatar_url')) {
                obj['avatar_url'] = ApiClient.convertToType(data['avatar_url'], 'String');
            }
            if (data.hasOwnProperty('builds_enabled')) {
                obj['builds_enabled'] = ApiClient.convertToType(data['builds_enabled'], 'String');
            }
            if (data.hasOwnProperty('container_registry_enabled')) {
                obj['container_registry_enabled'] = ApiClient.convertToType(data['container_registry_enabled'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('creator_id')) {
                obj['creator_id'] = ApiClient.convertToType(data['creator_id'], 'String');
            }
            if (data.hasOwnProperty('default_branch')) {
                obj['default_branch'] = ApiClient.convertToType(data['default_branch'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('forked_from_project')) {
                obj['forked_from_project'] = BasicProjectDetails.constructFromObject(data['forked_from_project']);
            }
            if (data.hasOwnProperty('forks_count')) {
                obj['forks_count'] = ApiClient.convertToType(data['forks_count'], 'String');
            }
            if (data.hasOwnProperty('http_url_to_repo')) {
                obj['http_url_to_repo'] = ApiClient.convertToType(data['http_url_to_repo'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('issues_enabled')) {
                obj['issues_enabled'] = ApiClient.convertToType(data['issues_enabled'], 'String');
            }
            if (data.hasOwnProperty('last_activity_at')) {
                obj['last_activity_at'] = ApiClient.convertToType(data['last_activity_at'], 'String');
            }
            if (data.hasOwnProperty('lfs_enabled')) {
                obj['lfs_enabled'] = ApiClient.convertToType(data['lfs_enabled'], 'String');
            }
            if (data.hasOwnProperty('merge_requests_enabled')) {
                obj['merge_requests_enabled'] = ApiClient.convertToType(data['merge_requests_enabled'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('name_with_namespace')) {
                obj['name_with_namespace'] = ApiClient.convertToType(data['name_with_namespace'], 'String');
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = Namespace.constructFromObject(data['namespace']);
            }
            if (data.hasOwnProperty('only_allow_merge_if_all_discussions_are_resolved')) {
                obj['only_allow_merge_if_all_discussions_are_resolved'] = ApiClient.convertToType(data['only_allow_merge_if_all_discussions_are_resolved'], 'String');
            }
            if (data.hasOwnProperty('only_allow_merge_if_build_succeeds')) {
                obj['only_allow_merge_if_build_succeeds'] = ApiClient.convertToType(data['only_allow_merge_if_build_succeeds'], 'String');
            }
            if (data.hasOwnProperty('open_issues_count')) {
                obj['open_issues_count'] = ApiClient.convertToType(data['open_issues_count'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = UserBasic.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('path_with_namespace')) {
                obj['path_with_namespace'] = ApiClient.convertToType(data['path_with_namespace'], 'String');
            }
            if (data.hasOwnProperty('public')) {
                obj['public'] = ApiClient.convertToType(data['public'], 'String');
            }
            if (data.hasOwnProperty('public_builds')) {
                obj['public_builds'] = ApiClient.convertToType(data['public_builds'], 'String');
            }
            if (data.hasOwnProperty('request_access_enabled')) {
                obj['request_access_enabled'] = ApiClient.convertToType(data['request_access_enabled'], 'String');
            }
            if (data.hasOwnProperty('runners_token')) {
                obj['runners_token'] = ApiClient.convertToType(data['runners_token'], 'String');
            }
            if (data.hasOwnProperty('shared_runners_enabled')) {
                obj['shared_runners_enabled'] = ApiClient.convertToType(data['shared_runners_enabled'], 'String');
            }
            if (data.hasOwnProperty('shared_with_groups')) {
                obj['shared_with_groups'] = ApiClient.convertToType(data['shared_with_groups'], 'String');
            }
            if (data.hasOwnProperty('snippets_enabled')) {
                obj['snippets_enabled'] = ApiClient.convertToType(data['snippets_enabled'], 'String');
            }
            if (data.hasOwnProperty('ssh_url_to_repo')) {
                obj['ssh_url_to_repo'] = ApiClient.convertToType(data['ssh_url_to_repo'], 'String');
            }
            if (data.hasOwnProperty('star_count')) {
                obj['star_count'] = ApiClient.convertToType(data['star_count'], 'String');
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = ProjectStatistics.constructFromObject(data['statistics']);
            }
            if (data.hasOwnProperty('tag_list')) {
                obj['tag_list'] = ApiClient.convertToType(data['tag_list'], 'String');
            }
            if (data.hasOwnProperty('visibility_level')) {
                obj['visibility_level'] = ApiClient.convertToType(data['visibility_level'], 'String');
            }
            if (data.hasOwnProperty('web_url')) {
                obj['web_url'] = ApiClient.convertToType(data['web_url'], 'String');
            }
            if (data.hasOwnProperty('wiki_enabled')) {
                obj['wiki_enabled'] = ApiClient.convertToType(data['wiki_enabled'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Project</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Project</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['archived'] && !(typeof data['archived'] === 'string' || data['archived'] instanceof String)) {
            throw new Error("Expected the field `archived` to be a primitive type in the JSON string but got " + data['archived']);
        }
        // ensure the json data is a string
        if (data['avatar_url'] && !(typeof data['avatar_url'] === 'string' || data['avatar_url'] instanceof String)) {
            throw new Error("Expected the field `avatar_url` to be a primitive type in the JSON string but got " + data['avatar_url']);
        }
        // ensure the json data is a string
        if (data['builds_enabled'] && !(typeof data['builds_enabled'] === 'string' || data['builds_enabled'] instanceof String)) {
            throw new Error("Expected the field `builds_enabled` to be a primitive type in the JSON string but got " + data['builds_enabled']);
        }
        // ensure the json data is a string
        if (data['container_registry_enabled'] && !(typeof data['container_registry_enabled'] === 'string' || data['container_registry_enabled'] instanceof String)) {
            throw new Error("Expected the field `container_registry_enabled` to be a primitive type in the JSON string but got " + data['container_registry_enabled']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['creator_id'] && !(typeof data['creator_id'] === 'string' || data['creator_id'] instanceof String)) {
            throw new Error("Expected the field `creator_id` to be a primitive type in the JSON string but got " + data['creator_id']);
        }
        // ensure the json data is a string
        if (data['default_branch'] && !(typeof data['default_branch'] === 'string' || data['default_branch'] instanceof String)) {
            throw new Error("Expected the field `default_branch` to be a primitive type in the JSON string but got " + data['default_branch']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `forked_from_project`
        if (data['forked_from_project']) { // data not null
          BasicProjectDetails.validateJSON(data['forked_from_project']);
        }
        // ensure the json data is a string
        if (data['forks_count'] && !(typeof data['forks_count'] === 'string' || data['forks_count'] instanceof String)) {
            throw new Error("Expected the field `forks_count` to be a primitive type in the JSON string but got " + data['forks_count']);
        }
        // ensure the json data is a string
        if (data['http_url_to_repo'] && !(typeof data['http_url_to_repo'] === 'string' || data['http_url_to_repo'] instanceof String)) {
            throw new Error("Expected the field `http_url_to_repo` to be a primitive type in the JSON string but got " + data['http_url_to_repo']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['issues_enabled'] && !(typeof data['issues_enabled'] === 'string' || data['issues_enabled'] instanceof String)) {
            throw new Error("Expected the field `issues_enabled` to be a primitive type in the JSON string but got " + data['issues_enabled']);
        }
        // ensure the json data is a string
        if (data['last_activity_at'] && !(typeof data['last_activity_at'] === 'string' || data['last_activity_at'] instanceof String)) {
            throw new Error("Expected the field `last_activity_at` to be a primitive type in the JSON string but got " + data['last_activity_at']);
        }
        // ensure the json data is a string
        if (data['lfs_enabled'] && !(typeof data['lfs_enabled'] === 'string' || data['lfs_enabled'] instanceof String)) {
            throw new Error("Expected the field `lfs_enabled` to be a primitive type in the JSON string but got " + data['lfs_enabled']);
        }
        // ensure the json data is a string
        if (data['merge_requests_enabled'] && !(typeof data['merge_requests_enabled'] === 'string' || data['merge_requests_enabled'] instanceof String)) {
            throw new Error("Expected the field `merge_requests_enabled` to be a primitive type in the JSON string but got " + data['merge_requests_enabled']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['name_with_namespace'] && !(typeof data['name_with_namespace'] === 'string' || data['name_with_namespace'] instanceof String)) {
            throw new Error("Expected the field `name_with_namespace` to be a primitive type in the JSON string but got " + data['name_with_namespace']);
        }
        // validate the optional field `namespace`
        if (data['namespace']) { // data not null
          Namespace.validateJSON(data['namespace']);
        }
        // ensure the json data is a string
        if (data['only_allow_merge_if_all_discussions_are_resolved'] && !(typeof data['only_allow_merge_if_all_discussions_are_resolved'] === 'string' || data['only_allow_merge_if_all_discussions_are_resolved'] instanceof String)) {
            throw new Error("Expected the field `only_allow_merge_if_all_discussions_are_resolved` to be a primitive type in the JSON string but got " + data['only_allow_merge_if_all_discussions_are_resolved']);
        }
        // ensure the json data is a string
        if (data['only_allow_merge_if_build_succeeds'] && !(typeof data['only_allow_merge_if_build_succeeds'] === 'string' || data['only_allow_merge_if_build_succeeds'] instanceof String)) {
            throw new Error("Expected the field `only_allow_merge_if_build_succeeds` to be a primitive type in the JSON string but got " + data['only_allow_merge_if_build_succeeds']);
        }
        // ensure the json data is a string
        if (data['open_issues_count'] && !(typeof data['open_issues_count'] === 'string' || data['open_issues_count'] instanceof String)) {
            throw new Error("Expected the field `open_issues_count` to be a primitive type in the JSON string but got " + data['open_issues_count']);
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          UserBasic.validateJSON(data['owner']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['path_with_namespace'] && !(typeof data['path_with_namespace'] === 'string' || data['path_with_namespace'] instanceof String)) {
            throw new Error("Expected the field `path_with_namespace` to be a primitive type in the JSON string but got " + data['path_with_namespace']);
        }
        // ensure the json data is a string
        if (data['public'] && !(typeof data['public'] === 'string' || data['public'] instanceof String)) {
            throw new Error("Expected the field `public` to be a primitive type in the JSON string but got " + data['public']);
        }
        // ensure the json data is a string
        if (data['public_builds'] && !(typeof data['public_builds'] === 'string' || data['public_builds'] instanceof String)) {
            throw new Error("Expected the field `public_builds` to be a primitive type in the JSON string but got " + data['public_builds']);
        }
        // ensure the json data is a string
        if (data['request_access_enabled'] && !(typeof data['request_access_enabled'] === 'string' || data['request_access_enabled'] instanceof String)) {
            throw new Error("Expected the field `request_access_enabled` to be a primitive type in the JSON string but got " + data['request_access_enabled']);
        }
        // ensure the json data is a string
        if (data['runners_token'] && !(typeof data['runners_token'] === 'string' || data['runners_token'] instanceof String)) {
            throw new Error("Expected the field `runners_token` to be a primitive type in the JSON string but got " + data['runners_token']);
        }
        // ensure the json data is a string
        if (data['shared_runners_enabled'] && !(typeof data['shared_runners_enabled'] === 'string' || data['shared_runners_enabled'] instanceof String)) {
            throw new Error("Expected the field `shared_runners_enabled` to be a primitive type in the JSON string but got " + data['shared_runners_enabled']);
        }
        // ensure the json data is a string
        if (data['shared_with_groups'] && !(typeof data['shared_with_groups'] === 'string' || data['shared_with_groups'] instanceof String)) {
            throw new Error("Expected the field `shared_with_groups` to be a primitive type in the JSON string but got " + data['shared_with_groups']);
        }
        // ensure the json data is a string
        if (data['snippets_enabled'] && !(typeof data['snippets_enabled'] === 'string' || data['snippets_enabled'] instanceof String)) {
            throw new Error("Expected the field `snippets_enabled` to be a primitive type in the JSON string but got " + data['snippets_enabled']);
        }
        // ensure the json data is a string
        if (data['ssh_url_to_repo'] && !(typeof data['ssh_url_to_repo'] === 'string' || data['ssh_url_to_repo'] instanceof String)) {
            throw new Error("Expected the field `ssh_url_to_repo` to be a primitive type in the JSON string but got " + data['ssh_url_to_repo']);
        }
        // ensure the json data is a string
        if (data['star_count'] && !(typeof data['star_count'] === 'string' || data['star_count'] instanceof String)) {
            throw new Error("Expected the field `star_count` to be a primitive type in the JSON string but got " + data['star_count']);
        }
        // validate the optional field `statistics`
        if (data['statistics']) { // data not null
          ProjectStatistics.validateJSON(data['statistics']);
        }
        // ensure the json data is a string
        if (data['tag_list'] && !(typeof data['tag_list'] === 'string' || data['tag_list'] instanceof String)) {
            throw new Error("Expected the field `tag_list` to be a primitive type in the JSON string but got " + data['tag_list']);
        }
        // ensure the json data is a string
        if (data['visibility_level'] && !(typeof data['visibility_level'] === 'string' || data['visibility_level'] instanceof String)) {
            throw new Error("Expected the field `visibility_level` to be a primitive type in the JSON string but got " + data['visibility_level']);
        }
        // ensure the json data is a string
        if (data['web_url'] && !(typeof data['web_url'] === 'string' || data['web_url'] instanceof String)) {
            throw new Error("Expected the field `web_url` to be a primitive type in the JSON string but got " + data['web_url']);
        }
        // ensure the json data is a string
        if (data['wiki_enabled'] && !(typeof data['wiki_enabled'] === 'string' || data['wiki_enabled'] instanceof String)) {
            throw new Error("Expected the field `wiki_enabled` to be a primitive type in the JSON string but got " + data['wiki_enabled']);
        }

        return true;
    }


}



/**
 * @member {String} archived
 */
Project.prototype['archived'] = undefined;

/**
 * @member {String} avatar_url
 */
Project.prototype['avatar_url'] = undefined;

/**
 * @member {String} builds_enabled
 */
Project.prototype['builds_enabled'] = undefined;

/**
 * @member {String} container_registry_enabled
 */
Project.prototype['container_registry_enabled'] = undefined;

/**
 * @member {String} created_at
 */
Project.prototype['created_at'] = undefined;

/**
 * @member {String} creator_id
 */
Project.prototype['creator_id'] = undefined;

/**
 * @member {String} default_branch
 */
Project.prototype['default_branch'] = undefined;

/**
 * @member {String} description
 */
Project.prototype['description'] = undefined;

/**
 * @member {module:model/BasicProjectDetails} forked_from_project
 */
Project.prototype['forked_from_project'] = undefined;

/**
 * @member {String} forks_count
 */
Project.prototype['forks_count'] = undefined;

/**
 * @member {String} http_url_to_repo
 */
Project.prototype['http_url_to_repo'] = undefined;

/**
 * @member {String} id
 */
Project.prototype['id'] = undefined;

/**
 * @member {String} issues_enabled
 */
Project.prototype['issues_enabled'] = undefined;

/**
 * @member {String} last_activity_at
 */
Project.prototype['last_activity_at'] = undefined;

/**
 * @member {String} lfs_enabled
 */
Project.prototype['lfs_enabled'] = undefined;

/**
 * @member {String} merge_requests_enabled
 */
Project.prototype['merge_requests_enabled'] = undefined;

/**
 * @member {String} name
 */
Project.prototype['name'] = undefined;

/**
 * @member {String} name_with_namespace
 */
Project.prototype['name_with_namespace'] = undefined;

/**
 * @member {module:model/Namespace} namespace
 */
Project.prototype['namespace'] = undefined;

/**
 * @member {String} only_allow_merge_if_all_discussions_are_resolved
 */
Project.prototype['only_allow_merge_if_all_discussions_are_resolved'] = undefined;

/**
 * @member {String} only_allow_merge_if_build_succeeds
 */
Project.prototype['only_allow_merge_if_build_succeeds'] = undefined;

/**
 * @member {String} open_issues_count
 */
Project.prototype['open_issues_count'] = undefined;

/**
 * @member {module:model/UserBasic} owner
 */
Project.prototype['owner'] = undefined;

/**
 * @member {String} path
 */
Project.prototype['path'] = undefined;

/**
 * @member {String} path_with_namespace
 */
Project.prototype['path_with_namespace'] = undefined;

/**
 * @member {String} public
 */
Project.prototype['public'] = undefined;

/**
 * @member {String} public_builds
 */
Project.prototype['public_builds'] = undefined;

/**
 * @member {String} request_access_enabled
 */
Project.prototype['request_access_enabled'] = undefined;

/**
 * @member {String} runners_token
 */
Project.prototype['runners_token'] = undefined;

/**
 * @member {String} shared_runners_enabled
 */
Project.prototype['shared_runners_enabled'] = undefined;

/**
 * @member {String} shared_with_groups
 */
Project.prototype['shared_with_groups'] = undefined;

/**
 * @member {String} snippets_enabled
 */
Project.prototype['snippets_enabled'] = undefined;

/**
 * @member {String} ssh_url_to_repo
 */
Project.prototype['ssh_url_to_repo'] = undefined;

/**
 * @member {String} star_count
 */
Project.prototype['star_count'] = undefined;

/**
 * @member {module:model/ProjectStatistics} statistics
 */
Project.prototype['statistics'] = undefined;

/**
 * @member {String} tag_list
 */
Project.prototype['tag_list'] = undefined;

/**
 * @member {String} visibility_level
 */
Project.prototype['visibility_level'] = undefined;

/**
 * @member {String} web_url
 */
Project.prototype['web_url'] = undefined;

/**
 * @member {String} wiki_enabled
 */
Project.prototype['wiki_enabled'] = undefined;






export default Project;

