/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutV3ProjectsIdServicesPushoverRequest model module.
 * @module model/PutV3ProjectsIdServicesPushoverRequest
 * @version v3
 */
class PutV3ProjectsIdServicesPushoverRequest {
    /**
     * Constructs a new <code>PutV3ProjectsIdServicesPushoverRequest</code>.
     * @alias module:model/PutV3ProjectsIdServicesPushoverRequest
     * @param apiKey {String} The application key
     * @param userKey {String} The user key
     * @param priority {String} The priority
     * @param device {String} Leave blank for all active devices
     * @param sound {String} The sound of the notification
     */
    constructor(apiKey, userKey, priority, device, sound) { 
        
        PutV3ProjectsIdServicesPushoverRequest.initialize(this, apiKey, userKey, priority, device, sound);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apiKey, userKey, priority, device, sound) { 
        obj['api_key'] = apiKey;
        obj['user_key'] = userKey;
        obj['priority'] = priority;
        obj['device'] = device;
        obj['sound'] = sound;
    }

    /**
     * Constructs a <code>PutV3ProjectsIdServicesPushoverRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutV3ProjectsIdServicesPushoverRequest} obj Optional instance to populate.
     * @return {module:model/PutV3ProjectsIdServicesPushoverRequest} The populated <code>PutV3ProjectsIdServicesPushoverRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutV3ProjectsIdServicesPushoverRequest();

            if (data.hasOwnProperty('api_key')) {
                obj['api_key'] = ApiClient.convertToType(data['api_key'], 'String');
            }
            if (data.hasOwnProperty('user_key')) {
                obj['user_key'] = ApiClient.convertToType(data['user_key'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'String');
            }
            if (data.hasOwnProperty('device')) {
                obj['device'] = ApiClient.convertToType(data['device'], 'String');
            }
            if (data.hasOwnProperty('sound')) {
                obj['sound'] = ApiClient.convertToType(data['sound'], 'String');
            }
            if (data.hasOwnProperty('push_events')) {
                obj['push_events'] = ApiClient.convertToType(data['push_events'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutV3ProjectsIdServicesPushoverRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutV3ProjectsIdServicesPushoverRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutV3ProjectsIdServicesPushoverRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['api_key'] && !(typeof data['api_key'] === 'string' || data['api_key'] instanceof String)) {
            throw new Error("Expected the field `api_key` to be a primitive type in the JSON string but got " + data['api_key']);
        }
        // ensure the json data is a string
        if (data['user_key'] && !(typeof data['user_key'] === 'string' || data['user_key'] instanceof String)) {
            throw new Error("Expected the field `user_key` to be a primitive type in the JSON string but got " + data['user_key']);
        }
        // ensure the json data is a string
        if (data['priority'] && !(typeof data['priority'] === 'string' || data['priority'] instanceof String)) {
            throw new Error("Expected the field `priority` to be a primitive type in the JSON string but got " + data['priority']);
        }
        // ensure the json data is a string
        if (data['device'] && !(typeof data['device'] === 'string' || data['device'] instanceof String)) {
            throw new Error("Expected the field `device` to be a primitive type in the JSON string but got " + data['device']);
        }
        // ensure the json data is a string
        if (data['sound'] && !(typeof data['sound'] === 'string' || data['sound'] instanceof String)) {
            throw new Error("Expected the field `sound` to be a primitive type in the JSON string but got " + data['sound']);
        }
        // ensure the json data is a string
        if (data['push_events'] && !(typeof data['push_events'] === 'string' || data['push_events'] instanceof String)) {
            throw new Error("Expected the field `push_events` to be a primitive type in the JSON string but got " + data['push_events']);
        }

        return true;
    }


}

PutV3ProjectsIdServicesPushoverRequest.RequiredProperties = ["api_key", "user_key", "priority", "device", "sound"];

/**
 * The application key
 * @member {String} api_key
 */
PutV3ProjectsIdServicesPushoverRequest.prototype['api_key'] = undefined;

/**
 * The user key
 * @member {String} user_key
 */
PutV3ProjectsIdServicesPushoverRequest.prototype['user_key'] = undefined;

/**
 * The priority
 * @member {String} priority
 */
PutV3ProjectsIdServicesPushoverRequest.prototype['priority'] = undefined;

/**
 * Leave blank for all active devices
 * @member {String} device
 */
PutV3ProjectsIdServicesPushoverRequest.prototype['device'] = undefined;

/**
 * The sound of the notification
 * @member {String} sound
 */
PutV3ProjectsIdServicesPushoverRequest.prototype['sound'] = undefined;

/**
 * Event will be triggered by a push to the repository
 * @member {String} push_events
 */
PutV3ProjectsIdServicesPushoverRequest.prototype['push_events'] = undefined;






export default PutV3ProjectsIdServicesPushoverRequest;

