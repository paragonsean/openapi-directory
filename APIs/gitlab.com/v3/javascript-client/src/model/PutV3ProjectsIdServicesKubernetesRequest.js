/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutV3ProjectsIdServicesKubernetesRequest model module.
 * @module model/PutV3ProjectsIdServicesKubernetesRequest
 * @version v3
 */
class PutV3ProjectsIdServicesKubernetesRequest {
    /**
     * Constructs a new <code>PutV3ProjectsIdServicesKubernetesRequest</code>.
     * @alias module:model/PutV3ProjectsIdServicesKubernetesRequest
     * @param namespace {String} The Kubernetes namespace to use
     * @param apiUrl {String} The URL to the Kubernetes cluster API, e.g., https://kubernetes.example.com
     * @param token {String} The service token to authenticate against the Kubernetes cluster with
     */
    constructor(namespace, apiUrl, token) { 
        
        PutV3ProjectsIdServicesKubernetesRequest.initialize(this, namespace, apiUrl, token);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, namespace, apiUrl, token) { 
        obj['namespace'] = namespace;
        obj['api_url'] = apiUrl;
        obj['token'] = token;
    }

    /**
     * Constructs a <code>PutV3ProjectsIdServicesKubernetesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutV3ProjectsIdServicesKubernetesRequest} obj Optional instance to populate.
     * @return {module:model/PutV3ProjectsIdServicesKubernetesRequest} The populated <code>PutV3ProjectsIdServicesKubernetesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutV3ProjectsIdServicesKubernetesRequest();

            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('api_url')) {
                obj['api_url'] = ApiClient.convertToType(data['api_url'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('ca_pem')) {
                obj['ca_pem'] = ApiClient.convertToType(data['ca_pem'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutV3ProjectsIdServicesKubernetesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutV3ProjectsIdServicesKubernetesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutV3ProjectsIdServicesKubernetesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['namespace'] && !(typeof data['namespace'] === 'string' || data['namespace'] instanceof String)) {
            throw new Error("Expected the field `namespace` to be a primitive type in the JSON string but got " + data['namespace']);
        }
        // ensure the json data is a string
        if (data['api_url'] && !(typeof data['api_url'] === 'string' || data['api_url'] instanceof String)) {
            throw new Error("Expected the field `api_url` to be a primitive type in the JSON string but got " + data['api_url']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['ca_pem'] && !(typeof data['ca_pem'] === 'string' || data['ca_pem'] instanceof String)) {
            throw new Error("Expected the field `ca_pem` to be a primitive type in the JSON string but got " + data['ca_pem']);
        }

        return true;
    }


}

PutV3ProjectsIdServicesKubernetesRequest.RequiredProperties = ["namespace", "api_url", "token"];

/**
 * The Kubernetes namespace to use
 * @member {String} namespace
 */
PutV3ProjectsIdServicesKubernetesRequest.prototype['namespace'] = undefined;

/**
 * The URL to the Kubernetes cluster API, e.g., https://kubernetes.example.com
 * @member {String} api_url
 */
PutV3ProjectsIdServicesKubernetesRequest.prototype['api_url'] = undefined;

/**
 * The service token to authenticate against the Kubernetes cluster with
 * @member {String} token
 */
PutV3ProjectsIdServicesKubernetesRequest.prototype['token'] = undefined;

/**
 * A custom certificate authority bundle to verify the Kubernetes cluster with (PEM format)
 * @member {String} ca_pem
 */
PutV3ProjectsIdServicesKubernetesRequest.prototype['ca_pem'] = undefined;






export default PutV3ProjectsIdServicesKubernetesRequest;

