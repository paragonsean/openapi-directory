/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostV3ProjectsIdStatusesShaRequest model module.
 * @module model/PostV3ProjectsIdStatusesShaRequest
 * @version v3
 */
class PostV3ProjectsIdStatusesShaRequest {
    /**
     * Constructs a new <code>PostV3ProjectsIdStatusesShaRequest</code>.
     * @alias module:model/PostV3ProjectsIdStatusesShaRequest
     * @param state {module:model/PostV3ProjectsIdStatusesShaRequest.StateEnum} The state of the status
     */
    constructor(state) { 
        
        PostV3ProjectsIdStatusesShaRequest.initialize(this, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, state) { 
        obj['state'] = state;
    }

    /**
     * Constructs a <code>PostV3ProjectsIdStatusesShaRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostV3ProjectsIdStatusesShaRequest} obj Optional instance to populate.
     * @return {module:model/PostV3ProjectsIdStatusesShaRequest} The populated <code>PostV3ProjectsIdStatusesShaRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostV3ProjectsIdStatusesShaRequest();

            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('ref')) {
                obj['ref'] = ApiClient.convertToType(data['ref'], 'String');
            }
            if (data.hasOwnProperty('target_url')) {
                obj['target_url'] = ApiClient.convertToType(data['target_url'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = ApiClient.convertToType(data['context'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostV3ProjectsIdStatusesShaRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostV3ProjectsIdStatusesShaRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostV3ProjectsIdStatusesShaRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['ref'] && !(typeof data['ref'] === 'string' || data['ref'] instanceof String)) {
            throw new Error("Expected the field `ref` to be a primitive type in the JSON string but got " + data['ref']);
        }
        // ensure the json data is a string
        if (data['target_url'] && !(typeof data['target_url'] === 'string' || data['target_url'] instanceof String)) {
            throw new Error("Expected the field `target_url` to be a primitive type in the JSON string but got " + data['target_url']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['context'] && !(typeof data['context'] === 'string' || data['context'] instanceof String)) {
            throw new Error("Expected the field `context` to be a primitive type in the JSON string but got " + data['context']);
        }

        return true;
    }


}

PostV3ProjectsIdStatusesShaRequest.RequiredProperties = ["state"];

/**
 * The state of the status
 * @member {module:model/PostV3ProjectsIdStatusesShaRequest.StateEnum} state
 */
PostV3ProjectsIdStatusesShaRequest.prototype['state'] = undefined;

/**
 * The ref
 * @member {String} ref
 */
PostV3ProjectsIdStatusesShaRequest.prototype['ref'] = undefined;

/**
 * The target URL to associate with this status
 * @member {String} target_url
 */
PostV3ProjectsIdStatusesShaRequest.prototype['target_url'] = undefined;

/**
 * A short description of the status
 * @member {String} description
 */
PostV3ProjectsIdStatusesShaRequest.prototype['description'] = undefined;

/**
 * A string label to differentiate this status from the status of other systems. Default: \"default\"
 * @member {String} name
 */
PostV3ProjectsIdStatusesShaRequest.prototype['name'] = undefined;

/**
 * A string label to differentiate this status from the status of other systems. Default: \"default\"
 * @member {String} context
 */
PostV3ProjectsIdStatusesShaRequest.prototype['context'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
PostV3ProjectsIdStatusesShaRequest['StateEnum'] = {

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "running"
     * @const
     */
    "running": "running",

    /**
     * value: "success"
     * @const
     */
    "success": "success",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "canceled"
     * @const
     */
    "canceled": "canceled"
};



export default PostV3ProjectsIdStatusesShaRequest;

