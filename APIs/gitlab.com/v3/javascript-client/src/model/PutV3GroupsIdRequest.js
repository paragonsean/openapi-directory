/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutV3GroupsIdRequest model module.
 * @module model/PutV3GroupsIdRequest
 * @version v3
 */
class PutV3GroupsIdRequest {
    /**
     * Constructs a new <code>PutV3GroupsIdRequest</code>.
     * @alias module:model/PutV3GroupsIdRequest
     */
    constructor() { 
        
        PutV3GroupsIdRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PutV3GroupsIdRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutV3GroupsIdRequest} obj Optional instance to populate.
     * @return {module:model/PutV3GroupsIdRequest} The populated <code>PutV3GroupsIdRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutV3GroupsIdRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('visibility_level')) {
                obj['visibility_level'] = ApiClient.convertToType(data['visibility_level'], 'Number');
            }
            if (data.hasOwnProperty('lfs_enabled')) {
                obj['lfs_enabled'] = ApiClient.convertToType(data['lfs_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('request_access_enabled')) {
                obj['request_access_enabled'] = ApiClient.convertToType(data['request_access_enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutV3GroupsIdRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutV3GroupsIdRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }

        return true;
    }


}



/**
 * The name of the group
 * @member {String} name
 */
PutV3GroupsIdRequest.prototype['name'] = undefined;

/**
 * The path of the group
 * @member {String} path
 */
PutV3GroupsIdRequest.prototype['path'] = undefined;

/**
 * The description of the group
 * @member {String} description
 */
PutV3GroupsIdRequest.prototype['description'] = undefined;

/**
 * The visibility level of the group
 * @member {Number} visibility_level
 */
PutV3GroupsIdRequest.prototype['visibility_level'] = undefined;

/**
 * Enable/disable LFS for the projects in this group
 * @member {Boolean} lfs_enabled
 */
PutV3GroupsIdRequest.prototype['lfs_enabled'] = undefined;

/**
 * Allow users to request member access
 * @member {Boolean} request_access_enabled
 */
PutV3GroupsIdRequest.prototype['request_access_enabled'] = undefined;






export default PutV3GroupsIdRequest;

