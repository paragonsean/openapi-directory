/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RepoCommitStats model module.
 * @module model/RepoCommitStats
 * @version v3
 */
class RepoCommitStats {
    /**
     * Constructs a new <code>RepoCommitStats</code>.
     * @alias module:model/RepoCommitStats
     */
    constructor() { 
        
        RepoCommitStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RepoCommitStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepoCommitStats} obj Optional instance to populate.
     * @return {module:model/RepoCommitStats} The populated <code>RepoCommitStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepoCommitStats();

            if (data.hasOwnProperty('additions')) {
                obj['additions'] = ApiClient.convertToType(data['additions'], 'String');
            }
            if (data.hasOwnProperty('deletions')) {
                obj['deletions'] = ApiClient.convertToType(data['deletions'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepoCommitStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepoCommitStats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['additions'] && !(typeof data['additions'] === 'string' || data['additions'] instanceof String)) {
            throw new Error("Expected the field `additions` to be a primitive type in the JSON string but got " + data['additions']);
        }
        // ensure the json data is a string
        if (data['deletions'] && !(typeof data['deletions'] === 'string' || data['deletions'] instanceof String)) {
            throw new Error("Expected the field `deletions` to be a primitive type in the JSON string but got " + data['deletions']);
        }
        // ensure the json data is a string
        if (data['total'] && !(typeof data['total'] === 'string' || data['total'] instanceof String)) {
            throw new Error("Expected the field `total` to be a primitive type in the JSON string but got " + data['total']);
        }

        return true;
    }


}



/**
 * @member {String} additions
 */
RepoCommitStats.prototype['additions'] = undefined;

/**
 * @member {String} deletions
 */
RepoCommitStats.prototype['deletions'] = undefined;

/**
 * @member {String} total
 */
RepoCommitStats.prototype['total'] = undefined;






export default RepoCommitStats;

