/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutV3ProjectsIdSnippetsSnippetIdRequest model module.
 * @module model/PutV3ProjectsIdSnippetsSnippetIdRequest
 * @version v3
 */
class PutV3ProjectsIdSnippetsSnippetIdRequest {
    /**
     * Constructs a new <code>PutV3ProjectsIdSnippetsSnippetIdRequest</code>.
     * @alias module:model/PutV3ProjectsIdSnippetsSnippetIdRequest
     */
    constructor() { 
        
        PutV3ProjectsIdSnippetsSnippetIdRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PutV3ProjectsIdSnippetsSnippetIdRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutV3ProjectsIdSnippetsSnippetIdRequest} obj Optional instance to populate.
     * @return {module:model/PutV3ProjectsIdSnippetsSnippetIdRequest} The populated <code>PutV3ProjectsIdSnippetsSnippetIdRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutV3ProjectsIdSnippetsSnippetIdRequest();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('file_name')) {
                obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('visibility_level')) {
                obj['visibility_level'] = ApiClient.convertToType(data['visibility_level'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutV3ProjectsIdSnippetsSnippetIdRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutV3ProjectsIdSnippetsSnippetIdRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['file_name'] && !(typeof data['file_name'] === 'string' || data['file_name'] instanceof String)) {
            throw new Error("Expected the field `file_name` to be a primitive type in the JSON string but got " + data['file_name']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }

        return true;
    }


}



/**
 * The title of the snippet
 * @member {String} title
 */
PutV3ProjectsIdSnippetsSnippetIdRequest.prototype['title'] = undefined;

/**
 * The file name of the snippet
 * @member {String} file_name
 */
PutV3ProjectsIdSnippetsSnippetIdRequest.prototype['file_name'] = undefined;

/**
 * The content of the snippet
 * @member {String} code
 */
PutV3ProjectsIdSnippetsSnippetIdRequest.prototype['code'] = undefined;

/**
 * The visibility level of the snippet
 * @member {module:model/PutV3ProjectsIdSnippetsSnippetIdRequest.VisibilityLevelEnum} visibility_level
 */
PutV3ProjectsIdSnippetsSnippetIdRequest.prototype['visibility_level'] = undefined;





/**
 * Allowed values for the <code>visibility_level</code> property.
 * @enum {Number}
 * @readonly
 */
PutV3ProjectsIdSnippetsSnippetIdRequest['VisibilityLevelEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 10
     * @const
     */
    "10": 10,

    /**
     * value: 20
     * @const
     */
    "20": 20
};



export default PutV3ProjectsIdSnippetsSnippetIdRequest;

