/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Identity from './Identity';

/**
 * The UserWithPrivateToken model module.
 * @module model/UserWithPrivateToken
 * @version v3
 */
class UserWithPrivateToken {
    /**
     * Constructs a new <code>UserWithPrivateToken</code>.
     * Login to get token
     * @alias module:model/UserWithPrivateToken
     */
    constructor() { 
        
        UserWithPrivateToken.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserWithPrivateToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserWithPrivateToken} obj Optional instance to populate.
     * @return {module:model/UserWithPrivateToken} The populated <code>UserWithPrivateToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserWithPrivateToken();

            if (data.hasOwnProperty('avatar_url')) {
                obj['avatar_url'] = ApiClient.convertToType(data['avatar_url'], 'String');
            }
            if (data.hasOwnProperty('bio')) {
                obj['bio'] = ApiClient.convertToType(data['bio'], 'String');
            }
            if (data.hasOwnProperty('can_create_group')) {
                obj['can_create_group'] = ApiClient.convertToType(data['can_create_group'], 'String');
            }
            if (data.hasOwnProperty('can_create_project')) {
                obj['can_create_project'] = ApiClient.convertToType(data['can_create_project'], 'String');
            }
            if (data.hasOwnProperty('color_scheme_id')) {
                obj['color_scheme_id'] = ApiClient.convertToType(data['color_scheme_id'], 'String');
            }
            if (data.hasOwnProperty('confirmed_at')) {
                obj['confirmed_at'] = ApiClient.convertToType(data['confirmed_at'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('current_sign_in_at')) {
                obj['current_sign_in_at'] = ApiClient.convertToType(data['current_sign_in_at'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('external')) {
                obj['external'] = ApiClient.convertToType(data['external'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('identities')) {
                obj['identities'] = Identity.constructFromObject(data['identities']);
            }
            if (data.hasOwnProperty('is_admin')) {
                obj['is_admin'] = ApiClient.convertToType(data['is_admin'], 'String');
            }
            if (data.hasOwnProperty('last_sign_in_at')) {
                obj['last_sign_in_at'] = ApiClient.convertToType(data['last_sign_in_at'], 'String');
            }
            if (data.hasOwnProperty('linkedin')) {
                obj['linkedin'] = ApiClient.convertToType(data['linkedin'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = ApiClient.convertToType(data['organization'], 'String');
            }
            if (data.hasOwnProperty('private_token')) {
                obj['private_token'] = ApiClient.convertToType(data['private_token'], 'String');
            }
            if (data.hasOwnProperty('projects_limit')) {
                obj['projects_limit'] = ApiClient.convertToType(data['projects_limit'], 'String');
            }
            if (data.hasOwnProperty('skype')) {
                obj['skype'] = ApiClient.convertToType(data['skype'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('theme_id')) {
                obj['theme_id'] = ApiClient.convertToType(data['theme_id'], 'String');
            }
            if (data.hasOwnProperty('twitter')) {
                obj['twitter'] = ApiClient.convertToType(data['twitter'], 'String');
            }
            if (data.hasOwnProperty('two_factor_enabled')) {
                obj['two_factor_enabled'] = ApiClient.convertToType(data['two_factor_enabled'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('web_url')) {
                obj['web_url'] = ApiClient.convertToType(data['web_url'], 'String');
            }
            if (data.hasOwnProperty('website_url')) {
                obj['website_url'] = ApiClient.convertToType(data['website_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserWithPrivateToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserWithPrivateToken</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['avatar_url'] && !(typeof data['avatar_url'] === 'string' || data['avatar_url'] instanceof String)) {
            throw new Error("Expected the field `avatar_url` to be a primitive type in the JSON string but got " + data['avatar_url']);
        }
        // ensure the json data is a string
        if (data['bio'] && !(typeof data['bio'] === 'string' || data['bio'] instanceof String)) {
            throw new Error("Expected the field `bio` to be a primitive type in the JSON string but got " + data['bio']);
        }
        // ensure the json data is a string
        if (data['can_create_group'] && !(typeof data['can_create_group'] === 'string' || data['can_create_group'] instanceof String)) {
            throw new Error("Expected the field `can_create_group` to be a primitive type in the JSON string but got " + data['can_create_group']);
        }
        // ensure the json data is a string
        if (data['can_create_project'] && !(typeof data['can_create_project'] === 'string' || data['can_create_project'] instanceof String)) {
            throw new Error("Expected the field `can_create_project` to be a primitive type in the JSON string but got " + data['can_create_project']);
        }
        // ensure the json data is a string
        if (data['color_scheme_id'] && !(typeof data['color_scheme_id'] === 'string' || data['color_scheme_id'] instanceof String)) {
            throw new Error("Expected the field `color_scheme_id` to be a primitive type in the JSON string but got " + data['color_scheme_id']);
        }
        // ensure the json data is a string
        if (data['confirmed_at'] && !(typeof data['confirmed_at'] === 'string' || data['confirmed_at'] instanceof String)) {
            throw new Error("Expected the field `confirmed_at` to be a primitive type in the JSON string but got " + data['confirmed_at']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['current_sign_in_at'] && !(typeof data['current_sign_in_at'] === 'string' || data['current_sign_in_at'] instanceof String)) {
            throw new Error("Expected the field `current_sign_in_at` to be a primitive type in the JSON string but got " + data['current_sign_in_at']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['external'] && !(typeof data['external'] === 'string' || data['external'] instanceof String)) {
            throw new Error("Expected the field `external` to be a primitive type in the JSON string but got " + data['external']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `identities`
        if (data['identities']) { // data not null
          Identity.validateJSON(data['identities']);
        }
        // ensure the json data is a string
        if (data['is_admin'] && !(typeof data['is_admin'] === 'string' || data['is_admin'] instanceof String)) {
            throw new Error("Expected the field `is_admin` to be a primitive type in the JSON string but got " + data['is_admin']);
        }
        // ensure the json data is a string
        if (data['last_sign_in_at'] && !(typeof data['last_sign_in_at'] === 'string' || data['last_sign_in_at'] instanceof String)) {
            throw new Error("Expected the field `last_sign_in_at` to be a primitive type in the JSON string but got " + data['last_sign_in_at']);
        }
        // ensure the json data is a string
        if (data['linkedin'] && !(typeof data['linkedin'] === 'string' || data['linkedin'] instanceof String)) {
            throw new Error("Expected the field `linkedin` to be a primitive type in the JSON string but got " + data['linkedin']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['organization'] && !(typeof data['organization'] === 'string' || data['organization'] instanceof String)) {
            throw new Error("Expected the field `organization` to be a primitive type in the JSON string but got " + data['organization']);
        }
        // ensure the json data is a string
        if (data['private_token'] && !(typeof data['private_token'] === 'string' || data['private_token'] instanceof String)) {
            throw new Error("Expected the field `private_token` to be a primitive type in the JSON string but got " + data['private_token']);
        }
        // ensure the json data is a string
        if (data['projects_limit'] && !(typeof data['projects_limit'] === 'string' || data['projects_limit'] instanceof String)) {
            throw new Error("Expected the field `projects_limit` to be a primitive type in the JSON string but got " + data['projects_limit']);
        }
        // ensure the json data is a string
        if (data['skype'] && !(typeof data['skype'] === 'string' || data['skype'] instanceof String)) {
            throw new Error("Expected the field `skype` to be a primitive type in the JSON string but got " + data['skype']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['theme_id'] && !(typeof data['theme_id'] === 'string' || data['theme_id'] instanceof String)) {
            throw new Error("Expected the field `theme_id` to be a primitive type in the JSON string but got " + data['theme_id']);
        }
        // ensure the json data is a string
        if (data['twitter'] && !(typeof data['twitter'] === 'string' || data['twitter'] instanceof String)) {
            throw new Error("Expected the field `twitter` to be a primitive type in the JSON string but got " + data['twitter']);
        }
        // ensure the json data is a string
        if (data['two_factor_enabled'] && !(typeof data['two_factor_enabled'] === 'string' || data['two_factor_enabled'] instanceof String)) {
            throw new Error("Expected the field `two_factor_enabled` to be a primitive type in the JSON string but got " + data['two_factor_enabled']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // ensure the json data is a string
        if (data['web_url'] && !(typeof data['web_url'] === 'string' || data['web_url'] instanceof String)) {
            throw new Error("Expected the field `web_url` to be a primitive type in the JSON string but got " + data['web_url']);
        }
        // ensure the json data is a string
        if (data['website_url'] && !(typeof data['website_url'] === 'string' || data['website_url'] instanceof String)) {
            throw new Error("Expected the field `website_url` to be a primitive type in the JSON string but got " + data['website_url']);
        }

        return true;
    }


}



/**
 * @member {String} avatar_url
 */
UserWithPrivateToken.prototype['avatar_url'] = undefined;

/**
 * @member {String} bio
 */
UserWithPrivateToken.prototype['bio'] = undefined;

/**
 * @member {String} can_create_group
 */
UserWithPrivateToken.prototype['can_create_group'] = undefined;

/**
 * @member {String} can_create_project
 */
UserWithPrivateToken.prototype['can_create_project'] = undefined;

/**
 * @member {String} color_scheme_id
 */
UserWithPrivateToken.prototype['color_scheme_id'] = undefined;

/**
 * @member {String} confirmed_at
 */
UserWithPrivateToken.prototype['confirmed_at'] = undefined;

/**
 * @member {String} created_at
 */
UserWithPrivateToken.prototype['created_at'] = undefined;

/**
 * @member {String} current_sign_in_at
 */
UserWithPrivateToken.prototype['current_sign_in_at'] = undefined;

/**
 * @member {String} email
 */
UserWithPrivateToken.prototype['email'] = undefined;

/**
 * @member {String} external
 */
UserWithPrivateToken.prototype['external'] = undefined;

/**
 * @member {String} id
 */
UserWithPrivateToken.prototype['id'] = undefined;

/**
 * @member {module:model/Identity} identities
 */
UserWithPrivateToken.prototype['identities'] = undefined;

/**
 * @member {String} is_admin
 */
UserWithPrivateToken.prototype['is_admin'] = undefined;

/**
 * @member {String} last_sign_in_at
 */
UserWithPrivateToken.prototype['last_sign_in_at'] = undefined;

/**
 * @member {String} linkedin
 */
UserWithPrivateToken.prototype['linkedin'] = undefined;

/**
 * @member {String} location
 */
UserWithPrivateToken.prototype['location'] = undefined;

/**
 * @member {String} name
 */
UserWithPrivateToken.prototype['name'] = undefined;

/**
 * @member {String} organization
 */
UserWithPrivateToken.prototype['organization'] = undefined;

/**
 * @member {String} private_token
 */
UserWithPrivateToken.prototype['private_token'] = undefined;

/**
 * @member {String} projects_limit
 */
UserWithPrivateToken.prototype['projects_limit'] = undefined;

/**
 * @member {String} skype
 */
UserWithPrivateToken.prototype['skype'] = undefined;

/**
 * @member {String} state
 */
UserWithPrivateToken.prototype['state'] = undefined;

/**
 * @member {String} theme_id
 */
UserWithPrivateToken.prototype['theme_id'] = undefined;

/**
 * @member {String} twitter
 */
UserWithPrivateToken.prototype['twitter'] = undefined;

/**
 * @member {String} two_factor_enabled
 */
UserWithPrivateToken.prototype['two_factor_enabled'] = undefined;

/**
 * @member {String} username
 */
UserWithPrivateToken.prototype['username'] = undefined;

/**
 * @member {String} web_url
 */
UserWithPrivateToken.prototype['web_url'] = undefined;

/**
 * @member {String} website_url
 */
UserWithPrivateToken.prototype['website_url'] = undefined;






export default UserWithPrivateToken;

