/*
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BasicProjectDetails;
import org.openapitools.client.model.Namespace;
import org.openapitools.client.model.ProjectStatistics;
import org.openapitools.client.model.UserBasic;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProjectWithAccess
 */
public class ProjectWithAccessTest {
    private final ProjectWithAccess model = new ProjectWithAccess();

    /**
     * Model tests for ProjectWithAccess
     */
    @Test
    public void testProjectWithAccess() {
        // TODO: test ProjectWithAccess
    }

    /**
     * Test the property 'archived'
     */
    @Test
    public void archivedTest() {
        // TODO: test archived
    }

    /**
     * Test the property 'avatarUrl'
     */
    @Test
    public void avatarUrlTest() {
        // TODO: test avatarUrl
    }

    /**
     * Test the property 'buildsEnabled'
     */
    @Test
    public void buildsEnabledTest() {
        // TODO: test buildsEnabled
    }

    /**
     * Test the property 'containerRegistryEnabled'
     */
    @Test
    public void containerRegistryEnabledTest() {
        // TODO: test containerRegistryEnabled
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'creatorId'
     */
    @Test
    public void creatorIdTest() {
        // TODO: test creatorId
    }

    /**
     * Test the property 'defaultBranch'
     */
    @Test
    public void defaultBranchTest() {
        // TODO: test defaultBranch
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'forkedFromProject'
     */
    @Test
    public void forkedFromProjectTest() {
        // TODO: test forkedFromProject
    }

    /**
     * Test the property 'forksCount'
     */
    @Test
    public void forksCountTest() {
        // TODO: test forksCount
    }

    /**
     * Test the property 'httpUrlToRepo'
     */
    @Test
    public void httpUrlToRepoTest() {
        // TODO: test httpUrlToRepo
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'issuesEnabled'
     */
    @Test
    public void issuesEnabledTest() {
        // TODO: test issuesEnabled
    }

    /**
     * Test the property 'lastActivityAt'
     */
    @Test
    public void lastActivityAtTest() {
        // TODO: test lastActivityAt
    }

    /**
     * Test the property 'lfsEnabled'
     */
    @Test
    public void lfsEnabledTest() {
        // TODO: test lfsEnabled
    }

    /**
     * Test the property 'mergeRequestsEnabled'
     */
    @Test
    public void mergeRequestsEnabledTest() {
        // TODO: test mergeRequestsEnabled
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nameWithNamespace'
     */
    @Test
    public void nameWithNamespaceTest() {
        // TODO: test nameWithNamespace
    }

    /**
     * Test the property 'namespace'
     */
    @Test
    public void namespaceTest() {
        // TODO: test namespace
    }

    /**
     * Test the property 'onlyAllowMergeIfAllDiscussionsAreResolved'
     */
    @Test
    public void onlyAllowMergeIfAllDiscussionsAreResolvedTest() {
        // TODO: test onlyAllowMergeIfAllDiscussionsAreResolved
    }

    /**
     * Test the property 'onlyAllowMergeIfBuildSucceeds'
     */
    @Test
    public void onlyAllowMergeIfBuildSucceedsTest() {
        // TODO: test onlyAllowMergeIfBuildSucceeds
    }

    /**
     * Test the property 'openIssuesCount'
     */
    @Test
    public void openIssuesCountTest() {
        // TODO: test openIssuesCount
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'pathWithNamespace'
     */
    @Test
    public void pathWithNamespaceTest() {
        // TODO: test pathWithNamespace
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property '_public'
     */
    @Test
    public void _publicTest() {
        // TODO: test _public
    }

    /**
     * Test the property 'publicBuilds'
     */
    @Test
    public void publicBuildsTest() {
        // TODO: test publicBuilds
    }

    /**
     * Test the property 'requestAccessEnabled'
     */
    @Test
    public void requestAccessEnabledTest() {
        // TODO: test requestAccessEnabled
    }

    /**
     * Test the property 'runnersToken'
     */
    @Test
    public void runnersTokenTest() {
        // TODO: test runnersToken
    }

    /**
     * Test the property 'sharedRunnersEnabled'
     */
    @Test
    public void sharedRunnersEnabledTest() {
        // TODO: test sharedRunnersEnabled
    }

    /**
     * Test the property 'sharedWithGroups'
     */
    @Test
    public void sharedWithGroupsTest() {
        // TODO: test sharedWithGroups
    }

    /**
     * Test the property 'snippetsEnabled'
     */
    @Test
    public void snippetsEnabledTest() {
        // TODO: test snippetsEnabled
    }

    /**
     * Test the property 'sshUrlToRepo'
     */
    @Test
    public void sshUrlToRepoTest() {
        // TODO: test sshUrlToRepo
    }

    /**
     * Test the property 'starCount'
     */
    @Test
    public void starCountTest() {
        // TODO: test starCount
    }

    /**
     * Test the property 'statistics'
     */
    @Test
    public void statisticsTest() {
        // TODO: test statistics
    }

    /**
     * Test the property 'tagList'
     */
    @Test
    public void tagListTest() {
        // TODO: test tagList
    }

    /**
     * Test the property 'visibilityLevel'
     */
    @Test
    public void visibilityLevelTest() {
        // TODO: test visibilityLevel
    }

    /**
     * Test the property 'webUrl'
     */
    @Test
    public void webUrlTest() {
        // TODO: test webUrl
    }

    /**
     * Test the property 'wikiEnabled'
     */
    @Test
    public void wikiEnabledTest() {
        // TODO: test wikiEnabled
    }

}
