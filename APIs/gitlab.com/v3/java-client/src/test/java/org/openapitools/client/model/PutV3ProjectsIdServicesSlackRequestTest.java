/*
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PutV3ProjectsIdServicesSlackRequest
 */
public class PutV3ProjectsIdServicesSlackRequestTest {
    private final PutV3ProjectsIdServicesSlackRequest model = new PutV3ProjectsIdServicesSlackRequest();

    /**
     * Model tests for PutV3ProjectsIdServicesSlackRequest
     */
    @Test
    public void testPutV3ProjectsIdServicesSlackRequest() {
        // TODO: test PutV3ProjectsIdServicesSlackRequest
    }

    /**
     * Test the property 'webhook'
     */
    @Test
    public void webhookTest() {
        // TODO: test webhook
    }

    /**
     * Test the property 'newIssueUrl'
     */
    @Test
    public void newIssueUrlTest() {
        // TODO: test newIssueUrl
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'pushEvents'
     */
    @Test
    public void pushEventsTest() {
        // TODO: test pushEvents
    }

    /**
     * Test the property 'issueEvents'
     */
    @Test
    public void issueEventsTest() {
        // TODO: test issueEvents
    }

    /**
     * Test the property 'confidentialIssueEvents'
     */
    @Test
    public void confidentialIssueEventsTest() {
        // TODO: test confidentialIssueEvents
    }

    /**
     * Test the property 'mergeRequestEvents'
     */
    @Test
    public void mergeRequestEventsTest() {
        // TODO: test mergeRequestEvents
    }

    /**
     * Test the property 'noteEvents'
     */
    @Test
    public void noteEventsTest() {
        // TODO: test noteEvents
    }

    /**
     * Test the property 'tagPushEvents'
     */
    @Test
    public void tagPushEventsTest() {
        // TODO: test tagPushEvents
    }

    /**
     * Test the property 'buildEvents'
     */
    @Test
    public void buildEventsTest() {
        // TODO: test buildEvents
    }

    /**
     * Test the property 'pipelineEvents'
     */
    @Test
    public void pipelineEventsTest() {
        // TODO: test pipelineEvents
    }

    /**
     * Test the property 'wikiPageEvents'
     */
    @Test
    public void wikiPageEventsTest() {
        // TODO: test wikiPageEvents
    }

}
