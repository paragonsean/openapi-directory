/*
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ApplicationSetting
 */
public class ApplicationSettingTest {
    private final ApplicationSetting model = new ApplicationSetting();

    /**
     * Model tests for ApplicationSetting
     */
    @Test
    public void testApplicationSetting() {
        // TODO: test ApplicationSetting
    }

    /**
     * Test the property 'afterSignOutPath'
     */
    @Test
    public void afterSignOutPathTest() {
        // TODO: test afterSignOutPath
    }

    /**
     * Test the property 'afterSignUpText'
     */
    @Test
    public void afterSignUpTextTest() {
        // TODO: test afterSignUpText
    }

    /**
     * Test the property 'containerRegistryTokenExpireDelay'
     */
    @Test
    public void containerRegistryTokenExpireDelayTest() {
        // TODO: test containerRegistryTokenExpireDelay
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'defaultBranchProtection'
     */
    @Test
    public void defaultBranchProtectionTest() {
        // TODO: test defaultBranchProtection
    }

    /**
     * Test the property 'defaultGroupVisibility'
     */
    @Test
    public void defaultGroupVisibilityTest() {
        // TODO: test defaultGroupVisibility
    }

    /**
     * Test the property 'defaultProjectVisibility'
     */
    @Test
    public void defaultProjectVisibilityTest() {
        // TODO: test defaultProjectVisibility
    }

    /**
     * Test the property 'defaultProjectsLimit'
     */
    @Test
    public void defaultProjectsLimitTest() {
        // TODO: test defaultProjectsLimit
    }

    /**
     * Test the property 'defaultSnippetVisibility'
     */
    @Test
    public void defaultSnippetVisibilityTest() {
        // TODO: test defaultSnippetVisibility
    }

    /**
     * Test the property 'domainBlacklist'
     */
    @Test
    public void domainBlacklistTest() {
        // TODO: test domainBlacklist
    }

    /**
     * Test the property 'domainBlacklistEnabled'
     */
    @Test
    public void domainBlacklistEnabledTest() {
        // TODO: test domainBlacklistEnabled
    }

    /**
     * Test the property 'domainWhitelist'
     */
    @Test
    public void domainWhitelistTest() {
        // TODO: test domainWhitelist
    }

    /**
     * Test the property 'gravatarEnabled'
     */
    @Test
    public void gravatarEnabledTest() {
        // TODO: test gravatarEnabled
    }

    /**
     * Test the property 'homePageUrl'
     */
    @Test
    public void homePageUrlTest() {
        // TODO: test homePageUrl
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'kodingEnabled'
     */
    @Test
    public void kodingEnabledTest() {
        // TODO: test kodingEnabled
    }

    /**
     * Test the property 'kodingUrl'
     */
    @Test
    public void kodingUrlTest() {
        // TODO: test kodingUrl
    }

    /**
     * Test the property 'maxAttachmentSize'
     */
    @Test
    public void maxAttachmentSizeTest() {
        // TODO: test maxAttachmentSize
    }

    /**
     * Test the property 'plantumlEnabled'
     */
    @Test
    public void plantumlEnabledTest() {
        // TODO: test plantumlEnabled
    }

    /**
     * Test the property 'plantumlUrl'
     */
    @Test
    public void plantumlUrlTest() {
        // TODO: test plantumlUrl
    }

    /**
     * Test the property 'repositoryStorage'
     */
    @Test
    public void repositoryStorageTest() {
        // TODO: test repositoryStorage
    }

    /**
     * Test the property 'repositoryStorages'
     */
    @Test
    public void repositoryStoragesTest() {
        // TODO: test repositoryStorages
    }

    /**
     * Test the property 'restrictedVisibilityLevels'
     */
    @Test
    public void restrictedVisibilityLevelsTest() {
        // TODO: test restrictedVisibilityLevels
    }

    /**
     * Test the property 'sessionExpireDelay'
     */
    @Test
    public void sessionExpireDelayTest() {
        // TODO: test sessionExpireDelay
    }

    /**
     * Test the property 'signInText'
     */
    @Test
    public void signInTextTest() {
        // TODO: test signInText
    }

    /**
     * Test the property 'signinEnabled'
     */
    @Test
    public void signinEnabledTest() {
        // TODO: test signinEnabled
    }

    /**
     * Test the property 'signupEnabled'
     */
    @Test
    public void signupEnabledTest() {
        // TODO: test signupEnabled
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'userOauthApplications'
     */
    @Test
    public void userOauthApplicationsTest() {
        // TODO: test userOauthApplications
    }

}
