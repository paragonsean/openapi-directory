/*
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PostV3ProjectsUserUserIdRequest
 */
public class PostV3ProjectsUserUserIdRequestTest {
    private final PostV3ProjectsUserUserIdRequest model = new PostV3ProjectsUserUserIdRequest();

    /**
     * Model tests for PostV3ProjectsUserUserIdRequest
     */
    @Test
    public void testPostV3ProjectsUserUserIdRequest() {
        // TODO: test PostV3ProjectsUserUserIdRequest
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'defaultBranch'
     */
    @Test
    public void defaultBranchTest() {
        // TODO: test defaultBranch
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'issuesEnabled'
     */
    @Test
    public void issuesEnabledTest() {
        // TODO: test issuesEnabled
    }

    /**
     * Test the property 'mergeRequestsEnabled'
     */
    @Test
    public void mergeRequestsEnabledTest() {
        // TODO: test mergeRequestsEnabled
    }

    /**
     * Test the property 'wikiEnabled'
     */
    @Test
    public void wikiEnabledTest() {
        // TODO: test wikiEnabled
    }

    /**
     * Test the property 'buildsEnabled'
     */
    @Test
    public void buildsEnabledTest() {
        // TODO: test buildsEnabled
    }

    /**
     * Test the property 'snippetsEnabled'
     */
    @Test
    public void snippetsEnabledTest() {
        // TODO: test snippetsEnabled
    }

    /**
     * Test the property 'sharedRunnersEnabled'
     */
    @Test
    public void sharedRunnersEnabledTest() {
        // TODO: test sharedRunnersEnabled
    }

    /**
     * Test the property 'containerRegistryEnabled'
     */
    @Test
    public void containerRegistryEnabledTest() {
        // TODO: test containerRegistryEnabled
    }

    /**
     * Test the property 'lfsEnabled'
     */
    @Test
    public void lfsEnabledTest() {
        // TODO: test lfsEnabled
    }

    /**
     * Test the property '_public'
     */
    @Test
    public void _publicTest() {
        // TODO: test _public
    }

    /**
     * Test the property 'visibilityLevel'
     */
    @Test
    public void visibilityLevelTest() {
        // TODO: test visibilityLevel
    }

    /**
     * Test the property 'publicBuilds'
     */
    @Test
    public void publicBuildsTest() {
        // TODO: test publicBuilds
    }

    /**
     * Test the property 'requestAccessEnabled'
     */
    @Test
    public void requestAccessEnabledTest() {
        // TODO: test requestAccessEnabled
    }

    /**
     * Test the property 'onlyAllowMergeIfBuildSucceeds'
     */
    @Test
    public void onlyAllowMergeIfBuildSucceedsTest() {
        // TODO: test onlyAllowMergeIfBuildSucceeds
    }

    /**
     * Test the property 'onlyAllowMergeIfAllDiscussionsAreResolved'
     */
    @Test
    public void onlyAllowMergeIfAllDiscussionsAreResolvedTest() {
        // TODO: test onlyAllowMergeIfAllDiscussionsAreResolved
    }

    /**
     * Test the property 'namespaceId'
     */
    @Test
    public void namespaceIdTest() {
        // TODO: test namespaceId
    }

    /**
     * Test the property 'importUrl'
     */
    @Test
    public void importUrlTest() {
        // TODO: test importUrl
    }

}
