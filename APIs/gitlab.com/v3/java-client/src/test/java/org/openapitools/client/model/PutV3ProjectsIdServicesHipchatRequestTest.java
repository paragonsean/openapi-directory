/*
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PutV3ProjectsIdServicesHipchatRequest
 */
public class PutV3ProjectsIdServicesHipchatRequestTest {
    private final PutV3ProjectsIdServicesHipchatRequest model = new PutV3ProjectsIdServicesHipchatRequest();

    /**
     * Model tests for PutV3ProjectsIdServicesHipchatRequest
     */
    @Test
    public void testPutV3ProjectsIdServicesHipchatRequest() {
        // TODO: test PutV3ProjectsIdServicesHipchatRequest
    }

    /**
     * Test the property 'token'
     */
    @Test
    public void tokenTest() {
        // TODO: test token
    }

    /**
     * Test the property 'room'
     */
    @Test
    public void roomTest() {
        // TODO: test room
    }

    /**
     * Test the property 'color'
     */
    @Test
    public void colorTest() {
        // TODO: test color
    }

    /**
     * Test the property 'notify'
     */
    @Test
    public void notifyTest() {
        // TODO: test notify
    }

    /**
     * Test the property 'apiVersion'
     */
    @Test
    public void apiVersionTest() {
        // TODO: test apiVersion
    }

    /**
     * Test the property 'server'
     */
    @Test
    public void serverTest() {
        // TODO: test server
    }

    /**
     * Test the property 'pushEvents'
     */
    @Test
    public void pushEventsTest() {
        // TODO: test pushEvents
    }

    /**
     * Test the property 'issueEvents'
     */
    @Test
    public void issueEventsTest() {
        // TODO: test issueEvents
    }

    /**
     * Test the property 'confidentialIssueEvents'
     */
    @Test
    public void confidentialIssueEventsTest() {
        // TODO: test confidentialIssueEvents
    }

    /**
     * Test the property 'mergeRequestEvents'
     */
    @Test
    public void mergeRequestEventsTest() {
        // TODO: test mergeRequestEvents
    }

    /**
     * Test the property 'noteEvents'
     */
    @Test
    public void noteEventsTest() {
        // TODO: test noteEvents
    }

    /**
     * Test the property 'tagPushEvents'
     */
    @Test
    public void tagPushEventsTest() {
        // TODO: test tagPushEvents
    }

    /**
     * Test the property 'buildEvents'
     */
    @Test
    public void buildEventsTest() {
        // TODO: test buildEvents
    }

}
