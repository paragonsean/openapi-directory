/*
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Email;
import org.openapitools.client.model.PostV3UserEmailsRequest;
import org.openapitools.client.model.PostV3UserKeysRequest;
import org.openapitools.client.model.SSHKey;
import org.openapitools.client.model.UserPublic;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Disabled
public class UserApiTest {

    private final UserApi api = new UserApi();

    /**
     * Delete an email address from the currently authenticated user
     *
     * Delete an email address from the currently authenticated user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteV3UserEmailsEmailIdTest() throws ApiException {
        Integer emailId = null;
        api.deleteV3UserEmailsEmailId(emailId);
        // TODO: test validations
    }

    /**
     * Delete an SSH key from the currently authenticated user
     *
     * Delete an SSH key from the currently authenticated user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteV3UserKeysKeyIdTest() throws ApiException {
        Integer keyId = null;
        SSHKey response = api.deleteV3UserKeysKeyId(keyId);
        // TODO: test validations
    }

    /**
     * Get the currently authenticated user
     *
     * Get the currently authenticated user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getV3UserTest() throws ApiException {
        UserPublic response = api.getV3User();
        // TODO: test validations
    }

    /**
     * Get the currently authenticated user&#39;s email addresses
     *
     * Get the currently authenticated user&#39;s email addresses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getV3UserEmailsTest() throws ApiException {
        Email response = api.getV3UserEmails();
        // TODO: test validations
    }

    /**
     * Get a single email address owned by the currently authenticated user
     *
     * Get a single email address owned by the currently authenticated user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getV3UserEmailsEmailIdTest() throws ApiException {
        Integer emailId = null;
        Email response = api.getV3UserEmailsEmailId(emailId);
        // TODO: test validations
    }

    /**
     * Get the currently authenticated user&#39;s SSH keys
     *
     * Get the currently authenticated user&#39;s SSH keys
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getV3UserKeysTest() throws ApiException {
        SSHKey response = api.getV3UserKeys();
        // TODO: test validations
    }

    /**
     * Get a single key owned by currently authenticated user
     *
     * Get a single key owned by currently authenticated user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getV3UserKeysKeyIdTest() throws ApiException {
        Integer keyId = null;
        SSHKey response = api.getV3UserKeysKeyId(keyId);
        // TODO: test validations
    }

    /**
     * Add new email address to the currently authenticated user
     *
     * Add new email address to the currently authenticated user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postV3UserEmailsTest() throws ApiException {
        PostV3UserEmailsRequest postV3UserEmailsRequest = null;
        Email response = api.postV3UserEmails(postV3UserEmailsRequest);
        // TODO: test validations
    }

    /**
     * Add a new SSH key to the currently authenticated user
     *
     * Add a new SSH key to the currently authenticated user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postV3UserKeysTest() throws ApiException {
        PostV3UserKeysRequest postV3UserKeysRequest = null;
        SSHKey response = api.postV3UserKeys(postV3UserKeysRequest);
        // TODO: test validations
    }

}
