/*
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutV3ProjectsIdNotificationSettingsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:25:58.090268-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutV3ProjectsIdNotificationSettingsRequest {
  public static final String SERIALIZED_NAME_LEVEL = "level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private String level;

  public static final String SERIALIZED_NAME_NEW_NOTE = "new_note";
  @SerializedName(SERIALIZED_NAME_NEW_NOTE)
  private Boolean newNote;

  public static final String SERIALIZED_NAME_NEW_ISSUE = "new_issue";
  @SerializedName(SERIALIZED_NAME_NEW_ISSUE)
  private Boolean newIssue;

  public static final String SERIALIZED_NAME_REOPEN_ISSUE = "reopen_issue";
  @SerializedName(SERIALIZED_NAME_REOPEN_ISSUE)
  private Boolean reopenIssue;

  public static final String SERIALIZED_NAME_CLOSE_ISSUE = "close_issue";
  @SerializedName(SERIALIZED_NAME_CLOSE_ISSUE)
  private Boolean closeIssue;

  public static final String SERIALIZED_NAME_REASSIGN_ISSUE = "reassign_issue";
  @SerializedName(SERIALIZED_NAME_REASSIGN_ISSUE)
  private Boolean reassignIssue;

  public static final String SERIALIZED_NAME_NEW_MERGE_REQUEST = "new_merge_request";
  @SerializedName(SERIALIZED_NAME_NEW_MERGE_REQUEST)
  private Boolean newMergeRequest;

  public static final String SERIALIZED_NAME_REOPEN_MERGE_REQUEST = "reopen_merge_request";
  @SerializedName(SERIALIZED_NAME_REOPEN_MERGE_REQUEST)
  private Boolean reopenMergeRequest;

  public static final String SERIALIZED_NAME_CLOSE_MERGE_REQUEST = "close_merge_request";
  @SerializedName(SERIALIZED_NAME_CLOSE_MERGE_REQUEST)
  private Boolean closeMergeRequest;

  public static final String SERIALIZED_NAME_REASSIGN_MERGE_REQUEST = "reassign_merge_request";
  @SerializedName(SERIALIZED_NAME_REASSIGN_MERGE_REQUEST)
  private Boolean reassignMergeRequest;

  public static final String SERIALIZED_NAME_MERGE_MERGE_REQUEST = "merge_merge_request";
  @SerializedName(SERIALIZED_NAME_MERGE_MERGE_REQUEST)
  private Boolean mergeMergeRequest;

  public static final String SERIALIZED_NAME_FAILED_PIPELINE = "failed_pipeline";
  @SerializedName(SERIALIZED_NAME_FAILED_PIPELINE)
  private Boolean failedPipeline;

  public static final String SERIALIZED_NAME_SUCCESS_PIPELINE = "success_pipeline";
  @SerializedName(SERIALIZED_NAME_SUCCESS_PIPELINE)
  private Boolean successPipeline;

  public PutV3ProjectsIdNotificationSettingsRequest() {
  }

  public PutV3ProjectsIdNotificationSettingsRequest level(String level) {
    this.level = level;
    return this;
  }

  /**
   * The project notification level
   * @return level
   */
  @javax.annotation.Nullable
  public String getLevel() {
    return level;
  }

  public void setLevel(String level) {
    this.level = level;
  }


  public PutV3ProjectsIdNotificationSettingsRequest newNote(Boolean newNote) {
    this.newNote = newNote;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return newNote
   */
  @javax.annotation.Nullable
  public Boolean getNewNote() {
    return newNote;
  }

  public void setNewNote(Boolean newNote) {
    this.newNote = newNote;
  }


  public PutV3ProjectsIdNotificationSettingsRequest newIssue(Boolean newIssue) {
    this.newIssue = newIssue;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return newIssue
   */
  @javax.annotation.Nullable
  public Boolean getNewIssue() {
    return newIssue;
  }

  public void setNewIssue(Boolean newIssue) {
    this.newIssue = newIssue;
  }


  public PutV3ProjectsIdNotificationSettingsRequest reopenIssue(Boolean reopenIssue) {
    this.reopenIssue = reopenIssue;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return reopenIssue
   */
  @javax.annotation.Nullable
  public Boolean getReopenIssue() {
    return reopenIssue;
  }

  public void setReopenIssue(Boolean reopenIssue) {
    this.reopenIssue = reopenIssue;
  }


  public PutV3ProjectsIdNotificationSettingsRequest closeIssue(Boolean closeIssue) {
    this.closeIssue = closeIssue;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return closeIssue
   */
  @javax.annotation.Nullable
  public Boolean getCloseIssue() {
    return closeIssue;
  }

  public void setCloseIssue(Boolean closeIssue) {
    this.closeIssue = closeIssue;
  }


  public PutV3ProjectsIdNotificationSettingsRequest reassignIssue(Boolean reassignIssue) {
    this.reassignIssue = reassignIssue;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return reassignIssue
   */
  @javax.annotation.Nullable
  public Boolean getReassignIssue() {
    return reassignIssue;
  }

  public void setReassignIssue(Boolean reassignIssue) {
    this.reassignIssue = reassignIssue;
  }


  public PutV3ProjectsIdNotificationSettingsRequest newMergeRequest(Boolean newMergeRequest) {
    this.newMergeRequest = newMergeRequest;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return newMergeRequest
   */
  @javax.annotation.Nullable
  public Boolean getNewMergeRequest() {
    return newMergeRequest;
  }

  public void setNewMergeRequest(Boolean newMergeRequest) {
    this.newMergeRequest = newMergeRequest;
  }


  public PutV3ProjectsIdNotificationSettingsRequest reopenMergeRequest(Boolean reopenMergeRequest) {
    this.reopenMergeRequest = reopenMergeRequest;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return reopenMergeRequest
   */
  @javax.annotation.Nullable
  public Boolean getReopenMergeRequest() {
    return reopenMergeRequest;
  }

  public void setReopenMergeRequest(Boolean reopenMergeRequest) {
    this.reopenMergeRequest = reopenMergeRequest;
  }


  public PutV3ProjectsIdNotificationSettingsRequest closeMergeRequest(Boolean closeMergeRequest) {
    this.closeMergeRequest = closeMergeRequest;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return closeMergeRequest
   */
  @javax.annotation.Nullable
  public Boolean getCloseMergeRequest() {
    return closeMergeRequest;
  }

  public void setCloseMergeRequest(Boolean closeMergeRequest) {
    this.closeMergeRequest = closeMergeRequest;
  }


  public PutV3ProjectsIdNotificationSettingsRequest reassignMergeRequest(Boolean reassignMergeRequest) {
    this.reassignMergeRequest = reassignMergeRequest;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return reassignMergeRequest
   */
  @javax.annotation.Nullable
  public Boolean getReassignMergeRequest() {
    return reassignMergeRequest;
  }

  public void setReassignMergeRequest(Boolean reassignMergeRequest) {
    this.reassignMergeRequest = reassignMergeRequest;
  }


  public PutV3ProjectsIdNotificationSettingsRequest mergeMergeRequest(Boolean mergeMergeRequest) {
    this.mergeMergeRequest = mergeMergeRequest;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return mergeMergeRequest
   */
  @javax.annotation.Nullable
  public Boolean getMergeMergeRequest() {
    return mergeMergeRequest;
  }

  public void setMergeMergeRequest(Boolean mergeMergeRequest) {
    this.mergeMergeRequest = mergeMergeRequest;
  }


  public PutV3ProjectsIdNotificationSettingsRequest failedPipeline(Boolean failedPipeline) {
    this.failedPipeline = failedPipeline;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return failedPipeline
   */
  @javax.annotation.Nullable
  public Boolean getFailedPipeline() {
    return failedPipeline;
  }

  public void setFailedPipeline(Boolean failedPipeline) {
    this.failedPipeline = failedPipeline;
  }


  public PutV3ProjectsIdNotificationSettingsRequest successPipeline(Boolean successPipeline) {
    this.successPipeline = successPipeline;
    return this;
  }

  /**
   * Enable/disable this notification
   * @return successPipeline
   */
  @javax.annotation.Nullable
  public Boolean getSuccessPipeline() {
    return successPipeline;
  }

  public void setSuccessPipeline(Boolean successPipeline) {
    this.successPipeline = successPipeline;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutV3ProjectsIdNotificationSettingsRequest putV3ProjectsIdNotificationSettingsRequest = (PutV3ProjectsIdNotificationSettingsRequest) o;
    return Objects.equals(this.level, putV3ProjectsIdNotificationSettingsRequest.level) &&
        Objects.equals(this.newNote, putV3ProjectsIdNotificationSettingsRequest.newNote) &&
        Objects.equals(this.newIssue, putV3ProjectsIdNotificationSettingsRequest.newIssue) &&
        Objects.equals(this.reopenIssue, putV3ProjectsIdNotificationSettingsRequest.reopenIssue) &&
        Objects.equals(this.closeIssue, putV3ProjectsIdNotificationSettingsRequest.closeIssue) &&
        Objects.equals(this.reassignIssue, putV3ProjectsIdNotificationSettingsRequest.reassignIssue) &&
        Objects.equals(this.newMergeRequest, putV3ProjectsIdNotificationSettingsRequest.newMergeRequest) &&
        Objects.equals(this.reopenMergeRequest, putV3ProjectsIdNotificationSettingsRequest.reopenMergeRequest) &&
        Objects.equals(this.closeMergeRequest, putV3ProjectsIdNotificationSettingsRequest.closeMergeRequest) &&
        Objects.equals(this.reassignMergeRequest, putV3ProjectsIdNotificationSettingsRequest.reassignMergeRequest) &&
        Objects.equals(this.mergeMergeRequest, putV3ProjectsIdNotificationSettingsRequest.mergeMergeRequest) &&
        Objects.equals(this.failedPipeline, putV3ProjectsIdNotificationSettingsRequest.failedPipeline) &&
        Objects.equals(this.successPipeline, putV3ProjectsIdNotificationSettingsRequest.successPipeline);
  }

  @Override
  public int hashCode() {
    return Objects.hash(level, newNote, newIssue, reopenIssue, closeIssue, reassignIssue, newMergeRequest, reopenMergeRequest, closeMergeRequest, reassignMergeRequest, mergeMergeRequest, failedPipeline, successPipeline);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutV3ProjectsIdNotificationSettingsRequest {\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    newNote: ").append(toIndentedString(newNote)).append("\n");
    sb.append("    newIssue: ").append(toIndentedString(newIssue)).append("\n");
    sb.append("    reopenIssue: ").append(toIndentedString(reopenIssue)).append("\n");
    sb.append("    closeIssue: ").append(toIndentedString(closeIssue)).append("\n");
    sb.append("    reassignIssue: ").append(toIndentedString(reassignIssue)).append("\n");
    sb.append("    newMergeRequest: ").append(toIndentedString(newMergeRequest)).append("\n");
    sb.append("    reopenMergeRequest: ").append(toIndentedString(reopenMergeRequest)).append("\n");
    sb.append("    closeMergeRequest: ").append(toIndentedString(closeMergeRequest)).append("\n");
    sb.append("    reassignMergeRequest: ").append(toIndentedString(reassignMergeRequest)).append("\n");
    sb.append("    mergeMergeRequest: ").append(toIndentedString(mergeMergeRequest)).append("\n");
    sb.append("    failedPipeline: ").append(toIndentedString(failedPipeline)).append("\n");
    sb.append("    successPipeline: ").append(toIndentedString(successPipeline)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("level");
    openapiFields.add("new_note");
    openapiFields.add("new_issue");
    openapiFields.add("reopen_issue");
    openapiFields.add("close_issue");
    openapiFields.add("reassign_issue");
    openapiFields.add("new_merge_request");
    openapiFields.add("reopen_merge_request");
    openapiFields.add("close_merge_request");
    openapiFields.add("reassign_merge_request");
    openapiFields.add("merge_merge_request");
    openapiFields.add("failed_pipeline");
    openapiFields.add("success_pipeline");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutV3ProjectsIdNotificationSettingsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutV3ProjectsIdNotificationSettingsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutV3ProjectsIdNotificationSettingsRequest is not found in the empty JSON string", PutV3ProjectsIdNotificationSettingsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutV3ProjectsIdNotificationSettingsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutV3ProjectsIdNotificationSettingsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("level") != null && !jsonObj.get("level").isJsonNull()) && !jsonObj.get("level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("level").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutV3ProjectsIdNotificationSettingsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutV3ProjectsIdNotificationSettingsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutV3ProjectsIdNotificationSettingsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutV3ProjectsIdNotificationSettingsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PutV3ProjectsIdNotificationSettingsRequest>() {
           @Override
           public void write(JsonWriter out, PutV3ProjectsIdNotificationSettingsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutV3ProjectsIdNotificationSettingsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutV3ProjectsIdNotificationSettingsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutV3ProjectsIdNotificationSettingsRequest
   * @throws IOException if the JSON string is invalid with respect to PutV3ProjectsIdNotificationSettingsRequest
   */
  public static PutV3ProjectsIdNotificationSettingsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutV3ProjectsIdNotificationSettingsRequest.class);
  }

  /**
   * Convert an instance of PutV3ProjectsIdNotificationSettingsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

