# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Hook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, enable_ssl_verification: str=None, id: str=None, push_events: str=None, tag_push_events: str=None, url: str=None):
        """Hook - a model defined in OpenAPI

        :param created_at: The created_at of this Hook.
        :param enable_ssl_verification: The enable_ssl_verification of this Hook.
        :param id: The id of this Hook.
        :param push_events: The push_events of this Hook.
        :param tag_push_events: The tag_push_events of this Hook.
        :param url: The url of this Hook.
        """
        self.openapi_types = {
            'created_at': str,
            'enable_ssl_verification': str,
            'id': str,
            'push_events': str,
            'tag_push_events': str,
            'url': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'enable_ssl_verification': 'enable_ssl_verification',
            'id': 'id',
            'push_events': 'push_events',
            'tag_push_events': 'tag_push_events',
            'url': 'url'
        }

        self._created_at = created_at
        self._enable_ssl_verification = enable_ssl_verification
        self._id = id
        self._push_events = push_events
        self._tag_push_events = tag_push_events
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hook of this Hook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Hook.


        :return: The created_at of this Hook.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Hook.


        :param created_at: The created_at of this Hook.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def enable_ssl_verification(self):
        """Gets the enable_ssl_verification of this Hook.


        :return: The enable_ssl_verification of this Hook.
        :rtype: str
        """
        return self._enable_ssl_verification

    @enable_ssl_verification.setter
    def enable_ssl_verification(self, enable_ssl_verification):
        """Sets the enable_ssl_verification of this Hook.


        :param enable_ssl_verification: The enable_ssl_verification of this Hook.
        :type enable_ssl_verification: str
        """

        self._enable_ssl_verification = enable_ssl_verification

    @property
    def id(self):
        """Gets the id of this Hook.


        :return: The id of this Hook.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Hook.


        :param id: The id of this Hook.
        :type id: str
        """

        self._id = id

    @property
    def push_events(self):
        """Gets the push_events of this Hook.


        :return: The push_events of this Hook.
        :rtype: str
        """
        return self._push_events

    @push_events.setter
    def push_events(self, push_events):
        """Sets the push_events of this Hook.


        :param push_events: The push_events of this Hook.
        :type push_events: str
        """

        self._push_events = push_events

    @property
    def tag_push_events(self):
        """Gets the tag_push_events of this Hook.


        :return: The tag_push_events of this Hook.
        :rtype: str
        """
        return self._tag_push_events

    @tag_push_events.setter
    def tag_push_events(self, tag_push_events):
        """Sets the tag_push_events of this Hook.


        :param tag_push_events: The tag_push_events of this Hook.
        :type tag_push_events: str
        """

        self._tag_push_events = tag_push_events

    @property
    def url(self):
        """Gets the url of this Hook.


        :return: The url of this Hook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Hook.


        :param url: The url of this Hook.
        :type url: str
        """

        self._url = url
