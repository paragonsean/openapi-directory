# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repo_commit import RepoCommit
from openapi_server.models.repo_diff import RepoDiff
from openapi_server import util


class Compare(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commit: RepoCommit=None, commits: RepoCommit=None, compare_same_ref: str=None, compare_timeout: str=None, diffs: RepoDiff=None):
        """Compare - a model defined in OpenAPI

        :param commit: The commit of this Compare.
        :param commits: The commits of this Compare.
        :param compare_same_ref: The compare_same_ref of this Compare.
        :param compare_timeout: The compare_timeout of this Compare.
        :param diffs: The diffs of this Compare.
        """
        self.openapi_types = {
            'commit': RepoCommit,
            'commits': RepoCommit,
            'compare_same_ref': str,
            'compare_timeout': str,
            'diffs': RepoDiff
        }

        self.attribute_map = {
            'commit': 'commit',
            'commits': 'commits',
            'compare_same_ref': 'compare_same_ref',
            'compare_timeout': 'compare_timeout',
            'diffs': 'diffs'
        }

        self._commit = commit
        self._commits = commits
        self._compare_same_ref = compare_same_ref
        self._compare_timeout = compare_timeout
        self._diffs = diffs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Compare':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Compare of this Compare.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit(self):
        """Gets the commit of this Compare.


        :return: The commit of this Compare.
        :rtype: RepoCommit
        """
        return self._commit

    @commit.setter
    def commit(self, commit):
        """Sets the commit of this Compare.


        :param commit: The commit of this Compare.
        :type commit: RepoCommit
        """

        self._commit = commit

    @property
    def commits(self):
        """Gets the commits of this Compare.


        :return: The commits of this Compare.
        :rtype: RepoCommit
        """
        return self._commits

    @commits.setter
    def commits(self, commits):
        """Sets the commits of this Compare.


        :param commits: The commits of this Compare.
        :type commits: RepoCommit
        """

        self._commits = commits

    @property
    def compare_same_ref(self):
        """Gets the compare_same_ref of this Compare.


        :return: The compare_same_ref of this Compare.
        :rtype: str
        """
        return self._compare_same_ref

    @compare_same_ref.setter
    def compare_same_ref(self, compare_same_ref):
        """Sets the compare_same_ref of this Compare.


        :param compare_same_ref: The compare_same_ref of this Compare.
        :type compare_same_ref: str
        """

        self._compare_same_ref = compare_same_ref

    @property
    def compare_timeout(self):
        """Gets the compare_timeout of this Compare.


        :return: The compare_timeout of this Compare.
        :rtype: str
        """
        return self._compare_timeout

    @compare_timeout.setter
    def compare_timeout(self, compare_timeout):
        """Sets the compare_timeout of this Compare.


        :param compare_timeout: The compare_timeout of this Compare.
        :type compare_timeout: str
        """

        self._compare_timeout = compare_timeout

    @property
    def diffs(self):
        """Gets the diffs of this Compare.


        :return: The diffs of this Compare.
        :rtype: RepoDiff
        """
        return self._diffs

    @diffs.setter
    def diffs(self, diffs):
        """Sets the diffs of this Compare.


        :param diffs: The diffs of this Compare.
        :type diffs: RepoDiff
        """

        self._diffs = diffs
