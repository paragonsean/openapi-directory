# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccessRequester(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar_url: str=None, id: str=None, name: str=None, requested_at: str=None, state: str=None, username: str=None, web_url: str=None):
        """AccessRequester - a model defined in OpenAPI

        :param avatar_url: The avatar_url of this AccessRequester.
        :param id: The id of this AccessRequester.
        :param name: The name of this AccessRequester.
        :param requested_at: The requested_at of this AccessRequester.
        :param state: The state of this AccessRequester.
        :param username: The username of this AccessRequester.
        :param web_url: The web_url of this AccessRequester.
        """
        self.openapi_types = {
            'avatar_url': str,
            'id': str,
            'name': str,
            'requested_at': str,
            'state': str,
            'username': str,
            'web_url': str
        }

        self.attribute_map = {
            'avatar_url': 'avatar_url',
            'id': 'id',
            'name': 'name',
            'requested_at': 'requested_at',
            'state': 'state',
            'username': 'username',
            'web_url': 'web_url'
        }

        self._avatar_url = avatar_url
        self._id = id
        self._name = name
        self._requested_at = requested_at
        self._state = state
        self._username = username
        self._web_url = web_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessRequester':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessRequester of this AccessRequester.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar_url(self):
        """Gets the avatar_url of this AccessRequester.


        :return: The avatar_url of this AccessRequester.
        :rtype: str
        """
        return self._avatar_url

    @avatar_url.setter
    def avatar_url(self, avatar_url):
        """Sets the avatar_url of this AccessRequester.


        :param avatar_url: The avatar_url of this AccessRequester.
        :type avatar_url: str
        """

        self._avatar_url = avatar_url

    @property
    def id(self):
        """Gets the id of this AccessRequester.


        :return: The id of this AccessRequester.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AccessRequester.


        :param id: The id of this AccessRequester.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this AccessRequester.


        :return: The name of this AccessRequester.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AccessRequester.


        :param name: The name of this AccessRequester.
        :type name: str
        """

        self._name = name

    @property
    def requested_at(self):
        """Gets the requested_at of this AccessRequester.


        :return: The requested_at of this AccessRequester.
        :rtype: str
        """
        return self._requested_at

    @requested_at.setter
    def requested_at(self, requested_at):
        """Sets the requested_at of this AccessRequester.


        :param requested_at: The requested_at of this AccessRequester.
        :type requested_at: str
        """

        self._requested_at = requested_at

    @property
    def state(self):
        """Gets the state of this AccessRequester.


        :return: The state of this AccessRequester.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this AccessRequester.


        :param state: The state of this AccessRequester.
        :type state: str
        """

        self._state = state

    @property
    def username(self):
        """Gets the username of this AccessRequester.


        :return: The username of this AccessRequester.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this AccessRequester.


        :param username: The username of this AccessRequester.
        :type username: str
        """

        self._username = username

    @property
    def web_url(self):
        """Gets the web_url of this AccessRequester.


        :return: The web_url of this AccessRequester.
        :rtype: str
        """
        return self._web_url

    @web_url.setter
    def web_url(self, web_url):
        """Sets the web_url of this AccessRequester.


        :param web_url: The web_url of this AccessRequester.
        :type web_url: str
        """

        self._web_url = web_url
