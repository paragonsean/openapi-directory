# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repo_commit import RepoCommit
from openapi_server.models.repo_diff import RepoDiff
from openapi_server import util


class MergeRequestDiffFull(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_commit_sha: str=None, commits: RepoCommit=None, created_at: str=None, diffs: RepoDiff=None, head_commit_sha: str=None, id: str=None, merge_request_id: str=None, real_size: str=None, start_commit_sha: str=None, state: str=None):
        """MergeRequestDiffFull - a model defined in OpenAPI

        :param base_commit_sha: The base_commit_sha of this MergeRequestDiffFull.
        :param commits: The commits of this MergeRequestDiffFull.
        :param created_at: The created_at of this MergeRequestDiffFull.
        :param diffs: The diffs of this MergeRequestDiffFull.
        :param head_commit_sha: The head_commit_sha of this MergeRequestDiffFull.
        :param id: The id of this MergeRequestDiffFull.
        :param merge_request_id: The merge_request_id of this MergeRequestDiffFull.
        :param real_size: The real_size of this MergeRequestDiffFull.
        :param start_commit_sha: The start_commit_sha of this MergeRequestDiffFull.
        :param state: The state of this MergeRequestDiffFull.
        """
        self.openapi_types = {
            'base_commit_sha': str,
            'commits': RepoCommit,
            'created_at': str,
            'diffs': RepoDiff,
            'head_commit_sha': str,
            'id': str,
            'merge_request_id': str,
            'real_size': str,
            'start_commit_sha': str,
            'state': str
        }

        self.attribute_map = {
            'base_commit_sha': 'base_commit_sha',
            'commits': 'commits',
            'created_at': 'created_at',
            'diffs': 'diffs',
            'head_commit_sha': 'head_commit_sha',
            'id': 'id',
            'merge_request_id': 'merge_request_id',
            'real_size': 'real_size',
            'start_commit_sha': 'start_commit_sha',
            'state': 'state'
        }

        self._base_commit_sha = base_commit_sha
        self._commits = commits
        self._created_at = created_at
        self._diffs = diffs
        self._head_commit_sha = head_commit_sha
        self._id = id
        self._merge_request_id = merge_request_id
        self._real_size = real_size
        self._start_commit_sha = start_commit_sha
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MergeRequestDiffFull':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MergeRequestDiffFull of this MergeRequestDiffFull.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_commit_sha(self):
        """Gets the base_commit_sha of this MergeRequestDiffFull.


        :return: The base_commit_sha of this MergeRequestDiffFull.
        :rtype: str
        """
        return self._base_commit_sha

    @base_commit_sha.setter
    def base_commit_sha(self, base_commit_sha):
        """Sets the base_commit_sha of this MergeRequestDiffFull.


        :param base_commit_sha: The base_commit_sha of this MergeRequestDiffFull.
        :type base_commit_sha: str
        """

        self._base_commit_sha = base_commit_sha

    @property
    def commits(self):
        """Gets the commits of this MergeRequestDiffFull.


        :return: The commits of this MergeRequestDiffFull.
        :rtype: RepoCommit
        """
        return self._commits

    @commits.setter
    def commits(self, commits):
        """Sets the commits of this MergeRequestDiffFull.


        :param commits: The commits of this MergeRequestDiffFull.
        :type commits: RepoCommit
        """

        self._commits = commits

    @property
    def created_at(self):
        """Gets the created_at of this MergeRequestDiffFull.


        :return: The created_at of this MergeRequestDiffFull.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this MergeRequestDiffFull.


        :param created_at: The created_at of this MergeRequestDiffFull.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def diffs(self):
        """Gets the diffs of this MergeRequestDiffFull.


        :return: The diffs of this MergeRequestDiffFull.
        :rtype: RepoDiff
        """
        return self._diffs

    @diffs.setter
    def diffs(self, diffs):
        """Sets the diffs of this MergeRequestDiffFull.


        :param diffs: The diffs of this MergeRequestDiffFull.
        :type diffs: RepoDiff
        """

        self._diffs = diffs

    @property
    def head_commit_sha(self):
        """Gets the head_commit_sha of this MergeRequestDiffFull.


        :return: The head_commit_sha of this MergeRequestDiffFull.
        :rtype: str
        """
        return self._head_commit_sha

    @head_commit_sha.setter
    def head_commit_sha(self, head_commit_sha):
        """Sets the head_commit_sha of this MergeRequestDiffFull.


        :param head_commit_sha: The head_commit_sha of this MergeRequestDiffFull.
        :type head_commit_sha: str
        """

        self._head_commit_sha = head_commit_sha

    @property
    def id(self):
        """Gets the id of this MergeRequestDiffFull.


        :return: The id of this MergeRequestDiffFull.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MergeRequestDiffFull.


        :param id: The id of this MergeRequestDiffFull.
        :type id: str
        """

        self._id = id

    @property
    def merge_request_id(self):
        """Gets the merge_request_id of this MergeRequestDiffFull.


        :return: The merge_request_id of this MergeRequestDiffFull.
        :rtype: str
        """
        return self._merge_request_id

    @merge_request_id.setter
    def merge_request_id(self, merge_request_id):
        """Sets the merge_request_id of this MergeRequestDiffFull.


        :param merge_request_id: The merge_request_id of this MergeRequestDiffFull.
        :type merge_request_id: str
        """

        self._merge_request_id = merge_request_id

    @property
    def real_size(self):
        """Gets the real_size of this MergeRequestDiffFull.


        :return: The real_size of this MergeRequestDiffFull.
        :rtype: str
        """
        return self._real_size

    @real_size.setter
    def real_size(self, real_size):
        """Sets the real_size of this MergeRequestDiffFull.


        :param real_size: The real_size of this MergeRequestDiffFull.
        :type real_size: str
        """

        self._real_size = real_size

    @property
    def start_commit_sha(self):
        """Gets the start_commit_sha of this MergeRequestDiffFull.


        :return: The start_commit_sha of this MergeRequestDiffFull.
        :rtype: str
        """
        return self._start_commit_sha

    @start_commit_sha.setter
    def start_commit_sha(self, start_commit_sha):
        """Sets the start_commit_sha of this MergeRequestDiffFull.


        :param start_commit_sha: The start_commit_sha of this MergeRequestDiffFull.
        :type start_commit_sha: str
        """

        self._start_commit_sha = start_commit_sha

    @property
    def state(self):
        """Gets the state of this MergeRequestDiffFull.


        :return: The state of this MergeRequestDiffFull.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this MergeRequestDiffFull.


        :param state: The state of this MergeRequestDiffFull.
        :type state: str
        """

        self._state = state
