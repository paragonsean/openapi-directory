# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build import Build
from openapi_server.models.environment_basic import EnvironmentBasic
from openapi_server.models.user_basic import UserBasic
from openapi_server import util


class Deployment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, deployable: Build=None, environment: EnvironmentBasic=None, id: str=None, iid: str=None, ref: str=None, sha: str=None, user: UserBasic=None):
        """Deployment - a model defined in OpenAPI

        :param created_at: The created_at of this Deployment.
        :param deployable: The deployable of this Deployment.
        :param environment: The environment of this Deployment.
        :param id: The id of this Deployment.
        :param iid: The iid of this Deployment.
        :param ref: The ref of this Deployment.
        :param sha: The sha of this Deployment.
        :param user: The user of this Deployment.
        """
        self.openapi_types = {
            'created_at': str,
            'deployable': Build,
            'environment': EnvironmentBasic,
            'id': str,
            'iid': str,
            'ref': str,
            'sha': str,
            'user': UserBasic
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'deployable': 'deployable',
            'environment': 'environment',
            'id': 'id',
            'iid': 'iid',
            'ref': 'ref',
            'sha': 'sha',
            'user': 'user'
        }

        self._created_at = created_at
        self._deployable = deployable
        self._environment = environment
        self._id = id
        self._iid = iid
        self._ref = ref
        self._sha = sha
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Deployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Deployment of this Deployment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Deployment.


        :return: The created_at of this Deployment.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Deployment.


        :param created_at: The created_at of this Deployment.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def deployable(self):
        """Gets the deployable of this Deployment.


        :return: The deployable of this Deployment.
        :rtype: Build
        """
        return self._deployable

    @deployable.setter
    def deployable(self, deployable):
        """Sets the deployable of this Deployment.


        :param deployable: The deployable of this Deployment.
        :type deployable: Build
        """

        self._deployable = deployable

    @property
    def environment(self):
        """Gets the environment of this Deployment.


        :return: The environment of this Deployment.
        :rtype: EnvironmentBasic
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this Deployment.


        :param environment: The environment of this Deployment.
        :type environment: EnvironmentBasic
        """

        self._environment = environment

    @property
    def id(self):
        """Gets the id of this Deployment.


        :return: The id of this Deployment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Deployment.


        :param id: The id of this Deployment.
        :type id: str
        """

        self._id = id

    @property
    def iid(self):
        """Gets the iid of this Deployment.


        :return: The iid of this Deployment.
        :rtype: str
        """
        return self._iid

    @iid.setter
    def iid(self, iid):
        """Sets the iid of this Deployment.


        :param iid: The iid of this Deployment.
        :type iid: str
        """

        self._iid = iid

    @property
    def ref(self):
        """Gets the ref of this Deployment.


        :return: The ref of this Deployment.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this Deployment.


        :param ref: The ref of this Deployment.
        :type ref: str
        """

        self._ref = ref

    @property
    def sha(self):
        """Gets the sha of this Deployment.


        :return: The sha of this Deployment.
        :rtype: str
        """
        return self._sha

    @sha.setter
    def sha(self, sha):
        """Sets the sha of this Deployment.


        :param sha: The sha of this Deployment.
        :type sha: str
        """

        self._sha = sha

    @property
    def user(self):
        """Gets the user of this Deployment.


        :return: The user of this Deployment.
        :rtype: UserBasic
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Deployment.


        :param user: The user of this Deployment.
        :type user: UserBasic
        """

        self._user = user
