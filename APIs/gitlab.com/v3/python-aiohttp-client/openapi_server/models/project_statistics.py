# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_artifacts_size: str=None, commit_count: str=None, lfs_objects_size: str=None, repository_size: str=None, storage_size: str=None):
        """ProjectStatistics - a model defined in OpenAPI

        :param build_artifacts_size: The build_artifacts_size of this ProjectStatistics.
        :param commit_count: The commit_count of this ProjectStatistics.
        :param lfs_objects_size: The lfs_objects_size of this ProjectStatistics.
        :param repository_size: The repository_size of this ProjectStatistics.
        :param storage_size: The storage_size of this ProjectStatistics.
        """
        self.openapi_types = {
            'build_artifacts_size': str,
            'commit_count': str,
            'lfs_objects_size': str,
            'repository_size': str,
            'storage_size': str
        }

        self.attribute_map = {
            'build_artifacts_size': 'build_artifacts_size',
            'commit_count': 'commit_count',
            'lfs_objects_size': 'lfs_objects_size',
            'repository_size': 'repository_size',
            'storage_size': 'storage_size'
        }

        self._build_artifacts_size = build_artifacts_size
        self._commit_count = commit_count
        self._lfs_objects_size = lfs_objects_size
        self._repository_size = repository_size
        self._storage_size = storage_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectStatistics of this ProjectStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_artifacts_size(self):
        """Gets the build_artifacts_size of this ProjectStatistics.


        :return: The build_artifacts_size of this ProjectStatistics.
        :rtype: str
        """
        return self._build_artifacts_size

    @build_artifacts_size.setter
    def build_artifacts_size(self, build_artifacts_size):
        """Sets the build_artifacts_size of this ProjectStatistics.


        :param build_artifacts_size: The build_artifacts_size of this ProjectStatistics.
        :type build_artifacts_size: str
        """

        self._build_artifacts_size = build_artifacts_size

    @property
    def commit_count(self):
        """Gets the commit_count of this ProjectStatistics.


        :return: The commit_count of this ProjectStatistics.
        :rtype: str
        """
        return self._commit_count

    @commit_count.setter
    def commit_count(self, commit_count):
        """Sets the commit_count of this ProjectStatistics.


        :param commit_count: The commit_count of this ProjectStatistics.
        :type commit_count: str
        """

        self._commit_count = commit_count

    @property
    def lfs_objects_size(self):
        """Gets the lfs_objects_size of this ProjectStatistics.


        :return: The lfs_objects_size of this ProjectStatistics.
        :rtype: str
        """
        return self._lfs_objects_size

    @lfs_objects_size.setter
    def lfs_objects_size(self, lfs_objects_size):
        """Sets the lfs_objects_size of this ProjectStatistics.


        :param lfs_objects_size: The lfs_objects_size of this ProjectStatistics.
        :type lfs_objects_size: str
        """

        self._lfs_objects_size = lfs_objects_size

    @property
    def repository_size(self):
        """Gets the repository_size of this ProjectStatistics.


        :return: The repository_size of this ProjectStatistics.
        :rtype: str
        """
        return self._repository_size

    @repository_size.setter
    def repository_size(self, repository_size):
        """Sets the repository_size of this ProjectStatistics.


        :param repository_size: The repository_size of this ProjectStatistics.
        :type repository_size: str
        """

        self._repository_size = repository_size

    @property
    def storage_size(self):
        """Gets the storage_size of this ProjectStatistics.


        :return: The storage_size of this ProjectStatistics.
        :rtype: str
        """
        return self._storage_size

    @storage_size.setter
    def storage_size(self, storage_size):
        """Sets the storage_size of this ProjectStatistics.


        :param storage_size: The storage_size of this ProjectStatistics.
        :type storage_size: str
        """

        self._storage_size = storage_size
