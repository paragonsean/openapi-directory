# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar_url: str=None, bio: str=None, created_at: str=None, id: str=None, is_admin: str=None, linkedin: str=None, location: str=None, name: str=None, organization: str=None, skype: str=None, state: str=None, twitter: str=None, username: str=None, web_url: str=None, website_url: str=None):
        """User - a model defined in OpenAPI

        :param avatar_url: The avatar_url of this User.
        :param bio: The bio of this User.
        :param created_at: The created_at of this User.
        :param id: The id of this User.
        :param is_admin: The is_admin of this User.
        :param linkedin: The linkedin of this User.
        :param location: The location of this User.
        :param name: The name of this User.
        :param organization: The organization of this User.
        :param skype: The skype of this User.
        :param state: The state of this User.
        :param twitter: The twitter of this User.
        :param username: The username of this User.
        :param web_url: The web_url of this User.
        :param website_url: The website_url of this User.
        """
        self.openapi_types = {
            'avatar_url': str,
            'bio': str,
            'created_at': str,
            'id': str,
            'is_admin': str,
            'linkedin': str,
            'location': str,
            'name': str,
            'organization': str,
            'skype': str,
            'state': str,
            'twitter': str,
            'username': str,
            'web_url': str,
            'website_url': str
        }

        self.attribute_map = {
            'avatar_url': 'avatar_url',
            'bio': 'bio',
            'created_at': 'created_at',
            'id': 'id',
            'is_admin': 'is_admin',
            'linkedin': 'linkedin',
            'location': 'location',
            'name': 'name',
            'organization': 'organization',
            'skype': 'skype',
            'state': 'state',
            'twitter': 'twitter',
            'username': 'username',
            'web_url': 'web_url',
            'website_url': 'website_url'
        }

        self._avatar_url = avatar_url
        self._bio = bio
        self._created_at = created_at
        self._id = id
        self._is_admin = is_admin
        self._linkedin = linkedin
        self._location = location
        self._name = name
        self._organization = organization
        self._skype = skype
        self._state = state
        self._twitter = twitter
        self._username = username
        self._web_url = web_url
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar_url(self):
        """Gets the avatar_url of this User.


        :return: The avatar_url of this User.
        :rtype: str
        """
        return self._avatar_url

    @avatar_url.setter
    def avatar_url(self, avatar_url):
        """Sets the avatar_url of this User.


        :param avatar_url: The avatar_url of this User.
        :type avatar_url: str
        """

        self._avatar_url = avatar_url

    @property
    def bio(self):
        """Gets the bio of this User.


        :return: The bio of this User.
        :rtype: str
        """
        return self._bio

    @bio.setter
    def bio(self, bio):
        """Sets the bio of this User.


        :param bio: The bio of this User.
        :type bio: str
        """

        self._bio = bio

    @property
    def created_at(self):
        """Gets the created_at of this User.


        :return: The created_at of this User.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this User.


        :param created_at: The created_at of this User.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: str
        """

        self._id = id

    @property
    def is_admin(self):
        """Gets the is_admin of this User.


        :return: The is_admin of this User.
        :rtype: str
        """
        return self._is_admin

    @is_admin.setter
    def is_admin(self, is_admin):
        """Sets the is_admin of this User.


        :param is_admin: The is_admin of this User.
        :type is_admin: str
        """

        self._is_admin = is_admin

    @property
    def linkedin(self):
        """Gets the linkedin of this User.


        :return: The linkedin of this User.
        :rtype: str
        """
        return self._linkedin

    @linkedin.setter
    def linkedin(self, linkedin):
        """Sets the linkedin of this User.


        :param linkedin: The linkedin of this User.
        :type linkedin: str
        """

        self._linkedin = linkedin

    @property
    def location(self):
        """Gets the location of this User.


        :return: The location of this User.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this User.


        :param location: The location of this User.
        :type location: str
        """

        self._location = location

    @property
    def name(self):
        """Gets the name of this User.


        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this User.


        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def organization(self):
        """Gets the organization of this User.


        :return: The organization of this User.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this User.


        :param organization: The organization of this User.
        :type organization: str
        """

        self._organization = organization

    @property
    def skype(self):
        """Gets the skype of this User.


        :return: The skype of this User.
        :rtype: str
        """
        return self._skype

    @skype.setter
    def skype(self, skype):
        """Sets the skype of this User.


        :param skype: The skype of this User.
        :type skype: str
        """

        self._skype = skype

    @property
    def state(self):
        """Gets the state of this User.


        :return: The state of this User.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this User.


        :param state: The state of this User.
        :type state: str
        """

        self._state = state

    @property
    def twitter(self):
        """Gets the twitter of this User.


        :return: The twitter of this User.
        :rtype: str
        """
        return self._twitter

    @twitter.setter
    def twitter(self, twitter):
        """Sets the twitter of this User.


        :param twitter: The twitter of this User.
        :type twitter: str
        """

        self._twitter = twitter

    @property
    def username(self):
        """Gets the username of this User.


        :return: The username of this User.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this User.


        :param username: The username of this User.
        :type username: str
        """

        self._username = username

    @property
    def web_url(self):
        """Gets the web_url of this User.


        :return: The web_url of this User.
        :rtype: str
        """
        return self._web_url

    @web_url.setter
    def web_url(self, web_url):
        """Sets the web_url of this User.


        :param web_url: The web_url of this User.
        :type web_url: str
        """

        self._web_url = web_url

    @property
    def website_url(self):
        """Gets the website_url of this User.


        :return: The website_url of this User.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this User.


        :param website_url: The website_url of this User.
        :type website_url: str
        """

        self._website_url = website_url
