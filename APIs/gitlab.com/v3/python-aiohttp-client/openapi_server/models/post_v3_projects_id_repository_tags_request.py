# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostV3ProjectsIdRepositoryTagsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tag_name: str=None, ref: str=None, message: str=None, release_description: str=None):
        """PostV3ProjectsIdRepositoryTagsRequest - a model defined in OpenAPI

        :param tag_name: The tag_name of this PostV3ProjectsIdRepositoryTagsRequest.
        :param ref: The ref of this PostV3ProjectsIdRepositoryTagsRequest.
        :param message: The message of this PostV3ProjectsIdRepositoryTagsRequest.
        :param release_description: The release_description of this PostV3ProjectsIdRepositoryTagsRequest.
        """
        self.openapi_types = {
            'tag_name': str,
            'ref': str,
            'message': str,
            'release_description': str
        }

        self.attribute_map = {
            'tag_name': 'tag_name',
            'ref': 'ref',
            'message': 'message',
            'release_description': 'release_description'
        }

        self._tag_name = tag_name
        self._ref = ref
        self._message = message
        self._release_description = release_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostV3ProjectsIdRepositoryTagsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The postV3ProjectsIdRepositoryTags_request of this PostV3ProjectsIdRepositoryTagsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag_name(self):
        """Gets the tag_name of this PostV3ProjectsIdRepositoryTagsRequest.

        The name of the tag

        :return: The tag_name of this PostV3ProjectsIdRepositoryTagsRequest.
        :rtype: str
        """
        return self._tag_name

    @tag_name.setter
    def tag_name(self, tag_name):
        """Sets the tag_name of this PostV3ProjectsIdRepositoryTagsRequest.

        The name of the tag

        :param tag_name: The tag_name of this PostV3ProjectsIdRepositoryTagsRequest.
        :type tag_name: str
        """
        if tag_name is None:
            raise ValueError("Invalid value for `tag_name`, must not be `None`")

        self._tag_name = tag_name

    @property
    def ref(self):
        """Gets the ref of this PostV3ProjectsIdRepositoryTagsRequest.

        The commit sha or branch name

        :return: The ref of this PostV3ProjectsIdRepositoryTagsRequest.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this PostV3ProjectsIdRepositoryTagsRequest.

        The commit sha or branch name

        :param ref: The ref of this PostV3ProjectsIdRepositoryTagsRequest.
        :type ref: str
        """
        if ref is None:
            raise ValueError("Invalid value for `ref`, must not be `None`")

        self._ref = ref

    @property
    def message(self):
        """Gets the message of this PostV3ProjectsIdRepositoryTagsRequest.

        Specifying a message creates an annotated tag

        :return: The message of this PostV3ProjectsIdRepositoryTagsRequest.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this PostV3ProjectsIdRepositoryTagsRequest.

        Specifying a message creates an annotated tag

        :param message: The message of this PostV3ProjectsIdRepositoryTagsRequest.
        :type message: str
        """

        self._message = message

    @property
    def release_description(self):
        """Gets the release_description of this PostV3ProjectsIdRepositoryTagsRequest.

        Specifying release notes stored in the GitLab database

        :return: The release_description of this PostV3ProjectsIdRepositoryTagsRequest.
        :rtype: str
        """
        return self._release_description

    @release_description.setter
    def release_description(self, release_description):
        """Sets the release_description of this PostV3ProjectsIdRepositoryTagsRequest.

        Specifying release notes stored in the GitLab database

        :param release_description: The release_description of this PostV3ProjectsIdRepositoryTagsRequest.
        :type release_description: str
        """

        self._release_description = release_description
