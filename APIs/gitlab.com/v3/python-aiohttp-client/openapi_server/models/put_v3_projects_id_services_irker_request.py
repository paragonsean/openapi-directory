# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutV3ProjectsIdServicesIrkerRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recipients: str=None, default_irc_uri: str=None, server_host: str=None, server_port: int=None, colorize_messages: bool=None, push_events: str=None):
        """PutV3ProjectsIdServicesIrkerRequest - a model defined in OpenAPI

        :param recipients: The recipients of this PutV3ProjectsIdServicesIrkerRequest.
        :param default_irc_uri: The default_irc_uri of this PutV3ProjectsIdServicesIrkerRequest.
        :param server_host: The server_host of this PutV3ProjectsIdServicesIrkerRequest.
        :param server_port: The server_port of this PutV3ProjectsIdServicesIrkerRequest.
        :param colorize_messages: The colorize_messages of this PutV3ProjectsIdServicesIrkerRequest.
        :param push_events: The push_events of this PutV3ProjectsIdServicesIrkerRequest.
        """
        self.openapi_types = {
            'recipients': str,
            'default_irc_uri': str,
            'server_host': str,
            'server_port': int,
            'colorize_messages': bool,
            'push_events': str
        }

        self.attribute_map = {
            'recipients': 'recipients',
            'default_irc_uri': 'default_irc_uri',
            'server_host': 'server_host',
            'server_port': 'server_port',
            'colorize_messages': 'colorize_messages',
            'push_events': 'push_events'
        }

        self._recipients = recipients
        self._default_irc_uri = default_irc_uri
        self._server_host = server_host
        self._server_port = server_port
        self._colorize_messages = colorize_messages
        self._push_events = push_events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutV3ProjectsIdServicesIrkerRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The putV3ProjectsIdServicesIrker_request of this PutV3ProjectsIdServicesIrkerRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recipients(self):
        """Gets the recipients of this PutV3ProjectsIdServicesIrkerRequest.

        Recipients/channels separated by whitespaces

        :return: The recipients of this PutV3ProjectsIdServicesIrkerRequest.
        :rtype: str
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients):
        """Sets the recipients of this PutV3ProjectsIdServicesIrkerRequest.

        Recipients/channels separated by whitespaces

        :param recipients: The recipients of this PutV3ProjectsIdServicesIrkerRequest.
        :type recipients: str
        """
        if recipients is None:
            raise ValueError("Invalid value for `recipients`, must not be `None`")

        self._recipients = recipients

    @property
    def default_irc_uri(self):
        """Gets the default_irc_uri of this PutV3ProjectsIdServicesIrkerRequest.

        Default: irc://irc.network.net:6697

        :return: The default_irc_uri of this PutV3ProjectsIdServicesIrkerRequest.
        :rtype: str
        """
        return self._default_irc_uri

    @default_irc_uri.setter
    def default_irc_uri(self, default_irc_uri):
        """Sets the default_irc_uri of this PutV3ProjectsIdServicesIrkerRequest.

        Default: irc://irc.network.net:6697

        :param default_irc_uri: The default_irc_uri of this PutV3ProjectsIdServicesIrkerRequest.
        :type default_irc_uri: str
        """

        self._default_irc_uri = default_irc_uri

    @property
    def server_host(self):
        """Gets the server_host of this PutV3ProjectsIdServicesIrkerRequest.

        Server host. Default localhost

        :return: The server_host of this PutV3ProjectsIdServicesIrkerRequest.
        :rtype: str
        """
        return self._server_host

    @server_host.setter
    def server_host(self, server_host):
        """Sets the server_host of this PutV3ProjectsIdServicesIrkerRequest.

        Server host. Default localhost

        :param server_host: The server_host of this PutV3ProjectsIdServicesIrkerRequest.
        :type server_host: str
        """

        self._server_host = server_host

    @property
    def server_port(self):
        """Gets the server_port of this PutV3ProjectsIdServicesIrkerRequest.

        Server port. Default 6659

        :return: The server_port of this PutV3ProjectsIdServicesIrkerRequest.
        :rtype: int
        """
        return self._server_port

    @server_port.setter
    def server_port(self, server_port):
        """Sets the server_port of this PutV3ProjectsIdServicesIrkerRequest.

        Server port. Default 6659

        :param server_port: The server_port of this PutV3ProjectsIdServicesIrkerRequest.
        :type server_port: int
        """

        self._server_port = server_port

    @property
    def colorize_messages(self):
        """Gets the colorize_messages of this PutV3ProjectsIdServicesIrkerRequest.

        Colorize messages

        :return: The colorize_messages of this PutV3ProjectsIdServicesIrkerRequest.
        :rtype: bool
        """
        return self._colorize_messages

    @colorize_messages.setter
    def colorize_messages(self, colorize_messages):
        """Sets the colorize_messages of this PutV3ProjectsIdServicesIrkerRequest.

        Colorize messages

        :param colorize_messages: The colorize_messages of this PutV3ProjectsIdServicesIrkerRequest.
        :type colorize_messages: bool
        """

        self._colorize_messages = colorize_messages

    @property
    def push_events(self):
        """Gets the push_events of this PutV3ProjectsIdServicesIrkerRequest.

        Event will be triggered by a push to the repository

        :return: The push_events of this PutV3ProjectsIdServicesIrkerRequest.
        :rtype: str
        """
        return self._push_events

    @push_events.setter
    def push_events(self, push_events):
        """Sets the push_events of this PutV3ProjectsIdServicesIrkerRequest.

        Event will be triggered by a push to the repository

        :param push_events: The push_events of this PutV3ProjectsIdServicesIrkerRequest.
        :type push_events: str
        """

        self._push_events = push_events
