# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_basic import UserBasic
from openapi_server import util


class PersonalSnippet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: UserBasic=None, created_at: str=None, file_name: str=None, id: str=None, raw_url: str=None, title: str=None, updated_at: str=None, web_url: str=None):
        """PersonalSnippet - a model defined in OpenAPI

        :param author: The author of this PersonalSnippet.
        :param created_at: The created_at of this PersonalSnippet.
        :param file_name: The file_name of this PersonalSnippet.
        :param id: The id of this PersonalSnippet.
        :param raw_url: The raw_url of this PersonalSnippet.
        :param title: The title of this PersonalSnippet.
        :param updated_at: The updated_at of this PersonalSnippet.
        :param web_url: The web_url of this PersonalSnippet.
        """
        self.openapi_types = {
            'author': UserBasic,
            'created_at': str,
            'file_name': str,
            'id': str,
            'raw_url': str,
            'title': str,
            'updated_at': str,
            'web_url': str
        }

        self.attribute_map = {
            'author': 'author',
            'created_at': 'created_at',
            'file_name': 'file_name',
            'id': 'id',
            'raw_url': 'raw_url',
            'title': 'title',
            'updated_at': 'updated_at',
            'web_url': 'web_url'
        }

        self._author = author
        self._created_at = created_at
        self._file_name = file_name
        self._id = id
        self._raw_url = raw_url
        self._title = title
        self._updated_at = updated_at
        self._web_url = web_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PersonalSnippet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PersonalSnippet of this PersonalSnippet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this PersonalSnippet.


        :return: The author of this PersonalSnippet.
        :rtype: UserBasic
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this PersonalSnippet.


        :param author: The author of this PersonalSnippet.
        :type author: UserBasic
        """

        self._author = author

    @property
    def created_at(self):
        """Gets the created_at of this PersonalSnippet.


        :return: The created_at of this PersonalSnippet.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PersonalSnippet.


        :param created_at: The created_at of this PersonalSnippet.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def file_name(self):
        """Gets the file_name of this PersonalSnippet.


        :return: The file_name of this PersonalSnippet.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this PersonalSnippet.


        :param file_name: The file_name of this PersonalSnippet.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def id(self):
        """Gets the id of this PersonalSnippet.


        :return: The id of this PersonalSnippet.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PersonalSnippet.


        :param id: The id of this PersonalSnippet.
        :type id: str
        """

        self._id = id

    @property
    def raw_url(self):
        """Gets the raw_url of this PersonalSnippet.


        :return: The raw_url of this PersonalSnippet.
        :rtype: str
        """
        return self._raw_url

    @raw_url.setter
    def raw_url(self, raw_url):
        """Sets the raw_url of this PersonalSnippet.


        :param raw_url: The raw_url of this PersonalSnippet.
        :type raw_url: str
        """

        self._raw_url = raw_url

    @property
    def title(self):
        """Gets the title of this PersonalSnippet.


        :return: The title of this PersonalSnippet.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PersonalSnippet.


        :param title: The title of this PersonalSnippet.
        :type title: str
        """

        self._title = title

    @property
    def updated_at(self):
        """Gets the updated_at of this PersonalSnippet.


        :return: The updated_at of this PersonalSnippet.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PersonalSnippet.


        :param updated_at: The updated_at of this PersonalSnippet.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def web_url(self):
        """Gets the web_url of this PersonalSnippet.


        :return: The web_url of this PersonalSnippet.
        :rtype: str
        """
        return self._web_url

    @web_url.setter
    def web_url(self, web_url):
        """Sets the web_url of this PersonalSnippet.


        :param web_url: The web_url of this PersonalSnippet.
        :type web_url: str
        """

        self._web_url = web_url
