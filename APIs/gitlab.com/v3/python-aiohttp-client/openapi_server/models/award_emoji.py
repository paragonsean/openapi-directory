# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_basic import UserBasic
from openapi_server import util


class AwardEmoji(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, awardable_id: str=None, awardable_type: str=None, created_at: str=None, id: str=None, name: str=None, updated_at: str=None, user: UserBasic=None):
        """AwardEmoji - a model defined in OpenAPI

        :param awardable_id: The awardable_id of this AwardEmoji.
        :param awardable_type: The awardable_type of this AwardEmoji.
        :param created_at: The created_at of this AwardEmoji.
        :param id: The id of this AwardEmoji.
        :param name: The name of this AwardEmoji.
        :param updated_at: The updated_at of this AwardEmoji.
        :param user: The user of this AwardEmoji.
        """
        self.openapi_types = {
            'awardable_id': str,
            'awardable_type': str,
            'created_at': str,
            'id': str,
            'name': str,
            'updated_at': str,
            'user': UserBasic
        }

        self.attribute_map = {
            'awardable_id': 'awardable_id',
            'awardable_type': 'awardable_type',
            'created_at': 'created_at',
            'id': 'id',
            'name': 'name',
            'updated_at': 'updated_at',
            'user': 'user'
        }

        self._awardable_id = awardable_id
        self._awardable_type = awardable_type
        self._created_at = created_at
        self._id = id
        self._name = name
        self._updated_at = updated_at
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AwardEmoji':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AwardEmoji of this AwardEmoji.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def awardable_id(self):
        """Gets the awardable_id of this AwardEmoji.


        :return: The awardable_id of this AwardEmoji.
        :rtype: str
        """
        return self._awardable_id

    @awardable_id.setter
    def awardable_id(self, awardable_id):
        """Sets the awardable_id of this AwardEmoji.


        :param awardable_id: The awardable_id of this AwardEmoji.
        :type awardable_id: str
        """

        self._awardable_id = awardable_id

    @property
    def awardable_type(self):
        """Gets the awardable_type of this AwardEmoji.


        :return: The awardable_type of this AwardEmoji.
        :rtype: str
        """
        return self._awardable_type

    @awardable_type.setter
    def awardable_type(self, awardable_type):
        """Sets the awardable_type of this AwardEmoji.


        :param awardable_type: The awardable_type of this AwardEmoji.
        :type awardable_type: str
        """

        self._awardable_type = awardable_type

    @property
    def created_at(self):
        """Gets the created_at of this AwardEmoji.


        :return: The created_at of this AwardEmoji.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this AwardEmoji.


        :param created_at: The created_at of this AwardEmoji.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this AwardEmoji.


        :return: The id of this AwardEmoji.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AwardEmoji.


        :param id: The id of this AwardEmoji.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this AwardEmoji.


        :return: The name of this AwardEmoji.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AwardEmoji.


        :param name: The name of this AwardEmoji.
        :type name: str
        """

        self._name = name

    @property
    def updated_at(self):
        """Gets the updated_at of this AwardEmoji.


        :return: The updated_at of this AwardEmoji.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this AwardEmoji.


        :param updated_at: The updated_at of this AwardEmoji.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def user(self):
        """Gets the user of this AwardEmoji.


        :return: The user of this AwardEmoji.
        :rtype: UserBasic
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this AwardEmoji.


        :param user: The user of this AwardEmoji.
        :type user: UserBasic
        """

        self._user = user
