# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutV3ProjectsIdLabelsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, new_name: str=None, color: str=None, description: str=None, priority: int=None):
        """PutV3ProjectsIdLabelsRequest - a model defined in OpenAPI

        :param name: The name of this PutV3ProjectsIdLabelsRequest.
        :param new_name: The new_name of this PutV3ProjectsIdLabelsRequest.
        :param color: The color of this PutV3ProjectsIdLabelsRequest.
        :param description: The description of this PutV3ProjectsIdLabelsRequest.
        :param priority: The priority of this PutV3ProjectsIdLabelsRequest.
        """
        self.openapi_types = {
            'name': str,
            'new_name': str,
            'color': str,
            'description': str,
            'priority': int
        }

        self.attribute_map = {
            'name': 'name',
            'new_name': 'new_name',
            'color': 'color',
            'description': 'description',
            'priority': 'priority'
        }

        self._name = name
        self._new_name = new_name
        self._color = color
        self._description = description
        self._priority = priority

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutV3ProjectsIdLabelsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The putV3ProjectsIdLabels_request of this PutV3ProjectsIdLabelsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PutV3ProjectsIdLabelsRequest.

        The name of the label to be updated

        :return: The name of this PutV3ProjectsIdLabelsRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PutV3ProjectsIdLabelsRequest.

        The name of the label to be updated

        :param name: The name of this PutV3ProjectsIdLabelsRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def new_name(self):
        """Gets the new_name of this PutV3ProjectsIdLabelsRequest.

        The new name of the label

        :return: The new_name of this PutV3ProjectsIdLabelsRequest.
        :rtype: str
        """
        return self._new_name

    @new_name.setter
    def new_name(self, new_name):
        """Sets the new_name of this PutV3ProjectsIdLabelsRequest.

        The new name of the label

        :param new_name: The new_name of this PutV3ProjectsIdLabelsRequest.
        :type new_name: str
        """

        self._new_name = new_name

    @property
    def color(self):
        """Gets the color of this PutV3ProjectsIdLabelsRequest.

        The new color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)

        :return: The color of this PutV3ProjectsIdLabelsRequest.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this PutV3ProjectsIdLabelsRequest.

        The new color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)

        :param color: The color of this PutV3ProjectsIdLabelsRequest.
        :type color: str
        """

        self._color = color

    @property
    def description(self):
        """Gets the description of this PutV3ProjectsIdLabelsRequest.

        The new description of label

        :return: The description of this PutV3ProjectsIdLabelsRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PutV3ProjectsIdLabelsRequest.

        The new description of label

        :param description: The description of this PutV3ProjectsIdLabelsRequest.
        :type description: str
        """

        self._description = description

    @property
    def priority(self):
        """Gets the priority of this PutV3ProjectsIdLabelsRequest.

        The priority of the label

        :return: The priority of this PutV3ProjectsIdLabelsRequest.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this PutV3ProjectsIdLabelsRequest.

        The priority of the label

        :param priority: The priority of this PutV3ProjectsIdLabelsRequest.
        :type priority: int
        """

        self._priority = priority
