# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectHook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build_events: str=None, created_at: str=None, enable_ssl_verification: str=None, id: str=None, issues_events: str=None, merge_requests_events: str=None, note_events: str=None, pipeline_events: str=None, project_id: str=None, push_events: str=None, tag_push_events: str=None, url: str=None, wiki_page_events: str=None):
        """ProjectHook - a model defined in OpenAPI

        :param build_events: The build_events of this ProjectHook.
        :param created_at: The created_at of this ProjectHook.
        :param enable_ssl_verification: The enable_ssl_verification of this ProjectHook.
        :param id: The id of this ProjectHook.
        :param issues_events: The issues_events of this ProjectHook.
        :param merge_requests_events: The merge_requests_events of this ProjectHook.
        :param note_events: The note_events of this ProjectHook.
        :param pipeline_events: The pipeline_events of this ProjectHook.
        :param project_id: The project_id of this ProjectHook.
        :param push_events: The push_events of this ProjectHook.
        :param tag_push_events: The tag_push_events of this ProjectHook.
        :param url: The url of this ProjectHook.
        :param wiki_page_events: The wiki_page_events of this ProjectHook.
        """
        self.openapi_types = {
            'build_events': str,
            'created_at': str,
            'enable_ssl_verification': str,
            'id': str,
            'issues_events': str,
            'merge_requests_events': str,
            'note_events': str,
            'pipeline_events': str,
            'project_id': str,
            'push_events': str,
            'tag_push_events': str,
            'url': str,
            'wiki_page_events': str
        }

        self.attribute_map = {
            'build_events': 'build_events',
            'created_at': 'created_at',
            'enable_ssl_verification': 'enable_ssl_verification',
            'id': 'id',
            'issues_events': 'issues_events',
            'merge_requests_events': 'merge_requests_events',
            'note_events': 'note_events',
            'pipeline_events': 'pipeline_events',
            'project_id': 'project_id',
            'push_events': 'push_events',
            'tag_push_events': 'tag_push_events',
            'url': 'url',
            'wiki_page_events': 'wiki_page_events'
        }

        self._build_events = build_events
        self._created_at = created_at
        self._enable_ssl_verification = enable_ssl_verification
        self._id = id
        self._issues_events = issues_events
        self._merge_requests_events = merge_requests_events
        self._note_events = note_events
        self._pipeline_events = pipeline_events
        self._project_id = project_id
        self._push_events = push_events
        self._tag_push_events = tag_push_events
        self._url = url
        self._wiki_page_events = wiki_page_events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectHook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectHook of this ProjectHook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build_events(self):
        """Gets the build_events of this ProjectHook.


        :return: The build_events of this ProjectHook.
        :rtype: str
        """
        return self._build_events

    @build_events.setter
    def build_events(self, build_events):
        """Sets the build_events of this ProjectHook.


        :param build_events: The build_events of this ProjectHook.
        :type build_events: str
        """

        self._build_events = build_events

    @property
    def created_at(self):
        """Gets the created_at of this ProjectHook.


        :return: The created_at of this ProjectHook.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ProjectHook.


        :param created_at: The created_at of this ProjectHook.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def enable_ssl_verification(self):
        """Gets the enable_ssl_verification of this ProjectHook.


        :return: The enable_ssl_verification of this ProjectHook.
        :rtype: str
        """
        return self._enable_ssl_verification

    @enable_ssl_verification.setter
    def enable_ssl_verification(self, enable_ssl_verification):
        """Sets the enable_ssl_verification of this ProjectHook.


        :param enable_ssl_verification: The enable_ssl_verification of this ProjectHook.
        :type enable_ssl_verification: str
        """

        self._enable_ssl_verification = enable_ssl_verification

    @property
    def id(self):
        """Gets the id of this ProjectHook.


        :return: The id of this ProjectHook.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProjectHook.


        :param id: The id of this ProjectHook.
        :type id: str
        """

        self._id = id

    @property
    def issues_events(self):
        """Gets the issues_events of this ProjectHook.


        :return: The issues_events of this ProjectHook.
        :rtype: str
        """
        return self._issues_events

    @issues_events.setter
    def issues_events(self, issues_events):
        """Sets the issues_events of this ProjectHook.


        :param issues_events: The issues_events of this ProjectHook.
        :type issues_events: str
        """

        self._issues_events = issues_events

    @property
    def merge_requests_events(self):
        """Gets the merge_requests_events of this ProjectHook.


        :return: The merge_requests_events of this ProjectHook.
        :rtype: str
        """
        return self._merge_requests_events

    @merge_requests_events.setter
    def merge_requests_events(self, merge_requests_events):
        """Sets the merge_requests_events of this ProjectHook.


        :param merge_requests_events: The merge_requests_events of this ProjectHook.
        :type merge_requests_events: str
        """

        self._merge_requests_events = merge_requests_events

    @property
    def note_events(self):
        """Gets the note_events of this ProjectHook.


        :return: The note_events of this ProjectHook.
        :rtype: str
        """
        return self._note_events

    @note_events.setter
    def note_events(self, note_events):
        """Sets the note_events of this ProjectHook.


        :param note_events: The note_events of this ProjectHook.
        :type note_events: str
        """

        self._note_events = note_events

    @property
    def pipeline_events(self):
        """Gets the pipeline_events of this ProjectHook.


        :return: The pipeline_events of this ProjectHook.
        :rtype: str
        """
        return self._pipeline_events

    @pipeline_events.setter
    def pipeline_events(self, pipeline_events):
        """Sets the pipeline_events of this ProjectHook.


        :param pipeline_events: The pipeline_events of this ProjectHook.
        :type pipeline_events: str
        """

        self._pipeline_events = pipeline_events

    @property
    def project_id(self):
        """Gets the project_id of this ProjectHook.


        :return: The project_id of this ProjectHook.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this ProjectHook.


        :param project_id: The project_id of this ProjectHook.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def push_events(self):
        """Gets the push_events of this ProjectHook.


        :return: The push_events of this ProjectHook.
        :rtype: str
        """
        return self._push_events

    @push_events.setter
    def push_events(self, push_events):
        """Sets the push_events of this ProjectHook.


        :param push_events: The push_events of this ProjectHook.
        :type push_events: str
        """

        self._push_events = push_events

    @property
    def tag_push_events(self):
        """Gets the tag_push_events of this ProjectHook.


        :return: The tag_push_events of this ProjectHook.
        :rtype: str
        """
        return self._tag_push_events

    @tag_push_events.setter
    def tag_push_events(self, tag_push_events):
        """Sets the tag_push_events of this ProjectHook.


        :param tag_push_events: The tag_push_events of this ProjectHook.
        :type tag_push_events: str
        """

        self._tag_push_events = tag_push_events

    @property
    def url(self):
        """Gets the url of this ProjectHook.


        :return: The url of this ProjectHook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ProjectHook.


        :param url: The url of this ProjectHook.
        :type url: str
        """

        self._url = url

    @property
    def wiki_page_events(self):
        """Gets the wiki_page_events of this ProjectHook.


        :return: The wiki_page_events of this ProjectHook.
        :rtype: str
        """
        return self._wiki_page_events

    @wiki_page_events.setter
    def wiki_page_events(self, wiki_page_events):
        """Sets the wiki_page_events of this ProjectHook.


        :param wiki_page_events: The wiki_page_events of this ProjectHook.
        :type wiki_page_events: str
        """

        self._wiki_page_events = wiki_page_events
