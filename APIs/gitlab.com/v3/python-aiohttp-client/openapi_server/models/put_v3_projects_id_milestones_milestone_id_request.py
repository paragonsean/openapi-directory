# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutV3ProjectsIdMilestonesMilestoneIdRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title: str=None, state_event: str=None, description: str=None, due_date: str=None, start_date: str=None):
        """PutV3ProjectsIdMilestonesMilestoneIdRequest - a model defined in OpenAPI

        :param title: The title of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :param state_event: The state_event of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :param description: The description of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :param due_date: The due_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :param start_date: The start_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        """
        self.openapi_types = {
            'title': str,
            'state_event': str,
            'description': str,
            'due_date': str,
            'start_date': str
        }

        self.attribute_map = {
            'title': 'title',
            'state_event': 'state_event',
            'description': 'description',
            'due_date': 'due_date',
            'start_date': 'start_date'
        }

        self._title = title
        self._state_event = state_event
        self._description = description
        self._due_date = due_date
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutV3ProjectsIdMilestonesMilestoneIdRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The putV3ProjectsIdMilestonesMilestoneId_request of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self):
        """Gets the title of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The title of the milestone

        :return: The title of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The title of the milestone

        :param title: The title of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :type title: str
        """

        self._title = title

    @property
    def state_event(self):
        """Gets the state_event of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The state event of the milestone 

        :return: The state_event of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :rtype: str
        """
        return self._state_event

    @state_event.setter
    def state_event(self, state_event):
        """Sets the state_event of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The state event of the milestone 

        :param state_event: The state_event of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :type state_event: str
        """
        allowed_values = ["close", "activate"]  # noqa: E501
        if state_event not in allowed_values:
            raise ValueError(
                "Invalid value for `state_event` ({0}), must be one of {1}"
                .format(state_event, allowed_values)
            )

        self._state_event = state_event

    @property
    def description(self):
        """Gets the description of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The description of the milestone

        :return: The description of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The description of the milestone

        :param description: The description of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :type description: str
        """

        self._description = description

    @property
    def due_date(self):
        """Gets the due_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)

        :return: The due_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :rtype: str
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)

        :param due_date: The due_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :type due_date: str
        """

        self._due_date = due_date

    @property
    def start_date(self):
        """Gets the start_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)

        :return: The start_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.

        The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)

        :param start_date: The start_date of this PutV3ProjectsIdMilestonesMilestoneIdRequest.
        :type start_date: str
        """

        self._start_date = start_date
