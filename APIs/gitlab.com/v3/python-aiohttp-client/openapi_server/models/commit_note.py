# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_basic import UserBasic
from openapi_server import util


class CommitNote(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: UserBasic=None, created_at: str=None, line: str=None, line_type: str=None, note: str=None, path: str=None):
        """CommitNote - a model defined in OpenAPI

        :param author: The author of this CommitNote.
        :param created_at: The created_at of this CommitNote.
        :param line: The line of this CommitNote.
        :param line_type: The line_type of this CommitNote.
        :param note: The note of this CommitNote.
        :param path: The path of this CommitNote.
        """
        self.openapi_types = {
            'author': UserBasic,
            'created_at': str,
            'line': str,
            'line_type': str,
            'note': str,
            'path': str
        }

        self.attribute_map = {
            'author': 'author',
            'created_at': 'created_at',
            'line': 'line',
            'line_type': 'line_type',
            'note': 'note',
            'path': 'path'
        }

        self._author = author
        self._created_at = created_at
        self._line = line
        self._line_type = line_type
        self._note = note
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitNote':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitNote of this CommitNote.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this CommitNote.


        :return: The author of this CommitNote.
        :rtype: UserBasic
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this CommitNote.


        :param author: The author of this CommitNote.
        :type author: UserBasic
        """

        self._author = author

    @property
    def created_at(self):
        """Gets the created_at of this CommitNote.


        :return: The created_at of this CommitNote.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CommitNote.


        :param created_at: The created_at of this CommitNote.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def line(self):
        """Gets the line of this CommitNote.


        :return: The line of this CommitNote.
        :rtype: str
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this CommitNote.


        :param line: The line of this CommitNote.
        :type line: str
        """

        self._line = line

    @property
    def line_type(self):
        """Gets the line_type of this CommitNote.


        :return: The line_type of this CommitNote.
        :rtype: str
        """
        return self._line_type

    @line_type.setter
    def line_type(self, line_type):
        """Sets the line_type of this CommitNote.


        :param line_type: The line_type of this CommitNote.
        :type line_type: str
        """

        self._line_type = line_type

    @property
    def note(self):
        """Gets the note of this CommitNote.


        :return: The note of this CommitNote.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this CommitNote.


        :param note: The note of this CommitNote.
        :type note: str
        """

        self._note = note

    @property
    def path(self):
        """Gets the path of this CommitNote.


        :return: The path of this CommitNote.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this CommitNote.


        :param path: The path of this CommitNote.
        :type path: str
        """

        self._path = path
