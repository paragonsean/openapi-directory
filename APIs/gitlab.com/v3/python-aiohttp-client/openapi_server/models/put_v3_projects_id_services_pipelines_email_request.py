# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutV3ProjectsIdServicesPipelinesEmailRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recipients: str=None, notify_only_broken_builds: bool=None, pipeline_events: str=None):
        """PutV3ProjectsIdServicesPipelinesEmailRequest - a model defined in OpenAPI

        :param recipients: The recipients of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        :param notify_only_broken_builds: The notify_only_broken_builds of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        :param pipeline_events: The pipeline_events of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        """
        self.openapi_types = {
            'recipients': str,
            'notify_only_broken_builds': bool,
            'pipeline_events': str
        }

        self.attribute_map = {
            'recipients': 'recipients',
            'notify_only_broken_builds': 'notify_only_broken_builds',
            'pipeline_events': 'pipeline_events'
        }

        self._recipients = recipients
        self._notify_only_broken_builds = notify_only_broken_builds
        self._pipeline_events = pipeline_events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutV3ProjectsIdServicesPipelinesEmailRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The putV3ProjectsIdServicesPipelinesEmail_request of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recipients(self):
        """Gets the recipients of this PutV3ProjectsIdServicesPipelinesEmailRequest.

        Comma-separated list of recipient email addresses

        :return: The recipients of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        :rtype: str
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients):
        """Sets the recipients of this PutV3ProjectsIdServicesPipelinesEmailRequest.

        Comma-separated list of recipient email addresses

        :param recipients: The recipients of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        :type recipients: str
        """
        if recipients is None:
            raise ValueError("Invalid value for `recipients`, must not be `None`")

        self._recipients = recipients

    @property
    def notify_only_broken_builds(self):
        """Gets the notify_only_broken_builds of this PutV3ProjectsIdServicesPipelinesEmailRequest.

        Notify only broken builds

        :return: The notify_only_broken_builds of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        :rtype: bool
        """
        return self._notify_only_broken_builds

    @notify_only_broken_builds.setter
    def notify_only_broken_builds(self, notify_only_broken_builds):
        """Sets the notify_only_broken_builds of this PutV3ProjectsIdServicesPipelinesEmailRequest.

        Notify only broken builds

        :param notify_only_broken_builds: The notify_only_broken_builds of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        :type notify_only_broken_builds: bool
        """

        self._notify_only_broken_builds = notify_only_broken_builds

    @property
    def pipeline_events(self):
        """Gets the pipeline_events of this PutV3ProjectsIdServicesPipelinesEmailRequest.


        :return: The pipeline_events of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        :rtype: str
        """
        return self._pipeline_events

    @pipeline_events.setter
    def pipeline_events(self, pipeline_events):
        """Sets the pipeline_events of this PutV3ProjectsIdServicesPipelinesEmailRequest.


        :param pipeline_events: The pipeline_events of this PutV3ProjectsIdServicesPipelinesEmailRequest.
        :type pipeline_events: str
        """

        self._pipeline_events = pipeline_events
