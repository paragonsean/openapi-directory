# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutV3ProjectsIdServicesFlowdockRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, token: str=None, push_events: str=None):
        """PutV3ProjectsIdServicesFlowdockRequest - a model defined in OpenAPI

        :param token: The token of this PutV3ProjectsIdServicesFlowdockRequest.
        :param push_events: The push_events of this PutV3ProjectsIdServicesFlowdockRequest.
        """
        self.openapi_types = {
            'token': str,
            'push_events': str
        }

        self.attribute_map = {
            'token': 'token',
            'push_events': 'push_events'
        }

        self._token = token
        self._push_events = push_events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutV3ProjectsIdServicesFlowdockRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The putV3ProjectsIdServicesFlowdock_request of this PutV3ProjectsIdServicesFlowdockRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token(self):
        """Gets the token of this PutV3ProjectsIdServicesFlowdockRequest.

        Flowdock token

        :return: The token of this PutV3ProjectsIdServicesFlowdockRequest.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this PutV3ProjectsIdServicesFlowdockRequest.

        Flowdock token

        :param token: The token of this PutV3ProjectsIdServicesFlowdockRequest.
        :type token: str
        """
        if token is None:
            raise ValueError("Invalid value for `token`, must not be `None`")

        self._token = token

    @property
    def push_events(self):
        """Gets the push_events of this PutV3ProjectsIdServicesFlowdockRequest.

        Event will be triggered by a push to the repository

        :return: The push_events of this PutV3ProjectsIdServicesFlowdockRequest.
        :rtype: str
        """
        return self._push_events

    @push_events.setter
    def push_events(self, push_events):
        """Sets the push_events of this PutV3ProjectsIdServicesFlowdockRequest.

        Event will be triggered by a push to the repository

        :param push_events: The push_events of this PutV3ProjectsIdServicesFlowdockRequest.
        :type push_events: str
        """

        self._push_events = push_events
