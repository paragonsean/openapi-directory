# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.basic_project_details import BasicProjectDetails
from openapi_server.models.user_basic import UserBasic
from openapi_server import util


class Todo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_name: str=None, author: UserBasic=None, body: str=None, created_at: str=None, id: str=None, project: BasicProjectDetails=None, state: str=None, target: str=None, target_type: str=None, target_url: str=None):
        """Todo - a model defined in OpenAPI

        :param action_name: The action_name of this Todo.
        :param author: The author of this Todo.
        :param body: The body of this Todo.
        :param created_at: The created_at of this Todo.
        :param id: The id of this Todo.
        :param project: The project of this Todo.
        :param state: The state of this Todo.
        :param target: The target of this Todo.
        :param target_type: The target_type of this Todo.
        :param target_url: The target_url of this Todo.
        """
        self.openapi_types = {
            'action_name': str,
            'author': UserBasic,
            'body': str,
            'created_at': str,
            'id': str,
            'project': BasicProjectDetails,
            'state': str,
            'target': str,
            'target_type': str,
            'target_url': str
        }

        self.attribute_map = {
            'action_name': 'action_name',
            'author': 'author',
            'body': 'body',
            'created_at': 'created_at',
            'id': 'id',
            'project': 'project',
            'state': 'state',
            'target': 'target',
            'target_type': 'target_type',
            'target_url': 'target_url'
        }

        self._action_name = action_name
        self._author = author
        self._body = body
        self._created_at = created_at
        self._id = id
        self._project = project
        self._state = state
        self._target = target
        self._target_type = target_type
        self._target_url = target_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Todo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Todo of this Todo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_name(self):
        """Gets the action_name of this Todo.


        :return: The action_name of this Todo.
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this Todo.


        :param action_name: The action_name of this Todo.
        :type action_name: str
        """

        self._action_name = action_name

    @property
    def author(self):
        """Gets the author of this Todo.


        :return: The author of this Todo.
        :rtype: UserBasic
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this Todo.


        :param author: The author of this Todo.
        :type author: UserBasic
        """

        self._author = author

    @property
    def body(self):
        """Gets the body of this Todo.


        :return: The body of this Todo.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this Todo.


        :param body: The body of this Todo.
        :type body: str
        """

        self._body = body

    @property
    def created_at(self):
        """Gets the created_at of this Todo.


        :return: The created_at of this Todo.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Todo.


        :param created_at: The created_at of this Todo.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this Todo.


        :return: The id of this Todo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Todo.


        :param id: The id of this Todo.
        :type id: str
        """

        self._id = id

    @property
    def project(self):
        """Gets the project of this Todo.


        :return: The project of this Todo.
        :rtype: BasicProjectDetails
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this Todo.


        :param project: The project of this Todo.
        :type project: BasicProjectDetails
        """

        self._project = project

    @property
    def state(self):
        """Gets the state of this Todo.


        :return: The state of this Todo.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Todo.


        :param state: The state of this Todo.
        :type state: str
        """

        self._state = state

    @property
    def target(self):
        """Gets the target of this Todo.


        :return: The target of this Todo.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this Todo.


        :param target: The target of this Todo.
        :type target: str
        """

        self._target = target

    @property
    def target_type(self):
        """Gets the target_type of this Todo.


        :return: The target_type of this Todo.
        :rtype: str
        """
        return self._target_type

    @target_type.setter
    def target_type(self, target_type):
        """Sets the target_type of this Todo.


        :param target_type: The target_type of this Todo.
        :type target_type: str
        """

        self._target_type = target_type

    @property
    def target_url(self):
        """Gets the target_url of this Todo.


        :return: The target_url of this Todo.
        :rtype: str
        """
        return self._target_url

    @target_url.setter
    def target_url(self, target_url):
        """Sets the target_url of this Todo.


        :param target_url: The target_url of this Todo.
        :type target_url: str
        """

        self._target_url = target_url
