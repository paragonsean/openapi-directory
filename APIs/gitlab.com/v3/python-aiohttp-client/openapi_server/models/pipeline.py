# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_basic import UserBasic
from openapi_server import util


class Pipeline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, before_sha: str=None, committed_at: str=None, coverage: str=None, created_at: str=None, duration: str=None, finished_at: str=None, id: str=None, ref: str=None, sha: str=None, started_at: str=None, status: str=None, tag: str=None, updated_at: str=None, user: UserBasic=None, yaml_errors: str=None):
        """Pipeline - a model defined in OpenAPI

        :param before_sha: The before_sha of this Pipeline.
        :param committed_at: The committed_at of this Pipeline.
        :param coverage: The coverage of this Pipeline.
        :param created_at: The created_at of this Pipeline.
        :param duration: The duration of this Pipeline.
        :param finished_at: The finished_at of this Pipeline.
        :param id: The id of this Pipeline.
        :param ref: The ref of this Pipeline.
        :param sha: The sha of this Pipeline.
        :param started_at: The started_at of this Pipeline.
        :param status: The status of this Pipeline.
        :param tag: The tag of this Pipeline.
        :param updated_at: The updated_at of this Pipeline.
        :param user: The user of this Pipeline.
        :param yaml_errors: The yaml_errors of this Pipeline.
        """
        self.openapi_types = {
            'before_sha': str,
            'committed_at': str,
            'coverage': str,
            'created_at': str,
            'duration': str,
            'finished_at': str,
            'id': str,
            'ref': str,
            'sha': str,
            'started_at': str,
            'status': str,
            'tag': str,
            'updated_at': str,
            'user': UserBasic,
            'yaml_errors': str
        }

        self.attribute_map = {
            'before_sha': 'before_sha',
            'committed_at': 'committed_at',
            'coverage': 'coverage',
            'created_at': 'created_at',
            'duration': 'duration',
            'finished_at': 'finished_at',
            'id': 'id',
            'ref': 'ref',
            'sha': 'sha',
            'started_at': 'started_at',
            'status': 'status',
            'tag': 'tag',
            'updated_at': 'updated_at',
            'user': 'user',
            'yaml_errors': 'yaml_errors'
        }

        self._before_sha = before_sha
        self._committed_at = committed_at
        self._coverage = coverage
        self._created_at = created_at
        self._duration = duration
        self._finished_at = finished_at
        self._id = id
        self._ref = ref
        self._sha = sha
        self._started_at = started_at
        self._status = status
        self._tag = tag
        self._updated_at = updated_at
        self._user = user
        self._yaml_errors = yaml_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pipeline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pipeline of this Pipeline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def before_sha(self):
        """Gets the before_sha of this Pipeline.


        :return: The before_sha of this Pipeline.
        :rtype: str
        """
        return self._before_sha

    @before_sha.setter
    def before_sha(self, before_sha):
        """Sets the before_sha of this Pipeline.


        :param before_sha: The before_sha of this Pipeline.
        :type before_sha: str
        """

        self._before_sha = before_sha

    @property
    def committed_at(self):
        """Gets the committed_at of this Pipeline.


        :return: The committed_at of this Pipeline.
        :rtype: str
        """
        return self._committed_at

    @committed_at.setter
    def committed_at(self, committed_at):
        """Sets the committed_at of this Pipeline.


        :param committed_at: The committed_at of this Pipeline.
        :type committed_at: str
        """

        self._committed_at = committed_at

    @property
    def coverage(self):
        """Gets the coverage of this Pipeline.


        :return: The coverage of this Pipeline.
        :rtype: str
        """
        return self._coverage

    @coverage.setter
    def coverage(self, coverage):
        """Sets the coverage of this Pipeline.


        :param coverage: The coverage of this Pipeline.
        :type coverage: str
        """

        self._coverage = coverage

    @property
    def created_at(self):
        """Gets the created_at of this Pipeline.


        :return: The created_at of this Pipeline.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Pipeline.


        :param created_at: The created_at of this Pipeline.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def duration(self):
        """Gets the duration of this Pipeline.


        :return: The duration of this Pipeline.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this Pipeline.


        :param duration: The duration of this Pipeline.
        :type duration: str
        """

        self._duration = duration

    @property
    def finished_at(self):
        """Gets the finished_at of this Pipeline.


        :return: The finished_at of this Pipeline.
        :rtype: str
        """
        return self._finished_at

    @finished_at.setter
    def finished_at(self, finished_at):
        """Sets the finished_at of this Pipeline.


        :param finished_at: The finished_at of this Pipeline.
        :type finished_at: str
        """

        self._finished_at = finished_at

    @property
    def id(self):
        """Gets the id of this Pipeline.


        :return: The id of this Pipeline.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Pipeline.


        :param id: The id of this Pipeline.
        :type id: str
        """

        self._id = id

    @property
    def ref(self):
        """Gets the ref of this Pipeline.


        :return: The ref of this Pipeline.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this Pipeline.


        :param ref: The ref of this Pipeline.
        :type ref: str
        """

        self._ref = ref

    @property
    def sha(self):
        """Gets the sha of this Pipeline.


        :return: The sha of this Pipeline.
        :rtype: str
        """
        return self._sha

    @sha.setter
    def sha(self, sha):
        """Sets the sha of this Pipeline.


        :param sha: The sha of this Pipeline.
        :type sha: str
        """

        self._sha = sha

    @property
    def started_at(self):
        """Gets the started_at of this Pipeline.


        :return: The started_at of this Pipeline.
        :rtype: str
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this Pipeline.


        :param started_at: The started_at of this Pipeline.
        :type started_at: str
        """

        self._started_at = started_at

    @property
    def status(self):
        """Gets the status of this Pipeline.


        :return: The status of this Pipeline.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Pipeline.


        :param status: The status of this Pipeline.
        :type status: str
        """

        self._status = status

    @property
    def tag(self):
        """Gets the tag of this Pipeline.


        :return: The tag of this Pipeline.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this Pipeline.


        :param tag: The tag of this Pipeline.
        :type tag: str
        """

        self._tag = tag

    @property
    def updated_at(self):
        """Gets the updated_at of this Pipeline.


        :return: The updated_at of this Pipeline.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Pipeline.


        :param updated_at: The updated_at of this Pipeline.
        :type updated_at: str
        """

        self._updated_at = updated_at

    @property
    def user(self):
        """Gets the user of this Pipeline.


        :return: The user of this Pipeline.
        :rtype: UserBasic
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Pipeline.


        :param user: The user of this Pipeline.
        :type user: UserBasic
        """

        self._user = user

    @property
    def yaml_errors(self):
        """Gets the yaml_errors of this Pipeline.


        :return: The yaml_errors of this Pipeline.
        :rtype: str
        """
        return self._yaml_errors

    @yaml_errors.setter
    def yaml_errors(self, yaml_errors):
        """Sets the yaml_errors of this Pipeline.


        :param yaml_errors: The yaml_errors of this Pipeline.
        :type yaml_errors: str
        """

        self._yaml_errors = yaml_errors
