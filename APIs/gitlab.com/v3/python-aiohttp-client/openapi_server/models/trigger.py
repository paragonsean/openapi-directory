# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Trigger(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, deleted_at: str=None, last_used: str=None, token: str=None, updated_at: str=None):
        """Trigger - a model defined in OpenAPI

        :param created_at: The created_at of this Trigger.
        :param deleted_at: The deleted_at of this Trigger.
        :param last_used: The last_used of this Trigger.
        :param token: The token of this Trigger.
        :param updated_at: The updated_at of this Trigger.
        """
        self.openapi_types = {
            'created_at': str,
            'deleted_at': str,
            'last_used': str,
            'token': str,
            'updated_at': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'deleted_at': 'deleted_at',
            'last_used': 'last_used',
            'token': 'token',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._deleted_at = deleted_at
        self._last_used = last_used
        self._token = token
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Trigger':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Trigger of this Trigger.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Trigger.


        :return: The created_at of this Trigger.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Trigger.


        :param created_at: The created_at of this Trigger.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def deleted_at(self):
        """Gets the deleted_at of this Trigger.


        :return: The deleted_at of this Trigger.
        :rtype: str
        """
        return self._deleted_at

    @deleted_at.setter
    def deleted_at(self, deleted_at):
        """Sets the deleted_at of this Trigger.


        :param deleted_at: The deleted_at of this Trigger.
        :type deleted_at: str
        """

        self._deleted_at = deleted_at

    @property
    def last_used(self):
        """Gets the last_used of this Trigger.


        :return: The last_used of this Trigger.
        :rtype: str
        """
        return self._last_used

    @last_used.setter
    def last_used(self, last_used):
        """Sets the last_used of this Trigger.


        :param last_used: The last_used of this Trigger.
        :type last_used: str
        """

        self._last_used = last_used

    @property
    def token(self):
        """Gets the token of this Trigger.


        :return: The token of this Trigger.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this Trigger.


        :param token: The token of this Trigger.
        :type token: str
        """

        self._token = token

    @property
    def updated_at(self):
        """Gets the updated_at of this Trigger.


        :return: The updated_at of this Trigger.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Trigger.


        :param updated_at: The updated_at of this Trigger.
        :type updated_at: str
        """

        self._updated_at = updated_at
