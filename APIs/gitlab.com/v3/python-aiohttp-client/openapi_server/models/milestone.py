# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Milestone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, description: str=None, due_date: str=None, id: str=None, iid: str=None, project_id: str=None, start_date: str=None, state: str=None, title: str=None, updated_at: str=None):
        """Milestone - a model defined in OpenAPI

        :param created_at: The created_at of this Milestone.
        :param description: The description of this Milestone.
        :param due_date: The due_date of this Milestone.
        :param id: The id of this Milestone.
        :param iid: The iid of this Milestone.
        :param project_id: The project_id of this Milestone.
        :param start_date: The start_date of this Milestone.
        :param state: The state of this Milestone.
        :param title: The title of this Milestone.
        :param updated_at: The updated_at of this Milestone.
        """
        self.openapi_types = {
            'created_at': str,
            'description': str,
            'due_date': str,
            'id': str,
            'iid': str,
            'project_id': str,
            'start_date': str,
            'state': str,
            'title': str,
            'updated_at': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'description': 'description',
            'due_date': 'due_date',
            'id': 'id',
            'iid': 'iid',
            'project_id': 'project_id',
            'start_date': 'start_date',
            'state': 'state',
            'title': 'title',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._description = description
        self._due_date = due_date
        self._id = id
        self._iid = iid
        self._project_id = project_id
        self._start_date = start_date
        self._state = state
        self._title = title
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Milestone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Milestone of this Milestone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Milestone.


        :return: The created_at of this Milestone.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Milestone.


        :param created_at: The created_at of this Milestone.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this Milestone.


        :return: The description of this Milestone.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Milestone.


        :param description: The description of this Milestone.
        :type description: str
        """

        self._description = description

    @property
    def due_date(self):
        """Gets the due_date of this Milestone.


        :return: The due_date of this Milestone.
        :rtype: str
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this Milestone.


        :param due_date: The due_date of this Milestone.
        :type due_date: str
        """

        self._due_date = due_date

    @property
    def id(self):
        """Gets the id of this Milestone.


        :return: The id of this Milestone.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Milestone.


        :param id: The id of this Milestone.
        :type id: str
        """

        self._id = id

    @property
    def iid(self):
        """Gets the iid of this Milestone.


        :return: The iid of this Milestone.
        :rtype: str
        """
        return self._iid

    @iid.setter
    def iid(self, iid):
        """Sets the iid of this Milestone.


        :param iid: The iid of this Milestone.
        :type iid: str
        """

        self._iid = iid

    @property
    def project_id(self):
        """Gets the project_id of this Milestone.


        :return: The project_id of this Milestone.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this Milestone.


        :param project_id: The project_id of this Milestone.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def start_date(self):
        """Gets the start_date of this Milestone.


        :return: The start_date of this Milestone.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Milestone.


        :param start_date: The start_date of this Milestone.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def state(self):
        """Gets the state of this Milestone.


        :return: The state of this Milestone.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Milestone.


        :param state: The state of this Milestone.
        :type state: str
        """

        self._state = state

    @property
    def title(self):
        """Gets the title of this Milestone.


        :return: The title of this Milestone.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Milestone.


        :param title: The title of this Milestone.
        :type title: str
        """

        self._title = title

    @property
    def updated_at(self):
        """Gets the updated_at of this Milestone.


        :return: The updated_at of this Milestone.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this Milestone.


        :param updated_at: The updated_at of this Milestone.
        :type updated_at: str
        """

        self._updated_at = updated_at
