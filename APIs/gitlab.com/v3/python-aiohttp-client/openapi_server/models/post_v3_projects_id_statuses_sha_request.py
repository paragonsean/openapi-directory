# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostV3ProjectsIdStatusesShaRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state: str=None, ref: str=None, target_url: str=None, description: str=None, name: str=None, context: str=None):
        """PostV3ProjectsIdStatusesShaRequest - a model defined in OpenAPI

        :param state: The state of this PostV3ProjectsIdStatusesShaRequest.
        :param ref: The ref of this PostV3ProjectsIdStatusesShaRequest.
        :param target_url: The target_url of this PostV3ProjectsIdStatusesShaRequest.
        :param description: The description of this PostV3ProjectsIdStatusesShaRequest.
        :param name: The name of this PostV3ProjectsIdStatusesShaRequest.
        :param context: The context of this PostV3ProjectsIdStatusesShaRequest.
        """
        self.openapi_types = {
            'state': str,
            'ref': str,
            'target_url': str,
            'description': str,
            'name': str,
            'context': str
        }

        self.attribute_map = {
            'state': 'state',
            'ref': 'ref',
            'target_url': 'target_url',
            'description': 'description',
            'name': 'name',
            'context': 'context'
        }

        self._state = state
        self._ref = ref
        self._target_url = target_url
        self._description = description
        self._name = name
        self._context = context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostV3ProjectsIdStatusesShaRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The postV3ProjectsIdStatusesSha_request of this PostV3ProjectsIdStatusesShaRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state(self):
        """Gets the state of this PostV3ProjectsIdStatusesShaRequest.

        The state of the status

        :return: The state of this PostV3ProjectsIdStatusesShaRequest.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this PostV3ProjectsIdStatusesShaRequest.

        The state of the status

        :param state: The state of this PostV3ProjectsIdStatusesShaRequest.
        :type state: str
        """
        allowed_values = ["pending", "running", "success", "failed", "canceled"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def ref(self):
        """Gets the ref of this PostV3ProjectsIdStatusesShaRequest.

        The ref

        :return: The ref of this PostV3ProjectsIdStatusesShaRequest.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this PostV3ProjectsIdStatusesShaRequest.

        The ref

        :param ref: The ref of this PostV3ProjectsIdStatusesShaRequest.
        :type ref: str
        """

        self._ref = ref

    @property
    def target_url(self):
        """Gets the target_url of this PostV3ProjectsIdStatusesShaRequest.

        The target URL to associate with this status

        :return: The target_url of this PostV3ProjectsIdStatusesShaRequest.
        :rtype: str
        """
        return self._target_url

    @target_url.setter
    def target_url(self, target_url):
        """Sets the target_url of this PostV3ProjectsIdStatusesShaRequest.

        The target URL to associate with this status

        :param target_url: The target_url of this PostV3ProjectsIdStatusesShaRequest.
        :type target_url: str
        """

        self._target_url = target_url

    @property
    def description(self):
        """Gets the description of this PostV3ProjectsIdStatusesShaRequest.

        A short description of the status

        :return: The description of this PostV3ProjectsIdStatusesShaRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PostV3ProjectsIdStatusesShaRequest.

        A short description of the status

        :param description: The description of this PostV3ProjectsIdStatusesShaRequest.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this PostV3ProjectsIdStatusesShaRequest.

        A string label to differentiate this status from the status of other systems. Default: \"default\"

        :return: The name of this PostV3ProjectsIdStatusesShaRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PostV3ProjectsIdStatusesShaRequest.

        A string label to differentiate this status from the status of other systems. Default: \"default\"

        :param name: The name of this PostV3ProjectsIdStatusesShaRequest.
        :type name: str
        """

        self._name = name

    @property
    def context(self):
        """Gets the context of this PostV3ProjectsIdStatusesShaRequest.

        A string label to differentiate this status from the status of other systems. Default: \"default\"

        :return: The context of this PostV3ProjectsIdStatusesShaRequest.
        :rtype: str
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this PostV3ProjectsIdStatusesShaRequest.

        A string label to differentiate this status from the status of other systems. Default: \"default\"

        :param context: The context of this PostV3ProjectsIdStatusesShaRequest.
        :type context: str
        """

        self._context = context
