# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostV3ProjectsIdIssuesIssueIdMoveRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, to_project_id: int=None):
        """PostV3ProjectsIdIssuesIssueIdMoveRequest - a model defined in OpenAPI

        :param to_project_id: The to_project_id of this PostV3ProjectsIdIssuesIssueIdMoveRequest.
        """
        self.openapi_types = {
            'to_project_id': int
        }

        self.attribute_map = {
            'to_project_id': 'to_project_id'
        }

        self._to_project_id = to_project_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostV3ProjectsIdIssuesIssueIdMoveRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The postV3ProjectsIdIssuesIssueIdMove_request of this PostV3ProjectsIdIssuesIssueIdMoveRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def to_project_id(self):
        """Gets the to_project_id of this PostV3ProjectsIdIssuesIssueIdMoveRequest.

        The ID of the new project

        :return: The to_project_id of this PostV3ProjectsIdIssuesIssueIdMoveRequest.
        :rtype: int
        """
        return self._to_project_id

    @to_project_id.setter
    def to_project_id(self, to_project_id):
        """Sets the to_project_id of this PostV3ProjectsIdIssuesIssueIdMoveRequest.

        The ID of the new project

        :param to_project_id: The to_project_id of this PostV3ProjectsIdIssuesIssueIdMoveRequest.
        :type to_project_id: int
        """
        if to_project_id is None:
            raise ValueError("Invalid value for `to_project_id`, must not be `None`")

        self._to_project_id = to_project_id
