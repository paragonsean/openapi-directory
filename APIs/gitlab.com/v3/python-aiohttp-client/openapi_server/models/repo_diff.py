# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RepoDiff(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, a_mode: str=None, b_mode: str=None, deleted_file: str=None, diff: str=None, new_file: str=None, new_path: str=None, old_path: str=None, renamed_file: str=None):
        """RepoDiff - a model defined in OpenAPI

        :param a_mode: The a_mode of this RepoDiff.
        :param b_mode: The b_mode of this RepoDiff.
        :param deleted_file: The deleted_file of this RepoDiff.
        :param diff: The diff of this RepoDiff.
        :param new_file: The new_file of this RepoDiff.
        :param new_path: The new_path of this RepoDiff.
        :param old_path: The old_path of this RepoDiff.
        :param renamed_file: The renamed_file of this RepoDiff.
        """
        self.openapi_types = {
            'a_mode': str,
            'b_mode': str,
            'deleted_file': str,
            'diff': str,
            'new_file': str,
            'new_path': str,
            'old_path': str,
            'renamed_file': str
        }

        self.attribute_map = {
            'a_mode': 'a_mode',
            'b_mode': 'b_mode',
            'deleted_file': 'deleted_file',
            'diff': 'diff',
            'new_file': 'new_file',
            'new_path': 'new_path',
            'old_path': 'old_path',
            'renamed_file': 'renamed_file'
        }

        self._a_mode = a_mode
        self._b_mode = b_mode
        self._deleted_file = deleted_file
        self._diff = diff
        self._new_file = new_file
        self._new_path = new_path
        self._old_path = old_path
        self._renamed_file = renamed_file

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepoDiff':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepoDiff of this RepoDiff.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def a_mode(self):
        """Gets the a_mode of this RepoDiff.


        :return: The a_mode of this RepoDiff.
        :rtype: str
        """
        return self._a_mode

    @a_mode.setter
    def a_mode(self, a_mode):
        """Sets the a_mode of this RepoDiff.


        :param a_mode: The a_mode of this RepoDiff.
        :type a_mode: str
        """

        self._a_mode = a_mode

    @property
    def b_mode(self):
        """Gets the b_mode of this RepoDiff.


        :return: The b_mode of this RepoDiff.
        :rtype: str
        """
        return self._b_mode

    @b_mode.setter
    def b_mode(self, b_mode):
        """Sets the b_mode of this RepoDiff.


        :param b_mode: The b_mode of this RepoDiff.
        :type b_mode: str
        """

        self._b_mode = b_mode

    @property
    def deleted_file(self):
        """Gets the deleted_file of this RepoDiff.


        :return: The deleted_file of this RepoDiff.
        :rtype: str
        """
        return self._deleted_file

    @deleted_file.setter
    def deleted_file(self, deleted_file):
        """Sets the deleted_file of this RepoDiff.


        :param deleted_file: The deleted_file of this RepoDiff.
        :type deleted_file: str
        """

        self._deleted_file = deleted_file

    @property
    def diff(self):
        """Gets the diff of this RepoDiff.


        :return: The diff of this RepoDiff.
        :rtype: str
        """
        return self._diff

    @diff.setter
    def diff(self, diff):
        """Sets the diff of this RepoDiff.


        :param diff: The diff of this RepoDiff.
        :type diff: str
        """

        self._diff = diff

    @property
    def new_file(self):
        """Gets the new_file of this RepoDiff.


        :return: The new_file of this RepoDiff.
        :rtype: str
        """
        return self._new_file

    @new_file.setter
    def new_file(self, new_file):
        """Sets the new_file of this RepoDiff.


        :param new_file: The new_file of this RepoDiff.
        :type new_file: str
        """

        self._new_file = new_file

    @property
    def new_path(self):
        """Gets the new_path of this RepoDiff.


        :return: The new_path of this RepoDiff.
        :rtype: str
        """
        return self._new_path

    @new_path.setter
    def new_path(self, new_path):
        """Sets the new_path of this RepoDiff.


        :param new_path: The new_path of this RepoDiff.
        :type new_path: str
        """

        self._new_path = new_path

    @property
    def old_path(self):
        """Gets the old_path of this RepoDiff.


        :return: The old_path of this RepoDiff.
        :rtype: str
        """
        return self._old_path

    @old_path.setter
    def old_path(self, old_path):
        """Sets the old_path of this RepoDiff.


        :param old_path: The old_path of this RepoDiff.
        :type old_path: str
        """

        self._old_path = old_path

    @property
    def renamed_file(self):
        """Gets the renamed_file of this RepoDiff.


        :return: The renamed_file of this RepoDiff.
        :rtype: str
        """
        return self._renamed_file

    @renamed_file.setter
    def renamed_file(self, renamed_file):
        """Sets the renamed_file of this RepoDiff.


        :param renamed_file: The renamed_file of this RepoDiff.
        :type renamed_file: str
        """

        self._renamed_file = renamed_file
