# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_basic import UserBasic
from openapi_server import util


class CommitStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_failure: str=None, author: UserBasic=None, created_at: str=None, description: str=None, finished_at: str=None, id: str=None, name: str=None, ref: str=None, sha: str=None, started_at: str=None, status: str=None, target_url: str=None):
        """CommitStatus - a model defined in OpenAPI

        :param allow_failure: The allow_failure of this CommitStatus.
        :param author: The author of this CommitStatus.
        :param created_at: The created_at of this CommitStatus.
        :param description: The description of this CommitStatus.
        :param finished_at: The finished_at of this CommitStatus.
        :param id: The id of this CommitStatus.
        :param name: The name of this CommitStatus.
        :param ref: The ref of this CommitStatus.
        :param sha: The sha of this CommitStatus.
        :param started_at: The started_at of this CommitStatus.
        :param status: The status of this CommitStatus.
        :param target_url: The target_url of this CommitStatus.
        """
        self.openapi_types = {
            'allow_failure': str,
            'author': UserBasic,
            'created_at': str,
            'description': str,
            'finished_at': str,
            'id': str,
            'name': str,
            'ref': str,
            'sha': str,
            'started_at': str,
            'status': str,
            'target_url': str
        }

        self.attribute_map = {
            'allow_failure': 'allow_failure',
            'author': 'author',
            'created_at': 'created_at',
            'description': 'description',
            'finished_at': 'finished_at',
            'id': 'id',
            'name': 'name',
            'ref': 'ref',
            'sha': 'sha',
            'started_at': 'started_at',
            'status': 'status',
            'target_url': 'target_url'
        }

        self._allow_failure = allow_failure
        self._author = author
        self._created_at = created_at
        self._description = description
        self._finished_at = finished_at
        self._id = id
        self._name = name
        self._ref = ref
        self._sha = sha
        self._started_at = started_at
        self._status = status
        self._target_url = target_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommitStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommitStatus of this CommitStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_failure(self):
        """Gets the allow_failure of this CommitStatus.


        :return: The allow_failure of this CommitStatus.
        :rtype: str
        """
        return self._allow_failure

    @allow_failure.setter
    def allow_failure(self, allow_failure):
        """Sets the allow_failure of this CommitStatus.


        :param allow_failure: The allow_failure of this CommitStatus.
        :type allow_failure: str
        """

        self._allow_failure = allow_failure

    @property
    def author(self):
        """Gets the author of this CommitStatus.


        :return: The author of this CommitStatus.
        :rtype: UserBasic
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this CommitStatus.


        :param author: The author of this CommitStatus.
        :type author: UserBasic
        """

        self._author = author

    @property
    def created_at(self):
        """Gets the created_at of this CommitStatus.


        :return: The created_at of this CommitStatus.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CommitStatus.


        :param created_at: The created_at of this CommitStatus.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this CommitStatus.


        :return: The description of this CommitStatus.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CommitStatus.


        :param description: The description of this CommitStatus.
        :type description: str
        """

        self._description = description

    @property
    def finished_at(self):
        """Gets the finished_at of this CommitStatus.


        :return: The finished_at of this CommitStatus.
        :rtype: str
        """
        return self._finished_at

    @finished_at.setter
    def finished_at(self, finished_at):
        """Sets the finished_at of this CommitStatus.


        :param finished_at: The finished_at of this CommitStatus.
        :type finished_at: str
        """

        self._finished_at = finished_at

    @property
    def id(self):
        """Gets the id of this CommitStatus.


        :return: The id of this CommitStatus.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CommitStatus.


        :param id: The id of this CommitStatus.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this CommitStatus.


        :return: The name of this CommitStatus.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CommitStatus.


        :param name: The name of this CommitStatus.
        :type name: str
        """

        self._name = name

    @property
    def ref(self):
        """Gets the ref of this CommitStatus.


        :return: The ref of this CommitStatus.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this CommitStatus.


        :param ref: The ref of this CommitStatus.
        :type ref: str
        """

        self._ref = ref

    @property
    def sha(self):
        """Gets the sha of this CommitStatus.


        :return: The sha of this CommitStatus.
        :rtype: str
        """
        return self._sha

    @sha.setter
    def sha(self, sha):
        """Sets the sha of this CommitStatus.


        :param sha: The sha of this CommitStatus.
        :type sha: str
        """

        self._sha = sha

    @property
    def started_at(self):
        """Gets the started_at of this CommitStatus.


        :return: The started_at of this CommitStatus.
        :rtype: str
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this CommitStatus.


        :param started_at: The started_at of this CommitStatus.
        :type started_at: str
        """

        self._started_at = started_at

    @property
    def status(self):
        """Gets the status of this CommitStatus.


        :return: The status of this CommitStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CommitStatus.


        :param status: The status of this CommitStatus.
        :type status: str
        """

        self._status = status

    @property
    def target_url(self):
        """Gets the target_url of this CommitStatus.


        :return: The target_url of this CommitStatus.
        :rtype: str
        """
        return self._target_url

    @target_url.setter
    def target_url(self, target_url):
        """Sets the target_url of this CommitStatus.


        :param target_url: The target_url of this CommitStatus.
        :type target_url: str
        """

        self._target_url = target_url
