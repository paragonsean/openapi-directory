# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.release import Release
from openapi_server import util


class RepoTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commit: str=None, message: str=None, name: str=None, release: Release=None):
        """RepoTag - a model defined in OpenAPI

        :param commit: The commit of this RepoTag.
        :param message: The message of this RepoTag.
        :param name: The name of this RepoTag.
        :param release: The release of this RepoTag.
        """
        self.openapi_types = {
            'commit': str,
            'message': str,
            'name': str,
            'release': Release
        }

        self.attribute_map = {
            'commit': 'commit',
            'message': 'message',
            'name': 'name',
            'release': 'release'
        }

        self._commit = commit
        self._message = message
        self._name = name
        self._release = release

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepoTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepoTag of this RepoTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit(self):
        """Gets the commit of this RepoTag.


        :return: The commit of this RepoTag.
        :rtype: str
        """
        return self._commit

    @commit.setter
    def commit(self, commit):
        """Sets the commit of this RepoTag.


        :param commit: The commit of this RepoTag.
        :type commit: str
        """

        self._commit = commit

    @property
    def message(self):
        """Gets the message of this RepoTag.


        :return: The message of this RepoTag.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this RepoTag.


        :param message: The message of this RepoTag.
        :type message: str
        """

        self._message = message

    @property
    def name(self):
        """Gets the name of this RepoTag.


        :return: The name of this RepoTag.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RepoTag.


        :param name: The name of this RepoTag.
        :type name: str
        """

        self._name = name

    @property
    def release(self):
        """Gets the release of this RepoTag.


        :return: The release of this RepoTag.
        :rtype: Release
        """
        return self._release

    @release.setter
    def release(self, release):
        """Sets the release of this RepoTag.


        :param release: The release of this RepoTag.
        :type release: Release
        """

        self._release = release
