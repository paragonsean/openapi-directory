openapi: 3.0.1
info:
  description: |-
    The platform for modern developers
    GitLab unifies issues, code review, CI and CD into a single UI
  title: Gitlab
  version: v3
  x-apisguru-categories:
  - developer_tools
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://cloud.githubusercontent.com/assets/21603/24521837/642e411c-1585-11e7-817f-61082580b6f6.png
  x-origin:
  - format: swagger
    url: https://axil.gitlab.io/swaggerapi/static/swagger.json
    version: "2.0"
  - format: swagger
    url: https://raw.githubusercontent.com/Mermade/openapi-definitions/master/gitlab/swagger.json
    version: "2.0"
  x-providerName: gitlab.com
servers:
- url: https://gitlab.com/api
security:
- private_token_header: []
- private_token_query: []
tags:
- description: Operations about groups
  name: groups
- description: Operations about projects
  name: projects
- description: Operations about internals
  name: internal
- description: Operations about issues
  name: issues
- description: Operations about keys
  name: keys
- description: Operations about cis
  name: ci
- description: Operations about namespaces
  name: namespaces
- description: Operations about notification_settings
  name: notification_settings
- description: Operations about runners
  name: runners
- description: Operations about snippets
  name: snippets
- description: Operations about hooks
  name: hooks
- description: Operations about todos
  name: todos
- description: Operations about users
  name: users
- description: Operations about users
  name: user
- description: Operations about deploy_keys
  name: deploy_keys
- description: Operations about sessions
  name: session
- description: Operations about applications
  name: application
- description: Operations about sidekiqs
  name: sidekiq
- description: Operations about licenses
  name: licenses
- description: Operations about templates
  name: templates
- description: Operations about gitignores
  name: gitignores
- description: Operations about gitlab_ci_ymls
  name: gitlab_ci_ymls
- description: Operations about dockerfiles
  name: dockerfiles
- description: Operations about versions
  name: version
paths:
  /v3/application/settings:
    get:
      description: Get the current application settings
      operationId: get_v3_application_settings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSetting'
          description: Get the current application settings
      summary: Get the current application settings
      tags:
      - application
      x-openapi-router-controller: openapi_server.controllers.application_controller
    put:
      description: Modify application settings
      operationId: put_v3_application_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ApplicationSettings_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSetting'
          description: Modify application settings
      summary: Modify application settings
      tags:
      - application
      x-openapi-router-controller: openapi_server.controllers.application_controller
      x-codegen-request-body-name: body
  /v3/ci/lint:
    post:
      description: Validation of .gitlab-ci.yml content
      operationId: post_v3_ci_lint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3CiLint_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content: {}
          description: Validation of .gitlab-ci.yml content
      summary: Validation of .gitlab-ci.yml content
      tags:
      - ci
      x-openapi-router-controller: openapi_server.controllers.ci_controller
      x-codegen-request-body-name: body
  /v3/deploy_keys:
    get:
      operationId: get_v3_deploy_keys
      responses:
        "200":
          content: {}
          description: get DeployKey(s)
      tags:
      - deploy_keys
      x-openapi-router-controller: openapi_server.controllers.deploy_keys_controller
  /v3/dockerfiles:
    get:
      description: This feature was introduced in GitLab 8.15. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      operationId: get_v3_dockerfiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesList'
          description: Get the list of the available template
      summary: Get the list of the available template
      tags:
      - dockerfiles
      x-openapi-router-controller: openapi_server.controllers.dockerfiles_controller
  /v3/dockerfiles/{name}:
    get:
      description: This feature was introduced in GitLab 8.15. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      operationId: get_v3_dockerfiles_name
      parameters:
      - description: The name of the template
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Get the text for a specific template present in local filesystem
      summary: Get the text for a specific template present in local filesystem
      tags:
      - dockerfiles
      x-openapi-router-controller: openapi_server.controllers.dockerfiles_controller
  /v3/gitignores:
    get:
      description: This feature was introduced in GitLab 8.8. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      operationId: get_v3_gitignores
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesList'
          description: Get the list of the available template
      summary: Get the list of the available template
      tags:
      - gitignores
      x-openapi-router-controller: openapi_server.controllers.gitignores_controller
  /v3/gitignores/{name}:
    get:
      description: This feature was introduced in GitLab 8.8. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      operationId: get_v3_gitignores_name
      parameters:
      - description: The name of the template
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Get the text for a specific template present in local filesystem
      summary: Get the text for a specific template present in local filesystem
      tags:
      - gitignores
      x-openapi-router-controller: openapi_server.controllers.gitignores_controller
  /v3/gitlab_ci_ymls:
    get:
      description: This feature was introduced in GitLab 8.9. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      operationId: get_v3_gitlab_ci_ymls
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesList'
          description: Get the list of the available template
      summary: Get the list of the available template
      tags:
      - gitlab_ci_ymls
      x-openapi-router-controller: openapi_server.controllers.gitlab_ci_ymls_controller
  /v3/gitlab_ci_ymls/{name}:
    get:
      description: This feature was introduced in GitLab 8.9. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      operationId: get_v3_gitlab_ci_ymls_name
      parameters:
      - description: The name of the template
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Get the text for a specific template present in local filesystem
      summary: Get the text for a specific template present in local filesystem
      tags:
      - gitlab_ci_ymls
      x-openapi-router-controller: openapi_server.controllers.gitlab_ci_ymls_controller
  /v3/groups:
    get:
      description: Get a groups list
      operationId: get_v3_groups
      parameters:
      - description: Include project statistics
        in: query
        name: statistics
        schema:
          type: boolean
      - description: Show all group that you have access to
        in: query
        name: all_available
        schema:
          type: boolean
      - description: Search for a specific group
        in: query
        name: search
        schema:
          type: string
      - description: Order by name or path
        in: query
        name: order_by
        schema:
          default: name
          enum:
          - name
          - path
          type: string
      - description: Sort by asc (ascending) or desc (descending)
        in: query
        name: sort
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/getV3Groups_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Get a groups list
      summary: Get a groups list
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
    post:
      description: Create a group. Available only for users who can create groups.
      operationId: post_v3_groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3Groups_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Create a group. Available only for users who can create groups.
      summary: Create a group. Available only for users who can create groups.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /v3/groups/owned:
    get:
      description: Get list of owned groups for authenticated user
      operationId: get_v3_groups_owned
      parameters:
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - description: Include project statistics
        in: query
        name: statistics
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Get list of owned groups for authenticated user
      summary: Get list of owned groups for authenticated user
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /v3/groups/{id}:
    delete:
      description: Remove a group.
      operationId: delete_v3_groups_id
      parameters:
      - description: The ID of a group
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Remove a group.
      summary: Remove a group.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    get:
      description: "Get a single group, with containing projects."
      operationId: get_v3_groups_id
      parameters:
      - description: The ID of a group
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetail'
          description: "Get a single group, with containing projects."
      summary: "Get a single group, with containing projects."
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    put:
      description: Update a group. Available only for users who can administrate groups.
      operationId: put_v3_groups_id
      parameters:
      - description: The ID of a group
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3GroupsId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Update a group. Available only for users who can administrate
            groups.
      summary: Update a group. Available only for users who can administrate groups.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /v3/groups/{id}/access_requests:
    get:
      description: This feature was introduced in GitLab 8.11.
      operationId: get_v3_groups_id_access_requests
      parameters:
      - description: The group ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequester'
          description: Gets a list of access requests for a group.
      summary: Gets a list of access requests for a group.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    post:
      description: This feature was introduced in GitLab 8.11.
      operationId: post_v3_groups_id_access_requests
      parameters:
      - description: The group ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequester'
          description: Requests access for the authenticated user to a group.
      summary: Requests access for the authenticated user to a group.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /v3/groups/{id}/access_requests/{user_id}:
    delete:
      description: This feature was introduced in GitLab 8.11.
      operationId: delete_v3_groups_id_access_requests_user_id
      parameters:
      - description: The group ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the access requester
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Denies an access request for the given user.
      summary: Denies an access request for the given user.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /v3/groups/{id}/access_requests/{user_id}/approve:
    put:
      description: This feature was introduced in GitLab 8.11.
      operationId: put_v3_groups_id_access_requests_user_id_approve
      parameters:
      - description: The group ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the access requester
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3GroupsIdAccessRequestsUserIdApprove_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Approves an access request for the given user.
      summary: Approves an access request for the given user.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /v3/groups/{id}/issues:
    get:
      description: Get a list of group issues
      operationId: get_v3_groups_id_issues
      parameters:
      - description: The ID of a group
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Return opened, closed, or all issues"
        in: query
        name: state
        schema:
          default: opened
          enum:
          - opened
          - closed
          - all
          type: string
      - description: Comma-separated list of label names
        in: query
        name: labels
        schema:
          type: string
      - description: Return issues for a specific milestone
        in: query
        name: milestone
        schema:
          type: string
      - description: Return issues ordered by `created_at` or `updated_at` fields.
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
      - description: Return issues sorted in `asc` or `desc` order.
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Get a list of group issues
      summary: Get a list of group issues
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /v3/groups/{id}/members:
    get:
      description: Gets a list of group or project members viewable by the authenticated
        user.
      operationId: get_v3_groups_id_members
      parameters:
      - description: The group ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: A query string to search for members
        in: query
        name: query
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Gets a list of group or project members viewable by the authenticated
            user.
      summary: Gets a list of group or project members viewable by the authenticated
        user.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    post:
      description: Adds a member to a group or project.
      operationId: post_v3_groups_id_members
      parameters:
      - description: The group ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3GroupsIdMembers_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Adds a member to a group or project.
      summary: Adds a member to a group or project.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /v3/groups/{id}/members/{user_id}:
    delete:
      description: Removes a user from a group or project.
      operationId: delete_v3_groups_id_members_user_id
      parameters:
      - description: The group ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the member
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Removes a user from a group or project.
      summary: Removes a user from a group or project.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    get:
      description: Gets a member of a group or project.
      operationId: get_v3_groups_id_members_user_id
      parameters:
      - description: The group ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the member
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Gets a member of a group or project.
      summary: Gets a member of a group or project.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    put:
      description: Updates a member of a group or project.
      operationId: put_v3_groups_id_members_user_id
      parameters:
      - description: The group ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the new member
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3GroupsIdMembersUserId_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Updates a member of a group or project.
      summary: Updates a member of a group or project.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /v3/groups/{id}/notification_settings:
    get:
      description: This feature was introduced in GitLab 8.12
      operationId: get_v3_groups_id_notification_settings
      parameters:
      - description: The group ID or project ID or project NAMESPACE/PROJECT_NAME
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: "Get group level notification level settings, defaults to Global"
      summary: "Get group level notification level settings, defaults to Global"
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    put:
      description: This feature was introduced in GitLab 8.12
      operationId: put_v3_groups_id_notification_settings
      parameters:
      - description: The group ID or project ID or project NAMESPACE/PROJECT_NAME
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3GroupsIdNotificationSettings_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: "Update group level notification level settings, defaults to\
            \ Global"
      summary: "Update group level notification level settings, defaults to Global"
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /v3/groups/{id}/projects:
    get:
      description: Get a list of projects in this group.
      operationId: get_v3_groups_id_projects
      parameters:
      - description: The ID of a group
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Limit by archived status
        in: query
        name: archived
        schema:
          type: boolean
      - description: Limit by visibility
        in: query
        name: visibility
        schema:
          enum:
          - public
          - internal
          - private
          type: string
      - description: Return list of authorized projects matching the search criteria
        in: query
        name: search
        schema:
          type: string
      - description: Return projects ordered by field
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - id
          - name
          - path
          - created_at
          - updated_at
          - last_activity_at
          type: string
      - description: Return projects sorted in ascending and descending order
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: "Return only the ID, URL, name, and path of each project"
        in: query
        name: simple
        schema:
          type: boolean
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Get a list of projects in this group.
      summary: Get a list of projects in this group.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /v3/groups/{id}/projects/{project_id}:
    post:
      description: Transfer a project to the group namespace. Available only for admin.
      operationId: post_v3_groups_id_projects_project_id
      parameters:
      - description: The ID of a group
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID or path of the project
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetail'
          description: Transfer a project to the group namespace. Available only for
            admin.
      summary: Transfer a project to the group namespace. Available only for admin.
      tags:
      - groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /v3/hooks:
    get:
      description: Get the list of system hooks
      operationId: get_v3_hooks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Get the list of system hooks
      summary: Get the list of system hooks
      tags:
      - hooks
      x-openapi-router-controller: openapi_server.controllers.hooks_controller
    post:
      description: Create a new system hook
      operationId: post_v3_hooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3Hooks_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Create a new system hook
      summary: Create a new system hook
      tags:
      - hooks
      x-openapi-router-controller: openapi_server.controllers.hooks_controller
      x-codegen-request-body-name: body
  /v3/hooks/{id}:
    delete:
      description: Delete a hook
      operationId: delete_v3_hooks_id
      parameters:
      - description: The ID of the system hook
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Delete a hook
      summary: Delete a hook
      tags:
      - hooks
      x-openapi-router-controller: openapi_server.controllers.hooks_controller
    get:
      description: Test a hook
      operationId: get_v3_hooks_id
      parameters:
      - description: The ID of the system hook
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
          description: Test a hook
      summary: Test a hook
      tags:
      - hooks
      x-openapi-router-controller: openapi_server.controllers.hooks_controller
  /v3/internal/allowed:
    post:
      operationId: post_v3_internal_allowed
      responses:
        "201":
          content: {}
          description: created Allowed
      tags:
      - internal
      x-openapi-router-controller: openapi_server.controllers.internal_controller
  /v3/internal/broadcast_message:
    get:
      operationId: get_v3_internal_broadcast_message
      responses:
        "200":
          content: {}
          description: get BroadcastMessage(s)
      tags:
      - internal
      x-openapi-router-controller: openapi_server.controllers.internal_controller
  /v3/internal/check:
    get:
      operationId: get_v3_internal_check
      responses:
        "200":
          content: {}
          description: get Check(s)
      tags:
      - internal
      x-openapi-router-controller: openapi_server.controllers.internal_controller
  /v3/internal/discover:
    get:
      operationId: get_v3_internal_discover
      responses:
        "200":
          content: {}
          description: get Discover(s)
      tags:
      - internal
      x-openapi-router-controller: openapi_server.controllers.internal_controller
  /v3/internal/lfs_authenticate:
    post:
      operationId: post_v3_internal_lfs_authenticate
      responses:
        "201":
          content: {}
          description: created LfsAuthenticate
      tags:
      - internal
      x-openapi-router-controller: openapi_server.controllers.internal_controller
  /v3/internal/merge_request_urls:
    get:
      operationId: get_v3_internal_merge_request_urls
      responses:
        "200":
          content: {}
          description: get MergeRequestUrl(s)
      tags:
      - internal
      x-openapi-router-controller: openapi_server.controllers.internal_controller
  /v3/internal/two_factor_recovery_codes:
    post:
      operationId: post_v3_internal_two_factor_recovery_codes
      responses:
        "201":
          content: {}
          description: created TwoFactorRecoveryCode
      tags:
      - internal
      x-openapi-router-controller: openapi_server.controllers.internal_controller
  /v3/issues:
    get:
      description: Get currently authenticated user's issues
      operationId: get_v3_issues
      parameters:
      - description: "Return opened, closed, or all issues"
        in: query
        name: state
        schema:
          default: all
          enum:
          - opened
          - closed
          - all
          type: string
      - description: Comma-separated list of label names
        in: query
        name: labels
        schema:
          type: string
      - description: Return issues for a specific milestone
        in: query
        name: milestone
        schema:
          type: string
      - description: Return issues ordered by `created_at` or `updated_at` fields.
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
      - description: Return issues sorted in `asc` or `desc` order.
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Get currently authenticated user's issues
      summary: Get currently authenticated user's issues
      tags:
      - issues
      x-openapi-router-controller: openapi_server.controllers.issues_controller
  /v3/keys/{id}:
    get:
      description: Get single ssh key by id. Only available to admin users
      operationId: get_v3_keys_id
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKeyWithUser'
          description: Get single ssh key by id. Only available to admin users
      summary: Get single ssh key by id. Only available to admin users
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
  /v3/licenses:
    get:
      description: This feature was introduced in GitLab 8.7. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      operationId: get_v3_licenses
      parameters:
      - description: "If passed, returns only popular licenses"
        in: query
        name: popular
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoLicense'
          description: Get the list of the available license template
      summary: Get the list of the available license template
      tags:
      - licenses
      x-openapi-router-controller: openapi_server.controllers.licenses_controller
  /v3/licenses/{name}:
    get:
      description: This feature was introduced in GitLab 8.7. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      operationId: get_v3_licenses_name
      parameters:
      - description: The name of the template
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoLicense'
          description: Get the text for a specific license
      summary: Get the text for a specific license
      tags:
      - licenses
      x-openapi-router-controller: openapi_server.controllers.licenses_controller
  /v3/namespaces:
    get:
      description: Get a namespaces list
      operationId: get_v3_namespaces
      parameters:
      - description: Search query for namespaces
        in: query
        name: search
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Get a namespaces list
      summary: Get a namespaces list
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
  /v3/notification_settings:
    get:
      description: This feature was introduced in GitLab 8.12
      operationId: get_v3_notification_settings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalNotificationSetting'
          description: "Get global notification level settings and email, defaults\
            \ to Participate"
      summary: "Get global notification level settings and email, defaults to Participate"
      tags:
      - notification_settings
      x-openapi-router-controller: openapi_server.controllers.notification_settings_controller
    put:
      description: This feature was introduced in GitLab 8.12
      operationId: put_v3_notification_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3NotificationSettings_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalNotificationSetting'
          description: "Update global notification level settings and email, defaults\
            \ to Participate"
      summary: "Update global notification level settings and email, defaults to Participate"
      tags:
      - notification_settings
      x-openapi-router-controller: openapi_server.controllers.notification_settings_controller
      x-codegen-request-body-name: body
  /v3/projects:
    get:
      description: Get a projects list for authenticated user
      operationId: get_v3_projects
      parameters:
      - description: Return projects ordered by field
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - id
          - name
          - path
          - created_at
          - updated_at
          - last_activity_at
          type: string
      - description: Return projects sorted in ascending and descending order
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Limit by archived status
        in: query
        name: archived
        schema:
          type: boolean
      - description: Limit by visibility
        in: query
        name: visibility
        schema:
          enum:
          - public
          - internal
          - private
          type: string
      - description: Return list of authorized projects matching the search criteria
        in: query
        name: search
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - description: "Return only the ID, URL, name, and path of each project"
        in: query
        name: simple
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicProjectDetails'
          description: Get a projects list for authenticated user
      summary: Get a projects list for authenticated user
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create new project
      operationId: post_v3_projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3Projects_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Create new project
      summary: Create new project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/all:
    get:
      description: Get all projects for admin user
      operationId: get_v3_projects_all
      parameters:
      - description: Return projects ordered by field
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - id
          - name
          - path
          - created_at
          - updated_at
          - last_activity_at
          type: string
      - description: Return projects sorted in ascending and descending order
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Limit by archived status
        in: query
        name: archived
        schema:
          type: boolean
      - description: Limit by visibility
        in: query
        name: visibility
        schema:
          enum:
          - public
          - internal
          - private
          type: string
      - description: Return list of authorized projects matching the search criteria
        in: query
        name: search
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - description: "Return only the ID, URL, name, and path of each project"
        in: query
        name: simple
        schema:
          type: boolean
      - description: Include project statistics
        in: query
        name: statistics
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicProjectDetails'
          description: Get all projects for admin user
      summary: Get all projects for admin user
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/fork/{id}:
    post:
      description: Fork new project for the current user or provided namespace.
      operationId: post_v3_projects_fork_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsForkId_request'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Fork new project for the current user or provided namespace.
      summary: Fork new project for the current user or provided namespace.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/owned:
    get:
      description: Get an owned projects list for authenticated user
      operationId: get_v3_projects_owned
      parameters:
      - description: Return projects ordered by field
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - id
          - name
          - path
          - created_at
          - updated_at
          - last_activity_at
          type: string
      - description: Return projects sorted in ascending and descending order
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Limit by archived status
        in: query
        name: archived
        schema:
          type: boolean
      - description: Limit by visibility
        in: query
        name: visibility
        schema:
          enum:
          - public
          - internal
          - private
          type: string
      - description: Return list of authorized projects matching the search criteria
        in: query
        name: search
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - description: "Return only the ID, URL, name, and path of each project"
        in: query
        name: simple
        schema:
          type: boolean
      - description: Include project statistics
        in: query
        name: statistics
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicProjectDetails'
          description: Get an owned projects list for authenticated user
      summary: Get an owned projects list for authenticated user
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/search/{query}:
    get:
      description: Search for projects the current user has access to
      operationId: get_v3_projects_search_query
      parameters:
      - description: The project name to be searched
        in: path
        name: query
        required: true
        schema:
          type: string
      - description: Return projects ordered by field
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - id
          - name
          - path
          - created_at
          - updated_at
          - last_activity_at
          type: string
      - description: Return projects sorted in ascending and descending order
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Search for projects the current user has access to
      summary: Search for projects the current user has access to
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/starred:
    get:
      description: Gets starred project for the authenticated user
      operationId: get_v3_projects_starred
      parameters:
      - description: Return projects ordered by field
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - id
          - name
          - path
          - created_at
          - updated_at
          - last_activity_at
          type: string
      - description: Return projects sorted in ascending and descending order
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Limit by archived status
        in: query
        name: archived
        schema:
          type: boolean
      - description: Limit by visibility
        in: query
        name: visibility
        schema:
          enum:
          - public
          - internal
          - private
          type: string
      - description: Return list of authorized projects matching the search criteria
        in: query
        name: search
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - description: "Return only the ID, URL, name, and path of each project"
        in: query
        name: simple
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicProjectDetails'
          description: Gets starred project for the authenticated user
      summary: Gets starred project for the authenticated user
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/user/{user_id}:
    post:
      description: Create new project for a specified user. Only available to admin
        users.
      operationId: post_v3_projects_user_user_id
      parameters:
      - description: The ID of a user
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsUserUserId_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Create new project for a specified user. Only available to
            admin users.
      summary: Create new project for a specified user. Only available to admin users.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/visible:
    get:
      description: Get a list of visible projects for authenticated user
      operationId: get_v3_projects_visible
      parameters:
      - description: Return projects ordered by field
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - id
          - name
          - path
          - created_at
          - updated_at
          - last_activity_at
          type: string
      - description: Return projects sorted in ascending and descending order
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Limit by archived status
        in: query
        name: archived
        schema:
          type: boolean
      - description: Limit by visibility
        in: query
        name: visibility
        schema:
          enum:
          - public
          - internal
          - private
          type: string
      - description: Return list of authorized projects matching the search criteria
        in: query
        name: search
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - description: "Return only the ID, URL, name, and path of each project"
        in: query
        name: simple
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicProjectDetails'
          description: Get a list of visible projects for authenticated user
      summary: Get a list of visible projects for authenticated user
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}:
    delete:
      description: Remove a project
      operationId: delete_v3_projects_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Remove a project
      summary: Remove a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a single project
      operationId: get_v3_projects_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectWithAccess'
          description: Get a single project
      summary: Get a single project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update an existing project
      operationId: put_v3_projects_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Update an existing project
      summary: Update an existing project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/(ref/{ref}/)trigger/builds:
    post:
      description: Trigger a GitLab project build
      operationId: post_v3_projects_id_ref_reftrigger_builds
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The commit sha or name of a branch or tag
        in: path
        name: ref
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsId_refRef_triggerBuilds_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerRequest'
          description: Trigger a GitLab project build
      summary: Trigger a GitLab project build
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/access_requests:
    get:
      description: This feature was introduced in GitLab 8.11.
      operationId: get_v3_projects_id_access_requests
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequester'
          description: Gets a list of access requests for a project.
      summary: Gets a list of access requests for a project.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in GitLab 8.11.
      operationId: post_v3_projects_id_access_requests
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequester'
          description: Requests access for the authenticated user to a project.
      summary: Requests access for the authenticated user to a project.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/access_requests/{user_id}:
    delete:
      description: This feature was introduced in GitLab 8.11.
      operationId: delete_v3_projects_id_access_requests_user_id
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the access requester
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Denies an access request for the given user.
      summary: Denies an access request for the given user.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/access_requests/{user_id}/approve:
    put:
      description: This feature was introduced in GitLab 8.11.
      operationId: put_v3_projects_id_access_requests_user_id_approve
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the access requester
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3GroupsIdAccessRequestsUserIdApprove_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Approves an access request for the given user.
      summary: Approves an access request for the given user.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/archive:
    post:
      description: Archive a project
      operationId: post_v3_projects_id_archive
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Archive a project
      summary: Archive a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/boards:
    get:
      description: This feature was introduced in 8.13
      operationId: get_v3_projects_id_boards
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: Get all project boards
      summary: Get all project boards
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/boards/{board_id}/lists:
    get:
      description: Does not include `backlog` and `done` lists. This feature was introduced
        in 8.13
      operationId: get_v3_projects_id_boards_board_id_lists
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a board
        in: path
        name: board_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: Get the lists of a project board
      summary: Get the lists of a project board
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in 8.13
      operationId: post_v3_projects_id_boards_board_id_lists
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a board
        in: path
        name: board_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdBoardsBoardIdLists_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: Create a new board list
      summary: Create a new board list
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/boards/{board_id}/lists/{list_id}:
    delete:
      description: This feature was introduced in 8.13
      operationId: delete_v3_projects_id_boards_board_id_lists_list_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a board
        in: path
        name: board_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a board list
        in: path
        name: list_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: Delete a board list
      summary: Delete a board list
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: This feature was introduced in 8.13
      operationId: get_v3_projects_id_boards_board_id_lists_list_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a board
        in: path
        name: board_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a list
        in: path
        name: list_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: Get a list of a project board
      summary: Get a list of a project board
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: This feature was introduced in 8.13
      operationId: put_v3_projects_id_boards_board_id_lists_list_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a board
        in: path
        name: board_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a list
        in: path
        name: list_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdBoardsBoardIdListsListId_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: Moves a board list to a new position
      summary: Moves a board list to a new position
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/builds:
    get:
      description: Get a project builds
      operationId: get_v3_projects_id_builds
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The scope of builds to show
        in: query
        name: scope
        schema:
          enum:
          - pending
          - running
          - failed
          - success
          - canceled
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: Get a project builds
      summary: Get a project builds
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/builds/artifacts/{ref_name}/download:
    get:
      description: This feature was introduced in GitLab 8.10
      operationId: get_v3_projects_id_builds_artifacts_ref_name_download
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ref from repository
        in: path
        name: ref_name
        required: true
        schema:
          type: string
      - description: The name for the build
        in: query
        name: job
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Download the artifacts file from build
      summary: Download the artifacts file from build
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/builds/{build_id}:
    get:
      description: Get a specific build of a project
      operationId: get_v3_projects_id_builds_build_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a build
        in: path
        name: build_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: Get a specific build of a project
      summary: Get a specific build of a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/builds/{build_id}/artifacts:
    get:
      description: This feature was introduced in GitLab 8.5
      operationId: get_v3_projects_id_builds_build_id_artifacts
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a build
        in: path
        name: build_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Download the artifacts file from build
      summary: Download the artifacts file from build
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/builds/{build_id}/artifacts/keep:
    post:
      description: Keep the artifacts to prevent them from being deleted
      operationId: post_v3_projects_id_builds_build_id_artifacts_keep
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a build
        in: path
        name: build_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: Keep the artifacts to prevent them from being deleted
      summary: Keep the artifacts to prevent them from being deleted
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/builds/{build_id}/cancel:
    post:
      description: Cancel a specific build of a project
      operationId: post_v3_projects_id_builds_build_id_cancel
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a build
        in: path
        name: build_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: Cancel a specific build of a project
      summary: Cancel a specific build of a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/builds/{build_id}/erase:
    post:
      description: Erase build (remove artifacts and build trace)
      operationId: post_v3_projects_id_builds_build_id_erase
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a build
        in: path
        name: build_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: Erase build (remove artifacts and build trace)
      summary: Erase build (remove artifacts and build trace)
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/builds/{build_id}/play:
    post:
      description: This feature was added in GitLab 8.11
      operationId: post_v3_projects_id_builds_build_id_play
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a Build
        in: path
        name: build_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: Trigger a manual build
      summary: Trigger a manual build
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/builds/{build_id}/retry:
    post:
      description: Retry a specific build of a project
      operationId: post_v3_projects_id_builds_build_id_retry
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a build
        in: path
        name: build_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: Retry a specific build of a project
      summary: Retry a specific build of a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/builds/{build_id}/trace:
    get:
      description: Get a trace of a specific build of a project
      operationId: get_v3_projects_id_builds_build_id_trace
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a build
        in: path
        name: build_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Get a trace of a specific build of a project
      summary: Get a trace of a specific build of a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/deploy_keys:
    get:
      description: Get a specific project's deploy keys
      operationId: get_v3_projects_id_deploy_keys
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Get a specific project's deploy keys
      summary: Get a specific project's deploy keys
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Add new deploy key to currently authenticated user
      operationId: post_v3_projects_id_deploy_keys
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdDeployKeys_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Add new deploy key to currently authenticated user
      summary: Add new deploy key to currently authenticated user
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/deploy_keys/{key_id}:
    delete:
      description: Delete deploy key for a project
      operationId: delete_v3_projects_id_deploy_keys_key_id
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the deploy key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Delete deploy key for a project
      summary: Delete deploy key for a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get single deploy key
      operationId: get_v3_projects_id_deploy_keys_key_id
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the deploy key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Get single deploy key
      summary: Get single deploy key
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/deploy_keys/{key_id}/disable:
    delete:
      description: This feature was added in GitLab 8.11
      operationId: delete_v3_projects_id_deploy_keys_key_id_disable
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the deploy key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Disable a deploy key for a project
      summary: Disable a deploy key for a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/deploy_keys/{key_id}/enable:
    post:
      description: This feature was added in GitLab 8.11
      operationId: post_v3_projects_id_deploy_keys_key_id_enable
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the deploy key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Enable a deploy key for a project
      summary: Enable a deploy key for a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/deployments:
    get:
      description: This feature was introduced in GitLab 8.11.
      operationId: get_v3_projects_id_deployments
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Get all deployments of the project
      summary: Get all deployments of the project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/deployments/{deployment_id}:
    get:
      description: This feature was introduced in GitLab 8.11.
      operationId: get_v3_projects_id_deployments_deployment_id
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The deployment ID
        in: path
        name: deployment_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: Gets a specific deployment
      summary: Gets a specific deployment
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/environments:
    get:
      description: This feature was introduced in GitLab 8.11.
      operationId: get_v3_projects_id_environments
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Get all environments of the project
      summary: Get all environments of the project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in GitLab 8.11.
      operationId: post_v3_projects_id_environments
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdEnvironments_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Creates a new environment
      summary: Creates a new environment
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/environments/{environment_id}:
    delete:
      description: This feature was introduced in GitLab 8.11.
      operationId: delete_v3_projects_id_environments_environment_id
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The environment ID
        in: path
        name: environment_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Deletes an existing environment
      summary: Deletes an existing environment
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: This feature was introduced in GitLab 8.11.
      operationId: put_v3_projects_id_environments_environment_id
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The environment ID
        in: path
        name: environment_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdEnvironmentsEnvironmentId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Updates an existing environment
      summary: Updates an existing environment
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/events:
    get:
      description: Get events for a single project
      operationId: get_v3_projects_id_events
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Get events for a single project
      summary: Get events for a single project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/fork:
    delete:
      description: Remove a forked_from relationship
      operationId: delete_v3_projects_id_fork
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Remove a forked_from relationship
      summary: Remove a forked_from relationship
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/fork/{forked_from_id}:
    post:
      description: Mark this project as forked from another
      operationId: post_v3_projects_id_fork_forked_from_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the project it was forked from
        in: path
        name: forked_from_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: Mark this project as forked from another
      summary: Mark this project as forked from another
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/hooks:
    get:
      description: Get project hooks
      operationId: get_v3_projects_id_hooks
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHook'
          description: Get project hooks
      summary: Get project hooks
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Add hook to project
      operationId: post_v3_projects_id_hooks
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdHooks_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHook'
          description: Add hook to project
      summary: Add hook to project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/hooks/{hook_id}:
    delete:
      description: Deletes project hook
      operationId: delete_v3_projects_id_hooks_hook_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the hook to delete
        in: path
        name: hook_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHook'
          description: Deletes project hook
      summary: Deletes project hook
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a project hook
      operationId: get_v3_projects_id_hooks_hook_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project hook
        in: path
        name: hook_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHook'
          description: Get a project hook
      summary: Get a project hook
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update an existing project hook
      operationId: put_v3_projects_id_hooks_hook_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the hook to update
        in: path
        name: hook_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdHooks_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectHook'
          description: Update an existing project hook
      summary: Update an existing project hook
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues:
    get:
      description: Get a list of project issues
      operationId: get_v3_projects_id_issues
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Return opened, closed, or all issues"
        in: query
        name: state
        schema:
          default: all
          enum:
          - opened
          - closed
          - all
          type: string
      - description: Return the issue having the given `iid`
        in: query
        name: iid
        schema:
          format: int32
          type: integer
      - description: Comma-separated list of label names
        in: query
        name: labels
        schema:
          type: string
      - description: Return issues for a specific milestone
        in: query
        name: milestone
        schema:
          type: string
      - description: Return issues ordered by `created_at` or `updated_at` fields.
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
      - description: Return issues sorted in `asc` or `desc` order.
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Get a list of project issues
      summary: Get a list of project issues
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new project issue
      operationId: post_v3_projects_id_issues
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssues_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Create a new project issue
      summary: Create a new project issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues/{issue_id}:
    delete:
      description: Delete a project issue
      operationId: delete_v3_projects_id_issues_issue_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project issue
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Delete a project issue
      summary: Delete a project issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a single project issue
      operationId: get_v3_projects_id_issues_issue_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project issue
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Get a single project issue
      summary: Get a single project issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update an existing issue
      operationId: put_v3_projects_id_issues_issue_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project issue
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdIssuesIssueId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Update an existing issue
      summary: Update an existing issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues/{issue_id}/add_spent_time:
    post:
      description: Add spent time for a project issue
      operationId: post_v3_projects_id_issues_issue_id_add_spent_time
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project issue
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAddSpentTime_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content: {}
          description: Add spent time for a project issue
      summary: Add spent time for a project issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues/{issue_id}/award_emoji:
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_issues_issue_id_award_emoji
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The ID of an Issue, Merge Request or Snippet"
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a list of project +awardable+ award emoji
      summary: Get a list of project +awardable+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in 8.9
      operationId: post_v3_projects_id_issues_issue_id_award_emoji
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAwardEmoji_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Award a new Emoji
      summary: Award a new Emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}:
    delete:
      description: This feature was introduced in 8.9
      operationId: delete_v3_projects_id_issues_issue_id_award_emoji_award_id
      parameters:
      - description: The ID of an award emoji
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Delete a +awardables+ award emoji
      summary: Delete a +awardables+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_issues_issue_id_award_emoji_award_id
      parameters:
      - description: The ID of the award
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a specific award emoji
      summary: Get a specific award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/issues/{issue_id}/move:
    post:
      description: Move an existing issue
      operationId: post_v3_projects_id_issues_issue_id_move
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project issue
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdMove_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Move an existing issue
      summary: Move an existing issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji:
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_issues_issue_id_notes_note_id_award_emoji
      parameters:
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a list of project +awardable+ award emoji
      summary: Get a list of project +awardable+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in 8.9
      operationId: post_v3_projects_id_issues_issue_id_notes_note_id_award_emoji
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAwardEmoji_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Award a new Emoji
      summary: Award a new Emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}:
    delete:
      description: This feature was introduced in 8.9
      operationId: delete_v3_projects_id_issues_issue_id_notes_note_id_award_emoji_award_id
      parameters:
      - description: The ID of an award emoji
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Delete a +awardables+ award emoji
      summary: Delete a +awardables+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_issues_issue_id_notes_note_id_award_emoji_award_id
      parameters:
      - description: The ID of the award
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a specific award emoji
      summary: Get a specific award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/issues/{issue_id}/reset_spent_time:
    post:
      description: Reset spent time for a project issue
      operationId: post_v3_projects_id_issues_issue_id_reset_spent_time
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project issue
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content: {}
          description: Reset spent time for a project issue
      summary: Reset spent time for a project issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/issues/{issue_id}/reset_time_estimate:
    post:
      description: Reset the time estimate for a project issue
      operationId: post_v3_projects_id_issues_issue_id_reset_time_estimate
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project issue
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content: {}
          description: Reset the time estimate for a project issue
      summary: Reset the time estimate for a project issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/issues/{issue_id}/time_estimate:
    post:
      description: Set a time estimate for a project issue
      operationId: post_v3_projects_id_issues_issue_id_time_estimate
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project issue
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAddSpentTime_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content: {}
          description: Set a time estimate for a project issue
      summary: Set a time estimate for a project issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues/{issue_id}/time_stats:
    get:
      description: Show time stats for a project issue
      operationId: get_v3_projects_id_issues_issue_id_time_stats
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project issue
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Show time stats for a project issue
      summary: Show time stats for a project issue
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/issues/{issue_id}/todo:
    post:
      description: Create a todo on an issuable
      operationId: post_v3_projects_id_issues_issue_id_todo
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of an issuable
        in: path
        name: issue_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: Create a todo on an issuable
      summary: Create a todo on an issuable
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/issues/{noteable_id}/notes:
    get:
      description: Get a list of project +noteable+ notes
      operationId: get_v3_projects_id_issues_noteable_id_notes
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Get a list of project +noteable+ notes
      summary: Get a list of project +noteable+ notes
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new +noteable+ note
      operationId: post_v3_projects_id_issues_noteable_id_notes
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesNoteableIdNotes_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Create a new +noteable+ note
      summary: Create a new +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues/{noteable_id}/notes/{note_id}:
    delete:
      description: Delete a +noteable+ note
      operationId: delete_v3_projects_id_issues_noteable_id_notes_note_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a note
        in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Delete a +noteable+ note
      summary: Delete a +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a single +noteable+ note
      operationId: get_v3_projects_id_issues_noteable_id_notes_note_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a note
        in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Get a single +noteable+ note
      summary: Get a single +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update an existing +noteable+ note
      operationId: put_v3_projects_id_issues_noteable_id_notes_note_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a note
        in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdIssuesNoteableIdNotesNoteId_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Update an existing +noteable+ note
      summary: Update an existing +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/issues/{subscribable_id}/subscription:
    delete:
      description: Unsubscribe from a resource
      operationId: delete_v3_projects_id_issues_subscribable_id_subscription
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a resource
        in: path
        name: subscribable_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Unsubscribe from a resource
      summary: Unsubscribe from a resource
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Subscribe to a resource
      operationId: post_v3_projects_id_issues_subscribable_id_subscription
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a resource
        in: path
        name: subscribable_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Subscribe to a resource
      summary: Subscribe to a resource
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/keys:
    get:
      description: Get a specific project's deploy keys
      operationId: get_v3_projects_id_keys
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Get a specific project's deploy keys
      summary: Get a specific project's deploy keys
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Add new deploy key to currently authenticated user
      operationId: post_v3_projects_id_keys
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdDeployKeys_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Add new deploy key to currently authenticated user
      summary: Add new deploy key to currently authenticated user
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/keys/{key_id}:
    delete:
      description: Delete deploy key for a project
      operationId: delete_v3_projects_id_keys_key_id
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the deploy key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Delete deploy key for a project
      summary: Delete deploy key for a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get single deploy key
      operationId: get_v3_projects_id_keys_key_id
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the deploy key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Get single deploy key
      summary: Get single deploy key
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/keys/{key_id}/disable:
    delete:
      description: This feature was added in GitLab 8.11
      operationId: delete_v3_projects_id_keys_key_id_disable
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the deploy key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Disable a deploy key for a project
      summary: Disable a deploy key for a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/keys/{key_id}/enable:
    post:
      description: This feature was added in GitLab 8.11
      operationId: post_v3_projects_id_keys_key_id_enable
      parameters:
      - description: The ID of the project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the deploy key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Enable a deploy key for a project
      summary: Enable a deploy key for a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/labels:
    delete:
      description: Delete an existing label
      operationId: delete_v3_projects_id_labels
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the label to be deleted
        in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Delete an existing label
      summary: Delete an existing label
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get all labels of the project
      operationId: get_v3_projects_id_labels
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Get all labels of the project
      summary: Get all labels of the project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new label
      operationId: post_v3_projects_id_labels
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdLabels_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Create a new label
      summary: Create a new label
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
    put:
      description: Update an existing label. At least one optional parameter is required.
      operationId: put_v3_projects_id_labels
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdLabels_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Update an existing label. At least one optional parameter is
            required.
      summary: Update an existing label. At least one optional parameter is required.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/labels/{subscribable_id}/subscription:
    delete:
      description: Unsubscribe from a resource
      operationId: delete_v3_projects_id_labels_subscribable_id_subscription
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a resource
        in: path
        name: subscribable_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Unsubscribe from a resource
      summary: Unsubscribe from a resource
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Subscribe to a resource
      operationId: post_v3_projects_id_labels_subscribable_id_subscription
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a resource
        in: path
        name: subscribable_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: Subscribe to a resource
      summary: Subscribe to a resource
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/members:
    get:
      description: Gets a list of group or project members viewable by the authenticated
        user.
      operationId: get_v3_projects_id_members
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: A query string to search for members
        in: query
        name: query
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Gets a list of group or project members viewable by the authenticated
            user.
      summary: Gets a list of group or project members viewable by the authenticated
        user.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Adds a member to a group or project.
      operationId: post_v3_projects_id_members
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3GroupsIdMembers_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Adds a member to a group or project.
      summary: Adds a member to a group or project.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/members/{user_id}:
    delete:
      description: Removes a user from a group or project.
      operationId: delete_v3_projects_id_members_user_id
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the member
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Removes a user from a group or project.
      summary: Removes a user from a group or project.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Gets a member of a group or project.
      operationId: get_v3_projects_id_members_user_id
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the member
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Gets a member of a group or project.
      summary: Gets a member of a group or project.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Updates a member of a group or project.
      operationId: put_v3_projects_id_members_user_id
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The user ID of the new member
        in: path
        name: user_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3GroupsIdMembersUserId_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Updates a member of a group or project.
      summary: Updates a member of a group or project.
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_request/{merge_request_id}:
    get:
      description: This endpoint is deprecated and will be removed in GitLab 9.0.
      operationId: get_v3_projects_id_merge_request_merge_request_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a merge request
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Get a single merge request
      summary: Get a single merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update a merge request
      operationId: put_v3_projects_id_merge_request_merge_request_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdMergeRequestMergeRequestId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Update a merge request
      summary: Update a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds:
    post:
      description: Cancel merge if "Merge When Pipeline Succeeds" is enabled
      operationId: post_v3_projects_id_merge_request_merge_request_id_cancel_merge_when_build_succeeds
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Cancel merge if "Merge When Pipeline Succeeds" is enabled
      summary: Cancel merge if "Merge When Pipeline Succeeds" is enabled
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_request/{merge_request_id}/changes:
    get:
      description: Show the merge request changes
      operationId: get_v3_projects_id_merge_request_merge_request_id_changes
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequestChanges'
          description: Show the merge request changes
      summary: Show the merge request changes
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_request/{merge_request_id}/closes_issues:
    get:
      description: List issues that will be closed on merge
      operationId: get_v3_projects_id_merge_request_merge_request_id_closes_issues
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MRNote'
          description: List issues that will be closed on merge
      summary: List issues that will be closed on merge
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_request/{merge_request_id}/comments:
    get:
      description: Duplicate. DEPRECATED and WILL BE REMOVED in 9.0
      operationId: get_v3_projects_id_merge_request_merge_request_id_comments
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MRNote'
          description: Get the comments of a merge request
      summary: Get the comments of a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Duplicate. DEPRECATED and WILL BE REMOVED in 9.0
      operationId: post_v3_projects_id_merge_request_merge_request_id_comments
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdMergeRequestMergeRequestIdComments_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MRNote'
          description: Post a comment to a merge request
      summary: Post a comment to a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_request/{merge_request_id}/commits:
    get:
      description: Get the commits of a merge request
      operationId: get_v3_projects_id_merge_request_merge_request_id_commits
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoCommit'
          description: Get the commits of a merge request
      summary: Get the commits of a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_request/{merge_request_id}/merge:
    put:
      description: Merge a merge request
      operationId: put_v3_projects_id_merge_request_merge_request_id_merge
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdMergeRequestMergeRequestIdMerge_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Merge a merge request
      summary: Merge a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_request/{subscribable_id}/subscription:
    delete:
      description: Unsubscribe from a resource
      operationId: delete_v3_projects_id_merge_request_subscribable_id_subscription
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a resource
        in: path
        name: subscribable_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Unsubscribe from a resource
      summary: Unsubscribe from a resource
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Subscribe to a resource
      operationId: post_v3_projects_id_merge_request_subscribable_id_subscription
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a resource
        in: path
        name: subscribable_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Subscribe to a resource
      summary: Subscribe to a resource
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests:
    get:
      description: List merge requests
      operationId: get_v3_projects_id_merge_requests
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Return opened, closed, merged, or all merge requests"
        in: query
        name: state
        schema:
          default: all
          enum:
          - opened
          - closed
          - merged
          - all
          type: string
      - description: Return merge requests ordered by `created_at` or `updated_at`
          fields.
        in: query
        name: order_by
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
      - description: Return merge requests sorted in `asc` or `desc` order.
        in: query
        name: sort
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/getV3ProjectsIdMergeRequests_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: List merge requests
      summary: List merge requests
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
    post:
      description: Create a merge request
      operationId: post_v3_projects_id_merge_requests
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdMergeRequests_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Create a merge request
      summary: Create a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{merge_request_id}:
    delete:
      description: Delete a merge request
      operationId: delete_v3_projects_id_merge_requests_merge_request_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a merge request
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Delete a merge request
      summary: Delete a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a single merge request
      operationId: get_v3_projects_id_merge_requests_merge_request_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Get a single merge request
      summary: Get a single merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update a merge request
      operationId: put_v3_projects_id_merge_requests_merge_request_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdMergeRequestMergeRequestId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Update a merge request
      summary: Update a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time:
    post:
      description: Add spent time for a project merge_request
      operationId: post_v3_projects_id_merge_requests_merge_request_id_add_spent_time
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project merge_request
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAddSpentTime_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content: {}
          description: Add spent time for a project merge_request
      summary: Add spent time for a project merge_request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji:
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_merge_requests_merge_request_id_award_emoji
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The ID of an Issue, Merge Request or Snippet"
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a list of project +awardable+ award emoji
      summary: Get a list of project +awardable+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in 8.9
      operationId: post_v3_projects_id_merge_requests_merge_request_id_award_emoji
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAwardEmoji_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Award a new Emoji
      summary: Award a new Emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}:
    delete:
      description: This feature was introduced in 8.9
      operationId: delete_v3_projects_id_merge_requests_merge_request_id_award_emoji_award_id
      parameters:
      - description: The ID of an award emoji
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Delete a +awardables+ award emoji
      summary: Delete a +awardables+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_merge_requests_merge_request_id_award_emoji_award_id
      parameters:
      - description: The ID of the award
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a specific award emoji
      summary: Get a specific award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds:
    post:
      description: Cancel merge if "Merge When Pipeline Succeeds" is enabled
      operationId: post_v3_projects_id_merge_requests_merge_request_id_cancel_merge_when_build_succeeds
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Cancel merge if "Merge When Pipeline Succeeds" is enabled
      summary: Cancel merge if "Merge When Pipeline Succeeds" is enabled
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/changes:
    get:
      description: Show the merge request changes
      operationId: get_v3_projects_id_merge_requests_merge_request_id_changes
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequestChanges'
          description: Show the merge request changes
      summary: Show the merge request changes
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues:
    get:
      description: List issues that will be closed on merge
      operationId: get_v3_projects_id_merge_requests_merge_request_id_closes_issues
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MRNote'
          description: List issues that will be closed on merge
      summary: List issues that will be closed on merge
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/comments:
    get:
      description: Duplicate. DEPRECATED and WILL BE REMOVED in 9.0
      operationId: get_v3_projects_id_merge_requests_merge_request_id_comments
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MRNote'
          description: Get the comments of a merge request
      summary: Get the comments of a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Duplicate. DEPRECATED and WILL BE REMOVED in 9.0
      operationId: post_v3_projects_id_merge_requests_merge_request_id_comments
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdMergeRequestMergeRequestIdComments_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MRNote'
          description: Post a comment to a merge request
      summary: Post a comment to a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{merge_request_id}/commits:
    get:
      description: Get the commits of a merge request
      operationId: get_v3_projects_id_merge_requests_merge_request_id_commits
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoCommit'
          description: Get the commits of a merge request
      summary: Get the commits of a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/merge:
    put:
      description: Merge a merge request
      operationId: put_v3_projects_id_merge_requests_merge_request_id_merge
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdMergeRequestMergeRequestIdMerge_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Merge a merge request
      summary: Merge a merge request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji:
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_merge_requests_merge_request_id_notes_note_id_award_emoji
      parameters:
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a list of project +awardable+ award emoji
      summary: Get a list of project +awardable+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in 8.9
      operationId: post_v3_projects_id_merge_requests_merge_request_id_notes_note_id_award_emoji
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAwardEmoji_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Award a new Emoji
      summary: Award a new Emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}:
    delete:
      description: This feature was introduced in 8.9
      operationId: delete_v3_projects_id_merge_requests_merge_request_id_notes_note_id_award_emoji_award_id
      parameters:
      - description: The ID of an award emoji
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Delete a +awardables+ award emoji
      summary: Delete a +awardables+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_merge_requests_merge_request_id_notes_note_id_award_emoji_award_id
      parameters:
      - description: The ID of the award
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a specific award emoji
      summary: Get a specific award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time:
    post:
      description: Reset spent time for a project merge_request
      operationId: post_v3_projects_id_merge_requests_merge_request_id_reset_spent_time
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project merge_request
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content: {}
          description: Reset spent time for a project merge_request
      summary: Reset spent time for a project merge_request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate:
    post:
      description: Reset the time estimate for a project merge_request
      operationId: post_v3_projects_id_merge_requests_merge_request_id_reset_time_estimate
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project merge_request
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content: {}
          description: Reset the time estimate for a project merge_request
      summary: Reset the time estimate for a project merge_request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate:
    post:
      description: Set a time estimate for a project merge_request
      operationId: post_v3_projects_id_merge_requests_merge_request_id_time_estimate
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project merge_request
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAddSpentTime_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content: {}
          description: Set a time estimate for a project merge_request
      summary: Set a time estimate for a project merge_request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{merge_request_id}/time_stats:
    get:
      description: Show time stats for a project merge_request
      operationId: get_v3_projects_id_merge_requests_merge_request_id_time_stats
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project merge_request
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Show time stats for a project merge_request
      summary: Show time stats for a project merge_request
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/todo:
    post:
      description: Create a todo on an issuable
      operationId: post_v3_projects_id_merge_requests_merge_request_id_todo
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of an issuable
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: Create a todo on an issuable
      summary: Create a todo on an issuable
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/versions:
    get:
      description: This feature was introduced in GitLab 8.12.
      operationId: get_v3_projects_id_merge_requests_merge_request_id_versions
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a merge request
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequestDiff'
          description: Get a list of merge request diff versions
      summary: Get a list of merge request diff versions
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}:
    get:
      description: This feature was introduced in GitLab 8.12.
      operationId: get_v3_projects_id_merge_requests_merge_request_id_versions_version_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a merge request
        in: path
        name: merge_request_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a merge request diff version
        in: path
        name: version_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequestDiffFull'
          description: Get a single merge request diff version
      summary: Get a single merge request diff version
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/merge_requests/{noteable_id}/notes:
    get:
      description: Get a list of project +noteable+ notes
      operationId: get_v3_projects_id_merge_requests_noteable_id_notes
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Get a list of project +noteable+ notes
      summary: Get a list of project +noteable+ notes
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new +noteable+ note
      operationId: post_v3_projects_id_merge_requests_noteable_id_notes
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesNoteableIdNotes_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Create a new +noteable+ note
      summary: Create a new +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}:
    delete:
      description: Delete a +noteable+ note
      operationId: delete_v3_projects_id_merge_requests_noteable_id_notes_note_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a note
        in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Delete a +noteable+ note
      summary: Delete a +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a single +noteable+ note
      operationId: get_v3_projects_id_merge_requests_noteable_id_notes_note_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a note
        in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Get a single +noteable+ note
      summary: Get a single +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update an existing +noteable+ note
      operationId: put_v3_projects_id_merge_requests_noteable_id_notes_note_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a note
        in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdIssuesNoteableIdNotesNoteId_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Update an existing +noteable+ note
      summary: Update an existing +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/merge_requests/{subscribable_id}/subscription:
    delete:
      description: Unsubscribe from a resource
      operationId: delete_v3_projects_id_merge_requests_subscribable_id_subscription
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a resource
        in: path
        name: subscribable_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Unsubscribe from a resource
      summary: Unsubscribe from a resource
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Subscribe to a resource
      operationId: post_v3_projects_id_merge_requests_subscribable_id_subscription
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a resource
        in: path
        name: subscribable_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeRequest'
          description: Subscribe to a resource
      summary: Subscribe to a resource
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/milestones:
    get:
      description: Get a list of project milestones
      operationId: get_v3_projects_id_milestones
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Return \"active\", \"closed\", or \"all\" milestones"
        in: query
        name: state
        schema:
          default: all
          enum:
          - active
          - closed
          - all
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/getV3ProjectsIdMilestones_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: Get a list of project milestones
      summary: Get a list of project milestones
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
    post:
      description: Create a new project milestone
      operationId: post_v3_projects_id_milestones
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdMilestones_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: Create a new project milestone
      summary: Create a new project milestone
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/milestones/{milestone_id}:
    get:
      description: Get a single project milestone
      operationId: get_v3_projects_id_milestones_milestone_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project milestone
        in: path
        name: milestone_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: Get a single project milestone
      summary: Get a single project milestone
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update an existing project milestone
      operationId: put_v3_projects_id_milestones_milestone_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project milestone
        in: path
        name: milestone_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdMilestonesMilestoneId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Milestone'
          description: Update an existing project milestone
      summary: Update an existing project milestone
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/milestones/{milestone_id}/issues:
    get:
      description: Get all issues for a single project milestone
      operationId: get_v3_projects_id_milestones_milestone_id_issues
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project milestone
        in: path
        name: milestone_id
        required: true
        schema:
          format: int32
          type: integer
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: Get all issues for a single project milestone
      summary: Get all issues for a single project milestone
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/notification_settings:
    get:
      description: This feature was introduced in GitLab 8.12
      operationId: get_v3_projects_id_notification_settings
      parameters:
      - description: The group ID or project ID or project NAMESPACE/PROJECT_NAME
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: "Get project level notification level settings, defaults to\
            \ Global"
      summary: "Get project level notification level settings, defaults to Global"
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: This feature was introduced in GitLab 8.12
      operationId: put_v3_projects_id_notification_settings
      parameters:
      - description: The group ID or project ID or project NAMESPACE/PROJECT_NAME
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdNotificationSettings_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: "Update project level notification level settings, defaults\
            \ to Global"
      summary: "Update project level notification level settings, defaults to Global"
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/pipeline:
    post:
      description: This feature was introduced in GitLab 8.14
      operationId: post_v3_projects_id_pipeline
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdPipeline_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Create a new pipeline
      summary: Create a new pipeline
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/pipelines:
    get:
      description: This feature was introduced in GitLab 8.11.
      operationId: get_v3_projects_id_pipelines
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - description: "Either running, branches, or tags"
        in: query
        name: scope
        schema:
          enum:
          - running
          - branches
          - tags
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Get all Pipelines of the project
      summary: Get all Pipelines of the project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/pipelines/{pipeline_id}:
    get:
      description: This feature was introduced in GitLab 8.11
      operationId: get_v3_projects_id_pipelines_pipeline_id
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The pipeline ID
        in: path
        name: pipeline_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Gets a specific pipeline for the project
      summary: Gets a specific pipeline for the project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/pipelines/{pipeline_id}/cancel:
    post:
      description: This feature was introduced in GitLab 8.11.
      operationId: post_v3_projects_id_pipelines_pipeline_id_cancel
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The pipeline ID
        in: path
        name: pipeline_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Cancel all builds in the pipeline
      summary: Cancel all builds in the pipeline
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/pipelines/{pipeline_id}/retry:
    post:
      description: This feature was introduced in GitLab 8.11.
      operationId: post_v3_projects_id_pipelines_pipeline_id_retry
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The pipeline ID
        in: path
        name: pipeline_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Retry failed builds in the pipeline
      summary: Retry failed builds in the pipeline
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/archive:
    get:
      description: Get an archive of the repository
      operationId: get_v3_projects_id_repository_archive
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The commit sha of the archive to be downloaded
        in: query
        name: sha
        schema:
          type: string
      - description: The archive format
        in: query
        name: format
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Get an archive of the repository
      summary: Get an archive of the repository
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/blobs/{sha}:
    get:
      description: Get a raw file contents
      operationId: get_v3_projects_id_repository_blobs_sha
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The commit, branch name, or tag name"
        in: path
        name: sha
        required: true
        schema:
          type: string
      - description: The path to the file to display
        in: query
        name: filepath
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Get a raw file contents
      summary: Get a raw file contents
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/branches:
    get:
      description: Get a project repository branches
      operationId: get_v3_projects_id_repository_branches
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoBranch'
          description: Get a project repository branches
      summary: Get a project repository branches
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create branch
      operationId: post_v3_projects_id_repository_branches
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdRepositoryBranches_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoBranch'
          description: Create branch
      summary: Create branch
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/repository/branches/{branch}:
    delete:
      description: Delete a branch
      operationId: delete_v3_projects_id_repository_branches_branch
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the branch
        in: path
        name: branch
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Delete a branch
      summary: Delete a branch
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a single branch
      operationId: get_v3_projects_id_repository_branches_branch
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the branch
        in: path
        name: branch
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoBranch'
          description: Get a single branch
      summary: Get a single branch
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/branches/{branch}/protect:
    put:
      description: Protect a single branch
      operationId: put_v3_projects_id_repository_branches_branch_protect
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the branch
        in: path
        name: branch
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdRepositoryBranchesBranchProtect_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoBranch'
          description: Protect a single branch
      summary: Protect a single branch
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/repository/branches/{branch}/unprotect:
    put:
      description: Unprotect a single branch
      operationId: put_v3_projects_id_repository_branches_branch_unprotect
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the branch
        in: path
        name: branch
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoBranch'
          description: Unprotect a single branch
      summary: Unprotect a single branch
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/commits:
    get:
      description: Get a project repository commits
      operationId: get_v3_projects_id_repository_commits
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The name of a repository branch or tag, if not given the default\
          \ branch is used"
        in: query
        name: ref_name
        schema:
          type: string
      - description: Only commits after or in this date will be returned
        in: query
        name: since
        schema:
          type: string
      - description: Only commits before or in this date will be returned
        in: query
        name: until
        schema:
          type: string
      - description: The page for pagination
        in: query
        name: page
        schema:
          default: 0
          format: int32
          type: integer
      - description: The number of results per page
        in: query
        name: per_page
        schema:
          default: 20
          format: int32
          type: integer
      - description: The file path
        in: query
        name: path
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoCommit'
          description: Get a project repository commits
      summary: Get a project repository commits
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in GitLab 8.13
      operationId: post_v3_projects_id_repository_commits
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdRepositoryCommits_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoCommitDetail'
          description: Commit multiple file changes as one commit
      summary: Commit multiple file changes as one commit
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/repository/commits/{sha}:
    get:
      description: Get a specific commit of a project
      operationId: get_v3_projects_id_repository_commits_sha
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "A commit sha, or the name of a branch or tag"
        in: path
        name: sha
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoCommitDetail'
          description: Get a specific commit of a project
        "404":
          content: {}
          description: Not Found
      summary: Get a specific commit of a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/commits/{sha}/blob:
    get:
      description: Get a raw file contents
      operationId: get_v3_projects_id_repository_commits_sha_blob
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The commit, branch name, or tag name"
        in: path
        name: sha
        required: true
        schema:
          type: string
      - description: The path to the file to display
        in: query
        name: filepath
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Get a raw file contents
      summary: Get a raw file contents
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/commits/{sha}/builds:
    get:
      description: Get builds for a specific commit of a project
      operationId: get_v3_projects_id_repository_commits_sha_builds
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The SHA id of a commit
        in: path
        name: sha
        required: true
        schema:
          type: string
      - description: The scope of builds to show
        in: query
        name: scope
        schema:
          enum:
          - pending
          - running
          - failed
          - success
          - canceled
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: Get builds for a specific commit of a project
      summary: Get builds for a specific commit of a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/commits/{sha}/cherry_pick:
    post:
      description: This feature was introduced in GitLab 8.15
      operationId: post_v3_projects_id_repository_commits_sha_cherry_pick
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: A commit sha to be cherry picked
        in: path
        name: sha
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdRepositoryCommitsShaCherryPick_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoCommit'
          description: Cherry pick commit into a branch
      summary: Cherry pick commit into a branch
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/repository/commits/{sha}/comments:
    get:
      description: Get a commit's comments
      operationId: get_v3_projects_id_repository_commits_sha_comments
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - description: "A commit sha, or the name of a branch or tag"
        in: path
        name: sha
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitNote'
          description: Get a commit's comments
        "404":
          content: {}
          description: Not Found
      summary: Get a commit's comments
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Post comment to commit
      operationId: post_v3_projects_id_repository_commits_sha_comments
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The commit's SHA
        in: path
        name: sha
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdRepositoryCommitsShaComments_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitNote'
          description: Post comment to commit
      summary: Post comment to commit
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/repository/commits/{sha}/diff:
    get:
      description: Get the diff for a specific commit of a project
      operationId: get_v3_projects_id_repository_commits_sha_diff
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "A commit sha, or the name of a branch or tag"
        in: path
        name: sha
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Get the diff for a specific commit of a project
        "404":
          content: {}
          description: Not Found
      summary: Get the diff for a specific commit of a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/commits/{sha}/statuses:
    get:
      description: Get a commit's statuses
      operationId: get_v3_projects_id_repository_commits_sha_statuses
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The commit hash
        in: path
        name: sha
        required: true
        schema:
          type: string
      - description: The ref
        in: query
        name: ref
        schema:
          type: string
      - description: The stage
        in: query
        name: stage
        schema:
          type: string
      - description: The name
        in: query
        name: name
        schema:
          type: string
      - description: "Show all statuses, default: false"
        in: query
        name: all
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitStatus'
          description: Get a commit's statuses
      summary: Get a commit's statuses
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/compare:
    get:
      description: "Compare two branches, tags, or commits"
      operationId: get_v3_projects_id_repository_compare
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The commit, branch name, or tag name to start comparison"
        in: query
        name: from
        required: true
        schema:
          type: string
      - description: "The commit, branch name, or tag name to stop comparison"
        in: query
        name: to
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Compare'
          description: "Compare two branches, tags, or commits"
      summary: "Compare two branches, tags, or commits"
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/contributors:
    get:
      description: Get repository contributors
      operationId: get_v3_projects_id_repository_contributors
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contributor'
          description: Get repository contributors
      summary: Get repository contributors
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/files:
    delete:
      description: Delete an existing file in repository
      operationId: delete_v3_projects_id_repository_files
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The path to new file. Ex. lib/class.rb
        in: query
        name: file_path
        required: true
        schema:
          type: string
      - description: The name of branch
        in: query
        name: branch_name
        required: true
        schema:
          type: string
      - description: Commit Message
        in: query
        name: commit_message
        required: true
        schema:
          type: string
      - description: The email of the author
        in: query
        name: author_email
        schema:
          type: string
      - description: The name of the author
        in: query
        name: author_name
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Delete an existing file in repository
      summary: Delete an existing file in repository
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a file from repository
      operationId: get_v3_projects_id_repository_files
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The path to the file. Ex. lib/class.rb
        in: query
        name: file_path
        required: true
        schema:
          type: string
      - description: "The name of branch, tag, or commit"
        in: query
        name: ref
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Get a file from repository
      summary: Get a file from repository
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create new file in repository
      operationId: post_v3_projects_id_repository_files
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdRepositoryFiles_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content: {}
          description: Create new file in repository
      summary: Create new file in repository
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
    put:
      description: Update existing file in repository
      operationId: put_v3_projects_id_repository_files
      parameters:
      - description: The project ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdRepositoryFiles_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Update existing file in repository
      summary: Update existing file in repository
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/repository/merged_branches:
    delete:
      operationId: delete_v3_projects_id_repository_merged_branches
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: deleted MergedBranch
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/raw_blobs/{sha}:
    get:
      description: Get a raw blob contents by blob sha
      operationId: get_v3_projects_id_repository_raw_blobs_sha
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The commit, branch name, or tag name"
        in: path
        name: sha
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Get a raw blob contents by blob sha
      summary: Get a raw blob contents by blob sha
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/tags:
    get:
      description: Get a project repository tags
      operationId: get_v3_projects_id_repository_tags
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTag'
          description: Get a project repository tags
      summary: Get a project repository tags
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new repository tag
      operationId: post_v3_projects_id_repository_tags
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdRepositoryTags_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTag'
          description: Create a new repository tag
      summary: Create a new repository tag
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/repository/tags/{tag_name}:
    delete:
      description: Delete a repository tag
      operationId: delete_v3_projects_id_repository_tags_tag_name
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the tag
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Delete a repository tag
      summary: Delete a repository tag
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a single repository tag
      operationId: get_v3_projects_id_repository_tags_tag_name
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the tag
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTag'
          description: Get a single repository tag
      summary: Get a single repository tag
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/repository/tags/{tag_name}/release:
    post:
      description: Add a release note to a tag
      operationId: post_v3_projects_id_repository_tags_tag_name_release
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the tag
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdRepositoryTagsTagNameRelease_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
          description: Add a release note to a tag
      summary: Add a release note to a tag
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
    put:
      description: Update a tag's release note
      operationId: put_v3_projects_id_repository_tags_tag_name_release
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the tag
        in: path
        name: tag_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdRepositoryTagsTagNameRelease_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
          description: Update a tag's release note
      summary: Update a tag's release note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/repository/tree:
    get:
      description: Get a project repository tree
      operationId: get_v3_projects_id_repository_tree
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The name of a repository branch or tag, if not given the default\
          \ branch is used"
        in: query
        name: ref_name
        schema:
          type: string
      - description: The path of the tree
        in: query
        name: path
        schema:
          type: string
      - description: Used to get a recursive tree
        in: query
        name: recursive
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoTreeObject'
          description: Get a project repository tree
      summary: Get a project repository tree
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/runners:
    get:
      description: Get runners available for project
      operationId: get_v3_projects_id_runners
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The scope of specific runners to show
        in: query
        name: scope
        schema:
          enum:
          - active
          - paused
          - online
          - specific
          - shared
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runner'
          description: Get runners available for project
      summary: Get runners available for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Enable a runner for a project
      operationId: post_v3_projects_id_runners
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdRunners_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runner'
          description: Enable a runner for a project
      summary: Enable a runner for a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/runners/{runner_id}:
    delete:
      description: Disable project's runner
      operationId: delete_v3_projects_id_runners_runner_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the runner
        in: path
        name: runner_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runner'
          description: Disable project's runner
      summary: Disable project's runner
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/services/asana:
    put:
      description: Set asana service for project
      operationId: put_v3_projects_id_services_asana
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesAsana_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set asana service for project
      summary: Set asana service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/assembla:
    put:
      description: Set assembla service for project
      operationId: put_v3_projects_id_services_assembla
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesAssembla_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set assembla service for project
      summary: Set assembla service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/bamboo:
    put:
      description: Set bamboo service for project
      operationId: put_v3_projects_id_services_bamboo
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesBamboo_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set bamboo service for project
      summary: Set bamboo service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/bugzilla:
    put:
      description: Set bugzilla service for project
      operationId: put_v3_projects_id_services_bugzilla
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesBugzilla_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set bugzilla service for project
      summary: Set bugzilla service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/buildkite:
    put:
      description: Set buildkite service for project
      operationId: put_v3_projects_id_services_buildkite
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesBuildkite_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set buildkite service for project
      summary: Set buildkite service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/builds-email:
    put:
      description: Set builds-email service for project
      operationId: put_v3_projects_id_services_builds_email
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesBuildsEmail_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set builds-email service for project
      summary: Set builds-email service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/campfire:
    put:
      description: Set campfire service for project
      operationId: put_v3_projects_id_services_campfire
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesCampfire_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set campfire service for project
      summary: Set campfire service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/custom-issue-tracker:
    put:
      description: Set custom-issue-tracker service for project
      operationId: put_v3_projects_id_services_custom_issue_tracker
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesBugzilla_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set custom-issue-tracker service for project
      summary: Set custom-issue-tracker service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/drone-ci:
    put:
      description: Set drone-ci service for project
      operationId: put_v3_projects_id_services_drone_ci
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesDroneCi_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set drone-ci service for project
      summary: Set drone-ci service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/emails-on-push:
    put:
      description: Set emails-on-push service for project
      operationId: put_v3_projects_id_services_emails_on_push
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesEmailsOnPush_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set emails-on-push service for project
      summary: Set emails-on-push service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/external-wiki:
    put:
      description: Set external-wiki service for project
      operationId: put_v3_projects_id_services_external_wiki
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesExternalWiki_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set external-wiki service for project
      summary: Set external-wiki service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/flowdock:
    put:
      description: Set flowdock service for project
      operationId: put_v3_projects_id_services_flowdock
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesFlowdock_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set flowdock service for project
      summary: Set flowdock service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/gemnasium:
    put:
      description: Set gemnasium service for project
      operationId: put_v3_projects_id_services_gemnasium
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesGemnasium_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set gemnasium service for project
      summary: Set gemnasium service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/hipchat:
    put:
      description: Set hipchat service for project
      operationId: put_v3_projects_id_services_hipchat
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesHipchat_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set hipchat service for project
      summary: Set hipchat service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/irker:
    put:
      description: Set irker service for project
      operationId: put_v3_projects_id_services_irker
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesIrker_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set irker service for project
      summary: Set irker service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/jira:
    put:
      description: Set jira service for project
      operationId: put_v3_projects_id_services_jira
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesJira_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set jira service for project
      summary: Set jira service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/kubernetes:
    put:
      description: Set kubernetes service for project
      operationId: put_v3_projects_id_services_kubernetes
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesKubernetes_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set kubernetes service for project
      summary: Set kubernetes service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/mattermost:
    put:
      description: Set mattermost service for project
      operationId: put_v3_projects_id_services_mattermost
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesMattermost_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set mattermost service for project
      summary: Set mattermost service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/mattermost-slash-commands:
    put:
      description: Set mattermost-slash-commands service for project
      operationId: put_v3_projects_id_services_mattermost_slash_commands
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesMattermostSlashCommands_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set mattermost-slash-commands service for project
      summary: Set mattermost-slash-commands service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/mattermost_slash_commands/trigger:
    post:
      description: Added in GitLab 8.13
      operationId: post_v3_projects_id_services_mattermost_slash_commands_trigger
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesMattermostSlashCommands_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content: {}
          description: Trigger a slash command for mattermost-slash-commands
      summary: Trigger a slash command for mattermost-slash-commands
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/pipelines-email:
    put:
      description: Set pipelines-email service for project
      operationId: put_v3_projects_id_services_pipelines_email
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesPipelinesEmail_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set pipelines-email service for project
      summary: Set pipelines-email service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/pivotaltracker:
    put:
      description: Set pivotaltracker service for project
      operationId: put_v3_projects_id_services_pivotaltracker
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesPivotaltracker_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set pivotaltracker service for project
      summary: Set pivotaltracker service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/pushover:
    put:
      description: Set pushover service for project
      operationId: put_v3_projects_id_services_pushover
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesPushover_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set pushover service for project
      summary: Set pushover service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/redmine:
    put:
      description: Set redmine service for project
      operationId: put_v3_projects_id_services_redmine
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesRedmine_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set redmine service for project
      summary: Set redmine service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/slack:
    put:
      description: Set slack service for project
      operationId: put_v3_projects_id_services_slack
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesSlack_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set slack service for project
      summary: Set slack service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/slack-slash-commands:
    put:
      description: Set slack-slash-commands service for project
      operationId: put_v3_projects_id_services_slack_slash_commands
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesSlackSlashCommands_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set slack-slash-commands service for project
      summary: Set slack-slash-commands service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/slack_slash_commands/trigger:
    post:
      description: Added in GitLab 8.13
      operationId: post_v3_projects_id_services_slack_slash_commands_trigger
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesSlackSlashCommands_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content: {}
          description: Trigger a slash command for slack-slash-commands
      summary: Trigger a slash command for slack-slash-commands
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/teamcity:
    put:
      description: Set teamcity service for project
      operationId: put_v3_projects_id_services_teamcity
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdServicesTeamcity_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: Set teamcity service for project
      summary: Set teamcity service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/services/{service_slug}:
    delete:
      description: Delete a service for project
      operationId: delete_v3_projects_id_services_service_slug
      parameters:
      - description: The name of the service
        in: path
        name: service_slug
        required: true
        schema:
          enum:
          - asana
          - assembla
          - bamboo
          - bugzilla
          - buildkite
          - builds-email
          - campfire
          - custom-issue-tracker
          - drone-ci
          - emails-on-push
          - external-wiki
          - flowdock
          - gemnasium
          - hipchat
          - irker
          - jira
          - kubernetes
          - mattermost-slash-commands
          - slack-slash-commands
          - pipelines-email
          - pivotaltracker
          - pushover
          - redmine
          - slack
          - mattermost
          - teamcity
          type: string
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Delete a service for project
      summary: Delete a service for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get the service settings for project
      operationId: get_v3_projects_id_services_service_slug
      parameters:
      - description: The name of the service
        in: path
        name: service_slug
        required: true
        schema:
          enum:
          - asana
          - assembla
          - bamboo
          - bugzilla
          - buildkite
          - builds-email
          - campfire
          - custom-issue-tracker
          - drone-ci
          - emails-on-push
          - external-wiki
          - flowdock
          - gemnasium
          - hipchat
          - irker
          - jira
          - kubernetes
          - mattermost-slash-commands
          - slack-slash-commands
          - pipelines-email
          - pivotaltracker
          - pushover
          - redmine
          - slack
          - mattermost
          - teamcity
          type: string
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectService'
          description: Get the service settings for project
      summary: Get the service settings for project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/share:
    post:
      description: Share the project with a group
      operationId: post_v3_projects_id_share
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdShare_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGroupLink'
          description: Share the project with a group
      summary: Share the project with a group
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/share/{group_id}:
    delete:
      operationId: delete_v3_projects_id_share_group_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the group
        in: path
        name: group_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: deleted Share
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/snippets:
    get:
      description: Get all project snippets
      operationId: get_v3_projects_id_snippets
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSnippet'
          description: Get all project snippets
      summary: Get all project snippets
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new project snippet
      operationId: post_v3_projects_id_snippets
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdSnippets_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSnippet'
          description: Create a new project snippet
      summary: Create a new project snippet
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/snippets/{noteable_id}/notes:
    get:
      description: Get a list of project +noteable+ notes
      operationId: get_v3_projects_id_snippets_noteable_id_notes
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Get a list of project +noteable+ notes
      summary: Get a list of project +noteable+ notes
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new +noteable+ note
      operationId: post_v3_projects_id_snippets_noteable_id_notes
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesNoteableIdNotes_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Create a new +noteable+ note
      summary: Create a new +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}:
    delete:
      description: Delete a +noteable+ note
      operationId: delete_v3_projects_id_snippets_noteable_id_notes_note_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a note
        in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Delete a +noteable+ note
      summary: Delete a +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a single +noteable+ note
      operationId: get_v3_projects_id_snippets_noteable_id_notes_note_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a note
        in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Get a single +noteable+ note
      summary: Get a single +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update an existing +noteable+ note
      operationId: put_v3_projects_id_snippets_noteable_id_notes_note_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the noteable
        in: path
        name: noteable_id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of a note
        in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdIssuesNoteableIdNotesNoteId_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Update an existing +noteable+ note
      summary: Update an existing +noteable+ note
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/snippets/{snippet_id}:
    delete:
      description: Delete a project snippet
      operationId: delete_v3_projects_id_snippets_snippet_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project snippet
        in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Delete a project snippet
      summary: Delete a project snippet
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a single project snippet
      operationId: get_v3_projects_id_snippets_snippet_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project snippet
        in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSnippet'
          description: Get a single project snippet
      summary: Get a single project snippet
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update an existing project snippet
      operationId: put_v3_projects_id_snippets_snippet_id
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project snippet
        in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdSnippetsSnippetId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSnippet'
          description: Update an existing project snippet
      summary: Update an existing project snippet
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/snippets/{snippet_id}/award_emoji:
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_snippets_snippet_id_award_emoji
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The ID of an Issue, Merge Request or Snippet"
        in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a list of project +awardable+ award emoji
      summary: Get a list of project +awardable+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in 8.9
      operationId: post_v3_projects_id_snippets_snippet_id_award_emoji
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAwardEmoji_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Award a new Emoji
      summary: Award a new Emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}:
    delete:
      description: This feature was introduced in 8.9
      operationId: delete_v3_projects_id_snippets_snippet_id_award_emoji_award_id
      parameters:
      - description: The ID of an award emoji
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Delete a +awardables+ award emoji
      summary: Delete a +awardables+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_snippets_snippet_id_award_emoji_award_id
      parameters:
      - description: The ID of the award
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a specific award emoji
      summary: Get a specific award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji:
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_snippets_snippet_id_notes_note_id_award_emoji
      parameters:
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a list of project +awardable+ award emoji
      summary: Get a list of project +awardable+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: This feature was introduced in 8.9
      operationId: post_v3_projects_id_snippets_snippet_id_notes_note_id_award_emoji
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdIssuesIssueIdAwardEmoji_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Award a new Emoji
      summary: Award a new Emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}:
    delete:
      description: This feature was introduced in 8.9
      operationId: delete_v3_projects_id_snippets_snippet_id_notes_note_id_award_emoji_award_id
      parameters:
      - description: The ID of an award emoji
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Delete a +awardables+ award emoji
      summary: Delete a +awardables+ award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: This feature was introduced in 8.9
      operationId: get_v3_projects_id_snippets_snippet_id_notes_note_id_award_emoji_award_id
      parameters:
      - description: The ID of the award
        in: path
        name: award_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: note_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardEmoji'
          description: Get a specific award emoji
      summary: Get a specific award emoji
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/snippets/{snippet_id}/raw:
    get:
      description: Get a raw project snippet
      operationId: get_v3_projects_id_snippets_snippet_id_raw
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of a project snippet
        in: path
        name: snippet_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Get a raw project snippet
      summary: Get a raw project snippet
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/star:
    delete:
      description: Unstar a project
      operationId: delete_v3_projects_id_star
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Unstar a project
      summary: Unstar a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Star a project
      operationId: post_v3_projects_id_star
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Star a project
      summary: Star a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/statuses/{sha}:
    post:
      description: Post status to a commit
      operationId: post_v3_projects_id_statuses_sha
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The commit hash
        in: path
        name: sha
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdStatusesSha_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitStatus'
          description: Post status to a commit
      summary: Post status to a commit
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/triggers:
    get:
      description: Get triggers list
      operationId: get_v3_projects_id_triggers
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: Get triggers list
      summary: Get triggers list
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a trigger
      operationId: post_v3_projects_id_triggers
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: Create a trigger
      summary: Create a trigger
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/triggers/{token}:
    delete:
      description: Delete a trigger
      operationId: delete_v3_projects_id_triggers_token
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The unique token of trigger
        in: path
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: Delete a trigger
      summary: Delete a trigger
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get specific trigger of a project
      operationId: get_v3_projects_id_triggers_token
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The unique token of trigger
        in: path
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
          description: Get specific trigger of a project
      summary: Get specific trigger of a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/unarchive:
    post:
      description: Unarchive a project
      operationId: post_v3_projects_id_unarchive
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Unarchive a project
      summary: Unarchive a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/uploads:
    post:
      description: Upload a file
      operationId: post_v3_projects_id_uploads
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdUploads_request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdUploads_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content: {}
          description: Upload a file
      summary: Upload a file
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/users:
    get:
      description: Get the users list of a project
      operationId: get_v3_projects_id_users
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Return list of users matching the search criteria
        in: query
        name: search
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBasic'
          description: Get the users list of a project
      summary: Get the users list of a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v3/projects/{id}/variables:
    get:
      description: Get project variables
      operationId: get_v3_projects_id_variables
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Get project variables
      summary: Get project variables
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    post:
      description: Create a new variable in a project
      operationId: post_v3_projects_id_variables
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3ProjectsIdVariables_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Create a new variable in a project
      summary: Create a new variable in a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/projects/{id}/variables/{key}:
    delete:
      description: Delete an existing variable from a project
      operationId: delete_v3_projects_id_variables_key
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The key of the variable
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Delete an existing variable from a project
      summary: Delete an existing variable from a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    get:
      description: Get a specific variable from a project
      operationId: get_v3_projects_id_variables_key
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The key of the variable
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Get a specific variable from a project
      summary: Get a specific variable from a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
    put:
      description: Update an existing variable from a project
      operationId: put_v3_projects_id_variables_key
      parameters:
      - description: The ID of a project
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The key of the variable
        in: path
        name: key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3ProjectsIdVariablesKey_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Update an existing variable from a project
      summary: Update an existing variable from a project
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v3/runners:
    get:
      description: Get runners available for user
      operationId: get_v3_runners
      parameters:
      - description: The scope of specific runners to show
        in: query
        name: scope
        schema:
          enum:
          - active
          - paused
          - online
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runner'
          description: Get runners available for user
      summary: Get runners available for user
      tags:
      - runners
      x-openapi-router-controller: openapi_server.controllers.runners_controller
  /v3/runners/all:
    get:
      description: Get all runners - shared and specific
      operationId: get_v3_runners_all
      parameters:
      - description: The scope of specific runners to show
        in: query
        name: scope
        schema:
          enum:
          - active
          - paused
          - online
          - specific
          - shared
          type: string
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runner'
          description: Get all runners - shared and specific
      summary: Get all runners - shared and specific
      tags:
      - runners
      x-openapi-router-controller: openapi_server.controllers.runners_controller
  /v3/runners/{id}:
    delete:
      description: Remove a runner
      operationId: delete_v3_runners_id
      parameters:
      - description: The ID of the runner
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runner'
          description: Remove a runner
      summary: Remove a runner
      tags:
      - runners
      x-openapi-router-controller: openapi_server.controllers.runners_controller
    get:
      description: Get runner's details
      operationId: get_v3_runners_id
      parameters:
      - description: The ID of the runner
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunnerDetails'
          description: Get runner's details
      summary: Get runner's details
      tags:
      - runners
      x-openapi-router-controller: openapi_server.controllers.runners_controller
    put:
      description: Update runner's details
      operationId: put_v3_runners_id
      parameters:
      - description: The ID of the runner
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3RunnersId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunnerDetails'
          description: Update runner's details
      summary: Update runner's details
      tags:
      - runners
      x-openapi-router-controller: openapi_server.controllers.runners_controller
      x-codegen-request-body-name: body
  /v3/session:
    post:
      description: Login to get token
      operationId: post_v3_session
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3Session_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithPrivateToken'
          description: Login to get token
      summary: Login to get token
      tags:
      - session
      x-openapi-router-controller: openapi_server.controllers.session_controller
      x-codegen-request-body-name: body
  /v3/sidekiq/compound_metrics:
    get:
      description: "Get the Sidekiq Compound metrics. Includes queue, process, and\
        \ job statistics"
      operationId: get_v3_sidekiq_compound_metrics
      responses:
        "200":
          content: {}
          description: "Get the Sidekiq Compound metrics. Includes queue, process,\
            \ and job statistics"
      summary: "Get the Sidekiq Compound metrics. Includes queue, process, and job\
        \ statistics"
      tags:
      - sidekiq
      x-openapi-router-controller: openapi_server.controllers.sidekiq_controller
  /v3/sidekiq/job_stats:
    get:
      description: Get the Sidekiq job statistics
      operationId: get_v3_sidekiq_job_stats
      responses:
        "200":
          content: {}
          description: Get the Sidekiq job statistics
      summary: Get the Sidekiq job statistics
      tags:
      - sidekiq
      x-openapi-router-controller: openapi_server.controllers.sidekiq_controller
  /v3/sidekiq/process_metrics:
    get:
      description: Get the Sidekiq process metrics
      operationId: get_v3_sidekiq_process_metrics
      responses:
        "200":
          content: {}
          description: Get the Sidekiq process metrics
      summary: Get the Sidekiq process metrics
      tags:
      - sidekiq
      x-openapi-router-controller: openapi_server.controllers.sidekiq_controller
  /v3/sidekiq/queue_metrics:
    get:
      description: Get the Sidekiq queue metrics
      operationId: get_v3_sidekiq_queue_metrics
      responses:
        "200":
          content: {}
          description: Get the Sidekiq queue metrics
      summary: Get the Sidekiq queue metrics
      tags:
      - sidekiq
      x-openapi-router-controller: openapi_server.controllers.sidekiq_controller
  /v3/snippets:
    get:
      description: This feature was introduced in GitLab 8.15.
      operationId: get_v3_snippets
      parameters:
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalSnippet'
          description: Get a snippets list for authenticated user
      summary: Get a snippets list for authenticated user
      tags:
      - snippets
      x-openapi-router-controller: openapi_server.controllers.snippets_controller
    post:
      description: This feature was introduced in GitLab 8.15.
      operationId: post_v3_snippets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3Snippets_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalSnippet'
          description: Create new snippet
      summary: Create new snippet
      tags:
      - snippets
      x-openapi-router-controller: openapi_server.controllers.snippets_controller
      x-codegen-request-body-name: body
  /v3/snippets/public:
    get:
      description: This feature was introduced in GitLab 8.15.
      operationId: get_v3_snippets_public
      parameters:
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalSnippet'
          description: List all public snippets current_user has access to
      summary: List all public snippets current_user has access to
      tags:
      - snippets
      x-openapi-router-controller: openapi_server.controllers.snippets_controller
  /v3/snippets/{id}:
    delete:
      description: This feature was introduced in GitLab 8.15.
      operationId: delete_v3_snippets_id
      parameters:
      - description: The ID of a snippet
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalSnippet'
          description: Remove snippet
      summary: Remove snippet
      tags:
      - snippets
      x-openapi-router-controller: openapi_server.controllers.snippets_controller
    get:
      description: This feature was introduced in GitLab 8.15.
      operationId: get_v3_snippets_id
      parameters:
      - description: The ID of a snippet
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalSnippet'
          description: Get a single snippet
      summary: Get a single snippet
      tags:
      - snippets
      x-openapi-router-controller: openapi_server.controllers.snippets_controller
    put:
      description: This feature was introduced in GitLab 8.15.
      operationId: put_v3_snippets_id
      parameters:
      - description: The ID of a snippet
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3SnippetsId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalSnippet'
          description: Update an existing snippet
      summary: Update an existing snippet
      tags:
      - snippets
      x-openapi-router-controller: openapi_server.controllers.snippets_controller
      x-codegen-request-body-name: body
  /v3/snippets/{id}/raw:
    get:
      description: This feature was introduced in GitLab 8.15.
      operationId: get_v3_snippets_id_raw
      parameters:
      - description: The ID of a snippet
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Get a raw snippet
      summary: Get a raw snippet
      tags:
      - snippets
      x-openapi-router-controller: openapi_server.controllers.snippets_controller
  /v3/templates/dockerfiles:
    get:
      description: This feature was introduced in GitLab 8.15.
      operationId: get_v3_templates_dockerfiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesList'
          description: Get the list of the available template
      summary: Get the list of the available template
      tags:
      - templates
      x-openapi-router-controller: openapi_server.controllers.templates_controller
  /v3/templates/dockerfiles/{name}:
    get:
      description: This feature was introduced in GitLab 8.15.
      operationId: get_v3_templates_dockerfiles_name
      parameters:
      - description: The name of the template
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Get the text for a specific template present in local filesystem
      summary: Get the text for a specific template present in local filesystem
      tags:
      - templates
      x-openapi-router-controller: openapi_server.controllers.templates_controller
  /v3/templates/gitignores:
    get:
      description: This feature was introduced in GitLab 8.8.
      operationId: get_v3_templates_gitignores
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesList'
          description: Get the list of the available template
      summary: Get the list of the available template
      tags:
      - templates
      x-openapi-router-controller: openapi_server.controllers.templates_controller
  /v3/templates/gitignores/{name}:
    get:
      description: This feature was introduced in GitLab 8.8.
      operationId: get_v3_templates_gitignores_name
      parameters:
      - description: The name of the template
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Get the text for a specific template present in local filesystem
      summary: Get the text for a specific template present in local filesystem
      tags:
      - templates
      x-openapi-router-controller: openapi_server.controllers.templates_controller
  /v3/templates/gitlab_ci_ymls:
    get:
      description: This feature was introduced in GitLab 8.9.
      operationId: get_v3_templates_gitlab_ci_ymls
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesList'
          description: Get the list of the available template
      summary: Get the list of the available template
      tags:
      - templates
      x-openapi-router-controller: openapi_server.controllers.templates_controller
  /v3/templates/gitlab_ci_ymls/{name}:
    get:
      description: This feature was introduced in GitLab 8.9.
      operationId: get_v3_templates_gitlab_ci_ymls_name
      parameters:
      - description: The name of the template
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Get the text for a specific template present in local filesystem
      summary: Get the text for a specific template present in local filesystem
      tags:
      - templates
      x-openapi-router-controller: openapi_server.controllers.templates_controller
  /v3/templates/licenses:
    get:
      description: This feature was introduced in GitLab 8.7.
      operationId: get_v3_templates_licenses
      parameters:
      - description: "If passed, returns only popular licenses"
        in: query
        name: popular
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoLicense'
          description: Get the list of the available license template
      summary: Get the list of the available license template
      tags:
      - templates
      x-openapi-router-controller: openapi_server.controllers.templates_controller
  /v3/templates/licenses/{name}:
    get:
      description: This feature was introduced in GitLab 8.7.
      operationId: get_v3_templates_licenses_name
      parameters:
      - description: The name of the template
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoLicense'
          description: Get the text for a specific license
      summary: Get the text for a specific license
      tags:
      - templates
      x-openapi-router-controller: openapi_server.controllers.templates_controller
  /v3/todos:
    delete:
      description: Mark all todos as done
      operationId: delete_v3_todos
      responses:
        "204":
          content: {}
          description: Mark all todos as done
      summary: Mark all todos as done
      tags:
      - todos
      x-openapi-router-controller: openapi_server.controllers.todos_controller
    get:
      description: Get a todo list
      operationId: get_v3_todos
      parameters:
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: Get a todo list
      summary: Get a todo list
      tags:
      - todos
      x-openapi-router-controller: openapi_server.controllers.todos_controller
  /v3/todos/{id}:
    delete:
      description: Mark a todo as done
      operationId: delete_v3_todos_id
      parameters:
      - description: The ID of the todo being marked as done
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          description: Mark a todo as done
      summary: Mark a todo as done
      tags:
      - todos
      x-openapi-router-controller: openapi_server.controllers.todos_controller
  /v3/user:
    get:
      description: Get the currently authenticated user
      operationId: get_v3_user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
          description: Get the currently authenticated user
      summary: Get the currently authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /v3/user/emails:
    get:
      description: Get the currently authenticated user's email addresses
      operationId: get_v3_user_emails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: Get the currently authenticated user's email addresses
      summary: Get the currently authenticated user's email addresses
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      description: Add new email address to the currently authenticated user
      operationId: post_v3_user_emails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3UserEmails_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: Add new email address to the currently authenticated user
      summary: Add new email address to the currently authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /v3/user/emails/{email_id}:
    delete:
      description: Delete an email address from the currently authenticated user
      operationId: delete_v3_user_emails_email_id
      parameters:
      - description: The ID of the email
        in: path
        name: email_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "204":
          content: {}
          description: Delete an email address from the currently authenticated user
      summary: Delete an email address from the currently authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      description: Get a single email address owned by the currently authenticated
        user
      operationId: get_v3_user_emails_email_id
      parameters:
      - description: The ID of the email
        in: path
        name: email_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: Get a single email address owned by the currently authenticated
            user
      summary: Get a single email address owned by the currently authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /v3/user/keys:
    get:
      description: Get the currently authenticated user's SSH keys
      operationId: get_v3_user_keys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Get the currently authenticated user's SSH keys
      summary: Get the currently authenticated user's SSH keys
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      description: Add a new SSH key to the currently authenticated user
      operationId: post_v3_user_keys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3UserKeys_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Add a new SSH key to the currently authenticated user
      summary: Add a new SSH key to the currently authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /v3/user/keys/{key_id}:
    delete:
      description: Delete an SSH key from the currently authenticated user
      operationId: delete_v3_user_keys_key_id
      parameters:
      - description: The ID of the SSH key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Delete an SSH key from the currently authenticated user
      summary: Delete an SSH key from the currently authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      description: Get a single key owned by currently authenticated user
      operationId: get_v3_user_keys_key_id
      parameters:
      - description: The ID of the SSH key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Get a single key owned by currently authenticated user
      summary: Get a single key owned by currently authenticated user
      tags:
      - user
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /v3/users:
    get:
      description: Get the list of users
      operationId: get_v3_users
      parameters:
      - description: Get a single user with a specific username
        in: query
        name: username
        schema:
          type: string
      - description: Search for a username
        in: query
        name: search
        schema:
          type: string
      - description: Filters only active users
        in: query
        name: active
        schema:
          type: boolean
      - description: Filters only external users
        in: query
        name: external
        schema:
          type: boolean
      - description: Filters only blocked users
        in: query
        name: blocked
        schema:
          type: boolean
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBasic'
          description: Get the list of users
      summary: Get the list of users
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      description: Create a user. Available only for admins.
      operationId: post_v3_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3Users_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
          description: Create a user. Available only for admins.
      summary: Create a user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /v3/users/{id}:
    delete:
      description: Delete a user. Available only for admins.
      operationId: delete_v3_users_id
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: Delete a user. Available only for admins.
      summary: Delete a user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    get:
      description: Get a single user
      operationId: get_v3_users_id
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBasic'
          description: Get a single user
      summary: Get a single user
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    put:
      description: Update a user. Available only for admins.
      operationId: put_v3_users_id
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putV3UsersId_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
          description: Update a user. Available only for admins.
      summary: Update a user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /v3/users/{id}/block:
    put:
      description: Block a user. Available only for admins.
      operationId: put_v3_users_id_block
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Block a user. Available only for admins.
      summary: Block a user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /v3/users/{id}/emails:
    get:
      description: Get the emails addresses of a specified user. Available only for
        admins.
      operationId: get_v3_users_id_emails
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: Get the emails addresses of a specified user. Available only
            for admins.
      summary: Get the emails addresses of a specified user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      description: Add an email address to a specified user. Available only for admins.
      operationId: post_v3_users_id_emails
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3UsersIdEmails_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: Add an email address to a specified user. Available only for
            admins.
      summary: Add an email address to a specified user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /v3/users/{id}/emails/{email_id}:
    delete:
      description: Delete an email address of a specified user. Available only for
        admins.
      operationId: delete_v3_users_id_emails_email_id
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the email
        in: path
        name: email_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: Delete an email address of a specified user. Available only
            for admins.
      summary: Delete an email address of a specified user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /v3/users/{id}/events:
    get:
      description: This feature was introduced in GitLab 8.13.
      operationId: get_v3_users_id_events
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: Current page number
        in: query
        name: page
        schema:
          format: int32
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Get the contribution events of a specified user
      summary: Get the contribution events of a specified user
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /v3/users/{id}/keys:
    get:
      description: Get the SSH keys of a specified user. Available only for admins.
      operationId: get_v3_users_id_keys
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Get the SSH keys of a specified user. Available only for admins.
      summary: Get the SSH keys of a specified user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      description: Add an SSH key to a specified user. Available only for admins.
      operationId: post_v3_users_id_keys
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postV3UserKeys_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Add an SSH key to a specified user. Available only for admins.
      summary: Add an SSH key to a specified user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /v3/users/{id}/keys/{key_id}:
    delete:
      description: Delete an existing SSH key from a specified user. Available only
        for admins.
      operationId: delete_v3_users_id_keys_key_id
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the SSH key
        in: path
        name: key_id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: Delete an existing SSH key from a specified user. Available
            only for admins.
      summary: Delete an existing SSH key from a specified user. Available only for
        admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /v3/users/{id}/unblock:
    put:
      description: Unblock a user. Available only for admins.
      operationId: put_v3_users_id_unblock
      parameters:
      - description: The ID of the user
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Unblock a user. Available only for admins.
      summary: Unblock a user. Available only for admins.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /v3/version:
    get:
      description: This feature was introduced in GitLab 8.13.
      operationId: get_v3_version
      responses:
        "200":
          content: {}
          description: Get the version information of the GitLab instance.
      summary: Get the version information of the GitLab instance.
      tags:
      - version
      x-openapi-router-controller: openapi_server.controllers.version_controller
components:
  schemas:
    AccessRequester:
      description: This feature was introduced in GitLab 8.11.
      example:
        avatar_url: avatar_url
        web_url: web_url
        name: name
        id: id
        state: state
        requested_at: requested_at
        username: username
      properties:
        avatar_url:
          title: avatar_url
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        requested_at:
          title: requested_at
          type: string
        state:
          title: state
          type: string
        username:
          title: username
          type: string
        web_url:
          title: web_url
          type: string
      title: AccessRequester
      type: object
    ApplicationSetting:
      description: Modify application settings
      example:
        repository_storage: repository_storage
        created_at: created_at
        container_registry_token_expire_delay: container_registry_token_expire_delay
        default_snippet_visibility: default_snippet_visibility
        domain_whitelist: domain_whitelist
        default_projects_limit: default_projects_limit
        koding_enabled: koding_enabled
        user_oauth_applications: user_oauth_applications
        default_project_visibility: default_project_visibility
        updated_at: updated_at
        repository_storages: repository_storages
        id: id
        koding_url: koding_url
        home_page_url: home_page_url
        signup_enabled: signup_enabled
        session_expire_delay: session_expire_delay
        signin_enabled: signin_enabled
        domain_blacklist: domain_blacklist
        after_sign_out_path: after_sign_out_path
        restricted_visibility_levels: restricted_visibility_levels
        domain_blacklist_enabled: domain_blacklist_enabled
        max_attachment_size: max_attachment_size
        plantuml_enabled: plantuml_enabled
        default_group_visibility: default_group_visibility
        plantuml_url: plantuml_url
        gravatar_enabled: gravatar_enabled
        sign_in_text: sign_in_text
        after_sign_up_text: after_sign_up_text
        default_branch_protection: default_branch_protection
      properties:
        after_sign_out_path:
          title: after_sign_out_path
          type: string
        after_sign_up_text:
          title: after_sign_up_text
          type: string
        container_registry_token_expire_delay:
          title: container_registry_token_expire_delay
          type: string
        created_at:
          title: created_at
          type: string
        default_branch_protection:
          title: default_branch_protection
          type: string
        default_group_visibility:
          title: default_group_visibility
          type: string
        default_project_visibility:
          title: default_project_visibility
          type: string
        default_projects_limit:
          title: default_projects_limit
          type: string
        default_snippet_visibility:
          title: default_snippet_visibility
          type: string
        domain_blacklist:
          title: domain_blacklist
          type: string
        domain_blacklist_enabled:
          title: domain_blacklist_enabled
          type: string
        domain_whitelist:
          title: domain_whitelist
          type: string
        gravatar_enabled:
          title: gravatar_enabled
          type: string
        home_page_url:
          title: home_page_url
          type: string
        id:
          title: id
          type: string
        koding_enabled:
          title: koding_enabled
          type: string
        koding_url:
          title: koding_url
          type: string
        max_attachment_size:
          title: max_attachment_size
          type: string
        plantuml_enabled:
          title: plantuml_enabled
          type: string
        plantuml_url:
          title: plantuml_url
          type: string
        repository_storage:
          title: repository_storage
          type: string
        repository_storages:
          title: repository_storages
          type: string
        restricted_visibility_levels:
          title: restricted_visibility_levels
          type: string
        session_expire_delay:
          title: session_expire_delay
          type: string
        sign_in_text:
          title: sign_in_text
          type: string
        signin_enabled:
          title: signin_enabled
          type: string
        signup_enabled:
          title: signup_enabled
          type: string
        updated_at:
          title: updated_at
          type: string
        user_oauth_applications:
          title: user_oauth_applications
          type: string
      title: ApplicationSetting
      type: object
    AwardEmoji:
      description: This feature was introduced in 8.9
      example:
        updated_at: updated_at
        awardable_type: awardable_type
        name: name
        awardable_id: awardable_id
        created_at: created_at
        id: id
        user:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
      properties:
        awardable_id:
          title: awardable_id
          type: string
        awardable_type:
          title: awardable_type
          type: string
        created_at:
          title: created_at
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        updated_at:
          title: updated_at
          type: string
        user:
          $ref: '#/components/schemas/UserBasic'
      title: AwardEmoji
      type: object
    BasicProjectDetails:
      description: Get all projects for admin user
      example:
        path: path
        web_url: web_url
        path_with_namespace: path_with_namespace
        name: name
        id: id
        http_url_to_repo: http_url_to_repo
        name_with_namespace: name_with_namespace
      properties:
        http_url_to_repo:
          title: http_url_to_repo
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        name_with_namespace:
          title: name_with_namespace
          type: string
        path:
          title: path
          type: string
        path_with_namespace:
          title: path_with_namespace
          type: string
        web_url:
          title: web_url
          type: string
      title: BasicProjectDetails
      type: object
    Board:
      description: This feature was introduced in 8.13
      example:
        lists:
          id: id
          label:
            color: color
            name: name
            description: description
            id: id
          position: position
        id: id
      properties:
        id:
          title: id
          type: string
        lists:
          $ref: '#/components/schemas/List'
      title: Board
      type: object
    Build:
      description: This feature was added in GitLab 8.11
      example:
        coverage: coverage
        finished_at: finished_at
        commit:
          author_name: author_name
          committer_email: committer_email
          author_email: author_email
          created_at: created_at
          id: id
          short_id: short_id
          message: message
          title: title
          committer_name: committer_name
        created_at: created_at
        pipeline:
          ref: ref
          id: id
          sha: sha
          status: status
        ref: ref
        artifacts_file:
          filename: filename
          size: size
        stage: stage
        name: name
        started_at: started_at
        id: id
        tag: tag
        runner:
          is_shared: is_shared
          name: name
          active: active
          description: description
          id: id
        user:
          bio: bio
          created_at: created_at
          linkedin: linkedin
          is_admin: is_admin
          skype: skype
          twitter: twitter
          avatar_url: avatar_url
          web_url: web_url
          website_url: website_url
          organization: organization
          name: name
          location: location
          id: id
          state: state
          username: username
        status: status
      properties:
        artifacts_file:
          $ref: '#/components/schemas/BuildArtifactFile'
        commit:
          $ref: '#/components/schemas/RepoCommit'
        coverage:
          title: coverage
          type: string
        created_at:
          title: created_at
          type: string
        finished_at:
          title: finished_at
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        pipeline:
          $ref: '#/components/schemas/PipelineBasic'
        ref:
          title: ref
          type: string
        runner:
          $ref: '#/components/schemas/Runner'
        stage:
          title: stage
          type: string
        started_at:
          title: started_at
          type: string
        status:
          title: status
          type: string
        tag:
          title: tag
          type: string
        user:
          $ref: '#/components/schemas/User'
      title: Build
      type: object
    BuildArtifactFile:
      example:
        filename: filename
        size: size
      properties:
        filename:
          title: filename
          type: string
        size:
          title: size
          type: string
      title: BuildArtifactFile
      type: object
    CommitNote:
      description: Post comment to commit
      example:
        note: note
        path: path
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        line: line
        line_type: line_type
        created_at: created_at
      properties:
        author:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          title: created_at
          type: string
        line:
          title: line
          type: string
        line_type:
          title: line_type
          type: string
        note:
          title: note
          type: string
        path:
          title: path
          type: string
      title: CommitNote
      type: object
    CommitStatus:
      description: Post status to a commit
      example:
        allow_failure: allow_failure
        ref: ref
        finished_at: finished_at
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        target_url: target_url
        name: name
        created_at: created_at
        description: description
        started_at: started_at
        id: id
        sha: sha
        status: status
      properties:
        allow_failure:
          title: allow_failure
          type: string
        author:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          title: created_at
          type: string
        description:
          title: description
          type: string
        finished_at:
          title: finished_at
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        ref:
          title: ref
          type: string
        sha:
          title: sha
          type: string
        started_at:
          title: started_at
          type: string
        status:
          title: status
          type: string
        target_url:
          title: target_url
          type: string
      title: CommitStatus
      type: object
    Compare:
      description: "Compare two branches, tags, or commits"
      example:
        compare_timeout: compare_timeout
        compare_same_ref: compare_same_ref
        commit:
          author_name: author_name
          committer_email: committer_email
          author_email: author_email
          created_at: created_at
          id: id
          short_id: short_id
          message: message
          title: title
          committer_name: committer_name
        commits:
          author_name: author_name
          committer_email: committer_email
          author_email: author_email
          created_at: created_at
          id: id
          short_id: short_id
          message: message
          title: title
          committer_name: committer_name
        diffs:
          new_path: new_path
          renamed_file: renamed_file
          a_mode: a_mode
          deleted_file: deleted_file
          b_mode: b_mode
          new_file: new_file
          diff: diff
          old_path: old_path
      properties:
        commit:
          $ref: '#/components/schemas/RepoCommit'
        commits:
          $ref: '#/components/schemas/RepoCommit'
        compare_same_ref:
          title: compare_same_ref
          type: string
        compare_timeout:
          title: compare_timeout
          type: string
        diffs:
          $ref: '#/components/schemas/RepoDiff'
      title: Compare
      type: object
    Contributor:
      description: Get repository contributors
      example:
        additions: additions
        deletions: deletions
        name: name
        commits: commits
        email: email
      properties:
        additions:
          title: additions
          type: string
        commits:
          title: commits
          type: string
        deletions:
          title: deletions
          type: string
        email:
          title: email
          type: string
        name:
          title: name
          type: string
      title: Contributor
      type: object
    Deployment:
      description: This feature was introduced in GitLab 8.11.
      example:
        environment:
          external_url: external_url
          name: name
          id: id
          slug: slug
        ref: ref
        deployable:
          coverage: coverage
          finished_at: finished_at
          commit:
            author_name: author_name
            committer_email: committer_email
            author_email: author_email
            created_at: created_at
            id: id
            short_id: short_id
            message: message
            title: title
            committer_name: committer_name
          created_at: created_at
          pipeline:
            ref: ref
            id: id
            sha: sha
            status: status
          ref: ref
          artifacts_file:
            filename: filename
            size: size
          stage: stage
          name: name
          started_at: started_at
          id: id
          tag: tag
          runner:
            is_shared: is_shared
            name: name
            active: active
            description: description
            id: id
          user:
            bio: bio
            created_at: created_at
            linkedin: linkedin
            is_admin: is_admin
            skype: skype
            twitter: twitter
            avatar_url: avatar_url
            web_url: web_url
            website_url: website_url
            organization: organization
            name: name
            location: location
            id: id
            state: state
            username: username
          status: status
        iid: iid
        created_at: created_at
        id: id
        sha: sha
        user:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
      properties:
        created_at:
          title: created_at
          type: string
        deployable:
          $ref: '#/components/schemas/Build'
        environment:
          $ref: '#/components/schemas/EnvironmentBasic'
        id:
          title: id
          type: string
        iid:
          title: iid
          type: string
        ref:
          title: ref
          type: string
        sha:
          title: sha
          type: string
        user:
          $ref: '#/components/schemas/UserBasic'
      title: Deployment
      type: object
    Email:
      description: Add new email address to the currently authenticated user
      example:
        id: id
        email: email
      properties:
        email:
          title: email
          type: string
        id:
          title: id
          type: string
      title: Email
      type: object
    Environment:
      description: This feature was introduced in GitLab 8.11.
      example:
        external_url: external_url
        name: name
        project:
          issues_enabled: issues_enabled
          ssh_url_to_repo: ssh_url_to_repo
          only_allow_merge_if_all_discussions_are_resolved: only_allow_merge_if_all_discussions_are_resolved
          request_access_enabled: request_access_enabled
          open_issues_count: open_issues_count
          snippets_enabled: snippets_enabled
          created_at: created_at
          description: description
          archived: archived
          path: path
          public: public
          tag_list: tag_list
          last_activity_at: last_activity_at
          shared_runners_enabled: shared_runners_enabled
          visibility_level: visibility_level
          container_registry_enabled: container_registry_enabled
          id: id
          only_allow_merge_if_build_succeeds: only_allow_merge_if_build_succeeds
          lfs_enabled: lfs_enabled
          owner:
            avatar_url: avatar_url
            web_url: web_url
            name: name
            id: id
            state: state
            username: username
          public_builds: public_builds
          path_with_namespace: path_with_namespace
          builds_enabled: builds_enabled
          merge_requests_enabled: merge_requests_enabled
          shared_with_groups: shared_with_groups
          forked_from_project:
            path: path
            web_url: web_url
            path_with_namespace: path_with_namespace
            name: name
            id: id
            http_url_to_repo: http_url_to_repo
            name_with_namespace: name_with_namespace
          http_url_to_repo: http_url_to_repo
          avatar_url: avatar_url
          web_url: web_url
          wiki_enabled: wiki_enabled
          creator_id: creator_id
          name: name
          namespace:
            path: path
            kind: kind
            name: name
            id: id
          default_branch: default_branch
          name_with_namespace: name_with_namespace
          star_count: star_count
          forks_count: forks_count
          runners_token: runners_token
          statistics:
            commit_count: commit_count
            lfs_objects_size: lfs_objects_size
            repository_size: repository_size
            storage_size: storage_size
            build_artifacts_size: build_artifacts_size
        id: id
        slug: slug
      properties:
        external_url:
          title: external_url
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        project:
          $ref: '#/components/schemas/Project'
        slug:
          title: slug
          type: string
      title: Environment
      type: object
    EnvironmentBasic:
      example:
        external_url: external_url
        name: name
        id: id
        slug: slug
      properties:
        external_url:
          title: external_url
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        slug:
          title: slug
          type: string
      title: EnvironmentBasic
      type: object
    Event:
      description: This feature was introduced in GitLab 8.13.
      example:
        note:
          noteable_id: noteable_id
          upvote?: upvote?
          system: system
          attachment: attachment
          updated_at: updated_at
          author:
            avatar_url: avatar_url
            web_url: web_url
            name: name
            id: id
            state: state
            username: username
          noteable_type: noteable_type
          downvote?: downvote?
          created_at: created_at
          id: id
          body: body
        data: data
        project_id: project_id
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        action_name: action_name
        target_title: target_title
        target_type: target_type
        created_at: created_at
        target_id: target_id
        author_id: author_id
        title: title
        author_username: author_username
      properties:
        action_name:
          title: action_name
          type: string
        author:
          $ref: '#/components/schemas/UserBasic'
        author_id:
          title: author_id
          type: string
        author_username:
          title: author_username
          type: string
        created_at:
          title: created_at
          type: string
        data:
          title: data
          type: string
        note:
          $ref: '#/components/schemas/Note'
        project_id:
          title: project_id
          type: string
        target_id:
          title: target_id
          type: string
        target_title:
          title: target_title
          type: string
        target_type:
          title: target_type
          type: string
        title:
          title: title
          type: string
      title: Event
      type: object
    GlobalNotificationSetting:
      description: This feature was introduced in GitLab 8.12
      example:
        notification_email: notification_email
        level: level
        events: events
      properties:
        events:
          title: events
          type: string
        level:
          title: level
          type: string
        notification_email:
          title: notification_email
          type: string
      title: GlobalNotificationSetting
      type: object
    Group:
      description: Update a group. Available only for users who can administrate groups.
      example:
        lfs_enabled: lfs_enabled
        path: path
        avatar_url: avatar_url
        web_url: web_url
        request_access_enabled: request_access_enabled
        name: name
        description: description
        visibility_level: visibility_level
        id: id
        statistics: statistics
      properties:
        avatar_url:
          title: avatar_url
          type: string
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        lfs_enabled:
          title: lfs_enabled
          type: string
        name:
          title: name
          type: string
        path:
          title: path
          type: string
        request_access_enabled:
          title: request_access_enabled
          type: string
        statistics:
          title: statistics
          type: string
        visibility_level:
          title: visibility_level
          type: string
        web_url:
          title: web_url
          type: string
      title: Group
      type: object
    GroupDetail:
      description: Transfer a project to the group namespace. Available only for admin.
      example:
        lfs_enabled: lfs_enabled
        shared_projects:
          issues_enabled: issues_enabled
          ssh_url_to_repo: ssh_url_to_repo
          only_allow_merge_if_all_discussions_are_resolved: only_allow_merge_if_all_discussions_are_resolved
          request_access_enabled: request_access_enabled
          open_issues_count: open_issues_count
          snippets_enabled: snippets_enabled
          created_at: created_at
          description: description
          archived: archived
          path: path
          public: public
          tag_list: tag_list
          last_activity_at: last_activity_at
          shared_runners_enabled: shared_runners_enabled
          visibility_level: visibility_level
          container_registry_enabled: container_registry_enabled
          id: id
          only_allow_merge_if_build_succeeds: only_allow_merge_if_build_succeeds
          lfs_enabled: lfs_enabled
          owner:
            avatar_url: avatar_url
            web_url: web_url
            name: name
            id: id
            state: state
            username: username
          public_builds: public_builds
          path_with_namespace: path_with_namespace
          builds_enabled: builds_enabled
          merge_requests_enabled: merge_requests_enabled
          shared_with_groups: shared_with_groups
          forked_from_project:
            path: path
            web_url: web_url
            path_with_namespace: path_with_namespace
            name: name
            id: id
            http_url_to_repo: http_url_to_repo
            name_with_namespace: name_with_namespace
          http_url_to_repo: http_url_to_repo
          avatar_url: avatar_url
          web_url: web_url
          wiki_enabled: wiki_enabled
          creator_id: creator_id
          name: name
          namespace:
            path: path
            kind: kind
            name: name
            id: id
          default_branch: default_branch
          name_with_namespace: name_with_namespace
          star_count: star_count
          forks_count: forks_count
          runners_token: runners_token
          statistics:
            commit_count: commit_count
            lfs_objects_size: lfs_objects_size
            repository_size: repository_size
            storage_size: storage_size
            build_artifacts_size: build_artifacts_size
        path: path
        projects:
          issues_enabled: issues_enabled
          ssh_url_to_repo: ssh_url_to_repo
          only_allow_merge_if_all_discussions_are_resolved: only_allow_merge_if_all_discussions_are_resolved
          request_access_enabled: request_access_enabled
          open_issues_count: open_issues_count
          snippets_enabled: snippets_enabled
          created_at: created_at
          description: description
          archived: archived
          path: path
          public: public
          tag_list: tag_list
          last_activity_at: last_activity_at
          shared_runners_enabled: shared_runners_enabled
          visibility_level: visibility_level
          container_registry_enabled: container_registry_enabled
          id: id
          only_allow_merge_if_build_succeeds: only_allow_merge_if_build_succeeds
          lfs_enabled: lfs_enabled
          owner:
            avatar_url: avatar_url
            web_url: web_url
            name: name
            id: id
            state: state
            username: username
          public_builds: public_builds
          path_with_namespace: path_with_namespace
          builds_enabled: builds_enabled
          merge_requests_enabled: merge_requests_enabled
          shared_with_groups: shared_with_groups
          forked_from_project:
            path: path
            web_url: web_url
            path_with_namespace: path_with_namespace
            name: name
            id: id
            http_url_to_repo: http_url_to_repo
            name_with_namespace: name_with_namespace
          http_url_to_repo: http_url_to_repo
          avatar_url: avatar_url
          web_url: web_url
          wiki_enabled: wiki_enabled
          creator_id: creator_id
          name: name
          namespace:
            path: path
            kind: kind
            name: name
            id: id
          default_branch: default_branch
          name_with_namespace: name_with_namespace
          star_count: star_count
          forks_count: forks_count
          runners_token: runners_token
          statistics:
            commit_count: commit_count
            lfs_objects_size: lfs_objects_size
            repository_size: repository_size
            storage_size: storage_size
            build_artifacts_size: build_artifacts_size
        avatar_url: avatar_url
        web_url: web_url
        request_access_enabled: request_access_enabled
        name: name
        description: description
        visibility_level: visibility_level
        id: id
        statistics: statistics
      properties:
        avatar_url:
          title: avatar_url
          type: string
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        lfs_enabled:
          title: lfs_enabled
          type: string
        name:
          title: name
          type: string
        path:
          title: path
          type: string
        projects:
          $ref: '#/components/schemas/Project'
        request_access_enabled:
          title: request_access_enabled
          type: string
        shared_projects:
          $ref: '#/components/schemas/Project'
        statistics:
          title: statistics
          type: string
        visibility_level:
          title: visibility_level
          type: string
        web_url:
          title: web_url
          type: string
      title: GroupDetail
      type: object
    Hook:
      description: Delete a hook
      example:
        push_events: push_events
        tag_push_events: tag_push_events
        created_at: created_at
        id: id
        enable_ssl_verification: enable_ssl_verification
        url: url
      properties:
        created_at:
          title: created_at
          type: string
        enable_ssl_verification:
          title: enable_ssl_verification
          type: string
        id:
          title: id
          type: string
        push_events:
          title: push_events
          type: string
        tag_push_events:
          title: tag_push_events
          type: string
        url:
          title: url
          type: string
      title: Hook
      type: object
    Identity:
      example:
        provider: provider
        extern_uid: extern_uid
      properties:
        extern_uid:
          title: extern_uid
          type: string
        provider:
          title: provider
          type: string
      title: Identity
      type: object
    Issue:
      description: Get currently authenticated user's issues
      example:
        upvotes: upvotes
        iid: iid
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        due_date: due_date
        created_at: created_at
        description: description
        downvotes: downvotes
        title: title
        labels: labels
        subscribed: subscribed
        milestone:
          updated_at: updated_at
          iid: iid
          project_id: project_id
          due_date: due_date
          created_at: created_at
          description: description
          id: id
          state: state
          title: title
          start_date: start_date
        updated_at: updated_at
        web_url: web_url
        project_id: project_id
        user_notes_count: user_notes_count
        assignee:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        id: id
        state: state
        confidential: confidential
      properties:
        assignee:
          $ref: '#/components/schemas/UserBasic'
        author:
          $ref: '#/components/schemas/UserBasic'
        confidential:
          title: confidential
          type: string
        created_at:
          title: created_at
          type: string
        description:
          title: description
          type: string
        downvotes:
          title: downvotes
          type: string
        due_date:
          title: due_date
          type: string
        id:
          title: id
          type: string
        iid:
          title: iid
          type: string
        labels:
          title: labels
          type: string
        milestone:
          $ref: '#/components/schemas/Milestone'
        project_id:
          title: project_id
          type: string
        state:
          title: state
          type: string
        subscribed:
          title: subscribed
          type: string
        title:
          title: title
          type: string
        updated_at:
          title: updated_at
          type: string
        upvotes:
          title: upvotes
          type: string
        user_notes_count:
          title: user_notes_count
          type: string
        web_url:
          title: web_url
          type: string
      title: Issue
      type: object
    Label:
      description: Unsubscribe from a resource
      example:
        subscribed: subscribed
        color: color
        open_issues_count: open_issues_count
        name: name
        open_merge_requests_count: open_merge_requests_count
        closed_issues_count: closed_issues_count
        description: description
        id: id
        priority: priority
      properties:
        closed_issues_count:
          title: closed_issues_count
          type: string
        color:
          title: color
          type: string
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        open_issues_count:
          title: open_issues_count
          type: string
        open_merge_requests_count:
          title: open_merge_requests_count
          type: string
        priority:
          title: priority
          type: string
        subscribed:
          title: subscribed
          type: string
      title: Label
      type: object
    LabelBasic:
      example:
        color: color
        name: name
        description: description
        id: id
      properties:
        color:
          title: color
          type: string
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
      title: LabelBasic
      type: object
    List:
      description: This feature was introduced in 8.13
      example:
        id: id
        label:
          color: color
          name: name
          description: description
          id: id
        position: position
      properties:
        id:
          title: id
          type: string
        label:
          $ref: '#/components/schemas/LabelBasic'
        position:
          title: position
          type: string
      title: List
      type: object
    MRNote:
      description: List issues that will be closed on merge
      example:
        note: note
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
      properties:
        author:
          $ref: '#/components/schemas/UserBasic'
        note:
          title: note
          type: string
      title: MRNote
      type: object
    Member:
      description: Updates a member of a group or project.
      example:
        access_level: access_level
        expires_at: expires_at
        avatar_url: avatar_url
        web_url: web_url
        name: name
        id: id
        state: state
        username: username
      properties:
        access_level:
          title: access_level
          type: string
        avatar_url:
          title: avatar_url
          type: string
        expires_at:
          title: expires_at
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        state:
          title: state
          type: string
        username:
          title: username
          type: string
        web_url:
          title: web_url
          type: string
      title: Member
      type: object
    MergeRequest:
      description: Unsubscribe from a resource
      example:
        upvotes: upvotes
        iid: iid
        created_at: created_at
        description: description
        title: title
        source_branch: source_branch
        subscribed: subscribed
        updated_at: updated_at
        project_id: project_id
        merge_commit_sha: merge_commit_sha
        id: id
        state: state
        work_in_progress: work_in_progress
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        target_branch: target_branch
        source_project_id: source_project_id
        downvotes: downvotes
        should_remove_source_branch: should_remove_source_branch
        sha: sha
        labels: labels
        milestone:
          updated_at: updated_at
          iid: iid
          project_id: project_id
          due_date: due_date
          created_at: created_at
          description: description
          id: id
          state: state
          title: title
          start_date: start_date
        web_url: web_url
        merge_status: merge_status
        merge_when_build_succeeds: merge_when_build_succeeds
        user_notes_count: user_notes_count
        assignee:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        target_project_id: target_project_id
        force_remove_source_branch: force_remove_source_branch
      properties:
        assignee:
          $ref: '#/components/schemas/UserBasic'
        author:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          title: created_at
          type: string
        description:
          title: description
          type: string
        downvotes:
          title: downvotes
          type: string
        force_remove_source_branch:
          title: force_remove_source_branch
          type: string
        id:
          title: id
          type: string
        iid:
          title: iid
          type: string
        labels:
          title: labels
          type: string
        merge_commit_sha:
          title: merge_commit_sha
          type: string
        merge_status:
          title: merge_status
          type: string
        merge_when_build_succeeds:
          title: merge_when_build_succeeds
          type: string
        milestone:
          $ref: '#/components/schemas/Milestone'
        project_id:
          title: project_id
          type: string
        sha:
          title: sha
          type: string
        should_remove_source_branch:
          title: should_remove_source_branch
          type: string
        source_branch:
          title: source_branch
          type: string
        source_project_id:
          title: source_project_id
          type: string
        state:
          title: state
          type: string
        subscribed:
          title: subscribed
          type: string
        target_branch:
          title: target_branch
          type: string
        target_project_id:
          title: target_project_id
          type: string
        title:
          title: title
          type: string
        updated_at:
          title: updated_at
          type: string
        upvotes:
          title: upvotes
          type: string
        user_notes_count:
          title: user_notes_count
          type: string
        web_url:
          title: web_url
          type: string
        work_in_progress:
          title: work_in_progress
          type: string
      title: MergeRequest
      type: object
    MergeRequestChanges:
      description: Show the merge request changes
      example:
        upvotes: upvotes
        iid: iid
        changes:
          new_path: new_path
          renamed_file: renamed_file
          a_mode: a_mode
          deleted_file: deleted_file
          b_mode: b_mode
          new_file: new_file
          diff: diff
          old_path: old_path
        created_at: created_at
        description: description
        title: title
        source_branch: source_branch
        subscribed: subscribed
        updated_at: updated_at
        project_id: project_id
        merge_commit_sha: merge_commit_sha
        id: id
        state: state
        work_in_progress: work_in_progress
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        target_branch: target_branch
        source_project_id: source_project_id
        downvotes: downvotes
        should_remove_source_branch: should_remove_source_branch
        sha: sha
        labels: labels
        milestone:
          updated_at: updated_at
          iid: iid
          project_id: project_id
          due_date: due_date
          created_at: created_at
          description: description
          id: id
          state: state
          title: title
          start_date: start_date
        web_url: web_url
        merge_status: merge_status
        merge_when_build_succeeds: merge_when_build_succeeds
        user_notes_count: user_notes_count
        assignee:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        target_project_id: target_project_id
        force_remove_source_branch: force_remove_source_branch
      properties:
        assignee:
          $ref: '#/components/schemas/UserBasic'
        author:
          $ref: '#/components/schemas/UserBasic'
        changes:
          $ref: '#/components/schemas/RepoDiff'
        created_at:
          title: created_at
          type: string
        description:
          title: description
          type: string
        downvotes:
          title: downvotes
          type: string
        force_remove_source_branch:
          title: force_remove_source_branch
          type: string
        id:
          title: id
          type: string
        iid:
          title: iid
          type: string
        labels:
          title: labels
          type: string
        merge_commit_sha:
          title: merge_commit_sha
          type: string
        merge_status:
          title: merge_status
          type: string
        merge_when_build_succeeds:
          title: merge_when_build_succeeds
          type: string
        milestone:
          $ref: '#/components/schemas/Milestone'
        project_id:
          title: project_id
          type: string
        sha:
          title: sha
          type: string
        should_remove_source_branch:
          title: should_remove_source_branch
          type: string
        source_branch:
          title: source_branch
          type: string
        source_project_id:
          title: source_project_id
          type: string
        state:
          title: state
          type: string
        subscribed:
          title: subscribed
          type: string
        target_branch:
          title: target_branch
          type: string
        target_project_id:
          title: target_project_id
          type: string
        title:
          title: title
          type: string
        updated_at:
          title: updated_at
          type: string
        upvotes:
          title: upvotes
          type: string
        user_notes_count:
          title: user_notes_count
          type: string
        web_url:
          title: web_url
          type: string
        work_in_progress:
          title: work_in_progress
          type: string
      title: MergeRequestChanges
      type: object
    MergeRequestDiff:
      description: This feature was introduced in GitLab 8.12.
      example:
        merge_request_id: merge_request_id
        head_commit_sha: head_commit_sha
        start_commit_sha: start_commit_sha
        created_at: created_at
        real_size: real_size
        id: id
        state: state
        base_commit_sha: base_commit_sha
      properties:
        base_commit_sha:
          title: base_commit_sha
          type: string
        created_at:
          title: created_at
          type: string
        head_commit_sha:
          title: head_commit_sha
          type: string
        id:
          title: id
          type: string
        merge_request_id:
          title: merge_request_id
          type: string
        real_size:
          title: real_size
          type: string
        start_commit_sha:
          title: start_commit_sha
          type: string
        state:
          title: state
          type: string
      title: MergeRequestDiff
      type: object
    MergeRequestDiffFull:
      description: This feature was introduced in GitLab 8.12.
      example:
        merge_request_id: merge_request_id
        head_commit_sha: head_commit_sha
        start_commit_sha: start_commit_sha
        commits:
          author_name: author_name
          committer_email: committer_email
          author_email: author_email
          created_at: created_at
          id: id
          short_id: short_id
          message: message
          title: title
          committer_name: committer_name
        created_at: created_at
        real_size: real_size
        id: id
        state: state
        diffs:
          new_path: new_path
          renamed_file: renamed_file
          a_mode: a_mode
          deleted_file: deleted_file
          b_mode: b_mode
          new_file: new_file
          diff: diff
          old_path: old_path
        base_commit_sha: base_commit_sha
      properties:
        base_commit_sha:
          title: base_commit_sha
          type: string
        commits:
          $ref: '#/components/schemas/RepoCommit'
        created_at:
          title: created_at
          type: string
        diffs:
          $ref: '#/components/schemas/RepoDiff'
        head_commit_sha:
          title: head_commit_sha
          type: string
        id:
          title: id
          type: string
        merge_request_id:
          title: merge_request_id
          type: string
        real_size:
          title: real_size
          type: string
        start_commit_sha:
          title: start_commit_sha
          type: string
        state:
          title: state
          type: string
      title: MergeRequestDiffFull
      type: object
    Milestone:
      description: Update an existing project milestone
      example:
        updated_at: updated_at
        iid: iid
        project_id: project_id
        due_date: due_date
        created_at: created_at
        description: description
        id: id
        state: state
        title: title
        start_date: start_date
      properties:
        created_at:
          title: created_at
          type: string
        description:
          title: description
          type: string
        due_date:
          title: due_date
          type: string
        id:
          title: id
          type: string
        iid:
          title: iid
          type: string
        project_id:
          title: project_id
          type: string
        start_date:
          title: start_date
          type: string
        state:
          title: state
          type: string
        title:
          title: title
          type: string
        updated_at:
          title: updated_at
          type: string
      title: Milestone
      type: object
    Namespace:
      description: Get a namespaces list
      example:
        path: path
        kind: kind
        name: name
        id: id
      properties:
        id:
          title: id
          type: string
        kind:
          title: kind
          type: string
        name:
          title: name
          type: string
        path:
          title: path
          type: string
      title: Namespace
      type: object
    Note:
      description: Delete a +noteable+ note
      example:
        noteable_id: noteable_id
        upvote?: upvote?
        system: system
        attachment: attachment
        updated_at: updated_at
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        noteable_type: noteable_type
        downvote?: downvote?
        created_at: created_at
        id: id
        body: body
      properties:
        attachment:
          title: attachment
          type: string
        author:
          $ref: '#/components/schemas/UserBasic'
        body:
          title: body
          type: string
        created_at:
          title: created_at
          type: string
        downvote?:
          title: downvote?
          type: string
        id:
          title: id
          type: string
        noteable_id:
          title: noteable_id
          type: string
        noteable_type:
          title: noteable_type
          type: string
        system:
          title: system
          type: string
        updated_at:
          title: updated_at
          type: string
        upvote?:
          title: upvote?
          type: string
      title: Note
      type: object
    NotificationSetting:
      description: This feature was introduced in GitLab 8.12
      example:
        level: level
        events: events
      properties:
        events:
          title: events
          type: string
        level:
          title: level
          type: string
      title: NotificationSetting
      type: object
    PersonalSnippet:
      description: This feature was introduced in GitLab 8.15.
      example:
        updated_at: updated_at
        web_url: web_url
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        file_name: file_name
        created_at: created_at
        id: id
        title: title
        raw_url: raw_url
      properties:
        author:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          title: created_at
          type: string
        file_name:
          title: file_name
          type: string
        id:
          title: id
          type: string
        raw_url:
          title: raw_url
          type: string
        title:
          title: title
          type: string
        updated_at:
          title: updated_at
          type: string
        web_url:
          title: web_url
          type: string
      title: PersonalSnippet
      type: object
    Pipeline:
      description: This feature was introduced in GitLab 8.11.
      example:
        coverage: coverage
        before_sha: before_sha
        finished_at: finished_at
        created_at: created_at
        sha: sha
        duration: duration
        yaml_errors: yaml_errors
        ref: ref
        updated_at: updated_at
        committed_at: committed_at
        started_at: started_at
        id: id
        tag: tag
        user:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        status: status
      properties:
        before_sha:
          title: before_sha
          type: string
        committed_at:
          title: committed_at
          type: string
        coverage:
          title: coverage
          type: string
        created_at:
          title: created_at
          type: string
        duration:
          title: duration
          type: string
        finished_at:
          title: finished_at
          type: string
        id:
          title: id
          type: string
        ref:
          title: ref
          type: string
        sha:
          title: sha
          type: string
        started_at:
          title: started_at
          type: string
        status:
          title: status
          type: string
        tag:
          title: tag
          type: string
        updated_at:
          title: updated_at
          type: string
        user:
          $ref: '#/components/schemas/UserBasic'
        yaml_errors:
          title: yaml_errors
          type: string
      title: Pipeline
      type: object
    PipelineBasic:
      example:
        ref: ref
        id: id
        sha: sha
        status: status
      properties:
        id:
          title: id
          type: string
        ref:
          title: ref
          type: string
        sha:
          title: sha
          type: string
        status:
          title: status
          type: string
      title: PipelineBasic
      type: object
    Project:
      description: Unstar a project
      example:
        issues_enabled: issues_enabled
        ssh_url_to_repo: ssh_url_to_repo
        only_allow_merge_if_all_discussions_are_resolved: only_allow_merge_if_all_discussions_are_resolved
        request_access_enabled: request_access_enabled
        open_issues_count: open_issues_count
        snippets_enabled: snippets_enabled
        created_at: created_at
        description: description
        archived: archived
        path: path
        public: public
        tag_list: tag_list
        last_activity_at: last_activity_at
        shared_runners_enabled: shared_runners_enabled
        visibility_level: visibility_level
        container_registry_enabled: container_registry_enabled
        id: id
        only_allow_merge_if_build_succeeds: only_allow_merge_if_build_succeeds
        lfs_enabled: lfs_enabled
        owner:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        public_builds: public_builds
        path_with_namespace: path_with_namespace
        builds_enabled: builds_enabled
        merge_requests_enabled: merge_requests_enabled
        shared_with_groups: shared_with_groups
        forked_from_project:
          path: path
          web_url: web_url
          path_with_namespace: path_with_namespace
          name: name
          id: id
          http_url_to_repo: http_url_to_repo
          name_with_namespace: name_with_namespace
        http_url_to_repo: http_url_to_repo
        avatar_url: avatar_url
        web_url: web_url
        wiki_enabled: wiki_enabled
        creator_id: creator_id
        name: name
        namespace:
          path: path
          kind: kind
          name: name
          id: id
        default_branch: default_branch
        name_with_namespace: name_with_namespace
        star_count: star_count
        forks_count: forks_count
        runners_token: runners_token
        statistics:
          commit_count: commit_count
          lfs_objects_size: lfs_objects_size
          repository_size: repository_size
          storage_size: storage_size
          build_artifacts_size: build_artifacts_size
      properties:
        archived:
          title: archived
          type: string
        avatar_url:
          title: avatar_url
          type: string
        builds_enabled:
          title: builds_enabled
          type: string
        container_registry_enabled:
          title: container_registry_enabled
          type: string
        created_at:
          title: created_at
          type: string
        creator_id:
          title: creator_id
          type: string
        default_branch:
          title: default_branch
          type: string
        description:
          title: description
          type: string
        forked_from_project:
          $ref: '#/components/schemas/BasicProjectDetails'
        forks_count:
          title: forks_count
          type: string
        http_url_to_repo:
          title: http_url_to_repo
          type: string
        id:
          title: id
          type: string
        issues_enabled:
          title: issues_enabled
          type: string
        last_activity_at:
          title: last_activity_at
          type: string
        lfs_enabled:
          title: lfs_enabled
          type: string
        merge_requests_enabled:
          title: merge_requests_enabled
          type: string
        name:
          title: name
          type: string
        name_with_namespace:
          title: name_with_namespace
          type: string
        namespace:
          $ref: '#/components/schemas/Namespace'
        only_allow_merge_if_all_discussions_are_resolved:
          title: only_allow_merge_if_all_discussions_are_resolved
          type: string
        only_allow_merge_if_build_succeeds:
          title: only_allow_merge_if_build_succeeds
          type: string
        open_issues_count:
          title: open_issues_count
          type: string
        owner:
          $ref: '#/components/schemas/UserBasic'
        path:
          title: path
          type: string
        path_with_namespace:
          title: path_with_namespace
          type: string
        public:
          title: public
          type: string
        public_builds:
          title: public_builds
          type: string
        request_access_enabled:
          title: request_access_enabled
          type: string
        runners_token:
          title: runners_token
          type: string
        shared_runners_enabled:
          title: shared_runners_enabled
          type: string
        shared_with_groups:
          title: shared_with_groups
          type: string
        snippets_enabled:
          title: snippets_enabled
          type: string
        ssh_url_to_repo:
          title: ssh_url_to_repo
          type: string
        star_count:
          title: star_count
          type: string
        statistics:
          $ref: '#/components/schemas/ProjectStatistics'
        tag_list:
          title: tag_list
          type: string
        visibility_level:
          title: visibility_level
          type: string
        web_url:
          title: web_url
          type: string
        wiki_enabled:
          title: wiki_enabled
          type: string
      title: Project
      type: object
    ProjectGroupLink:
      description: Share the project with a group
      example:
        expires_at: expires_at
        group_id: group_id
        project_id: project_id
        id: id
        group_access: group_access
      properties:
        expires_at:
          title: expires_at
          type: string
        group_access:
          title: group_access
          type: string
        group_id:
          title: group_id
          type: string
        id:
          title: id
          type: string
        project_id:
          title: project_id
          type: string
      title: ProjectGroupLink
      type: object
    ProjectHook:
      description: Deletes project hook
      example:
        pipeline_events: pipeline_events
        issues_events: issues_events
        created_at: created_at
        merge_requests_events: merge_requests_events
        note_events: note_events
        url: url
        push_events: push_events
        tag_push_events: tag_push_events
        project_id: project_id
        build_events: build_events
        wiki_page_events: wiki_page_events
        id: id
        enable_ssl_verification: enable_ssl_verification
      properties:
        build_events:
          title: build_events
          type: string
        created_at:
          title: created_at
          type: string
        enable_ssl_verification:
          title: enable_ssl_verification
          type: string
        id:
          title: id
          type: string
        issues_events:
          title: issues_events
          type: string
        merge_requests_events:
          title: merge_requests_events
          type: string
        note_events:
          title: note_events
          type: string
        pipeline_events:
          title: pipeline_events
          type: string
        project_id:
          title: project_id
          type: string
        push_events:
          title: push_events
          type: string
        tag_push_events:
          title: tag_push_events
          type: string
        url:
          title: url
          type: string
        wiki_page_events:
          title: wiki_page_events
          type: string
      title: ProjectHook
      type: object
    ProjectService:
      description: Get the service settings for project
      example:
        pipeline_events: pipeline_events
        issues_events: issues_events
        active: active
        created_at: created_at
        merge_requests_events: merge_requests_events
        note_events: note_events
        title: title
        push_events: push_events
        tag_push_events: tag_push_events
        updated_at: updated_at
        build_events: build_events
        id: id
        properties: properties
      properties:
        active:
          title: active
          type: string
        build_events:
          title: build_events
          type: string
        created_at:
          title: created_at
          type: string
        id:
          title: id
          type: string
        issues_events:
          title: issues_events
          type: string
        merge_requests_events:
          title: merge_requests_events
          type: string
        note_events:
          title: note_events
          type: string
        pipeline_events:
          title: pipeline_events
          type: string
        properties:
          title: properties
          type: string
        push_events:
          title: push_events
          type: string
        tag_push_events:
          title: tag_push_events
          type: string
        title:
          title: title
          type: string
        updated_at:
          title: updated_at
          type: string
      title: ProjectService
      type: object
    ProjectSnippet:
      description: Update an existing project snippet
      example:
        expires_at: expires_at
        updated_at: updated_at
        web_url: web_url
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        file_name: file_name
        created_at: created_at
        id: id
        title: title
      properties:
        author:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          title: created_at
          type: string
        expires_at:
          title: expires_at
          type: string
        file_name:
          title: file_name
          type: string
        id:
          title: id
          type: string
        title:
          title: title
          type: string
        updated_at:
          title: updated_at
          type: string
        web_url:
          title: web_url
          type: string
      title: ProjectSnippet
      type: object
    ProjectStatistics:
      example:
        commit_count: commit_count
        lfs_objects_size: lfs_objects_size
        repository_size: repository_size
        storage_size: storage_size
        build_artifacts_size: build_artifacts_size
      properties:
        build_artifacts_size:
          title: build_artifacts_size
          type: string
        commit_count:
          title: commit_count
          type: string
        lfs_objects_size:
          title: lfs_objects_size
          type: string
        repository_size:
          title: repository_size
          type: string
        storage_size:
          title: storage_size
          type: string
      title: ProjectStatistics
      type: object
    ProjectWithAccess:
      description: Get a single project
      example:
        issues_enabled: issues_enabled
        ssh_url_to_repo: ssh_url_to_repo
        only_allow_merge_if_all_discussions_are_resolved: only_allow_merge_if_all_discussions_are_resolved
        request_access_enabled: request_access_enabled
        open_issues_count: open_issues_count
        snippets_enabled: snippets_enabled
        created_at: created_at
        description: description
        archived: archived
        path: path
        public: public
        permissions: permissions
        tag_list: tag_list
        last_activity_at: last_activity_at
        shared_runners_enabled: shared_runners_enabled
        visibility_level: visibility_level
        container_registry_enabled: container_registry_enabled
        id: id
        only_allow_merge_if_build_succeeds: only_allow_merge_if_build_succeeds
        lfs_enabled: lfs_enabled
        owner:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        public_builds: public_builds
        path_with_namespace: path_with_namespace
        builds_enabled: builds_enabled
        merge_requests_enabled: merge_requests_enabled
        shared_with_groups: shared_with_groups
        forked_from_project:
          path: path
          web_url: web_url
          path_with_namespace: path_with_namespace
          name: name
          id: id
          http_url_to_repo: http_url_to_repo
          name_with_namespace: name_with_namespace
        http_url_to_repo: http_url_to_repo
        avatar_url: avatar_url
        web_url: web_url
        wiki_enabled: wiki_enabled
        creator_id: creator_id
        name: name
        namespace:
          path: path
          kind: kind
          name: name
          id: id
        default_branch: default_branch
        name_with_namespace: name_with_namespace
        star_count: star_count
        forks_count: forks_count
        runners_token: runners_token
        statistics:
          commit_count: commit_count
          lfs_objects_size: lfs_objects_size
          repository_size: repository_size
          storage_size: storage_size
          build_artifacts_size: build_artifacts_size
      properties:
        archived:
          title: archived
          type: string
        avatar_url:
          title: avatar_url
          type: string
        builds_enabled:
          title: builds_enabled
          type: string
        container_registry_enabled:
          title: container_registry_enabled
          type: string
        created_at:
          title: created_at
          type: string
        creator_id:
          title: creator_id
          type: string
        default_branch:
          title: default_branch
          type: string
        description:
          title: description
          type: string
        forked_from_project:
          $ref: '#/components/schemas/BasicProjectDetails'
        forks_count:
          title: forks_count
          type: string
        http_url_to_repo:
          title: http_url_to_repo
          type: string
        id:
          title: id
          type: string
        issues_enabled:
          title: issues_enabled
          type: string
        last_activity_at:
          title: last_activity_at
          type: string
        lfs_enabled:
          title: lfs_enabled
          type: string
        merge_requests_enabled:
          title: merge_requests_enabled
          type: string
        name:
          title: name
          type: string
        name_with_namespace:
          title: name_with_namespace
          type: string
        namespace:
          $ref: '#/components/schemas/Namespace'
        only_allow_merge_if_all_discussions_are_resolved:
          title: only_allow_merge_if_all_discussions_are_resolved
          type: string
        only_allow_merge_if_build_succeeds:
          title: only_allow_merge_if_build_succeeds
          type: string
        open_issues_count:
          title: open_issues_count
          type: string
        owner:
          $ref: '#/components/schemas/UserBasic'
        path:
          title: path
          type: string
        path_with_namespace:
          title: path_with_namespace
          type: string
        permissions:
          title: permissions
          type: string
        public:
          title: public
          type: string
        public_builds:
          title: public_builds
          type: string
        request_access_enabled:
          title: request_access_enabled
          type: string
        runners_token:
          title: runners_token
          type: string
        shared_runners_enabled:
          title: shared_runners_enabled
          type: string
        shared_with_groups:
          title: shared_with_groups
          type: string
        snippets_enabled:
          title: snippets_enabled
          type: string
        ssh_url_to_repo:
          title: ssh_url_to_repo
          type: string
        star_count:
          title: star_count
          type: string
        statistics:
          $ref: '#/components/schemas/ProjectStatistics'
        tag_list:
          title: tag_list
          type: string
        visibility_level:
          title: visibility_level
          type: string
        web_url:
          title: web_url
          type: string
        wiki_enabled:
          title: wiki_enabled
          type: string
      title: ProjectWithAccess
      type: object
    Release:
      description: Update a tag's release note
      example:
        tag_name: tag_name
        description: description
      properties:
        description:
          title: description
          type: string
        tag_name:
          title: tag_name
          type: string
      title: Release
      type: object
    RepoBranch:
      description: Create branch
      example:
        protected: protected
        developers_can_push: developers_can_push
        developers_can_merge: developers_can_merge
        commit: commit
        merged: merged
        name: name
      properties:
        commit:
          title: commit
          type: string
        developers_can_merge:
          title: developers_can_merge
          type: string
        developers_can_push:
          title: developers_can_push
          type: string
        merged:
          title: merged
          type: string
        name:
          title: name
          type: string
        protected:
          title: protected
          type: string
      title: RepoBranch
      type: object
    RepoCommit:
      description: Get the commits of a merge request
      example:
        author_name: author_name
        committer_email: committer_email
        author_email: author_email
        created_at: created_at
        id: id
        short_id: short_id
        message: message
        title: title
        committer_name: committer_name
      properties:
        author_email:
          title: author_email
          type: string
        author_name:
          title: author_name
          type: string
        committer_email:
          title: committer_email
          type: string
        committer_name:
          title: committer_name
          type: string
        created_at:
          title: created_at
          type: string
        id:
          title: id
          type: string
        message:
          title: message
          type: string
        short_id:
          title: short_id
          type: string
        title:
          title: title
          type: string
      title: RepoCommit
      type: object
    RepoCommitDetail:
      description: Get a specific commit of a project
      example:
        author_name: author_name
        authored_date: authored_date
        committer_email: committer_email
        created_at: created_at
        short_id: short_id
        message: message
        parent_ids: parent_ids
        title: title
        committer_name: committer_name
        committed_date: committed_date
        stats:
          total: total
          additions: additions
          deletions: deletions
        author_email: author_email
        id: id
        status: status
      properties:
        author_email:
          title: author_email
          type: string
        author_name:
          title: author_name
          type: string
        authored_date:
          title: authored_date
          type: string
        committed_date:
          title: committed_date
          type: string
        committer_email:
          title: committer_email
          type: string
        committer_name:
          title: committer_name
          type: string
        created_at:
          title: created_at
          type: string
        id:
          title: id
          type: string
        message:
          title: message
          type: string
        parent_ids:
          title: parent_ids
          type: string
        short_id:
          title: short_id
          type: string
        stats:
          $ref: '#/components/schemas/RepoCommitStats'
        status:
          title: status
          type: string
        title:
          title: title
          type: string
      title: RepoCommitDetail
      type: object
    RepoCommitStats:
      example:
        total: total
        additions: additions
        deletions: deletions
      properties:
        additions:
          title: additions
          type: string
        deletions:
          title: deletions
          type: string
        total:
          title: total
          type: string
      title: RepoCommitStats
      type: object
    RepoDiff:
      example:
        new_path: new_path
        renamed_file: renamed_file
        a_mode: a_mode
        deleted_file: deleted_file
        b_mode: b_mode
        new_file: new_file
        diff: diff
        old_path: old_path
      properties:
        a_mode:
          title: a_mode
          type: string
        b_mode:
          title: b_mode
          type: string
        deleted_file:
          title: deleted_file
          type: string
        diff:
          title: diff
          type: string
        new_file:
          title: new_file
          type: string
        new_path:
          title: new_path
          type: string
        old_path:
          title: old_path
          type: string
        renamed_file:
          title: renamed_file
          type: string
      title: RepoDiff
      type: object
    RepoLicense:
      description: This feature was introduced in GitLab 8.7.
      example:
        permissions: permissions
        html_url: html_url
        name: name
        nickname: nickname
        description: description
        conditions: conditions
        popular: popular
        content: content
        key: key
        source_url: source_url
        limitations: limitations
      properties:
        conditions:
          title: conditions
          type: string
        content:
          title: content
          type: string
        description:
          title: description
          type: string
        html_url:
          title: html_url
          type: string
        key:
          title: key
          type: string
        limitations:
          title: limitations
          type: string
        name:
          title: name
          type: string
        nickname:
          title: nickname
          type: string
        permissions:
          title: permissions
          type: string
        popular:
          title: popular
          type: string
        source_url:
          title: source_url
          type: string
      title: RepoLicense
      type: object
    RepoTag:
      description: Create a new repository tag
      example:
        release:
          tag_name: tag_name
          description: description
        commit: commit
        name: name
        message: message
      properties:
        commit:
          title: commit
          type: string
        message:
          title: message
          type: string
        name:
          title: name
          type: string
        release:
          $ref: '#/components/schemas/Release'
      title: RepoTag
      type: object
    RepoTreeObject:
      description: Get a project repository tree
      example:
        mode: mode
        path: path
        name: name
        id: id
        type: type
      properties:
        id:
          title: id
          type: string
        mode:
          title: mode
          type: string
        name:
          title: name
          type: string
        path:
          title: path
          type: string
        type:
          title: type
          type: string
      title: RepoTreeObject
      type: object
    Runner:
      description: Remove a runner
      example:
        is_shared: is_shared
        name: name
        active: active
        description: description
        id: id
      properties:
        active:
          title: active
          type: string
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        is_shared:
          title: is_shared
          type: string
        name:
          title: name
          type: string
      title: Runner
      type: object
    RunnerDetails:
      description: Update runner's details
      example:
        projects:
          path: path
          web_url: web_url
          path_with_namespace: path_with_namespace
          name: name
          id: id
          http_url_to_repo: http_url_to_repo
          name_with_namespace: name_with_namespace
        active: active
        description: description
        contacted_at: contacted_at
        version: version
        platform: platform
        revision: revision
        token: token
        tag_list: tag_list
        is_shared: is_shared
        name: name
        id: id
        locked: locked
        run_untagged: run_untagged
        architecture: architecture
      properties:
        active:
          title: active
          type: string
        architecture:
          title: architecture
          type: string
        contacted_at:
          title: contacted_at
          type: string
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        is_shared:
          title: is_shared
          type: string
        locked:
          title: locked
          type: string
        name:
          title: name
          type: string
        platform:
          title: platform
          type: string
        projects:
          $ref: '#/components/schemas/BasicProjectDetails'
        revision:
          title: revision
          type: string
        run_untagged:
          title: run_untagged
          type: string
        tag_list:
          title: tag_list
          type: string
        token:
          title: token
          type: string
        version:
          title: version
          type: string
      title: RunnerDetails
      type: object
    SSHKey:
      description: Delete an SSH key from the currently authenticated user
      example:
        created_at: created_at
        id: id
        can_push: can_push
        title: title
        key: key
      properties:
        can_push:
          title: can_push
          type: string
        created_at:
          title: created_at
          type: string
        id:
          title: id
          type: string
        key:
          title: key
          type: string
        title:
          title: title
          type: string
      title: SSHKey
      type: object
    SSHKeyWithUser:
      description: Get single ssh key by id. Only available to admin users
      example:
        created_at: created_at
        id: id
        can_push: can_push
        title: title
        user:
          can_create_project: can_create_project
          theme_id: theme_id
          bio: bio
          created_at: created_at
          projects_limit: projects_limit
          linkedin: linkedin
          can_create_group: can_create_group
          is_admin: is_admin
          skype: skype
          twitter: twitter
          identities:
            provider: provider
            extern_uid: extern_uid
          color_scheme_id: color_scheme_id
          last_sign_in_at: last_sign_in_at
          id: id
          state: state
          confirmed_at: confirmed_at
          email: email
          current_sign_in_at: current_sign_in_at
          two_factor_enabled: two_factor_enabled
          external: external
          avatar_url: avatar_url
          web_url: web_url
          website_url: website_url
          organization: organization
          name: name
          location: location
          username: username
        key: key
      properties:
        can_push:
          title: can_push
          type: string
        created_at:
          title: created_at
          type: string
        id:
          title: id
          type: string
        key:
          title: key
          type: string
        title:
          title: title
          type: string
        user:
          $ref: '#/components/schemas/UserPublic'
      title: SSHKeyWithUser
      type: object
    Template:
      description: This feature was introduced in GitLab 8.15. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      example:
        name: name
        content: content
      properties:
        content:
          title: content
          type: string
        name:
          title: name
          type: string
      title: Template
      type: object
    TemplatesList:
      description: This feature was introduced in GitLab 8.15. This endpoint is deprecated
        and will be removed in GitLab 9.0.
      example:
        name: name
      properties:
        name:
          title: name
          type: string
      title: TemplatesList
      type: object
    Todo:
      description: Mark a todo as done
      example:
        author:
          avatar_url: avatar_url
          web_url: web_url
          name: name
          id: id
          state: state
          username: username
        action_name: action_name
        target_url: target_url
        target_type: target_type
        created_at: created_at
        project:
          path: path
          web_url: web_url
          path_with_namespace: path_with_namespace
          name: name
          id: id
          http_url_to_repo: http_url_to_repo
          name_with_namespace: name_with_namespace
        id: id
        state: state
        body: body
        target: target
      properties:
        action_name:
          title: action_name
          type: string
        author:
          $ref: '#/components/schemas/UserBasic'
        body:
          title: body
          type: string
        created_at:
          title: created_at
          type: string
        id:
          title: id
          type: string
        project:
          $ref: '#/components/schemas/BasicProjectDetails'
        state:
          title: state
          type: string
        target:
          title: target
          type: string
        target_type:
          title: target_type
          type: string
        target_url:
          title: target_url
          type: string
      title: Todo
      type: object
    Trigger:
      description: Delete a trigger
      example:
        updated_at: updated_at
        last_used: last_used
        created_at: created_at
        deleted_at: deleted_at
        token: token
      properties:
        created_at:
          title: created_at
          type: string
        deleted_at:
          title: deleted_at
          type: string
        last_used:
          title: last_used
          type: string
        token:
          title: token
          type: string
        updated_at:
          title: updated_at
          type: string
      title: Trigger
      type: object
    TriggerRequest:
      description: Trigger a GitLab project build
      example:
        variables: variables
        id: id
      properties:
        id:
          title: id
          type: string
        variables:
          title: variables
          type: string
      title: TriggerRequest
      type: object
    User:
      example:
        bio: bio
        created_at: created_at
        linkedin: linkedin
        is_admin: is_admin
        skype: skype
        twitter: twitter
        avatar_url: avatar_url
        web_url: web_url
        website_url: website_url
        organization: organization
        name: name
        location: location
        id: id
        state: state
        username: username
      properties:
        avatar_url:
          title: avatar_url
          type: string
        bio:
          title: bio
          type: string
        created_at:
          title: created_at
          type: string
        id:
          title: id
          type: string
        is_admin:
          title: is_admin
          type: string
        linkedin:
          title: linkedin
          type: string
        location:
          title: location
          type: string
        name:
          title: name
          type: string
        organization:
          title: organization
          type: string
        skype:
          title: skype
          type: string
        state:
          title: state
          type: string
        twitter:
          title: twitter
          type: string
        username:
          title: username
          type: string
        web_url:
          title: web_url
          type: string
        website_url:
          title: website_url
          type: string
      title: User
      type: object
    UserBasic:
      description: Get a single user
      example:
        avatar_url: avatar_url
        web_url: web_url
        name: name
        id: id
        state: state
        username: username
      properties:
        avatar_url:
          title: avatar_url
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        state:
          title: state
          type: string
        username:
          title: username
          type: string
        web_url:
          title: web_url
          type: string
      title: UserBasic
      type: object
    UserPublic:
      description: Get the currently authenticated user
      example:
        can_create_project: can_create_project
        theme_id: theme_id
        bio: bio
        created_at: created_at
        projects_limit: projects_limit
        linkedin: linkedin
        can_create_group: can_create_group
        is_admin: is_admin
        skype: skype
        twitter: twitter
        identities:
          provider: provider
          extern_uid: extern_uid
        color_scheme_id: color_scheme_id
        last_sign_in_at: last_sign_in_at
        id: id
        state: state
        confirmed_at: confirmed_at
        email: email
        current_sign_in_at: current_sign_in_at
        two_factor_enabled: two_factor_enabled
        external: external
        avatar_url: avatar_url
        web_url: web_url
        website_url: website_url
        organization: organization
        name: name
        location: location
        username: username
      properties:
        avatar_url:
          title: avatar_url
          type: string
        bio:
          title: bio
          type: string
        can_create_group:
          title: can_create_group
          type: string
        can_create_project:
          title: can_create_project
          type: string
        color_scheme_id:
          title: color_scheme_id
          type: string
        confirmed_at:
          title: confirmed_at
          type: string
        created_at:
          title: created_at
          type: string
        current_sign_in_at:
          title: current_sign_in_at
          type: string
        email:
          title: email
          type: string
        external:
          title: external
          type: string
        id:
          title: id
          type: string
        identities:
          $ref: '#/components/schemas/Identity'
        is_admin:
          title: is_admin
          type: string
        last_sign_in_at:
          title: last_sign_in_at
          type: string
        linkedin:
          title: linkedin
          type: string
        location:
          title: location
          type: string
        name:
          title: name
          type: string
        organization:
          title: organization
          type: string
        projects_limit:
          title: projects_limit
          type: string
        skype:
          title: skype
          type: string
        state:
          title: state
          type: string
        theme_id:
          title: theme_id
          type: string
        twitter:
          title: twitter
          type: string
        two_factor_enabled:
          title: two_factor_enabled
          type: string
        username:
          title: username
          type: string
        web_url:
          title: web_url
          type: string
        website_url:
          title: website_url
          type: string
      title: UserPublic
      type: object
    UserWithPrivateToken:
      description: Login to get token
      example:
        can_create_project: can_create_project
        theme_id: theme_id
        bio: bio
        created_at: created_at
        projects_limit: projects_limit
        linkedin: linkedin
        can_create_group: can_create_group
        is_admin: is_admin
        skype: skype
        twitter: twitter
        identities:
          provider: provider
          extern_uid: extern_uid
        color_scheme_id: color_scheme_id
        last_sign_in_at: last_sign_in_at
        id: id
        state: state
        confirmed_at: confirmed_at
        email: email
        current_sign_in_at: current_sign_in_at
        two_factor_enabled: two_factor_enabled
        private_token: private_token
        external: external
        avatar_url: avatar_url
        web_url: web_url
        website_url: website_url
        organization: organization
        name: name
        location: location
        username: username
      properties:
        avatar_url:
          title: avatar_url
          type: string
        bio:
          title: bio
          type: string
        can_create_group:
          title: can_create_group
          type: string
        can_create_project:
          title: can_create_project
          type: string
        color_scheme_id:
          title: color_scheme_id
          type: string
        confirmed_at:
          title: confirmed_at
          type: string
        created_at:
          title: created_at
          type: string
        current_sign_in_at:
          title: current_sign_in_at
          type: string
        email:
          title: email
          type: string
        external:
          title: external
          type: string
        id:
          title: id
          type: string
        identities:
          $ref: '#/components/schemas/Identity'
        is_admin:
          title: is_admin
          type: string
        last_sign_in_at:
          title: last_sign_in_at
          type: string
        linkedin:
          title: linkedin
          type: string
        location:
          title: location
          type: string
        name:
          title: name
          type: string
        organization:
          title: organization
          type: string
        private_token:
          title: private_token
          type: string
        projects_limit:
          title: projects_limit
          type: string
        skype:
          title: skype
          type: string
        state:
          title: state
          type: string
        theme_id:
          title: theme_id
          type: string
        twitter:
          title: twitter
          type: string
        two_factor_enabled:
          title: two_factor_enabled
          type: string
        username:
          title: username
          type: string
        web_url:
          title: web_url
          type: string
        website_url:
          title: website_url
          type: string
      title: UserWithPrivateToken
      type: object
    Variable:
      description: Delete an existing variable from a project
      example:
        value: value
        key: key
      properties:
        key:
          title: key
          type: string
        value:
          title: value
          type: string
      title: Variable
      type: object
    putV3ApplicationSettings_request:
      properties:
        default_branch_protection:
          description: Determine if developers can push to master
          enum:
          - "0"
          - "1"
          - "2"
          format: int32
          title: default_branch_protection
          type: integer
        default_project_visibility:
          description: The default project visibility
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: default_project_visibility
          type: integer
        default_snippet_visibility:
          description: The default snippet visibility
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: default_snippet_visibility
          type: integer
        default_group_visibility:
          description: The default group visibility
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: default_group_visibility
          type: integer
        restricted_visibility_levels:
          description: "Selected levels cannot be used by non-admin users for projects\
            \ or snippets. If the public level is restricted, user profiles are only\
            \ visible to logged in users."
          items:
            type: string
          title: restricted_visibility_levels
          type: array
        import_sources:
          description: "Enabled sources for code import during project creation. OmniAuth\
            \ must be configured for GitHub, Bitbucket, and GitLab.com"
          enum:
          - github
          - bitbucket
          - gitlab
          - google_code
          - fogbugz
          - git
          - gitlab_project
          items:
            type: string
          title: import_sources
          type: array
        disabled_oauth_sign_in_sources:
          description: Disable certain OAuth sign-in sources
          items:
            type: string
          title: disabled_oauth_sign_in_sources
          type: array
        enabled_git_access_protocol:
          description: Allow only the selected protocols to be used for Git access.
          enum:
          - ssh
          - http
          - nil
          title: enabled_git_access_protocol
          type: string
        gravatar_enabled:
          description: Flag indicating if the Gravatar service is enabled
          title: gravatar_enabled
          type: boolean
        default_projects_limit:
          description: The maximum number of personal projects
          format: int32
          title: default_projects_limit
          type: integer
        max_attachment_size:
          description: Maximum attachment size in MB
          format: int32
          title: max_attachment_size
          type: integer
        session_expire_delay:
          description: Session duration in minutes. GitLab restart is required to
            apply changes.
          format: int32
          title: session_expire_delay
          type: integer
        user_oauth_applications:
          description: Allow users to register any application to use GitLab as an
            OAuth provider
          title: user_oauth_applications
          type: boolean
        user_default_external:
          description: Newly registered users will by default be external
          title: user_default_external
          type: boolean
        signup_enabled:
          description: Flag indicating if sign up is enabled
          title: signup_enabled
          type: boolean
        send_user_confirmation_email:
          description: Send confirmation email on sign-up
          title: send_user_confirmation_email
          type: boolean
        domain_whitelist:
          description: "ONLY users with e-mail addresses that match these domain(s)\
            \ will be able to sign-up. Wildcards allowed. Use separate lines for multiple\
            \ entries. Ex: domain.com, *.domain.com"
          title: domain_whitelist
          type: string
        domain_blacklist_enabled:
          description: Enable domain blacklist for sign ups
          title: domain_blacklist_enabled
          type: boolean
        domain_blacklist:
          description: "Users with e-mail addresses that match these domain(s) will\
            \ NOT be able to sign-up. Wildcards allowed. Use separate lines for multiple\
            \ entries. Ex: domain.com, *.domain.com"
          title: domain_blacklist
          type: string
        after_sign_up_text:
          description: Text shown after sign up
          title: after_sign_up_text
          type: string
        signin_enabled:
          description: Flag indicating if sign in is enabled
          title: signin_enabled
          type: boolean
        require_two_factor_authentication:
          description: Require all users to setup Two-factor authentication
          title: require_two_factor_authentication
          type: boolean
        two_factor_grace_period:
          description: Amount of time (in hours) that users are allowed to skip forced
            configuration of two-factor authentication
          format: int32
          title: two_factor_grace_period
          type: integer
        home_page_url:
          description: We will redirect non-logged in users to this page
          title: home_page_url
          type: string
        after_sign_out_path:
          description: We will redirect users to this page after they sign out
          title: after_sign_out_path
          type: string
        sign_in_text:
          description: The sign in text of the GitLab application
          title: sign_in_text
          type: string
        help_page_text:
          description: Custom text displayed on the help page
          title: help_page_text
          type: string
        shared_runners_enabled:
          description: Enable shared runners for new projects
          title: shared_runners_enabled
          type: boolean
        shared_runners_text:
          description: 'Shared runners text '
          title: shared_runners_text
          type: string
        max_artifacts_size:
          description: Set the maximum file size each build's artifacts can have
          format: int32
          title: max_artifacts_size
          type: integer
        container_registry_token_expire_delay:
          description: Authorization token duration (minutes)
          format: int32
          title: container_registry_token_expire_delay
          type: integer
        metrics_enabled:
          description: Enable the InfluxDB metrics
          title: metrics_enabled
          type: boolean
        metrics_host:
          description: The InfluxDB host
          title: metrics_host
          type: string
        metrics_port:
          description: The UDP port to use for connecting to InfluxDB
          format: int32
          title: metrics_port
          type: integer
        metrics_pool_size:
          description: The amount of InfluxDB connections to open
          format: int32
          title: metrics_pool_size
          type: integer
        metrics_timeout:
          description: The amount of seconds after which an InfluxDB connection will
            time out
          format: int32
          title: metrics_timeout
          type: integer
        metrics_method_call_threshold:
          description: A method call is only tracked when it takes longer to complete
            than the given amount of milliseconds.
          format: int32
          title: metrics_method_call_threshold
          type: integer
        metrics_sample_interval:
          description: The sampling interval in seconds
          format: int32
          title: metrics_sample_interval
          type: integer
        metrics_packet_size:
          description: The amount of points to store in a single UDP packet
          format: int32
          title: metrics_packet_size
          type: integer
        sidekiq_throttling_enabled:
          description: Enable Sidekiq Job Throttling
          title: sidekiq_throttling_enabled
          type: boolean
        sidekiq_throttling_queus:
          description: Choose which queues you wish to throttle
          items:
            type: string
          title: sidekiq_throttling_queus
          type: array
        sidekiq_throttling_factor:
          description: "The factor by which the queues should be throttled. A value\
            \ between 0.0 and 1.0, exclusive."
          format: float
          title: sidekiq_throttling_factor
          type: number
        recaptcha_enabled:
          description: Helps prevent bots from creating accounts
          title: recaptcha_enabled
          type: boolean
        recaptcha_site_key:
          description: Generate site key at http://www.google.com/recaptcha
          title: recaptcha_site_key
          type: string
        recaptcha_private_key:
          description: Generate private key at http://www.google.com/recaptcha
          title: recaptcha_private_key
          type: string
        akismet_enabled:
          description: Helps prevent bots from creating issues
          title: akismet_enabled
          type: boolean
        akismet_api_key:
          description: Generate API key at http://www.akismet.com
          title: akismet_api_key
          type: string
        admin_notification_email:
          description: Abuse reports will be sent to this address if it is set. Abuse
            reports are always available in the admin area.
          title: admin_notification_email
          type: string
        sentry_enabled:
          description: "Sentry is an error reporting and logging tool which is currently\
            \ not shipped with GitLab, get it here: https://getsentry.com"
          title: sentry_enabled
          type: boolean
        sentry_dsn:
          description: Sentry Data Source Name
          title: sentry_dsn
          type: string
        repository_storage:
          description: Storage paths for new projects
          title: repository_storage
          type: string
        repository_checks_enabled:
          description: GitLab will periodically run 'git fsck' in all project and
            wiki repositories to look for silent disk corruption issues.
          title: repository_checks_enabled
          type: boolean
        koding_enabled:
          description: Enable Koding
          title: koding_enabled
          type: boolean
        koding_url:
          description: The Koding team URL
          title: koding_url
          type: string
        plantuml_enabled:
          description: Enable PlantUML
          title: plantuml_enabled
          type: boolean
        plantuml_url:
          description: The PlantUML server URL
          title: plantuml_url
          type: string
        version_check_enabled:
          description: Let GitLab inform you when an update is available.
          title: version_check_enabled
          type: boolean
        email_author_in_body:
          description: "Some email servers do not support overriding the email sender\
            \ name. Enable this option to include the name of the author of the issue,\
            \ merge request or comment in the email body instead."
          title: email_author_in_body
          type: boolean
        html_emails_enabled:
          description: By default GitLab sends emails in HTML and plain text formats
            so mail clients can choose what format to use. Disable this option if
            you only want to send emails in plain text format.
          title: html_emails_enabled
          type: boolean
        housekeeping_enabled:
          description: "Enable automatic repository housekeeping (git repack, git\
            \ gc)"
          title: housekeeping_enabled
          type: boolean
        housekeeping_bitmaps_enabled:
          description: Creating pack file bitmaps makes housekeeping take a little
            longer but bitmaps should accelerate 'git clone' performance.
          title: housekeeping_bitmaps_enabled
          type: boolean
        housekeeping_incremental_repack_period:
          description: Number of Git pushes after which an incremental 'git repack'
            is run.
          format: int32
          title: housekeeping_incremental_repack_period
          type: integer
        housekeeping_full_repack_period:
          description: Number of Git pushes after which a full 'git repack' is run.
          format: int32
          title: housekeeping_full_repack_period
          type: integer
        housekeeping_gc_period:
          description: Number of Git pushes after which 'git gc' is run.
          format: int32
          title: housekeeping_gc_period
          type: integer
      required:
      - akismet_api_key
      - domain_blacklist
      - housekeeping_bitmaps_enabled
      - housekeeping_full_repack_period
      - housekeeping_gc_period
      - housekeeping_incremental_repack_period
      - koding_url
      - metrics_host
      - metrics_method_call_threshold
      - metrics_packet_size
      - metrics_pool_size
      - metrics_port
      - metrics_sample_interval
      - metrics_timeout
      - plantuml_url
      - recaptcha_private_key
      - recaptcha_site_key
      - sentry_dsn
      - shared_runners_text
      - sidekiq_throttling_factor
      - sidekiq_throttling_queus
      - two_factor_grace_period
      title: putV3ApplicationSettings_request
      type: object
    postV3CiLint_request:
      properties:
        content:
          description: Content of .gitlab-ci.yml
          title: content
          type: string
      required:
      - content
      title: postV3CiLint_request
      type: object
    getV3Groups_request:
      properties:
        skip_groups:
          description: Array of group ids to exclude from list
          items:
            format: int32
            type: integer
          type: array
      type: object
    postV3Groups_request:
      properties:
        name:
          description: The name of the group
          title: name
          type: string
        path:
          description: The path of the group
          title: path
          type: string
        description:
          description: The description of the group
          title: description
          type: string
        visibility_level:
          description: The visibility level of the group
          format: int32
          title: visibility_level
          type: integer
        lfs_enabled:
          description: Enable/disable LFS for the projects in this group
          title: lfs_enabled
          type: boolean
        request_access_enabled:
          description: Allow users to request member access
          title: request_access_enabled
          type: boolean
      required:
      - name
      - path
      title: postV3Groups_request
      type: object
    putV3GroupsId_request:
      properties:
        name:
          description: The name of the group
          title: name
          type: string
        path:
          description: The path of the group
          title: path
          type: string
        description:
          description: The description of the group
          title: description
          type: string
        visibility_level:
          description: The visibility level of the group
          format: int32
          title: visibility_level
          type: integer
        lfs_enabled:
          description: Enable/disable LFS for the projects in this group
          title: lfs_enabled
          type: boolean
        request_access_enabled:
          description: Allow users to request member access
          title: request_access_enabled
          type: boolean
      title: putV3GroupsId_request
      type: object
    putV3GroupsIdAccessRequestsUserIdApprove_request:
      properties:
        access_level:
          description: "A valid access level (defaults: `30`, developer access level)"
          format: int32
          title: access_level
          type: integer
      title: putV3GroupsIdAccessRequestsUserIdApprove_request
      type: object
    postV3GroupsIdMembers_request:
      properties:
        user_id:
          description: The user ID of the new member
          format: int32
          title: user_id
          type: integer
        access_level:
          description: "A valid access level (defaults: `30`, developer access level)"
          format: int32
          title: access_level
          type: integer
        expires_at:
          description: Date string in the format YEAR-MONTH-DAY
          format: date-time
          title: expires_at
          type: string
      required:
      - access_level
      - user_id
      title: postV3GroupsIdMembers_request
      type: object
    putV3GroupsIdMembersUserId_request:
      properties:
        access_level:
          description: A valid access level
          format: int32
          title: access_level
          type: integer
        expires_at:
          description: Date string in the format YEAR-MONTH-DAY
          format: date-time
          title: expires_at
          type: string
      required:
      - access_level
      title: putV3GroupsIdMembersUserId_request
      type: object
    putV3GroupsIdNotificationSettings_request:
      properties:
        level:
          description: The group notification level
          title: level
          type: string
        new_note:
          description: Enable/disable this notification
          title: new_note
          type: boolean
        new_issue:
          description: Enable/disable this notification
          title: new_issue
          type: boolean
        reopen_issue:
          description: Enable/disable this notification
          title: reopen_issue
          type: boolean
        close_issue:
          description: Enable/disable this notification
          title: close_issue
          type: boolean
        reassign_issue:
          description: Enable/disable this notification
          title: reassign_issue
          type: boolean
        new_merge_request:
          description: Enable/disable this notification
          title: new_merge_request
          type: boolean
        reopen_merge_request:
          description: Enable/disable this notification
          title: reopen_merge_request
          type: boolean
        close_merge_request:
          description: Enable/disable this notification
          title: close_merge_request
          type: boolean
        reassign_merge_request:
          description: Enable/disable this notification
          title: reassign_merge_request
          type: boolean
        merge_merge_request:
          description: Enable/disable this notification
          title: merge_merge_request
          type: boolean
        failed_pipeline:
          description: Enable/disable this notification
          title: failed_pipeline
          type: boolean
        success_pipeline:
          description: Enable/disable this notification
          title: success_pipeline
          type: boolean
      title: putV3GroupsIdNotificationSettings_request
      type: object
    postV3Hooks_request:
      properties:
        url:
          description: The URL to send the request to
          title: url
          type: string
        token:
          description: The token used to validate payloads
          title: token
          type: string
        push_events:
          description: Trigger hook on push events
          title: push_events
          type: boolean
        tag_push_events:
          description: Trigger hook on tag push events
          title: tag_push_events
          type: boolean
        enable_ssl_verification:
          description: Do SSL verification when triggering the hook
          title: enable_ssl_verification
          type: boolean
      required:
      - url
      title: postV3Hooks_request
      type: object
    putV3NotificationSettings_request:
      properties:
        level:
          description: The global notification level
          title: level
          type: string
        notification_email:
          description: The email address to send notifications
          title: notification_email
          type: string
        new_note:
          description: Enable/disable this notification
          title: new_note
          type: boolean
        new_issue:
          description: Enable/disable this notification
          title: new_issue
          type: boolean
        reopen_issue:
          description: Enable/disable this notification
          title: reopen_issue
          type: boolean
        close_issue:
          description: Enable/disable this notification
          title: close_issue
          type: boolean
        reassign_issue:
          description: Enable/disable this notification
          title: reassign_issue
          type: boolean
        new_merge_request:
          description: Enable/disable this notification
          title: new_merge_request
          type: boolean
        reopen_merge_request:
          description: Enable/disable this notification
          title: reopen_merge_request
          type: boolean
        close_merge_request:
          description: Enable/disable this notification
          title: close_merge_request
          type: boolean
        reassign_merge_request:
          description: Enable/disable this notification
          title: reassign_merge_request
          type: boolean
        merge_merge_request:
          description: Enable/disable this notification
          title: merge_merge_request
          type: boolean
        failed_pipeline:
          description: Enable/disable this notification
          title: failed_pipeline
          type: boolean
        success_pipeline:
          description: Enable/disable this notification
          title: success_pipeline
          type: boolean
      title: putV3NotificationSettings_request
      type: object
    postV3Projects_request:
      properties:
        name:
          description: The name of the project
          title: name
          type: string
        path:
          description: The path of the repository
          title: path
          type: string
        description:
          description: The description of the project
          title: description
          type: string
        issues_enabled:
          description: Flag indication if the issue tracker is enabled
          title: issues_enabled
          type: boolean
        merge_requests_enabled:
          description: Flag indication if merge requests are enabled
          title: merge_requests_enabled
          type: boolean
        wiki_enabled:
          description: Flag indication if the wiki is enabled
          title: wiki_enabled
          type: boolean
        builds_enabled:
          description: Flag indication if builds are enabled
          title: builds_enabled
          type: boolean
        snippets_enabled:
          description: Flag indication if snippets are enabled
          title: snippets_enabled
          type: boolean
        shared_runners_enabled:
          description: Flag indication if shared runners are enabled for that project
          title: shared_runners_enabled
          type: boolean
        container_registry_enabled:
          description: Flag indication if the container registry is enabled for that
            project
          title: container_registry_enabled
          type: boolean
        lfs_enabled:
          description: Flag indication if Git LFS is enabled for that project
          title: lfs_enabled
          type: boolean
        public:
          description: Create a public project. The same as visibility_level = 20.
          title: public
          type: boolean
        visibility_level:
          description: Create a public project. The same as visibility_level = 20.
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: visibility_level
          type: integer
        public_builds:
          description: Perform public builds
          title: public_builds
          type: boolean
        request_access_enabled:
          description: Allow users to request member access
          title: request_access_enabled
          type: boolean
        only_allow_merge_if_build_succeeds:
          description: Only allow to merge if builds succeed
          title: only_allow_merge_if_build_succeeds
          type: boolean
        only_allow_merge_if_all_discussions_are_resolved:
          description: Only allow to merge if all discussions are resolved
          title: only_allow_merge_if_all_discussions_are_resolved
          type: boolean
        namespace_id:
          description: Namespace ID for the new project. Default to the user namespace.
          format: int32
          title: namespace_id
          type: integer
        import_url:
          description: URL from which the project is imported
          title: import_url
          type: string
      required:
      - name
      title: postV3Projects_request
      type: object
    postV3ProjectsForkId_request:
      properties:
        namespace:
          description: The ID or name of the namespace that the project will be forked
            into
          title: namespace
          type: string
      title: postV3ProjectsForkId_request
      type: object
    postV3ProjectsUserUserId_request:
      properties:
        name:
          description: The name of the project
          title: name
          type: string
        default_branch:
          description: The default branch of the project
          title: default_branch
          type: string
        description:
          description: The description of the project
          title: description
          type: string
        issues_enabled:
          description: Flag indication if the issue tracker is enabled
          title: issues_enabled
          type: boolean
        merge_requests_enabled:
          description: Flag indication if merge requests are enabled
          title: merge_requests_enabled
          type: boolean
        wiki_enabled:
          description: Flag indication if the wiki is enabled
          title: wiki_enabled
          type: boolean
        builds_enabled:
          description: Flag indication if builds are enabled
          title: builds_enabled
          type: boolean
        snippets_enabled:
          description: Flag indication if snippets are enabled
          title: snippets_enabled
          type: boolean
        shared_runners_enabled:
          description: Flag indication if shared runners are enabled for that project
          title: shared_runners_enabled
          type: boolean
        container_registry_enabled:
          description: Flag indication if the container registry is enabled for that
            project
          title: container_registry_enabled
          type: boolean
        lfs_enabled:
          description: Flag indication if Git LFS is enabled for that project
          title: lfs_enabled
          type: boolean
        public:
          description: Create a public project. The same as visibility_level = 20.
          title: public
          type: boolean
        visibility_level:
          description: Create a public project. The same as visibility_level = 20.
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: visibility_level
          type: integer
        public_builds:
          description: Perform public builds
          title: public_builds
          type: boolean
        request_access_enabled:
          description: Allow users to request member access
          title: request_access_enabled
          type: boolean
        only_allow_merge_if_build_succeeds:
          description: Only allow to merge if builds succeed
          title: only_allow_merge_if_build_succeeds
          type: boolean
        only_allow_merge_if_all_discussions_are_resolved:
          description: Only allow to merge if all discussions are resolved
          title: only_allow_merge_if_all_discussions_are_resolved
          type: boolean
        namespace_id:
          description: Namespace ID for the new project. Default to the user namespace.
          format: int32
          title: namespace_id
          type: integer
        import_url:
          description: URL from which the project is imported
          title: import_url
          type: string
      required:
      - name
      title: postV3ProjectsUserUserId_request
      type: object
    putV3ProjectsId_request:
      properties:
        name:
          description: The name of the project
          title: name
          type: string
        default_branch:
          description: The default branch of the project
          title: default_branch
          type: string
        path:
          description: The path of the repository
          title: path
          type: string
        description:
          description: The description of the project
          title: description
          type: string
        issues_enabled:
          description: Flag indication if the issue tracker is enabled
          title: issues_enabled
          type: boolean
        merge_requests_enabled:
          description: Flag indication if merge requests are enabled
          title: merge_requests_enabled
          type: boolean
        wiki_enabled:
          description: Flag indication if the wiki is enabled
          title: wiki_enabled
          type: boolean
        builds_enabled:
          description: Flag indication if builds are enabled
          title: builds_enabled
          type: boolean
        snippets_enabled:
          description: Flag indication if snippets are enabled
          title: snippets_enabled
          type: boolean
        shared_runners_enabled:
          description: Flag indication if shared runners are enabled for that project
          title: shared_runners_enabled
          type: boolean
        container_registry_enabled:
          description: Flag indication if the container registry is enabled for that
            project
          title: container_registry_enabled
          type: boolean
        lfs_enabled:
          description: Flag indication if Git LFS is enabled for that project
          title: lfs_enabled
          type: boolean
        public:
          description: Create a public project. The same as visibility_level = 20.
          title: public
          type: boolean
        visibility_level:
          description: Create a public project. The same as visibility_level = 20.
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: visibility_level
          type: integer
        public_builds:
          description: Perform public builds
          title: public_builds
          type: boolean
        request_access_enabled:
          description: Allow users to request member access
          title: request_access_enabled
          type: boolean
        only_allow_merge_if_build_succeeds:
          description: Only allow to merge if builds succeed
          title: only_allow_merge_if_build_succeeds
          type: boolean
        only_allow_merge_if_all_discussions_are_resolved:
          description: Only allow to merge if all discussions are resolved
          title: only_allow_merge_if_all_discussions_are_resolved
          type: boolean
      title: putV3ProjectsId_request
      type: object
    postV3ProjectsId_refRef_triggerBuilds_request:
      properties:
        token:
          description: The unique token of trigger
          title: token
          type: string
      required:
      - token
      title: postV3ProjectsId_refRef_triggerBuilds_request
      type: object
    postV3ProjectsIdBoardsBoardIdLists_request:
      properties:
        label_id:
          description: The ID of an existing label
          format: int32
          title: label_id
          type: integer
      required:
      - label_id
      title: postV3ProjectsIdBoardsBoardIdLists_request
      type: object
    putV3ProjectsIdBoardsBoardIdListsListId_request:
      properties:
        position:
          description: The position of the list
          format: int32
          title: position
          type: integer
      required:
      - position
      title: putV3ProjectsIdBoardsBoardIdListsListId_request
      type: object
    postV3ProjectsIdDeployKeys_request:
      properties:
        key:
          description: The new deploy key
          title: key
          type: string
        title:
          description: The name of the deploy key
          title: title
          type: string
      required:
      - key
      - title
      title: postV3ProjectsIdDeployKeys_request
      type: object
    postV3ProjectsIdEnvironments_request:
      properties:
        name:
          description: The name of the environment to be created
          title: name
          type: string
        external_url:
          description: URL on which this deployment is viewable
          title: external_url
          type: string
        slug:
          title: slug
          type: string
      required:
      - name
      title: postV3ProjectsIdEnvironments_request
      type: object
    putV3ProjectsIdEnvironmentsEnvironmentId_request:
      properties:
        name:
          description: The new environment name
          title: name
          type: string
        external_url:
          description: The new URL on which this deployment is viewable
          title: external_url
          type: string
        slug:
          title: slug
          type: string
      title: putV3ProjectsIdEnvironmentsEnvironmentId_request
      type: object
    postV3ProjectsIdHooks_request:
      properties:
        url:
          description: The URL to send the request to
          title: url
          type: string
        push_events:
          description: Trigger hook on push events
          title: push_events
          type: boolean
        issues_events:
          description: Trigger hook on issues events
          title: issues_events
          type: boolean
        merge_requests_events:
          description: Trigger hook on merge request events
          title: merge_requests_events
          type: boolean
        tag_push_events:
          description: Trigger hook on tag push events
          title: tag_push_events
          type: boolean
        note_events:
          description: Trigger hook on note(comment) events
          title: note_events
          type: boolean
        build_events:
          description: Trigger hook on build events
          title: build_events
          type: boolean
        pipeline_events:
          description: Trigger hook on pipeline events
          title: pipeline_events
          type: boolean
        wiki_page_events:
          description: Trigger hook on wiki events
          title: wiki_page_events
          type: boolean
        enable_ssl_verification:
          description: Do SSL verification when triggering the hook
          title: enable_ssl_verification
          type: boolean
        token:
          description: Secret token to validate received payloads; this will not be
            returned in the response
          title: token
          type: string
      required:
      - url
      title: postV3ProjectsIdHooks_request
      type: object
    postV3ProjectsIdIssues_request:
      properties:
        title:
          description: The title of an issue
          title: title
          type: string
        created_at:
          description: Date time when the issue was created. Available only for admins
            and project owners.
          format: date-time
          title: created_at
          type: string
        merge_request_for_resolving_discussions:
          description: The IID of a merge request for which to resolve discussions
          format: int32
          title: merge_request_for_resolving_discussions
          type: integer
        description:
          description: The description of an issue
          title: description
          type: string
        assignee_id:
          description: The ID of a user to assign issue
          format: int32
          title: assignee_id
          type: integer
        milestone_id:
          description: The ID of a milestone to assign issue
          format: int32
          title: milestone_id
          type: integer
        labels:
          description: Comma-separated list of label names
          title: labels
          type: string
        due_date:
          description: Date time string in the format YEAR-MONTH-DAY
          title: due_date
          type: string
        confidential:
          description: Boolean parameter if the issue should be confidential
          title: confidential
          type: boolean
      required:
      - title
      title: postV3ProjectsIdIssues_request
      type: object
    putV3ProjectsIdIssuesIssueId_request:
      properties:
        title:
          description: The title of an issue
          title: title
          type: string
        updated_at:
          description: Date time when the issue was updated. Available only for admins
            and project owners.
          format: date-time
          title: updated_at
          type: string
        state_event:
          description: State of the issue
          enum:
          - reopen
          - close
          title: state_event
          type: string
        description:
          description: The description of an issue
          title: description
          type: string
        assignee_id:
          description: The ID of a user to assign issue
          format: int32
          title: assignee_id
          type: integer
        milestone_id:
          description: The ID of a milestone to assign issue
          format: int32
          title: milestone_id
          type: integer
        labels:
          description: Comma-separated list of label names
          title: labels
          type: string
        due_date:
          description: Date time string in the format YEAR-MONTH-DAY
          title: due_date
          type: string
        confidential:
          description: Boolean parameter if the issue should be confidential
          title: confidential
          type: boolean
        created_at:
          title: created_at
          type: string
      title: putV3ProjectsIdIssuesIssueId_request
      type: object
    postV3ProjectsIdIssuesIssueIdAddSpentTime_request:
      properties:
        duration:
          description: The duration to be parsed
          title: duration
          type: string
      required:
      - duration
      title: postV3ProjectsIdIssuesIssueIdAddSpentTime_request
      type: object
    postV3ProjectsIdIssuesIssueIdAwardEmoji_request:
      properties:
        name:
          description: The name of a award_emoji (without colons)
          title: name
          type: string
      required:
      - name
      title: postV3ProjectsIdIssuesIssueIdAwardEmoji_request
      type: object
    postV3ProjectsIdIssuesIssueIdMove_request:
      properties:
        to_project_id:
          description: The ID of the new project
          format: int32
          title: to_project_id
          type: integer
      required:
      - to_project_id
      title: postV3ProjectsIdIssuesIssueIdMove_request
      type: object
    postV3ProjectsIdIssuesNoteableIdNotes_request:
      properties:
        body:
          description: The content of a note
          title: body
          type: string
        created_at:
          description: The creation date of the note
          title: created_at
          type: string
      required:
      - body
      title: postV3ProjectsIdIssuesNoteableIdNotes_request
      type: object
    putV3ProjectsIdIssuesNoteableIdNotesNoteId_request:
      properties:
        body:
          description: The content of a note
          title: body
          type: string
      required:
      - body
      title: putV3ProjectsIdIssuesNoteableIdNotesNoteId_request
      type: object
    putV3ProjectsIdLabels_request:
      properties:
        name:
          description: The name of the label to be updated
          title: name
          type: string
        new_name:
          description: The new name of the label
          title: new_name
          type: string
        color:
          description: "The new color of the label given in 6-digit hex notation with\
            \ leading '#' sign (e.g. #FFAABB)"
          title: color
          type: string
        description:
          description: The new description of label
          title: description
          type: string
        priority:
          description: The priority of the label
          format: int32
          title: priority
          type: integer
      required:
      - name
      title: putV3ProjectsIdLabels_request
      type: object
    postV3ProjectsIdLabels_request:
      properties:
        name:
          description: The name of the label to be created
          title: name
          type: string
        color:
          description: "The color of the label given in 6-digit hex notation with\
            \ leading '#' sign (e.g. #FFAABB)"
          title: color
          type: string
        description:
          description: The description of label to be created
          title: description
          type: string
        priority:
          description: The priority of the label
          format: int32
          title: priority
          type: integer
      required:
      - color
      - name
      title: postV3ProjectsIdLabels_request
      type: object
    putV3ProjectsIdMergeRequestMergeRequestId_request:
      properties:
        title:
          description: The title of the merge request
          title: title
          type: string
        target_branch:
          description: The target branch
          title: target_branch
          type: string
        state_event:
          description: Status of the merge request
          enum:
          - close
          - reopen
          - merge
          title: state_event
          type: string
        description:
          description: The description of the merge request
          title: description
          type: string
        assignee_id:
          description: The ID of a user to assign the merge request
          format: int32
          title: assignee_id
          type: integer
        milestone_id:
          description: The ID of a milestone to assign the merge request
          format: int32
          title: milestone_id
          type: integer
        labels:
          description: Comma-separated list of label names
          title: labels
          type: string
        remove_source_branch:
          description: Remove source branch when merging
          title: remove_source_branch
          type: boolean
      title: putV3ProjectsIdMergeRequestMergeRequestId_request
      type: object
    postV3ProjectsIdMergeRequestMergeRequestIdComments_request:
      properties:
        note:
          description: The text of the comment
          title: note
          type: string
      required:
      - note
      title: postV3ProjectsIdMergeRequestMergeRequestIdComments_request
      type: object
    putV3ProjectsIdMergeRequestMergeRequestIdMerge_request:
      properties:
        merge_commit_message:
          description: Custom merge commit message
          title: merge_commit_message
          type: string
        should_remove_source_branch:
          description: "When true, the source branch will be deleted if possible"
          title: should_remove_source_branch
          type: boolean
        merge_when_build_succeeds:
          description: "When true, this merge request will be merged when the pipeline\
            \ succeeds"
          title: merge_when_build_succeeds
          type: boolean
        sha:
          description: "When present, must have the HEAD SHA of the source branch"
          title: sha
          type: string
      title: putV3ProjectsIdMergeRequestMergeRequestIdMerge_request
      type: object
    getV3ProjectsIdMergeRequests_request:
      properties:
        iid:
          description: The IID of the merge requests
          items:
            format: int32
            type: integer
          type: array
      type: object
    postV3ProjectsIdMergeRequests_request:
      properties:
        title:
          description: The title of the merge request
          title: title
          type: string
        source_branch:
          description: The source branch
          title: source_branch
          type: string
        target_branch:
          description: The target branch
          title: target_branch
          type: string
        target_project_id:
          description: The target project of the merge request defaults to the :id
            of the project
          format: int32
          title: target_project_id
          type: integer
        description:
          description: The description of the merge request
          title: description
          type: string
        assignee_id:
          description: The ID of a user to assign the merge request
          format: int32
          title: assignee_id
          type: integer
        milestone_id:
          description: The ID of a milestone to assign the merge request
          format: int32
          title: milestone_id
          type: integer
        labels:
          description: Comma-separated list of label names
          title: labels
          type: string
        remove_source_branch:
          description: Remove source branch when merging
          title: remove_source_branch
          type: boolean
      required:
      - source_branch
      - target_branch
      - title
      title: postV3ProjectsIdMergeRequests_request
      type: object
    getV3ProjectsIdMilestones_request:
      properties:
        iid:
          description: The IID of the milestone
          items:
            format: int32
            type: integer
          type: array
      type: object
    postV3ProjectsIdMilestones_request:
      properties:
        title:
          description: The title of the milestone
          title: title
          type: string
        description:
          description: The description of the milestone
          title: description
          type: string
        due_date:
          description: The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)
          title: due_date
          type: string
        start_date:
          description: The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)
          title: start_date
          type: string
      required:
      - title
      title: postV3ProjectsIdMilestones_request
      type: object
    putV3ProjectsIdMilestonesMilestoneId_request:
      properties:
        title:
          description: The title of the milestone
          title: title
          type: string
        state_event:
          description: 'The state event of the milestone '
          enum:
          - close
          - activate
          title: state_event
          type: string
        description:
          description: The description of the milestone
          title: description
          type: string
        due_date:
          description: The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)
          title: due_date
          type: string
        start_date:
          description: The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)
          title: start_date
          type: string
      title: putV3ProjectsIdMilestonesMilestoneId_request
      type: object
    putV3ProjectsIdNotificationSettings_request:
      properties:
        level:
          description: The project notification level
          title: level
          type: string
        new_note:
          description: Enable/disable this notification
          title: new_note
          type: boolean
        new_issue:
          description: Enable/disable this notification
          title: new_issue
          type: boolean
        reopen_issue:
          description: Enable/disable this notification
          title: reopen_issue
          type: boolean
        close_issue:
          description: Enable/disable this notification
          title: close_issue
          type: boolean
        reassign_issue:
          description: Enable/disable this notification
          title: reassign_issue
          type: boolean
        new_merge_request:
          description: Enable/disable this notification
          title: new_merge_request
          type: boolean
        reopen_merge_request:
          description: Enable/disable this notification
          title: reopen_merge_request
          type: boolean
        close_merge_request:
          description: Enable/disable this notification
          title: close_merge_request
          type: boolean
        reassign_merge_request:
          description: Enable/disable this notification
          title: reassign_merge_request
          type: boolean
        merge_merge_request:
          description: Enable/disable this notification
          title: merge_merge_request
          type: boolean
        failed_pipeline:
          description: Enable/disable this notification
          title: failed_pipeline
          type: boolean
        success_pipeline:
          description: Enable/disable this notification
          title: success_pipeline
          type: boolean
      title: putV3ProjectsIdNotificationSettings_request
      type: object
    postV3ProjectsIdPipeline_request:
      properties:
        ref:
          description: Reference
          title: ref
          type: string
      required:
      - ref
      title: postV3ProjectsIdPipeline_request
      type: object
    postV3ProjectsIdRepositoryBranches_request:
      properties:
        branch_name:
          description: The name of the branch
          title: branch_name
          type: string
        ref:
          description: Create branch from commit sha or existing branch
          title: ref
          type: string
      required:
      - branch_name
      - ref
      title: postV3ProjectsIdRepositoryBranches_request
      type: object
    putV3ProjectsIdRepositoryBranchesBranchProtect_request:
      properties:
        developers_can_push:
          description: Flag if developers can push to that branch
          title: developers_can_push
          type: boolean
        developers_can_merge:
          description: Flag if developers can merge to that branch
          title: developers_can_merge
          type: boolean
      title: putV3ProjectsIdRepositoryBranchesBranchProtect_request
      type: object
    postV3ProjectsIdRepositoryCommits_request:
      properties:
        branch_name:
          description: The name of branch
          title: branch_name
          type: string
        commit_message:
          description: Commit message
          title: commit_message
          type: string
        actions:
          description: Actions to perform in commit
          items:
            type: object
            x-type: object
          title: actions
          type: array
        author_email:
          description: Author email for commit
          title: author_email
          type: string
        author_name:
          description: Author name for commit
          title: author_name
          type: string
      required:
      - actions
      - branch_name
      - commit_message
      title: postV3ProjectsIdRepositoryCommits_request
      type: object
    postV3ProjectsIdRepositoryCommitsShaCherryPick_request:
      properties:
        branch:
          description: The name of the branch
          title: branch
          type: string
      required:
      - branch
      title: postV3ProjectsIdRepositoryCommitsShaCherryPick_request
      type: object
    postV3ProjectsIdRepositoryCommitsShaComments_request:
      properties:
        note:
          description: The text of the comment
          title: note
          type: string
        path:
          description: The file path
          title: path
          type: string
        line:
          description: The line number
          format: int32
          title: line
          type: integer
        line_type:
          default: new
          description: The type of the line
          enum:
          - new
          - old
          title: line_type
          type: string
      required:
      - line
      - line_type
      - note
      title: postV3ProjectsIdRepositoryCommitsShaComments_request
      type: object
    putV3ProjectsIdRepositoryFiles_request:
      properties:
        file_path:
          description: The path to new file. Ex. lib/class.rb
          title: file_path
          type: string
        branch_name:
          description: The name of branch
          title: branch_name
          type: string
        commit_message:
          description: Commit Message
          title: commit_message
          type: string
        author_email:
          description: The email of the author
          title: author_email
          type: string
        author_name:
          description: The name of the author
          title: author_name
          type: string
        content:
          description: File content
          title: content
          type: string
        encoding:
          description: File encoding
          enum:
          - base64
          title: encoding
          type: string
      required:
      - branch_name
      - commit_message
      - content
      - file_path
      title: putV3ProjectsIdRepositoryFiles_request
      type: object
    postV3ProjectsIdRepositoryTags_request:
      properties:
        tag_name:
          description: The name of the tag
          title: tag_name
          type: string
        ref:
          description: The commit sha or branch name
          title: ref
          type: string
        message:
          description: Specifying a message creates an annotated tag
          title: message
          type: string
        release_description:
          description: Specifying release notes stored in the GitLab database
          title: release_description
          type: string
      required:
      - ref
      - tag_name
      title: postV3ProjectsIdRepositoryTags_request
      type: object
    putV3ProjectsIdRepositoryTagsTagNameRelease_request:
      properties:
        description:
          description: Release notes with markdown support
          title: description
          type: string
      required:
      - description
      title: putV3ProjectsIdRepositoryTagsTagNameRelease_request
      type: object
    postV3ProjectsIdRunners_request:
      properties:
        runner_id:
          description: The ID of the runner
          format: int32
          title: runner_id
          type: integer
      required:
      - runner_id
      title: postV3ProjectsIdRunners_request
      type: object
    putV3ProjectsIdServicesAsana_request:
      properties:
        api_key:
          description: User API token
          title: api_key
          type: string
        restrict_to_branch:
          description: Comma-separated list of branches which will be automatically
            inspected. Leave blank to include all branches
          title: restrict_to_branch
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - api_key
      title: putV3ProjectsIdServicesAsana_request
      type: object
    putV3ProjectsIdServicesAssembla_request:
      properties:
        token:
          description: The authentication token
          title: token
          type: string
        subdomain:
          description: Subdomain setting
          title: subdomain
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - token
      title: putV3ProjectsIdServicesAssembla_request
      type: object
    putV3ProjectsIdServicesBamboo_request:
      properties:
        bamboo_url:
          description: Bamboo root URL like https://bamboo.example.com
          title: bamboo_url
          type: string
        build_key:
          description: Bamboo build plan key like
          title: build_key
          type: string
        username:
          description: "A user with API access, if applicable"
          title: username
          type: string
        password:
          description: Passord of the user
          title: password
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - bamboo_url
      - build_key
      - password
      - username
      title: putV3ProjectsIdServicesBamboo_request
      type: object
    putV3ProjectsIdServicesBugzilla_request:
      properties:
        new_issue_url:
          description: New issue URL
          title: new_issue_url
          type: string
        issues_url:
          description: Issues URL
          title: issues_url
          type: string
        project_url:
          description: Project URL
          title: project_url
          type: string
        description:
          description: Description
          title: description
          type: string
        title:
          description: Title
          title: title
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - issues_url
      - new_issue_url
      - project_url
      title: putV3ProjectsIdServicesBugzilla_request
      type: object
    putV3ProjectsIdServicesBuildkite_request:
      properties:
        token:
          description: Buildkite project GitLab token
          title: token
          type: string
        project_url:
          description: The buildkite project URL
          title: project_url
          type: string
        enable_ssl_verification:
          description: Enable SSL verification for communication
          title: enable_ssl_verification
          type: boolean
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - project_url
      - token
      title: putV3ProjectsIdServicesBuildkite_request
      type: object
    putV3ProjectsIdServicesBuildsEmail_request:
      properties:
        recipients:
          description: Comma-separated list of recipient email addresses
          title: recipients
          type: string
        add_pusher:
          description: Add pusher to recipients list
          title: add_pusher
          type: boolean
        notify_only_broken_builds:
          description: Notify only broken builds
          title: notify_only_broken_builds
          type: boolean
        build_events:
          description: Event will be triggered when a build status changes
          title: build_events
          type: string
      required:
      - recipients
      title: putV3ProjectsIdServicesBuildsEmail_request
      type: object
    putV3ProjectsIdServicesCampfire_request:
      properties:
        token:
          description: Campfire token
          title: token
          type: string
        subdomain:
          description: Campfire subdomain
          title: subdomain
          type: string
        room:
          description: Campfire room
          title: room
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - token
      title: putV3ProjectsIdServicesCampfire_request
      type: object
    putV3ProjectsIdServicesDroneCi_request:
      properties:
        token:
          description: Drone CI token
          title: token
          type: string
        drone_url:
          description: Drone CI URL
          title: drone_url
          type: string
        enable_ssl_verification:
          description: Enable SSL verification for communication
          title: enable_ssl_verification
          type: boolean
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
        merge_request_events:
          description: Event will be triggered when a merge request is created/updated/merged
          title: merge_request_events
          type: string
        tag_push_events:
          description: Event will be triggered when a new tag is pushed to the repository
          title: tag_push_events
          type: string
      required:
      - drone_url
      - token
      title: putV3ProjectsIdServicesDroneCi_request
      type: object
    putV3ProjectsIdServicesEmailsOnPush_request:
      properties:
        recipients:
          description: Comma-separated list of recipient email addresses
          title: recipients
          type: string
        disable_diffs:
          description: Disable code diffs
          title: disable_diffs
          type: boolean
        send_from_committer_email:
          description: Send from committer
          title: send_from_committer_email
          type: boolean
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
        tag_push_events:
          description: Event will be triggered when a new tag is pushed to the repository
          title: tag_push_events
          type: string
      required:
      - recipients
      title: putV3ProjectsIdServicesEmailsOnPush_request
      type: object
    putV3ProjectsIdServicesExternalWiki_request:
      properties:
        external_wiki_url:
          description: The URL of the external Wiki
          title: external_wiki_url
          type: string
      required:
      - external_wiki_url
      title: putV3ProjectsIdServicesExternalWiki_request
      type: object
    putV3ProjectsIdServicesFlowdock_request:
      properties:
        token:
          description: Flowdock token
          title: token
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - token
      title: putV3ProjectsIdServicesFlowdock_request
      type: object
    putV3ProjectsIdServicesGemnasium_request:
      properties:
        api_key:
          description: Your personal API key on gemnasium.com
          title: api_key
          type: string
        token:
          description: The project's slug on gemnasium.com
          title: token
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - api_key
      - token
      title: putV3ProjectsIdServicesGemnasium_request
      type: object
    putV3ProjectsIdServicesHipchat_request:
      properties:
        token:
          description: The room token
          title: token
          type: string
        room:
          description: The room name or ID
          title: room
          type: string
        color:
          description: The room color
          title: color
          type: string
        notify:
          description: Enable notifications
          title: notify
          type: boolean
        api_version:
          description: Leave blank for default (v2)
          title: api_version
          type: string
        server:
          description: Leave blank for default. https://hipchat.example.com
          title: server
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
        issue_events:
          description: Event will be triggered when an issue is created/updated/closed
          title: issue_events
          type: string
        confidential_issue_events:
          description: Event will be triggered when a confidential issue is created/updated/closed
          title: confidential_issue_events
          type: string
        merge_request_events:
          description: Event will be triggered when a merge request is created/updated/merged
          title: merge_request_events
          type: string
        note_events:
          description: Event will be triggered when someone adds a comment
          title: note_events
          type: string
        tag_push_events:
          description: Event will be triggered when a new tag is pushed to the repository
          title: tag_push_events
          type: string
        build_events:
          description: Event will be triggered when a build status changes
          title: build_events
          type: string
      required:
      - token
      title: putV3ProjectsIdServicesHipchat_request
      type: object
    putV3ProjectsIdServicesIrker_request:
      properties:
        recipients:
          description: Recipients/channels separated by whitespaces
          title: recipients
          type: string
        default_irc_uri:
          description: "Default: irc://irc.network.net:6697"
          title: default_irc_uri
          type: string
        server_host:
          description: Server host. Default localhost
          title: server_host
          type: string
        server_port:
          description: Server port. Default 6659
          format: int32
          title: server_port
          type: integer
        colorize_messages:
          description: Colorize messages
          title: colorize_messages
          type: boolean
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - recipients
      title: putV3ProjectsIdServicesIrker_request
      type: object
    putV3ProjectsIdServicesJira_request:
      properties:
        url:
          description: "The URL to the JIRA project which is being linked to this\
            \ GitLab project, e.g., https://jira.example.com"
          title: url
          type: string
        project_key:
          description: "The short identifier for your JIRA project, all uppercase,\
            \ e.g., PROJ"
          title: project_key
          type: string
        username:
          description: The username of the user created to be used with GitLab/JIRA
          title: username
          type: string
        password:
          description: The password of the user created to be used with GitLab/JIRA
          title: password
          type: string
        jira_issue_transition_id:
          description: "The ID of a transition that moves issues to a closed state.\
            \ You can find this number under the JIRA workflow administration (**Administration\
            \ > Issues > Workflows**) by selecting **View** under **Operations** of\
            \ the desired workflow of your project. The ID of each state can be found\
            \ inside the parenthesis of each transition name under the **Transitions\
            \ (id)** column ([see screenshot][trans]). By default, this ID is set\
            \ to `2`"
          format: int32
          title: jira_issue_transition_id
          type: integer
        commit_events:
          description: Event will be triggered when a commit is created/updated
          title: commit_events
          type: string
        merge_request_events:
          description: Event will be triggered when a merge request is created/updated/merged
          title: merge_request_events
          type: string
      required:
      - project_key
      - url
      title: putV3ProjectsIdServicesJira_request
      type: object
    putV3ProjectsIdServicesKubernetes_request:
      properties:
        namespace:
          description: The Kubernetes namespace to use
          title: namespace
          type: string
        api_url:
          description: "The URL to the Kubernetes cluster API, e.g., https://kubernetes.example.com"
          title: api_url
          type: string
        token:
          description: The service token to authenticate against the Kubernetes cluster
            with
          title: token
          type: string
        ca_pem:
          description: A custom certificate authority bundle to verify the Kubernetes
            cluster with (PEM format)
          title: ca_pem
          type: string
      required:
      - api_url
      - namespace
      - token
      title: putV3ProjectsIdServicesKubernetes_request
      type: object
    putV3ProjectsIdServicesMattermost_request:
      properties:
        webhook:
          description: The Mattermost webhook. e.g. http://mattermost_host/hooks/...
          title: webhook
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
        issue_events:
          description: Event will be triggered when an issue is created/updated/closed
          title: issue_events
          type: string
        confidential_issue_events:
          description: Event will be triggered when a confidential issue is created/updated/closed
          title: confidential_issue_events
          type: string
        merge_request_events:
          description: Event will be triggered when a merge request is created/updated/merged
          title: merge_request_events
          type: string
        note_events:
          description: Event will be triggered when someone adds a comment
          title: note_events
          type: string
        tag_push_events:
          description: Event will be triggered when a new tag is pushed to the repository
          title: tag_push_events
          type: string
        build_events:
          description: Event will be triggered when a build status changes
          title: build_events
          type: string
        pipeline_events:
          title: pipeline_events
          type: string
        wiki_page_events:
          description: Event will be triggered when a wiki page is created/updated
          title: wiki_page_events
          type: string
      required:
      - webhook
      title: putV3ProjectsIdServicesMattermost_request
      type: object
    putV3ProjectsIdServicesMattermostSlashCommands_request:
      properties:
        token:
          description: The Mattermost token
          title: token
          type: string
      required:
      - token
      title: putV3ProjectsIdServicesMattermostSlashCommands_request
      type: object
    putV3ProjectsIdServicesPipelinesEmail_request:
      properties:
        recipients:
          description: Comma-separated list of recipient email addresses
          title: recipients
          type: string
        notify_only_broken_builds:
          description: Notify only broken builds
          title: notify_only_broken_builds
          type: boolean
        pipeline_events:
          title: pipeline_events
          type: string
      required:
      - recipients
      title: putV3ProjectsIdServicesPipelinesEmail_request
      type: object
    putV3ProjectsIdServicesPivotaltracker_request:
      properties:
        token:
          description: The Pivotaltracker token
          title: token
          type: string
        restrict_to_branch:
          description: Comma-separated list of branches which will be automatically
            inspected. Leave blank to include all branches.
          title: restrict_to_branch
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - token
      title: putV3ProjectsIdServicesPivotaltracker_request
      type: object
    putV3ProjectsIdServicesPushover_request:
      properties:
        api_key:
          description: The application key
          title: api_key
          type: string
        user_key:
          description: The user key
          title: user_key
          type: string
        priority:
          description: The priority
          title: priority
          type: string
        device:
          description: Leave blank for all active devices
          title: device
          type: string
        sound:
          description: The sound of the notification
          title: sound
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - api_key
      - device
      - priority
      - sound
      - user_key
      title: putV3ProjectsIdServicesPushover_request
      type: object
    putV3ProjectsIdServicesRedmine_request:
      properties:
        new_issue_url:
          description: The new issue URL
          title: new_issue_url
          type: string
        project_url:
          description: The project URL
          title: project_url
          type: string
        issues_url:
          description: The issues URL
          title: issues_url
          type: string
        description:
          description: The description of the tracker
          title: description
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - issues_url
      - new_issue_url
      - project_url
      title: putV3ProjectsIdServicesRedmine_request
      type: object
    putV3ProjectsIdServicesSlack_request:
      properties:
        webhook:
          description: The Slack webhook. e.g. https://hooks.slack.com/services/...
          title: webhook
          type: string
        new_issue_url:
          description: The user name
          title: new_issue_url
          type: string
        channel:
          description: The channel name
          title: channel
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
        issue_events:
          description: Event will be triggered when an issue is created/updated/closed
          title: issue_events
          type: string
        confidential_issue_events:
          description: Event will be triggered when a confidential issue is created/updated/closed
          title: confidential_issue_events
          type: string
        merge_request_events:
          description: Event will be triggered when a merge request is created/updated/merged
          title: merge_request_events
          type: string
        note_events:
          description: Event will be triggered when someone adds a comment
          title: note_events
          type: string
        tag_push_events:
          description: Event will be triggered when a new tag is pushed to the repository
          title: tag_push_events
          type: string
        build_events:
          description: Event will be triggered when a build status changes
          title: build_events
          type: string
        pipeline_events:
          title: pipeline_events
          type: string
        wiki_page_events:
          description: Event will be triggered when a wiki page is created/updated
          title: wiki_page_events
          type: string
      required:
      - webhook
      title: putV3ProjectsIdServicesSlack_request
      type: object
    putV3ProjectsIdServicesSlackSlashCommands_request:
      properties:
        token:
          description: The Slack token
          title: token
          type: string
      required:
      - token
      title: putV3ProjectsIdServicesSlackSlashCommands_request
      type: object
    putV3ProjectsIdServicesTeamcity_request:
      properties:
        teamcity_url:
          description: TeamCity root URL like https://teamcity.example.com
          title: teamcity_url
          type: string
        build_type:
          description: Build configuration ID
          title: build_type
          type: string
        username:
          description: A user with permissions to trigger a manual build
          title: username
          type: string
        password:
          description: The password of the user
          title: password
          type: string
        push_events:
          description: Event will be triggered by a push to the repository
          title: push_events
          type: string
      required:
      - build_type
      - password
      - teamcity_url
      - username
      title: putV3ProjectsIdServicesTeamcity_request
      type: object
    postV3ProjectsIdShare_request:
      properties:
        group_id:
          description: The ID of a group
          format: int32
          title: group_id
          type: integer
        group_access:
          description: The group access level
          enum:
          - "10"
          - "20"
          - "30"
          - "40"
          format: int32
          title: group_access
          type: integer
        expires_at:
          description: Share expiration date
          format: date
          title: expires_at
          type: string
      required:
      - group_access
      - group_id
      title: postV3ProjectsIdShare_request
      type: object
    postV3ProjectsIdSnippets_request:
      properties:
        title:
          description: The title of the snippet
          title: title
          type: string
        file_name:
          description: The file name of the snippet
          title: file_name
          type: string
        code:
          description: The content of the snippet
          title: code
          type: string
        visibility_level:
          description: The visibility level of the snippet
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: visibility_level
          type: integer
      required:
      - code
      - file_name
      - title
      - visibility_level
      title: postV3ProjectsIdSnippets_request
      type: object
    putV3ProjectsIdSnippetsSnippetId_request:
      properties:
        title:
          description: The title of the snippet
          title: title
          type: string
        file_name:
          description: The file name of the snippet
          title: file_name
          type: string
        code:
          description: The content of the snippet
          title: code
          type: string
        visibility_level:
          description: The visibility level of the snippet
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: visibility_level
          type: integer
      title: putV3ProjectsIdSnippetsSnippetId_request
      type: object
    postV3ProjectsIdStatusesSha_request:
      properties:
        state:
          description: The state of the status
          enum:
          - pending
          - running
          - success
          - failed
          - canceled
          title: state
          type: string
        ref:
          description: The ref
          title: ref
          type: string
        target_url:
          description: The target URL to associate with this status
          title: target_url
          type: string
        description:
          description: A short description of the status
          title: description
          type: string
        name:
          description: "A string label to differentiate this status from the status\
            \ of other systems. Default: \"default\""
          title: name
          type: string
        context:
          description: "A string label to differentiate this status from the status\
            \ of other systems. Default: \"default\""
          title: context
          type: string
      required:
      - state
      title: postV3ProjectsIdStatusesSha_request
      type: object
    postV3ProjectsIdUploads_request:
      properties:
        file:
          description: The file to be uploaded
          format: binary
          title: file
          type: string
      required:
      - file
      title: postV3ProjectsIdUploads_request
      type: object
    postV3ProjectsIdVariables_request:
      properties:
        key:
          description: The key of the variable
          title: key
          type: string
        value:
          description: The value of the variable
          title: value
          type: string
      required:
      - key
      - value
      title: postV3ProjectsIdVariables_request
      type: object
    putV3ProjectsIdVariablesKey_request:
      properties:
        value:
          description: The value of the variable
          title: value
          type: string
      title: putV3ProjectsIdVariablesKey_request
      type: object
    putV3RunnersId_request:
      properties:
        description:
          description: The description of the runner
          title: description
          type: string
        active:
          description: The state of a runner
          title: active
          type: boolean
        tag_list:
          description: The list of tags for a runner
          items:
            type: string
          title: tag_list
          type: array
        run_untagged:
          description: Flag indicating the runner can execute untagged jobs
          title: run_untagged
          type: boolean
        locked:
          description: Flag indicating the runner is locked
          title: locked
          type: boolean
      title: putV3RunnersId_request
      type: object
    postV3Session_request:
      properties:
        login:
          description: The username
          title: login
          type: string
        email:
          description: The email of the user
          title: email
          type: string
        password:
          description: The password of the user
          title: password
          type: string
      required:
      - password
      title: postV3Session_request
      type: object
    postV3Snippets_request:
      properties:
        title:
          description: The title of a snippet
          title: title
          type: string
        file_name:
          description: The name of a snippet file
          title: file_name
          type: string
        content:
          description: The content of a snippet
          title: content
          type: string
        visibility_level:
          default: 10
          description: The visibility level of the snippet
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: visibility_level
          type: integer
      required:
      - content
      - file_name
      - title
      title: postV3Snippets_request
      type: object
    putV3SnippetsId_request:
      properties:
        title:
          description: The title of a snippet
          title: title
          type: string
        file_name:
          description: The name of a snippet file
          title: file_name
          type: string
        content:
          description: The content of a snippet
          title: content
          type: string
        visibility_level:
          description: The visibility level of the snippet
          enum:
          - "0"
          - "10"
          - "20"
          format: int32
          title: visibility_level
          type: integer
      title: putV3SnippetsId_request
      type: object
    postV3UserEmails_request:
      properties:
        email:
          description: The new email
          title: email
          type: string
      required:
      - email
      title: postV3UserEmails_request
      type: object
    postV3UserKeys_request:
      properties:
        key:
          description: The new SSH key
          title: key
          type: string
        title:
          description: The title of the new SSH key
          title: title
          type: string
      required:
      - key
      - title
      title: postV3UserKeys_request
      type: object
    postV3Users_request:
      properties:
        email:
          description: The email of the user
          title: email
          type: string
        password:
          description: The password of the new user
          title: password
          type: string
        name:
          description: The name of the user
          title: name
          type: string
        username:
          description: The username of the user
          title: username
          type: string
        skype:
          description: The Skype username
          title: skype
          type: string
        linkedin:
          description: The LinkedIn username
          title: linkedin
          type: string
        twitter:
          description: The Twitter username
          title: twitter
          type: string
        website_url:
          description: The website of the user
          title: website_url
          type: string
        organization:
          description: The organization of the user
          title: organization
          type: string
        projects_limit:
          description: The number of projects a user can create
          format: int32
          title: projects_limit
          type: integer
        extern_uid:
          description: The external authentication provider UID
          title: extern_uid
          type: string
        provider:
          description: The external provider
          title: provider
          type: string
        bio:
          description: The biography of the user
          title: bio
          type: string
        location:
          description: The location of the user
          title: location
          type: string
        admin:
          description: Flag indicating the user is an administrator
          title: admin
          type: boolean
        can_create_group:
          description: Flag indicating the user can create groups
          title: can_create_group
          type: boolean
        confirm:
          description: Flag indicating the account needs to be confirmed
          title: confirm
          type: boolean
        external:
          description: Flag indicating the user is an external user
          title: external
          type: boolean
      required:
      - email
      - name
      - password
      - username
      title: postV3Users_request
      type: object
    putV3UsersId_request:
      properties:
        email:
          description: The email of the user
          title: email
          type: string
        password:
          description: The password of the new user
          title: password
          type: string
        name:
          description: The name of the user
          title: name
          type: string
        username:
          description: The username of the user
          title: username
          type: string
        skype:
          description: The Skype username
          title: skype
          type: string
        linkedin:
          description: The LinkedIn username
          title: linkedin
          type: string
        twitter:
          description: The Twitter username
          title: twitter
          type: string
        website_url:
          description: The website of the user
          title: website_url
          type: string
        organization:
          description: The organization of the user
          title: organization
          type: string
        projects_limit:
          description: The number of projects a user can create
          format: int32
          title: projects_limit
          type: integer
        extern_uid:
          description: The external authentication provider UID
          title: extern_uid
          type: string
        provider:
          description: The external provider
          title: provider
          type: string
        bio:
          description: The biography of the user
          title: bio
          type: string
        location:
          description: The location of the user
          title: location
          type: string
        admin:
          description: Flag indicating the user is an administrator
          title: admin
          type: boolean
        can_create_group:
          description: Flag indicating the user can create groups
          title: can_create_group
          type: boolean
        confirm:
          description: Flag indicating the account needs to be confirmed
          title: confirm
          type: boolean
        external:
          description: Flag indicating the user is an external user
          title: external
          type: boolean
      title: putV3UsersId_request
      type: object
    postV3UsersIdEmails_request:
      properties:
        email:
          description: The email of the user
          title: email
          type: string
      required:
      - email
      title: postV3UsersIdEmails_request
      type: object
  securitySchemes:
    private_token_header:
      in: header
      name: PRIVATE_HEADER
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_private_token_header
    private_token_query:
      in: query
      name: private_token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_private_token_query
x-original-swagger-version: "2.0"
