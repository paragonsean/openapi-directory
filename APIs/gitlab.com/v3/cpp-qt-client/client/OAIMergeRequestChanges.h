/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMergeRequestChanges.h
 *
 * Show the merge request changes
 */

#ifndef OAIMergeRequestChanges_H
#define OAIMergeRequestChanges_H

#include <QJsonObject>

#include "OAIMilestone.h"
#include "OAIRepoDiff.h"
#include "OAIUserBasic.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserBasic;
class OAIRepoDiff;
class OAIMilestone;

class OAIMergeRequestChanges : public OAIObject {
public:
    OAIMergeRequestChanges();
    OAIMergeRequestChanges(QString json);
    ~OAIMergeRequestChanges() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserBasic getAssignee() const;
    void setAssignee(const OAIUserBasic &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    OAIUserBasic getAuthor() const;
    void setAuthor(const OAIUserBasic &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    OAIRepoDiff getChanges() const;
    void setChanges(const OAIRepoDiff &changes);
    bool is_changes_Set() const;
    bool is_changes_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDownvotes() const;
    void setDownvotes(const QString &downvotes);
    bool is_downvotes_Set() const;
    bool is_downvotes_Valid() const;

    QString getForceRemoveSourceBranch() const;
    void setForceRemoveSourceBranch(const QString &force_remove_source_branch);
    bool is_force_remove_source_branch_Set() const;
    bool is_force_remove_source_branch_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIid() const;
    void setIid(const QString &iid);
    bool is_iid_Set() const;
    bool is_iid_Valid() const;

    QString getLabels() const;
    void setLabels(const QString &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getMergeCommitSha() const;
    void setMergeCommitSha(const QString &merge_commit_sha);
    bool is_merge_commit_sha_Set() const;
    bool is_merge_commit_sha_Valid() const;

    QString getMergeStatus() const;
    void setMergeStatus(const QString &merge_status);
    bool is_merge_status_Set() const;
    bool is_merge_status_Valid() const;

    QString getMergeWhenBuildSucceeds() const;
    void setMergeWhenBuildSucceeds(const QString &merge_when_build_succeeds);
    bool is_merge_when_build_succeeds_Set() const;
    bool is_merge_when_build_succeeds_Valid() const;

    OAIMilestone getMilestone() const;
    void setMilestone(const OAIMilestone &milestone);
    bool is_milestone_Set() const;
    bool is_milestone_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    QString getShouldRemoveSourceBranch() const;
    void setShouldRemoveSourceBranch(const QString &should_remove_source_branch);
    bool is_should_remove_source_branch_Set() const;
    bool is_should_remove_source_branch_Valid() const;

    QString getSourceBranch() const;
    void setSourceBranch(const QString &source_branch);
    bool is_source_branch_Set() const;
    bool is_source_branch_Valid() const;

    QString getSourceProjectId() const;
    void setSourceProjectId(const QString &source_project_id);
    bool is_source_project_id_Set() const;
    bool is_source_project_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getSubscribed() const;
    void setSubscribed(const QString &subscribed);
    bool is_subscribed_Set() const;
    bool is_subscribed_Valid() const;

    QString getTargetBranch() const;
    void setTargetBranch(const QString &target_branch);
    bool is_target_branch_Set() const;
    bool is_target_branch_Valid() const;

    QString getTargetProjectId() const;
    void setTargetProjectId(const QString &target_project_id);
    bool is_target_project_id_Set() const;
    bool is_target_project_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUpvotes() const;
    void setUpvotes(const QString &upvotes);
    bool is_upvotes_Set() const;
    bool is_upvotes_Valid() const;

    QString getUserNotesCount() const;
    void setUserNotesCount(const QString &user_notes_count);
    bool is_user_notes_count_Set() const;
    bool is_user_notes_count_Valid() const;

    QString getWebUrl() const;
    void setWebUrl(const QString &web_url);
    bool is_web_url_Set() const;
    bool is_web_url_Valid() const;

    QString getWorkInProgress() const;
    void setWorkInProgress(const QString &work_in_progress);
    bool is_work_in_progress_Set() const;
    bool is_work_in_progress_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserBasic m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;

    OAIUserBasic m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    OAIRepoDiff m_changes;
    bool m_changes_isSet;
    bool m_changes_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_downvotes;
    bool m_downvotes_isSet;
    bool m_downvotes_isValid;

    QString m_force_remove_source_branch;
    bool m_force_remove_source_branch_isSet;
    bool m_force_remove_source_branch_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_iid;
    bool m_iid_isSet;
    bool m_iid_isValid;

    QString m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_merge_commit_sha;
    bool m_merge_commit_sha_isSet;
    bool m_merge_commit_sha_isValid;

    QString m_merge_status;
    bool m_merge_status_isSet;
    bool m_merge_status_isValid;

    QString m_merge_when_build_succeeds;
    bool m_merge_when_build_succeeds_isSet;
    bool m_merge_when_build_succeeds_isValid;

    OAIMilestone m_milestone;
    bool m_milestone_isSet;
    bool m_milestone_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;

    QString m_should_remove_source_branch;
    bool m_should_remove_source_branch_isSet;
    bool m_should_remove_source_branch_isValid;

    QString m_source_branch;
    bool m_source_branch_isSet;
    bool m_source_branch_isValid;

    QString m_source_project_id;
    bool m_source_project_id_isSet;
    bool m_source_project_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_subscribed;
    bool m_subscribed_isSet;
    bool m_subscribed_isValid;

    QString m_target_branch;
    bool m_target_branch_isSet;
    bool m_target_branch_isValid;

    QString m_target_project_id;
    bool m_target_project_id_isSet;
    bool m_target_project_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_upvotes;
    bool m_upvotes_isSet;
    bool m_upvotes_isValid;

    QString m_user_notes_count;
    bool m_user_notes_count_isSet;
    bool m_user_notes_count_isValid;

    QString m_web_url;
    bool m_web_url_isSet;
    bool m_web_url_isValid;

    QString m_work_in_progress;
    bool m_work_in_progress_isSet;
    bool m_work_in_progress_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMergeRequestChanges)

#endif // OAIMergeRequestChanges_H
