/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserPublic.h
 *
 * Get the currently authenticated user
 */

#ifndef OAIUserPublic_H
#define OAIUserPublic_H

#include <QJsonObject>

#include "OAIIdentity.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIdentity;

class OAIUserPublic : public OAIObject {
public:
    OAIUserPublic();
    OAIUserPublic(QString json);
    ~OAIUserPublic() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatarUrl() const;
    void setAvatarUrl(const QString &avatar_url);
    bool is_avatar_url_Set() const;
    bool is_avatar_url_Valid() const;

    QString getBio() const;
    void setBio(const QString &bio);
    bool is_bio_Set() const;
    bool is_bio_Valid() const;

    QString getCanCreateGroup() const;
    void setCanCreateGroup(const QString &can_create_group);
    bool is_can_create_group_Set() const;
    bool is_can_create_group_Valid() const;

    QString getCanCreateProject() const;
    void setCanCreateProject(const QString &can_create_project);
    bool is_can_create_project_Set() const;
    bool is_can_create_project_Valid() const;

    QString getColorSchemeId() const;
    void setColorSchemeId(const QString &color_scheme_id);
    bool is_color_scheme_id_Set() const;
    bool is_color_scheme_id_Valid() const;

    QString getConfirmedAt() const;
    void setConfirmedAt(const QString &confirmed_at);
    bool is_confirmed_at_Set() const;
    bool is_confirmed_at_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCurrentSignInAt() const;
    void setCurrentSignInAt(const QString &current_sign_in_at);
    bool is_current_sign_in_at_Set() const;
    bool is_current_sign_in_at_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getExternal() const;
    void setExternal(const QString &external);
    bool is_external_Set() const;
    bool is_external_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIIdentity getIdentities() const;
    void setIdentities(const OAIIdentity &identities);
    bool is_identities_Set() const;
    bool is_identities_Valid() const;

    QString getIsAdmin() const;
    void setIsAdmin(const QString &is_admin);
    bool is_is_admin_Set() const;
    bool is_is_admin_Valid() const;

    QString getLastSignInAt() const;
    void setLastSignInAt(const QString &last_sign_in_at);
    bool is_last_sign_in_at_Set() const;
    bool is_last_sign_in_at_Valid() const;

    QString getLinkedin() const;
    void setLinkedin(const QString &linkedin);
    bool is_linkedin_Set() const;
    bool is_linkedin_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrganization() const;
    void setOrganization(const QString &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    QString getProjectsLimit() const;
    void setProjectsLimit(const QString &projects_limit);
    bool is_projects_limit_Set() const;
    bool is_projects_limit_Valid() const;

    QString getSkype() const;
    void setSkype(const QString &skype);
    bool is_skype_Set() const;
    bool is_skype_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getThemeId() const;
    void setThemeId(const QString &theme_id);
    bool is_theme_id_Set() const;
    bool is_theme_id_Valid() const;

    QString getTwitter() const;
    void setTwitter(const QString &twitter);
    bool is_twitter_Set() const;
    bool is_twitter_Valid() const;

    QString getTwoFactorEnabled() const;
    void setTwoFactorEnabled(const QString &two_factor_enabled);
    bool is_two_factor_enabled_Set() const;
    bool is_two_factor_enabled_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getWebUrl() const;
    void setWebUrl(const QString &web_url);
    bool is_web_url_Set() const;
    bool is_web_url_Valid() const;

    QString getWebsiteUrl() const;
    void setWebsiteUrl(const QString &website_url);
    bool is_website_url_Set() const;
    bool is_website_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar_url;
    bool m_avatar_url_isSet;
    bool m_avatar_url_isValid;

    QString m_bio;
    bool m_bio_isSet;
    bool m_bio_isValid;

    QString m_can_create_group;
    bool m_can_create_group_isSet;
    bool m_can_create_group_isValid;

    QString m_can_create_project;
    bool m_can_create_project_isSet;
    bool m_can_create_project_isValid;

    QString m_color_scheme_id;
    bool m_color_scheme_id_isSet;
    bool m_color_scheme_id_isValid;

    QString m_confirmed_at;
    bool m_confirmed_at_isSet;
    bool m_confirmed_at_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_current_sign_in_at;
    bool m_current_sign_in_at_isSet;
    bool m_current_sign_in_at_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_external;
    bool m_external_isSet;
    bool m_external_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIIdentity m_identities;
    bool m_identities_isSet;
    bool m_identities_isValid;

    QString m_is_admin;
    bool m_is_admin_isSet;
    bool m_is_admin_isValid;

    QString m_last_sign_in_at;
    bool m_last_sign_in_at_isSet;
    bool m_last_sign_in_at_isValid;

    QString m_linkedin;
    bool m_linkedin_isSet;
    bool m_linkedin_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    QString m_projects_limit;
    bool m_projects_limit_isSet;
    bool m_projects_limit_isValid;

    QString m_skype;
    bool m_skype_isSet;
    bool m_skype_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_theme_id;
    bool m_theme_id_isSet;
    bool m_theme_id_isValid;

    QString m_twitter;
    bool m_twitter_isSet;
    bool m_twitter_isValid;

    QString m_two_factor_enabled;
    bool m_two_factor_enabled_isSet;
    bool m_two_factor_enabled_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_web_url;
    bool m_web_url_isSet;
    bool m_web_url_isValid;

    QString m_website_url;
    bool m_website_url_isSet;
    bool m_website_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserPublic)

#endif // OAIUserPublic_H
