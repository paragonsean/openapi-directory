/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRepoLicense.h
 *
 * This feature was introduced in GitLab 8.7.
 */

#ifndef OAIRepoLicense_H
#define OAIRepoLicense_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRepoLicense : public OAIObject {
public:
    OAIRepoLicense();
    OAIRepoLicense(QString json);
    ~OAIRepoLicense() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConditions() const;
    void setConditions(const QString &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getHtmlUrl() const;
    void setHtmlUrl(const QString &html_url);
    bool is_html_url_Set() const;
    bool is_html_url_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getLimitations() const;
    void setLimitations(const QString &limitations);
    bool is_limitations_Set() const;
    bool is_limitations_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNickname() const;
    void setNickname(const QString &nickname);
    bool is_nickname_Set() const;
    bool is_nickname_Valid() const;

    QString getPermissions() const;
    void setPermissions(const QString &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QString getPopular() const;
    void setPopular(const QString &popular);
    bool is_popular_Set() const;
    bool is_popular_Valid() const;

    QString getSourceUrl() const;
    void setSourceUrl(const QString &source_url);
    bool is_source_url_Set() const;
    bool is_source_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_html_url;
    bool m_html_url_isSet;
    bool m_html_url_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_limitations;
    bool m_limitations_isSet;
    bool m_limitations_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_nickname;
    bool m_nickname_isSet;
    bool m_nickname_isValid;

    QString m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QString m_popular;
    bool m_popular_isSet;
    bool m_popular_isValid;

    QString m_source_url;
    bool m_source_url_isSet;
    bool m_source_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRepoLicense)

#endif // OAIRepoLicense_H
