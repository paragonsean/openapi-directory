/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroupDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroupDetail::OAIGroupDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroupDetail::OAIGroupDetail() {
    this->initializeModel();
}

OAIGroupDetail::~OAIGroupDetail() {}

void OAIGroupDetail::initializeModel() {

    m_avatar_url_isSet = false;
    m_avatar_url_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_lfs_enabled_isSet = false;
    m_lfs_enabled_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_projects_isSet = false;
    m_projects_isValid = false;

    m_request_access_enabled_isSet = false;
    m_request_access_enabled_isValid = false;

    m_shared_projects_isSet = false;
    m_shared_projects_isValid = false;

    m_statistics_isSet = false;
    m_statistics_isValid = false;

    m_visibility_level_isSet = false;
    m_visibility_level_isValid = false;

    m_web_url_isSet = false;
    m_web_url_isValid = false;
}

void OAIGroupDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroupDetail::fromJsonObject(QJsonObject json) {

    m_avatar_url_isValid = ::OpenAPI::fromJsonValue(m_avatar_url, json[QString("avatar_url")]);
    m_avatar_url_isSet = !json[QString("avatar_url")].isNull() && m_avatar_url_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_lfs_enabled_isValid = ::OpenAPI::fromJsonValue(m_lfs_enabled, json[QString("lfs_enabled")]);
    m_lfs_enabled_isSet = !json[QString("lfs_enabled")].isNull() && m_lfs_enabled_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_projects_isValid = ::OpenAPI::fromJsonValue(m_projects, json[QString("projects")]);
    m_projects_isSet = !json[QString("projects")].isNull() && m_projects_isValid;

    m_request_access_enabled_isValid = ::OpenAPI::fromJsonValue(m_request_access_enabled, json[QString("request_access_enabled")]);
    m_request_access_enabled_isSet = !json[QString("request_access_enabled")].isNull() && m_request_access_enabled_isValid;

    m_shared_projects_isValid = ::OpenAPI::fromJsonValue(m_shared_projects, json[QString("shared_projects")]);
    m_shared_projects_isSet = !json[QString("shared_projects")].isNull() && m_shared_projects_isValid;

    m_statistics_isValid = ::OpenAPI::fromJsonValue(m_statistics, json[QString("statistics")]);
    m_statistics_isSet = !json[QString("statistics")].isNull() && m_statistics_isValid;

    m_visibility_level_isValid = ::OpenAPI::fromJsonValue(m_visibility_level, json[QString("visibility_level")]);
    m_visibility_level_isSet = !json[QString("visibility_level")].isNull() && m_visibility_level_isValid;

    m_web_url_isValid = ::OpenAPI::fromJsonValue(m_web_url, json[QString("web_url")]);
    m_web_url_isSet = !json[QString("web_url")].isNull() && m_web_url_isValid;
}

QString OAIGroupDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroupDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_avatar_url_isSet) {
        obj.insert(QString("avatar_url"), ::OpenAPI::toJsonValue(m_avatar_url));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_lfs_enabled_isSet) {
        obj.insert(QString("lfs_enabled"), ::OpenAPI::toJsonValue(m_lfs_enabled));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_projects.isSet()) {
        obj.insert(QString("projects"), ::OpenAPI::toJsonValue(m_projects));
    }
    if (m_request_access_enabled_isSet) {
        obj.insert(QString("request_access_enabled"), ::OpenAPI::toJsonValue(m_request_access_enabled));
    }
    if (m_shared_projects.isSet()) {
        obj.insert(QString("shared_projects"), ::OpenAPI::toJsonValue(m_shared_projects));
    }
    if (m_statistics_isSet) {
        obj.insert(QString("statistics"), ::OpenAPI::toJsonValue(m_statistics));
    }
    if (m_visibility_level_isSet) {
        obj.insert(QString("visibility_level"), ::OpenAPI::toJsonValue(m_visibility_level));
    }
    if (m_web_url_isSet) {
        obj.insert(QString("web_url"), ::OpenAPI::toJsonValue(m_web_url));
    }
    return obj;
}

QString OAIGroupDetail::getAvatarUrl() const {
    return m_avatar_url;
}
void OAIGroupDetail::setAvatarUrl(const QString &avatar_url) {
    m_avatar_url = avatar_url;
    m_avatar_url_isSet = true;
}

bool OAIGroupDetail::is_avatar_url_Set() const{
    return m_avatar_url_isSet;
}

bool OAIGroupDetail::is_avatar_url_Valid() const{
    return m_avatar_url_isValid;
}

QString OAIGroupDetail::getDescription() const {
    return m_description;
}
void OAIGroupDetail::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGroupDetail::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGroupDetail::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGroupDetail::getId() const {
    return m_id;
}
void OAIGroupDetail::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGroupDetail::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGroupDetail::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGroupDetail::getLfsEnabled() const {
    return m_lfs_enabled;
}
void OAIGroupDetail::setLfsEnabled(const QString &lfs_enabled) {
    m_lfs_enabled = lfs_enabled;
    m_lfs_enabled_isSet = true;
}

bool OAIGroupDetail::is_lfs_enabled_Set() const{
    return m_lfs_enabled_isSet;
}

bool OAIGroupDetail::is_lfs_enabled_Valid() const{
    return m_lfs_enabled_isValid;
}

QString OAIGroupDetail::getName() const {
    return m_name;
}
void OAIGroupDetail::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGroupDetail::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGroupDetail::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGroupDetail::getPath() const {
    return m_path;
}
void OAIGroupDetail::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIGroupDetail::is_path_Set() const{
    return m_path_isSet;
}

bool OAIGroupDetail::is_path_Valid() const{
    return m_path_isValid;
}

OAIProject OAIGroupDetail::getProjects() const {
    return m_projects;
}
void OAIGroupDetail::setProjects(const OAIProject &projects) {
    m_projects = projects;
    m_projects_isSet = true;
}

bool OAIGroupDetail::is_projects_Set() const{
    return m_projects_isSet;
}

bool OAIGroupDetail::is_projects_Valid() const{
    return m_projects_isValid;
}

QString OAIGroupDetail::getRequestAccessEnabled() const {
    return m_request_access_enabled;
}
void OAIGroupDetail::setRequestAccessEnabled(const QString &request_access_enabled) {
    m_request_access_enabled = request_access_enabled;
    m_request_access_enabled_isSet = true;
}

bool OAIGroupDetail::is_request_access_enabled_Set() const{
    return m_request_access_enabled_isSet;
}

bool OAIGroupDetail::is_request_access_enabled_Valid() const{
    return m_request_access_enabled_isValid;
}

OAIProject OAIGroupDetail::getSharedProjects() const {
    return m_shared_projects;
}
void OAIGroupDetail::setSharedProjects(const OAIProject &shared_projects) {
    m_shared_projects = shared_projects;
    m_shared_projects_isSet = true;
}

bool OAIGroupDetail::is_shared_projects_Set() const{
    return m_shared_projects_isSet;
}

bool OAIGroupDetail::is_shared_projects_Valid() const{
    return m_shared_projects_isValid;
}

QString OAIGroupDetail::getStatistics() const {
    return m_statistics;
}
void OAIGroupDetail::setStatistics(const QString &statistics) {
    m_statistics = statistics;
    m_statistics_isSet = true;
}

bool OAIGroupDetail::is_statistics_Set() const{
    return m_statistics_isSet;
}

bool OAIGroupDetail::is_statistics_Valid() const{
    return m_statistics_isValid;
}

QString OAIGroupDetail::getVisibilityLevel() const {
    return m_visibility_level;
}
void OAIGroupDetail::setVisibilityLevel(const QString &visibility_level) {
    m_visibility_level = visibility_level;
    m_visibility_level_isSet = true;
}

bool OAIGroupDetail::is_visibility_level_Set() const{
    return m_visibility_level_isSet;
}

bool OAIGroupDetail::is_visibility_level_Valid() const{
    return m_visibility_level_isValid;
}

QString OAIGroupDetail::getWebUrl() const {
    return m_web_url;
}
void OAIGroupDetail::setWebUrl(const QString &web_url) {
    m_web_url = web_url;
    m_web_url_isSet = true;
}

bool OAIGroupDetail::is_web_url_Set() const{
    return m_web_url_isSet;
}

bool OAIGroupDetail::is_web_url_Valid() const{
    return m_web_url_isValid;
}

bool OAIGroupDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avatar_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lfs_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_projects.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_access_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_projects.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_statistics_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visibility_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroupDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
