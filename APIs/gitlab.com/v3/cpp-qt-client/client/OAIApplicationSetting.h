/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationSetting.h
 *
 * Modify application settings
 */

#ifndef OAIApplicationSetting_H
#define OAIApplicationSetting_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplicationSetting : public OAIObject {
public:
    OAIApplicationSetting();
    OAIApplicationSetting(QString json);
    ~OAIApplicationSetting() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAfterSignOutPath() const;
    void setAfterSignOutPath(const QString &after_sign_out_path);
    bool is_after_sign_out_path_Set() const;
    bool is_after_sign_out_path_Valid() const;

    QString getAfterSignUpText() const;
    void setAfterSignUpText(const QString &after_sign_up_text);
    bool is_after_sign_up_text_Set() const;
    bool is_after_sign_up_text_Valid() const;

    QString getContainerRegistryTokenExpireDelay() const;
    void setContainerRegistryTokenExpireDelay(const QString &container_registry_token_expire_delay);
    bool is_container_registry_token_expire_delay_Set() const;
    bool is_container_registry_token_expire_delay_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDefaultBranchProtection() const;
    void setDefaultBranchProtection(const QString &default_branch_protection);
    bool is_default_branch_protection_Set() const;
    bool is_default_branch_protection_Valid() const;

    QString getDefaultGroupVisibility() const;
    void setDefaultGroupVisibility(const QString &default_group_visibility);
    bool is_default_group_visibility_Set() const;
    bool is_default_group_visibility_Valid() const;

    QString getDefaultProjectVisibility() const;
    void setDefaultProjectVisibility(const QString &default_project_visibility);
    bool is_default_project_visibility_Set() const;
    bool is_default_project_visibility_Valid() const;

    QString getDefaultProjectsLimit() const;
    void setDefaultProjectsLimit(const QString &default_projects_limit);
    bool is_default_projects_limit_Set() const;
    bool is_default_projects_limit_Valid() const;

    QString getDefaultSnippetVisibility() const;
    void setDefaultSnippetVisibility(const QString &default_snippet_visibility);
    bool is_default_snippet_visibility_Set() const;
    bool is_default_snippet_visibility_Valid() const;

    QString getDomainBlacklist() const;
    void setDomainBlacklist(const QString &domain_blacklist);
    bool is_domain_blacklist_Set() const;
    bool is_domain_blacklist_Valid() const;

    QString getDomainBlacklistEnabled() const;
    void setDomainBlacklistEnabled(const QString &domain_blacklist_enabled);
    bool is_domain_blacklist_enabled_Set() const;
    bool is_domain_blacklist_enabled_Valid() const;

    QString getDomainWhitelist() const;
    void setDomainWhitelist(const QString &domain_whitelist);
    bool is_domain_whitelist_Set() const;
    bool is_domain_whitelist_Valid() const;

    QString getGravatarEnabled() const;
    void setGravatarEnabled(const QString &gravatar_enabled);
    bool is_gravatar_enabled_Set() const;
    bool is_gravatar_enabled_Valid() const;

    QString getHomePageUrl() const;
    void setHomePageUrl(const QString &home_page_url);
    bool is_home_page_url_Set() const;
    bool is_home_page_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKodingEnabled() const;
    void setKodingEnabled(const QString &koding_enabled);
    bool is_koding_enabled_Set() const;
    bool is_koding_enabled_Valid() const;

    QString getKodingUrl() const;
    void setKodingUrl(const QString &koding_url);
    bool is_koding_url_Set() const;
    bool is_koding_url_Valid() const;

    QString getMaxAttachmentSize() const;
    void setMaxAttachmentSize(const QString &max_attachment_size);
    bool is_max_attachment_size_Set() const;
    bool is_max_attachment_size_Valid() const;

    QString getPlantumlEnabled() const;
    void setPlantumlEnabled(const QString &plantuml_enabled);
    bool is_plantuml_enabled_Set() const;
    bool is_plantuml_enabled_Valid() const;

    QString getPlantumlUrl() const;
    void setPlantumlUrl(const QString &plantuml_url);
    bool is_plantuml_url_Set() const;
    bool is_plantuml_url_Valid() const;

    QString getRepositoryStorage() const;
    void setRepositoryStorage(const QString &repository_storage);
    bool is_repository_storage_Set() const;
    bool is_repository_storage_Valid() const;

    QString getRepositoryStorages() const;
    void setRepositoryStorages(const QString &repository_storages);
    bool is_repository_storages_Set() const;
    bool is_repository_storages_Valid() const;

    QString getRestrictedVisibilityLevels() const;
    void setRestrictedVisibilityLevels(const QString &restricted_visibility_levels);
    bool is_restricted_visibility_levels_Set() const;
    bool is_restricted_visibility_levels_Valid() const;

    QString getSessionExpireDelay() const;
    void setSessionExpireDelay(const QString &session_expire_delay);
    bool is_session_expire_delay_Set() const;
    bool is_session_expire_delay_Valid() const;

    QString getSignInText() const;
    void setSignInText(const QString &sign_in_text);
    bool is_sign_in_text_Set() const;
    bool is_sign_in_text_Valid() const;

    QString getSigninEnabled() const;
    void setSigninEnabled(const QString &signin_enabled);
    bool is_signin_enabled_Set() const;
    bool is_signin_enabled_Valid() const;

    QString getSignupEnabled() const;
    void setSignupEnabled(const QString &signup_enabled);
    bool is_signup_enabled_Set() const;
    bool is_signup_enabled_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUserOauthApplications() const;
    void setUserOauthApplications(const QString &user_oauth_applications);
    bool is_user_oauth_applications_Set() const;
    bool is_user_oauth_applications_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_after_sign_out_path;
    bool m_after_sign_out_path_isSet;
    bool m_after_sign_out_path_isValid;

    QString m_after_sign_up_text;
    bool m_after_sign_up_text_isSet;
    bool m_after_sign_up_text_isValid;

    QString m_container_registry_token_expire_delay;
    bool m_container_registry_token_expire_delay_isSet;
    bool m_container_registry_token_expire_delay_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_default_branch_protection;
    bool m_default_branch_protection_isSet;
    bool m_default_branch_protection_isValid;

    QString m_default_group_visibility;
    bool m_default_group_visibility_isSet;
    bool m_default_group_visibility_isValid;

    QString m_default_project_visibility;
    bool m_default_project_visibility_isSet;
    bool m_default_project_visibility_isValid;

    QString m_default_projects_limit;
    bool m_default_projects_limit_isSet;
    bool m_default_projects_limit_isValid;

    QString m_default_snippet_visibility;
    bool m_default_snippet_visibility_isSet;
    bool m_default_snippet_visibility_isValid;

    QString m_domain_blacklist;
    bool m_domain_blacklist_isSet;
    bool m_domain_blacklist_isValid;

    QString m_domain_blacklist_enabled;
    bool m_domain_blacklist_enabled_isSet;
    bool m_domain_blacklist_enabled_isValid;

    QString m_domain_whitelist;
    bool m_domain_whitelist_isSet;
    bool m_domain_whitelist_isValid;

    QString m_gravatar_enabled;
    bool m_gravatar_enabled_isSet;
    bool m_gravatar_enabled_isValid;

    QString m_home_page_url;
    bool m_home_page_url_isSet;
    bool m_home_page_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_koding_enabled;
    bool m_koding_enabled_isSet;
    bool m_koding_enabled_isValid;

    QString m_koding_url;
    bool m_koding_url_isSet;
    bool m_koding_url_isValid;

    QString m_max_attachment_size;
    bool m_max_attachment_size_isSet;
    bool m_max_attachment_size_isValid;

    QString m_plantuml_enabled;
    bool m_plantuml_enabled_isSet;
    bool m_plantuml_enabled_isValid;

    QString m_plantuml_url;
    bool m_plantuml_url_isSet;
    bool m_plantuml_url_isValid;

    QString m_repository_storage;
    bool m_repository_storage_isSet;
    bool m_repository_storage_isValid;

    QString m_repository_storages;
    bool m_repository_storages_isSet;
    bool m_repository_storages_isValid;

    QString m_restricted_visibility_levels;
    bool m_restricted_visibility_levels_isSet;
    bool m_restricted_visibility_levels_isValid;

    QString m_session_expire_delay;
    bool m_session_expire_delay_isSet;
    bool m_session_expire_delay_isValid;

    QString m_sign_in_text;
    bool m_sign_in_text_isSet;
    bool m_sign_in_text_isValid;

    QString m_signin_enabled;
    bool m_signin_enabled_isSet;
    bool m_signin_enabled_isValid;

    QString m_signup_enabled;
    bool m_signup_enabled_isSet;
    bool m_signup_enabled_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_user_oauth_applications;
    bool m_user_oauth_applications_isSet;
    bool m_user_oauth_applications_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationSetting)

#endif // OAIApplicationSetting_H
