/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINote.h
 *
 * Delete a +noteable+ note
 */

#ifndef OAINote_H
#define OAINote_H

#include <QJsonObject>

#include "OAIUserBasic.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserBasic;

class OAINote : public OAIObject {
public:
    OAINote();
    OAINote(QString json);
    ~OAINote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttachment() const;
    void setAttachment(const QString &attachment);
    bool is_attachment_Set() const;
    bool is_attachment_Valid() const;

    OAIUserBasic getAuthor() const;
    void setAuthor(const OAIUserBasic &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDownvote() const;
    void setDownvote(const QString &downvote);
    bool is_downvote_Set() const;
    bool is_downvote_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getNoteableId() const;
    void setNoteableId(const QString &noteable_id);
    bool is_noteable_id_Set() const;
    bool is_noteable_id_Valid() const;

    QString getNoteableType() const;
    void setNoteableType(const QString &noteable_type);
    bool is_noteable_type_Set() const;
    bool is_noteable_type_Valid() const;

    QString getSystem() const;
    void setSystem(const QString &system);
    bool is_system_Set() const;
    bool is_system_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUpvote() const;
    void setUpvote(const QString &upvote);
    bool is_upvote_Set() const;
    bool is_upvote_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attachment;
    bool m_attachment_isSet;
    bool m_attachment_isValid;

    OAIUserBasic m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_downvote;
    bool m_downvote_isSet;
    bool m_downvote_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_noteable_id;
    bool m_noteable_id_isSet;
    bool m_noteable_id_isValid;

    QString m_noteable_type;
    bool m_noteable_type_isSet;
    bool m_noteable_type_isValid;

    QString m_system;
    bool m_system_isSet;
    bool m_system_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_upvote;
    bool m_upvote_isSet;
    bool m_upvote_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINote)

#endif // OAINote_H
