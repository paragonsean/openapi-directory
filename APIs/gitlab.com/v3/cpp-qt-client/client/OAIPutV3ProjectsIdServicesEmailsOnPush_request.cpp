/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutV3ProjectsIdServicesEmailsOnPush_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutV3ProjectsIdServicesEmailsOnPush_request::OAIPutV3ProjectsIdServicesEmailsOnPush_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutV3ProjectsIdServicesEmailsOnPush_request::OAIPutV3ProjectsIdServicesEmailsOnPush_request() {
    this->initializeModel();
}

OAIPutV3ProjectsIdServicesEmailsOnPush_request::~OAIPutV3ProjectsIdServicesEmailsOnPush_request() {}

void OAIPutV3ProjectsIdServicesEmailsOnPush_request::initializeModel() {

    m_recipients_isSet = false;
    m_recipients_isValid = false;

    m_disable_diffs_isSet = false;
    m_disable_diffs_isValid = false;

    m_send_from_committer_email_isSet = false;
    m_send_from_committer_email_isValid = false;

    m_push_events_isSet = false;
    m_push_events_isValid = false;

    m_tag_push_events_isSet = false;
    m_tag_push_events_isValid = false;
}

void OAIPutV3ProjectsIdServicesEmailsOnPush_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutV3ProjectsIdServicesEmailsOnPush_request::fromJsonObject(QJsonObject json) {

    m_recipients_isValid = ::OpenAPI::fromJsonValue(m_recipients, json[QString("recipients")]);
    m_recipients_isSet = !json[QString("recipients")].isNull() && m_recipients_isValid;

    m_disable_diffs_isValid = ::OpenAPI::fromJsonValue(m_disable_diffs, json[QString("disable_diffs")]);
    m_disable_diffs_isSet = !json[QString("disable_diffs")].isNull() && m_disable_diffs_isValid;

    m_send_from_committer_email_isValid = ::OpenAPI::fromJsonValue(m_send_from_committer_email, json[QString("send_from_committer_email")]);
    m_send_from_committer_email_isSet = !json[QString("send_from_committer_email")].isNull() && m_send_from_committer_email_isValid;

    m_push_events_isValid = ::OpenAPI::fromJsonValue(m_push_events, json[QString("push_events")]);
    m_push_events_isSet = !json[QString("push_events")].isNull() && m_push_events_isValid;

    m_tag_push_events_isValid = ::OpenAPI::fromJsonValue(m_tag_push_events, json[QString("tag_push_events")]);
    m_tag_push_events_isSet = !json[QString("tag_push_events")].isNull() && m_tag_push_events_isValid;
}

QString OAIPutV3ProjectsIdServicesEmailsOnPush_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutV3ProjectsIdServicesEmailsOnPush_request::asJsonObject() const {
    QJsonObject obj;
    if (m_recipients_isSet) {
        obj.insert(QString("recipients"), ::OpenAPI::toJsonValue(m_recipients));
    }
    if (m_disable_diffs_isSet) {
        obj.insert(QString("disable_diffs"), ::OpenAPI::toJsonValue(m_disable_diffs));
    }
    if (m_send_from_committer_email_isSet) {
        obj.insert(QString("send_from_committer_email"), ::OpenAPI::toJsonValue(m_send_from_committer_email));
    }
    if (m_push_events_isSet) {
        obj.insert(QString("push_events"), ::OpenAPI::toJsonValue(m_push_events));
    }
    if (m_tag_push_events_isSet) {
        obj.insert(QString("tag_push_events"), ::OpenAPI::toJsonValue(m_tag_push_events));
    }
    return obj;
}

QString OAIPutV3ProjectsIdServicesEmailsOnPush_request::getRecipients() const {
    return m_recipients;
}
void OAIPutV3ProjectsIdServicesEmailsOnPush_request::setRecipients(const QString &recipients) {
    m_recipients = recipients;
    m_recipients_isSet = true;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_recipients_Set() const{
    return m_recipients_isSet;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_recipients_Valid() const{
    return m_recipients_isValid;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::isDisableDiffs() const {
    return m_disable_diffs;
}
void OAIPutV3ProjectsIdServicesEmailsOnPush_request::setDisableDiffs(const bool &disable_diffs) {
    m_disable_diffs = disable_diffs;
    m_disable_diffs_isSet = true;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_disable_diffs_Set() const{
    return m_disable_diffs_isSet;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_disable_diffs_Valid() const{
    return m_disable_diffs_isValid;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::isSendFromCommitterEmail() const {
    return m_send_from_committer_email;
}
void OAIPutV3ProjectsIdServicesEmailsOnPush_request::setSendFromCommitterEmail(const bool &send_from_committer_email) {
    m_send_from_committer_email = send_from_committer_email;
    m_send_from_committer_email_isSet = true;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_send_from_committer_email_Set() const{
    return m_send_from_committer_email_isSet;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_send_from_committer_email_Valid() const{
    return m_send_from_committer_email_isValid;
}

QString OAIPutV3ProjectsIdServicesEmailsOnPush_request::getPushEvents() const {
    return m_push_events;
}
void OAIPutV3ProjectsIdServicesEmailsOnPush_request::setPushEvents(const QString &push_events) {
    m_push_events = push_events;
    m_push_events_isSet = true;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_push_events_Set() const{
    return m_push_events_isSet;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_push_events_Valid() const{
    return m_push_events_isValid;
}

QString OAIPutV3ProjectsIdServicesEmailsOnPush_request::getTagPushEvents() const {
    return m_tag_push_events;
}
void OAIPutV3ProjectsIdServicesEmailsOnPush_request::setTagPushEvents(const QString &tag_push_events) {
    m_tag_push_events = tag_push_events;
    m_tag_push_events_isSet = true;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_tag_push_events_Set() const{
    return m_tag_push_events_isSet;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::is_tag_push_events_Valid() const{
    return m_tag_push_events_isValid;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recipients_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_diffs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_from_committer_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_push_events_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_push_events_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutV3ProjectsIdServicesEmailsOnPush_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_recipients_isValid && true;
}

} // namespace OpenAPI
