/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutV3ProjectsIdServicesJira_request.h
 *
 * 
 */

#ifndef OAIPutV3ProjectsIdServicesJira_request_H
#define OAIPutV3ProjectsIdServicesJira_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPutV3ProjectsIdServicesJira_request : public OAIObject {
public:
    OAIPutV3ProjectsIdServicesJira_request();
    OAIPutV3ProjectsIdServicesJira_request(QString json);
    ~OAIPutV3ProjectsIdServicesJira_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getProjectKey() const;
    void setProjectKey(const QString &project_key);
    bool is_project_key_Set() const;
    bool is_project_key_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    qint32 getJiraIssueTransitionId() const;
    void setJiraIssueTransitionId(const qint32 &jira_issue_transition_id);
    bool is_jira_issue_transition_id_Set() const;
    bool is_jira_issue_transition_id_Valid() const;

    QString getCommitEvents() const;
    void setCommitEvents(const QString &commit_events);
    bool is_commit_events_Set() const;
    bool is_commit_events_Valid() const;

    QString getMergeRequestEvents() const;
    void setMergeRequestEvents(const QString &merge_request_events);
    bool is_merge_request_events_Set() const;
    bool is_merge_request_events_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_project_key;
    bool m_project_key_isSet;
    bool m_project_key_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    qint32 m_jira_issue_transition_id;
    bool m_jira_issue_transition_id_isSet;
    bool m_jira_issue_transition_id_isValid;

    QString m_commit_events;
    bool m_commit_events_isSet;
    bool m_commit_events_isValid;

    QString m_merge_request_events;
    bool m_merge_request_events_isSet;
    bool m_merge_request_events_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutV3ProjectsIdServicesJira_request)

#endif // OAIPutV3ProjectsIdServicesJira_request_H
