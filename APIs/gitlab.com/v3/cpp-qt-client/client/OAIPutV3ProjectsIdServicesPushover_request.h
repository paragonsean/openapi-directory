/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutV3ProjectsIdServicesPushover_request.h
 *
 * 
 */

#ifndef OAIPutV3ProjectsIdServicesPushover_request_H
#define OAIPutV3ProjectsIdServicesPushover_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPutV3ProjectsIdServicesPushover_request : public OAIObject {
public:
    OAIPutV3ProjectsIdServicesPushover_request();
    OAIPutV3ProjectsIdServicesPushover_request(QString json);
    ~OAIPutV3ProjectsIdServicesPushover_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiKey() const;
    void setApiKey(const QString &api_key);
    bool is_api_key_Set() const;
    bool is_api_key_Valid() const;

    QString getUserKey() const;
    void setUserKey(const QString &user_key);
    bool is_user_key_Set() const;
    bool is_user_key_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getDevice() const;
    void setDevice(const QString &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    QString getSound() const;
    void setSound(const QString &sound);
    bool is_sound_Set() const;
    bool is_sound_Valid() const;

    QString getPushEvents() const;
    void setPushEvents(const QString &push_events);
    bool is_push_events_Set() const;
    bool is_push_events_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_key;
    bool m_api_key_isSet;
    bool m_api_key_isValid;

    QString m_user_key;
    bool m_user_key_isSet;
    bool m_user_key_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    QString m_sound;
    bool m_sound_isSet;
    bool m_sound_isValid;

    QString m_push_events;
    bool m_push_events_isSet;
    bool m_push_events_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutV3ProjectsIdServicesPushover_request)

#endif // OAIPutV3ProjectsIdServicesPushover_request_H
