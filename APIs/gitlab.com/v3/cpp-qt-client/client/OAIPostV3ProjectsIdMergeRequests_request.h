/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPostV3ProjectsIdMergeRequests_request.h
 *
 * 
 */

#ifndef OAIPostV3ProjectsIdMergeRequests_request_H
#define OAIPostV3ProjectsIdMergeRequests_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPostV3ProjectsIdMergeRequests_request : public OAIObject {
public:
    OAIPostV3ProjectsIdMergeRequests_request();
    OAIPostV3ProjectsIdMergeRequests_request(QString json);
    ~OAIPostV3ProjectsIdMergeRequests_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getSourceBranch() const;
    void setSourceBranch(const QString &source_branch);
    bool is_source_branch_Set() const;
    bool is_source_branch_Valid() const;

    QString getTargetBranch() const;
    void setTargetBranch(const QString &target_branch);
    bool is_target_branch_Set() const;
    bool is_target_branch_Valid() const;

    qint32 getTargetProjectId() const;
    void setTargetProjectId(const qint32 &target_project_id);
    bool is_target_project_id_Set() const;
    bool is_target_project_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getAssigneeId() const;
    void setAssigneeId(const qint32 &assignee_id);
    bool is_assignee_id_Set() const;
    bool is_assignee_id_Valid() const;

    qint32 getMilestoneId() const;
    void setMilestoneId(const qint32 &milestone_id);
    bool is_milestone_id_Set() const;
    bool is_milestone_id_Valid() const;

    QString getLabels() const;
    void setLabels(const QString &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    bool isRemoveSourceBranch() const;
    void setRemoveSourceBranch(const bool &remove_source_branch);
    bool is_remove_source_branch_Set() const;
    bool is_remove_source_branch_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_source_branch;
    bool m_source_branch_isSet;
    bool m_source_branch_isValid;

    QString m_target_branch;
    bool m_target_branch_isSet;
    bool m_target_branch_isValid;

    qint32 m_target_project_id;
    bool m_target_project_id_isSet;
    bool m_target_project_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_assignee_id;
    bool m_assignee_id_isSet;
    bool m_assignee_id_isValid;

    qint32 m_milestone_id;
    bool m_milestone_id_isSet;
    bool m_milestone_id_isValid;

    QString m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    bool m_remove_source_branch;
    bool m_remove_source_branch_isSet;
    bool m_remove_source_branch_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPostV3ProjectsIdMergeRequests_request)

#endif // OAIPostV3ProjectsIdMergeRequests_request_H
