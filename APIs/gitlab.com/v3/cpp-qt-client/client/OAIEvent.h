/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * This feature was introduced in GitLab 8.13.
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include "OAINote.h"
#include "OAIUserBasic.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserBasic;
class OAINote;

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActionName() const;
    void setActionName(const QString &action_name);
    bool is_action_name_Set() const;
    bool is_action_name_Valid() const;

    OAIUserBasic getAuthor() const;
    void setAuthor(const OAIUserBasic &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getAuthorId() const;
    void setAuthorId(const QString &author_id);
    bool is_author_id_Set() const;
    bool is_author_id_Valid() const;

    QString getAuthorUsername() const;
    void setAuthorUsername(const QString &author_username);
    bool is_author_username_Set() const;
    bool is_author_username_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getData() const;
    void setData(const QString &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    OAINote getNote() const;
    void setNote(const OAINote &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getTargetId() const;
    void setTargetId(const QString &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    QString getTargetTitle() const;
    void setTargetTitle(const QString &target_title);
    bool is_target_title_Set() const;
    bool is_target_title_Valid() const;

    QString getTargetType() const;
    void setTargetType(const QString &target_type);
    bool is_target_type_Set() const;
    bool is_target_type_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action_name;
    bool m_action_name_isSet;
    bool m_action_name_isValid;

    OAIUserBasic m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_author_id;
    bool m_author_id_isSet;
    bool m_author_id_isValid;

    QString m_author_username;
    bool m_author_username_isSet;
    bool m_author_username_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    OAINote m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;

    QString m_target_title;
    bool m_target_title_isSet;
    bool m_target_title_isValid;

    QString m_target_type;
    bool m_target_type_isSet;
    bool m_target_type_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
