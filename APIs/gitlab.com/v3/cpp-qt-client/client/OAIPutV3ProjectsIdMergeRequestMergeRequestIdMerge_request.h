/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutV3ProjectsIdMergeRequestMergeRequestIdMerge_request.h
 *
 * 
 */

#ifndef OAIPutV3ProjectsIdMergeRequestMergeRequestIdMerge_request_H
#define OAIPutV3ProjectsIdMergeRequestMergeRequestIdMerge_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPutV3ProjectsIdMergeRequestMergeRequestIdMerge_request : public OAIObject {
public:
    OAIPutV3ProjectsIdMergeRequestMergeRequestIdMerge_request();
    OAIPutV3ProjectsIdMergeRequestMergeRequestIdMerge_request(QString json);
    ~OAIPutV3ProjectsIdMergeRequestMergeRequestIdMerge_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMergeCommitMessage() const;
    void setMergeCommitMessage(const QString &merge_commit_message);
    bool is_merge_commit_message_Set() const;
    bool is_merge_commit_message_Valid() const;

    bool isShouldRemoveSourceBranch() const;
    void setShouldRemoveSourceBranch(const bool &should_remove_source_branch);
    bool is_should_remove_source_branch_Set() const;
    bool is_should_remove_source_branch_Valid() const;

    bool isMergeWhenBuildSucceeds() const;
    void setMergeWhenBuildSucceeds(const bool &merge_when_build_succeeds);
    bool is_merge_when_build_succeeds_Set() const;
    bool is_merge_when_build_succeeds_Valid() const;

    QString getSha() const;
    void setSha(const QString &sha);
    bool is_sha_Set() const;
    bool is_sha_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_merge_commit_message;
    bool m_merge_commit_message_isSet;
    bool m_merge_commit_message_isValid;

    bool m_should_remove_source_branch;
    bool m_should_remove_source_branch_isSet;
    bool m_should_remove_source_branch_isValid;

    bool m_merge_when_build_succeeds;
    bool m_merge_when_build_succeeds_isSet;
    bool m_merge_when_build_succeeds_isValid;

    QString m_sha;
    bool m_sha_isSet;
    bool m_sha_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutV3ProjectsIdMergeRequestMergeRequestIdMerge_request)

#endif // OAIPutV3ProjectsIdMergeRequestMergeRequestIdMerge_request_H
