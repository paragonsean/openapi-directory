/**
 * Gitlab
 * The platform for modern developers GitLab unifies issues, code review, CI and CD into a single UI
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunnerDetails.h
 *
 * Update runner&#39;s details
 */

#ifndef OAIRunnerDetails_H
#define OAIRunnerDetails_H

#include <QJsonObject>

#include "OAIBasicProjectDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBasicProjectDetails;

class OAIRunnerDetails : public OAIObject {
public:
    OAIRunnerDetails();
    OAIRunnerDetails(QString json);
    ~OAIRunnerDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActive() const;
    void setActive(const QString &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QString getArchitecture() const;
    void setArchitecture(const QString &architecture);
    bool is_architecture_Set() const;
    bool is_architecture_Valid() const;

    QString getContactedAt() const;
    void setContactedAt(const QString &contacted_at);
    bool is_contacted_at_Set() const;
    bool is_contacted_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIsShared() const;
    void setIsShared(const QString &is_shared);
    bool is_is_shared_Set() const;
    bool is_is_shared_Valid() const;

    QString getLocked() const;
    void setLocked(const QString &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    OAIBasicProjectDetails getProjects() const;
    void setProjects(const OAIBasicProjectDetails &projects);
    bool is_projects_Set() const;
    bool is_projects_Valid() const;

    QString getRevision() const;
    void setRevision(const QString &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    QString getRunUntagged() const;
    void setRunUntagged(const QString &run_untagged);
    bool is_run_untagged_Set() const;
    bool is_run_untagged_Valid() const;

    QString getTagList() const;
    void setTagList(const QString &tag_list);
    bool is_tag_list_Set() const;
    bool is_tag_list_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QString m_architecture;
    bool m_architecture_isSet;
    bool m_architecture_isValid;

    QString m_contacted_at;
    bool m_contacted_at_isSet;
    bool m_contacted_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_is_shared;
    bool m_is_shared_isSet;
    bool m_is_shared_isValid;

    QString m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    OAIBasicProjectDetails m_projects;
    bool m_projects_isSet;
    bool m_projects_isValid;

    QString m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;

    QString m_run_untagged;
    bool m_run_untagged_isSet;
    bool m_run_untagged_isValid;

    QString m_tag_list;
    bool m_tag_list_isSet;
    bool m_tag_list_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunnerDetails)

#endif // OAIRunnerDetails_H
