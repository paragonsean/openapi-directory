# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_name: str=None, date_joined: datetime=None, email: str=None, first_name: str=None, is_organization: str=None, last_name: str=None, login: str=None, status: str=None, url: str=None):
        """User - a model defined in OpenAPI

        :param company_name: The company_name of this User.
        :param date_joined: The date_joined of this User.
        :param email: The email of this User.
        :param first_name: The first_name of this User.
        :param is_organization: The is_organization of this User.
        :param last_name: The last_name of this User.
        :param login: The login of this User.
        :param status: The status of this User.
        :param url: The url of this User.
        """
        self.openapi_types = {
            'company_name': str,
            'date_joined': datetime,
            'email': str,
            'first_name': str,
            'is_organization': str,
            'last_name': str,
            'login': str,
            'status': str,
            'url': str
        }

        self.attribute_map = {
            'company_name': 'company_name',
            'date_joined': 'date_joined',
            'email': 'email',
            'first_name': 'first_name',
            'is_organization': 'is_organization',
            'last_name': 'last_name',
            'login': 'login',
            'status': 'status',
            'url': 'url'
        }

        self._company_name = company_name
        self._date_joined = date_joined
        self._email = email
        self._first_name = first_name
        self._is_organization = is_organization
        self._last_name = last_name
        self._login = login
        self._status = status
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_name(self):
        """Gets the company_name of this User.

        

        :return: The company_name of this User.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this User.

        

        :param company_name: The company_name of this User.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def date_joined(self):
        """Gets the date_joined of this User.

        

        :return: The date_joined of this User.
        :rtype: datetime
        """
        return self._date_joined

    @date_joined.setter
    def date_joined(self, date_joined):
        """Sets the date_joined of this User.

        

        :param date_joined: The date_joined of this User.
        :type date_joined: datetime
        """

        self._date_joined = date_joined

    @property
    def email(self):
        """Gets the email of this User.

        

        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this User.

        

        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this User.

        

        :return: The first_name of this User.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this User.

        

        :param first_name: The first_name of this User.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def is_organization(self):
        """Gets the is_organization of this User.

        

        :return: The is_organization of this User.
        :rtype: str
        """
        return self._is_organization

    @is_organization.setter
    def is_organization(self, is_organization):
        """Sets the is_organization of this User.

        

        :param is_organization: The is_organization of this User.
        :type is_organization: str
        """

        self._is_organization = is_organization

    @property
    def last_name(self):
        """Gets the last_name of this User.

        

        :return: The last_name of this User.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this User.

        

        :param last_name: The last_name of this User.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def login(self):
        """Gets the login of this User.

        

        :return: The login of this User.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """Sets the login of this User.

        

        :param login: The login of this User.
        :type login: str
        """

        self._login = login

    @property
    def status(self):
        """Gets the status of this User.

        

        :return: The status of this User.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this User.

        

        :param status: The status of this User.
        :type status: str
        """

        self._status = status

    @property
    def url(self):
        """Gets the url of this User.

        

        :return: The url of this User.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this User.

        

        :param url: The url of this User.
        :type url: str
        """

        self._url = url
