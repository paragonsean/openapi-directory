# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.project import Project
from openapi_server import util


class GetUserProjects200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, next: str=None, page: int=None, previous: str=None, results: List[Project]=None, size: int=None):
        """GetUserProjects200Response - a model defined in OpenAPI

        :param count: The count of this GetUserProjects200Response.
        :param next: The next of this GetUserProjects200Response.
        :param page: The page of this GetUserProjects200Response.
        :param previous: The previous of this GetUserProjects200Response.
        :param results: The results of this GetUserProjects200Response.
        :param size: The size of this GetUserProjects200Response.
        """
        self.openapi_types = {
            'count': int,
            'next': str,
            'page': int,
            'previous': str,
            'results': List[Project],
            'size': int
        }

        self.attribute_map = {
            'count': 'count',
            'next': 'next',
            'page': 'page',
            'previous': 'previous',
            'results': 'results',
            'size': 'size'
        }

        self._count = count
        self._next = next
        self._page = page
        self._previous = previous
        self._results = results
        self._size = size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUserProjects200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getUserProjects_200_response of this GetUserProjects200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this GetUserProjects200Response.

        

        :return: The count of this GetUserProjects200Response.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this GetUserProjects200Response.

        

        :param count: The count of this GetUserProjects200Response.
        :type count: int
        """

        self._count = count

    @property
    def next(self):
        """Gets the next of this GetUserProjects200Response.

        

        :return: The next of this GetUserProjects200Response.
        :rtype: str
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this GetUserProjects200Response.

        

        :param next: The next of this GetUserProjects200Response.
        :type next: str
        """

        self._next = next

    @property
    def page(self):
        """Gets the page of this GetUserProjects200Response.

        

        :return: The page of this GetUserProjects200Response.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this GetUserProjects200Response.

        

        :param page: The page of this GetUserProjects200Response.
        :type page: int
        """

        self._page = page

    @property
    def previous(self):
        """Gets the previous of this GetUserProjects200Response.

        

        :return: The previous of this GetUserProjects200Response.
        :rtype: str
        """
        return self._previous

    @previous.setter
    def previous(self, previous):
        """Sets the previous of this GetUserProjects200Response.

        

        :param previous: The previous of this GetUserProjects200Response.
        :type previous: str
        """

        self._previous = previous

    @property
    def results(self):
        """Gets the results of this GetUserProjects200Response.

        

        :return: The results of this GetUserProjects200Response.
        :rtype: List[Project]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this GetUserProjects200Response.

        

        :param results: The results of this GetUserProjects200Response.
        :type results: List[Project]
        """

        self._results = results

    @property
    def size(self):
        """Gets the size of this GetUserProjects200Response.

        

        :return: The size of this GetUserProjects200Response.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this GetUserProjects200Response.

        

        :param size: The size of this GetUserProjects200Response.
        :type size: int
        """

        self._size = size
