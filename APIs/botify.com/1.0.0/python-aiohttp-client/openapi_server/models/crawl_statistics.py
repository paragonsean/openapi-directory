# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CrawlStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, depth_current: int=None, last_upd_dt: datetime=None, pages_dones: int=None, pages_dones_2xx: int=None, pages_dones_3xx: int=None, pages_dones_4xx: int=None, pages_dones_5xx: int=None, pages_dones_networkerror: int=None, pages_dones_xxx: int=None, pages_known: int=None):
        """CrawlStatistics - a model defined in OpenAPI

        :param depth_current: The depth_current of this CrawlStatistics.
        :param last_upd_dt: The last_upd_dt of this CrawlStatistics.
        :param pages_dones: The pages_dones of this CrawlStatistics.
        :param pages_dones_2xx: The pages_dones_2xx of this CrawlStatistics.
        :param pages_dones_3xx: The pages_dones_3xx of this CrawlStatistics.
        :param pages_dones_4xx: The pages_dones_4xx of this CrawlStatistics.
        :param pages_dones_5xx: The pages_dones_5xx of this CrawlStatistics.
        :param pages_dones_networkerror: The pages_dones_networkerror of this CrawlStatistics.
        :param pages_dones_xxx: The pages_dones_xxx of this CrawlStatistics.
        :param pages_known: The pages_known of this CrawlStatistics.
        """
        self.openapi_types = {
            'depth_current': int,
            'last_upd_dt': datetime,
            'pages_dones': int,
            'pages_dones_2xx': int,
            'pages_dones_3xx': int,
            'pages_dones_4xx': int,
            'pages_dones_5xx': int,
            'pages_dones_networkerror': int,
            'pages_dones_xxx': int,
            'pages_known': int
        }

        self.attribute_map = {
            'depth_current': 'depth_current',
            'last_upd_dt': 'last_upd_dt',
            'pages_dones': 'pages_dones',
            'pages_dones_2xx': 'pages_dones_2xx',
            'pages_dones_3xx': 'pages_dones_3xx',
            'pages_dones_4xx': 'pages_dones_4xx',
            'pages_dones_5xx': 'pages_dones_5xx',
            'pages_dones_networkerror': 'pages_dones_networkerror',
            'pages_dones_xxx': 'pages_dones_xxx',
            'pages_known': 'pages_known'
        }

        self._depth_current = depth_current
        self._last_upd_dt = last_upd_dt
        self._pages_dones = pages_dones
        self._pages_dones_2xx = pages_dones_2xx
        self._pages_dones_3xx = pages_dones_3xx
        self._pages_dones_4xx = pages_dones_4xx
        self._pages_dones_5xx = pages_dones_5xx
        self._pages_dones_networkerror = pages_dones_networkerror
        self._pages_dones_xxx = pages_dones_xxx
        self._pages_known = pages_known

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CrawlStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CrawlStatistics of this CrawlStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def depth_current(self):
        """Gets the depth_current of this CrawlStatistics.

        

        :return: The depth_current of this CrawlStatistics.
        :rtype: int
        """
        return self._depth_current

    @depth_current.setter
    def depth_current(self, depth_current):
        """Sets the depth_current of this CrawlStatistics.

        

        :param depth_current: The depth_current of this CrawlStatistics.
        :type depth_current: int
        """
        if depth_current is None:
            raise ValueError("Invalid value for `depth_current`, must not be `None`")

        self._depth_current = depth_current

    @property
    def last_upd_dt(self):
        """Gets the last_upd_dt of this CrawlStatistics.

        

        :return: The last_upd_dt of this CrawlStatistics.
        :rtype: datetime
        """
        return self._last_upd_dt

    @last_upd_dt.setter
    def last_upd_dt(self, last_upd_dt):
        """Sets the last_upd_dt of this CrawlStatistics.

        

        :param last_upd_dt: The last_upd_dt of this CrawlStatistics.
        :type last_upd_dt: datetime
        """
        if last_upd_dt is None:
            raise ValueError("Invalid value for `last_upd_dt`, must not be `None`")

        self._last_upd_dt = last_upd_dt

    @property
    def pages_dones(self):
        """Gets the pages_dones of this CrawlStatistics.

        

        :return: The pages_dones of this CrawlStatistics.
        :rtype: int
        """
        return self._pages_dones

    @pages_dones.setter
    def pages_dones(self, pages_dones):
        """Sets the pages_dones of this CrawlStatistics.

        

        :param pages_dones: The pages_dones of this CrawlStatistics.
        :type pages_dones: int
        """
        if pages_dones is None:
            raise ValueError("Invalid value for `pages_dones`, must not be `None`")

        self._pages_dones = pages_dones

    @property
    def pages_dones_2xx(self):
        """Gets the pages_dones_2xx of this CrawlStatistics.

        

        :return: The pages_dones_2xx of this CrawlStatistics.
        :rtype: int
        """
        return self._pages_dones_2xx

    @pages_dones_2xx.setter
    def pages_dones_2xx(self, pages_dones_2xx):
        """Sets the pages_dones_2xx of this CrawlStatistics.

        

        :param pages_dones_2xx: The pages_dones_2xx of this CrawlStatistics.
        :type pages_dones_2xx: int
        """
        if pages_dones_2xx is None:
            raise ValueError("Invalid value for `pages_dones_2xx`, must not be `None`")

        self._pages_dones_2xx = pages_dones_2xx

    @property
    def pages_dones_3xx(self):
        """Gets the pages_dones_3xx of this CrawlStatistics.

        

        :return: The pages_dones_3xx of this CrawlStatistics.
        :rtype: int
        """
        return self._pages_dones_3xx

    @pages_dones_3xx.setter
    def pages_dones_3xx(self, pages_dones_3xx):
        """Sets the pages_dones_3xx of this CrawlStatistics.

        

        :param pages_dones_3xx: The pages_dones_3xx of this CrawlStatistics.
        :type pages_dones_3xx: int
        """
        if pages_dones_3xx is None:
            raise ValueError("Invalid value for `pages_dones_3xx`, must not be `None`")

        self._pages_dones_3xx = pages_dones_3xx

    @property
    def pages_dones_4xx(self):
        """Gets the pages_dones_4xx of this CrawlStatistics.

        

        :return: The pages_dones_4xx of this CrawlStatistics.
        :rtype: int
        """
        return self._pages_dones_4xx

    @pages_dones_4xx.setter
    def pages_dones_4xx(self, pages_dones_4xx):
        """Sets the pages_dones_4xx of this CrawlStatistics.

        

        :param pages_dones_4xx: The pages_dones_4xx of this CrawlStatistics.
        :type pages_dones_4xx: int
        """
        if pages_dones_4xx is None:
            raise ValueError("Invalid value for `pages_dones_4xx`, must not be `None`")

        self._pages_dones_4xx = pages_dones_4xx

    @property
    def pages_dones_5xx(self):
        """Gets the pages_dones_5xx of this CrawlStatistics.

        

        :return: The pages_dones_5xx of this CrawlStatistics.
        :rtype: int
        """
        return self._pages_dones_5xx

    @pages_dones_5xx.setter
    def pages_dones_5xx(self, pages_dones_5xx):
        """Sets the pages_dones_5xx of this CrawlStatistics.

        

        :param pages_dones_5xx: The pages_dones_5xx of this CrawlStatistics.
        :type pages_dones_5xx: int
        """
        if pages_dones_5xx is None:
            raise ValueError("Invalid value for `pages_dones_5xx`, must not be `None`")

        self._pages_dones_5xx = pages_dones_5xx

    @property
    def pages_dones_networkerror(self):
        """Gets the pages_dones_networkerror of this CrawlStatistics.

        

        :return: The pages_dones_networkerror of this CrawlStatistics.
        :rtype: int
        """
        return self._pages_dones_networkerror

    @pages_dones_networkerror.setter
    def pages_dones_networkerror(self, pages_dones_networkerror):
        """Sets the pages_dones_networkerror of this CrawlStatistics.

        

        :param pages_dones_networkerror: The pages_dones_networkerror of this CrawlStatistics.
        :type pages_dones_networkerror: int
        """
        if pages_dones_networkerror is None:
            raise ValueError("Invalid value for `pages_dones_networkerror`, must not be `None`")

        self._pages_dones_networkerror = pages_dones_networkerror

    @property
    def pages_dones_xxx(self):
        """Gets the pages_dones_xxx of this CrawlStatistics.

        

        :return: The pages_dones_xxx of this CrawlStatistics.
        :rtype: int
        """
        return self._pages_dones_xxx

    @pages_dones_xxx.setter
    def pages_dones_xxx(self, pages_dones_xxx):
        """Sets the pages_dones_xxx of this CrawlStatistics.

        

        :param pages_dones_xxx: The pages_dones_xxx of this CrawlStatistics.
        :type pages_dones_xxx: int
        """
        if pages_dones_xxx is None:
            raise ValueError("Invalid value for `pages_dones_xxx`, must not be `None`")

        self._pages_dones_xxx = pages_dones_xxx

    @property
    def pages_known(self):
        """Gets the pages_known of this CrawlStatistics.

        

        :return: The pages_known of this CrawlStatistics.
        :rtype: int
        """
        return self._pages_known

    @pages_known.setter
    def pages_known(self, pages_known):
        """Sets the pages_known of this CrawlStatistics.

        

        :param pages_known: The pages_known of this CrawlStatistics.
        :type pages_known: int
        """
        if pages_known is None:
            raise ValueError("Invalid value for `pages_known`, must not be `None`")

        self._pages_known = pages_known
