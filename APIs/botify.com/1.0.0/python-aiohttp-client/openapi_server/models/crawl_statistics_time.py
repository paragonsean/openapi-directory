# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.crawl_statistics_time_point import CrawlStatisticsTimePoint
from openapi_server import util


class CrawlStatisticsTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avg_delay: List[CrawlStatisticsTimePoint]=None, avg_size: List[CrawlStatisticsTimePoint]=None, frequency: str=None, http_code_2xx: List[CrawlStatisticsTimePoint]=None, http_code_3xx: List[CrawlStatisticsTimePoint]=None, http_code_4xx: List[CrawlStatisticsTimePoint]=None, http_code_5xx: List[CrawlStatisticsTimePoint]=None, http_code_xxx: List[CrawlStatisticsTimePoint]=None, last_update_date: datetime=None, new_urls: List[CrawlStatisticsTimePoint]=None):
        """CrawlStatisticsTime - a model defined in OpenAPI

        :param avg_delay: The avg_delay of this CrawlStatisticsTime.
        :param avg_size: The avg_size of this CrawlStatisticsTime.
        :param frequency: The frequency of this CrawlStatisticsTime.
        :param http_code_2xx: The http_code_2xx of this CrawlStatisticsTime.
        :param http_code_3xx: The http_code_3xx of this CrawlStatisticsTime.
        :param http_code_4xx: The http_code_4xx of this CrawlStatisticsTime.
        :param http_code_5xx: The http_code_5xx of this CrawlStatisticsTime.
        :param http_code_xxx: The http_code_xxx of this CrawlStatisticsTime.
        :param last_update_date: The last_update_date of this CrawlStatisticsTime.
        :param new_urls: The new_urls of this CrawlStatisticsTime.
        """
        self.openapi_types = {
            'avg_delay': List[CrawlStatisticsTimePoint],
            'avg_size': List[CrawlStatisticsTimePoint],
            'frequency': str,
            'http_code_2xx': List[CrawlStatisticsTimePoint],
            'http_code_3xx': List[CrawlStatisticsTimePoint],
            'http_code_4xx': List[CrawlStatisticsTimePoint],
            'http_code_5xx': List[CrawlStatisticsTimePoint],
            'http_code_xxx': List[CrawlStatisticsTimePoint],
            'last_update_date': datetime,
            'new_urls': List[CrawlStatisticsTimePoint]
        }

        self.attribute_map = {
            'avg_delay': 'avg_delay',
            'avg_size': 'avg_size',
            'frequency': 'frequency',
            'http_code_2xx': 'http_code_2xx',
            'http_code_3xx': 'http_code_3xx',
            'http_code_4xx': 'http_code_4xx',
            'http_code_5xx': 'http_code_5xx',
            'http_code_xxx': 'http_code_xxx',
            'last_update_date': 'last_update_date',
            'new_urls': 'new_urls'
        }

        self._avg_delay = avg_delay
        self._avg_size = avg_size
        self._frequency = frequency
        self._http_code_2xx = http_code_2xx
        self._http_code_3xx = http_code_3xx
        self._http_code_4xx = http_code_4xx
        self._http_code_5xx = http_code_5xx
        self._http_code_xxx = http_code_xxx
        self._last_update_date = last_update_date
        self._new_urls = new_urls

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CrawlStatisticsTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CrawlStatisticsTime of this CrawlStatisticsTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avg_delay(self):
        """Gets the avg_delay of this CrawlStatisticsTime.

        

        :return: The avg_delay of this CrawlStatisticsTime.
        :rtype: List[CrawlStatisticsTimePoint]
        """
        return self._avg_delay

    @avg_delay.setter
    def avg_delay(self, avg_delay):
        """Sets the avg_delay of this CrawlStatisticsTime.

        

        :param avg_delay: The avg_delay of this CrawlStatisticsTime.
        :type avg_delay: List[CrawlStatisticsTimePoint]
        """
        if avg_delay is None:
            raise ValueError("Invalid value for `avg_delay`, must not be `None`")

        self._avg_delay = avg_delay

    @property
    def avg_size(self):
        """Gets the avg_size of this CrawlStatisticsTime.

        

        :return: The avg_size of this CrawlStatisticsTime.
        :rtype: List[CrawlStatisticsTimePoint]
        """
        return self._avg_size

    @avg_size.setter
    def avg_size(self, avg_size):
        """Sets the avg_size of this CrawlStatisticsTime.

        

        :param avg_size: The avg_size of this CrawlStatisticsTime.
        :type avg_size: List[CrawlStatisticsTimePoint]
        """
        if avg_size is None:
            raise ValueError("Invalid value for `avg_size`, must not be `None`")

        self._avg_size = avg_size

    @property
    def frequency(self):
        """Gets the frequency of this CrawlStatisticsTime.

        

        :return: The frequency of this CrawlStatisticsTime.
        :rtype: str
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this CrawlStatisticsTime.

        

        :param frequency: The frequency of this CrawlStatisticsTime.
        :type frequency: str
        """
        if frequency is None:
            raise ValueError("Invalid value for `frequency`, must not be `None`")

        self._frequency = frequency

    @property
    def http_code_2xx(self):
        """Gets the http_code_2xx of this CrawlStatisticsTime.

        

        :return: The http_code_2xx of this CrawlStatisticsTime.
        :rtype: List[CrawlStatisticsTimePoint]
        """
        return self._http_code_2xx

    @http_code_2xx.setter
    def http_code_2xx(self, http_code_2xx):
        """Sets the http_code_2xx of this CrawlStatisticsTime.

        

        :param http_code_2xx: The http_code_2xx of this CrawlStatisticsTime.
        :type http_code_2xx: List[CrawlStatisticsTimePoint]
        """
        if http_code_2xx is None:
            raise ValueError("Invalid value for `http_code_2xx`, must not be `None`")

        self._http_code_2xx = http_code_2xx

    @property
    def http_code_3xx(self):
        """Gets the http_code_3xx of this CrawlStatisticsTime.

        

        :return: The http_code_3xx of this CrawlStatisticsTime.
        :rtype: List[CrawlStatisticsTimePoint]
        """
        return self._http_code_3xx

    @http_code_3xx.setter
    def http_code_3xx(self, http_code_3xx):
        """Sets the http_code_3xx of this CrawlStatisticsTime.

        

        :param http_code_3xx: The http_code_3xx of this CrawlStatisticsTime.
        :type http_code_3xx: List[CrawlStatisticsTimePoint]
        """
        if http_code_3xx is None:
            raise ValueError("Invalid value for `http_code_3xx`, must not be `None`")

        self._http_code_3xx = http_code_3xx

    @property
    def http_code_4xx(self):
        """Gets the http_code_4xx of this CrawlStatisticsTime.

        

        :return: The http_code_4xx of this CrawlStatisticsTime.
        :rtype: List[CrawlStatisticsTimePoint]
        """
        return self._http_code_4xx

    @http_code_4xx.setter
    def http_code_4xx(self, http_code_4xx):
        """Sets the http_code_4xx of this CrawlStatisticsTime.

        

        :param http_code_4xx: The http_code_4xx of this CrawlStatisticsTime.
        :type http_code_4xx: List[CrawlStatisticsTimePoint]
        """
        if http_code_4xx is None:
            raise ValueError("Invalid value for `http_code_4xx`, must not be `None`")

        self._http_code_4xx = http_code_4xx

    @property
    def http_code_5xx(self):
        """Gets the http_code_5xx of this CrawlStatisticsTime.

        

        :return: The http_code_5xx of this CrawlStatisticsTime.
        :rtype: List[CrawlStatisticsTimePoint]
        """
        return self._http_code_5xx

    @http_code_5xx.setter
    def http_code_5xx(self, http_code_5xx):
        """Sets the http_code_5xx of this CrawlStatisticsTime.

        

        :param http_code_5xx: The http_code_5xx of this CrawlStatisticsTime.
        :type http_code_5xx: List[CrawlStatisticsTimePoint]
        """
        if http_code_5xx is None:
            raise ValueError("Invalid value for `http_code_5xx`, must not be `None`")

        self._http_code_5xx = http_code_5xx

    @property
    def http_code_xxx(self):
        """Gets the http_code_xxx of this CrawlStatisticsTime.

        

        :return: The http_code_xxx of this CrawlStatisticsTime.
        :rtype: List[CrawlStatisticsTimePoint]
        """
        return self._http_code_xxx

    @http_code_xxx.setter
    def http_code_xxx(self, http_code_xxx):
        """Sets the http_code_xxx of this CrawlStatisticsTime.

        

        :param http_code_xxx: The http_code_xxx of this CrawlStatisticsTime.
        :type http_code_xxx: List[CrawlStatisticsTimePoint]
        """
        if http_code_xxx is None:
            raise ValueError("Invalid value for `http_code_xxx`, must not be `None`")

        self._http_code_xxx = http_code_xxx

    @property
    def last_update_date(self):
        """Gets the last_update_date of this CrawlStatisticsTime.

        

        :return: The last_update_date of this CrawlStatisticsTime.
        :rtype: datetime
        """
        return self._last_update_date

    @last_update_date.setter
    def last_update_date(self, last_update_date):
        """Sets the last_update_date of this CrawlStatisticsTime.

        

        :param last_update_date: The last_update_date of this CrawlStatisticsTime.
        :type last_update_date: datetime
        """
        if last_update_date is None:
            raise ValueError("Invalid value for `last_update_date`, must not be `None`")

        self._last_update_date = last_update_date

    @property
    def new_urls(self):
        """Gets the new_urls of this CrawlStatisticsTime.

        

        :return: The new_urls of this CrawlStatisticsTime.
        :rtype: List[CrawlStatisticsTimePoint]
        """
        return self._new_urls

    @new_urls.setter
    def new_urls(self, new_urls):
        """Sets the new_urls of this CrawlStatisticsTime.

        

        :param new_urls: The new_urls of this CrawlStatisticsTime.
        :type new_urls: List[CrawlStatisticsTimePoint]
        """
        if new_urls is None:
            raise ValueError("Invalid value for `new_urls`, must not be `None`")

        self._new_urls = new_urls
