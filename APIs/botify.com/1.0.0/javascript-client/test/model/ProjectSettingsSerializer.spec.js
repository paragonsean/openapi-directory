/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BotifyApi);
  }
}(this, function(expect, BotifyApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BotifyApi.ProjectSettingsSerializer();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectSettingsSerializer', function() {
    it('should create an instance of ProjectSettingsSerializer', function() {
      // uncomment below and update the code to test ProjectSettingsSerializer
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be.a(BotifyApi.ProjectSettingsSerializer);
    });

    it('should have the property allowedDomains (base name: "allowed_domains")', function() {
      // uncomment below and update the code to test the property allowedDomains
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property blacklistedDomains (base name: "blacklisted_domains")', function() {
      // uncomment below and update the code to test the property blacklistedDomains
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property compareCrawl (base name: "compare_crawl")', function() {
      // uncomment below and update the code to test the property compareCrawl
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property crawlGzip (base name: "crawl_gzip")', function() {
      // uncomment below and update the code to test the property crawlGzip
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property extraHeaders (base name: "extra_headers")', function() {
      // uncomment below and update the code to test the property extraHeaders
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property googleAnalyticsAccountEmail (base name: "google_analytics_account_email")', function() {
      // uncomment below and update the code to test the property googleAnalyticsAccountEmail
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property googleAnalyticsNbDays (base name: "google_analytics_nb_days")', function() {
      // uncomment below and update the code to test the property googleAnalyticsNbDays
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property googleAnalyticsSiteId (base name: "google_analytics_site_id")', function() {
      // uncomment below and update the code to test the property googleAnalyticsSiteId
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property googleSocialAuthId (base name: "google_social_auth_id")', function() {
      // uncomment below and update the code to test the property googleSocialAuthId
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property hasRobotsTxt (base name: "has_robots_txt")', function() {
      // uncomment below and update the code to test the property hasRobotsTxt
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property headerSettings (base name: "header_settings")', function() {
      // uncomment below and update the code to test the property headerSettings
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property maxDepth (base name: "max_depth")', function() {
      // uncomment below and update the code to test the property maxDepth
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property maxNbPages (base name: "max_nb_pages")', function() {
      // uncomment below and update the code to test the property maxNbPages
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property maxPagesPerSec (base name: "max_pages_per_sec")', function() {
      // uncomment below and update the code to test the property maxPagesPerSec
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property respectNofollow (base name: "respect_nofollow")', function() {
      // uncomment below and update the code to test the property respectNofollow
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property sitemaps (base name: "sitemaps")', function() {
      // uncomment below and update the code to test the property sitemaps
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property startUrls (base name: "start_urls")', function() {
      // uncomment below and update the code to test the property startUrls
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

    it('should have the property userAgent (base name: "user_agent")', function() {
      // uncomment below and update the code to test the property userAgent
      //var instance = new BotifyApi.ProjectSettingsSerializer();
      //expect(instance).to.be();
    });

  });

}));
