/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CrawlDatamodelField model module.
 * @module model/CrawlDatamodelField
 * @version 1.0.0
 */
class CrawlDatamodelField {
    /**
     * Constructs a new <code>CrawlDatamodelField</code>.
     * @alias module:model/CrawlDatamodelField
     * @param group {String} 
     * @param id {String} 
     * @param multiple {Boolean} 
     * @param name {String} 
     * @param permissions {Array.<String>} 
     * @param subtype {String} 
     * @param type {String} 
     */
    constructor(group, id, multiple, name, permissions, subtype, type) { 
        
        CrawlDatamodelField.initialize(this, group, id, multiple, name, permissions, subtype, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, group, id, multiple, name, permissions, subtype, type) { 
        obj['group'] = group;
        obj['id'] = id;
        obj['multiple'] = multiple;
        obj['name'] = name;
        obj['permissions'] = permissions;
        obj['subtype'] = subtype;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>CrawlDatamodelField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrawlDatamodelField} obj Optional instance to populate.
     * @return {module:model/CrawlDatamodelField} The populated <code>CrawlDatamodelField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrawlDatamodelField();

            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('multiple')) {
                obj['multiple'] = ApiClient.convertToType(data['multiple'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], ['String']);
            }
            if (data.hasOwnProperty('subtype')) {
                obj['subtype'] = ApiClient.convertToType(data['subtype'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CrawlDatamodelField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CrawlDatamodelField</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CrawlDatamodelField.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissions'])) {
            throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
        }
        // ensure the json data is a string
        if (data['subtype'] && !(typeof data['subtype'] === 'string' || data['subtype'] instanceof String)) {
            throw new Error("Expected the field `subtype` to be a primitive type in the JSON string but got " + data['subtype']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

CrawlDatamodelField.RequiredProperties = ["group", "id", "multiple", "name", "permissions", "subtype", "type"];

/**
 * 
 * @member {String} group
 */
CrawlDatamodelField.prototype['group'] = undefined;

/**
 * 
 * @member {String} id
 */
CrawlDatamodelField.prototype['id'] = undefined;

/**
 * 
 * @member {Boolean} multiple
 */
CrawlDatamodelField.prototype['multiple'] = undefined;

/**
 * 
 * @member {String} name
 */
CrawlDatamodelField.prototype['name'] = undefined;

/**
 * 
 * @member {Array.<String>} permissions
 */
CrawlDatamodelField.prototype['permissions'] = undefined;

/**
 * 
 * @member {String} subtype
 */
CrawlDatamodelField.prototype['subtype'] = undefined;

/**
 * 
 * @member {String} type
 */
CrawlDatamodelField.prototype['type'] = undefined;






export default CrawlDatamodelField;

