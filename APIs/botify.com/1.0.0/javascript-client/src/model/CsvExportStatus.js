/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UrlsQuery from './UrlsQuery';

/**
 * The CsvExportStatus model module.
 * @module model/CsvExportStatus
 * @version 1.0.0
 */
class CsvExportStatus {
    /**
     * Constructs a new <code>CsvExportStatus</code>.
     * @alias module:model/CsvExportStatus
     * @param query {module:model/UrlsQuery} 
     */
    constructor(query) { 
        
        CsvExportStatus.initialize(this, query);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, query) { 
        obj['query'] = query;
    }

    /**
     * Constructs a <code>CsvExportStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CsvExportStatus} obj Optional instance to populate.
     * @return {module:model/CsvExportStatus} The populated <code>CsvExportStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CsvExportStatus();

            if (data.hasOwnProperty('area')) {
                obj['area'] = ApiClient.convertToType(data['area'], 'Number');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('job_id')) {
                obj['job_id'] = ApiClient.convertToType(data['job_id'], 'String');
            }
            if (data.hasOwnProperty('job_status')) {
                obj['job_status'] = ApiClient.convertToType(data['job_status'], 'String');
            }
            if (data.hasOwnProperty('job_url')) {
                obj['job_url'] = ApiClient.convertToType(data['job_url'], 'String');
            }
            if (data.hasOwnProperty('nb_results')) {
                obj['nb_results'] = ApiClient.convertToType(data['nb_results'], 'Number');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = UrlsQuery.constructFromObject(data['query']);
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CsvExportStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CsvExportStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CsvExportStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['job_id'] && !(typeof data['job_id'] === 'string' || data['job_id'] instanceof String)) {
            throw new Error("Expected the field `job_id` to be a primitive type in the JSON string but got " + data['job_id']);
        }
        // ensure the json data is a string
        if (data['job_status'] && !(typeof data['job_status'] === 'string' || data['job_status'] instanceof String)) {
            throw new Error("Expected the field `job_status` to be a primitive type in the JSON string but got " + data['job_status']);
        }
        // ensure the json data is a string
        if (data['job_url'] && !(typeof data['job_url'] === 'string' || data['job_url'] instanceof String)) {
            throw new Error("Expected the field `job_url` to be a primitive type in the JSON string but got " + data['job_url']);
        }
        // validate the optional field `query`
        if (data['query']) { // data not null
          UrlsQuery.validateJSON(data['query']);
        }
        // ensure the json data is a string
        if (data['results'] && !(typeof data['results'] === 'string' || data['results'] instanceof String)) {
            throw new Error("Expected the field `results` to be a primitive type in the JSON string but got " + data['results']);
        }

        return true;
    }


}

CsvExportStatus.RequiredProperties = ["query"];

/**
 * 
 * @member {Number} area
 */
CsvExportStatus.prototype['area'] = undefined;

/**
 * 
 * @member {Date} date_created
 */
CsvExportStatus.prototype['date_created'] = undefined;

/**
 * 
 * @member {String} job_id
 */
CsvExportStatus.prototype['job_id'] = undefined;

/**
 * 
 * @member {String} job_status
 */
CsvExportStatus.prototype['job_status'] = undefined;

/**
 * 
 * @member {String} job_url
 */
CsvExportStatus.prototype['job_url'] = undefined;

/**
 * 
 * @member {Number} nb_results
 */
CsvExportStatus.prototype['nb_results'] = undefined;

/**
 * @member {module:model/UrlsQuery} query
 */
CsvExportStatus.prototype['query'] = undefined;

/**
 * 
 * @member {String} results
 */
CsvExportStatus.prototype['results'] = undefined;






export default CsvExportStatus;

