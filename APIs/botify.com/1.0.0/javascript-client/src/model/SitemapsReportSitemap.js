/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SitemapsReportSitemapError from './SitemapsReportSitemapError';

/**
 * The SitemapsReportSitemap model module.
 * @module model/SitemapsReportSitemap
 * @version 1.0.0
 */
class SitemapsReportSitemap {
    /**
     * Constructs a new <code>SitemapsReportSitemap</code>.
     * @alias module:model/SitemapsReportSitemap
     * @param url {String} 
     */
    constructor(url) { 
        
        SitemapsReportSitemap.initialize(this, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url) { 
        obj['url'] = url;
    }

    /**
     * Constructs a <code>SitemapsReportSitemap</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SitemapsReportSitemap} obj Optional instance to populate.
     * @return {module:model/SitemapsReportSitemap} The populated <code>SitemapsReportSitemap</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SitemapsReportSitemap();

            if (data.hasOwnProperty('error')) {
                obj['error'] = SitemapsReportSitemapError.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('file_type')) {
                obj['file_type'] = ApiClient.convertToType(data['file_type'], 'String');
            }
            if (data.hasOwnProperty('invalid_urls')) {
                obj['invalid_urls'] = ApiClient.convertToType(data['invalid_urls'], 'Number');
            }
            if (data.hasOwnProperty('sitemap_indexes')) {
                obj['sitemap_indexes'] = ApiClient.convertToType(data['sitemap_indexes'], ['String']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('valid_urls')) {
                obj['valid_urls'] = ApiClient.convertToType(data['valid_urls'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SitemapsReportSitemap</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SitemapsReportSitemap</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SitemapsReportSitemap.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          SitemapsReportSitemapError.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['file_type'] && !(typeof data['file_type'] === 'string' || data['file_type'] instanceof String)) {
            throw new Error("Expected the field `file_type` to be a primitive type in the JSON string but got " + data['file_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sitemap_indexes'])) {
            throw new Error("Expected the field `sitemap_indexes` to be an array in the JSON data but got " + data['sitemap_indexes']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

SitemapsReportSitemap.RequiredProperties = ["url"];

/**
 * @member {module:model/SitemapsReportSitemapError} error
 */
SitemapsReportSitemap.prototype['error'] = undefined;

/**
 * 
 * @member {String} file_type
 */
SitemapsReportSitemap.prototype['file_type'] = undefined;

/**
 * 
 * @member {Number} invalid_urls
 */
SitemapsReportSitemap.prototype['invalid_urls'] = undefined;

/**
 * 
 * @member {Array.<String>} sitemap_indexes
 */
SitemapsReportSitemap.prototype['sitemap_indexes'] = undefined;

/**
 * 
 * @member {String} url
 */
SitemapsReportSitemap.prototype['url'] = undefined;

/**
 * 
 * @member {Number} valid_urls
 */
SitemapsReportSitemap.prototype['valid_urls'] = undefined;






export default SitemapsReportSitemap;

