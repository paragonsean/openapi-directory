/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RewritingRuleSerializer from './RewritingRuleSerializer';

/**
 * The URLRewritingRulesSerializer model module.
 * @module model/URLRewritingRulesSerializer
 * @version 1.0.0
 */
class URLRewritingRulesSerializer {
    /**
     * Constructs a new <code>URLRewritingRulesSerializer</code>.
     * @alias module:model/URLRewritingRulesSerializer
     * @param rules {Array.<module:model/RewritingRuleSerializer>} 
     * @param urls {Array.<String>} 
     */
    constructor(rules, urls) { 
        
        URLRewritingRulesSerializer.initialize(this, rules, urls);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rules, urls) { 
        obj['rules'] = rules;
        obj['urls'] = urls;
    }

    /**
     * Constructs a <code>URLRewritingRulesSerializer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/URLRewritingRulesSerializer} obj Optional instance to populate.
     * @return {module:model/URLRewritingRulesSerializer} The populated <code>URLRewritingRulesSerializer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new URLRewritingRulesSerializer();

            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [RewritingRuleSerializer]);
            }
            if (data.hasOwnProperty('urls')) {
                obj['urls'] = ApiClient.convertToType(data['urls'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>URLRewritingRulesSerializer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>URLRewritingRulesSerializer</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of URLRewritingRulesSerializer.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                RewritingRuleSerializer.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['urls'])) {
            throw new Error("Expected the field `urls` to be an array in the JSON data but got " + data['urls']);
        }

        return true;
    }


}

URLRewritingRulesSerializer.RequiredProperties = ["rules", "urls"];

/**
 * 
 * @member {Array.<module:model/RewritingRuleSerializer>} rules
 */
URLRewritingRulesSerializer.prototype['rules'] = undefined;

/**
 * 
 * @member {Array.<String>} urls
 */
URLRewritingRulesSerializer.prototype['urls'] = undefined;






export default URLRewritingRulesSerializer;

