/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UrlsQuery model module.
 * @module model/UrlsQuery
 * @version 1.0.0
 */
class UrlsQuery {
    /**
     * Constructs a new <code>UrlsQuery</code>.
     * @alias module:model/UrlsQuery
     */
    constructor() { 
        
        UrlsQuery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UrlsQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UrlsQuery} obj Optional instance to populate.
     * @return {module:model/UrlsQuery} The populated <code>UrlsQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UrlsQuery();

            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], ['String']);
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], Object);
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UrlsQuery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UrlsQuery</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['fields'])) {
            throw new Error("Expected the field `fields` to be an array in the JSON data but got " + data['fields']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sort'])) {
            throw new Error("Expected the field `sort` to be an array in the JSON data but got " + data['sort']);
        }

        return true;
    }


}



/**
 * 
 * @member {Array.<String>} fields
 */
UrlsQuery.prototype['fields'] = undefined;

/**
 * 
 * @member {Object} filters
 */
UrlsQuery.prototype['filters'] = undefined;

/**
 * 
 * @member {Array.<Object>} sort
 */
UrlsQuery.prototype['sort'] = undefined;






export default UrlsQuery;

