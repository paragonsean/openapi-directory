/*
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProjectSettingsSerializer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:58:20.270781-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProjectSettingsSerializer {
  public static final String SERIALIZED_NAME_ALLOWED_DOMAINS = "allowed_domains";
  @SerializedName(SERIALIZED_NAME_ALLOWED_DOMAINS)
  private List<String> allowedDomains = new ArrayList<>();

  public static final String SERIALIZED_NAME_BLACKLISTED_DOMAINS = "blacklisted_domains";
  @SerializedName(SERIALIZED_NAME_BLACKLISTED_DOMAINS)
  private List<String> blacklistedDomains = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMPARE_CRAWL = "compare_crawl";
  @SerializedName(SERIALIZED_NAME_COMPARE_CRAWL)
  private Boolean compareCrawl;

  public static final String SERIALIZED_NAME_CRAWL_GZIP = "crawl_gzip";
  @SerializedName(SERIALIZED_NAME_CRAWL_GZIP)
  private Boolean crawlGzip;

  public static final String SERIALIZED_NAME_EXTRA_HEADERS = "extra_headers";
  @SerializedName(SERIALIZED_NAME_EXTRA_HEADERS)
  private String extraHeaders;

  public static final String SERIALIZED_NAME_GOOGLE_ANALYTICS_ACCOUNT_EMAIL = "google_analytics_account_email";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ANALYTICS_ACCOUNT_EMAIL)
  private String googleAnalyticsAccountEmail;

  public static final String SERIALIZED_NAME_GOOGLE_ANALYTICS_NB_DAYS = "google_analytics_nb_days";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ANALYTICS_NB_DAYS)
  private Long googleAnalyticsNbDays;

  public static final String SERIALIZED_NAME_GOOGLE_ANALYTICS_SITE_ID = "google_analytics_site_id";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ANALYTICS_SITE_ID)
  private Long googleAnalyticsSiteId;

  public static final String SERIALIZED_NAME_GOOGLE_SOCIAL_AUTH_ID = "google_social_auth_id";
  @SerializedName(SERIALIZED_NAME_GOOGLE_SOCIAL_AUTH_ID)
  private Long googleSocialAuthId;

  public static final String SERIALIZED_NAME_HAS_ROBOTS_TXT = "has_robots_txt";
  @SerializedName(SERIALIZED_NAME_HAS_ROBOTS_TXT)
  private String hasRobotsTxt;

  public static final String SERIALIZED_NAME_HEADER_SETTINGS = "header_settings";
  @SerializedName(SERIALIZED_NAME_HEADER_SETTINGS)
  private List<String> headerSettings = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_DEPTH = "max_depth";
  @SerializedName(SERIALIZED_NAME_MAX_DEPTH)
  private Long maxDepth;

  public static final String SERIALIZED_NAME_MAX_NB_PAGES = "max_nb_pages";
  @SerializedName(SERIALIZED_NAME_MAX_NB_PAGES)
  private Long maxNbPages;

  public static final String SERIALIZED_NAME_MAX_PAGES_PER_SEC = "max_pages_per_sec";
  @SerializedName(SERIALIZED_NAME_MAX_PAGES_PER_SEC)
  private Long maxPagesPerSec;

  public static final String SERIALIZED_NAME_RESPECT_NOFOLLOW = "respect_nofollow";
  @SerializedName(SERIALIZED_NAME_RESPECT_NOFOLLOW)
  private Boolean respectNofollow;

  public static final String SERIALIZED_NAME_SITEMAPS = "sitemaps";
  @SerializedName(SERIALIZED_NAME_SITEMAPS)
  private List<String> sitemaps = new ArrayList<>();

  public static final String SERIALIZED_NAME_START_URLS = "start_urls";
  @SerializedName(SERIALIZED_NAME_START_URLS)
  private List<String> startUrls = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_AGENT = "user_agent";
  @SerializedName(SERIALIZED_NAME_USER_AGENT)
  private String userAgent;

  public ProjectSettingsSerializer() {
  }

  public ProjectSettingsSerializer(
     String hasRobotsTxt
  ) {
    this();
    this.hasRobotsTxt = hasRobotsTxt;
  }

  public ProjectSettingsSerializer allowedDomains(List<String> allowedDomains) {
    this.allowedDomains = allowedDomains;
    return this;
  }

  public ProjectSettingsSerializer addAllowedDomainsItem(String allowedDomainsItem) {
    if (this.allowedDomains == null) {
      this.allowedDomains = new ArrayList<>();
    }
    this.allowedDomains.add(allowedDomainsItem);
    return this;
  }

  /**
   * 
   * @return allowedDomains
   */
  @javax.annotation.Nonnull
  public List<String> getAllowedDomains() {
    return allowedDomains;
  }

  public void setAllowedDomains(List<String> allowedDomains) {
    this.allowedDomains = allowedDomains;
  }


  public ProjectSettingsSerializer blacklistedDomains(List<String> blacklistedDomains) {
    this.blacklistedDomains = blacklistedDomains;
    return this;
  }

  public ProjectSettingsSerializer addBlacklistedDomainsItem(String blacklistedDomainsItem) {
    if (this.blacklistedDomains == null) {
      this.blacklistedDomains = new ArrayList<>();
    }
    this.blacklistedDomains.add(blacklistedDomainsItem);
    return this;
  }

  /**
   * 
   * @return blacklistedDomains
   */
  @javax.annotation.Nonnull
  public List<String> getBlacklistedDomains() {
    return blacklistedDomains;
  }

  public void setBlacklistedDomains(List<String> blacklistedDomains) {
    this.blacklistedDomains = blacklistedDomains;
  }


  public ProjectSettingsSerializer compareCrawl(Boolean compareCrawl) {
    this.compareCrawl = compareCrawl;
    return this;
  }

  /**
   * 
   * @return compareCrawl
   */
  @javax.annotation.Nullable
  public Boolean getCompareCrawl() {
    return compareCrawl;
  }

  public void setCompareCrawl(Boolean compareCrawl) {
    this.compareCrawl = compareCrawl;
  }


  public ProjectSettingsSerializer crawlGzip(Boolean crawlGzip) {
    this.crawlGzip = crawlGzip;
    return this;
  }

  /**
   * 
   * @return crawlGzip
   */
  @javax.annotation.Nullable
  public Boolean getCrawlGzip() {
    return crawlGzip;
  }

  public void setCrawlGzip(Boolean crawlGzip) {
    this.crawlGzip = crawlGzip;
  }


  public ProjectSettingsSerializer extraHeaders(String extraHeaders) {
    this.extraHeaders = extraHeaders;
    return this;
  }

  /**
   * 
   * @return extraHeaders
   */
  @javax.annotation.Nullable
  public String getExtraHeaders() {
    return extraHeaders;
  }

  public void setExtraHeaders(String extraHeaders) {
    this.extraHeaders = extraHeaders;
  }


  public ProjectSettingsSerializer googleAnalyticsAccountEmail(String googleAnalyticsAccountEmail) {
    this.googleAnalyticsAccountEmail = googleAnalyticsAccountEmail;
    return this;
  }

  /**
   * Keep email in case user delete his social auth connection
   * @return googleAnalyticsAccountEmail
   */
  @javax.annotation.Nullable
  public String getGoogleAnalyticsAccountEmail() {
    return googleAnalyticsAccountEmail;
  }

  public void setGoogleAnalyticsAccountEmail(String googleAnalyticsAccountEmail) {
    this.googleAnalyticsAccountEmail = googleAnalyticsAccountEmail;
  }


  public ProjectSettingsSerializer googleAnalyticsNbDays(Long googleAnalyticsNbDays) {
    this.googleAnalyticsNbDays = googleAnalyticsNbDays;
    return this;
  }

  /**
   * 
   * minimum: 1
   * maximum: 90
   * @return googleAnalyticsNbDays
   */
  @javax.annotation.Nullable
  public Long getGoogleAnalyticsNbDays() {
    return googleAnalyticsNbDays;
  }

  public void setGoogleAnalyticsNbDays(Long googleAnalyticsNbDays) {
    this.googleAnalyticsNbDays = googleAnalyticsNbDays;
  }


  public ProjectSettingsSerializer googleAnalyticsSiteId(Long googleAnalyticsSiteId) {
    this.googleAnalyticsSiteId = googleAnalyticsSiteId;
    return this;
  }

  /**
   * 
   * minimum: -2147483648
   * maximum: 2147483647
   * @return googleAnalyticsSiteId
   */
  @javax.annotation.Nullable
  public Long getGoogleAnalyticsSiteId() {
    return googleAnalyticsSiteId;
  }

  public void setGoogleAnalyticsSiteId(Long googleAnalyticsSiteId) {
    this.googleAnalyticsSiteId = googleAnalyticsSiteId;
  }


  public ProjectSettingsSerializer googleSocialAuthId(Long googleSocialAuthId) {
    this.googleSocialAuthId = googleSocialAuthId;
    return this;
  }

  /**
   * 
   * minimum: -2147483648
   * maximum: 2147483647
   * @return googleSocialAuthId
   */
  @javax.annotation.Nullable
  public Long getGoogleSocialAuthId() {
    return googleSocialAuthId;
  }

  public void setGoogleSocialAuthId(Long googleSocialAuthId) {
    this.googleSocialAuthId = googleSocialAuthId;
  }


  /**
   * 
   * @return hasRobotsTxt
   */
  @javax.annotation.Nullable
  public String getHasRobotsTxt() {
    return hasRobotsTxt;
  }



  public ProjectSettingsSerializer headerSettings(List<String> headerSettings) {
    this.headerSettings = headerSettings;
    return this;
  }

  public ProjectSettingsSerializer addHeaderSettingsItem(String headerSettingsItem) {
    if (this.headerSettings == null) {
      this.headerSettings = new ArrayList<>();
    }
    this.headerSettings.add(headerSettingsItem);
    return this;
  }

  /**
   * 
   * @return headerSettings
   */
  @javax.annotation.Nonnull
  public List<String> getHeaderSettings() {
    return headerSettings;
  }

  public void setHeaderSettings(List<String> headerSettings) {
    this.headerSettings = headerSettings;
  }


  public ProjectSettingsSerializer maxDepth(Long maxDepth) {
    this.maxDepth = maxDepth;
    return this;
  }

  /**
   * 
   * minimum: 0
   * maximum: 2147483647
   * @return maxDepth
   */
  @javax.annotation.Nullable
  public Long getMaxDepth() {
    return maxDepth;
  }

  public void setMaxDepth(Long maxDepth) {
    this.maxDepth = maxDepth;
  }


  public ProjectSettingsSerializer maxNbPages(Long maxNbPages) {
    this.maxNbPages = maxNbPages;
    return this;
  }

  /**
   * 
   * minimum: 1
   * maximum: 2147483647
   * @return maxNbPages
   */
  @javax.annotation.Nonnull
  public Long getMaxNbPages() {
    return maxNbPages;
  }

  public void setMaxNbPages(Long maxNbPages) {
    this.maxNbPages = maxNbPages;
  }


  public ProjectSettingsSerializer maxPagesPerSec(Long maxPagesPerSec) {
    this.maxPagesPerSec = maxPagesPerSec;
    return this;
  }

  /**
   * 
   * minimum: 1
   * maximum: 2147483647
   * @return maxPagesPerSec
   */
  @javax.annotation.Nullable
  public Long getMaxPagesPerSec() {
    return maxPagesPerSec;
  }

  public void setMaxPagesPerSec(Long maxPagesPerSec) {
    this.maxPagesPerSec = maxPagesPerSec;
  }


  public ProjectSettingsSerializer respectNofollow(Boolean respectNofollow) {
    this.respectNofollow = respectNofollow;
    return this;
  }

  /**
   * 
   * @return respectNofollow
   */
  @javax.annotation.Nullable
  public Boolean getRespectNofollow() {
    return respectNofollow;
  }

  public void setRespectNofollow(Boolean respectNofollow) {
    this.respectNofollow = respectNofollow;
  }


  public ProjectSettingsSerializer sitemaps(List<String> sitemaps) {
    this.sitemaps = sitemaps;
    return this;
  }

  public ProjectSettingsSerializer addSitemapsItem(String sitemapsItem) {
    if (this.sitemaps == null) {
      this.sitemaps = new ArrayList<>();
    }
    this.sitemaps.add(sitemapsItem);
    return this;
  }

  /**
   * 
   * @return sitemaps
   */
  @javax.annotation.Nonnull
  public List<String> getSitemaps() {
    return sitemaps;
  }

  public void setSitemaps(List<String> sitemaps) {
    this.sitemaps = sitemaps;
  }


  public ProjectSettingsSerializer startUrls(List<String> startUrls) {
    this.startUrls = startUrls;
    return this;
  }

  public ProjectSettingsSerializer addStartUrlsItem(String startUrlsItem) {
    if (this.startUrls == null) {
      this.startUrls = new ArrayList<>();
    }
    this.startUrls.add(startUrlsItem);
    return this;
  }

  /**
   * 
   * @return startUrls
   */
  @javax.annotation.Nonnull
  public List<String> getStartUrls() {
    return startUrls;
  }

  public void setStartUrls(List<String> startUrls) {
    this.startUrls = startUrls;
  }


  public ProjectSettingsSerializer userAgent(String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

  /**
   * 
   * @return userAgent
   */
  @javax.annotation.Nullable
  public String getUserAgent() {
    return userAgent;
  }

  public void setUserAgent(String userAgent) {
    this.userAgent = userAgent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectSettingsSerializer projectSettingsSerializer = (ProjectSettingsSerializer) o;
    return Objects.equals(this.allowedDomains, projectSettingsSerializer.allowedDomains) &&
        Objects.equals(this.blacklistedDomains, projectSettingsSerializer.blacklistedDomains) &&
        Objects.equals(this.compareCrawl, projectSettingsSerializer.compareCrawl) &&
        Objects.equals(this.crawlGzip, projectSettingsSerializer.crawlGzip) &&
        Objects.equals(this.extraHeaders, projectSettingsSerializer.extraHeaders) &&
        Objects.equals(this.googleAnalyticsAccountEmail, projectSettingsSerializer.googleAnalyticsAccountEmail) &&
        Objects.equals(this.googleAnalyticsNbDays, projectSettingsSerializer.googleAnalyticsNbDays) &&
        Objects.equals(this.googleAnalyticsSiteId, projectSettingsSerializer.googleAnalyticsSiteId) &&
        Objects.equals(this.googleSocialAuthId, projectSettingsSerializer.googleSocialAuthId) &&
        Objects.equals(this.hasRobotsTxt, projectSettingsSerializer.hasRobotsTxt) &&
        Objects.equals(this.headerSettings, projectSettingsSerializer.headerSettings) &&
        Objects.equals(this.maxDepth, projectSettingsSerializer.maxDepth) &&
        Objects.equals(this.maxNbPages, projectSettingsSerializer.maxNbPages) &&
        Objects.equals(this.maxPagesPerSec, projectSettingsSerializer.maxPagesPerSec) &&
        Objects.equals(this.respectNofollow, projectSettingsSerializer.respectNofollow) &&
        Objects.equals(this.sitemaps, projectSettingsSerializer.sitemaps) &&
        Objects.equals(this.startUrls, projectSettingsSerializer.startUrls) &&
        Objects.equals(this.userAgent, projectSettingsSerializer.userAgent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedDomains, blacklistedDomains, compareCrawl, crawlGzip, extraHeaders, googleAnalyticsAccountEmail, googleAnalyticsNbDays, googleAnalyticsSiteId, googleSocialAuthId, hasRobotsTxt, headerSettings, maxDepth, maxNbPages, maxPagesPerSec, respectNofollow, sitemaps, startUrls, userAgent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectSettingsSerializer {\n");
    sb.append("    allowedDomains: ").append(toIndentedString(allowedDomains)).append("\n");
    sb.append("    blacklistedDomains: ").append(toIndentedString(blacklistedDomains)).append("\n");
    sb.append("    compareCrawl: ").append(toIndentedString(compareCrawl)).append("\n");
    sb.append("    crawlGzip: ").append(toIndentedString(crawlGzip)).append("\n");
    sb.append("    extraHeaders: ").append(toIndentedString(extraHeaders)).append("\n");
    sb.append("    googleAnalyticsAccountEmail: ").append(toIndentedString(googleAnalyticsAccountEmail)).append("\n");
    sb.append("    googleAnalyticsNbDays: ").append(toIndentedString(googleAnalyticsNbDays)).append("\n");
    sb.append("    googleAnalyticsSiteId: ").append(toIndentedString(googleAnalyticsSiteId)).append("\n");
    sb.append("    googleSocialAuthId: ").append(toIndentedString(googleSocialAuthId)).append("\n");
    sb.append("    hasRobotsTxt: ").append(toIndentedString(hasRobotsTxt)).append("\n");
    sb.append("    headerSettings: ").append(toIndentedString(headerSettings)).append("\n");
    sb.append("    maxDepth: ").append(toIndentedString(maxDepth)).append("\n");
    sb.append("    maxNbPages: ").append(toIndentedString(maxNbPages)).append("\n");
    sb.append("    maxPagesPerSec: ").append(toIndentedString(maxPagesPerSec)).append("\n");
    sb.append("    respectNofollow: ").append(toIndentedString(respectNofollow)).append("\n");
    sb.append("    sitemaps: ").append(toIndentedString(sitemaps)).append("\n");
    sb.append("    startUrls: ").append(toIndentedString(startUrls)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowed_domains");
    openapiFields.add("blacklisted_domains");
    openapiFields.add("compare_crawl");
    openapiFields.add("crawl_gzip");
    openapiFields.add("extra_headers");
    openapiFields.add("google_analytics_account_email");
    openapiFields.add("google_analytics_nb_days");
    openapiFields.add("google_analytics_site_id");
    openapiFields.add("google_social_auth_id");
    openapiFields.add("has_robots_txt");
    openapiFields.add("header_settings");
    openapiFields.add("max_depth");
    openapiFields.add("max_nb_pages");
    openapiFields.add("max_pages_per_sec");
    openapiFields.add("respect_nofollow");
    openapiFields.add("sitemaps");
    openapiFields.add("start_urls");
    openapiFields.add("user_agent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("allowed_domains");
    openapiRequiredFields.add("blacklisted_domains");
    openapiRequiredFields.add("header_settings");
    openapiRequiredFields.add("max_nb_pages");
    openapiRequiredFields.add("sitemaps");
    openapiRequiredFields.add("start_urls");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProjectSettingsSerializer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProjectSettingsSerializer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProjectSettingsSerializer is not found in the empty JSON string", ProjectSettingsSerializer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProjectSettingsSerializer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProjectSettingsSerializer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ProjectSettingsSerializer.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("allowed_domains") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("allowed_domains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_domains` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_domains").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("blacklisted_domains") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("blacklisted_domains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `blacklisted_domains` to be an array in the JSON string but got `%s`", jsonObj.get("blacklisted_domains").toString()));
      }
      if ((jsonObj.get("extra_headers") != null && !jsonObj.get("extra_headers").isJsonNull()) && !jsonObj.get("extra_headers").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extra_headers` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extra_headers").toString()));
      }
      if ((jsonObj.get("google_analytics_account_email") != null && !jsonObj.get("google_analytics_account_email").isJsonNull()) && !jsonObj.get("google_analytics_account_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `google_analytics_account_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("google_analytics_account_email").toString()));
      }
      if ((jsonObj.get("has_robots_txt") != null && !jsonObj.get("has_robots_txt").isJsonNull()) && !jsonObj.get("has_robots_txt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `has_robots_txt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("has_robots_txt").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("header_settings") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("header_settings").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `header_settings` to be an array in the JSON string but got `%s`", jsonObj.get("header_settings").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("sitemaps") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("sitemaps").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sitemaps` to be an array in the JSON string but got `%s`", jsonObj.get("sitemaps").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("start_urls") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("start_urls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_urls` to be an array in the JSON string but got `%s`", jsonObj.get("start_urls").toString()));
      }
      if ((jsonObj.get("user_agent") != null && !jsonObj.get("user_agent").isJsonNull()) && !jsonObj.get("user_agent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_agent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_agent").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProjectSettingsSerializer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProjectSettingsSerializer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProjectSettingsSerializer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProjectSettingsSerializer.class));

       return (TypeAdapter<T>) new TypeAdapter<ProjectSettingsSerializer>() {
           @Override
           public void write(JsonWriter out, ProjectSettingsSerializer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProjectSettingsSerializer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProjectSettingsSerializer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProjectSettingsSerializer
   * @throws IOException if the JSON string is invalid with respect to ProjectSettingsSerializer
   */
  public static ProjectSettingsSerializer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProjectSettingsSerializer.class);
  }

  /**
   * Convert an instance of ProjectSettingsSerializer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

