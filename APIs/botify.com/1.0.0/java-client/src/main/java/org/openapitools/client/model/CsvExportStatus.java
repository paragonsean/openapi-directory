/*
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.UrlsQuery;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CsvExportStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:58:20.270781-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CsvExportStatus {
  public static final String SERIALIZED_NAME_AREA = "area";
  @SerializedName(SERIALIZED_NAME_AREA)
  private Long area;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_JOB_ID = "job_id";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private String jobId;

  public static final String SERIALIZED_NAME_JOB_STATUS = "job_status";
  @SerializedName(SERIALIZED_NAME_JOB_STATUS)
  private String jobStatus;

  public static final String SERIALIZED_NAME_JOB_URL = "job_url";
  @SerializedName(SERIALIZED_NAME_JOB_URL)
  private String jobUrl;

  public static final String SERIALIZED_NAME_NB_RESULTS = "nb_results";
  @SerializedName(SERIALIZED_NAME_NB_RESULTS)
  private Long nbResults;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private UrlsQuery query;

  public static final String SERIALIZED_NAME_RESULTS = "results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private String results;

  public CsvExportStatus() {
  }

  public CsvExportStatus(
     OffsetDateTime dateCreated, 
     String jobId, 
     String jobStatus, 
     String jobUrl, 
     String results
  ) {
    this();
    this.dateCreated = dateCreated;
    this.jobId = jobId;
    this.jobStatus = jobStatus;
    this.jobUrl = jobUrl;
    this.results = results;
  }

  public CsvExportStatus area(Long area) {
    this.area = area;
    return this;
  }

  /**
   * 
   * @return area
   */
  @javax.annotation.Nullable
  public Long getArea() {
    return area;
  }

  public void setArea(Long area) {
    this.area = area;
  }


  /**
   * 
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }



  /**
   * 
   * @return jobId
   */
  @javax.annotation.Nullable
  public String getJobId() {
    return jobId;
  }



  /**
   * 
   * @return jobStatus
   */
  @javax.annotation.Nullable
  public String getJobStatus() {
    return jobStatus;
  }



  /**
   * 
   * @return jobUrl
   */
  @javax.annotation.Nullable
  public String getJobUrl() {
    return jobUrl;
  }



  public CsvExportStatus nbResults(Long nbResults) {
    this.nbResults = nbResults;
    return this;
  }

  /**
   * 
   * minimum: 0
   * maximum: 2147483647
   * @return nbResults
   */
  @javax.annotation.Nullable
  public Long getNbResults() {
    return nbResults;
  }

  public void setNbResults(Long nbResults) {
    this.nbResults = nbResults;
  }


  public CsvExportStatus query(UrlsQuery query) {
    this.query = query;
    return this;
  }

  /**
   * Get query
   * @return query
   */
  @javax.annotation.Nonnull
  public UrlsQuery getQuery() {
    return query;
  }

  public void setQuery(UrlsQuery query) {
    this.query = query;
  }


  /**
   * 
   * @return results
   */
  @javax.annotation.Nullable
  public String getResults() {
    return results;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CsvExportStatus csvExportStatus = (CsvExportStatus) o;
    return Objects.equals(this.area, csvExportStatus.area) &&
        Objects.equals(this.dateCreated, csvExportStatus.dateCreated) &&
        Objects.equals(this.jobId, csvExportStatus.jobId) &&
        Objects.equals(this.jobStatus, csvExportStatus.jobStatus) &&
        Objects.equals(this.jobUrl, csvExportStatus.jobUrl) &&
        Objects.equals(this.nbResults, csvExportStatus.nbResults) &&
        Objects.equals(this.query, csvExportStatus.query) &&
        Objects.equals(this.results, csvExportStatus.results);
  }

  @Override
  public int hashCode() {
    return Objects.hash(area, dateCreated, jobId, jobStatus, jobUrl, nbResults, query, results);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CsvExportStatus {\n");
    sb.append("    area: ").append(toIndentedString(area)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobStatus: ").append(toIndentedString(jobStatus)).append("\n");
    sb.append("    jobUrl: ").append(toIndentedString(jobUrl)).append("\n");
    sb.append("    nbResults: ").append(toIndentedString(nbResults)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("area");
    openapiFields.add("date_created");
    openapiFields.add("job_id");
    openapiFields.add("job_status");
    openapiFields.add("job_url");
    openapiFields.add("nb_results");
    openapiFields.add("query");
    openapiFields.add("results");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("query");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CsvExportStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CsvExportStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CsvExportStatus is not found in the empty JSON string", CsvExportStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CsvExportStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CsvExportStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CsvExportStatus.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("job_id") != null && !jsonObj.get("job_id").isJsonNull()) && !jsonObj.get("job_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_id").toString()));
      }
      if ((jsonObj.get("job_status") != null && !jsonObj.get("job_status").isJsonNull()) && !jsonObj.get("job_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_status").toString()));
      }
      if ((jsonObj.get("job_url") != null && !jsonObj.get("job_url").isJsonNull()) && !jsonObj.get("job_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_url").toString()));
      }
      // validate the required field `query`
      UrlsQuery.validateJsonElement(jsonObj.get("query"));
      if ((jsonObj.get("results") != null && !jsonObj.get("results").isJsonNull()) && !jsonObj.get("results").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `results` to be a primitive type in the JSON string but got `%s`", jsonObj.get("results").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CsvExportStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CsvExportStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CsvExportStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CsvExportStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<CsvExportStatus>() {
           @Override
           public void write(JsonWriter out, CsvExportStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CsvExportStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CsvExportStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CsvExportStatus
   * @throws IOException if the JSON string is invalid with respect to CsvExportStatus
   */
  public static CsvExportStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CsvExportStatus.class);
  }

  /**
   * Convert an instance of CsvExportStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

