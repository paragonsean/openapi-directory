/*
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CrawlStatisticsTimePoint;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CrawlStatisticsTime
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:58:20.270781-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CrawlStatisticsTime {
  public static final String SERIALIZED_NAME_AVG_DELAY = "avg_delay";
  @SerializedName(SERIALIZED_NAME_AVG_DELAY)
  private List<CrawlStatisticsTimePoint> avgDelay = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVG_SIZE = "avg_size";
  @SerializedName(SERIALIZED_NAME_AVG_SIZE)
  private List<CrawlStatisticsTimePoint> avgSize = new ArrayList<>();

  public static final String SERIALIZED_NAME_FREQUENCY = "frequency";
  @SerializedName(SERIALIZED_NAME_FREQUENCY)
  private String frequency;

  public static final String SERIALIZED_NAME_HTTP_CODE2XX = "http_code_2xx";
  @SerializedName(SERIALIZED_NAME_HTTP_CODE2XX)
  private List<CrawlStatisticsTimePoint> httpCode2xx = new ArrayList<>();

  public static final String SERIALIZED_NAME_HTTP_CODE3XX = "http_code_3xx";
  @SerializedName(SERIALIZED_NAME_HTTP_CODE3XX)
  private List<CrawlStatisticsTimePoint> httpCode3xx = new ArrayList<>();

  public static final String SERIALIZED_NAME_HTTP_CODE4XX = "http_code_4xx";
  @SerializedName(SERIALIZED_NAME_HTTP_CODE4XX)
  private List<CrawlStatisticsTimePoint> httpCode4xx = new ArrayList<>();

  public static final String SERIALIZED_NAME_HTTP_CODE5XX = "http_code_5xx";
  @SerializedName(SERIALIZED_NAME_HTTP_CODE5XX)
  private List<CrawlStatisticsTimePoint> httpCode5xx = new ArrayList<>();

  public static final String SERIALIZED_NAME_HTTP_CODE_XXX = "http_code_xxx";
  @SerializedName(SERIALIZED_NAME_HTTP_CODE_XXX)
  private List<CrawlStatisticsTimePoint> httpCodeXxx = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_UPDATE_DATE = "last_update_date";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_DATE)
  private OffsetDateTime lastUpdateDate;

  public static final String SERIALIZED_NAME_NEW_URLS = "new_urls";
  @SerializedName(SERIALIZED_NAME_NEW_URLS)
  private List<CrawlStatisticsTimePoint> newUrls = new ArrayList<>();

  public CrawlStatisticsTime() {
  }

  public CrawlStatisticsTime avgDelay(List<CrawlStatisticsTimePoint> avgDelay) {
    this.avgDelay = avgDelay;
    return this;
  }

  public CrawlStatisticsTime addAvgDelayItem(CrawlStatisticsTimePoint avgDelayItem) {
    if (this.avgDelay == null) {
      this.avgDelay = new ArrayList<>();
    }
    this.avgDelay.add(avgDelayItem);
    return this;
  }

  /**
   * 
   * @return avgDelay
   */
  @javax.annotation.Nonnull
  public List<CrawlStatisticsTimePoint> getAvgDelay() {
    return avgDelay;
  }

  public void setAvgDelay(List<CrawlStatisticsTimePoint> avgDelay) {
    this.avgDelay = avgDelay;
  }


  public CrawlStatisticsTime avgSize(List<CrawlStatisticsTimePoint> avgSize) {
    this.avgSize = avgSize;
    return this;
  }

  public CrawlStatisticsTime addAvgSizeItem(CrawlStatisticsTimePoint avgSizeItem) {
    if (this.avgSize == null) {
      this.avgSize = new ArrayList<>();
    }
    this.avgSize.add(avgSizeItem);
    return this;
  }

  /**
   * 
   * @return avgSize
   */
  @javax.annotation.Nonnull
  public List<CrawlStatisticsTimePoint> getAvgSize() {
    return avgSize;
  }

  public void setAvgSize(List<CrawlStatisticsTimePoint> avgSize) {
    this.avgSize = avgSize;
  }


  public CrawlStatisticsTime frequency(String frequency) {
    this.frequency = frequency;
    return this;
  }

  /**
   * 
   * @return frequency
   */
  @javax.annotation.Nonnull
  public String getFrequency() {
    return frequency;
  }

  public void setFrequency(String frequency) {
    this.frequency = frequency;
  }


  public CrawlStatisticsTime httpCode2xx(List<CrawlStatisticsTimePoint> httpCode2xx) {
    this.httpCode2xx = httpCode2xx;
    return this;
  }

  public CrawlStatisticsTime addHttpCode2xxItem(CrawlStatisticsTimePoint httpCode2xxItem) {
    if (this.httpCode2xx == null) {
      this.httpCode2xx = new ArrayList<>();
    }
    this.httpCode2xx.add(httpCode2xxItem);
    return this;
  }

  /**
   * 
   * @return httpCode2xx
   */
  @javax.annotation.Nonnull
  public List<CrawlStatisticsTimePoint> getHttpCode2xx() {
    return httpCode2xx;
  }

  public void setHttpCode2xx(List<CrawlStatisticsTimePoint> httpCode2xx) {
    this.httpCode2xx = httpCode2xx;
  }


  public CrawlStatisticsTime httpCode3xx(List<CrawlStatisticsTimePoint> httpCode3xx) {
    this.httpCode3xx = httpCode3xx;
    return this;
  }

  public CrawlStatisticsTime addHttpCode3xxItem(CrawlStatisticsTimePoint httpCode3xxItem) {
    if (this.httpCode3xx == null) {
      this.httpCode3xx = new ArrayList<>();
    }
    this.httpCode3xx.add(httpCode3xxItem);
    return this;
  }

  /**
   * 
   * @return httpCode3xx
   */
  @javax.annotation.Nonnull
  public List<CrawlStatisticsTimePoint> getHttpCode3xx() {
    return httpCode3xx;
  }

  public void setHttpCode3xx(List<CrawlStatisticsTimePoint> httpCode3xx) {
    this.httpCode3xx = httpCode3xx;
  }


  public CrawlStatisticsTime httpCode4xx(List<CrawlStatisticsTimePoint> httpCode4xx) {
    this.httpCode4xx = httpCode4xx;
    return this;
  }

  public CrawlStatisticsTime addHttpCode4xxItem(CrawlStatisticsTimePoint httpCode4xxItem) {
    if (this.httpCode4xx == null) {
      this.httpCode4xx = new ArrayList<>();
    }
    this.httpCode4xx.add(httpCode4xxItem);
    return this;
  }

  /**
   * 
   * @return httpCode4xx
   */
  @javax.annotation.Nonnull
  public List<CrawlStatisticsTimePoint> getHttpCode4xx() {
    return httpCode4xx;
  }

  public void setHttpCode4xx(List<CrawlStatisticsTimePoint> httpCode4xx) {
    this.httpCode4xx = httpCode4xx;
  }


  public CrawlStatisticsTime httpCode5xx(List<CrawlStatisticsTimePoint> httpCode5xx) {
    this.httpCode5xx = httpCode5xx;
    return this;
  }

  public CrawlStatisticsTime addHttpCode5xxItem(CrawlStatisticsTimePoint httpCode5xxItem) {
    if (this.httpCode5xx == null) {
      this.httpCode5xx = new ArrayList<>();
    }
    this.httpCode5xx.add(httpCode5xxItem);
    return this;
  }

  /**
   * 
   * @return httpCode5xx
   */
  @javax.annotation.Nonnull
  public List<CrawlStatisticsTimePoint> getHttpCode5xx() {
    return httpCode5xx;
  }

  public void setHttpCode5xx(List<CrawlStatisticsTimePoint> httpCode5xx) {
    this.httpCode5xx = httpCode5xx;
  }


  public CrawlStatisticsTime httpCodeXxx(List<CrawlStatisticsTimePoint> httpCodeXxx) {
    this.httpCodeXxx = httpCodeXxx;
    return this;
  }

  public CrawlStatisticsTime addHttpCodeXxxItem(CrawlStatisticsTimePoint httpCodeXxxItem) {
    if (this.httpCodeXxx == null) {
      this.httpCodeXxx = new ArrayList<>();
    }
    this.httpCodeXxx.add(httpCodeXxxItem);
    return this;
  }

  /**
   * 
   * @return httpCodeXxx
   */
  @javax.annotation.Nonnull
  public List<CrawlStatisticsTimePoint> getHttpCodeXxx() {
    return httpCodeXxx;
  }

  public void setHttpCodeXxx(List<CrawlStatisticsTimePoint> httpCodeXxx) {
    this.httpCodeXxx = httpCodeXxx;
  }


  public CrawlStatisticsTime lastUpdateDate(OffsetDateTime lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
    return this;
  }

  /**
   * 
   * @return lastUpdateDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastUpdateDate() {
    return lastUpdateDate;
  }

  public void setLastUpdateDate(OffsetDateTime lastUpdateDate) {
    this.lastUpdateDate = lastUpdateDate;
  }


  public CrawlStatisticsTime newUrls(List<CrawlStatisticsTimePoint> newUrls) {
    this.newUrls = newUrls;
    return this;
  }

  public CrawlStatisticsTime addNewUrlsItem(CrawlStatisticsTimePoint newUrlsItem) {
    if (this.newUrls == null) {
      this.newUrls = new ArrayList<>();
    }
    this.newUrls.add(newUrlsItem);
    return this;
  }

  /**
   * 
   * @return newUrls
   */
  @javax.annotation.Nonnull
  public List<CrawlStatisticsTimePoint> getNewUrls() {
    return newUrls;
  }

  public void setNewUrls(List<CrawlStatisticsTimePoint> newUrls) {
    this.newUrls = newUrls;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CrawlStatisticsTime crawlStatisticsTime = (CrawlStatisticsTime) o;
    return Objects.equals(this.avgDelay, crawlStatisticsTime.avgDelay) &&
        Objects.equals(this.avgSize, crawlStatisticsTime.avgSize) &&
        Objects.equals(this.frequency, crawlStatisticsTime.frequency) &&
        Objects.equals(this.httpCode2xx, crawlStatisticsTime.httpCode2xx) &&
        Objects.equals(this.httpCode3xx, crawlStatisticsTime.httpCode3xx) &&
        Objects.equals(this.httpCode4xx, crawlStatisticsTime.httpCode4xx) &&
        Objects.equals(this.httpCode5xx, crawlStatisticsTime.httpCode5xx) &&
        Objects.equals(this.httpCodeXxx, crawlStatisticsTime.httpCodeXxx) &&
        Objects.equals(this.lastUpdateDate, crawlStatisticsTime.lastUpdateDate) &&
        Objects.equals(this.newUrls, crawlStatisticsTime.newUrls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avgDelay, avgSize, frequency, httpCode2xx, httpCode3xx, httpCode4xx, httpCode5xx, httpCodeXxx, lastUpdateDate, newUrls);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CrawlStatisticsTime {\n");
    sb.append("    avgDelay: ").append(toIndentedString(avgDelay)).append("\n");
    sb.append("    avgSize: ").append(toIndentedString(avgSize)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    httpCode2xx: ").append(toIndentedString(httpCode2xx)).append("\n");
    sb.append("    httpCode3xx: ").append(toIndentedString(httpCode3xx)).append("\n");
    sb.append("    httpCode4xx: ").append(toIndentedString(httpCode4xx)).append("\n");
    sb.append("    httpCode5xx: ").append(toIndentedString(httpCode5xx)).append("\n");
    sb.append("    httpCodeXxx: ").append(toIndentedString(httpCodeXxx)).append("\n");
    sb.append("    lastUpdateDate: ").append(toIndentedString(lastUpdateDate)).append("\n");
    sb.append("    newUrls: ").append(toIndentedString(newUrls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("avg_delay");
    openapiFields.add("avg_size");
    openapiFields.add("frequency");
    openapiFields.add("http_code_2xx");
    openapiFields.add("http_code_3xx");
    openapiFields.add("http_code_4xx");
    openapiFields.add("http_code_5xx");
    openapiFields.add("http_code_xxx");
    openapiFields.add("last_update_date");
    openapiFields.add("new_urls");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("avg_delay");
    openapiRequiredFields.add("avg_size");
    openapiRequiredFields.add("frequency");
    openapiRequiredFields.add("http_code_2xx");
    openapiRequiredFields.add("http_code_3xx");
    openapiRequiredFields.add("http_code_4xx");
    openapiRequiredFields.add("http_code_5xx");
    openapiRequiredFields.add("http_code_xxx");
    openapiRequiredFields.add("last_update_date");
    openapiRequiredFields.add("new_urls");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CrawlStatisticsTime
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CrawlStatisticsTime.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CrawlStatisticsTime is not found in the empty JSON string", CrawlStatisticsTime.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CrawlStatisticsTime.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CrawlStatisticsTime` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CrawlStatisticsTime.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("avg_delay").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `avg_delay` to be an array in the JSON string but got `%s`", jsonObj.get("avg_delay").toString()));
      }

      JsonArray jsonArrayavgDelay = jsonObj.getAsJsonArray("avg_delay");
      // validate the required field `avg_delay` (array)
      for (int i = 0; i < jsonArrayavgDelay.size(); i++) {
        CrawlStatisticsTimePoint.validateJsonElement(jsonArrayavgDelay.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("avg_size").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `avg_size` to be an array in the JSON string but got `%s`", jsonObj.get("avg_size").toString()));
      }

      JsonArray jsonArrayavgSize = jsonObj.getAsJsonArray("avg_size");
      // validate the required field `avg_size` (array)
      for (int i = 0; i < jsonArrayavgSize.size(); i++) {
        CrawlStatisticsTimePoint.validateJsonElement(jsonArrayavgSize.get(i));
      };
      if (!jsonObj.get("frequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `frequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("frequency").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("http_code_2xx").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `http_code_2xx` to be an array in the JSON string but got `%s`", jsonObj.get("http_code_2xx").toString()));
      }

      JsonArray jsonArrayhttpCode2xx = jsonObj.getAsJsonArray("http_code_2xx");
      // validate the required field `http_code_2xx` (array)
      for (int i = 0; i < jsonArrayhttpCode2xx.size(); i++) {
        CrawlStatisticsTimePoint.validateJsonElement(jsonArrayhttpCode2xx.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("http_code_3xx").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `http_code_3xx` to be an array in the JSON string but got `%s`", jsonObj.get("http_code_3xx").toString()));
      }

      JsonArray jsonArrayhttpCode3xx = jsonObj.getAsJsonArray("http_code_3xx");
      // validate the required field `http_code_3xx` (array)
      for (int i = 0; i < jsonArrayhttpCode3xx.size(); i++) {
        CrawlStatisticsTimePoint.validateJsonElement(jsonArrayhttpCode3xx.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("http_code_4xx").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `http_code_4xx` to be an array in the JSON string but got `%s`", jsonObj.get("http_code_4xx").toString()));
      }

      JsonArray jsonArrayhttpCode4xx = jsonObj.getAsJsonArray("http_code_4xx");
      // validate the required field `http_code_4xx` (array)
      for (int i = 0; i < jsonArrayhttpCode4xx.size(); i++) {
        CrawlStatisticsTimePoint.validateJsonElement(jsonArrayhttpCode4xx.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("http_code_5xx").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `http_code_5xx` to be an array in the JSON string but got `%s`", jsonObj.get("http_code_5xx").toString()));
      }

      JsonArray jsonArrayhttpCode5xx = jsonObj.getAsJsonArray("http_code_5xx");
      // validate the required field `http_code_5xx` (array)
      for (int i = 0; i < jsonArrayhttpCode5xx.size(); i++) {
        CrawlStatisticsTimePoint.validateJsonElement(jsonArrayhttpCode5xx.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("http_code_xxx").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `http_code_xxx` to be an array in the JSON string but got `%s`", jsonObj.get("http_code_xxx").toString()));
      }

      JsonArray jsonArrayhttpCodeXxx = jsonObj.getAsJsonArray("http_code_xxx");
      // validate the required field `http_code_xxx` (array)
      for (int i = 0; i < jsonArrayhttpCodeXxx.size(); i++) {
        CrawlStatisticsTimePoint.validateJsonElement(jsonArrayhttpCodeXxx.get(i));
      };
      // ensure the json data is an array
      if (!jsonObj.get("new_urls").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_urls` to be an array in the JSON string but got `%s`", jsonObj.get("new_urls").toString()));
      }

      JsonArray jsonArraynewUrls = jsonObj.getAsJsonArray("new_urls");
      // validate the required field `new_urls` (array)
      for (int i = 0; i < jsonArraynewUrls.size(); i++) {
        CrawlStatisticsTimePoint.validateJsonElement(jsonArraynewUrls.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CrawlStatisticsTime.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CrawlStatisticsTime' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CrawlStatisticsTime> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CrawlStatisticsTime.class));

       return (TypeAdapter<T>) new TypeAdapter<CrawlStatisticsTime>() {
           @Override
           public void write(JsonWriter out, CrawlStatisticsTime value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CrawlStatisticsTime read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CrawlStatisticsTime given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CrawlStatisticsTime
   * @throws IOException if the JSON string is invalid with respect to CrawlStatisticsTime
   */
  public static CrawlStatisticsTime fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CrawlStatisticsTime.class);
  }

  /**
   * Convert an instance of CrawlStatisticsTime to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

