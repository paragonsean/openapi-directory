/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProject::OAIProject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProject::OAIProject() {
    this->initializeModel();
}

OAIProject::~OAIProject() {}

void OAIProject::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_current_settings_isSet = false;
    m_current_settings_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_slug_isSet = false;
    m_slug_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAIProject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProject::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_current_settings_isValid = ::OpenAPI::fromJsonValue(m_current_settings, json[QString("current_settings")]);
    m_current_settings_isSet = !json[QString("current_settings")].isNull() && m_current_settings_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_slug_isValid = ::OpenAPI::fromJsonValue(m_slug, json[QString("slug")]);
    m_slug_isSet = !json[QString("slug")].isNull() && m_slug_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAIProject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProject::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_current_settings.isSet()) {
        obj.insert(QString("current_settings"), ::OpenAPI::toJsonValue(m_current_settings));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_slug_isSet) {
        obj.insert(QString("slug"), ::OpenAPI::toJsonValue(m_slug));
    }
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

bool OAIProject::isActive() const {
    return m_active;
}
void OAIProject::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIProject::is_active_Set() const{
    return m_active_isSet;
}

bool OAIProject::is_active_Valid() const{
    return m_active_isValid;
}

OAIProjectSettingsSerializer OAIProject::getCurrentSettings() const {
    return m_current_settings;
}
void OAIProject::setCurrentSettings(const OAIProjectSettingsSerializer &current_settings) {
    m_current_settings = current_settings;
    m_current_settings_isSet = true;
}

bool OAIProject::is_current_settings_Set() const{
    return m_current_settings_isSet;
}

bool OAIProject::is_current_settings_Valid() const{
    return m_current_settings_isValid;
}

QString OAIProject::getDateCreated() const {
    return m_date_created;
}
void OAIProject::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIProject::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIProject::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIProject::getName() const {
    return m_name;
}
void OAIProject::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProject::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProject::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProject::getSlug() const {
    return m_slug;
}
void OAIProject::setSlug(const QString &slug) {
    m_slug = slug;
    m_slug_isSet = true;
}

bool OAIProject::is_slug_Set() const{
    return m_slug_isSet;
}

bool OAIProject::is_slug_Valid() const{
    return m_slug_isValid;
}

OAIUser OAIProject::getUser() const {
    return m_user;
}
void OAIProject::setUser(const OAIUser &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIProject::is_user_Set() const{
    return m_user_isSet;
}

bool OAIProject::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIProject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slug_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProject::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_current_settings_isValid && m_name_isValid && m_slug_isValid && m_user_isValid && true;
}

} // namespace OpenAPI
