/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectSavedFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectSavedFilter::OAIProjectSavedFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectSavedFilter::OAIProjectSavedFilter() {
    this->initializeModel();
}

OAIProjectSavedFilter::~OAIProjectSavedFilter() {}

void OAIProjectSavedFilter::initializeModel() {

    m_filters_isSet = false;
    m_filters_isValid = false;

    m_identifier_isSet = false;
    m_identifier_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIProjectSavedFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectSavedFilter::fromJsonObject(QJsonObject json) {

    m_filters_isValid = ::OpenAPI::fromJsonValue(m_filters, json[QString("filters")]);
    m_filters_isSet = !json[QString("filters")].isNull() && m_filters_isValid;

    m_identifier_isValid = ::OpenAPI::fromJsonValue(m_identifier, json[QString("identifier")]);
    m_identifier_isSet = !json[QString("identifier")].isNull() && m_identifier_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIProjectSavedFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectSavedFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_filters_isSet) {
        obj.insert(QString("filters"), ::OpenAPI::toJsonValue(m_filters));
    }
    if (m_identifier_isSet) {
        obj.insert(QString("identifier"), ::OpenAPI::toJsonValue(m_identifier));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIObject OAIProjectSavedFilter::getFilters() const {
    return m_filters;
}
void OAIProjectSavedFilter::setFilters(const OAIObject &filters) {
    m_filters = filters;
    m_filters_isSet = true;
}

bool OAIProjectSavedFilter::is_filters_Set() const{
    return m_filters_isSet;
}

bool OAIProjectSavedFilter::is_filters_Valid() const{
    return m_filters_isValid;
}

QString OAIProjectSavedFilter::getIdentifier() const {
    return m_identifier;
}
void OAIProjectSavedFilter::setIdentifier(const QString &identifier) {
    m_identifier = identifier;
    m_identifier_isSet = true;
}

bool OAIProjectSavedFilter::is_identifier_Set() const{
    return m_identifier_isSet;
}

bool OAIProjectSavedFilter::is_identifier_Valid() const{
    return m_identifier_isValid;
}

QString OAIProjectSavedFilter::getName() const {
    return m_name;
}
void OAIProjectSavedFilter::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProjectSavedFilter::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProjectSavedFilter::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIProjectSavedFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_filters_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectSavedFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_filters_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
