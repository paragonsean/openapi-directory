/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICrawlDatamodel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICrawlDatamodel::OAICrawlDatamodel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICrawlDatamodel::OAICrawlDatamodel() {
    this->initializeModel();
}

OAICrawlDatamodel::~OAICrawlDatamodel() {}

void OAICrawlDatamodel::initializeModel() {

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_groups_isSet = false;
    m_groups_isValid = false;
}

void OAICrawlDatamodel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICrawlDatamodel::fromJsonObject(QJsonObject json) {

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_groups_isValid = ::OpenAPI::fromJsonValue(m_groups, json[QString("groups")]);
    m_groups_isSet = !json[QString("groups")].isNull() && m_groups_isValid;
}

QString OAICrawlDatamodel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICrawlDatamodel::asJsonObject() const {
    QJsonObject obj;
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_groups.size() > 0) {
        obj.insert(QString("groups"), ::OpenAPI::toJsonValue(m_groups));
    }
    return obj;
}

QList<OAICrawlDatamodelField> OAICrawlDatamodel::getFields() const {
    return m_fields;
}
void OAICrawlDatamodel::setFields(const QList<OAICrawlDatamodelField> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAICrawlDatamodel::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAICrawlDatamodel::is_fields_Valid() const{
    return m_fields_isValid;
}

QList<OAICrawlDatamodelGroup> OAICrawlDatamodel::getGroups() const {
    return m_groups;
}
void OAICrawlDatamodel::setGroups(const QList<OAICrawlDatamodelGroup> &groups) {
    m_groups = groups;
    m_groups_isSet = true;
}

bool OAICrawlDatamodel::is_groups_Set() const{
    return m_groups_isSet;
}

bool OAICrawlDatamodel::is_groups_Valid() const{
    return m_groups_isValid;
}

bool OAICrawlDatamodel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICrawlDatamodel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_fields_isValid && m_groups_isValid && true;
}

} // namespace OpenAPI
