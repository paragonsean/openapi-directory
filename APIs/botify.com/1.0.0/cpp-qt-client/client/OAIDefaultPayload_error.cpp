/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDefaultPayload_error.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDefaultPayload_error::OAIDefaultPayload_error(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDefaultPayload_error::OAIDefaultPayload_error() {
    this->initializeModel();
}

OAIDefaultPayload_error::~OAIDefaultPayload_error() {}

void OAIDefaultPayload_error::initializeModel() {

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_error_detail_isSet = false;
    m_error_detail_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIDefaultPayload_error::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDefaultPayload_error::fromJsonObject(QJsonObject json) {

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("error_code")]);
    m_error_code_isSet = !json[QString("error_code")].isNull() && m_error_code_isValid;

    m_error_detail_isValid = ::OpenAPI::fromJsonValue(m_error_detail, json[QString("error_detail")]);
    m_error_detail_isSet = !json[QString("error_detail")].isNull() && m_error_detail_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;
}

QString OAIDefaultPayload_error::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDefaultPayload_error::asJsonObject() const {
    QJsonObject obj;
    if (m_error_code_isSet) {
        obj.insert(QString("error_code"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_error_detail_isSet) {
        obj.insert(QString("error_detail"), ::OpenAPI::toJsonValue(m_error_detail));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

QString OAIDefaultPayload_error::getErrorCode() const {
    return m_error_code;
}
void OAIDefaultPayload_error::setErrorCode(const QString &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIDefaultPayload_error::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIDefaultPayload_error::is_error_code_Valid() const{
    return m_error_code_isValid;
}

OAIObject OAIDefaultPayload_error::getErrorDetail() const {
    return m_error_detail;
}
void OAIDefaultPayload_error::setErrorDetail(const OAIObject &error_detail) {
    m_error_detail = error_detail;
    m_error_detail_isSet = true;
}

bool OAIDefaultPayload_error::is_error_detail_Set() const{
    return m_error_detail_isSet;
}

bool OAIDefaultPayload_error::is_error_detail_Valid() const{
    return m_error_detail_isValid;
}

QString OAIDefaultPayload_error::getMessage() const {
    return m_message;
}
void OAIDefaultPayload_error::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIDefaultPayload_error::is_message_Set() const{
    return m_message_isSet;
}

bool OAIDefaultPayload_error::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIDefaultPayload_error::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDefaultPayload_error::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
