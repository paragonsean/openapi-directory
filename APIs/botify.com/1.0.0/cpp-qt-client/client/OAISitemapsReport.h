/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISitemapsReport.h
 *
 * 
 */

#ifndef OAISitemapsReport_H
#define OAISitemapsReport_H

#include <QJsonObject>

#include "OAISitemapsReportOnly.h"
#include "OAISitemapsReportSitemap.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISitemapsReportSitemap;
class OAISitemapsReportOnly;

class OAISitemapsReport : public OAIObject {
public:
    OAISitemapsReport();
    OAISitemapsReport(QString json);
    ~OAISitemapsReport() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCount() const;
    void setCount(const qint64 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QList<OAISitemapsReportSitemap> getErrors() const;
    void setErrors(const QList<OAISitemapsReportSitemap> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QList<OAISitemapsReportSitemap> getSitemapIndexes() const;
    void setSitemapIndexes(const QList<OAISitemapsReportSitemap> &sitemap_indexes);
    bool is_sitemap_indexes_Set() const;
    bool is_sitemap_indexes_Valid() const;

    OAISitemapsReportOnly getSitemapOnly() const;
    void setSitemapOnly(const OAISitemapsReportOnly &sitemap_only);
    bool is_sitemap_only_Set() const;
    bool is_sitemap_only_Valid() const;

    QList<OAISitemapsReportSitemap> getSitemaps() const;
    void setSitemaps(const QList<OAISitemapsReportSitemap> &sitemaps);
    bool is_sitemaps_Set() const;
    bool is_sitemaps_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QList<OAISitemapsReportSitemap> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QList<OAISitemapsReportSitemap> m_sitemap_indexes;
    bool m_sitemap_indexes_isSet;
    bool m_sitemap_indexes_isValid;

    OAISitemapsReportOnly m_sitemap_only;
    bool m_sitemap_only_isSet;
    bool m_sitemap_only_isValid;

    QList<OAISitemapsReportSitemap> m_sitemaps;
    bool m_sitemaps_isSet;
    bool m_sitemaps_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISitemapsReport)

#endif // OAISitemapsReport_H
