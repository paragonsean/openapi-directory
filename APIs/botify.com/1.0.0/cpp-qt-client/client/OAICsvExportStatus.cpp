/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICsvExportStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICsvExportStatus::OAICsvExportStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICsvExportStatus::OAICsvExportStatus() {
    this->initializeModel();
}

OAICsvExportStatus::~OAICsvExportStatus() {}

void OAICsvExportStatus::initializeModel() {

    m_area_isSet = false;
    m_area_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_job_status_isSet = false;
    m_job_status_isValid = false;

    m_job_url_isSet = false;
    m_job_url_isValid = false;

    m_nb_results_isSet = false;
    m_nb_results_isValid = false;

    m_query_isSet = false;
    m_query_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;
}

void OAICsvExportStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICsvExportStatus::fromJsonObject(QJsonObject json) {

    m_area_isValid = ::OpenAPI::fromJsonValue(m_area, json[QString("area")]);
    m_area_isSet = !json[QString("area")].isNull() && m_area_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("job_id")]);
    m_job_id_isSet = !json[QString("job_id")].isNull() && m_job_id_isValid;

    m_job_status_isValid = ::OpenAPI::fromJsonValue(m_job_status, json[QString("job_status")]);
    m_job_status_isSet = !json[QString("job_status")].isNull() && m_job_status_isValid;

    m_job_url_isValid = ::OpenAPI::fromJsonValue(m_job_url, json[QString("job_url")]);
    m_job_url_isSet = !json[QString("job_url")].isNull() && m_job_url_isValid;

    m_nb_results_isValid = ::OpenAPI::fromJsonValue(m_nb_results, json[QString("nb_results")]);
    m_nb_results_isSet = !json[QString("nb_results")].isNull() && m_nb_results_isValid;

    m_query_isValid = ::OpenAPI::fromJsonValue(m_query, json[QString("query")]);
    m_query_isSet = !json[QString("query")].isNull() && m_query_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;
}

QString OAICsvExportStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICsvExportStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_area_isSet) {
        obj.insert(QString("area"), ::OpenAPI::toJsonValue(m_area));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("job_id"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_job_status_isSet) {
        obj.insert(QString("job_status"), ::OpenAPI::toJsonValue(m_job_status));
    }
    if (m_job_url_isSet) {
        obj.insert(QString("job_url"), ::OpenAPI::toJsonValue(m_job_url));
    }
    if (m_nb_results_isSet) {
        obj.insert(QString("nb_results"), ::OpenAPI::toJsonValue(m_nb_results));
    }
    if (m_query.isSet()) {
        obj.insert(QString("query"), ::OpenAPI::toJsonValue(m_query));
    }
    if (m_results_isSet) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    return obj;
}

qint64 OAICsvExportStatus::getArea() const {
    return m_area;
}
void OAICsvExportStatus::setArea(const qint64 &area) {
    m_area = area;
    m_area_isSet = true;
}

bool OAICsvExportStatus::is_area_Set() const{
    return m_area_isSet;
}

bool OAICsvExportStatus::is_area_Valid() const{
    return m_area_isValid;
}

QDateTime OAICsvExportStatus::getDateCreated() const {
    return m_date_created;
}
void OAICsvExportStatus::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAICsvExportStatus::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAICsvExportStatus::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAICsvExportStatus::getJobId() const {
    return m_job_id;
}
void OAICsvExportStatus::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAICsvExportStatus::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAICsvExportStatus::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAICsvExportStatus::getJobStatus() const {
    return m_job_status;
}
void OAICsvExportStatus::setJobStatus(const QString &job_status) {
    m_job_status = job_status;
    m_job_status_isSet = true;
}

bool OAICsvExportStatus::is_job_status_Set() const{
    return m_job_status_isSet;
}

bool OAICsvExportStatus::is_job_status_Valid() const{
    return m_job_status_isValid;
}

QString OAICsvExportStatus::getJobUrl() const {
    return m_job_url;
}
void OAICsvExportStatus::setJobUrl(const QString &job_url) {
    m_job_url = job_url;
    m_job_url_isSet = true;
}

bool OAICsvExportStatus::is_job_url_Set() const{
    return m_job_url_isSet;
}

bool OAICsvExportStatus::is_job_url_Valid() const{
    return m_job_url_isValid;
}

qint64 OAICsvExportStatus::getNbResults() const {
    return m_nb_results;
}
void OAICsvExportStatus::setNbResults(const qint64 &nb_results) {
    m_nb_results = nb_results;
    m_nb_results_isSet = true;
}

bool OAICsvExportStatus::is_nb_results_Set() const{
    return m_nb_results_isSet;
}

bool OAICsvExportStatus::is_nb_results_Valid() const{
    return m_nb_results_isValid;
}

OAIUrlsQuery OAICsvExportStatus::getQuery() const {
    return m_query;
}
void OAICsvExportStatus::setQuery(const OAIUrlsQuery &query) {
    m_query = query;
    m_query_isSet = true;
}

bool OAICsvExportStatus::is_query_Set() const{
    return m_query_isSet;
}

bool OAICsvExportStatus::is_query_Valid() const{
    return m_query_isValid;
}

QString OAICsvExportStatus::getResults() const {
    return m_results;
}
void OAICsvExportStatus::setResults(const QString &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAICsvExportStatus::is_results_Set() const{
    return m_results_isSet;
}

bool OAICsvExportStatus::is_results_Valid() const{
    return m_results_isValid;
}

bool OAICsvExportStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_area_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nb_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_query.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_results_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICsvExportStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_query_isValid && true;
}

} // namespace OpenAPI
