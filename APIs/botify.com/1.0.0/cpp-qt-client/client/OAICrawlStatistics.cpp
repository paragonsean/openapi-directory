/**
 * Botify API
 * Botify Saas API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICrawlStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICrawlStatistics::OAICrawlStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICrawlStatistics::OAICrawlStatistics() {
    this->initializeModel();
}

OAICrawlStatistics::~OAICrawlStatistics() {}

void OAICrawlStatistics::initializeModel() {

    m_depth_current_isSet = false;
    m_depth_current_isValid = false;

    m_last_upd_dt_isSet = false;
    m_last_upd_dt_isValid = false;

    m_pages_dones_isSet = false;
    m_pages_dones_isValid = false;

    m_pages_dones_2xx_isSet = false;
    m_pages_dones_2xx_isValid = false;

    m_pages_dones_3xx_isSet = false;
    m_pages_dones_3xx_isValid = false;

    m_pages_dones_4xx_isSet = false;
    m_pages_dones_4xx_isValid = false;

    m_pages_dones_5xx_isSet = false;
    m_pages_dones_5xx_isValid = false;

    m_pages_dones_networkerror_isSet = false;
    m_pages_dones_networkerror_isValid = false;

    m_pages_dones_xxx_isSet = false;
    m_pages_dones_xxx_isValid = false;

    m_pages_known_isSet = false;
    m_pages_known_isValid = false;
}

void OAICrawlStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICrawlStatistics::fromJsonObject(QJsonObject json) {

    m_depth_current_isValid = ::OpenAPI::fromJsonValue(m_depth_current, json[QString("depth_current")]);
    m_depth_current_isSet = !json[QString("depth_current")].isNull() && m_depth_current_isValid;

    m_last_upd_dt_isValid = ::OpenAPI::fromJsonValue(m_last_upd_dt, json[QString("last_upd_dt")]);
    m_last_upd_dt_isSet = !json[QString("last_upd_dt")].isNull() && m_last_upd_dt_isValid;

    m_pages_dones_isValid = ::OpenAPI::fromJsonValue(m_pages_dones, json[QString("pages_dones")]);
    m_pages_dones_isSet = !json[QString("pages_dones")].isNull() && m_pages_dones_isValid;

    m_pages_dones_2xx_isValid = ::OpenAPI::fromJsonValue(m_pages_dones_2xx, json[QString("pages_dones_2xx")]);
    m_pages_dones_2xx_isSet = !json[QString("pages_dones_2xx")].isNull() && m_pages_dones_2xx_isValid;

    m_pages_dones_3xx_isValid = ::OpenAPI::fromJsonValue(m_pages_dones_3xx, json[QString("pages_dones_3xx")]);
    m_pages_dones_3xx_isSet = !json[QString("pages_dones_3xx")].isNull() && m_pages_dones_3xx_isValid;

    m_pages_dones_4xx_isValid = ::OpenAPI::fromJsonValue(m_pages_dones_4xx, json[QString("pages_dones_4xx")]);
    m_pages_dones_4xx_isSet = !json[QString("pages_dones_4xx")].isNull() && m_pages_dones_4xx_isValid;

    m_pages_dones_5xx_isValid = ::OpenAPI::fromJsonValue(m_pages_dones_5xx, json[QString("pages_dones_5xx")]);
    m_pages_dones_5xx_isSet = !json[QString("pages_dones_5xx")].isNull() && m_pages_dones_5xx_isValid;

    m_pages_dones_networkerror_isValid = ::OpenAPI::fromJsonValue(m_pages_dones_networkerror, json[QString("pages_dones_networkerror")]);
    m_pages_dones_networkerror_isSet = !json[QString("pages_dones_networkerror")].isNull() && m_pages_dones_networkerror_isValid;

    m_pages_dones_xxx_isValid = ::OpenAPI::fromJsonValue(m_pages_dones_xxx, json[QString("pages_dones_xxx")]);
    m_pages_dones_xxx_isSet = !json[QString("pages_dones_xxx")].isNull() && m_pages_dones_xxx_isValid;

    m_pages_known_isValid = ::OpenAPI::fromJsonValue(m_pages_known, json[QString("pages_known")]);
    m_pages_known_isSet = !json[QString("pages_known")].isNull() && m_pages_known_isValid;
}

QString OAICrawlStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICrawlStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_depth_current_isSet) {
        obj.insert(QString("depth_current"), ::OpenAPI::toJsonValue(m_depth_current));
    }
    if (m_last_upd_dt_isSet) {
        obj.insert(QString("last_upd_dt"), ::OpenAPI::toJsonValue(m_last_upd_dt));
    }
    if (m_pages_dones_isSet) {
        obj.insert(QString("pages_dones"), ::OpenAPI::toJsonValue(m_pages_dones));
    }
    if (m_pages_dones_2xx_isSet) {
        obj.insert(QString("pages_dones_2xx"), ::OpenAPI::toJsonValue(m_pages_dones_2xx));
    }
    if (m_pages_dones_3xx_isSet) {
        obj.insert(QString("pages_dones_3xx"), ::OpenAPI::toJsonValue(m_pages_dones_3xx));
    }
    if (m_pages_dones_4xx_isSet) {
        obj.insert(QString("pages_dones_4xx"), ::OpenAPI::toJsonValue(m_pages_dones_4xx));
    }
    if (m_pages_dones_5xx_isSet) {
        obj.insert(QString("pages_dones_5xx"), ::OpenAPI::toJsonValue(m_pages_dones_5xx));
    }
    if (m_pages_dones_networkerror_isSet) {
        obj.insert(QString("pages_dones_networkerror"), ::OpenAPI::toJsonValue(m_pages_dones_networkerror));
    }
    if (m_pages_dones_xxx_isSet) {
        obj.insert(QString("pages_dones_xxx"), ::OpenAPI::toJsonValue(m_pages_dones_xxx));
    }
    if (m_pages_known_isSet) {
        obj.insert(QString("pages_known"), ::OpenAPI::toJsonValue(m_pages_known));
    }
    return obj;
}

qint64 OAICrawlStatistics::getDepthCurrent() const {
    return m_depth_current;
}
void OAICrawlStatistics::setDepthCurrent(const qint64 &depth_current) {
    m_depth_current = depth_current;
    m_depth_current_isSet = true;
}

bool OAICrawlStatistics::is_depth_current_Set() const{
    return m_depth_current_isSet;
}

bool OAICrawlStatistics::is_depth_current_Valid() const{
    return m_depth_current_isValid;
}

QDateTime OAICrawlStatistics::getLastUpdDt() const {
    return m_last_upd_dt;
}
void OAICrawlStatistics::setLastUpdDt(const QDateTime &last_upd_dt) {
    m_last_upd_dt = last_upd_dt;
    m_last_upd_dt_isSet = true;
}

bool OAICrawlStatistics::is_last_upd_dt_Set() const{
    return m_last_upd_dt_isSet;
}

bool OAICrawlStatistics::is_last_upd_dt_Valid() const{
    return m_last_upd_dt_isValid;
}

qint64 OAICrawlStatistics::getPagesDones() const {
    return m_pages_dones;
}
void OAICrawlStatistics::setPagesDones(const qint64 &pages_dones) {
    m_pages_dones = pages_dones;
    m_pages_dones_isSet = true;
}

bool OAICrawlStatistics::is_pages_dones_Set() const{
    return m_pages_dones_isSet;
}

bool OAICrawlStatistics::is_pages_dones_Valid() const{
    return m_pages_dones_isValid;
}

qint64 OAICrawlStatistics::getPagesDones2xx() const {
    return m_pages_dones_2xx;
}
void OAICrawlStatistics::setPagesDones2xx(const qint64 &pages_dones_2xx) {
    m_pages_dones_2xx = pages_dones_2xx;
    m_pages_dones_2xx_isSet = true;
}

bool OAICrawlStatistics::is_pages_dones_2xx_Set() const{
    return m_pages_dones_2xx_isSet;
}

bool OAICrawlStatistics::is_pages_dones_2xx_Valid() const{
    return m_pages_dones_2xx_isValid;
}

qint64 OAICrawlStatistics::getPagesDones3xx() const {
    return m_pages_dones_3xx;
}
void OAICrawlStatistics::setPagesDones3xx(const qint64 &pages_dones_3xx) {
    m_pages_dones_3xx = pages_dones_3xx;
    m_pages_dones_3xx_isSet = true;
}

bool OAICrawlStatistics::is_pages_dones_3xx_Set() const{
    return m_pages_dones_3xx_isSet;
}

bool OAICrawlStatistics::is_pages_dones_3xx_Valid() const{
    return m_pages_dones_3xx_isValid;
}

qint64 OAICrawlStatistics::getPagesDones4xx() const {
    return m_pages_dones_4xx;
}
void OAICrawlStatistics::setPagesDones4xx(const qint64 &pages_dones_4xx) {
    m_pages_dones_4xx = pages_dones_4xx;
    m_pages_dones_4xx_isSet = true;
}

bool OAICrawlStatistics::is_pages_dones_4xx_Set() const{
    return m_pages_dones_4xx_isSet;
}

bool OAICrawlStatistics::is_pages_dones_4xx_Valid() const{
    return m_pages_dones_4xx_isValid;
}

qint64 OAICrawlStatistics::getPagesDones5xx() const {
    return m_pages_dones_5xx;
}
void OAICrawlStatistics::setPagesDones5xx(const qint64 &pages_dones_5xx) {
    m_pages_dones_5xx = pages_dones_5xx;
    m_pages_dones_5xx_isSet = true;
}

bool OAICrawlStatistics::is_pages_dones_5xx_Set() const{
    return m_pages_dones_5xx_isSet;
}

bool OAICrawlStatistics::is_pages_dones_5xx_Valid() const{
    return m_pages_dones_5xx_isValid;
}

qint64 OAICrawlStatistics::getPagesDonesNetworkerror() const {
    return m_pages_dones_networkerror;
}
void OAICrawlStatistics::setPagesDonesNetworkerror(const qint64 &pages_dones_networkerror) {
    m_pages_dones_networkerror = pages_dones_networkerror;
    m_pages_dones_networkerror_isSet = true;
}

bool OAICrawlStatistics::is_pages_dones_networkerror_Set() const{
    return m_pages_dones_networkerror_isSet;
}

bool OAICrawlStatistics::is_pages_dones_networkerror_Valid() const{
    return m_pages_dones_networkerror_isValid;
}

qint64 OAICrawlStatistics::getPagesDonesXxx() const {
    return m_pages_dones_xxx;
}
void OAICrawlStatistics::setPagesDonesXxx(const qint64 &pages_dones_xxx) {
    m_pages_dones_xxx = pages_dones_xxx;
    m_pages_dones_xxx_isSet = true;
}

bool OAICrawlStatistics::is_pages_dones_xxx_Set() const{
    return m_pages_dones_xxx_isSet;
}

bool OAICrawlStatistics::is_pages_dones_xxx_Valid() const{
    return m_pages_dones_xxx_isValid;
}

qint64 OAICrawlStatistics::getPagesKnown() const {
    return m_pages_known;
}
void OAICrawlStatistics::setPagesKnown(const qint64 &pages_known) {
    m_pages_known = pages_known;
    m_pages_known_isSet = true;
}

bool OAICrawlStatistics::is_pages_known_Set() const{
    return m_pages_known_isSet;
}

bool OAICrawlStatistics::is_pages_known_Valid() const{
    return m_pages_known_isValid;
}

bool OAICrawlStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_depth_current_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_upd_dt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages_dones_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages_dones_2xx_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages_dones_3xx_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages_dones_4xx_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages_dones_5xx_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages_dones_networkerror_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages_dones_xxx_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pages_known_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICrawlStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_depth_current_isValid && m_last_upd_dt_isValid && m_pages_dones_isValid && m_pages_dones_2xx_isValid && m_pages_dones_3xx_isValid && m_pages_dones_4xx_isValid && m_pages_dones_5xx_isValid && m_pages_dones_networkerror_isValid && m_pages_dones_xxx_isValid && m_pages_known_isValid && true;
}

} // namespace OpenAPI
