# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiCoreDtoClickStreamHitLocationInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, areacode: str=None, city: str=None, country: str=None, latitude: float=None, longitude: float=None, metrocode: str=None, organization: str=None, postalcode: str=None, region: str=None, region_name: str=None):
        """ApiCoreDtoClickStreamHitLocationInfo - a model defined in OpenAPI

        :param areacode: The areacode of this ApiCoreDtoClickStreamHitLocationInfo.
        :param city: The city of this ApiCoreDtoClickStreamHitLocationInfo.
        :param country: The country of this ApiCoreDtoClickStreamHitLocationInfo.
        :param latitude: The latitude of this ApiCoreDtoClickStreamHitLocationInfo.
        :param longitude: The longitude of this ApiCoreDtoClickStreamHitLocationInfo.
        :param metrocode: The metrocode of this ApiCoreDtoClickStreamHitLocationInfo.
        :param organization: The organization of this ApiCoreDtoClickStreamHitLocationInfo.
        :param postalcode: The postalcode of this ApiCoreDtoClickStreamHitLocationInfo.
        :param region: The region of this ApiCoreDtoClickStreamHitLocationInfo.
        :param region_name: The region_name of this ApiCoreDtoClickStreamHitLocationInfo.
        """
        self.openapi_types = {
            'areacode': str,
            'city': str,
            'country': str,
            'latitude': float,
            'longitude': float,
            'metrocode': str,
            'organization': str,
            'postalcode': str,
            'region': str,
            'region_name': str
        }

        self.attribute_map = {
            'areacode': 'areacode',
            'city': 'city',
            'country': 'country',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'metrocode': 'metrocode',
            'organization': 'organization',
            'postalcode': 'postalcode',
            'region': 'region',
            'region_name': 'regionName'
        }

        self._areacode = areacode
        self._city = city
        self._country = country
        self._latitude = latitude
        self._longitude = longitude
        self._metrocode = metrocode
        self._organization = organization
        self._postalcode = postalcode
        self._region = region
        self._region_name = region_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCoreDtoClickStreamHitLocationInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api.Core.Dto.ClickStream.HitLocationInfo of this ApiCoreDtoClickStreamHitLocationInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def areacode(self):
        """Gets the areacode of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The areacode of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: str
        """
        return self._areacode

    @areacode.setter
    def areacode(self, areacode):
        """Sets the areacode of this ApiCoreDtoClickStreamHitLocationInfo.


        :param areacode: The areacode of this ApiCoreDtoClickStreamHitLocationInfo.
        :type areacode: str
        """

        self._areacode = areacode

    @property
    def city(self):
        """Gets the city of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The city of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this ApiCoreDtoClickStreamHitLocationInfo.


        :param city: The city of this ApiCoreDtoClickStreamHitLocationInfo.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The country of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this ApiCoreDtoClickStreamHitLocationInfo.


        :param country: The country of this ApiCoreDtoClickStreamHitLocationInfo.
        :type country: str
        """

        self._country = country

    @property
    def latitude(self):
        """Gets the latitude of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The latitude of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this ApiCoreDtoClickStreamHitLocationInfo.


        :param latitude: The latitude of this ApiCoreDtoClickStreamHitLocationInfo.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The longitude of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this ApiCoreDtoClickStreamHitLocationInfo.


        :param longitude: The longitude of this ApiCoreDtoClickStreamHitLocationInfo.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def metrocode(self):
        """Gets the metrocode of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The metrocode of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: str
        """
        return self._metrocode

    @metrocode.setter
    def metrocode(self, metrocode):
        """Sets the metrocode of this ApiCoreDtoClickStreamHitLocationInfo.


        :param metrocode: The metrocode of this ApiCoreDtoClickStreamHitLocationInfo.
        :type metrocode: str
        """

        self._metrocode = metrocode

    @property
    def organization(self):
        """Gets the organization of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The organization of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this ApiCoreDtoClickStreamHitLocationInfo.


        :param organization: The organization of this ApiCoreDtoClickStreamHitLocationInfo.
        :type organization: str
        """

        self._organization = organization

    @property
    def postalcode(self):
        """Gets the postalcode of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The postalcode of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: str
        """
        return self._postalcode

    @postalcode.setter
    def postalcode(self, postalcode):
        """Sets the postalcode of this ApiCoreDtoClickStreamHitLocationInfo.


        :param postalcode: The postalcode of this ApiCoreDtoClickStreamHitLocationInfo.
        :type postalcode: str
        """

        self._postalcode = postalcode

    @property
    def region(self):
        """Gets the region of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The region of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ApiCoreDtoClickStreamHitLocationInfo.


        :param region: The region of this ApiCoreDtoClickStreamHitLocationInfo.
        :type region: str
        """

        self._region = region

    @property
    def region_name(self):
        """Gets the region_name of this ApiCoreDtoClickStreamHitLocationInfo.


        :return: The region_name of this ApiCoreDtoClickStreamHitLocationInfo.
        :rtype: str
        """
        return self._region_name

    @region_name.setter
    def region_name(self, region_name):
        """Sets the region_name of this ApiCoreDtoClickStreamHitLocationInfo.


        :param region_name: The region_name of this ApiCoreDtoClickStreamHitLocationInfo.
        :type region_name: str
        """

        self._region_name = region_name
