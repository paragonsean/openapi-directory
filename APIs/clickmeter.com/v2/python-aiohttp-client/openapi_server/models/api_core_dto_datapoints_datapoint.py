# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_core_dto_datapoints_tracking_link_specifics import ApiCoreDtoDatapointsTrackingLinkSpecifics
from openapi_server.models.api_core_dto_datapoints_tracking_pixel_specifics import ApiCoreDtoDatapointsTrackingPixelSpecifics
from openapi_server.models.api_core_dto_tags_tag import ApiCoreDtoTagsTag
from openapi_server import util


class ApiCoreDtoDatapointsDatapoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: str=None, encode_ip: bool=None, fifth_conversion_id: int=None, fifth_conversion_name: str=None, first_conversion_id: int=None, first_conversion_name: str=None, fourth_conversion_id: int=None, fourth_conversion_name: str=None, group_id: int=None, group_name: str=None, id: int=None, is_public: bool=None, is_secured: bool=None, light_tracking: bool=None, name: str=None, notes: str=None, preferred: bool=None, redirect_only: bool=None, second_conversion_id: int=None, second_conversion_name: str=None, status: str=None, tags: List[ApiCoreDtoTagsTag]=None, third_conversion_id: int=None, third_conversion_name: str=None, title: str=None, tracking_code: str=None, type: str=None, type_tl: ApiCoreDtoDatapointsTrackingLinkSpecifics=None, type_tp: ApiCoreDtoDatapointsTrackingPixelSpecifics=None, write_permited: bool=None):
        """ApiCoreDtoDatapointsDatapoint - a model defined in OpenAPI

        :param creation_date: The creation_date of this ApiCoreDtoDatapointsDatapoint.
        :param encode_ip: The encode_ip of this ApiCoreDtoDatapointsDatapoint.
        :param fifth_conversion_id: The fifth_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :param fifth_conversion_name: The fifth_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :param first_conversion_id: The first_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :param first_conversion_name: The first_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :param fourth_conversion_id: The fourth_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :param fourth_conversion_name: The fourth_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :param group_id: The group_id of this ApiCoreDtoDatapointsDatapoint.
        :param group_name: The group_name of this ApiCoreDtoDatapointsDatapoint.
        :param id: The id of this ApiCoreDtoDatapointsDatapoint.
        :param is_public: The is_public of this ApiCoreDtoDatapointsDatapoint.
        :param is_secured: The is_secured of this ApiCoreDtoDatapointsDatapoint.
        :param light_tracking: The light_tracking of this ApiCoreDtoDatapointsDatapoint.
        :param name: The name of this ApiCoreDtoDatapointsDatapoint.
        :param notes: The notes of this ApiCoreDtoDatapointsDatapoint.
        :param preferred: The preferred of this ApiCoreDtoDatapointsDatapoint.
        :param redirect_only: The redirect_only of this ApiCoreDtoDatapointsDatapoint.
        :param second_conversion_id: The second_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :param second_conversion_name: The second_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :param status: The status of this ApiCoreDtoDatapointsDatapoint.
        :param tags: The tags of this ApiCoreDtoDatapointsDatapoint.
        :param third_conversion_id: The third_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :param third_conversion_name: The third_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :param title: The title of this ApiCoreDtoDatapointsDatapoint.
        :param tracking_code: The tracking_code of this ApiCoreDtoDatapointsDatapoint.
        :param type: The type of this ApiCoreDtoDatapointsDatapoint.
        :param type_tl: The type_tl of this ApiCoreDtoDatapointsDatapoint.
        :param type_tp: The type_tp of this ApiCoreDtoDatapointsDatapoint.
        :param write_permited: The write_permited of this ApiCoreDtoDatapointsDatapoint.
        """
        self.openapi_types = {
            'creation_date': str,
            'encode_ip': bool,
            'fifth_conversion_id': int,
            'fifth_conversion_name': str,
            'first_conversion_id': int,
            'first_conversion_name': str,
            'fourth_conversion_id': int,
            'fourth_conversion_name': str,
            'group_id': int,
            'group_name': str,
            'id': int,
            'is_public': bool,
            'is_secured': bool,
            'light_tracking': bool,
            'name': str,
            'notes': str,
            'preferred': bool,
            'redirect_only': bool,
            'second_conversion_id': int,
            'second_conversion_name': str,
            'status': str,
            'tags': List[ApiCoreDtoTagsTag],
            'third_conversion_id': int,
            'third_conversion_name': str,
            'title': str,
            'tracking_code': str,
            'type': str,
            'type_tl': ApiCoreDtoDatapointsTrackingLinkSpecifics,
            'type_tp': ApiCoreDtoDatapointsTrackingPixelSpecifics,
            'write_permited': bool
        }

        self.attribute_map = {
            'creation_date': 'creationDate',
            'encode_ip': 'encodeIp',
            'fifth_conversion_id': 'fifthConversionId',
            'fifth_conversion_name': 'fifthConversionName',
            'first_conversion_id': 'firstConversionId',
            'first_conversion_name': 'firstConversionName',
            'fourth_conversion_id': 'fourthConversionId',
            'fourth_conversion_name': 'fourthConversionName',
            'group_id': 'groupId',
            'group_name': 'groupName',
            'id': 'id',
            'is_public': 'isPublic',
            'is_secured': 'isSecured',
            'light_tracking': 'lightTracking',
            'name': 'name',
            'notes': 'notes',
            'preferred': 'preferred',
            'redirect_only': 'redirectOnly',
            'second_conversion_id': 'secondConversionId',
            'second_conversion_name': 'secondConversionName',
            'status': 'status',
            'tags': 'tags',
            'third_conversion_id': 'thirdConversionId',
            'third_conversion_name': 'thirdConversionName',
            'title': 'title',
            'tracking_code': 'trackingCode',
            'type': 'type',
            'type_tl': 'typeTL',
            'type_tp': 'typeTP',
            'write_permited': 'writePermited'
        }

        self._creation_date = creation_date
        self._encode_ip = encode_ip
        self._fifth_conversion_id = fifth_conversion_id
        self._fifth_conversion_name = fifth_conversion_name
        self._first_conversion_id = first_conversion_id
        self._first_conversion_name = first_conversion_name
        self._fourth_conversion_id = fourth_conversion_id
        self._fourth_conversion_name = fourth_conversion_name
        self._group_id = group_id
        self._group_name = group_name
        self._id = id
        self._is_public = is_public
        self._is_secured = is_secured
        self._light_tracking = light_tracking
        self._name = name
        self._notes = notes
        self._preferred = preferred
        self._redirect_only = redirect_only
        self._second_conversion_id = second_conversion_id
        self._second_conversion_name = second_conversion_name
        self._status = status
        self._tags = tags
        self._third_conversion_id = third_conversion_id
        self._third_conversion_name = third_conversion_name
        self._title = title
        self._tracking_code = tracking_code
        self._type = type
        self._type_tl = type_tl
        self._type_tp = type_tp
        self._write_permited = write_permited

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCoreDtoDatapointsDatapoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api.Core.Dto.Datapoints.Datapoint of this ApiCoreDtoDatapointsDatapoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this ApiCoreDtoDatapointsDatapoint.

         (A date in \"YmdHis\" format)

        :return: The creation_date of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ApiCoreDtoDatapointsDatapoint.

         (A date in \"YmdHis\" format)

        :param creation_date: The creation_date of this ApiCoreDtoDatapointsDatapoint.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def encode_ip(self):
        """Gets the encode_ip of this ApiCoreDtoDatapointsDatapoint.


        :return: The encode_ip of this ApiCoreDtoDatapointsDatapoint.
        :rtype: bool
        """
        return self._encode_ip

    @encode_ip.setter
    def encode_ip(self, encode_ip):
        """Sets the encode_ip of this ApiCoreDtoDatapointsDatapoint.


        :param encode_ip: The encode_ip of this ApiCoreDtoDatapointsDatapoint.
        :type encode_ip: bool
        """

        self._encode_ip = encode_ip

    @property
    def fifth_conversion_id(self):
        """Gets the fifth_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :return: The fifth_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :rtype: int
        """
        return self._fifth_conversion_id

    @fifth_conversion_id.setter
    def fifth_conversion_id(self, fifth_conversion_id):
        """Sets the fifth_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :param fifth_conversion_id: The fifth_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :type fifth_conversion_id: int
        """

        self._fifth_conversion_id = fifth_conversion_id

    @property
    def fifth_conversion_name(self):
        """Gets the fifth_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :return: The fifth_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._fifth_conversion_name

    @fifth_conversion_name.setter
    def fifth_conversion_name(self, fifth_conversion_name):
        """Sets the fifth_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :param fifth_conversion_name: The fifth_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :type fifth_conversion_name: str
        """

        self._fifth_conversion_name = fifth_conversion_name

    @property
    def first_conversion_id(self):
        """Gets the first_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :return: The first_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :rtype: int
        """
        return self._first_conversion_id

    @first_conversion_id.setter
    def first_conversion_id(self, first_conversion_id):
        """Sets the first_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :param first_conversion_id: The first_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :type first_conversion_id: int
        """

        self._first_conversion_id = first_conversion_id

    @property
    def first_conversion_name(self):
        """Gets the first_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :return: The first_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._first_conversion_name

    @first_conversion_name.setter
    def first_conversion_name(self, first_conversion_name):
        """Sets the first_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :param first_conversion_name: The first_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :type first_conversion_name: str
        """

        self._first_conversion_name = first_conversion_name

    @property
    def fourth_conversion_id(self):
        """Gets the fourth_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :return: The fourth_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :rtype: int
        """
        return self._fourth_conversion_id

    @fourth_conversion_id.setter
    def fourth_conversion_id(self, fourth_conversion_id):
        """Sets the fourth_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :param fourth_conversion_id: The fourth_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :type fourth_conversion_id: int
        """

        self._fourth_conversion_id = fourth_conversion_id

    @property
    def fourth_conversion_name(self):
        """Gets the fourth_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :return: The fourth_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._fourth_conversion_name

    @fourth_conversion_name.setter
    def fourth_conversion_name(self, fourth_conversion_name):
        """Sets the fourth_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :param fourth_conversion_name: The fourth_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :type fourth_conversion_name: str
        """

        self._fourth_conversion_name = fourth_conversion_name

    @property
    def group_id(self):
        """Gets the group_id of this ApiCoreDtoDatapointsDatapoint.


        :return: The group_id of this ApiCoreDtoDatapointsDatapoint.
        :rtype: int
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this ApiCoreDtoDatapointsDatapoint.


        :param group_id: The group_id of this ApiCoreDtoDatapointsDatapoint.
        :type group_id: int
        """

        self._group_id = group_id

    @property
    def group_name(self):
        """Gets the group_name of this ApiCoreDtoDatapointsDatapoint.


        :return: The group_name of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """Sets the group_name of this ApiCoreDtoDatapointsDatapoint.


        :param group_name: The group_name of this ApiCoreDtoDatapointsDatapoint.
        :type group_name: str
        """

        self._group_name = group_name

    @property
    def id(self):
        """Gets the id of this ApiCoreDtoDatapointsDatapoint.


        :return: The id of this ApiCoreDtoDatapointsDatapoint.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApiCoreDtoDatapointsDatapoint.


        :param id: The id of this ApiCoreDtoDatapointsDatapoint.
        :type id: int
        """

        self._id = id

    @property
    def is_public(self):
        """Gets the is_public of this ApiCoreDtoDatapointsDatapoint.


        :return: The is_public of this ApiCoreDtoDatapointsDatapoint.
        :rtype: bool
        """
        return self._is_public

    @is_public.setter
    def is_public(self, is_public):
        """Sets the is_public of this ApiCoreDtoDatapointsDatapoint.


        :param is_public: The is_public of this ApiCoreDtoDatapointsDatapoint.
        :type is_public: bool
        """

        self._is_public = is_public

    @property
    def is_secured(self):
        """Gets the is_secured of this ApiCoreDtoDatapointsDatapoint.


        :return: The is_secured of this ApiCoreDtoDatapointsDatapoint.
        :rtype: bool
        """
        return self._is_secured

    @is_secured.setter
    def is_secured(self, is_secured):
        """Sets the is_secured of this ApiCoreDtoDatapointsDatapoint.


        :param is_secured: The is_secured of this ApiCoreDtoDatapointsDatapoint.
        :type is_secured: bool
        """

        self._is_secured = is_secured

    @property
    def light_tracking(self):
        """Gets the light_tracking of this ApiCoreDtoDatapointsDatapoint.


        :return: The light_tracking of this ApiCoreDtoDatapointsDatapoint.
        :rtype: bool
        """
        return self._light_tracking

    @light_tracking.setter
    def light_tracking(self, light_tracking):
        """Sets the light_tracking of this ApiCoreDtoDatapointsDatapoint.


        :param light_tracking: The light_tracking of this ApiCoreDtoDatapointsDatapoint.
        :type light_tracking: bool
        """

        self._light_tracking = light_tracking

    @property
    def name(self):
        """Gets the name of this ApiCoreDtoDatapointsDatapoint.


        :return: The name of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApiCoreDtoDatapointsDatapoint.


        :param name: The name of this ApiCoreDtoDatapointsDatapoint.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this ApiCoreDtoDatapointsDatapoint.


        :return: The notes of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this ApiCoreDtoDatapointsDatapoint.


        :param notes: The notes of this ApiCoreDtoDatapointsDatapoint.
        :type notes: str
        """

        self._notes = notes

    @property
    def preferred(self):
        """Gets the preferred of this ApiCoreDtoDatapointsDatapoint.


        :return: The preferred of this ApiCoreDtoDatapointsDatapoint.
        :rtype: bool
        """
        return self._preferred

    @preferred.setter
    def preferred(self, preferred):
        """Sets the preferred of this ApiCoreDtoDatapointsDatapoint.


        :param preferred: The preferred of this ApiCoreDtoDatapointsDatapoint.
        :type preferred: bool
        """

        self._preferred = preferred

    @property
    def redirect_only(self):
        """Gets the redirect_only of this ApiCoreDtoDatapointsDatapoint.


        :return: The redirect_only of this ApiCoreDtoDatapointsDatapoint.
        :rtype: bool
        """
        return self._redirect_only

    @redirect_only.setter
    def redirect_only(self, redirect_only):
        """Sets the redirect_only of this ApiCoreDtoDatapointsDatapoint.


        :param redirect_only: The redirect_only of this ApiCoreDtoDatapointsDatapoint.
        :type redirect_only: bool
        """

        self._redirect_only = redirect_only

    @property
    def second_conversion_id(self):
        """Gets the second_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :return: The second_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :rtype: int
        """
        return self._second_conversion_id

    @second_conversion_id.setter
    def second_conversion_id(self, second_conversion_id):
        """Sets the second_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :param second_conversion_id: The second_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :type second_conversion_id: int
        """

        self._second_conversion_id = second_conversion_id

    @property
    def second_conversion_name(self):
        """Gets the second_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :return: The second_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._second_conversion_name

    @second_conversion_name.setter
    def second_conversion_name(self, second_conversion_name):
        """Sets the second_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :param second_conversion_name: The second_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :type second_conversion_name: str
        """

        self._second_conversion_name = second_conversion_name

    @property
    def status(self):
        """Gets the status of this ApiCoreDtoDatapointsDatapoint.


        :return: The status of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApiCoreDtoDatapointsDatapoint.


        :param status: The status of this ApiCoreDtoDatapointsDatapoint.
        :type status: str
        """
        allowed_values = ["Active", "Paused", "Abuse", "Deleted"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def tags(self):
        """Gets the tags of this ApiCoreDtoDatapointsDatapoint.


        :return: The tags of this ApiCoreDtoDatapointsDatapoint.
        :rtype: List[ApiCoreDtoTagsTag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ApiCoreDtoDatapointsDatapoint.


        :param tags: The tags of this ApiCoreDtoDatapointsDatapoint.
        :type tags: List[ApiCoreDtoTagsTag]
        """

        self._tags = tags

    @property
    def third_conversion_id(self):
        """Gets the third_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :return: The third_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :rtype: int
        """
        return self._third_conversion_id

    @third_conversion_id.setter
    def third_conversion_id(self, third_conversion_id):
        """Sets the third_conversion_id of this ApiCoreDtoDatapointsDatapoint.


        :param third_conversion_id: The third_conversion_id of this ApiCoreDtoDatapointsDatapoint.
        :type third_conversion_id: int
        """

        self._third_conversion_id = third_conversion_id

    @property
    def third_conversion_name(self):
        """Gets the third_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :return: The third_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._third_conversion_name

    @third_conversion_name.setter
    def third_conversion_name(self, third_conversion_name):
        """Sets the third_conversion_name of this ApiCoreDtoDatapointsDatapoint.


        :param third_conversion_name: The third_conversion_name of this ApiCoreDtoDatapointsDatapoint.
        :type third_conversion_name: str
        """

        self._third_conversion_name = third_conversion_name

    @property
    def title(self):
        """Gets the title of this ApiCoreDtoDatapointsDatapoint.


        :return: The title of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ApiCoreDtoDatapointsDatapoint.


        :param title: The title of this ApiCoreDtoDatapointsDatapoint.
        :type title: str
        """

        self._title = title

    @property
    def tracking_code(self):
        """Gets the tracking_code of this ApiCoreDtoDatapointsDatapoint.


        :return: The tracking_code of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._tracking_code

    @tracking_code.setter
    def tracking_code(self, tracking_code):
        """Sets the tracking_code of this ApiCoreDtoDatapointsDatapoint.


        :param tracking_code: The tracking_code of this ApiCoreDtoDatapointsDatapoint.
        :type tracking_code: str
        """

        self._tracking_code = tracking_code

    @property
    def type(self):
        """Gets the type of this ApiCoreDtoDatapointsDatapoint.


        :return: The type of this ApiCoreDtoDatapointsDatapoint.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApiCoreDtoDatapointsDatapoint.


        :param type: The type of this ApiCoreDtoDatapointsDatapoint.
        :type type: str
        """
        allowed_values = ["TrackingLink", "TrackingPixel"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def type_tl(self):
        """Gets the type_tl of this ApiCoreDtoDatapointsDatapoint.


        :return: The type_tl of this ApiCoreDtoDatapointsDatapoint.
        :rtype: ApiCoreDtoDatapointsTrackingLinkSpecifics
        """
        return self._type_tl

    @type_tl.setter
    def type_tl(self, type_tl):
        """Sets the type_tl of this ApiCoreDtoDatapointsDatapoint.


        :param type_tl: The type_tl of this ApiCoreDtoDatapointsDatapoint.
        :type type_tl: ApiCoreDtoDatapointsTrackingLinkSpecifics
        """

        self._type_tl = type_tl

    @property
    def type_tp(self):
        """Gets the type_tp of this ApiCoreDtoDatapointsDatapoint.


        :return: The type_tp of this ApiCoreDtoDatapointsDatapoint.
        :rtype: ApiCoreDtoDatapointsTrackingPixelSpecifics
        """
        return self._type_tp

    @type_tp.setter
    def type_tp(self, type_tp):
        """Sets the type_tp of this ApiCoreDtoDatapointsDatapoint.


        :param type_tp: The type_tp of this ApiCoreDtoDatapointsDatapoint.
        :type type_tp: ApiCoreDtoDatapointsTrackingPixelSpecifics
        """

        self._type_tp = type_tp

    @property
    def write_permited(self):
        """Gets the write_permited of this ApiCoreDtoDatapointsDatapoint.


        :return: The write_permited of this ApiCoreDtoDatapointsDatapoint.
        :rtype: bool
        """
        return self._write_permited

    @write_permited.setter
    def write_permited(self, write_permited):
        """Sets the write_permited of this ApiCoreDtoDatapointsDatapoint.


        :param write_permited: The write_permited of this ApiCoreDtoDatapointsDatapoint.
        :type write_permited: bool
        """

        self._write_permited = write_permited
