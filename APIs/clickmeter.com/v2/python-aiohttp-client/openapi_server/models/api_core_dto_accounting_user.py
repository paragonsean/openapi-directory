# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiCoreDtoAccountingUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bo_go_val: str=None, bonus_clicks: int=None, company_name: str=None, company_role: str=None, email: str=None, first_name: str=None, last_name: str=None, phone: str=None, redirect_only: bool=None, registration_date: str=None, timeframe_min_date: str=None, timezone: int=None, timezonename: str=None):
        """ApiCoreDtoAccountingUser - a model defined in OpenAPI

        :param bo_go_val: The bo_go_val of this ApiCoreDtoAccountingUser.
        :param bonus_clicks: The bonus_clicks of this ApiCoreDtoAccountingUser.
        :param company_name: The company_name of this ApiCoreDtoAccountingUser.
        :param company_role: The company_role of this ApiCoreDtoAccountingUser.
        :param email: The email of this ApiCoreDtoAccountingUser.
        :param first_name: The first_name of this ApiCoreDtoAccountingUser.
        :param last_name: The last_name of this ApiCoreDtoAccountingUser.
        :param phone: The phone of this ApiCoreDtoAccountingUser.
        :param redirect_only: The redirect_only of this ApiCoreDtoAccountingUser.
        :param registration_date: The registration_date of this ApiCoreDtoAccountingUser.
        :param timeframe_min_date: The timeframe_min_date of this ApiCoreDtoAccountingUser.
        :param timezone: The timezone of this ApiCoreDtoAccountingUser.
        :param timezonename: The timezonename of this ApiCoreDtoAccountingUser.
        """
        self.openapi_types = {
            'bo_go_val': str,
            'bonus_clicks': int,
            'company_name': str,
            'company_role': str,
            'email': str,
            'first_name': str,
            'last_name': str,
            'phone': str,
            'redirect_only': bool,
            'registration_date': str,
            'timeframe_min_date': str,
            'timezone': int,
            'timezonename': str
        }

        self.attribute_map = {
            'bo_go_val': 'boGoVal',
            'bonus_clicks': 'bonusClicks',
            'company_name': 'companyName',
            'company_role': 'companyRole',
            'email': 'email',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'phone': 'phone',
            'redirect_only': 'redirectOnly',
            'registration_date': 'registrationDate',
            'timeframe_min_date': 'timeframeMinDate',
            'timezone': 'timezone',
            'timezonename': 'timezonename'
        }

        self._bo_go_val = bo_go_val
        self._bonus_clicks = bonus_clicks
        self._company_name = company_name
        self._company_role = company_role
        self._email = email
        self._first_name = first_name
        self._last_name = last_name
        self._phone = phone
        self._redirect_only = redirect_only
        self._registration_date = registration_date
        self._timeframe_min_date = timeframe_min_date
        self._timezone = timezone
        self._timezonename = timezonename

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCoreDtoAccountingUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api.Core.Dto.Accounting.User of this ApiCoreDtoAccountingUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bo_go_val(self):
        """Gets the bo_go_val of this ApiCoreDtoAccountingUser.


        :return: The bo_go_val of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._bo_go_val

    @bo_go_val.setter
    def bo_go_val(self, bo_go_val):
        """Sets the bo_go_val of this ApiCoreDtoAccountingUser.


        :param bo_go_val: The bo_go_val of this ApiCoreDtoAccountingUser.
        :type bo_go_val: str
        """

        self._bo_go_val = bo_go_val

    @property
    def bonus_clicks(self):
        """Gets the bonus_clicks of this ApiCoreDtoAccountingUser.


        :return: The bonus_clicks of this ApiCoreDtoAccountingUser.
        :rtype: int
        """
        return self._bonus_clicks

    @bonus_clicks.setter
    def bonus_clicks(self, bonus_clicks):
        """Sets the bonus_clicks of this ApiCoreDtoAccountingUser.


        :param bonus_clicks: The bonus_clicks of this ApiCoreDtoAccountingUser.
        :type bonus_clicks: int
        """

        self._bonus_clicks = bonus_clicks

    @property
    def company_name(self):
        """Gets the company_name of this ApiCoreDtoAccountingUser.


        :return: The company_name of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this ApiCoreDtoAccountingUser.


        :param company_name: The company_name of this ApiCoreDtoAccountingUser.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def company_role(self):
        """Gets the company_role of this ApiCoreDtoAccountingUser.


        :return: The company_role of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._company_role

    @company_role.setter
    def company_role(self, company_role):
        """Sets the company_role of this ApiCoreDtoAccountingUser.


        :param company_role: The company_role of this ApiCoreDtoAccountingUser.
        :type company_role: str
        """

        self._company_role = company_role

    @property
    def email(self):
        """Gets the email of this ApiCoreDtoAccountingUser.


        :return: The email of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ApiCoreDtoAccountingUser.


        :param email: The email of this ApiCoreDtoAccountingUser.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this ApiCoreDtoAccountingUser.


        :return: The first_name of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ApiCoreDtoAccountingUser.


        :param first_name: The first_name of this ApiCoreDtoAccountingUser.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this ApiCoreDtoAccountingUser.


        :return: The last_name of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ApiCoreDtoAccountingUser.


        :param last_name: The last_name of this ApiCoreDtoAccountingUser.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def phone(self):
        """Gets the phone of this ApiCoreDtoAccountingUser.


        :return: The phone of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this ApiCoreDtoAccountingUser.


        :param phone: The phone of this ApiCoreDtoAccountingUser.
        :type phone: str
        """

        self._phone = phone

    @property
    def redirect_only(self):
        """Gets the redirect_only of this ApiCoreDtoAccountingUser.


        :return: The redirect_only of this ApiCoreDtoAccountingUser.
        :rtype: bool
        """
        return self._redirect_only

    @redirect_only.setter
    def redirect_only(self, redirect_only):
        """Sets the redirect_only of this ApiCoreDtoAccountingUser.


        :param redirect_only: The redirect_only of this ApiCoreDtoAccountingUser.
        :type redirect_only: bool
        """

        self._redirect_only = redirect_only

    @property
    def registration_date(self):
        """Gets the registration_date of this ApiCoreDtoAccountingUser.

         (A date in \"YmdHis\" format)

        :return: The registration_date of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._registration_date

    @registration_date.setter
    def registration_date(self, registration_date):
        """Sets the registration_date of this ApiCoreDtoAccountingUser.

         (A date in \"YmdHis\" format)

        :param registration_date: The registration_date of this ApiCoreDtoAccountingUser.
        :type registration_date: str
        """

        self._registration_date = registration_date

    @property
    def timeframe_min_date(self):
        """Gets the timeframe_min_date of this ApiCoreDtoAccountingUser.

         (A date in \"YmdHis\" format)

        :return: The timeframe_min_date of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._timeframe_min_date

    @timeframe_min_date.setter
    def timeframe_min_date(self, timeframe_min_date):
        """Sets the timeframe_min_date of this ApiCoreDtoAccountingUser.

         (A date in \"YmdHis\" format)

        :param timeframe_min_date: The timeframe_min_date of this ApiCoreDtoAccountingUser.
        :type timeframe_min_date: str
        """

        self._timeframe_min_date = timeframe_min_date

    @property
    def timezone(self):
        """Gets the timezone of this ApiCoreDtoAccountingUser.


        :return: The timezone of this ApiCoreDtoAccountingUser.
        :rtype: int
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this ApiCoreDtoAccountingUser.


        :param timezone: The timezone of this ApiCoreDtoAccountingUser.
        :type timezone: int
        """

        self._timezone = timezone

    @property
    def timezonename(self):
        """Gets the timezonename of this ApiCoreDtoAccountingUser.


        :return: The timezonename of this ApiCoreDtoAccountingUser.
        :rtype: str
        """
        return self._timezonename

    @timezonename.setter
    def timezonename(self, timezonename):
        """Sets the timezonename of this ApiCoreDtoAccountingUser.


        :param timezonename: The timezonename of this ApiCoreDtoAccountingUser.
        :type timezonename: str
        """

        self._timezonename = timezonename
