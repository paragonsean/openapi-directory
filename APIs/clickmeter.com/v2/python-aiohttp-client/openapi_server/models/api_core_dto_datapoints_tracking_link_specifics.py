# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_core_dto_datapoints_browser_base_destination_item import ApiCoreDtoDatapointsBrowserBaseDestinationItem
from openapi_server.models.api_core_dto_datapoints_datapoint_retargeting_info import ApiCoreDtoDatapointsDatapointRetargetingInfo
from openapi_server.models.api_core_dto_datapoints_multiple_destination_item import ApiCoreDtoDatapointsMultipleDestinationItem
from openapi_server.models.api_core_dto_datapoints_unique_destination_item import ApiCoreDtoDatapointsUniqueDestinationItem
from openapi_server.models.api_core_dto_datapoints_url_by_language_item import ApiCoreDtoDatapointsUrlByLanguageItem
from openapi_server.models.api_core_dto_datapoints_url_by_nation_item import ApiCoreDtoDatapointsUrlByNationItem
from openapi_server.models.api_core_dto_datapoints_weighted_destination_item import ApiCoreDtoDatapointsWeightedDestinationItem
from openapi_server import util


class ApiCoreDtoDatapointsTrackingLinkSpecifics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, append_query: bool=None, browser_destination_item: ApiCoreDtoDatapointsBrowserBaseDestinationItem=None, destination_mode: str=None, domain_id: int=None, encode_url: bool=None, expiration_clicks: int=None, expiration_date: str=None, first_url: str=None, go_domain_id: int=None, hide_url: bool=None, hide_url_title: str=None, is_ab_test: bool=None, password: str=None, pause_after_clicks_expiration: bool=None, pause_after_date_expiration: bool=None, random_destination_items: List[ApiCoreDtoDatapointsMultipleDestinationItem]=None, redirect_type: str=None, referrer_clean: str=None, scripts: List[ApiCoreDtoDatapointsDatapointRetargetingInfo]=None, sequential_destination_items: List[ApiCoreDtoDatapointsMultipleDestinationItem]=None, spillover_destination_items: List[ApiCoreDtoDatapointsMultipleDestinationItem]=None, unique_destination_item: ApiCoreDtoDatapointsUniqueDestinationItem=None, url: str=None, url_after_clicks_expiration: str=None, url_after_date_expiration: str=None, urls_by_language: List[ApiCoreDtoDatapointsUrlByLanguageItem]=None, urls_by_nation: List[ApiCoreDtoDatapointsUrlByNationItem]=None, weighted_destination_items: List[ApiCoreDtoDatapointsWeightedDestinationItem]=None):
        """ApiCoreDtoDatapointsTrackingLinkSpecifics - a model defined in OpenAPI

        :param append_query: The append_query of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param browser_destination_item: The browser_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param destination_mode: The destination_mode of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param domain_id: The domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param encode_url: The encode_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param expiration_clicks: The expiration_clicks of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param expiration_date: The expiration_date of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param first_url: The first_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param go_domain_id: The go_domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param hide_url: The hide_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param hide_url_title: The hide_url_title of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param is_ab_test: The is_ab_test of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param password: The password of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param pause_after_clicks_expiration: The pause_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param pause_after_date_expiration: The pause_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param random_destination_items: The random_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param redirect_type: The redirect_type of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param referrer_clean: The referrer_clean of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param scripts: The scripts of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param sequential_destination_items: The sequential_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param spillover_destination_items: The spillover_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param unique_destination_item: The unique_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param url: The url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param url_after_clicks_expiration: The url_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param url_after_date_expiration: The url_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param urls_by_language: The urls_by_language of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param urls_by_nation: The urls_by_nation of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :param weighted_destination_items: The weighted_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        """
        self.openapi_types = {
            'append_query': bool,
            'browser_destination_item': ApiCoreDtoDatapointsBrowserBaseDestinationItem,
            'destination_mode': str,
            'domain_id': int,
            'encode_url': bool,
            'expiration_clicks': int,
            'expiration_date': str,
            'first_url': str,
            'go_domain_id': int,
            'hide_url': bool,
            'hide_url_title': str,
            'is_ab_test': bool,
            'password': str,
            'pause_after_clicks_expiration': bool,
            'pause_after_date_expiration': bool,
            'random_destination_items': List[ApiCoreDtoDatapointsMultipleDestinationItem],
            'redirect_type': str,
            'referrer_clean': str,
            'scripts': List[ApiCoreDtoDatapointsDatapointRetargetingInfo],
            'sequential_destination_items': List[ApiCoreDtoDatapointsMultipleDestinationItem],
            'spillover_destination_items': List[ApiCoreDtoDatapointsMultipleDestinationItem],
            'unique_destination_item': ApiCoreDtoDatapointsUniqueDestinationItem,
            'url': str,
            'url_after_clicks_expiration': str,
            'url_after_date_expiration': str,
            'urls_by_language': List[ApiCoreDtoDatapointsUrlByLanguageItem],
            'urls_by_nation': List[ApiCoreDtoDatapointsUrlByNationItem],
            'weighted_destination_items': List[ApiCoreDtoDatapointsWeightedDestinationItem]
        }

        self.attribute_map = {
            'append_query': 'appendQuery',
            'browser_destination_item': 'browserDestinationItem',
            'destination_mode': 'destinationMode',
            'domain_id': 'domainId',
            'encode_url': 'encodeUrl',
            'expiration_clicks': 'expirationClicks',
            'expiration_date': 'expirationDate',
            'first_url': 'firstUrl',
            'go_domain_id': 'goDomainId',
            'hide_url': 'hideUrl',
            'hide_url_title': 'hideUrlTitle',
            'is_ab_test': 'isABTest',
            'password': 'password',
            'pause_after_clicks_expiration': 'pauseAfterClicksExpiration',
            'pause_after_date_expiration': 'pauseAfterDateExpiration',
            'random_destination_items': 'randomDestinationItems',
            'redirect_type': 'redirectType',
            'referrer_clean': 'referrerClean',
            'scripts': 'scripts',
            'sequential_destination_items': 'sequentialDestinationItems',
            'spillover_destination_items': 'spilloverDestinationItems',
            'unique_destination_item': 'uniqueDestinationItem',
            'url': 'url',
            'url_after_clicks_expiration': 'urlAfterClicksExpiration',
            'url_after_date_expiration': 'urlAfterDateExpiration',
            'urls_by_language': 'urlsByLanguage',
            'urls_by_nation': 'urlsByNation',
            'weighted_destination_items': 'weightedDestinationItems'
        }

        self._append_query = append_query
        self._browser_destination_item = browser_destination_item
        self._destination_mode = destination_mode
        self._domain_id = domain_id
        self._encode_url = encode_url
        self._expiration_clicks = expiration_clicks
        self._expiration_date = expiration_date
        self._first_url = first_url
        self._go_domain_id = go_domain_id
        self._hide_url = hide_url
        self._hide_url_title = hide_url_title
        self._is_ab_test = is_ab_test
        self._password = password
        self._pause_after_clicks_expiration = pause_after_clicks_expiration
        self._pause_after_date_expiration = pause_after_date_expiration
        self._random_destination_items = random_destination_items
        self._redirect_type = redirect_type
        self._referrer_clean = referrer_clean
        self._scripts = scripts
        self._sequential_destination_items = sequential_destination_items
        self._spillover_destination_items = spillover_destination_items
        self._unique_destination_item = unique_destination_item
        self._url = url
        self._url_after_clicks_expiration = url_after_clicks_expiration
        self._url_after_date_expiration = url_after_date_expiration
        self._urls_by_language = urls_by_language
        self._urls_by_nation = urls_by_nation
        self._weighted_destination_items = weighted_destination_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCoreDtoDatapointsTrackingLinkSpecifics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api.Core.Dto.Datapoints.TrackingLinkSpecifics of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def append_query(self):
        """Gets the append_query of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The append_query of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: bool
        """
        return self._append_query

    @append_query.setter
    def append_query(self, append_query):
        """Sets the append_query of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param append_query: The append_query of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type append_query: bool
        """

        self._append_query = append_query

    @property
    def browser_destination_item(self):
        """Gets the browser_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The browser_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: ApiCoreDtoDatapointsBrowserBaseDestinationItem
        """
        return self._browser_destination_item

    @browser_destination_item.setter
    def browser_destination_item(self, browser_destination_item):
        """Sets the browser_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param browser_destination_item: The browser_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type browser_destination_item: ApiCoreDtoDatapointsBrowserBaseDestinationItem
        """

        self._browser_destination_item = browser_destination_item

    @property
    def destination_mode(self):
        """Gets the destination_mode of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The destination_mode of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._destination_mode

    @destination_mode.setter
    def destination_mode(self, destination_mode):
        """Sets the destination_mode of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param destination_mode: The destination_mode of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type destination_mode: str
        """
        allowed_values = ["Simple", "RandomDestination", "DestinationByLanguage", "SpilloverDestination", "DynamicUrl", "BrowserDestination", "DestinationByNation", "UniqueDestination", "SequentialDestination", "WeightedDestination"]  # noqa: E501
        if destination_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `destination_mode` ({0}), must be one of {1}"
                .format(destination_mode, allowed_values)
            )

        self._destination_mode = destination_mode

    @property
    def domain_id(self):
        """Gets the domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: int
        """
        return self._domain_id

    @domain_id.setter
    def domain_id(self, domain_id):
        """Sets the domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param domain_id: The domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type domain_id: int
        """

        self._domain_id = domain_id

    @property
    def encode_url(self):
        """Gets the encode_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The encode_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: bool
        """
        return self._encode_url

    @encode_url.setter
    def encode_url(self, encode_url):
        """Sets the encode_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param encode_url: The encode_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type encode_url: bool
        """

        self._encode_url = encode_url

    @property
    def expiration_clicks(self):
        """Gets the expiration_clicks of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The expiration_clicks of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: int
        """
        return self._expiration_clicks

    @expiration_clicks.setter
    def expiration_clicks(self, expiration_clicks):
        """Sets the expiration_clicks of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param expiration_clicks: The expiration_clicks of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type expiration_clicks: int
        """

        self._expiration_clicks = expiration_clicks

    @property
    def expiration_date(self):
        """Gets the expiration_date of this ApiCoreDtoDatapointsTrackingLinkSpecifics.

         (A date in \"YmdHis\" format)

        :return: The expiration_date of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this ApiCoreDtoDatapointsTrackingLinkSpecifics.

         (A date in \"YmdHis\" format)

        :param expiration_date: The expiration_date of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type expiration_date: str
        """

        self._expiration_date = expiration_date

    @property
    def first_url(self):
        """Gets the first_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The first_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._first_url

    @first_url.setter
    def first_url(self, first_url):
        """Sets the first_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param first_url: The first_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type first_url: str
        """

        self._first_url = first_url

    @property
    def go_domain_id(self):
        """Gets the go_domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The go_domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: int
        """
        return self._go_domain_id

    @go_domain_id.setter
    def go_domain_id(self, go_domain_id):
        """Sets the go_domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param go_domain_id: The go_domain_id of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type go_domain_id: int
        """

        self._go_domain_id = go_domain_id

    @property
    def hide_url(self):
        """Gets the hide_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The hide_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: bool
        """
        return self._hide_url

    @hide_url.setter
    def hide_url(self, hide_url):
        """Sets the hide_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param hide_url: The hide_url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type hide_url: bool
        """

        self._hide_url = hide_url

    @property
    def hide_url_title(self):
        """Gets the hide_url_title of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The hide_url_title of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._hide_url_title

    @hide_url_title.setter
    def hide_url_title(self, hide_url_title):
        """Sets the hide_url_title of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param hide_url_title: The hide_url_title of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type hide_url_title: str
        """

        self._hide_url_title = hide_url_title

    @property
    def is_ab_test(self):
        """Gets the is_ab_test of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The is_ab_test of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: bool
        """
        return self._is_ab_test

    @is_ab_test.setter
    def is_ab_test(self, is_ab_test):
        """Sets the is_ab_test of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param is_ab_test: The is_ab_test of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type is_ab_test: bool
        """

        self._is_ab_test = is_ab_test

    @property
    def password(self):
        """Gets the password of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The password of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param password: The password of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type password: str
        """

        self._password = password

    @property
    def pause_after_clicks_expiration(self):
        """Gets the pause_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The pause_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: bool
        """
        return self._pause_after_clicks_expiration

    @pause_after_clicks_expiration.setter
    def pause_after_clicks_expiration(self, pause_after_clicks_expiration):
        """Sets the pause_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param pause_after_clicks_expiration: The pause_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type pause_after_clicks_expiration: bool
        """

        self._pause_after_clicks_expiration = pause_after_clicks_expiration

    @property
    def pause_after_date_expiration(self):
        """Gets the pause_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The pause_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: bool
        """
        return self._pause_after_date_expiration

    @pause_after_date_expiration.setter
    def pause_after_date_expiration(self, pause_after_date_expiration):
        """Sets the pause_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param pause_after_date_expiration: The pause_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type pause_after_date_expiration: bool
        """

        self._pause_after_date_expiration = pause_after_date_expiration

    @property
    def random_destination_items(self):
        """Gets the random_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The random_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: List[ApiCoreDtoDatapointsMultipleDestinationItem]
        """
        return self._random_destination_items

    @random_destination_items.setter
    def random_destination_items(self, random_destination_items):
        """Sets the random_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param random_destination_items: The random_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type random_destination_items: List[ApiCoreDtoDatapointsMultipleDestinationItem]
        """

        self._random_destination_items = random_destination_items

    @property
    def redirect_type(self):
        """Gets the redirect_type of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The redirect_type of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._redirect_type

    @redirect_type.setter
    def redirect_type(self, redirect_type):
        """Sets the redirect_type of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param redirect_type: The redirect_type of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type redirect_type: str
        """
        allowed_values = ["PermanentRedirect", "TemporaryRedirect"]  # noqa: E501
        if redirect_type not in allowed_values:
            raise ValueError(
                "Invalid value for `redirect_type` ({0}), must be one of {1}"
                .format(redirect_type, allowed_values)
            )

        self._redirect_type = redirect_type

    @property
    def referrer_clean(self):
        """Gets the referrer_clean of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The referrer_clean of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._referrer_clean

    @referrer_clean.setter
    def referrer_clean(self, referrer_clean):
        """Sets the referrer_clean of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param referrer_clean: The referrer_clean of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type referrer_clean: str
        """
        allowed_values = ["None", "Clean", "Myself"]  # noqa: E501
        if referrer_clean not in allowed_values:
            raise ValueError(
                "Invalid value for `referrer_clean` ({0}), must be one of {1}"
                .format(referrer_clean, allowed_values)
            )

        self._referrer_clean = referrer_clean

    @property
    def scripts(self):
        """Gets the scripts of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The scripts of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: List[ApiCoreDtoDatapointsDatapointRetargetingInfo]
        """
        return self._scripts

    @scripts.setter
    def scripts(self, scripts):
        """Sets the scripts of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param scripts: The scripts of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type scripts: List[ApiCoreDtoDatapointsDatapointRetargetingInfo]
        """

        self._scripts = scripts

    @property
    def sequential_destination_items(self):
        """Gets the sequential_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The sequential_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: List[ApiCoreDtoDatapointsMultipleDestinationItem]
        """
        return self._sequential_destination_items

    @sequential_destination_items.setter
    def sequential_destination_items(self, sequential_destination_items):
        """Sets the sequential_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param sequential_destination_items: The sequential_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type sequential_destination_items: List[ApiCoreDtoDatapointsMultipleDestinationItem]
        """

        self._sequential_destination_items = sequential_destination_items

    @property
    def spillover_destination_items(self):
        """Gets the spillover_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The spillover_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: List[ApiCoreDtoDatapointsMultipleDestinationItem]
        """
        return self._spillover_destination_items

    @spillover_destination_items.setter
    def spillover_destination_items(self, spillover_destination_items):
        """Sets the spillover_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param spillover_destination_items: The spillover_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type spillover_destination_items: List[ApiCoreDtoDatapointsMultipleDestinationItem]
        """

        self._spillover_destination_items = spillover_destination_items

    @property
    def unique_destination_item(self):
        """Gets the unique_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The unique_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: ApiCoreDtoDatapointsUniqueDestinationItem
        """
        return self._unique_destination_item

    @unique_destination_item.setter
    def unique_destination_item(self, unique_destination_item):
        """Sets the unique_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param unique_destination_item: The unique_destination_item of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type unique_destination_item: ApiCoreDtoDatapointsUniqueDestinationItem
        """

        self._unique_destination_item = unique_destination_item

    @property
    def url(self):
        """Gets the url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param url: The url of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type url: str
        """

        self._url = url

    @property
    def url_after_clicks_expiration(self):
        """Gets the url_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The url_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._url_after_clicks_expiration

    @url_after_clicks_expiration.setter
    def url_after_clicks_expiration(self, url_after_clicks_expiration):
        """Sets the url_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param url_after_clicks_expiration: The url_after_clicks_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type url_after_clicks_expiration: str
        """

        self._url_after_clicks_expiration = url_after_clicks_expiration

    @property
    def url_after_date_expiration(self):
        """Gets the url_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The url_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: str
        """
        return self._url_after_date_expiration

    @url_after_date_expiration.setter
    def url_after_date_expiration(self, url_after_date_expiration):
        """Sets the url_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param url_after_date_expiration: The url_after_date_expiration of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type url_after_date_expiration: str
        """

        self._url_after_date_expiration = url_after_date_expiration

    @property
    def urls_by_language(self):
        """Gets the urls_by_language of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The urls_by_language of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: List[ApiCoreDtoDatapointsUrlByLanguageItem]
        """
        return self._urls_by_language

    @urls_by_language.setter
    def urls_by_language(self, urls_by_language):
        """Sets the urls_by_language of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param urls_by_language: The urls_by_language of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type urls_by_language: List[ApiCoreDtoDatapointsUrlByLanguageItem]
        """

        self._urls_by_language = urls_by_language

    @property
    def urls_by_nation(self):
        """Gets the urls_by_nation of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The urls_by_nation of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: List[ApiCoreDtoDatapointsUrlByNationItem]
        """
        return self._urls_by_nation

    @urls_by_nation.setter
    def urls_by_nation(self, urls_by_nation):
        """Sets the urls_by_nation of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param urls_by_nation: The urls_by_nation of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type urls_by_nation: List[ApiCoreDtoDatapointsUrlByNationItem]
        """

        self._urls_by_nation = urls_by_nation

    @property
    def weighted_destination_items(self):
        """Gets the weighted_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :return: The weighted_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :rtype: List[ApiCoreDtoDatapointsWeightedDestinationItem]
        """
        return self._weighted_destination_items

    @weighted_destination_items.setter
    def weighted_destination_items(self, weighted_destination_items):
        """Sets the weighted_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.


        :param weighted_destination_items: The weighted_destination_items of this ApiCoreDtoDatapointsTrackingLinkSpecifics.
        :type weighted_destination_items: List[ApiCoreDtoDatapointsWeightedDestinationItem]
        """

        self._weighted_destination_items = weighted_destination_items
