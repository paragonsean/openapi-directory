# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiCoreDtoAccountingExtendedGrants(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_all_grants: bool=None, allow_group_creation: bool=None):
        """ApiCoreDtoAccountingExtendedGrants - a model defined in OpenAPI

        :param allow_all_grants: The allow_all_grants of this ApiCoreDtoAccountingExtendedGrants.
        :param allow_group_creation: The allow_group_creation of this ApiCoreDtoAccountingExtendedGrants.
        """
        self.openapi_types = {
            'allow_all_grants': bool,
            'allow_group_creation': bool
        }

        self.attribute_map = {
            'allow_all_grants': 'allowAllGrants',
            'allow_group_creation': 'allowGroupCreation'
        }

        self._allow_all_grants = allow_all_grants
        self._allow_group_creation = allow_group_creation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCoreDtoAccountingExtendedGrants':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api.Core.Dto.Accounting.ExtendedGrants of this ApiCoreDtoAccountingExtendedGrants.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_all_grants(self):
        """Gets the allow_all_grants of this ApiCoreDtoAccountingExtendedGrants.


        :return: The allow_all_grants of this ApiCoreDtoAccountingExtendedGrants.
        :rtype: bool
        """
        return self._allow_all_grants

    @allow_all_grants.setter
    def allow_all_grants(self, allow_all_grants):
        """Sets the allow_all_grants of this ApiCoreDtoAccountingExtendedGrants.


        :param allow_all_grants: The allow_all_grants of this ApiCoreDtoAccountingExtendedGrants.
        :type allow_all_grants: bool
        """

        self._allow_all_grants = allow_all_grants

    @property
    def allow_group_creation(self):
        """Gets the allow_group_creation of this ApiCoreDtoAccountingExtendedGrants.


        :return: The allow_group_creation of this ApiCoreDtoAccountingExtendedGrants.
        :rtype: bool
        """
        return self._allow_group_creation

    @allow_group_creation.setter
    def allow_group_creation(self, allow_group_creation):
        """Sets the allow_group_creation of this ApiCoreDtoAccountingExtendedGrants.


        :param allow_group_creation: The allow_group_creation of this ApiCoreDtoAccountingExtendedGrants.
        :type allow_group_creation: bool
        """

        self._allow_group_creation = allow_group_creation
