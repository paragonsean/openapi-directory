# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_core_dto_accounting_conversion_options import ApiCoreDtoAccountingConversionOptions
from openapi_server.models.api_core_dto_accounting_extended_grants import ApiCoreDtoAccountingExtendedGrants
from openapi_server.models.api_core_dto_accounting_hit_options import ApiCoreDtoAccountingHitOptions
from openapi_server.models.api_core_dto_grants_grant import ApiCoreDtoGrantsGrant
from openapi_server import util


class ApiCoreDtoAccountingGuest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_key: str=None, conversion_options: ApiCoreDtoAccountingConversionOptions=None, creation_date: str=None, current_grant: ApiCoreDtoGrantsGrant=None, date_format: str=None, decimal_separator: str=None, email: str=None, extended_grants: ApiCoreDtoAccountingExtendedGrants=None, group_grants: int=None, hit_options: ApiCoreDtoAccountingHitOptions=None, id: int=None, key: str=None, language: str=None, login_count: int=None, name: str=None, notes: str=None, number_group_separator: str=None, password: str=None, time_format: str=None, time_zone: int=None, timeframe_min_date: str=None, timezonename: str=None, tl_grants: int=None, tp_grants: int=None, user_name: str=None):
        """ApiCoreDtoAccountingGuest - a model defined in OpenAPI

        :param api_key: The api_key of this ApiCoreDtoAccountingGuest.
        :param conversion_options: The conversion_options of this ApiCoreDtoAccountingGuest.
        :param creation_date: The creation_date of this ApiCoreDtoAccountingGuest.
        :param current_grant: The current_grant of this ApiCoreDtoAccountingGuest.
        :param date_format: The date_format of this ApiCoreDtoAccountingGuest.
        :param decimal_separator: The decimal_separator of this ApiCoreDtoAccountingGuest.
        :param email: The email of this ApiCoreDtoAccountingGuest.
        :param extended_grants: The extended_grants of this ApiCoreDtoAccountingGuest.
        :param group_grants: The group_grants of this ApiCoreDtoAccountingGuest.
        :param hit_options: The hit_options of this ApiCoreDtoAccountingGuest.
        :param id: The id of this ApiCoreDtoAccountingGuest.
        :param key: The key of this ApiCoreDtoAccountingGuest.
        :param language: The language of this ApiCoreDtoAccountingGuest.
        :param login_count: The login_count of this ApiCoreDtoAccountingGuest.
        :param name: The name of this ApiCoreDtoAccountingGuest.
        :param notes: The notes of this ApiCoreDtoAccountingGuest.
        :param number_group_separator: The number_group_separator of this ApiCoreDtoAccountingGuest.
        :param password: The password of this ApiCoreDtoAccountingGuest.
        :param time_format: The time_format of this ApiCoreDtoAccountingGuest.
        :param time_zone: The time_zone of this ApiCoreDtoAccountingGuest.
        :param timeframe_min_date: The timeframe_min_date of this ApiCoreDtoAccountingGuest.
        :param timezonename: The timezonename of this ApiCoreDtoAccountingGuest.
        :param tl_grants: The tl_grants of this ApiCoreDtoAccountingGuest.
        :param tp_grants: The tp_grants of this ApiCoreDtoAccountingGuest.
        :param user_name: The user_name of this ApiCoreDtoAccountingGuest.
        """
        self.openapi_types = {
            'api_key': str,
            'conversion_options': ApiCoreDtoAccountingConversionOptions,
            'creation_date': str,
            'current_grant': ApiCoreDtoGrantsGrant,
            'date_format': str,
            'decimal_separator': str,
            'email': str,
            'extended_grants': ApiCoreDtoAccountingExtendedGrants,
            'group_grants': int,
            'hit_options': ApiCoreDtoAccountingHitOptions,
            'id': int,
            'key': str,
            'language': str,
            'login_count': int,
            'name': str,
            'notes': str,
            'number_group_separator': str,
            'password': str,
            'time_format': str,
            'time_zone': int,
            'timeframe_min_date': str,
            'timezonename': str,
            'tl_grants': int,
            'tp_grants': int,
            'user_name': str
        }

        self.attribute_map = {
            'api_key': 'apiKey',
            'conversion_options': 'conversionOptions',
            'creation_date': 'creationDate',
            'current_grant': 'currentGrant',
            'date_format': 'dateFormat',
            'decimal_separator': 'decimalSeparator',
            'email': 'email',
            'extended_grants': 'extendedGrants',
            'group_grants': 'groupGrants',
            'hit_options': 'hitOptions',
            'id': 'id',
            'key': 'key',
            'language': 'language',
            'login_count': 'loginCount',
            'name': 'name',
            'notes': 'notes',
            'number_group_separator': 'numberGroupSeparator',
            'password': 'password',
            'time_format': 'timeFormat',
            'time_zone': 'timeZone',
            'timeframe_min_date': 'timeframeMinDate',
            'timezonename': 'timezonename',
            'tl_grants': 'tlGrants',
            'tp_grants': 'tpGrants',
            'user_name': 'userName'
        }

        self._api_key = api_key
        self._conversion_options = conversion_options
        self._creation_date = creation_date
        self._current_grant = current_grant
        self._date_format = date_format
        self._decimal_separator = decimal_separator
        self._email = email
        self._extended_grants = extended_grants
        self._group_grants = group_grants
        self._hit_options = hit_options
        self._id = id
        self._key = key
        self._language = language
        self._login_count = login_count
        self._name = name
        self._notes = notes
        self._number_group_separator = number_group_separator
        self._password = password
        self._time_format = time_format
        self._time_zone = time_zone
        self._timeframe_min_date = timeframe_min_date
        self._timezonename = timezonename
        self._tl_grants = tl_grants
        self._tp_grants = tp_grants
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCoreDtoAccountingGuest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Api.Core.Dto.Accounting.Guest of this ApiCoreDtoAccountingGuest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_key(self):
        """Gets the api_key of this ApiCoreDtoAccountingGuest.


        :return: The api_key of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this ApiCoreDtoAccountingGuest.


        :param api_key: The api_key of this ApiCoreDtoAccountingGuest.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def conversion_options(self):
        """Gets the conversion_options of this ApiCoreDtoAccountingGuest.


        :return: The conversion_options of this ApiCoreDtoAccountingGuest.
        :rtype: ApiCoreDtoAccountingConversionOptions
        """
        return self._conversion_options

    @conversion_options.setter
    def conversion_options(self, conversion_options):
        """Sets the conversion_options of this ApiCoreDtoAccountingGuest.


        :param conversion_options: The conversion_options of this ApiCoreDtoAccountingGuest.
        :type conversion_options: ApiCoreDtoAccountingConversionOptions
        """

        self._conversion_options = conversion_options

    @property
    def creation_date(self):
        """Gets the creation_date of this ApiCoreDtoAccountingGuest.

         (A date in \"YmdHis\" format)

        :return: The creation_date of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ApiCoreDtoAccountingGuest.

         (A date in \"YmdHis\" format)

        :param creation_date: The creation_date of this ApiCoreDtoAccountingGuest.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def current_grant(self):
        """Gets the current_grant of this ApiCoreDtoAccountingGuest.


        :return: The current_grant of this ApiCoreDtoAccountingGuest.
        :rtype: ApiCoreDtoGrantsGrant
        """
        return self._current_grant

    @current_grant.setter
    def current_grant(self, current_grant):
        """Sets the current_grant of this ApiCoreDtoAccountingGuest.


        :param current_grant: The current_grant of this ApiCoreDtoAccountingGuest.
        :type current_grant: ApiCoreDtoGrantsGrant
        """

        self._current_grant = current_grant

    @property
    def date_format(self):
        """Gets the date_format of this ApiCoreDtoAccountingGuest.


        :return: The date_format of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._date_format

    @date_format.setter
    def date_format(self, date_format):
        """Sets the date_format of this ApiCoreDtoAccountingGuest.


        :param date_format: The date_format of this ApiCoreDtoAccountingGuest.
        :type date_format: str
        """

        self._date_format = date_format

    @property
    def decimal_separator(self):
        """Gets the decimal_separator of this ApiCoreDtoAccountingGuest.


        :return: The decimal_separator of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._decimal_separator

    @decimal_separator.setter
    def decimal_separator(self, decimal_separator):
        """Sets the decimal_separator of this ApiCoreDtoAccountingGuest.


        :param decimal_separator: The decimal_separator of this ApiCoreDtoAccountingGuest.
        :type decimal_separator: str
        """

        self._decimal_separator = decimal_separator

    @property
    def email(self):
        """Gets the email of this ApiCoreDtoAccountingGuest.


        :return: The email of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ApiCoreDtoAccountingGuest.


        :param email: The email of this ApiCoreDtoAccountingGuest.
        :type email: str
        """

        self._email = email

    @property
    def extended_grants(self):
        """Gets the extended_grants of this ApiCoreDtoAccountingGuest.


        :return: The extended_grants of this ApiCoreDtoAccountingGuest.
        :rtype: ApiCoreDtoAccountingExtendedGrants
        """
        return self._extended_grants

    @extended_grants.setter
    def extended_grants(self, extended_grants):
        """Sets the extended_grants of this ApiCoreDtoAccountingGuest.


        :param extended_grants: The extended_grants of this ApiCoreDtoAccountingGuest.
        :type extended_grants: ApiCoreDtoAccountingExtendedGrants
        """

        self._extended_grants = extended_grants

    @property
    def group_grants(self):
        """Gets the group_grants of this ApiCoreDtoAccountingGuest.


        :return: The group_grants of this ApiCoreDtoAccountingGuest.
        :rtype: int
        """
        return self._group_grants

    @group_grants.setter
    def group_grants(self, group_grants):
        """Sets the group_grants of this ApiCoreDtoAccountingGuest.


        :param group_grants: The group_grants of this ApiCoreDtoAccountingGuest.
        :type group_grants: int
        """

        self._group_grants = group_grants

    @property
    def hit_options(self):
        """Gets the hit_options of this ApiCoreDtoAccountingGuest.


        :return: The hit_options of this ApiCoreDtoAccountingGuest.
        :rtype: ApiCoreDtoAccountingHitOptions
        """
        return self._hit_options

    @hit_options.setter
    def hit_options(self, hit_options):
        """Sets the hit_options of this ApiCoreDtoAccountingGuest.


        :param hit_options: The hit_options of this ApiCoreDtoAccountingGuest.
        :type hit_options: ApiCoreDtoAccountingHitOptions
        """

        self._hit_options = hit_options

    @property
    def id(self):
        """Gets the id of this ApiCoreDtoAccountingGuest.


        :return: The id of this ApiCoreDtoAccountingGuest.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApiCoreDtoAccountingGuest.


        :param id: The id of this ApiCoreDtoAccountingGuest.
        :type id: int
        """

        self._id = id

    @property
    def key(self):
        """Gets the key of this ApiCoreDtoAccountingGuest.


        :return: The key of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ApiCoreDtoAccountingGuest.


        :param key: The key of this ApiCoreDtoAccountingGuest.
        :type key: str
        """

        self._key = key

    @property
    def language(self):
        """Gets the language of this ApiCoreDtoAccountingGuest.


        :return: The language of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this ApiCoreDtoAccountingGuest.


        :param language: The language of this ApiCoreDtoAccountingGuest.
        :type language: str
        """

        self._language = language

    @property
    def login_count(self):
        """Gets the login_count of this ApiCoreDtoAccountingGuest.


        :return: The login_count of this ApiCoreDtoAccountingGuest.
        :rtype: int
        """
        return self._login_count

    @login_count.setter
    def login_count(self, login_count):
        """Sets the login_count of this ApiCoreDtoAccountingGuest.


        :param login_count: The login_count of this ApiCoreDtoAccountingGuest.
        :type login_count: int
        """

        self._login_count = login_count

    @property
    def name(self):
        """Gets the name of this ApiCoreDtoAccountingGuest.


        :return: The name of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApiCoreDtoAccountingGuest.


        :param name: The name of this ApiCoreDtoAccountingGuest.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this ApiCoreDtoAccountingGuest.


        :return: The notes of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this ApiCoreDtoAccountingGuest.


        :param notes: The notes of this ApiCoreDtoAccountingGuest.
        :type notes: str
        """

        self._notes = notes

    @property
    def number_group_separator(self):
        """Gets the number_group_separator of this ApiCoreDtoAccountingGuest.


        :return: The number_group_separator of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._number_group_separator

    @number_group_separator.setter
    def number_group_separator(self, number_group_separator):
        """Sets the number_group_separator of this ApiCoreDtoAccountingGuest.


        :param number_group_separator: The number_group_separator of this ApiCoreDtoAccountingGuest.
        :type number_group_separator: str
        """

        self._number_group_separator = number_group_separator

    @property
    def password(self):
        """Gets the password of this ApiCoreDtoAccountingGuest.


        :return: The password of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this ApiCoreDtoAccountingGuest.


        :param password: The password of this ApiCoreDtoAccountingGuest.
        :type password: str
        """

        self._password = password

    @property
    def time_format(self):
        """Gets the time_format of this ApiCoreDtoAccountingGuest.


        :return: The time_format of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._time_format

    @time_format.setter
    def time_format(self, time_format):
        """Sets the time_format of this ApiCoreDtoAccountingGuest.


        :param time_format: The time_format of this ApiCoreDtoAccountingGuest.
        :type time_format: str
        """
        allowed_values = ["AmPm", "H24"]  # noqa: E501
        if time_format not in allowed_values:
            raise ValueError(
                "Invalid value for `time_format` ({0}), must be one of {1}"
                .format(time_format, allowed_values)
            )

        self._time_format = time_format

    @property
    def time_zone(self):
        """Gets the time_zone of this ApiCoreDtoAccountingGuest.


        :return: The time_zone of this ApiCoreDtoAccountingGuest.
        :rtype: int
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this ApiCoreDtoAccountingGuest.


        :param time_zone: The time_zone of this ApiCoreDtoAccountingGuest.
        :type time_zone: int
        """

        self._time_zone = time_zone

    @property
    def timeframe_min_date(self):
        """Gets the timeframe_min_date of this ApiCoreDtoAccountingGuest.

         (A date in \"YmdHis\" format)

        :return: The timeframe_min_date of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._timeframe_min_date

    @timeframe_min_date.setter
    def timeframe_min_date(self, timeframe_min_date):
        """Sets the timeframe_min_date of this ApiCoreDtoAccountingGuest.

         (A date in \"YmdHis\" format)

        :param timeframe_min_date: The timeframe_min_date of this ApiCoreDtoAccountingGuest.
        :type timeframe_min_date: str
        """

        self._timeframe_min_date = timeframe_min_date

    @property
    def timezonename(self):
        """Gets the timezonename of this ApiCoreDtoAccountingGuest.


        :return: The timezonename of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._timezonename

    @timezonename.setter
    def timezonename(self, timezonename):
        """Sets the timezonename of this ApiCoreDtoAccountingGuest.


        :param timezonename: The timezonename of this ApiCoreDtoAccountingGuest.
        :type timezonename: str
        """

        self._timezonename = timezonename

    @property
    def tl_grants(self):
        """Gets the tl_grants of this ApiCoreDtoAccountingGuest.


        :return: The tl_grants of this ApiCoreDtoAccountingGuest.
        :rtype: int
        """
        return self._tl_grants

    @tl_grants.setter
    def tl_grants(self, tl_grants):
        """Sets the tl_grants of this ApiCoreDtoAccountingGuest.


        :param tl_grants: The tl_grants of this ApiCoreDtoAccountingGuest.
        :type tl_grants: int
        """

        self._tl_grants = tl_grants

    @property
    def tp_grants(self):
        """Gets the tp_grants of this ApiCoreDtoAccountingGuest.


        :return: The tp_grants of this ApiCoreDtoAccountingGuest.
        :rtype: int
        """
        return self._tp_grants

    @tp_grants.setter
    def tp_grants(self, tp_grants):
        """Sets the tp_grants of this ApiCoreDtoAccountingGuest.


        :param tp_grants: The tp_grants of this ApiCoreDtoAccountingGuest.
        :type tp_grants: int
        """

        self._tp_grants = tp_grants

    @property
    def user_name(self):
        """Gets the user_name of this ApiCoreDtoAccountingGuest.


        :return: The user_name of this ApiCoreDtoAccountingGuest.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this ApiCoreDtoAccountingGuest.


        :param user_name: The user_name of this ApiCoreDtoAccountingGuest.
        :type user_name: str
        """

        self._user_name = user_name
