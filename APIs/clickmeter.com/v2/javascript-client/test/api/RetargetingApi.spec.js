/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClickMeterApi);
  }
}(this, function(expect, ClickMeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ClickMeterApi.RetargetingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RetargetingApi', function() {
    describe('retargetingCount', function() {
      it('should call retargetingCount successfully', function(done) {
        //uncomment below and update the code to test retargetingCount
        //instance.retargetingCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retargetingDelete', function() {
      it('should call retargetingDelete successfully', function(done) {
        //uncomment below and update the code to test retargetingDelete
        //instance.retargetingDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retargetingGet', function() {
      it('should call retargetingGet successfully', function(done) {
        //uncomment below and update the code to test retargetingGet
        //instance.retargetingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retargetingGetDatapoints', function() {
      it('should call retargetingGetDatapoints successfully', function(done) {
        //uncomment below and update the code to test retargetingGetDatapoints
        //instance.retargetingGetDatapoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retargetingGetDatapointsCount', function() {
      it('should call retargetingGetDatapointsCount successfully', function(done) {
        //uncomment below and update the code to test retargetingGetDatapointsCount
        //instance.retargetingGetDatapointsCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retargetingIdGet', function() {
      it('should call retargetingIdGet successfully', function(done) {
        //uncomment below and update the code to test retargetingIdGet
        //instance.retargetingIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retargetingPost', function() {
      it('should call retargetingPost successfully', function(done) {
        //uncomment below and update the code to test retargetingPost
        //instance.retargetingPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retargetingPut', function() {
      it('should call retargetingPut successfully', function(done) {
        //uncomment below and update the code to test retargetingPut
        //instance.retargetingPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
