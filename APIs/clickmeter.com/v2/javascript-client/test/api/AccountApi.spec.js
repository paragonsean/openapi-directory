/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClickMeterApi);
  }
}(this, function(expect, ClickMeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ClickMeterApi.AccountApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountApi', function() {
    describe('accountDeleteDomainWhitelist', function() {
      it('should call accountDeleteDomainWhitelist successfully', function(done) {
        //uncomment below and update the code to test accountDeleteDomainWhitelist
        //instance.accountDeleteDomainWhitelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountDeleteGuest', function() {
      it('should call accountDeleteGuest successfully', function(done) {
        //uncomment below and update the code to test accountDeleteGuest
        //instance.accountDeleteGuest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountDeleteIpBlacklist', function() {
      it('should call accountDeleteIpBlacklist successfully', function(done) {
        //uncomment below and update the code to test accountDeleteIpBlacklist
        //instance.accountDeleteIpBlacklist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGet', function() {
      it('should call accountGet successfully', function(done) {
        //uncomment below and update the code to test accountGet
        //instance.accountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGetDomainWhitelist', function() {
      it('should call accountGetDomainWhitelist successfully', function(done) {
        //uncomment below and update the code to test accountGetDomainWhitelist
        //instance.accountGetDomainWhitelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGetGuest', function() {
      it('should call accountGetGuest successfully', function(done) {
        //uncomment below and update the code to test accountGetGuest
        //instance.accountGetGuest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGetGuests', function() {
      it('should call accountGetGuests successfully', function(done) {
        //uncomment below and update the code to test accountGetGuests
        //instance.accountGetGuests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGetGuestsCount', function() {
      it('should call accountGetGuestsCount successfully', function(done) {
        //uncomment below and update the code to test accountGetGuestsCount
        //instance.accountGetGuestsCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGetIpBlacklist', function() {
      it('should call accountGetIpBlacklist successfully', function(done) {
        //uncomment below and update the code to test accountGetIpBlacklist
        //instance.accountGetIpBlacklist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGetPermissions', function() {
      it('should call accountGetPermissions successfully', function(done) {
        //uncomment below and update the code to test accountGetPermissions
        //instance.accountGetPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGetPermissionsCount', function() {
      it('should call accountGetPermissionsCount successfully', function(done) {
        //uncomment below and update the code to test accountGetPermissionsCount
        //instance.accountGetPermissionsCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGetPlan', function() {
      it('should call accountGetPlan successfully', function(done) {
        //uncomment below and update the code to test accountGetPlan
        //instance.accountGetPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountGuestsGuestIdTypePermissionsPatchPost', function() {
      it('should call accountGuestsGuestIdTypePermissionsPatchPost successfully', function(done) {
        //uncomment below and update the code to test accountGuestsGuestIdTypePermissionsPatchPost
        //instance.accountGuestsGuestIdTypePermissionsPatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountPatchPermissions', function() {
      it('should call accountPatchPermissions successfully', function(done) {
        //uncomment below and update the code to test accountPatchPermissions
        //instance.accountPatchPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountPost', function() {
      it('should call accountPost successfully', function(done) {
        //uncomment below and update the code to test accountPost
        //instance.accountPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountPostGuest', function() {
      it('should call accountPostGuest successfully', function(done) {
        //uncomment below and update the code to test accountPostGuest
        //instance.accountPostGuest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountPutDomainWhitelist', function() {
      it('should call accountPutDomainWhitelist successfully', function(done) {
        //uncomment below and update the code to test accountPutDomainWhitelist
        //instance.accountPutDomainWhitelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountPutGuest', function() {
      it('should call accountPutGuest successfully', function(done) {
        //uncomment below and update the code to test accountPutGuest
        //instance.accountPutGuest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountPutIpBlacklist', function() {
      it('should call accountPutIpBlacklist successfully', function(done) {
        //uncomment below and update the code to test accountPutIpBlacklist
        //instance.accountPutIpBlacklist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
