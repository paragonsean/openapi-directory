/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClickMeterApi);
  }
}(this, function(expect, ClickMeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ClickMeterApi.ConversionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConversionsApi', function() {
    describe('conversionsConversionIdDatapointsBatchPatchPut', function() {
      it('should call conversionsConversionIdDatapointsBatchPatchPut successfully', function(done) {
        //uncomment below and update the code to test conversionsConversionIdDatapointsBatchPatchPut
        //instance.conversionsConversionIdDatapointsBatchPatchPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsConversionIdGet', function() {
      it('should call conversionsConversionIdGet successfully', function(done) {
        //uncomment below and update the code to test conversionsConversionIdGet
        //instance.conversionsConversionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsCount', function() {
      it('should call conversionsCount successfully', function(done) {
        //uncomment below and update the code to test conversionsCount
        //instance.conversionsCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsDelete', function() {
      it('should call conversionsDelete successfully', function(done) {
        //uncomment below and update the code to test conversionsDelete
        //instance.conversionsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsGet', function() {
      it('should call conversionsGet successfully', function(done) {
        //uncomment below and update the code to test conversionsGet
        //instance.conversionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsGetDatapoints', function() {
      it('should call conversionsGetDatapoints successfully', function(done) {
        //uncomment below and update the code to test conversionsGetDatapoints
        //instance.conversionsGetDatapoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsGetDatapointsCount', function() {
      it('should call conversionsGetDatapointsCount successfully', function(done) {
        //uncomment below and update the code to test conversionsGetDatapointsCount
        //instance.conversionsGetDatapointsCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsGetHits', function() {
      it('should call conversionsGetHits successfully', function(done) {
        //uncomment below and update the code to test conversionsGetHits
        //instance.conversionsGetHits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsGetStatisticsAllList', function() {
      it('should call conversionsGetStatisticsAllList successfully', function(done) {
        //uncomment below and update the code to test conversionsGetStatisticsAllList
        //instance.conversionsGetStatisticsAllList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsGetStatisticsList', function() {
      it('should call conversionsGetStatisticsList successfully', function(done) {
        //uncomment below and update the code to test conversionsGetStatisticsList
        //instance.conversionsGetStatisticsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsGetStatisticsSingle', function() {
      it('should call conversionsGetStatisticsSingle successfully', function(done) {
        //uncomment below and update the code to test conversionsGetStatisticsSingle
        //instance.conversionsGetStatisticsSingle(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsPatch', function() {
      it('should call conversionsPatch successfully', function(done) {
        //uncomment below and update the code to test conversionsPatch
        //instance.conversionsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsPatchNotes', function() {
      it('should call conversionsPatchNotes successfully', function(done) {
        //uncomment below and update the code to test conversionsPatchNotes
        //instance.conversionsPatchNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsPost', function() {
      it('should call conversionsPost successfully', function(done) {
        //uncomment below and update the code to test conversionsPost
        //instance.conversionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('conversionsPut', function() {
      it('should call conversionsPut successfully', function(done) {
        //uncomment below and update the code to test conversionsPut
        //instance.conversionsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
