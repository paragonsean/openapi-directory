/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClickMeterApi);
  }
}(this, function(expect, ClickMeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiCoreDtoDatapointsDatapoint', function() {
    it('should create an instance of ApiCoreDtoDatapointsDatapoint', function() {
      // uncomment below and update the code to test ApiCoreDtoDatapointsDatapoint
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be.a(ClickMeterApi.ApiCoreDtoDatapointsDatapoint);
    });

    it('should have the property creationDate (base name: "creationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property encodeIp (base name: "encodeIp")', function() {
      // uncomment below and update the code to test the property encodeIp
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property fifthConversionId (base name: "fifthConversionId")', function() {
      // uncomment below and update the code to test the property fifthConversionId
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property fifthConversionName (base name: "fifthConversionName")', function() {
      // uncomment below and update the code to test the property fifthConversionName
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property firstConversionId (base name: "firstConversionId")', function() {
      // uncomment below and update the code to test the property firstConversionId
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property firstConversionName (base name: "firstConversionName")', function() {
      // uncomment below and update the code to test the property firstConversionName
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property fourthConversionId (base name: "fourthConversionId")', function() {
      // uncomment below and update the code to test the property fourthConversionId
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property fourthConversionName (base name: "fourthConversionName")', function() {
      // uncomment below and update the code to test the property fourthConversionName
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property groupId (base name: "groupId")', function() {
      // uncomment below and update the code to test the property groupId
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property groupName (base name: "groupName")', function() {
      // uncomment below and update the code to test the property groupName
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property isPublic (base name: "isPublic")', function() {
      // uncomment below and update the code to test the property isPublic
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property isSecured (base name: "isSecured")', function() {
      // uncomment below and update the code to test the property isSecured
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property lightTracking (base name: "lightTracking")', function() {
      // uncomment below and update the code to test the property lightTracking
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property preferred (base name: "preferred")', function() {
      // uncomment below and update the code to test the property preferred
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property redirectOnly (base name: "redirectOnly")', function() {
      // uncomment below and update the code to test the property redirectOnly
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property secondConversionId (base name: "secondConversionId")', function() {
      // uncomment below and update the code to test the property secondConversionId
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property secondConversionName (base name: "secondConversionName")', function() {
      // uncomment below and update the code to test the property secondConversionName
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property thirdConversionId (base name: "thirdConversionId")', function() {
      // uncomment below and update the code to test the property thirdConversionId
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property thirdConversionName (base name: "thirdConversionName")', function() {
      // uncomment below and update the code to test the property thirdConversionName
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property trackingCode (base name: "trackingCode")', function() {
      // uncomment below and update the code to test the property trackingCode
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property typeTL (base name: "typeTL")', function() {
      // uncomment below and update the code to test the property typeTL
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property typeTP (base name: "typeTP")', function() {
      // uncomment below and update the code to test the property typeTP
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

    it('should have the property writePermited (base name: "writePermited")', function() {
      // uncomment below and update the code to test the property writePermited
      //var instance = new ClickMeterApi.ApiCoreDtoDatapointsDatapoint();
      //expect(instance).to.be();
    });

  });

}));
