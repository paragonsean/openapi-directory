/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClickMeterApi);
  }
}(this, function(expect, ClickMeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiCoreDtoAccountingPlan', function() {
    it('should create an instance of ApiCoreDtoAccountingPlan', function() {
      // uncomment below and update the code to test ApiCoreDtoAccountingPlan
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be.a(ClickMeterApi.ApiCoreDtoAccountingPlan);
    });

    it('should have the property allowedPersonalDomains (base name: "allowedPersonalDomains")', function() {
      // uncomment below and update the code to test the property allowedPersonalDomains
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property allowedPersonalUrls (base name: "allowedPersonalUrls")', function() {
      // uncomment below and update the code to test the property allowedPersonalUrls
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodEnd (base name: "billingPeriodEnd")', function() {
      // uncomment below and update the code to test the property billingPeriodEnd
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodStart (base name: "billingPeriodStart")', function() {
      // uncomment below and update the code to test the property billingPeriodStart
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property bonusMonthlyEvents (base name: "bonusMonthlyEvents")', function() {
      // uncomment below and update the code to test the property bonusMonthlyEvents
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property maximumDatapoints (base name: "maximumDatapoints")', function() {
      // uncomment below and update the code to test the property maximumDatapoints
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property maximumGuests (base name: "maximumGuests")', function() {
      // uncomment below and update the code to test the property maximumGuests
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property monthlyEvents (base name: "monthlyEvents")', function() {
      // uncomment below and update the code to test the property monthlyEvents
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property profileId (base name: "profileId")', function() {
      // uncomment below and update the code to test the property profileId
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property recurring (base name: "recurring")', function() {
      // uncomment below and update the code to test the property recurring
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property recurringPeriod (base name: "recurringPeriod")', function() {
      // uncomment below and update the code to test the property recurringPeriod
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property usedDatapoints (base name: "usedDatapoints")', function() {
      // uncomment below and update the code to test the property usedDatapoints
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

    it('should have the property usedMonthlyEvents (base name: "usedMonthlyEvents")', function() {
      // uncomment below and update the code to test the property usedMonthlyEvents
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingPlan();
      //expect(instance).to.be();
    });

  });

}));
