/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClickMeterApi);
  }
}(this, function(expect, ClickMeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiCoreDtoClickStreamHit', function() {
    it('should create an instance of ApiCoreDtoClickStreamHit', function() {
      // uncomment below and update the code to test ApiCoreDtoClickStreamHit
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be.a(ClickMeterApi.ApiCoreDtoClickStreamHit);
    });

    it('should have the property accessTime (base name: "accessTime")', function() {
      // uncomment below and update the code to test the property accessTime
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property browser (base name: "browser")', function() {
      // uncomment below and update the code to test the property browser
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property clientLanguage (base name: "clientLanguage")', function() {
      // uncomment below and update the code to test the property clientLanguage
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property conversion1 (base name: "conversion1")', function() {
      // uncomment below and update the code to test the property conversion1
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property conversion2 (base name: "conversion2")', function() {
      // uncomment below and update the code to test the property conversion2
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property conversion3 (base name: "conversion3")', function() {
      // uncomment below and update the code to test the property conversion3
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property conversion4 (base name: "conversion4")', function() {
      // uncomment below and update the code to test the property conversion4
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property conversion5 (base name: "conversion5")', function() {
      // uncomment below and update the code to test the property conversion5
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property conversions (base name: "conversions")', function() {
      // uncomment below and update the code to test the property conversions
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property entity (base name: "entity")', function() {
      // uncomment below and update the code to test the property entity
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property isProxy (base name: "isProxy")', function() {
      // uncomment below and update the code to test the property isProxy
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property isSpider (base name: "isSpider")', function() {
      // uncomment below and update the code to test the property isSpider
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property isUnique (base name: "isUnique")', function() {
      // uncomment below and update the code to test the property isUnique
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property org (base name: "org")', function() {
      // uncomment below and update the code to test the property org
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property os (base name: "os")', function() {
      // uncomment below and update the code to test the property os
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property queryParams (base name: "queryParams")', function() {
      // uncomment below and update the code to test the property queryParams
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property realDestinationUrl (base name: "realDestinationUrl")', function() {
      // uncomment below and update the code to test the property realDestinationUrl
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property referer (base name: "referer")', function() {
      // uncomment below and update the code to test the property referer
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new ClickMeterApi.ApiCoreDtoClickStreamHit();
      //expect(instance).to.be();
    });

  });

}));
