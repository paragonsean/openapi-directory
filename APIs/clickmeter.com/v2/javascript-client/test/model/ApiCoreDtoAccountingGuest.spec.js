/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClickMeterApi);
  }
}(this, function(expect, ClickMeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiCoreDtoAccountingGuest', function() {
    it('should create an instance of ApiCoreDtoAccountingGuest', function() {
      // uncomment below and update the code to test ApiCoreDtoAccountingGuest
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be.a(ClickMeterApi.ApiCoreDtoAccountingGuest);
    });

    it('should have the property apiKey (base name: "apiKey")', function() {
      // uncomment below and update the code to test the property apiKey
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property conversionOptions (base name: "conversionOptions")', function() {
      // uncomment below and update the code to test the property conversionOptions
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "creationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property currentGrant (base name: "currentGrant")', function() {
      // uncomment below and update the code to test the property currentGrant
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property dateFormat (base name: "dateFormat")', function() {
      // uncomment below and update the code to test the property dateFormat
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property decimalSeparator (base name: "decimalSeparator")', function() {
      // uncomment below and update the code to test the property decimalSeparator
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property extendedGrants (base name: "extendedGrants")', function() {
      // uncomment below and update the code to test the property extendedGrants
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property groupGrants (base name: "groupGrants")', function() {
      // uncomment below and update the code to test the property groupGrants
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property hitOptions (base name: "hitOptions")', function() {
      // uncomment below and update the code to test the property hitOptions
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property loginCount (base name: "loginCount")', function() {
      // uncomment below and update the code to test the property loginCount
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property numberGroupSeparator (base name: "numberGroupSeparator")', function() {
      // uncomment below and update the code to test the property numberGroupSeparator
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property timeFormat (base name: "timeFormat")', function() {
      // uncomment below and update the code to test the property timeFormat
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property timeframeMinDate (base name: "timeframeMinDate")', function() {
      // uncomment below and update the code to test the property timeframeMinDate
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property timezonename (base name: "timezonename")', function() {
      // uncomment below and update the code to test the property timezonename
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property tlGrants (base name: "tlGrants")', function() {
      // uncomment below and update the code to test the property tlGrants
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property tpGrants (base name: "tpGrants")', function() {
      // uncomment below and update the code to test the property tpGrants
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

    it('should have the property userName (base name: "userName")', function() {
      // uncomment below and update the code to test the property userName
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingGuest();
      //expect(instance).to.be();
    });

  });

}));
