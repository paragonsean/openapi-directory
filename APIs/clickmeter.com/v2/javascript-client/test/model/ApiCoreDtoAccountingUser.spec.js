/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ClickMeterApi);
  }
}(this, function(expect, ClickMeterApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiCoreDtoAccountingUser', function() {
    it('should create an instance of ApiCoreDtoAccountingUser', function() {
      // uncomment below and update the code to test ApiCoreDtoAccountingUser
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be.a(ClickMeterApi.ApiCoreDtoAccountingUser);
    });

    it('should have the property boGoVal (base name: "boGoVal")', function() {
      // uncomment below and update the code to test the property boGoVal
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property bonusClicks (base name: "bonusClicks")', function() {
      // uncomment below and update the code to test the property bonusClicks
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property companyRole (base name: "companyRole")', function() {
      // uncomment below and update the code to test the property companyRole
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property redirectOnly (base name: "redirectOnly")', function() {
      // uncomment below and update the code to test the property redirectOnly
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property registrationDate (base name: "registrationDate")', function() {
      // uncomment below and update the code to test the property registrationDate
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property timeframeMinDate (base name: "timeframeMinDate")', function() {
      // uncomment below and update the code to test the property timeframeMinDate
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

    it('should have the property timezonename (base name: "timezonename")', function() {
      // uncomment below and update the code to test the property timezonename
      //var instance = new ClickMeterApi.ApiCoreDtoAccountingUser();
      //expect(instance).to.be();
    });

  });

}));
