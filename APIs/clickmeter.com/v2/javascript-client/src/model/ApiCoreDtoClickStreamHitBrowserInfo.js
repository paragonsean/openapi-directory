/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiCoreDtoClickStreamHitBrowserInfo model module.
 * @module model/ApiCoreDtoClickStreamHitBrowserInfo
 * @version v2
 */
class ApiCoreDtoClickStreamHitBrowserInfo {
    /**
     * Constructs a new <code>ApiCoreDtoClickStreamHitBrowserInfo</code>.
     * @alias module:model/ApiCoreDtoClickStreamHitBrowserInfo
     */
    constructor() { 
        
        ApiCoreDtoClickStreamHitBrowserInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiCoreDtoClickStreamHitBrowserInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiCoreDtoClickStreamHitBrowserInfo} obj Optional instance to populate.
     * @return {module:model/ApiCoreDtoClickStreamHitBrowserInfo} The populated <code>ApiCoreDtoClickStreamHitBrowserInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiCoreDtoClickStreamHitBrowserInfo();

            if (data.hasOwnProperty('browserType')) {
                obj['browserType'] = ApiClient.convertToType(data['browserType'], 'String');
            }
            if (data.hasOwnProperty('familyId')) {
                obj['familyId'] = ApiClient.convertToType(data['familyId'], 'Number');
            }
            if (data.hasOwnProperty('familyName')) {
                obj['familyName'] = ApiClient.convertToType(data['familyName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiCoreDtoClickStreamHitBrowserInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiCoreDtoClickStreamHitBrowserInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['browserType'] && !(typeof data['browserType'] === 'string' || data['browserType'] instanceof String)) {
            throw new Error("Expected the field `browserType` to be a primitive type in the JSON string but got " + data['browserType']);
        }
        // ensure the json data is a string
        if (data['familyName'] && !(typeof data['familyName'] === 'string' || data['familyName'] instanceof String)) {
            throw new Error("Expected the field `familyName` to be a primitive type in the JSON string but got " + data['familyName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {String} browserType
 */
ApiCoreDtoClickStreamHitBrowserInfo.prototype['browserType'] = undefined;

/**
 * @member {Number} familyId
 */
ApiCoreDtoClickStreamHitBrowserInfo.prototype['familyId'] = undefined;

/**
 * @member {String} familyName
 */
ApiCoreDtoClickStreamHitBrowserInfo.prototype['familyName'] = undefined;

/**
 * @member {Number} id
 */
ApiCoreDtoClickStreamHitBrowserInfo.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ApiCoreDtoClickStreamHitBrowserInfo.prototype['name'] = undefined;






export default ApiCoreDtoClickStreamHitBrowserInfo;

