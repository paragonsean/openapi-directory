/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiCoreDtoDatapointsBrowserBaseDestinationItem from './ApiCoreDtoDatapointsBrowserBaseDestinationItem';
import ApiCoreDtoDatapointsDatapointRetargetingInfo from './ApiCoreDtoDatapointsDatapointRetargetingInfo';
import ApiCoreDtoDatapointsMultipleDestinationItem from './ApiCoreDtoDatapointsMultipleDestinationItem';
import ApiCoreDtoDatapointsUniqueDestinationItem from './ApiCoreDtoDatapointsUniqueDestinationItem';
import ApiCoreDtoDatapointsUrlByLanguageItem from './ApiCoreDtoDatapointsUrlByLanguageItem';
import ApiCoreDtoDatapointsUrlByNationItem from './ApiCoreDtoDatapointsUrlByNationItem';
import ApiCoreDtoDatapointsWeightedDestinationItem from './ApiCoreDtoDatapointsWeightedDestinationItem';

/**
 * The ApiCoreDtoDatapointsTrackingLinkSpecifics model module.
 * @module model/ApiCoreDtoDatapointsTrackingLinkSpecifics
 * @version v2
 */
class ApiCoreDtoDatapointsTrackingLinkSpecifics {
    /**
     * Constructs a new <code>ApiCoreDtoDatapointsTrackingLinkSpecifics</code>.
     * @alias module:model/ApiCoreDtoDatapointsTrackingLinkSpecifics
     */
    constructor() { 
        
        ApiCoreDtoDatapointsTrackingLinkSpecifics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiCoreDtoDatapointsTrackingLinkSpecifics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiCoreDtoDatapointsTrackingLinkSpecifics} obj Optional instance to populate.
     * @return {module:model/ApiCoreDtoDatapointsTrackingLinkSpecifics} The populated <code>ApiCoreDtoDatapointsTrackingLinkSpecifics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiCoreDtoDatapointsTrackingLinkSpecifics();

            if (data.hasOwnProperty('appendQuery')) {
                obj['appendQuery'] = ApiClient.convertToType(data['appendQuery'], 'Boolean');
            }
            if (data.hasOwnProperty('browserDestinationItem')) {
                obj['browserDestinationItem'] = ApiCoreDtoDatapointsBrowserBaseDestinationItem.constructFromObject(data['browserDestinationItem']);
            }
            if (data.hasOwnProperty('destinationMode')) {
                obj['destinationMode'] = ApiClient.convertToType(data['destinationMode'], 'String');
            }
            if (data.hasOwnProperty('domainId')) {
                obj['domainId'] = ApiClient.convertToType(data['domainId'], 'Number');
            }
            if (data.hasOwnProperty('encodeUrl')) {
                obj['encodeUrl'] = ApiClient.convertToType(data['encodeUrl'], 'Boolean');
            }
            if (data.hasOwnProperty('expirationClicks')) {
                obj['expirationClicks'] = ApiClient.convertToType(data['expirationClicks'], 'Number');
            }
            if (data.hasOwnProperty('expirationDate')) {
                obj['expirationDate'] = ApiClient.convertToType(data['expirationDate'], 'String');
            }
            if (data.hasOwnProperty('firstUrl')) {
                obj['firstUrl'] = ApiClient.convertToType(data['firstUrl'], 'String');
            }
            if (data.hasOwnProperty('goDomainId')) {
                obj['goDomainId'] = ApiClient.convertToType(data['goDomainId'], 'Number');
            }
            if (data.hasOwnProperty('hideUrl')) {
                obj['hideUrl'] = ApiClient.convertToType(data['hideUrl'], 'Boolean');
            }
            if (data.hasOwnProperty('hideUrlTitle')) {
                obj['hideUrlTitle'] = ApiClient.convertToType(data['hideUrlTitle'], 'String');
            }
            if (data.hasOwnProperty('isABTest')) {
                obj['isABTest'] = ApiClient.convertToType(data['isABTest'], 'Boolean');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('pauseAfterClicksExpiration')) {
                obj['pauseAfterClicksExpiration'] = ApiClient.convertToType(data['pauseAfterClicksExpiration'], 'Boolean');
            }
            if (data.hasOwnProperty('pauseAfterDateExpiration')) {
                obj['pauseAfterDateExpiration'] = ApiClient.convertToType(data['pauseAfterDateExpiration'], 'Boolean');
            }
            if (data.hasOwnProperty('randomDestinationItems')) {
                obj['randomDestinationItems'] = ApiClient.convertToType(data['randomDestinationItems'], [ApiCoreDtoDatapointsMultipleDestinationItem]);
            }
            if (data.hasOwnProperty('redirectType')) {
                obj['redirectType'] = ApiClient.convertToType(data['redirectType'], 'String');
            }
            if (data.hasOwnProperty('referrerClean')) {
                obj['referrerClean'] = ApiClient.convertToType(data['referrerClean'], 'String');
            }
            if (data.hasOwnProperty('scripts')) {
                obj['scripts'] = ApiClient.convertToType(data['scripts'], [ApiCoreDtoDatapointsDatapointRetargetingInfo]);
            }
            if (data.hasOwnProperty('sequentialDestinationItems')) {
                obj['sequentialDestinationItems'] = ApiClient.convertToType(data['sequentialDestinationItems'], [ApiCoreDtoDatapointsMultipleDestinationItem]);
            }
            if (data.hasOwnProperty('spilloverDestinationItems')) {
                obj['spilloverDestinationItems'] = ApiClient.convertToType(data['spilloverDestinationItems'], [ApiCoreDtoDatapointsMultipleDestinationItem]);
            }
            if (data.hasOwnProperty('uniqueDestinationItem')) {
                obj['uniqueDestinationItem'] = ApiCoreDtoDatapointsUniqueDestinationItem.constructFromObject(data['uniqueDestinationItem']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('urlAfterClicksExpiration')) {
                obj['urlAfterClicksExpiration'] = ApiClient.convertToType(data['urlAfterClicksExpiration'], 'String');
            }
            if (data.hasOwnProperty('urlAfterDateExpiration')) {
                obj['urlAfterDateExpiration'] = ApiClient.convertToType(data['urlAfterDateExpiration'], 'String');
            }
            if (data.hasOwnProperty('urlsByLanguage')) {
                obj['urlsByLanguage'] = ApiClient.convertToType(data['urlsByLanguage'], [ApiCoreDtoDatapointsUrlByLanguageItem]);
            }
            if (data.hasOwnProperty('urlsByNation')) {
                obj['urlsByNation'] = ApiClient.convertToType(data['urlsByNation'], [ApiCoreDtoDatapointsUrlByNationItem]);
            }
            if (data.hasOwnProperty('weightedDestinationItems')) {
                obj['weightedDestinationItems'] = ApiClient.convertToType(data['weightedDestinationItems'], [ApiCoreDtoDatapointsWeightedDestinationItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiCoreDtoDatapointsTrackingLinkSpecifics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiCoreDtoDatapointsTrackingLinkSpecifics</code>.
     */
    static validateJSON(data) {
        // validate the optional field `browserDestinationItem`
        if (data['browserDestinationItem']) { // data not null
          ApiCoreDtoDatapointsBrowserBaseDestinationItem.validateJSON(data['browserDestinationItem']);
        }
        // ensure the json data is a string
        if (data['destinationMode'] && !(typeof data['destinationMode'] === 'string' || data['destinationMode'] instanceof String)) {
            throw new Error("Expected the field `destinationMode` to be a primitive type in the JSON string but got " + data['destinationMode']);
        }
        // ensure the json data is a string
        if (data['expirationDate'] && !(typeof data['expirationDate'] === 'string' || data['expirationDate'] instanceof String)) {
            throw new Error("Expected the field `expirationDate` to be a primitive type in the JSON string but got " + data['expirationDate']);
        }
        // ensure the json data is a string
        if (data['firstUrl'] && !(typeof data['firstUrl'] === 'string' || data['firstUrl'] instanceof String)) {
            throw new Error("Expected the field `firstUrl` to be a primitive type in the JSON string but got " + data['firstUrl']);
        }
        // ensure the json data is a string
        if (data['hideUrlTitle'] && !(typeof data['hideUrlTitle'] === 'string' || data['hideUrlTitle'] instanceof String)) {
            throw new Error("Expected the field `hideUrlTitle` to be a primitive type in the JSON string but got " + data['hideUrlTitle']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        if (data['randomDestinationItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['randomDestinationItems'])) {
                throw new Error("Expected the field `randomDestinationItems` to be an array in the JSON data but got " + data['randomDestinationItems']);
            }
            // validate the optional field `randomDestinationItems` (array)
            for (const item of data['randomDestinationItems']) {
                ApiCoreDtoDatapointsMultipleDestinationItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['redirectType'] && !(typeof data['redirectType'] === 'string' || data['redirectType'] instanceof String)) {
            throw new Error("Expected the field `redirectType` to be a primitive type in the JSON string but got " + data['redirectType']);
        }
        // ensure the json data is a string
        if (data['referrerClean'] && !(typeof data['referrerClean'] === 'string' || data['referrerClean'] instanceof String)) {
            throw new Error("Expected the field `referrerClean` to be a primitive type in the JSON string but got " + data['referrerClean']);
        }
        if (data['scripts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['scripts'])) {
                throw new Error("Expected the field `scripts` to be an array in the JSON data but got " + data['scripts']);
            }
            // validate the optional field `scripts` (array)
            for (const item of data['scripts']) {
                ApiCoreDtoDatapointsDatapointRetargetingInfo.validateJSON(item);
            };
        }
        if (data['sequentialDestinationItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sequentialDestinationItems'])) {
                throw new Error("Expected the field `sequentialDestinationItems` to be an array in the JSON data but got " + data['sequentialDestinationItems']);
            }
            // validate the optional field `sequentialDestinationItems` (array)
            for (const item of data['sequentialDestinationItems']) {
                ApiCoreDtoDatapointsMultipleDestinationItem.validateJSON(item);
            };
        }
        if (data['spilloverDestinationItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['spilloverDestinationItems'])) {
                throw new Error("Expected the field `spilloverDestinationItems` to be an array in the JSON data but got " + data['spilloverDestinationItems']);
            }
            // validate the optional field `spilloverDestinationItems` (array)
            for (const item of data['spilloverDestinationItems']) {
                ApiCoreDtoDatapointsMultipleDestinationItem.validateJSON(item);
            };
        }
        // validate the optional field `uniqueDestinationItem`
        if (data['uniqueDestinationItem']) { // data not null
          ApiCoreDtoDatapointsUniqueDestinationItem.validateJSON(data['uniqueDestinationItem']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['urlAfterClicksExpiration'] && !(typeof data['urlAfterClicksExpiration'] === 'string' || data['urlAfterClicksExpiration'] instanceof String)) {
            throw new Error("Expected the field `urlAfterClicksExpiration` to be a primitive type in the JSON string but got " + data['urlAfterClicksExpiration']);
        }
        // ensure the json data is a string
        if (data['urlAfterDateExpiration'] && !(typeof data['urlAfterDateExpiration'] === 'string' || data['urlAfterDateExpiration'] instanceof String)) {
            throw new Error("Expected the field `urlAfterDateExpiration` to be a primitive type in the JSON string but got " + data['urlAfterDateExpiration']);
        }
        if (data['urlsByLanguage']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['urlsByLanguage'])) {
                throw new Error("Expected the field `urlsByLanguage` to be an array in the JSON data but got " + data['urlsByLanguage']);
            }
            // validate the optional field `urlsByLanguage` (array)
            for (const item of data['urlsByLanguage']) {
                ApiCoreDtoDatapointsUrlByLanguageItem.validateJSON(item);
            };
        }
        if (data['urlsByNation']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['urlsByNation'])) {
                throw new Error("Expected the field `urlsByNation` to be an array in the JSON data but got " + data['urlsByNation']);
            }
            // validate the optional field `urlsByNation` (array)
            for (const item of data['urlsByNation']) {
                ApiCoreDtoDatapointsUrlByNationItem.validateJSON(item);
            };
        }
        if (data['weightedDestinationItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['weightedDestinationItems'])) {
                throw new Error("Expected the field `weightedDestinationItems` to be an array in the JSON data but got " + data['weightedDestinationItems']);
            }
            // validate the optional field `weightedDestinationItems` (array)
            for (const item of data['weightedDestinationItems']) {
                ApiCoreDtoDatapointsWeightedDestinationItem.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Boolean} appendQuery
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['appendQuery'] = undefined;

/**
 * @member {module:model/ApiCoreDtoDatapointsBrowserBaseDestinationItem} browserDestinationItem
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['browserDestinationItem'] = undefined;

/**
 * @member {module:model/ApiCoreDtoDatapointsTrackingLinkSpecifics.DestinationModeEnum} destinationMode
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['destinationMode'] = undefined;

/**
 * @member {Number} domainId
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['domainId'] = undefined;

/**
 * @member {Boolean} encodeUrl
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['encodeUrl'] = undefined;

/**
 * @member {Number} expirationClicks
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['expirationClicks'] = undefined;

/**
 *  (A date in \"YmdHis\" format)
 * @member {String} expirationDate
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['expirationDate'] = undefined;

/**
 * @member {String} firstUrl
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['firstUrl'] = undefined;

/**
 * @member {Number} goDomainId
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['goDomainId'] = undefined;

/**
 * @member {Boolean} hideUrl
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['hideUrl'] = undefined;

/**
 * @member {String} hideUrlTitle
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['hideUrlTitle'] = undefined;

/**
 * @member {Boolean} isABTest
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['isABTest'] = undefined;

/**
 * @member {String} password
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['password'] = undefined;

/**
 * @member {Boolean} pauseAfterClicksExpiration
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['pauseAfterClicksExpiration'] = undefined;

/**
 * @member {Boolean} pauseAfterDateExpiration
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['pauseAfterDateExpiration'] = undefined;

/**
 * @member {Array.<module:model/ApiCoreDtoDatapointsMultipleDestinationItem>} randomDestinationItems
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['randomDestinationItems'] = undefined;

/**
 * @member {module:model/ApiCoreDtoDatapointsTrackingLinkSpecifics.RedirectTypeEnum} redirectType
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['redirectType'] = undefined;

/**
 * @member {module:model/ApiCoreDtoDatapointsTrackingLinkSpecifics.ReferrerCleanEnum} referrerClean
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['referrerClean'] = undefined;

/**
 * @member {Array.<module:model/ApiCoreDtoDatapointsDatapointRetargetingInfo>} scripts
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['scripts'] = undefined;

/**
 * @member {Array.<module:model/ApiCoreDtoDatapointsMultipleDestinationItem>} sequentialDestinationItems
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['sequentialDestinationItems'] = undefined;

/**
 * @member {Array.<module:model/ApiCoreDtoDatapointsMultipleDestinationItem>} spilloverDestinationItems
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['spilloverDestinationItems'] = undefined;

/**
 * @member {module:model/ApiCoreDtoDatapointsUniqueDestinationItem} uniqueDestinationItem
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['uniqueDestinationItem'] = undefined;

/**
 * @member {String} url
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['url'] = undefined;

/**
 * @member {String} urlAfterClicksExpiration
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['urlAfterClicksExpiration'] = undefined;

/**
 * @member {String} urlAfterDateExpiration
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['urlAfterDateExpiration'] = undefined;

/**
 * @member {Array.<module:model/ApiCoreDtoDatapointsUrlByLanguageItem>} urlsByLanguage
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['urlsByLanguage'] = undefined;

/**
 * @member {Array.<module:model/ApiCoreDtoDatapointsUrlByNationItem>} urlsByNation
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['urlsByNation'] = undefined;

/**
 * @member {Array.<module:model/ApiCoreDtoDatapointsWeightedDestinationItem>} weightedDestinationItems
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics.prototype['weightedDestinationItems'] = undefined;





/**
 * Allowed values for the <code>destinationMode</code> property.
 * @enum {String}
 * @readonly
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics['DestinationModeEnum'] = {

    /**
     * value: "Simple"
     * @const
     */
    "Simple": "Simple",

    /**
     * value: "RandomDestination"
     * @const
     */
    "RandomDestination": "RandomDestination",

    /**
     * value: "DestinationByLanguage"
     * @const
     */
    "DestinationByLanguage": "DestinationByLanguage",

    /**
     * value: "SpilloverDestination"
     * @const
     */
    "SpilloverDestination": "SpilloverDestination",

    /**
     * value: "DynamicUrl"
     * @const
     */
    "DynamicUrl": "DynamicUrl",

    /**
     * value: "BrowserDestination"
     * @const
     */
    "BrowserDestination": "BrowserDestination",

    /**
     * value: "DestinationByNation"
     * @const
     */
    "DestinationByNation": "DestinationByNation",

    /**
     * value: "UniqueDestination"
     * @const
     */
    "UniqueDestination": "UniqueDestination",

    /**
     * value: "SequentialDestination"
     * @const
     */
    "SequentialDestination": "SequentialDestination",

    /**
     * value: "WeightedDestination"
     * @const
     */
    "WeightedDestination": "WeightedDestination"
};


/**
 * Allowed values for the <code>redirectType</code> property.
 * @enum {String}
 * @readonly
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics['RedirectTypeEnum'] = {

    /**
     * value: "PermanentRedirect"
     * @const
     */
    "PermanentRedirect": "PermanentRedirect",

    /**
     * value: "TemporaryRedirect"
     * @const
     */
    "TemporaryRedirect": "TemporaryRedirect"
};


/**
 * Allowed values for the <code>referrerClean</code> property.
 * @enum {String}
 * @readonly
 */
ApiCoreDtoDatapointsTrackingLinkSpecifics['ReferrerCleanEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Clean"
     * @const
     */
    "Clean": "Clean",

    /**
     * value: "Myself"
     * @const
     */
    "Myself": "Myself"
};



export default ApiCoreDtoDatapointsTrackingLinkSpecifics;

