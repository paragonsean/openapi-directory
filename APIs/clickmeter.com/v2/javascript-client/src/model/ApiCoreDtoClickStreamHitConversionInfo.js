/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiCoreDtoClickStreamHitConversionInfo model module.
 * @module model/ApiCoreDtoClickStreamHitConversionInfo
 * @version v2
 */
class ApiCoreDtoClickStreamHitConversionInfo {
    /**
     * Constructs a new <code>ApiCoreDtoClickStreamHitConversionInfo</code>.
     * @alias module:model/ApiCoreDtoClickStreamHitConversionInfo
     */
    constructor() { 
        
        ApiCoreDtoClickStreamHitConversionInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiCoreDtoClickStreamHitConversionInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiCoreDtoClickStreamHitConversionInfo} obj Optional instance to populate.
     * @return {module:model/ApiCoreDtoClickStreamHitConversionInfo} The populated <code>ApiCoreDtoClickStreamHitConversionInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiCoreDtoClickStreamHitConversionInfo();

            if (data.hasOwnProperty('accessTime')) {
                obj['accessTime'] = ApiClient.convertToType(data['accessTime'], 'String');
            }
            if (data.hasOwnProperty('comcost')) {
                obj['comcost'] = ApiClient.convertToType(data['comcost'], 'Number');
            }
            if (data.hasOwnProperty('cost')) {
                obj['cost'] = ApiClient.convertToType(data['cost'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parameter')) {
                obj['parameter'] = ApiClient.convertToType(data['parameter'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiCoreDtoClickStreamHitConversionInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiCoreDtoClickStreamHitConversionInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accessTime'] && !(typeof data['accessTime'] === 'string' || data['accessTime'] instanceof String)) {
            throw new Error("Expected the field `accessTime` to be a primitive type in the JSON string but got " + data['accessTime']);
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['parameter'] && !(typeof data['parameter'] === 'string' || data['parameter'] instanceof String)) {
            throw new Error("Expected the field `parameter` to be a primitive type in the JSON string but got " + data['parameter']);
        }

        return true;
    }


}



/**
 *  (A date in \"YmdHis\" format)
 * @member {String} accessTime
 */
ApiCoreDtoClickStreamHitConversionInfo.prototype['accessTime'] = undefined;

/**
 * @member {Number} comcost
 */
ApiCoreDtoClickStreamHitConversionInfo.prototype['comcost'] = undefined;

/**
 * @member {Number} cost
 */
ApiCoreDtoClickStreamHitConversionInfo.prototype['cost'] = undefined;

/**
 *  (A date in \"YmdHis\" format)
 * @member {String} date
 */
ApiCoreDtoClickStreamHitConversionInfo.prototype['date'] = undefined;

/**
 * @member {Boolean} deleted
 */
ApiCoreDtoClickStreamHitConversionInfo.prototype['deleted'] = undefined;

/**
 * @member {Number} id
 */
ApiCoreDtoClickStreamHitConversionInfo.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ApiCoreDtoClickStreamHitConversionInfo.prototype['name'] = undefined;

/**
 * @member {String} parameter
 */
ApiCoreDtoClickStreamHitConversionInfo.prototype['parameter'] = undefined;

/**
 * @member {Number} value
 */
ApiCoreDtoClickStreamHitConversionInfo.prototype['value'] = undefined;






export default ApiCoreDtoClickStreamHitConversionInfo;

