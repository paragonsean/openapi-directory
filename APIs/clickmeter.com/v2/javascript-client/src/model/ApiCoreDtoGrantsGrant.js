/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiCoreResponsesEntityUriSystemInt64 from './ApiCoreResponsesEntityUriSystemInt64';

/**
 * The ApiCoreDtoGrantsGrant model module.
 * @module model/ApiCoreDtoGrantsGrant
 * @version v2
 */
class ApiCoreDtoGrantsGrant {
    /**
     * Constructs a new <code>ApiCoreDtoGrantsGrant</code>.
     * @alias module:model/ApiCoreDtoGrantsGrant
     */
    constructor() { 
        
        ApiCoreDtoGrantsGrant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiCoreDtoGrantsGrant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiCoreDtoGrantsGrant} obj Optional instance to populate.
     * @return {module:model/ApiCoreDtoGrantsGrant} The populated <code>ApiCoreDtoGrantsGrant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiCoreDtoGrantsGrant();

            if (data.hasOwnProperty('DatapointType')) {
                obj['DatapointType'] = ApiClient.convertToType(data['DatapointType'], 'String');
            }
            if (data.hasOwnProperty('Entity')) {
                obj['Entity'] = ApiCoreResponsesEntityUriSystemInt64.constructFromObject(data['Entity']);
            }
            if (data.hasOwnProperty('EntityName')) {
                obj['EntityName'] = ApiClient.convertToType(data['EntityName'], 'String');
            }
            if (data.hasOwnProperty('EntityType')) {
                obj['EntityType'] = ApiClient.convertToType(data['EntityType'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiCoreDtoGrantsGrant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiCoreDtoGrantsGrant</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['DatapointType'] && !(typeof data['DatapointType'] === 'string' || data['DatapointType'] instanceof String)) {
            throw new Error("Expected the field `DatapointType` to be a primitive type in the JSON string but got " + data['DatapointType']);
        }
        // validate the optional field `Entity`
        if (data['Entity']) { // data not null
          ApiCoreResponsesEntityUriSystemInt64.validateJSON(data['Entity']);
        }
        // ensure the json data is a string
        if (data['EntityName'] && !(typeof data['EntityName'] === 'string' || data['EntityName'] instanceof String)) {
            throw new Error("Expected the field `EntityName` to be a primitive type in the JSON string but got " + data['EntityName']);
        }
        // ensure the json data is a string
        if (data['EntityType'] && !(typeof data['EntityType'] === 'string' || data['EntityType'] instanceof String)) {
            throw new Error("Expected the field `EntityType` to be a primitive type in the JSON string but got " + data['EntityType']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}



/**
 * @member {String} DatapointType
 */
ApiCoreDtoGrantsGrant.prototype['DatapointType'] = undefined;

/**
 * @member {module:model/ApiCoreResponsesEntityUriSystemInt64} Entity
 */
ApiCoreDtoGrantsGrant.prototype['Entity'] = undefined;

/**
 * @member {String} EntityName
 */
ApiCoreDtoGrantsGrant.prototype['EntityName'] = undefined;

/**
 * @member {String} EntityType
 */
ApiCoreDtoGrantsGrant.prototype['EntityType'] = undefined;

/**
 * @member {String} Type
 */
ApiCoreDtoGrantsGrant.prototype['Type'] = undefined;






export default ApiCoreDtoGrantsGrant;

