/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiCoreDtoTagsTag from './ApiCoreDtoTagsTag';

/**
 * The ApiCoreDtoGroupsGroup model module.
 * @module model/ApiCoreDtoGroupsGroup
 * @version v2
 */
class ApiCoreDtoGroupsGroup {
    /**
     * Constructs a new <code>ApiCoreDtoGroupsGroup</code>.
     * @alias module:model/ApiCoreDtoGroupsGroup
     */
    constructor() { 
        
        ApiCoreDtoGroupsGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiCoreDtoGroupsGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiCoreDtoGroupsGroup} obj Optional instance to populate.
     * @return {module:model/ApiCoreDtoGroupsGroup} The populated <code>ApiCoreDtoGroupsGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiCoreDtoGroupsGroup();

            if (data.hasOwnProperty('creationDate')) {
                obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('isPublic')) {
                obj['isPublic'] = ApiClient.convertToType(data['isPublic'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('preferred')) {
                obj['preferred'] = ApiClient.convertToType(data['preferred'], 'Boolean');
            }
            if (data.hasOwnProperty('redirectOnly')) {
                obj['redirectOnly'] = ApiClient.convertToType(data['redirectOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [ApiCoreDtoTagsTag]);
            }
            if (data.hasOwnProperty('writePermited')) {
                obj['writePermited'] = ApiClient.convertToType(data['writePermited'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiCoreDtoGroupsGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiCoreDtoGroupsGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creationDate'] && !(typeof data['creationDate'] === 'string' || data['creationDate'] instanceof String)) {
            throw new Error("Expected the field `creationDate` to be a primitive type in the JSON string but got " + data['creationDate']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }
        if (data['tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tags'])) {
                throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
            }
            // validate the optional field `tags` (array)
            for (const item of data['tags']) {
                ApiCoreDtoTagsTag.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 *  (A date in \"YmdHis\" format)
 * @member {String} creationDate
 */
ApiCoreDtoGroupsGroup.prototype['creationDate'] = undefined;

/**
 * @member {Boolean} deleted
 */
ApiCoreDtoGroupsGroup.prototype['deleted'] = undefined;

/**
 * @member {Number} id
 */
ApiCoreDtoGroupsGroup.prototype['id'] = undefined;

/**
 * @member {Boolean} isPublic
 */
ApiCoreDtoGroupsGroup.prototype['isPublic'] = undefined;

/**
 * @member {String} name
 */
ApiCoreDtoGroupsGroup.prototype['name'] = undefined;

/**
 * @member {String} notes
 */
ApiCoreDtoGroupsGroup.prototype['notes'] = undefined;

/**
 * @member {Boolean} preferred
 */
ApiCoreDtoGroupsGroup.prototype['preferred'] = undefined;

/**
 * @member {Boolean} redirectOnly
 */
ApiCoreDtoGroupsGroup.prototype['redirectOnly'] = undefined;

/**
 * @member {Array.<module:model/ApiCoreDtoTagsTag>} tags
 */
ApiCoreDtoGroupsGroup.prototype['tags'] = undefined;

/**
 * @member {Boolean} writePermited
 */
ApiCoreDtoGroupsGroup.prototype['writePermited'] = undefined;






export default ApiCoreDtoGroupsGroup;

