/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClickMeterInfrastructureValidationValidationFailure model module.
 * @module model/ClickMeterInfrastructureValidationValidationFailure
 * @version v2
 */
class ClickMeterInfrastructureValidationValidationFailure {
    /**
     * Constructs a new <code>ClickMeterInfrastructureValidationValidationFailure</code>.
     * @alias module:model/ClickMeterInfrastructureValidationValidationFailure
     */
    constructor() { 
        
        ClickMeterInfrastructureValidationValidationFailure.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClickMeterInfrastructureValidationValidationFailure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClickMeterInfrastructureValidationValidationFailure} obj Optional instance to populate.
     * @return {module:model/ClickMeterInfrastructureValidationValidationFailure} The populated <code>ClickMeterInfrastructureValidationValidationFailure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClickMeterInfrastructureValidationValidationFailure();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], Object);
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('errorValue')) {
                obj['errorValue'] = ApiClient.convertToType(data['errorValue'], Object);
            }
            if (data.hasOwnProperty('property')) {
                obj['property'] = ApiClient.convertToType(data['property'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClickMeterInfrastructureValidationValidationFailure</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClickMeterInfrastructureValidationValidationFailure</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['errorMessage'] && !(typeof data['errorMessage'] === 'string' || data['errorMessage'] instanceof String)) {
            throw new Error("Expected the field `errorMessage` to be a primitive type in the JSON string but got " + data['errorMessage']);
        }
        // ensure the json data is a string
        if (data['property'] && !(typeof data['property'] === 'string' || data['property'] instanceof String)) {
            throw new Error("Expected the field `property` to be a primitive type in the JSON string but got " + data['property']);
        }

        return true;
    }


}



/**
 * @member {Object} code
 */
ClickMeterInfrastructureValidationValidationFailure.prototype['code'] = undefined;

/**
 * @member {String} errorMessage
 */
ClickMeterInfrastructureValidationValidationFailure.prototype['errorMessage'] = undefined;

/**
 * @member {Object} errorValue
 */
ClickMeterInfrastructureValidationValidationFailure.prototype['errorValue'] = undefined;

/**
 * @member {String} property
 */
ClickMeterInfrastructureValidationValidationFailure.prototype['property'] = undefined;






export default ClickMeterInfrastructureValidationValidationFailure;

