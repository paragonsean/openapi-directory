/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiCoreDtoDomainsDomain model module.
 * @module model/ApiCoreDtoDomainsDomain
 * @version v2
 */
class ApiCoreDtoDomainsDomain {
    /**
     * Constructs a new <code>ApiCoreDtoDomainsDomain</code>.
     * @alias module:model/ApiCoreDtoDomainsDomain
     */
    constructor() { 
        
        ApiCoreDtoDomainsDomain.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiCoreDtoDomainsDomain</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiCoreDtoDomainsDomain} obj Optional instance to populate.
     * @return {module:model/ApiCoreDtoDomainsDomain} The populated <code>ApiCoreDtoDomainsDomain</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiCoreDtoDomainsDomain();

            if (data.hasOwnProperty('custom404')) {
                obj['custom404'] = ApiClient.convertToType(data['custom404'], 'String');
            }
            if (data.hasOwnProperty('customHomepage')) {
                obj['customHomepage'] = ApiClient.convertToType(data['customHomepage'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiCoreDtoDomainsDomain</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiCoreDtoDomainsDomain</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['custom404'] && !(typeof data['custom404'] === 'string' || data['custom404'] instanceof String)) {
            throw new Error("Expected the field `custom404` to be a primitive type in the JSON string but got " + data['custom404']);
        }
        // ensure the json data is a string
        if (data['customHomepage'] && !(typeof data['customHomepage'] === 'string' || data['customHomepage'] instanceof String)) {
            throw new Error("Expected the field `customHomepage` to be a primitive type in the JSON string but got " + data['customHomepage']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {String} custom404
 */
ApiCoreDtoDomainsDomain.prototype['custom404'] = undefined;

/**
 * @member {String} customHomepage
 */
ApiCoreDtoDomainsDomain.prototype['customHomepage'] = undefined;

/**
 * @member {Number} id
 */
ApiCoreDtoDomainsDomain.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ApiCoreDtoDomainsDomain.prototype['name'] = undefined;

/**
 * @member {module:model/ApiCoreDtoDomainsDomain.TypeEnum} type
 */
ApiCoreDtoDomainsDomain.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ApiCoreDtoDomainsDomain['TypeEnum'] = {

    /**
     * value: "System"
     * @const
     */
    "System": "System",

    /**
     * value: "Go"
     * @const
     */
    "Go": "Go",

    /**
     * value: "Dedicated"
     * @const
     */
    "Dedicated": "Dedicated",

    /**
     * value: "Personal"
     * @const
     */
    "Personal": "Personal"
};



export default ApiCoreDtoDomainsDomain;

