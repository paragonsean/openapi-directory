openapi: 3.0.0
info:
  contact:
    email: api@clickmeter.com
    name: Api Support
    url: http://www.clickmeter.com/api
  description: Api dashboard for ClickMeter API
  title: ClickMeter API
  version: v2
  x-apisguru-categories:
  - marketing
  x-logo:
    url: https://s3.amazonaws.com/clickmeter.com/Web/static/cmlogo.svg
  x-origin:
  - format: openapi
    url: http://api.v2.clickmeter.com.s3.amazonaws.com/docs/api-docs-v2.json
    version: "3.0"
  x-providerName: clickmeter.com
servers:
- url: http://apiv2.clickmeter.com:80
- url: https://apiv2.clickmeter.com:80
security:
- api_key: []
paths:
  /account:
    get:
      deprecated: false
      operationId: Account_Get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve current account data
      tags:
      - Account
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    post:
      deprecated: false
      operationId: Account_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Update current account data
      tags:
      - Account
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/domainwhitelist:
    get:
      deprecated: false
      operationId: Account_GetDomainWhitelist
      parameters:
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.DomainWhitelistEntry_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.DomainWhitelistEntry_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve list of a domains allowed to redirect in DDU mode
      tags:
      - Account
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Account_PutDomainWhitelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
        description: The entry to add
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create an domain entry
      tags:
      - Account
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/domainwhitelist/{whitelistId}:
    delete:
      deprecated: false
      operationId: Account_DeleteDomainWhitelist
      parameters:
      - description: The id of the domain to delete
        explode: false
        in: path
        name: whitelistId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete an domain entry
      tags:
      - Account
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/guests:
    get:
      deprecated: false
      operationId: Account_GetGuests
      parameters:
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Field to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Direction of sort "asc" or "desc"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve list of a guest
      tags:
      - Account
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Account_PutGuest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
        description: Guest object to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create a guest
      tags:
      - Account
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/guests/count:
    get:
      deprecated: false
      operationId: Account_GetGuestsCount
      parameters:
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve count of guests
      tags:
      - Account
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/guests/{guestId}:
    delete:
      deprecated: false
      operationId: Account_DeleteGuest
      parameters:
      - description: Id of the guest
        explode: false
        in: path
        name: guestId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete a guest
      tags:
      - Account
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    get:
      deprecated: false
      operationId: Account_GetGuest
      parameters:
      - description: Id of the guest
        explode: false
        in: path
        name: guestId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a guest
      tags:
      - Account
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    post:
      deprecated: false
      operationId: Account_PostGuest
      parameters:
      - description: Id of the guest
        explode: false
        in: path
        name: guestId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
        description: Guest object with field updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Guest'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Update a guest
      tags:
      - Account
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/guests/{guestId}/permissions:
    get:
      deprecated: false
      operationId: Account_GetPermissions
      parameters:
      - description: Id of the guest
        explode: false
        in: path
        name: guestId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Can be "datapoint" or "group"
        explode: true
        in: query
        name: entityType
        required: false
        schema:
          enum:
          - datapoint
          - group
          type: string
        style: form
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Can be "w" or "r"
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - r
          - w
          type: string
        style: form
      - description: Optional id of the datapoint/group entity to filter by
        explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Grants.Grant_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Grants.Grant_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve permissions for a guest
      tags:
      - Account
      x-accepts:
      - application/json
      - text/json
  /account/guests/{guestId}/permissions/count:
    get:
      deprecated: false
      operationId: Account_GetPermissionsCount
      parameters:
      - description: Id of the guest
        explode: false
        in: path
        name: guestId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Can be "datapoint" or "group"
        explode: true
        in: query
        name: entityType
        required: false
        schema:
          enum:
          - datapoint
          - group
          type: string
        style: form
      - description: Can be "w" or "r"
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - r
          - w
          type: string
        style: form
      - description: Optional id of the datapoint/group entity to filter by
        explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve count of the permissions for a guest
      tags:
      - Account
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/guests/{guestId}/{type}/permissions/patch:
    post:
      deprecated: false
      parameters:
      - description: Id of the guest
        explode: false
        in: path
        name: guestId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Can be "datapoint" or "group"
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - datapoint
          - group
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Requests.PermissionPatchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Change the permission on a shared object
      tags:
      - Account
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    put:
      deprecated: false
      operationId: Account_PatchPermissions
      parameters:
      - description: Id of the guest
        explode: false
        in: path
        name: guestId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Can be "datapoint" or "group"
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - datapoint
          - group
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Requests.PermissionPatchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Change the permission on a shared object
      tags:
      - Account
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/ipblacklist:
    get:
      deprecated: false
      operationId: Account_GetIpBlacklist
      parameters:
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.IpBlacklistEntry_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.IpBlacklistEntry_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve list of a ip to exclude from event tracking
      tags:
      - Account
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Account_PutIpBlacklist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
        description: The entry to add
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create an ip blacklist entry
      tags:
      - Account
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/ipblacklist/{blacklistId}:
    delete:
      deprecated: false
      operationId: Account_DeleteIpBlacklist
      parameters:
      - description: The id of the ip to delete
        explode: false
        in: path
        name: blacklistId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete an ip blacklist entry
      tags:
      - Account
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /account/plan:
    get:
      deprecated: false
      operationId: Account_GetPlan
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Plan'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Plan'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Plan'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Plan'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve current account plan
      tags:
      - Account
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /aggregated:
    get:
      deprecated: false
      operationId: Aggregated_GetStatisticsSingle
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: If using "yesterday" or "today" timeframe you can ask for the
          hourly detail
        explode: true
        in: query
        name: hourly
        required: false
        schema:
          type: boolean
        style: form
      - description: ""
        explode: true
        in: query
        name: onlyFavorites
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe
      tags:
      - Aggregated
      x-accepts:
      - application/json
      - text/json
  /aggregated/list:
    get:
      deprecated: false
      operationId: Aggregated_GetStatisticsList
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: The temporal entity you want to group by ("week"/"month"). If
          unspecified is "day".
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          enum:
          - week
          - month
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe grouped by
        some temporal entity (day/week/month)
      tags:
      - Aggregated
      x-accepts:
      - application/json
      - text/json
  /aggregated/summary/conversions:
    get:
      deprecated: false
      operationId: Aggregated_GetConversionsSummary
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Status of conversion ("deleted"/"active")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: Field to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Direction of sort "asc" or "desc"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about a subset of conversions for a timeframe with
        conversions data
      tags:
      - Aggregated
      x-accepts:
      - application/json
      - text/json
  /aggregated/summary/datapoints:
    get:
      deprecated: false
      operationId: Aggregated_GetDatapointsSummary
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: Type of datapoint ("tl"/"tp")
        explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Is the datapoint marked as favourite
        explode: true
        in: query
        name: favourite
        required: false
        schema:
          type: boolean
        style: form
      - description: Field to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Direction of sort "asc" or "desc"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Filter by this group id
        explode: true
        in: query
        name: groupId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about a subset of datapoints for a timeframe with
        datapoints data
      tags:
      - Aggregated
      x-accepts:
      - application/json
      - text/json
  /aggregated/summary/groups:
    get:
      deprecated: false
      operationId: Aggregated_GetGroupsSummary
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Status of group ("deleted"/"active")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Is the group marked as favourite
        explode: true
        in: query
        name: favourite
        required: false
        schema:
          type: boolean
        style: form
      - description: Field to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Direction of sort "asc" or "desc"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about a subset of groups for a timeframe with groups
        data
      tags:
      - Aggregated
      x-accepts:
      - application/json
      - text/json
  /clickstream:
    get:
      deprecated: false
      operationId: ClickStream_Get
      parameters:
      - description: Filter by this group id (mutually exclusive with "datapoint"
          and "conversion")
        explode: true
        in: query
        name: group
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter by this datapoint id (mutually exclusive with "group"
          and "conversion")
        explode: true
        in: query
        name: datapoint
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter by this conversion id (mutually exclusive with "datapoint"
          and "group")
        explode: true
        in: query
        name: conversion
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - ""
          - spiders
          - uniques
          - nonuniques
          - conversions
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.ClickStream.Hit_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.ClickStream.Hit_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the latest list of events of this account. Limited to last
        100.
      tags:
      - ClickStream
      x-accepts:
      - application/json
      - text/json
  /conversions:
    get:
      deprecated: false
      operationId: Conversions_Get
      parameters:
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Status of conversion ("deleted"/"active")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude conversions created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude conversions created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a list of conversions
      tags:
      - Conversions
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Conversions_Put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
        description: The body of the conversion
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a conversion
      tags:
      - Conversions
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /conversions/aggregated/list:
    get:
      deprecated: false
      operationId: Conversions_GetStatisticsAllList
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Status of conversion ("deleted"/"active")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: The temporal entity you want to group by ("week"/"month"). If
          unspecified is "day".
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          enum:
          - week
          - month
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe related to
        a subset of conversions grouped by some temporal entity (day/week/month)
      tags:
      - Conversions
      x-accepts:
      - application/json
      - text/json
  /conversions/count:
    get:
      deprecated: false
      operationId: Conversions_Count
      parameters:
      - description: Status of conversion ("deleted"/"active")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude conversions created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude conversions created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a count of conversions
      tags:
      - Conversions
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /conversions/{conversionId}:
    delete:
      deprecated: false
      operationId: Conversions_Delete
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Delete conversion specified by id
      tags:
      - Conversions
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    get:
      deprecated: false
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Retrieve conversion specified by id
      tags:
      - Conversions
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    post:
      deprecated: false
      operationId: Conversions_Post
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Conversions.Conversion'
        description: Updated body of the conversion
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Update conversion specified by id
      tags:
      - Conversions
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /conversions/{conversionId}/aggregated:
    get:
      deprecated: false
      operationId: Conversions_GetStatisticsSingle
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Filter by this tag name
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Is the datapoint marked as favourite
        explode: true
        in: query
        name: favourite
        required: false
        schema:
          type: boolean
        style: form
      - description: If using "yesterday" or "today" timeframe you can ask for the
          hourly detail
        explode: true
        in: query
        name: hourly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this conversion for a timeframe
      tags:
      - Conversions
      x-accepts:
      - application/json
      - text/json
  /conversions/{conversionId}/aggregated/list:
    get:
      deprecated: false
      operationId: Conversions_GetStatisticsList
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: The temporal entity you want to group by ("week"/"month"). If
          unspecified is "day".
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          enum:
          - week
          - month
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this conversion for a timeframe grouped by
        some temporal entity (day/week/month)
      tags:
      - Conversions
      x-accepts:
      - application/json
      - text/json
  /conversions/{conversionId}/datapoints:
    get:
      deprecated: false
      operationId: Conversions_GetDatapoints
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Type of datapoint ("tl"/"tp")
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: Filter by this tag name
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a list of datapoints connected to this conversion
      tags:
      - Conversions
      x-accepts:
      - application/json
      - text/json
  /conversions/{conversionId}/datapoints/batch/patch:
    put:
      deprecated: false
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.PatchBodyBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.PatchBodyBatch'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.PatchBodyBatch'
        description: Patch requests
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Modify the association between a conversion and multiple datapoints
      tags:
      - Conversions
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /conversions/{conversionId}/datapoints/count:
    get:
      deprecated: false
      operationId: Conversions_GetDatapointsCount
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Type of datapoint ("tl"/"tp")
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: Filter by this tag name
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a count of datapoints connected to this conversion
      tags:
      - Conversions
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /conversions/{conversionId}/datapoints/patch:
    put:
      deprecated: false
      operationId: Conversions_Patch
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.ConversionPatchBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.ConversionPatchBody'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.ConversionPatchBody'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.ConversionPatchBody'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.ConversionPatchBody'
        description: Patch request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Modify the association between a conversion and a datapoint
      tags:
      - Conversions
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /conversions/{conversionId}/hits:
    get:
      deprecated: false
      operationId: Conversions_GetHits
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeframe
        required: true
        schema:
          enum:
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - custom
          type: string
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Offset where to start from (it's the lastKey field in the response
          object)
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - spiders
          - uniques
          - nonuniques
          - conversions
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitListPage'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitListPage'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the list of events related to this conversion.
      tags:
      - Conversions
      x-accepts:
      - application/json
      - text/json
  /conversions/{conversionId}/notes:
    put:
      deprecated: false
      operationId: Conversions_PatchNotes
      parameters:
      - description: Id of the conversion
        explode: false
        in: path
        name: conversionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Requests.GenericTextPatch'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast patch the "notes" field of a conversion
      tags:
      - Conversions
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /datapoints:
    get:
      deprecated: false
      operationId: DataPoints_Get
      parameters:
      - description: Where to start when retrieving elements. Default is 0 if not
          specified.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Maximum elements to retrieve. Default to 20 if not specified.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Type of the datapoint ("tp"/"tl")
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by favourite status
        explode: true
        in: query
        name: onlyFavorites
        required: false
        schema:
          type: boolean
        style: form
      - description: Field to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Direction of sort "asc" or "desc"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the datapoints associated to the user
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: DataPoints_Put
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Dto.Datapoints.Datapoint'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a datapoint
      tags:
      - DataPoints
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /datapoints/aggregated:
    get:
      deprecated: false
      operationId: DataPoints_GetStatisticsAggregatedSingle
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: Type of datapoint ("tl"/"tp")
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: If using "yesterday" or "today" timeframe you can ask for the
          hourly detail
        explode: true
        in: query
        name: hourly
        required: false
        schema:
          type: boolean
        style: form
      - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Is the datapoint is marked as favourite
        explode: true
        in: query
        name: favourite
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe by groups
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - text/json
  /datapoints/aggregated/list:
    get:
      deprecated: false
      operationId: DataPoints_GetStatisticsAllList
      parameters:
      - description: Type of datapoint ("tl"/"tp")
        explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Is the datapoint is marked as favourite
        explode: true
        in: query
        name: favourite
        required: false
        schema:
          type: boolean
        style: form
      - description: The temporal entity you want to group by ("week"/"month"). If
          unspecified is "day".
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          enum:
          - week
          - month
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about all datapoints of this customer for a timeframe
        grouped by some temporal entity (day/week/month)
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - text/json
  /datapoints/batch:
    delete:
      deprecated: false
      operationId: DataPoints_BatchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.DeleteBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.DeleteBatch'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.DeleteBatch'
        description: A json containing the datapoints to delete.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Delete multiple datapoints
      tags:
      - DataPoints
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: DataPoints_BatchPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.DatapointsBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.DatapointsBatch'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.DatapointsBatch'
        description: A json containing the datapoints to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Update multiple datapoints
      tags:
      - DataPoints
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
    put:
      deprecated: false
      operationId: DataPoints_BatchPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.DatapointsBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.DatapointsBatch'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.DatapointsBatch'
        description: A json containing the datapoints to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.ModifyBatchItemResponce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create multiple datapoints
      tags:
      - DataPoints
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/json
  /datapoints/count:
    get:
      deprecated: false
      operationId: DataPoints_Count
      parameters:
      - description: Type of the datapoint ("tp"/"tl")
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by favourite status
        explode: true
        in: query
        name: onlyFavorites
        required: false
        schema:
          type: boolean
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the datapoints associated to the user
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /datapoints/{id}:
    delete:
      deprecated: false
      operationId: DataPoints_Delete
      parameters:
      - description: The id of the datapoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Delete a datapoint
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    get:
      deprecated: false
      parameters:
      - description: The id of the datapoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Datapoints.Datapoint'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Datapoints.Datapoint'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Get a datapoint
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: DataPoints_Post
      parameters:
      - description: The id of the datapoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Dto.Datapoints.Datapoint'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Update a datapoint
      tags:
      - DataPoints
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /datapoints/{id}/aggregated:
    get:
      deprecated: false
      operationId: DataPoints_GetStatisticsSingle
      parameters:
      - description: Id of the datapoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: If using "yesterday" or "today" timeframe you can ask for the
          hourly detail
        explode: true
        in: query
        name: hourly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this datapoint for a timeframe
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - text/json
  /datapoints/{id}/aggregated/list:
    get:
      deprecated: false
      operationId: DataPoints_GetStatisticsList
      parameters:
      - description: Id of the datapoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: The temporal entity you want to group by ("week"/"month"). If
          unspecified is "day".
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          enum:
          - week
          - month
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this datapoint for a timeframe grouped by
        some temporal entity (day/week/month)
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - text/json
  /datapoints/{id}/favourite:
    put:
      deprecated: false
      operationId: DataPoints_PatchFavourite
      parameters:
      - description: Id of the datapoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast switch the "favourite" field of a datapoint
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /datapoints/{id}/hits:
    get:
      deprecated: false
      operationId: DataPoints_GetHits
      parameters:
      - description: Id of the datapoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeframe
        required: true
        schema:
          enum:
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - custom
          type: string
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Offset where to start from (it's the lastKey field in the response
          object)
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - spiders
          - uniques
          - nonuniques
          - conversions
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitListPage'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitListPage'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the list of events related to this datapoint.
      tags:
      - DataPoints
      x-accepts:
      - application/json
      - text/json
  /datapoints/{id}/notes:
    put:
      deprecated: false
      operationId: DataPoints_PatchNotes
      parameters:
      - description: Id of the datapoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Requests.GenericTextPatch'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast patch the "notes" field of a datapoint
      tags:
      - DataPoints
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /domains:
    get:
      deprecated: false
      operationId: Domains_Get
      parameters:
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Type of domain ("system"/"go"/"personal"/"dedicated"). If not
          specified default is "system"
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: system
          enum:
          - system
          - go
          - personal
          - dedicated
          type: string
        style: form
      - description: Filter domains with this anmen
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a list of domains
      tags:
      - Domains
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Domains_Put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
        description: The domain to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Create a domain
      tags:
      - Domains
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /domains/count:
    get:
      deprecated: false
      operationId: Domains_Count
      parameters:
      - description: Type of domain ("system"/"go"/"personal"/"dedicated"). If not
          specified default is "system"
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: system
          enum:
          - system
          - go
          - personal
          - dedicated
          type: string
        style: form
      - description: Filter domains with this anmen
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve count of domains
      tags:
      - Domains
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /domains/{id}:
    delete:
      deprecated: false
      operationId: Domains_Delete
      parameters:
      - description: Id of domain
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete a domain
      tags:
      - Domains
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    get:
      deprecated: false
      parameters:
      - description: Id of domain
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Get a domain
      tags:
      - Domains
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    post:
      deprecated: false
      operationId: Domains_Update
      parameters:
      - description: Id of domain
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Domains.Domain'
        description: The domain to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Update a domain
      tags:
      - Domains
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /groups:
    get:
      deprecated: false
      operationId: Groups_Get
      parameters:
      - description: Where to start when retrieving elements. Default is 0 if not
          specified.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Maximum elements to retrieve. Default to 20 if not specified.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Status of the group
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude groups created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude groups created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      - description: Write permission
        explode: true
        in: query
        name: write
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the groups associated to the user.
      tags:
      - Groups
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Groups_Put
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Dto.Groups.Group'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /groups/aggregated:
    get:
      deprecated: false
      operationId: Groups_GetStatisticsAggregatedSingle
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: If using "yesterday" or "today" timeframe you can ask for the
          hourly detail
        explode: true
        in: query
        name: hourly
        required: false
        schema:
          type: boolean
        style: form
      - description: Status of group ("deleted"/"active")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Is the group is marked as favourite
        explode: true
        in: query
        name: favourite
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this customer for a timeframe by groups
      tags:
      - Groups
      x-accepts:
      - application/json
      - text/json
  /groups/aggregated/list:
    get:
      deprecated: false
      operationId: Groups_GetStatisticsAllList
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Status of group ("deleted"/"active")
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Is the group is marked as favourite
        explode: true
        in: query
        name: favourite
        required: false
        schema:
          type: boolean
        style: form
      - description: The temporal entity you want to group by ("week"/"month"). If
          unspecified is "day".
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about all groups of this customer for a timeframe
        grouped by some temporal entity (day/week/month)
      tags:
      - Groups
      x-accepts:
      - application/json
      - text/json
  /groups/count:
    get:
      deprecated: false
      operationId: Groups_Count
      parameters:
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude groups created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude groups created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      - description: Write permission
        explode: true
        in: query
        name: write
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the groups associated to the user.
      tags:
      - Groups
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /groups/{id}:
    delete:
      deprecated: false
      operationId: Groups_Delete
      parameters:
      - description: Id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Delete group specified by id
      tags:
      - Groups
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    get:
      deprecated: false
      parameters:
      - description: The id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Groups.Group'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Groups.Group'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Get a group
      tags:
      - Groups
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Groups_Post
      parameters:
      - description: The id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Dto.Groups.Group'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Update a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /groups/{id}/aggregated:
    get:
      deprecated: false
      operationId: Groups_GetStatisticsSingle
      parameters:
      - description: Id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: If using "yesterday" or "today" timeframe you can ask for the
          hourly detail
        explode: true
        in: query
        name: hourly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this group for a timeframe
      tags:
      - Groups
      x-accepts:
      - application/json
      - text/json
  /groups/{id}/aggregated/list:
    get:
      deprecated: false
      operationId: Groups_GetStatisticsList
      parameters:
      - description: Id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: The temporal entity you want to group by ("week"/"month"). If
          unspecified is "day".
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          enum:
          - week
          - month
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about this group for a timeframe grouped by some
        temporal entity (day/week/month)
      tags:
      - Groups
      x-accepts:
      - application/json
      - text/json
  /groups/{id}/aggregated/summary:
    get:
      deprecated: false
      operationId: Groups_GetDatapointsSummary
      parameters:
      - description: Filter by this group id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeFrame
        required: true
        schema:
          enum:
          - today
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - last12months
          - lastyear
          - currentyear
          - beginning
          - custom
          type: string
        style: form
      - description: Type of datapoint ("tl"/"tp")
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Status of datapoint ("deleted"/"active"/"paused"/"spam")
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: Is the datapoint marked as favourite
        explode: true
        in: query
        name: favourite
        required: false
        schema:
          type: boolean
        style: form
      - description: Field to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Direction of sort "asc" or "desc"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Offset where to start from
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedSummaryResult'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve statistics about a subset of datapoints for a timeframe with
        datapoints data
      tags:
      - Groups
      x-accepts:
      - application/json
      - text/json
  /groups/{id}/datapoints:
    get:
      deprecated: false
      operationId: Groups_GetDatapoints
      parameters:
      - description: Id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Where to start when retrieving elements. Default is 0 if not
          specified.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Maximum elements to retrieve. Default to 20 if not specified.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Type of the datapoint ("tp"/"tl")
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by favourite status
        explode: true
        in: query
        name: onlyFavorites
        required: false
        schema:
          type: boolean
        style: form
      - description: Field to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Direction of sort "asc" or "desc"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the datapoints associated to the user in this group.
      tags:
      - Groups
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Groups_PutDatapoint
      parameters:
      - description: The id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Dto.Datapoints.Datapoint'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a datapoint in this group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /groups/{id}/datapoints/count:
    get:
      deprecated: false
      operationId: Groups_GetDatapointsCount
      parameters:
      - description: Id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Type of the datapoint ("tp"/"tl")
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by favourite status
        explode: true
        in: query
        name: onlyFavorites
        required: false
        schema:
          type: boolean
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the datapoints associated to the user in this group.
      tags:
      - Groups
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /groups/{id}/favourite:
    put:
      deprecated: false
      operationId: Groups_PatchFavourite
      parameters:
      - description: Id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast switch the "favourite" field of a group
      tags:
      - Groups
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /groups/{id}/hits:
    get:
      deprecated: false
      operationId: Groups_GetHits
      parameters:
      - description: Id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeframe
        required: true
        schema:
          enum:
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - custom
          type: string
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Offset where to start from (it's the lastKey field in the response
          object)
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - spiders
          - uniques
          - nonuniques
          - conversions
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitListPage'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitListPage'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the list of events related to this group.
      tags:
      - Groups
      x-accepts:
      - application/json
      - text/json
  /groups/{id}/notes:
    put:
      deprecated: false
      operationId: Groups_PatchNotes
      parameters:
      - description: Id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Requests.GenericTextPatch'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Fast patch the "notes" field of a group
      tags:
      - Groups
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /hits:
    get:
      deprecated: false
      operationId: Hits_GetHits
      parameters:
      - description: Timeframe of the request. See list at $timeframeList
        explode: true
        in: query
        name: timeframe
        required: true
        schema:
          enum:
          - yesterday
          - last7
          - last30
          - lastmonth
          - currentmonth
          - previousmonth
          - last90
          - last120
          - last180
          - custom
          type: string
        style: form
      - description: Limit results to this number
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Offset where to start from (it's the lastKey field in the response
          object)
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the starting day
          (YYYYMMDD)
        explode: true
        in: query
        name: fromDay
        required: false
        schema:
          type: string
        style: form
      - description: If using a "custom" timeFrame you can specify the ending day
          (YYYYMMDD)
        explode: true
        in: query
        name: toDay
        required: false
        schema:
          type: string
        style: form
      - description: Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - spiders
          - uniques
          - nonuniques
          - conversions
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitListPage'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitListPage'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve the list of events related to this account.
      tags:
      - Hits
      x-accepts:
      - application/json
      - text/json
  /me:
    get:
      deprecated: false
      operationId: Me_GetMe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.User'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve current account data
      tags:
      - Me
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /me/plan:
    get:
      deprecated: false
      operationId: Me_GetMePlan
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Plan'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Plan'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Plan'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Accounting.Plan'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve current account plan
      tags:
      - Me
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /retargeting:
    get:
      deprecated: false
      operationId: Retargeting_Get
      parameters:
      - description: Where to start when retrieving elements. Default is 0 if not
          specified.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Maximum elements to retrieve. Default to 20 if not specified.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the retargeting scripts associated to the user
      tags:
      - Retargeting
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Retargeting_Put
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Dto.Retargeting.RetargetingScript'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Creates a retargeting script
      tags:
      - Retargeting
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /retargeting/count:
    get:
      deprecated: false
      operationId: Retargeting_Count
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve count of retargeting scripts
      tags:
      - Retargeting
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /retargeting/{id}:
    delete:
      deprecated: false
      operationId: Retargeting_Delete
      parameters:
      - description: The id of the retargeting script
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Deletes a retargeting script (and remove associations)
      tags:
      - Retargeting
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    get:
      deprecated: false
      parameters:
      - description: The id of the retargeting script
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Get a retargeting script object
      tags:
      - Retargeting
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    post:
      deprecated: false
      operationId: Retargeting_Post
      parameters:
      - description: The id of the retargeting script
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Dto.Retargeting.RetargetingScript'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Updates a retargeting script
      tags:
      - Retargeting
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /retargeting/{id}/datapoints:
    get:
      deprecated: false
      operationId: Retargeting_GetDatapoints
      parameters:
      - description: Id of the retargeting script
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Where to start when retrieving elements. Default is 0 if not
          specified.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Maximum elements to retrieve. Default to 20 if not specified.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by favourite status
        explode: true
        in: query
        name: onlyFavorites
        required: false
        schema:
          type: boolean
        style: form
      - description: Field to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Direction of sort "asc" or "desc"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the datapoints associated to the retargeting script.
      tags:
      - Retargeting
      x-accepts:
      - application/json
      - text/json
  /retargeting/{id}/datapoints/count:
    get:
      deprecated: false
      operationId: Retargeting_GetDatapointsCount
      parameters:
      - description: Id of the group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: A comma separated list of tags you want to filter with.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Filter fields by favourite status
        explode: true
        in: query
        name: onlyFavorites
        required: false
        schema:
          type: boolean
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the datapoints associated to the retargeting script.
      tags:
      - Retargeting
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /tags:
    get:
      deprecated: false
      operationId: Tags_Get
      parameters:
      - description: Where to start when retrieving elements. Default is 0 if not
          specified.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Maximum elements to retrieve. Default to 20 if not specified.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Name of the tag
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of datapoints id to filter by
        explode: true
        in: query
        name: datapoints
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of groups id to filter by
        explode: true
        in: query
        name: groups
        required: false
        schema:
          type: string
        style: form
      - description: Type of entity related to the tag
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          - dp
          - gr
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the groups associated to the user filtered by this tag.
      tags:
      - Tags
      x-accepts:
      - application/json
      - text/json
    post:
      deprecated: false
      operationId: Tags_Put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Tags.Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Tags.Tag'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Dto.Tags.Tag'
        description: The body of the tag
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Create a tag
      tags:
      - Tags
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /tags/count:
    get:
      deprecated: false
      operationId: Tags_Count
      parameters:
      - description: Name of the tag
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of datapoints id to filter by
        explode: true
        in: query
        name: datapoints
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of groups id to filter by
        explode: true
        in: query
        name: groups
        required: false
        schema:
          type: string
        style: form
      - description: Type of entity related to the tag
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          - dp
          - gr
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the groups associated to the user filtered by this tag.
      tags:
      - Tags
      x-accepts:
      - application/json
      - text/json
  /tags/{tagId}:
    delete:
      deprecated: false
      operationId: Tags_Delete
      parameters:
      - description: Id of the tag
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System.Object'
            text/json:
              schema:
                $ref: '#/components/schemas/System.Object'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete a tag
      tags:
      - Tags
      x-accepts:
      - application/json
      - text/json
    get:
      deprecated: false
      parameters:
      - description: Id of the tag
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Tags.Tag'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Dto.Tags.Tag'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Retrieve a tag
      tags:
      - Tags
      x-accepts:
      - application/json
      - text/json
  /tags/{tagId}/datapoints:
    delete:
      deprecated: false
      operationId: Tags_DeleteRelatedDatapoints
      parameters:
      - description: Id of the tag
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete the association of this tag with all datapoints
      tags:
      - Tags
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    get:
      deprecated: false
      operationId: Tags_GetDatapoints
      parameters:
      - description: Id of the tag.
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Where to start when retrieving elements. Default is 0 if not
          specified.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Maximum elements to retrieve. Default to 20 if not specified.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Type of the datapoint ("tp"/"tl")
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the datapoints associated to the user filtered by this
        tag
      tags:
      - Tags
      x-accepts:
      - application/json
      - text/json
  /tags/{tagId}/datapoints/count:
    get:
      deprecated: false
      operationId: Tags_GetDatapointsCount
      parameters:
      - description: Id of the tag.
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Type of the datapoint ("tp"/"tl")
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - tp
          - tl
          type: string
        style: form
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          - paused
          - spam
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude datapoints created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the datapoints associated to the user filtered by this tag
      tags:
      - Tags
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /tags/{tagId}/datapoints/patch:
    put:
      deprecated: false
      operationId: Tags_PatchDataPoint
      parameters:
      - description: Id of the tag
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Requests.PatchBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Associate/Deassociate a tag with a datapoint
      tags:
      - Tags
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /tags/{tagId}/groups:
    delete:
      deprecated: false
      operationId: Tags_DeleteRelatedGroups
      parameters:
      - description: Id of the tag
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete the association of this tag with all groups
      tags:
      - Tags
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
    get:
      deprecated: false
      operationId: Tags_GetGroups
      parameters:
      - description: Id of the tag.
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Where to start when retrieving elements. Default is 0 if not
          specified.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minLength: 0
          type: integer
        style: form
      - description: Maximum elements to retrieve. Default to 20 if not specified.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maxLength: 0
          minLength: 0
          type: integer
        style: form
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude groups created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude groups created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: List of all the groups associated to the user filtered by this tag.
      tags:
      - Tags
      x-accepts:
      - application/json
      - text/json
  /tags/{tagId}/groups/count:
    get:
      deprecated: false
      operationId: Tags_GetGroupsCount
      parameters:
      - description: Id of the tag.
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Status of the datapoint
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - deleted
          - active
          type: string
        style: form
      - description: Filter fields by this pattern
        explode: true
        in: query
        name: textSearch
        required: false
        schema:
          type: string
        style: form
      - description: Exclude groups created before this date (YYYYMMDD)
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          type: string
        style: form
      - description: Exclude groups created after this date (YYYYMMDD)
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.CountResponce'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Count the groups associated to the user filtered by this tag
      tags:
      - Tags
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /tags/{tagId}/groups/patch:
    put:
      deprecated: false
      operationId: Tags_PatchGroup
      parameters:
      - description: Id of the tag
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Api.Core.Requests.PatchBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Associate/Deassociate a tag with a group
      tags:
      - Tags
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /tags/{tagId}/name:
    put:
      deprecated: false
      operationId: Tags_PatchTagName
      parameters:
      - description: Id of the tag
        explode: false
        in: path
        name: tagId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
        description: The body patch
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          description: ""
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Fast patch a tag name
      tags:
      - Tags
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
components:
  requestBodies:
    Api.Core.Dto.Datapoints.Datapoint:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.Datapoint'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.Datapoint'
        text/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.Datapoint'
      description: The body of the datapoint
      required: true
    Api.Core.Dto.Groups.Group:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Groups.Group'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Groups.Group'
        text/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Groups.Group'
      description: The body of the group
      required: true
    Api.Core.Dto.Retargeting.RetargetingScript:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript'
        application/xml:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript'
        text/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript'
        text/xml:
          schema:
            $ref: '#/components/schemas/Api.Core.Dto.Retargeting.RetargetingScript'
      description: The body of the retargeting script
      required: true
    Api.Core.Requests.GenericTextPatch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
        application/xml:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
        text/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
        text/xml:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.GenericTextPatch'
      description: Patch requests
      required: true
    Api.Core.Requests.PatchBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PatchBody'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PatchBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PatchBody'
        text/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PatchBody'
        text/xml:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PatchBody'
      description: The body patch
      required: true
    Api.Core.Requests.PermissionPatchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PermissionPatchRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PermissionPatchRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PermissionPatchRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PermissionPatchRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/Api.Core.Requests.PermissionPatchRequest'
      description: The patch permission request
      required: true
  schemas:
    Api.Core.Dto.Accounting.ConversionOptions:
      example:
        percentCommission: 0
        percentValue: 6
        hideCost: true
        hideValue: true
        hideCount: true
        hideComCost: true
        hideParams: true
      properties:
        hideComCost:
          type: boolean
        hideCost:
          type: boolean
        hideCount:
          type: boolean
        hideParams:
          type: boolean
        hideValue:
          type: boolean
        percentCommission:
          format: int32
          type: integer
        percentValue:
          format: int32
          type: integer
      type: object
    Api.Core.Dto.Accounting.DomainWhitelistEntry:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    Api.Core.Dto.Accounting.ExtendedGrants:
      example:
        allowAllGrants: true
        allowGroupCreation: true
      properties:
        allowAllGrants:
          type: boolean
        allowGroupCreation:
          type: boolean
      type: object
    Api.Core.Dto.Accounting.Guest:
      example:
        timeframeMinDate: "20120203120530"
        notes: notes
        apiKey: apiKey
        decimalSeparator: decimalSeparator
        dateFormat: dateFormat
        language: language
        groupGrants: 1
        password: password
        currentGrant:
          EntityType: EntityType
          Entity:
            id: 0
            uri: uri
          Type: Type
          DatapointType: DatapointType
          EntityName: EntityName
        id: 5
        numberGroupSeparator: numberGroupSeparator
        email: email
        key: key
        conversionOptions:
          percentCommission: 0
          percentValue: 6
          hideCost: true
          hideValue: true
          hideCount: true
          hideComCost: true
          hideParams: true
        extendedGrants:
          allowAllGrants: true
          allowGroupCreation: true
        hitOptions:
          hideReferrer: true
        timezonename: timezonename
        timeZone: 2
        tlGrants: 7
        creationDate: "20120203120530"
        userName: userName
        tpGrants: 9
        loginCount: 5
        timeFormat: AmPm
        name: name
      properties:
        apiKey:
          type: string
        conversionOptions:
          $ref: '#/components/schemas/Api.Core.Dto.Accounting.ConversionOptions'
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        currentGrant:
          $ref: '#/components/schemas/Api.Core.Dto.Grants.Grant'
        dateFormat:
          type: string
        decimalSeparator:
          type: string
        email:
          type: string
        extendedGrants:
          $ref: '#/components/schemas/Api.Core.Dto.Accounting.ExtendedGrants'
        groupGrants:
          format: int64
          type: integer
        hitOptions:
          $ref: '#/components/schemas/Api.Core.Dto.Accounting.HitOptions'
        id:
          format: int64
          type: integer
        key:
          type: string
        language:
          type: string
        loginCount:
          format: int32
          type: integer
        name:
          type: string
        notes:
          type: string
        numberGroupSeparator:
          type: string
        password:
          type: string
        timeFormat:
          enum:
          - AmPm
          - H24
          type: string
        timeZone:
          format: int32
          type: integer
        timeframeMinDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        timezonename:
          type: string
        tlGrants:
          format: int64
          type: integer
        tpGrants:
          format: int64
          type: integer
        userName:
          type: string
      type: object
    Api.Core.Dto.Accounting.HitOptions:
      example:
        hideReferrer: true
      properties:
        hideReferrer:
          type: boolean
      type: object
    Api.Core.Dto.Accounting.IpBlacklistEntry:
      example:
        ip: ip
        id: id
      properties:
        id:
          type: string
        ip:
          type: string
      type: object
    Api.Core.Dto.Accounting.Plan:
      example:
        monthlyEvents: 2
        allowedPersonalDomains: 0
        recurringPeriod: 3
        billingPeriodStart: "20120203120530"
        recurring: true
        maximumDatapoints: 5
        usedMonthlyEvents: 4
        usedDatapoints: 2
        billingPeriodEnd: "20120203120530"
        maximumGuests: 5
        price: 7.061401241503109
        profileId: 9
        name: name
        bonusMonthlyEvents: 1
        allowedPersonalUrls: 6
      properties:
        allowedPersonalDomains:
          format: int32
          type: integer
        allowedPersonalUrls:
          format: int32
          type: integer
        billingPeriodEnd:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        billingPeriodStart:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        bonusMonthlyEvents:
          format: int64
          type: integer
        maximumDatapoints:
          format: int64
          type: integer
        maximumGuests:
          format: int64
          type: integer
        monthlyEvents:
          format: int64
          type: integer
        name:
          type: string
        price:
          format: double
          type: number
        profileId:
          format: int64
          type: integer
        recurring:
          type: boolean
        recurringPeriod:
          format: int32
          type: integer
        usedDatapoints:
          format: int64
          type: integer
        usedMonthlyEvents:
          format: int64
          type: integer
      type: object
    Api.Core.Dto.Accounting.User:
      example:
        timeframeMinDate: "20120203120530"
        lastName: lastName
        companyRole: companyRole
        redirectOnly: true
        boGoVal: boGoVal
        timezone: 6
        companyName: companyName
        timezonename: timezonename
        bonusClicks: 0
        firstName: firstName
        phone: phone
        registrationDate: "20120203120530"
        email: email
      properties:
        boGoVal:
          type: string
        bonusClicks:
          format: int64
          type: integer
        companyName:
          type: string
        companyRole:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        redirectOnly:
          type: boolean
        registrationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        timeframeMinDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        timezone:
          format: int32
          type: integer
        timezonename:
          type: string
      type: object
    Api.Core.Dto.Aggregated.AggregatedResult:
      example:
        fromDay: "20120203120530"
        conversionsValue: 1.4658129805029452
        commissionsCost: 0.8008281904610115
        totalClicks: 2
        entityId: entityId
        lastHitDate: "20120203120530"
        conversionsCost: 6.027456183070403
        spiderHitsCount: 5
        hourlyBreakDown:
          key: null
        toDay: "20120203120530"
        uniqueViews: 2
        uniqueConversions: 3
        totalViews: 7
        uniqueClicks: 9
        activityDay: "20120203120530"
        entityData: "{}"
        convertedClicks: 5
      properties:
        activityDay:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        commissionsCost:
          format: double
          type: number
        conversionsCost:
          format: double
          type: number
        conversionsValue:
          format: double
          type: number
        convertedClicks:
          format: int64
          type: integer
        entityData:
          properties: {}
          type: object
        entityId:
          type: string
        fromDay:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        hourlyBreakDown:
          additionalProperties:
            $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
          type: object
        lastHitDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        spiderHitsCount:
          format: int64
          type: integer
        toDay:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        totalClicks:
          format: int64
          type: integer
        totalViews:
          format: int64
          type: integer
        uniqueClicks:
          format: int64
          type: integer
        uniqueConversions:
          format: int64
          type: integer
        uniqueViews:
          format: int64
          type: integer
      type: object
    Api.Core.Dto.Aggregated.AggregatedSummaryResult:
      example:
        result:
        - fromDay: "20120203120530"
          conversionsValue: 1.4658129805029452
          commissionsCost: 0.8008281904610115
          totalClicks: 2
          entityId: entityId
          lastHitDate: "20120203120530"
          conversionsCost: 6.027456183070403
          spiderHitsCount: 5
          hourlyBreakDown:
            key: null
          toDay: "20120203120530"
          uniqueViews: 2
          uniqueConversions: 3
          totalViews: 7
          uniqueClicks: 9
          activityDay: "20120203120530"
          entityData: "{}"
          convertedClicks: 5
        - fromDay: "20120203120530"
          conversionsValue: 1.4658129805029452
          commissionsCost: 0.8008281904610115
          totalClicks: 2
          entityId: entityId
          lastHitDate: "20120203120530"
          conversionsCost: 6.027456183070403
          spiderHitsCount: 5
          hourlyBreakDown:
            key: null
          toDay: "20120203120530"
          uniqueViews: 2
          uniqueConversions: 3
          totalViews: 7
          uniqueClicks: 9
          activityDay: "20120203120530"
          entityData: "{}"
          convertedClicks: 5
        offset: 1
        count: 0
        limit: 6
      properties:
        count:
          format: int64
          type: integer
        limit:
          format: int32
          type: integer
        offset:
          format: int64
          type: integer
        result:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
          type: array
      type: object
    Api.Core.Dto.ClickStream.Hit:
      example:
        conversion5:
          date: "20120203120530"
          cost: 5.962133916683182
          deleted: true
          parameter: parameter
          name: name
          id: 5
          value: 2.3021358869347655
          accessTime: "20120203120530"
          comcost: 1.4658129805029452
        conversion4:
          date: "20120203120530"
          cost: 5.962133916683182
          deleted: true
          parameter: parameter
          name: name
          id: 5
          value: 2.3021358869347655
          accessTime: "20120203120530"
          comcost: 1.4658129805029452
        referer: referer
        conversion3:
          date: "20120203120530"
          cost: 5.962133916683182
          deleted: true
          parameter: parameter
          name: name
          id: 5
          value: 2.3021358869347655
          accessTime: "20120203120530"
          comcost: 1.4658129805029452
        conversions:
        - date: "20120203120530"
          cost: 5.962133916683182
          deleted: true
          parameter: parameter
          name: name
          id: 5
          value: 2.3021358869347655
          accessTime: "20120203120530"
          comcost: 1.4658129805029452
        - date: "20120203120530"
          cost: 5.962133916683182
          deleted: true
          parameter: parameter
          name: name
          id: 5
          value: 2.3021358869347655
          accessTime: "20120203120530"
          comcost: 1.4658129805029452
        clientLanguage: clientLanguage
        conversion2:
          date: "20120203120530"
          cost: 5.962133916683182
          deleted: true
          parameter: parameter
          name: name
          id: 5
          value: 2.3021358869347655
          accessTime: "20120203120530"
          comcost: 1.4658129805029452
        conversion1:
          date: "20120203120530"
          cost: 5.962133916683182
          deleted: true
          parameter: parameter
          name: name
          id: 5
          value: 2.3021358869347655
          accessTime: "20120203120530"
          comcost: 1.4658129805029452
        os:
          familyId: 1
          familyName: familyName
          name: name
          id: 1
        org: org
        queryParams: queryParams
        ip: ip
        isUnique: isUnique
        isSpider: isSpider
        source:
          param: param
          name: name
          id: 6
        isProxy: isProxy
        type: type
        browser:
          familyId: 0
          familyName: familyName
          name: name
          id: 6
          browserType: browserType
        location:
          country: country
          city: city
          metrocode: metrocode
          postalcode: postalcode
          latitude: 7.386281948385884
          organization: organization
          regionName: regionName
          region: region
          areacode: areacode
          longitude: 1.2315135367772556
        realDestinationUrl: realDestinationUrl
        entity:
          datapointName: datapointName
          isABTest: true
          notes: notes
          groupId: 9
          trackingCode: trackingCode
          destinationUrl: destinationUrl
          creationDate: "20120203120530"
          datapointFavourite: true
          tags:
          - datapoints:
            - 3
            - 3
            name: name
            groups:
            - 2
            - 2
            id: 4
          - datapoints:
            - 3
            - 3
            name: name
            groups:
            - 2
            - 2
            id: 4
          groupName: groupName
          datapointType: datapointType
          isPrivateShared: true
          isPublic: true
          datapointTitle: datapointTitle
          datapointId: 7
          status: Active
        accessTime: "20120203120530"
      properties:
        accessTime:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        browser:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitBrowserInfo'
        clientLanguage:
          type: string
        conversion1:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo'
        conversion2:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo'
        conversion3:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo'
        conversion4:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo'
        conversion5:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo'
        conversions:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitConversionInfo'
          type: array
        entity:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitDatapointInfo'
        ip:
          type: string
        isProxy:
          type: string
        isSpider:
          type: string
        isUnique:
          type: string
        location:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitLocationInfo'
        org:
          type: string
        os:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitOsInfo'
        queryParams:
          type: string
        realDestinationUrl:
          type: string
        referer:
          type: string
        source:
          $ref: '#/components/schemas/Api.Core.Dto.ClickStream.HitSource'
        type:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitBrowserInfo:
      example:
        familyId: 0
        familyName: familyName
        name: name
        id: 6
        browserType: browserType
      properties:
        browserType:
          type: string
        familyId:
          format: int64
          type: integer
        familyName:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitConversionInfo:
      example:
        date: "20120203120530"
        cost: 5.962133916683182
        deleted: true
        parameter: parameter
        name: name
        id: 5
        value: 2.3021358869347655
        accessTime: "20120203120530"
        comcost: 1.4658129805029452
      properties:
        accessTime:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        comcost:
          format: double
          type: number
        cost:
          format: double
          type: number
        date:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        deleted:
          type: boolean
        id:
          format: int64
          type: integer
        name:
          type: string
        parameter:
          type: string
        value:
          format: double
          type: number
      type: object
    Api.Core.Dto.ClickStream.HitDatapointInfo:
      example:
        datapointName: datapointName
        isABTest: true
        notes: notes
        groupId: 9
        trackingCode: trackingCode
        destinationUrl: destinationUrl
        creationDate: "20120203120530"
        datapointFavourite: true
        tags:
        - datapoints:
          - 3
          - 3
          name: name
          groups:
          - 2
          - 2
          id: 4
        - datapoints:
          - 3
          - 3
          name: name
          groups:
          - 2
          - 2
          id: 4
        groupName: groupName
        datapointType: datapointType
        isPrivateShared: true
        isPublic: true
        datapointTitle: datapointTitle
        datapointId: 7
        status: Active
      properties:
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        datapointFavourite:
          type: boolean
        datapointId:
          format: int64
          type: integer
        datapointName:
          type: string
        datapointTitle:
          type: string
        datapointType:
          type: string
        destinationUrl:
          type: string
        groupId:
          format: int64
          type: integer
        groupName:
          type: string
        isABTest:
          type: boolean
        isPrivateShared:
          type: boolean
        isPublic:
          type: boolean
        notes:
          type: string
        status:
          enum:
          - Active
          - Paused
          - Abuse
          - Deleted
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Tags.Tag'
          type: array
        trackingCode:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitListPage:
      example:
        hits:
        - conversion5:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversion4:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          referer: referer
          conversion3:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversions:
          - date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          - date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          clientLanguage: clientLanguage
          conversion2:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversion1:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          os:
            familyId: 1
            familyName: familyName
            name: name
            id: 1
          org: org
          queryParams: queryParams
          ip: ip
          isUnique: isUnique
          isSpider: isSpider
          source:
            param: param
            name: name
            id: 6
          isProxy: isProxy
          type: type
          browser:
            familyId: 0
            familyName: familyName
            name: name
            id: 6
            browserType: browserType
          location:
            country: country
            city: city
            metrocode: metrocode
            postalcode: postalcode
            latitude: 7.386281948385884
            organization: organization
            regionName: regionName
            region: region
            areacode: areacode
            longitude: 1.2315135367772556
          realDestinationUrl: realDestinationUrl
          entity:
            datapointName: datapointName
            isABTest: true
            notes: notes
            groupId: 9
            trackingCode: trackingCode
            destinationUrl: destinationUrl
            creationDate: "20120203120530"
            datapointFavourite: true
            tags:
            - datapoints:
              - 3
              - 3
              name: name
              groups:
              - 2
              - 2
              id: 4
            - datapoints:
              - 3
              - 3
              name: name
              groups:
              - 2
              - 2
              id: 4
            groupName: groupName
            datapointType: datapointType
            isPrivateShared: true
            isPublic: true
            datapointTitle: datapointTitle
            datapointId: 7
            status: Active
          accessTime: "20120203120530"
        - conversion5:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversion4:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          referer: referer
          conversion3:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversions:
          - date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          - date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          clientLanguage: clientLanguage
          conversion2:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversion1:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          os:
            familyId: 1
            familyName: familyName
            name: name
            id: 1
          org: org
          queryParams: queryParams
          ip: ip
          isUnique: isUnique
          isSpider: isSpider
          source:
            param: param
            name: name
            id: 6
          isProxy: isProxy
          type: type
          browser:
            familyId: 0
            familyName: familyName
            name: name
            id: 6
            browserType: browserType
          location:
            country: country
            city: city
            metrocode: metrocode
            postalcode: postalcode
            latitude: 7.386281948385884
            organization: organization
            regionName: regionName
            region: region
            areacode: areacode
            longitude: 1.2315135367772556
          realDestinationUrl: realDestinationUrl
          entity:
            datapointName: datapointName
            isABTest: true
            notes: notes
            groupId: 9
            trackingCode: trackingCode
            destinationUrl: destinationUrl
            creationDate: "20120203120530"
            datapointFavourite: true
            tags:
            - datapoints:
              - 3
              - 3
              name: name
              groups:
              - 2
              - 2
              id: 4
            - datapoints:
              - 3
              - 3
              name: name
              groups:
              - 2
              - 2
              id: 4
            groupName: groupName
            datapointType: datapointType
            isPrivateShared: true
            isPublic: true
            datapointTitle: datapointTitle
            datapointId: 7
            status: Active
          accessTime: "20120203120530"
        lastKey: lastKey
      properties:
        hits:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.ClickStream.Hit'
          type: array
        lastKey:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitLocationInfo:
      example:
        country: country
        city: city
        metrocode: metrocode
        postalcode: postalcode
        latitude: 7.386281948385884
        organization: organization
        regionName: regionName
        region: region
        areacode: areacode
        longitude: 1.2315135367772556
      properties:
        areacode:
          type: string
        city:
          type: string
        country:
          type: string
        latitude:
          format: double
          type: number
        longitude:
          format: double
          type: number
        metrocode:
          type: string
        organization:
          type: string
        postalcode:
          type: string
        region:
          type: string
        regionName:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitOsInfo:
      example:
        familyId: 1
        familyName: familyName
        name: name
        id: 1
      properties:
        familyId:
          format: int64
          type: integer
        familyName:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    Api.Core.Dto.ClickStream.HitSource:
      example:
        param: param
        name: name
        id: 6
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        param:
          type: string
      type: object
    Api.Core.Dto.Conversions.Conversion:
      example:
        protocol: Http
        code: code
        deleted: true
        name: name
        description: description
        id: 0
        creationDate: "20120203120530"
        value: 6.027456183070403
      properties:
        code:
          type: string
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        deleted:
          type: boolean
        description:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        protocol:
          enum:
          - Http
          - Https
          type: string
        value:
          format: double
          type: number
      type: object
    Api.Core.Dto.Datapoints.BrowserBaseDestinationItem:
      example:
        spidersDestinationUrl: spidersDestinationUrl
        emailDestinationUrl: emailDestinationUrl
        mobileDestinationUrl: mobileDestinationUrl
      properties:
        emailDestinationUrl:
          type: string
        mobileDestinationUrl:
          type: string
        spidersDestinationUrl:
          type: string
      type: object
    Api.Core.Dto.Datapoints.Datapoint:
      example:
        firstConversionName: firstConversionName
        notes: notes
        redirectOnly: true
        groupId: 5
        thirdConversionName: thirdConversionName
        title: title
        type: TrackingLink
        secondConversionId: 2
        fourthConversionName: fourthConversionName
        isPublic: true
        id: 5
        thirdConversionId: 7
        preferred: true
        encodeIp: true
        isSecured: true
        fifthConversionId: 0
        trackingCode: trackingCode
        creationDate: "20120203120530"
        firstConversionId: 6
        tags:
        - datapoints:
          - 3
          - 3
          name: name
          groups:
          - 2
          - 2
          id: 4
        - datapoints:
          - 3
          - 3
          name: name
          groups:
          - 2
          - 2
          id: 4
        groupName: groupName
        fourthConversionId: 1
        secondConversionName: secondConversionName
        name: name
        lightTracking: true
        typeTP:
          parameterNote: parameterNote
        fifthConversionName: fifthConversionName
        writePermited: true
        typeTL:
          appendQuery: true
          pauseAfterClicksExpiration: true
          isABTest: true
          hideUrlTitle: hideUrlTitle
          urlAfterDateExpiration: urlAfterDateExpiration
          spilloverDestinationItems:
          - url: url
          - url: url
          urlsByNation:
          - nation: nation
            url: url
          - nation: nation
            url: url
          urlsByLanguage:
          - languageCode: languageCode
            url: url
          - languageCode: languageCode
            url: url
          password: password
          browserDestinationItem:
            spidersDestinationUrl: spidersDestinationUrl
            emailDestinationUrl: emailDestinationUrl
            mobileDestinationUrl: mobileDestinationUrl
          pauseAfterDateExpiration: true
          uniqueDestinationItem:
            firstDestinationUrl: firstDestinationUrl
          redirectType: PermanentRedirect
          scripts:
          - name: name
            id: 4
          - name: name
            id: 4
          encodeUrl: true
          expirationDate: "20120203120530"
          referrerClean: None
          goDomainId: 2
          randomDestinationItems:
          - url: url
          - url: url
          sequentialDestinationItems:
          - url: url
          - url: url
          firstUrl: firstUrl
          hideUrl: true
          expirationClicks: 3
          domainId: 9
          url: url
          urlAfterClicksExpiration: urlAfterClicksExpiration
          weightedDestinationItems:
          - weight: 7
            url: url
          - weight: 7
            url: url
          destinationMode: Simple
        status: Active
      properties:
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        encodeIp:
          type: boolean
        fifthConversionId:
          format: int64
          type: integer
        fifthConversionName:
          type: string
        firstConversionId:
          format: int64
          type: integer
        firstConversionName:
          type: string
        fourthConversionId:
          format: int64
          type: integer
        fourthConversionName:
          type: string
        groupId:
          format: int64
          type: integer
        groupName:
          type: string
        id:
          format: int64
          type: integer
        isPublic:
          type: boolean
        isSecured:
          type: boolean
        lightTracking:
          type: boolean
        name:
          type: string
        notes:
          type: string
        preferred:
          type: boolean
        redirectOnly:
          type: boolean
        secondConversionId:
          format: int64
          type: integer
        secondConversionName:
          type: string
        status:
          enum:
          - Active
          - Paused
          - Abuse
          - Deleted
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Tags.Tag'
          type: array
        thirdConversionId:
          format: int64
          type: integer
        thirdConversionName:
          type: string
        title:
          type: string
        trackingCode:
          type: string
        type:
          enum:
          - TrackingLink
          - TrackingPixel
          type: string
        typeTL:
          $ref: '#/components/schemas/Api.Core.Dto.Datapoints.TrackingLinkSpecifics'
        typeTP:
          $ref: '#/components/schemas/Api.Core.Dto.Datapoints.TrackingPixelSpecifics'
        writePermited:
          type: boolean
      type: object
    Api.Core.Dto.Datapoints.DatapointRetargetingInfo:
      example:
        name: name
        id: 4
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    Api.Core.Dto.Datapoints.MultipleDestinationItem:
      example:
        url: url
      properties:
        url:
          type: string
      type: object
    Api.Core.Dto.Datapoints.TrackingLinkSpecifics:
      example:
        appendQuery: true
        pauseAfterClicksExpiration: true
        isABTest: true
        hideUrlTitle: hideUrlTitle
        urlAfterDateExpiration: urlAfterDateExpiration
        spilloverDestinationItems:
        - url: url
        - url: url
        urlsByNation:
        - nation: nation
          url: url
        - nation: nation
          url: url
        urlsByLanguage:
        - languageCode: languageCode
          url: url
        - languageCode: languageCode
          url: url
        password: password
        browserDestinationItem:
          spidersDestinationUrl: spidersDestinationUrl
          emailDestinationUrl: emailDestinationUrl
          mobileDestinationUrl: mobileDestinationUrl
        pauseAfterDateExpiration: true
        uniqueDestinationItem:
          firstDestinationUrl: firstDestinationUrl
        redirectType: PermanentRedirect
        scripts:
        - name: name
          id: 4
        - name: name
          id: 4
        encodeUrl: true
        expirationDate: "20120203120530"
        referrerClean: None
        goDomainId: 2
        randomDestinationItems:
        - url: url
        - url: url
        sequentialDestinationItems:
        - url: url
        - url: url
        firstUrl: firstUrl
        hideUrl: true
        expirationClicks: 3
        domainId: 9
        url: url
        urlAfterClicksExpiration: urlAfterClicksExpiration
        weightedDestinationItems:
        - weight: 7
          url: url
        - weight: 7
          url: url
        destinationMode: Simple
      properties:
        appendQuery:
          type: boolean
        browserDestinationItem:
          $ref: '#/components/schemas/Api.Core.Dto.Datapoints.BrowserBaseDestinationItem'
        destinationMode:
          enum:
          - Simple
          - RandomDestination
          - DestinationByLanguage
          - SpilloverDestination
          - DynamicUrl
          - BrowserDestination
          - DestinationByNation
          - UniqueDestination
          - SequentialDestination
          - WeightedDestination
          type: string
        domainId:
          format: int32
          type: integer
        encodeUrl:
          type: boolean
        expirationClicks:
          format: int64
          type: integer
        expirationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        firstUrl:
          type: string
        goDomainId:
          format: int32
          type: integer
        hideUrl:
          type: boolean
        hideUrlTitle:
          type: string
        isABTest:
          type: boolean
        password:
          type: string
        pauseAfterClicksExpiration:
          type: boolean
        pauseAfterDateExpiration:
          type: boolean
        randomDestinationItems:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.MultipleDestinationItem'
          type: array
        redirectType:
          enum:
          - PermanentRedirect
          - TemporaryRedirect
          type: string
        referrerClean:
          enum:
          - None
          - Clean
          - Myself
          type: string
        scripts:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.DatapointRetargetingInfo'
          type: array
        sequentialDestinationItems:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.MultipleDestinationItem'
          type: array
        spilloverDestinationItems:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.MultipleDestinationItem'
          type: array
        uniqueDestinationItem:
          $ref: '#/components/schemas/Api.Core.Dto.Datapoints.UniqueDestinationItem'
        url:
          type: string
        urlAfterClicksExpiration:
          type: string
        urlAfterDateExpiration:
          type: string
        urlsByLanguage:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.UrlByLanguageItem'
          type: array
        urlsByNation:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.UrlByNationItem'
          type: array
        weightedDestinationItems:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.WeightedDestinationItem'
          type: array
      type: object
    Api.Core.Dto.Datapoints.TrackingPixelSpecifics:
      example:
        parameterNote: parameterNote
      properties:
        parameterNote:
          type: string
      type: object
    Api.Core.Dto.Datapoints.UniqueDestinationItem:
      example:
        firstDestinationUrl: firstDestinationUrl
      properties:
        firstDestinationUrl:
          type: string
      type: object
    Api.Core.Dto.Datapoints.UrlByLanguageItem:
      example:
        languageCode: languageCode
        url: url
      properties:
        languageCode:
          type: string
        url:
          type: string
      type: object
    Api.Core.Dto.Datapoints.UrlByNationItem:
      example:
        nation: nation
        url: url
      properties:
        nation:
          type: string
        url:
          type: string
      type: object
    Api.Core.Dto.Datapoints.WeightedDestinationItem:
      example:
        weight: 7
        url: url
      properties:
        url:
          type: string
        weight:
          format: int32
          type: integer
      type: object
    Api.Core.Dto.Domains.Domain:
      example:
        customHomepage: customHomepage
        name: name
        custom404: custom404
        id: 0
        type: System
      properties:
        custom404:
          type: string
        customHomepage:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        type:
          enum:
          - System
          - Go
          - Dedicated
          - Personal
          type: string
      type: object
    Api.Core.Dto.EntityUriLong:
      properties:
        id:
          format: int64
          type: integer
        uri:
          type: string
      type: object
    Api.Core.Dto.Grants.Grant:
      example:
        EntityType: EntityType
        Entity:
          id: 0
          uri: uri
        Type: Type
        DatapointType: DatapointType
        EntityName: EntityName
      properties:
        DatapointType:
          type: string
        Entity:
          $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
        EntityName:
          type: string
        EntityType:
          type: string
        Type:
          type: string
      type: object
    Api.Core.Dto.Groups.Group:
      example:
        deleted: true
        notes: notes
        redirectOnly: true
        name: name
        isPublic: true
        id: 0
        creationDate: "20120203120530"
        writePermited: true
        preferred: true
        tags:
        - datapoints:
          - 3
          - 3
          name: name
          groups:
          - 2
          - 2
          id: 4
        - datapoints:
          - 3
          - 3
          name: name
          groups:
          - 2
          - 2
          id: 4
      properties:
        creationDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        deleted:
          type: boolean
        id:
          format: int64
          type: integer
        isPublic:
          type: boolean
        name:
          type: string
        notes:
          type: string
        preferred:
          type: boolean
        redirectOnly:
          type: boolean
        tags:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Tags.Tag'
          type: array
        writePermited:
          type: boolean
      type: object
    Api.Core.Dto.Retargeting.RetargetingScript:
      example:
        name: name
        id: 0
        script: script
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        script:
          type: string
      type: object
    Api.Core.Dto.Tags.Tag:
      example:
        datapoints:
        - 3
        - 3
        name: name
        groups:
        - 2
        - 2
        id: 4
      properties:
        datapoints:
          items:
            format: int64
            type: integer
          type: array
        groups:
          items:
            format: int64
            type: integer
          type: array
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    Api.Core.Dto.Tops.Top:
      properties:
        createdAt:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        data:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Tops.TopItem'
          type: array
        key:
          type: string
      type: object
    Api.Core.Dto.Tops.TopItem:
      properties:
        entityData:
          properties: {}
          type: object
        id:
          type: string
        lastHitDate:
          description: ' (A date in "YmdHis" format)'
          example: "20120203120530"
          type: string
        spiderClicks:
          format: int64
          type: integer
        spiderHits:
          format: int64
          type: integer
        spiderViews:
          format: int64
          type: integer
        totalClicks:
          format: int64
          type: integer
        totalCommissionsCost:
          format: double
          type: number
        totalConversions:
          format: int64
          type: integer
        totalConversionsCost:
          format: double
          type: number
        totalConversionsValue:
          format: double
          type: number
        totalHits:
          format: int64
          type: integer
        totalViews:
          format: int64
          type: integer
        uniqueClicks:
          format: int64
          type: integer
        uniqueHits:
          format: int64
          type: integer
        uniqueViews:
          format: int64
          type: integer
      type: object
    Api.Core.Requests.ConversionPatchBody:
      properties:
        Action:
          type: string
        Id:
          format: int64
          type: integer
        ReplaceId:
          format: int64
          type: integer
      type: object
    Api.Core.Requests.DatapointsBatch:
      properties:
        List:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Datapoints.Datapoint'
          type: array
      type: object
    Api.Core.Requests.DeleteBatch:
      properties:
        Entities:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.EntityUriLong'
          type: array
      type: object
    Api.Core.Requests.GenericTextPatch:
      properties:
        Text:
          type: string
      type: object
    Api.Core.Requests.PatchBody:
      properties:
        Action:
          type: string
        Id:
          format: int64
          type: integer
      type: object
    Api.Core.Requests.PatchBodyBatch:
      properties:
        PatchRequests:
          items:
            $ref: '#/components/schemas/Api.Core.Requests.PatchBody'
          type: array
      type: object
    Api.Core.Requests.PermissionPatchRequest:
      properties:
        Action:
          type: string
        Id:
          format: int64
          type: integer
        Verb:
          type: string
      type: object
    Api.Core.Responses.CountResponce:
      example:
        count: 0
      properties:
        count:
          format: int64
          type: integer
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.DomainWhitelistEntry_:
      example:
        entities:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        entities:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Accounting.DomainWhitelistEntry'
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Accounting.IpBlacklistEntry_:
      example:
        entities:
        - ip: ip
          id: id
        - ip: ip
          id: id
      properties:
        entities:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Accounting.IpBlacklistEntry'
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Aggregated.AggregatedResult_:
      example:
        entities:
        - fromDay: "20120203120530"
          conversionsValue: 1.4658129805029452
          commissionsCost: 0.8008281904610115
          totalClicks: 2
          entityId: entityId
          lastHitDate: "20120203120530"
          conversionsCost: 6.027456183070403
          spiderHitsCount: 5
          hourlyBreakDown:
            key: null
          toDay: "20120203120530"
          uniqueViews: 2
          uniqueConversions: 3
          totalViews: 7
          uniqueClicks: 9
          activityDay: "20120203120530"
          entityData: "{}"
          convertedClicks: 5
        - fromDay: "20120203120530"
          conversionsValue: 1.4658129805029452
          commissionsCost: 0.8008281904610115
          totalClicks: 2
          entityId: entityId
          lastHitDate: "20120203120530"
          conversionsCost: 6.027456183070403
          spiderHitsCount: 5
          hourlyBreakDown:
            key: null
          toDay: "20120203120530"
          uniqueViews: 2
          uniqueConversions: 3
          totalViews: 7
          uniqueClicks: 9
          activityDay: "20120203120530"
          entityData: "{}"
          convertedClicks: 5
      properties:
        entities:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Aggregated.AggregatedResult'
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.ClickStream.Hit_:
      example:
        entities:
        - conversion5:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversion4:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          referer: referer
          conversion3:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversions:
          - date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          - date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          clientLanguage: clientLanguage
          conversion2:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversion1:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          os:
            familyId: 1
            familyName: familyName
            name: name
            id: 1
          org: org
          queryParams: queryParams
          ip: ip
          isUnique: isUnique
          isSpider: isSpider
          source:
            param: param
            name: name
            id: 6
          isProxy: isProxy
          type: type
          browser:
            familyId: 0
            familyName: familyName
            name: name
            id: 6
            browserType: browserType
          location:
            country: country
            city: city
            metrocode: metrocode
            postalcode: postalcode
            latitude: 7.386281948385884
            organization: organization
            regionName: regionName
            region: region
            areacode: areacode
            longitude: 1.2315135367772556
          realDestinationUrl: realDestinationUrl
          entity:
            datapointName: datapointName
            isABTest: true
            notes: notes
            groupId: 9
            trackingCode: trackingCode
            destinationUrl: destinationUrl
            creationDate: "20120203120530"
            datapointFavourite: true
            tags:
            - datapoints:
              - 3
              - 3
              name: name
              groups:
              - 2
              - 2
              id: 4
            - datapoints:
              - 3
              - 3
              name: name
              groups:
              - 2
              - 2
              id: 4
            groupName: groupName
            datapointType: datapointType
            isPrivateShared: true
            isPublic: true
            datapointTitle: datapointTitle
            datapointId: 7
            status: Active
          accessTime: "20120203120530"
        - conversion5:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversion4:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          referer: referer
          conversion3:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversions:
          - date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          - date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          clientLanguage: clientLanguage
          conversion2:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          conversion1:
            date: "20120203120530"
            cost: 5.962133916683182
            deleted: true
            parameter: parameter
            name: name
            id: 5
            value: 2.3021358869347655
            accessTime: "20120203120530"
            comcost: 1.4658129805029452
          os:
            familyId: 1
            familyName: familyName
            name: name
            id: 1
          org: org
          queryParams: queryParams
          ip: ip
          isUnique: isUnique
          isSpider: isSpider
          source:
            param: param
            name: name
            id: 6
          isProxy: isProxy
          type: type
          browser:
            familyId: 0
            familyName: familyName
            name: name
            id: 6
            browserType: browserType
          location:
            country: country
            city: city
            metrocode: metrocode
            postalcode: postalcode
            latitude: 7.386281948385884
            organization: organization
            regionName: regionName
            region: region
            areacode: areacode
            longitude: 1.2315135367772556
          realDestinationUrl: realDestinationUrl
          entity:
            datapointName: datapointName
            isABTest: true
            notes: notes
            groupId: 9
            trackingCode: trackingCode
            destinationUrl: destinationUrl
            creationDate: "20120203120530"
            datapointFavourite: true
            tags:
            - datapoints:
              - 3
              - 3
              name: name
              groups:
              - 2
              - 2
              id: 4
            - datapoints:
              - 3
              - 3
              name: name
              groups:
              - 2
              - 2
              id: 4
            groupName: groupName
            datapointType: datapointType
            isPrivateShared: true
            isPublic: true
            datapointTitle: datapointTitle
            datapointId: 7
            status: Active
          accessTime: "20120203120530"
      properties:
        entities:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.ClickStream.Hit'
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Dto.Grants.Grant_:
      example:
        entities:
        - EntityType: EntityType
          Entity:
            id: 0
            uri: uri
          Type: Type
          DatapointType: DatapointType
          EntityName: EntityName
        - EntityType: EntityType
          Entity:
            id: 0
            uri: uri
          Type: Type
          DatapointType: DatapointType
          EntityName: EntityName
      properties:
        entities:
          items:
            $ref: '#/components/schemas/Api.Core.Dto.Grants.Grant'
          type: array
      type: object
    Api.Core.Responses.EntitiesResponse_Api.Core.Responses.EntityUri_System.Int64_:
      example:
        entities:
        - id: 0
          uri: uri
        - id: 0
          uri: uri
      properties:
        entities:
          items:
            $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
          type: array
      type: object
    Api.Core.Responses.EntityUri_System.Int64_:
      example:
        id: 0
        uri: uri
      properties:
        id:
          format: int64
          type: integer
        uri:
          type: string
      type: object
    Api.Core.Responses.ModifyBatchItemResponce_Api.Core.Dto.Datapoints.Datapoint_System.Int64_:
      example:
        result:
          id: 0
          uri: uri
        entityData:
          firstConversionName: firstConversionName
          notes: notes
          redirectOnly: true
          groupId: 5
          thirdConversionName: thirdConversionName
          title: title
          type: TrackingLink
          secondConversionId: 2
          fourthConversionName: fourthConversionName
          isPublic: true
          id: 5
          thirdConversionId: 7
          preferred: true
          encodeIp: true
          isSecured: true
          fifthConversionId: 0
          trackingCode: trackingCode
          creationDate: "20120203120530"
          firstConversionId: 6
          tags:
          - datapoints:
            - 3
            - 3
            name: name
            groups:
            - 2
            - 2
            id: 4
          - datapoints:
            - 3
            - 3
            name: name
            groups:
            - 2
            - 2
            id: 4
          groupName: groupName
          fourthConversionId: 1
          secondConversionName: secondConversionName
          name: name
          lightTracking: true
          typeTP:
            parameterNote: parameterNote
          fifthConversionName: fifthConversionName
          writePermited: true
          typeTL:
            appendQuery: true
            pauseAfterClicksExpiration: true
            isABTest: true
            hideUrlTitle: hideUrlTitle
            urlAfterDateExpiration: urlAfterDateExpiration
            spilloverDestinationItems:
            - url: url
            - url: url
            urlsByNation:
            - nation: nation
              url: url
            - nation: nation
              url: url
            urlsByLanguage:
            - languageCode: languageCode
              url: url
            - languageCode: languageCode
              url: url
            password: password
            browserDestinationItem:
              spidersDestinationUrl: spidersDestinationUrl
              emailDestinationUrl: emailDestinationUrl
              mobileDestinationUrl: mobileDestinationUrl
            pauseAfterDateExpiration: true
            uniqueDestinationItem:
              firstDestinationUrl: firstDestinationUrl
            redirectType: PermanentRedirect
            scripts:
            - name: name
              id: 4
            - name: name
              id: 4
            encodeUrl: true
            expirationDate: "20120203120530"
            referrerClean: None
            goDomainId: 2
            randomDestinationItems:
            - url: url
            - url: url
            sequentialDestinationItems:
            - url: url
            - url: url
            firstUrl: firstUrl
            hideUrl: true
            expirationClicks: 3
            domainId: 9
            url: url
            urlAfterClicksExpiration: urlAfterClicksExpiration
            weightedDestinationItems:
            - weight: 7
              url: url
            - weight: 7
              url: url
            destinationMode: Simple
          status: Active
        errors:
        - code: "{}"
          errorValue: "{}"
          errorMessage: errorMessage
          property: property
        - code: "{}"
          errorValue: "{}"
          errorMessage: errorMessage
          property: property
        status: status
      properties:
        entityData:
          $ref: '#/components/schemas/Api.Core.Dto.Datapoints.Datapoint'
        errors:
          items:
            $ref: '#/components/schemas/ClickMeter.Infrastructure.Validation.ValidationFailure'
          type: array
        result:
          $ref: '#/components/schemas/Api.Core.Responses.EntityUri_System.Int64_'
        status:
          type: string
      type: object
    ClickMeter.Infrastructure.Validation.ValidationFailure:
      example:
        code: "{}"
        errorValue: "{}"
        errorMessage: errorMessage
        property: property
      properties:
        code:
          properties: {}
          type: object
        errorMessage:
          type: string
        errorValue:
          properties: {}
          type: object
        property:
          type: string
      type: object
    System.Object:
      properties: {}
      type: object
  securitySchemes:
    api_key:
      description: API Key Authentication
      in: header
      name: X-Clickmeter-AuthKey
      type: apiKey

