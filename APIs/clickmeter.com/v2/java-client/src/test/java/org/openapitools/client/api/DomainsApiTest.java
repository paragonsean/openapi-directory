/*
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiCoreDtoDomainsDomain;
import org.openapitools.client.model.ApiCoreResponsesCountResponce;
import org.openapitools.client.model.ApiCoreResponsesEntitiesResponseApiCoreResponsesEntityUriSystemInt64;
import org.openapitools.client.model.ApiCoreResponsesEntityUriSystemInt64;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DomainsApi
 */
@Disabled
public class DomainsApiTest {

    private final DomainsApi api = new DomainsApi();

    /**
     * Retrieve count of domains
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsCountTest() throws ApiException {
        String type = null;
        String name = null;
        ApiCoreResponsesCountResponce response = api.domainsCount(type, name);
        // TODO: test validations
    }

    /**
     * Delete a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsDeleteTest() throws ApiException {
        Long id = null;
        ApiCoreResponsesEntityUriSystemInt64 response = api.domainsDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieve a list of domains
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsGetTest() throws ApiException {
        Integer offset = null;
        Integer limit = null;
        String type = null;
        String name = null;
        ApiCoreResponsesEntitiesResponseApiCoreResponsesEntityUriSystemInt64 response = api.domainsGet(offset, limit, type, name);
        // TODO: test validations
    }

    /**
     * Get a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsIdGetTest() throws ApiException {
        Long id = null;
        ApiCoreDtoDomainsDomain response = api.domainsIdGet(id);
        // TODO: test validations
    }

    /**
     * Create a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsPutTest() throws ApiException {
        ApiCoreDtoDomainsDomain apiCoreDtoDomainsDomain = null;
        ApiCoreResponsesEntityUriSystemInt64 response = api.domainsPut(apiCoreDtoDomainsDomain);
        // TODO: test validations
    }

    /**
     * Update a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainsUpdateTest() throws ApiException {
        Long id = null;
        ApiCoreDtoDomainsDomain apiCoreDtoDomainsDomain = null;
        ApiCoreResponsesEntityUriSystemInt64 response = api.domainsUpdate(id, apiCoreDtoDomainsDomain);
        // TODO: test validations
    }

}
