/*
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiCoreDtoAggregatedAggregatedResult;
import org.openapitools.client.model.ApiCoreDtoAggregatedAggregatedSummaryResult;
import org.openapitools.client.model.ApiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AggregatedApi
 */
@Disabled
public class AggregatedApiTest {

    private final AggregatedApi api = new AggregatedApi();

    /**
     * Retrieve statistics about a subset of conversions for a timeframe with conversions data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aggregatedGetConversionsSummaryTest() throws ApiException {
        String timeFrame = null;
        String fromDay = null;
        String toDay = null;
        String status = null;
        String sortBy = null;
        String sortDirection = null;
        Integer offset = null;
        Integer limit = null;
        String textSearch = null;
        ApiCoreDtoAggregatedAggregatedSummaryResult response = api.aggregatedGetConversionsSummary(timeFrame, fromDay, toDay, status, sortBy, sortDirection, offset, limit, textSearch);
        // TODO: test validations
    }

    /**
     * Retrieve statistics about a subset of datapoints for a timeframe with datapoints data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aggregatedGetDatapointsSummaryTest() throws ApiException {
        String timeFrame = null;
        String type = null;
        String fromDay = null;
        String toDay = null;
        String status = null;
        String tag = null;
        Boolean favourite = null;
        String sortBy = null;
        String sortDirection = null;
        Integer offset = null;
        Integer limit = null;
        Long groupId = null;
        String textSearch = null;
        ApiCoreDtoAggregatedAggregatedSummaryResult response = api.aggregatedGetDatapointsSummary(timeFrame, type, fromDay, toDay, status, tag, favourite, sortBy, sortDirection, offset, limit, groupId, textSearch);
        // TODO: test validations
    }

    /**
     * Retrieve statistics about a subset of groups for a timeframe with groups data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aggregatedGetGroupsSummaryTest() throws ApiException {
        String timeFrame = null;
        String fromDay = null;
        String toDay = null;
        String status = null;
        String tag = null;
        Boolean favourite = null;
        String sortBy = null;
        String sortDirection = null;
        Integer offset = null;
        Integer limit = null;
        String textSearch = null;
        ApiCoreDtoAggregatedAggregatedSummaryResult response = api.aggregatedGetGroupsSummary(timeFrame, fromDay, toDay, status, tag, favourite, sortBy, sortDirection, offset, limit, textSearch);
        // TODO: test validations
    }

    /**
     * Retrieve statistics about this customer for a timeframe grouped by some temporal entity (day/week/month)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aggregatedGetStatisticsListTest() throws ApiException {
        String timeFrame = null;
        String fromDay = null;
        String toDay = null;
        String groupBy = null;
        ApiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult response = api.aggregatedGetStatisticsList(timeFrame, fromDay, toDay, groupBy);
        // TODO: test validations
    }

    /**
     * Retrieve statistics about this customer for a timeframe
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aggregatedGetStatisticsSingleTest() throws ApiException {
        String timeFrame = null;
        String fromDay = null;
        String toDay = null;
        Boolean hourly = null;
        String onlyFavorites = null;
        ApiCoreDtoAggregatedAggregatedResult response = api.aggregatedGetStatisticsSingle(timeFrame, fromDay, toDay, hourly, onlyFavorites);
        // TODO: test validations
    }

}
