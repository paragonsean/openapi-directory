/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_Core_Dto_Aggregated_AggregatedResult.h
 *
 * 
 */

#ifndef OAIApi_Core_Dto_Aggregated_AggregatedResult_H
#define OAIApi_Core_Dto_Aggregated_AggregatedResult_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApi_Core_Dto_Aggregated_AggregatedResult : public OAIObject {
public:
    OAIApi_Core_Dto_Aggregated_AggregatedResult();
    OAIApi_Core_Dto_Aggregated_AggregatedResult(QString json);
    ~OAIApi_Core_Dto_Aggregated_AggregatedResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActivityDay() const;
    void setActivityDay(const QString &activity_day);
    bool is_activity_day_Set() const;
    bool is_activity_day_Valid() const;

    double getCommissionsCost() const;
    void setCommissionsCost(const double &commissions_cost);
    bool is_commissions_cost_Set() const;
    bool is_commissions_cost_Valid() const;

    double getConversionsCost() const;
    void setConversionsCost(const double &conversions_cost);
    bool is_conversions_cost_Set() const;
    bool is_conversions_cost_Valid() const;

    double getConversionsValue() const;
    void setConversionsValue(const double &conversions_value);
    bool is_conversions_value_Set() const;
    bool is_conversions_value_Valid() const;

    qint64 getConvertedClicks() const;
    void setConvertedClicks(const qint64 &converted_clicks);
    bool is_converted_clicks_Set() const;
    bool is_converted_clicks_Valid() const;

    OAIObject getEntityData() const;
    void setEntityData(const OAIObject &entity_data);
    bool is_entity_data_Set() const;
    bool is_entity_data_Valid() const;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    QString getFromDay() const;
    void setFromDay(const QString &from_day);
    bool is_from_day_Set() const;
    bool is_from_day_Valid() const;

    QMap<QString, OAIApi_Core_Dto_Aggregated_AggregatedResult> getHourlyBreakDown() const;
    void setHourlyBreakDown(const QMap<QString, OAIApi_Core_Dto_Aggregated_AggregatedResult> &hourly_break_down);
    bool is_hourly_break_down_Set() const;
    bool is_hourly_break_down_Valid() const;

    QString getLastHitDate() const;
    void setLastHitDate(const QString &last_hit_date);
    bool is_last_hit_date_Set() const;
    bool is_last_hit_date_Valid() const;

    qint64 getSpiderHitsCount() const;
    void setSpiderHitsCount(const qint64 &spider_hits_count);
    bool is_spider_hits_count_Set() const;
    bool is_spider_hits_count_Valid() const;

    QString getToDay() const;
    void setToDay(const QString &to_day);
    bool is_to_day_Set() const;
    bool is_to_day_Valid() const;

    qint64 getTotalClicks() const;
    void setTotalClicks(const qint64 &total_clicks);
    bool is_total_clicks_Set() const;
    bool is_total_clicks_Valid() const;

    qint64 getTotalViews() const;
    void setTotalViews(const qint64 &total_views);
    bool is_total_views_Set() const;
    bool is_total_views_Valid() const;

    qint64 getUniqueClicks() const;
    void setUniqueClicks(const qint64 &unique_clicks);
    bool is_unique_clicks_Set() const;
    bool is_unique_clicks_Valid() const;

    qint64 getUniqueConversions() const;
    void setUniqueConversions(const qint64 &unique_conversions);
    bool is_unique_conversions_Set() const;
    bool is_unique_conversions_Valid() const;

    qint64 getUniqueViews() const;
    void setUniqueViews(const qint64 &unique_views);
    bool is_unique_views_Set() const;
    bool is_unique_views_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_activity_day;
    bool m_activity_day_isSet;
    bool m_activity_day_isValid;

    double m_commissions_cost;
    bool m_commissions_cost_isSet;
    bool m_commissions_cost_isValid;

    double m_conversions_cost;
    bool m_conversions_cost_isSet;
    bool m_conversions_cost_isValid;

    double m_conversions_value;
    bool m_conversions_value_isSet;
    bool m_conversions_value_isValid;

    qint64 m_converted_clicks;
    bool m_converted_clicks_isSet;
    bool m_converted_clicks_isValid;

    OAIObject m_entity_data;
    bool m_entity_data_isSet;
    bool m_entity_data_isValid;

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    QString m_from_day;
    bool m_from_day_isSet;
    bool m_from_day_isValid;

    QMap<QString, OAIApi_Core_Dto_Aggregated_AggregatedResult> m_hourly_break_down;
    bool m_hourly_break_down_isSet;
    bool m_hourly_break_down_isValid;

    QString m_last_hit_date;
    bool m_last_hit_date_isSet;
    bool m_last_hit_date_isValid;

    qint64 m_spider_hits_count;
    bool m_spider_hits_count_isSet;
    bool m_spider_hits_count_isValid;

    QString m_to_day;
    bool m_to_day_isSet;
    bool m_to_day_isValid;

    qint64 m_total_clicks;
    bool m_total_clicks_isSet;
    bool m_total_clicks_isValid;

    qint64 m_total_views;
    bool m_total_views_isSet;
    bool m_total_views_isValid;

    qint64 m_unique_clicks;
    bool m_unique_clicks_isSet;
    bool m_unique_clicks_isValid;

    qint64 m_unique_conversions;
    bool m_unique_conversions_isSet;
    bool m_unique_conversions_isValid;

    qint64 m_unique_views;
    bool m_unique_views_isSet;
    bool m_unique_views_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_Core_Dto_Aggregated_AggregatedResult)

#endif // OAIApi_Core_Dto_Aggregated_AggregatedResult_H
