/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_Core_Dto_Datapoints_UniqueDestinationItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::OAIApi_Core_Dto_Datapoints_UniqueDestinationItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::OAIApi_Core_Dto_Datapoints_UniqueDestinationItem() {
    this->initializeModel();
}

OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::~OAIApi_Core_Dto_Datapoints_UniqueDestinationItem() {}

void OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::initializeModel() {

    m_first_destination_url_isSet = false;
    m_first_destination_url_isValid = false;
}

void OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::fromJsonObject(QJsonObject json) {

    m_first_destination_url_isValid = ::OpenAPI::fromJsonValue(m_first_destination_url, json[QString("firstDestinationUrl")]);
    m_first_destination_url_isSet = !json[QString("firstDestinationUrl")].isNull() && m_first_destination_url_isValid;
}

QString OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::asJsonObject() const {
    QJsonObject obj;
    if (m_first_destination_url_isSet) {
        obj.insert(QString("firstDestinationUrl"), ::OpenAPI::toJsonValue(m_first_destination_url));
    }
    return obj;
}

QString OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::getFirstDestinationUrl() const {
    return m_first_destination_url;
}
void OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::setFirstDestinationUrl(const QString &first_destination_url) {
    m_first_destination_url = first_destination_url;
    m_first_destination_url_isSet = true;
}

bool OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::is_first_destination_url_Set() const{
    return m_first_destination_url_isSet;
}

bool OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::is_first_destination_url_Valid() const{
    return m_first_destination_url_isValid;
}

bool OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_destination_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_Core_Dto_Datapoints_UniqueDestinationItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
