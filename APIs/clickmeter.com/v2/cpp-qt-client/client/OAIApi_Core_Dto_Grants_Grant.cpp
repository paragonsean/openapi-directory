/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_Core_Dto_Grants_Grant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_Core_Dto_Grants_Grant::OAIApi_Core_Dto_Grants_Grant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_Core_Dto_Grants_Grant::OAIApi_Core_Dto_Grants_Grant() {
    this->initializeModel();
}

OAIApi_Core_Dto_Grants_Grant::~OAIApi_Core_Dto_Grants_Grant() {}

void OAIApi_Core_Dto_Grants_Grant::initializeModel() {

    m_datapoint_type_isSet = false;
    m_datapoint_type_isValid = false;

    m_entity_isSet = false;
    m_entity_isValid = false;

    m_entity_name_isSet = false;
    m_entity_name_isValid = false;

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIApi_Core_Dto_Grants_Grant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_Core_Dto_Grants_Grant::fromJsonObject(QJsonObject json) {

    m_datapoint_type_isValid = ::OpenAPI::fromJsonValue(m_datapoint_type, json[QString("DatapointType")]);
    m_datapoint_type_isSet = !json[QString("DatapointType")].isNull() && m_datapoint_type_isValid;

    m_entity_isValid = ::OpenAPI::fromJsonValue(m_entity, json[QString("Entity")]);
    m_entity_isSet = !json[QString("Entity")].isNull() && m_entity_isValid;

    m_entity_name_isValid = ::OpenAPI::fromJsonValue(m_entity_name, json[QString("EntityName")]);
    m_entity_name_isSet = !json[QString("EntityName")].isNull() && m_entity_name_isValid;

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("EntityType")]);
    m_entity_type_isSet = !json[QString("EntityType")].isNull() && m_entity_type_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;
}

QString OAIApi_Core_Dto_Grants_Grant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_Core_Dto_Grants_Grant::asJsonObject() const {
    QJsonObject obj;
    if (m_datapoint_type_isSet) {
        obj.insert(QString("DatapointType"), ::OpenAPI::toJsonValue(m_datapoint_type));
    }
    if (m_entity.isSet()) {
        obj.insert(QString("Entity"), ::OpenAPI::toJsonValue(m_entity));
    }
    if (m_entity_name_isSet) {
        obj.insert(QString("EntityName"), ::OpenAPI::toJsonValue(m_entity_name));
    }
    if (m_entity_type_isSet) {
        obj.insert(QString("EntityType"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIApi_Core_Dto_Grants_Grant::getDatapointType() const {
    return m_datapoint_type;
}
void OAIApi_Core_Dto_Grants_Grant::setDatapointType(const QString &datapoint_type) {
    m_datapoint_type = datapoint_type;
    m_datapoint_type_isSet = true;
}

bool OAIApi_Core_Dto_Grants_Grant::is_datapoint_type_Set() const{
    return m_datapoint_type_isSet;
}

bool OAIApi_Core_Dto_Grants_Grant::is_datapoint_type_Valid() const{
    return m_datapoint_type_isValid;
}

OAIApi_Core_Responses_EntityUri_System_Int64_ OAIApi_Core_Dto_Grants_Grant::getEntity() const {
    return m_entity;
}
void OAIApi_Core_Dto_Grants_Grant::setEntity(const OAIApi_Core_Responses_EntityUri_System_Int64_ &entity) {
    m_entity = entity;
    m_entity_isSet = true;
}

bool OAIApi_Core_Dto_Grants_Grant::is_entity_Set() const{
    return m_entity_isSet;
}

bool OAIApi_Core_Dto_Grants_Grant::is_entity_Valid() const{
    return m_entity_isValid;
}

QString OAIApi_Core_Dto_Grants_Grant::getEntityName() const {
    return m_entity_name;
}
void OAIApi_Core_Dto_Grants_Grant::setEntityName(const QString &entity_name) {
    m_entity_name = entity_name;
    m_entity_name_isSet = true;
}

bool OAIApi_Core_Dto_Grants_Grant::is_entity_name_Set() const{
    return m_entity_name_isSet;
}

bool OAIApi_Core_Dto_Grants_Grant::is_entity_name_Valid() const{
    return m_entity_name_isValid;
}

QString OAIApi_Core_Dto_Grants_Grant::getEntityType() const {
    return m_entity_type;
}
void OAIApi_Core_Dto_Grants_Grant::setEntityType(const QString &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAIApi_Core_Dto_Grants_Grant::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAIApi_Core_Dto_Grants_Grant::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

QString OAIApi_Core_Dto_Grants_Grant::getType() const {
    return m_type;
}
void OAIApi_Core_Dto_Grants_Grant::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIApi_Core_Dto_Grants_Grant::is_type_Set() const{
    return m_type_isSet;
}

bool OAIApi_Core_Dto_Grants_Grant::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIApi_Core_Dto_Grants_Grant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_datapoint_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_Core_Dto_Grants_Grant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
