/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_Core_Dto_Accounting_User.h
 *
 * 
 */

#ifndef OAIApi_Core_Dto_Accounting_User_H
#define OAIApi_Core_Dto_Accounting_User_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApi_Core_Dto_Accounting_User : public OAIObject {
public:
    OAIApi_Core_Dto_Accounting_User();
    OAIApi_Core_Dto_Accounting_User(QString json);
    ~OAIApi_Core_Dto_Accounting_User() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBoGoVal() const;
    void setBoGoVal(const QString &bo_go_val);
    bool is_bo_go_val_Set() const;
    bool is_bo_go_val_Valid() const;

    qint64 getBonusClicks() const;
    void setBonusClicks(const qint64 &bonus_clicks);
    bool is_bonus_clicks_Set() const;
    bool is_bonus_clicks_Valid() const;

    QString getCompanyName() const;
    void setCompanyName(const QString &company_name);
    bool is_company_name_Set() const;
    bool is_company_name_Valid() const;

    QString getCompanyRole() const;
    void setCompanyRole(const QString &company_role);
    bool is_company_role_Set() const;
    bool is_company_role_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    bool isRedirectOnly() const;
    void setRedirectOnly(const bool &redirect_only);
    bool is_redirect_only_Set() const;
    bool is_redirect_only_Valid() const;

    QString getRegistrationDate() const;
    void setRegistrationDate(const QString &registration_date);
    bool is_registration_date_Set() const;
    bool is_registration_date_Valid() const;

    QString getTimeframeMinDate() const;
    void setTimeframeMinDate(const QString &timeframe_min_date);
    bool is_timeframe_min_date_Set() const;
    bool is_timeframe_min_date_Valid() const;

    qint32 getTimezone() const;
    void setTimezone(const qint32 &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getTimezonename() const;
    void setTimezonename(const QString &timezonename);
    bool is_timezonename_Set() const;
    bool is_timezonename_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bo_go_val;
    bool m_bo_go_val_isSet;
    bool m_bo_go_val_isValid;

    qint64 m_bonus_clicks;
    bool m_bonus_clicks_isSet;
    bool m_bonus_clicks_isValid;

    QString m_company_name;
    bool m_company_name_isSet;
    bool m_company_name_isValid;

    QString m_company_role;
    bool m_company_role_isSet;
    bool m_company_role_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    bool m_redirect_only;
    bool m_redirect_only_isSet;
    bool m_redirect_only_isValid;

    QString m_registration_date;
    bool m_registration_date_isSet;
    bool m_registration_date_isValid;

    QString m_timeframe_min_date;
    bool m_timeframe_min_date_isSet;
    bool m_timeframe_min_date_isValid;

    qint32 m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString m_timezonename;
    bool m_timezonename_isSet;
    bool m_timezonename_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_Core_Dto_Accounting_User)

#endif // OAIApi_Core_Dto_Accounting_User_H
