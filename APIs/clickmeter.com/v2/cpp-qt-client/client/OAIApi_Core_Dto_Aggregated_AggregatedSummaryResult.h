/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_Core_Dto_Aggregated_AggregatedSummaryResult.h
 *
 * 
 */

#ifndef OAIApi_Core_Dto_Aggregated_AggregatedSummaryResult_H
#define OAIApi_Core_Dto_Aggregated_AggregatedSummaryResult_H

#include <QJsonObject>

#include "OAIApi_Core_Dto_Aggregated_AggregatedResult.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApi_Core_Dto_Aggregated_AggregatedResult;

class OAIApi_Core_Dto_Aggregated_AggregatedSummaryResult : public OAIObject {
public:
    OAIApi_Core_Dto_Aggregated_AggregatedSummaryResult();
    OAIApi_Core_Dto_Aggregated_AggregatedSummaryResult(QString json);
    ~OAIApi_Core_Dto_Aggregated_AggregatedSummaryResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCount() const;
    void setCount(const qint64 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint64 getOffset() const;
    void setOffset(const qint64 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QList<OAIApi_Core_Dto_Aggregated_AggregatedResult> getResult() const;
    void setResult(const QList<OAIApi_Core_Dto_Aggregated_AggregatedResult> &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint64 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QList<OAIApi_Core_Dto_Aggregated_AggregatedResult> m_result;
    bool m_result_isSet;
    bool m_result_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_Core_Dto_Aggregated_AggregatedSummaryResult)

#endif // OAIApi_Core_Dto_Aggregated_AggregatedSummaryResult_H
