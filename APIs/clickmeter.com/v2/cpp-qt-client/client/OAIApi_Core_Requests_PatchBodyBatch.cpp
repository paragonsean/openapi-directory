/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_Core_Requests_PatchBodyBatch.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_Core_Requests_PatchBodyBatch::OAIApi_Core_Requests_PatchBodyBatch(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_Core_Requests_PatchBodyBatch::OAIApi_Core_Requests_PatchBodyBatch() {
    this->initializeModel();
}

OAIApi_Core_Requests_PatchBodyBatch::~OAIApi_Core_Requests_PatchBodyBatch() {}

void OAIApi_Core_Requests_PatchBodyBatch::initializeModel() {

    m_patch_requests_isSet = false;
    m_patch_requests_isValid = false;
}

void OAIApi_Core_Requests_PatchBodyBatch::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_Core_Requests_PatchBodyBatch::fromJsonObject(QJsonObject json) {

    m_patch_requests_isValid = ::OpenAPI::fromJsonValue(m_patch_requests, json[QString("PatchRequests")]);
    m_patch_requests_isSet = !json[QString("PatchRequests")].isNull() && m_patch_requests_isValid;
}

QString OAIApi_Core_Requests_PatchBodyBatch::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_Core_Requests_PatchBodyBatch::asJsonObject() const {
    QJsonObject obj;
    if (m_patch_requests.size() > 0) {
        obj.insert(QString("PatchRequests"), ::OpenAPI::toJsonValue(m_patch_requests));
    }
    return obj;
}

QList<OAIApi_Core_Requests_PatchBody> OAIApi_Core_Requests_PatchBodyBatch::getPatchRequests() const {
    return m_patch_requests;
}
void OAIApi_Core_Requests_PatchBodyBatch::setPatchRequests(const QList<OAIApi_Core_Requests_PatchBody> &patch_requests) {
    m_patch_requests = patch_requests;
    m_patch_requests_isSet = true;
}

bool OAIApi_Core_Requests_PatchBodyBatch::is_patch_requests_Set() const{
    return m_patch_requests_isSet;
}

bool OAIApi_Core_Requests_PatchBodyBatch::is_patch_requests_Valid() const{
    return m_patch_requests_isValid;
}

bool OAIApi_Core_Requests_PatchBodyBatch::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_patch_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_Core_Requests_PatchBodyBatch::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
