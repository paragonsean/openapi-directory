/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_Core_Dto_ClickStream_HitLocationInfo.h
 *
 * 
 */

#ifndef OAIApi_Core_Dto_ClickStream_HitLocationInfo_H
#define OAIApi_Core_Dto_ClickStream_HitLocationInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApi_Core_Dto_ClickStream_HitLocationInfo : public OAIObject {
public:
    OAIApi_Core_Dto_ClickStream_HitLocationInfo();
    OAIApi_Core_Dto_ClickStream_HitLocationInfo(QString json);
    ~OAIApi_Core_Dto_ClickStream_HitLocationInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAreacode() const;
    void setAreacode(const QString &areacode);
    bool is_areacode_Set() const;
    bool is_areacode_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getMetrocode() const;
    void setMetrocode(const QString &metrocode);
    bool is_metrocode_Set() const;
    bool is_metrocode_Valid() const;

    QString getOrganization() const;
    void setOrganization(const QString &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    QString getPostalcode() const;
    void setPostalcode(const QString &postalcode);
    bool is_postalcode_Set() const;
    bool is_postalcode_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getRegionName() const;
    void setRegionName(const QString &region_name);
    bool is_region_name_Set() const;
    bool is_region_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_areacode;
    bool m_areacode_isSet;
    bool m_areacode_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_metrocode;
    bool m_metrocode_isSet;
    bool m_metrocode_isValid;

    QString m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    QString m_postalcode;
    bool m_postalcode_isSet;
    bool m_postalcode_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_region_name;
    bool m_region_name_isSet;
    bool m_region_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_Core_Dto_ClickStream_HitLocationInfo)

#endif // OAIApi_Core_Dto_ClickStream_HitLocationInfo_H
