/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_Core_Dto_ClickStream_Hit.h
 *
 * 
 */

#ifndef OAIApi_Core_Dto_ClickStream_Hit_H
#define OAIApi_Core_Dto_ClickStream_Hit_H

#include <QJsonObject>

#include "OAIApi_Core_Dto_ClickStream_HitBrowserInfo.h"
#include "OAIApi_Core_Dto_ClickStream_HitConversionInfo.h"
#include "OAIApi_Core_Dto_ClickStream_HitDatapointInfo.h"
#include "OAIApi_Core_Dto_ClickStream_HitLocationInfo.h"
#include "OAIApi_Core_Dto_ClickStream_HitOsInfo.h"
#include "OAIApi_Core_Dto_ClickStream_HitSource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApi_Core_Dto_ClickStream_HitBrowserInfo;
class OAIApi_Core_Dto_ClickStream_HitConversionInfo;
class OAIApi_Core_Dto_ClickStream_HitDatapointInfo;
class OAIApi_Core_Dto_ClickStream_HitLocationInfo;
class OAIApi_Core_Dto_ClickStream_HitOsInfo;
class OAIApi_Core_Dto_ClickStream_HitSource;

class OAIApi_Core_Dto_ClickStream_Hit : public OAIObject {
public:
    OAIApi_Core_Dto_ClickStream_Hit();
    OAIApi_Core_Dto_ClickStream_Hit(QString json);
    ~OAIApi_Core_Dto_ClickStream_Hit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessTime() const;
    void setAccessTime(const QString &access_time);
    bool is_access_time_Set() const;
    bool is_access_time_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitBrowserInfo getBrowser() const;
    void setBrowser(const OAIApi_Core_Dto_ClickStream_HitBrowserInfo &browser);
    bool is_browser_Set() const;
    bool is_browser_Valid() const;

    QString getClientLanguage() const;
    void setClientLanguage(const QString &client_language);
    bool is_client_language_Set() const;
    bool is_client_language_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo getConversion1() const;
    void setConversion1(const OAIApi_Core_Dto_ClickStream_HitConversionInfo &conversion1);
    bool is_conversion1_Set() const;
    bool is_conversion1_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo getConversion2() const;
    void setConversion2(const OAIApi_Core_Dto_ClickStream_HitConversionInfo &conversion2);
    bool is_conversion2_Set() const;
    bool is_conversion2_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo getConversion3() const;
    void setConversion3(const OAIApi_Core_Dto_ClickStream_HitConversionInfo &conversion3);
    bool is_conversion3_Set() const;
    bool is_conversion3_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo getConversion4() const;
    void setConversion4(const OAIApi_Core_Dto_ClickStream_HitConversionInfo &conversion4);
    bool is_conversion4_Set() const;
    bool is_conversion4_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo getConversion5() const;
    void setConversion5(const OAIApi_Core_Dto_ClickStream_HitConversionInfo &conversion5);
    bool is_conversion5_Set() const;
    bool is_conversion5_Valid() const;

    QList<OAIApi_Core_Dto_ClickStream_HitConversionInfo> getConversions() const;
    void setConversions(const QList<OAIApi_Core_Dto_ClickStream_HitConversionInfo> &conversions);
    bool is_conversions_Set() const;
    bool is_conversions_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitDatapointInfo getEntity() const;
    void setEntity(const OAIApi_Core_Dto_ClickStream_HitDatapointInfo &entity);
    bool is_entity_Set() const;
    bool is_entity_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QString getIsProxy() const;
    void setIsProxy(const QString &is_proxy);
    bool is_is_proxy_Set() const;
    bool is_is_proxy_Valid() const;

    QString getIsSpider() const;
    void setIsSpider(const QString &is_spider);
    bool is_is_spider_Set() const;
    bool is_is_spider_Valid() const;

    QString getIsUnique() const;
    void setIsUnique(const QString &is_unique);
    bool is_is_unique_Set() const;
    bool is_is_unique_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitLocationInfo getLocation() const;
    void setLocation(const OAIApi_Core_Dto_ClickStream_HitLocationInfo &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getOrg() const;
    void setOrg(const QString &org);
    bool is_org_Set() const;
    bool is_org_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitOsInfo getOs() const;
    void setOs(const OAIApi_Core_Dto_ClickStream_HitOsInfo &os);
    bool is_os_Set() const;
    bool is_os_Valid() const;

    QString getQueryParams() const;
    void setQueryParams(const QString &query_params);
    bool is_query_params_Set() const;
    bool is_query_params_Valid() const;

    QString getRealDestinationUrl() const;
    void setRealDestinationUrl(const QString &real_destination_url);
    bool is_real_destination_url_Set() const;
    bool is_real_destination_url_Valid() const;

    QString getReferer() const;
    void setReferer(const QString &referer);
    bool is_referer_Set() const;
    bool is_referer_Valid() const;

    OAIApi_Core_Dto_ClickStream_HitSource getSource() const;
    void setSource(const OAIApi_Core_Dto_ClickStream_HitSource &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_time;
    bool m_access_time_isSet;
    bool m_access_time_isValid;

    OAIApi_Core_Dto_ClickStream_HitBrowserInfo m_browser;
    bool m_browser_isSet;
    bool m_browser_isValid;

    QString m_client_language;
    bool m_client_language_isSet;
    bool m_client_language_isValid;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo m_conversion1;
    bool m_conversion1_isSet;
    bool m_conversion1_isValid;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo m_conversion2;
    bool m_conversion2_isSet;
    bool m_conversion2_isValid;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo m_conversion3;
    bool m_conversion3_isSet;
    bool m_conversion3_isValid;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo m_conversion4;
    bool m_conversion4_isSet;
    bool m_conversion4_isValid;

    OAIApi_Core_Dto_ClickStream_HitConversionInfo m_conversion5;
    bool m_conversion5_isSet;
    bool m_conversion5_isValid;

    QList<OAIApi_Core_Dto_ClickStream_HitConversionInfo> m_conversions;
    bool m_conversions_isSet;
    bool m_conversions_isValid;

    OAIApi_Core_Dto_ClickStream_HitDatapointInfo m_entity;
    bool m_entity_isSet;
    bool m_entity_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QString m_is_proxy;
    bool m_is_proxy_isSet;
    bool m_is_proxy_isValid;

    QString m_is_spider;
    bool m_is_spider_isSet;
    bool m_is_spider_isValid;

    QString m_is_unique;
    bool m_is_unique_isSet;
    bool m_is_unique_isValid;

    OAIApi_Core_Dto_ClickStream_HitLocationInfo m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_org;
    bool m_org_isSet;
    bool m_org_isValid;

    OAIApi_Core_Dto_ClickStream_HitOsInfo m_os;
    bool m_os_isSet;
    bool m_os_isValid;

    QString m_query_params;
    bool m_query_params_isSet;
    bool m_query_params_isValid;

    QString m_real_destination_url;
    bool m_real_destination_url_isSet;
    bool m_real_destination_url_isValid;

    QString m_referer;
    bool m_referer_isSet;
    bool m_referer_isValid;

    OAIApi_Core_Dto_ClickStream_HitSource m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_Core_Dto_ClickStream_Hit)

#endif // OAIApi_Core_Dto_ClickStream_Hit_H
