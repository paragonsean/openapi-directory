/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_Core_Dto_Tags_Tag.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_Core_Dto_Tags_Tag::OAIApi_Core_Dto_Tags_Tag(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_Core_Dto_Tags_Tag::OAIApi_Core_Dto_Tags_Tag() {
    this->initializeModel();
}

OAIApi_Core_Dto_Tags_Tag::~OAIApi_Core_Dto_Tags_Tag() {}

void OAIApi_Core_Dto_Tags_Tag::initializeModel() {

    m_datapoints_isSet = false;
    m_datapoints_isValid = false;

    m_groups_isSet = false;
    m_groups_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIApi_Core_Dto_Tags_Tag::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_Core_Dto_Tags_Tag::fromJsonObject(QJsonObject json) {

    m_datapoints_isValid = ::OpenAPI::fromJsonValue(m_datapoints, json[QString("datapoints")]);
    m_datapoints_isSet = !json[QString("datapoints")].isNull() && m_datapoints_isValid;

    m_groups_isValid = ::OpenAPI::fromJsonValue(m_groups, json[QString("groups")]);
    m_groups_isSet = !json[QString("groups")].isNull() && m_groups_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIApi_Core_Dto_Tags_Tag::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_Core_Dto_Tags_Tag::asJsonObject() const {
    QJsonObject obj;
    if (m_datapoints.size() > 0) {
        obj.insert(QString("datapoints"), ::OpenAPI::toJsonValue(m_datapoints));
    }
    if (m_groups.size() > 0) {
        obj.insert(QString("groups"), ::OpenAPI::toJsonValue(m_groups));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<qint64> OAIApi_Core_Dto_Tags_Tag::getDatapoints() const {
    return m_datapoints;
}
void OAIApi_Core_Dto_Tags_Tag::setDatapoints(const QList<qint64> &datapoints) {
    m_datapoints = datapoints;
    m_datapoints_isSet = true;
}

bool OAIApi_Core_Dto_Tags_Tag::is_datapoints_Set() const{
    return m_datapoints_isSet;
}

bool OAIApi_Core_Dto_Tags_Tag::is_datapoints_Valid() const{
    return m_datapoints_isValid;
}

QList<qint64> OAIApi_Core_Dto_Tags_Tag::getGroups() const {
    return m_groups;
}
void OAIApi_Core_Dto_Tags_Tag::setGroups(const QList<qint64> &groups) {
    m_groups = groups;
    m_groups_isSet = true;
}

bool OAIApi_Core_Dto_Tags_Tag::is_groups_Set() const{
    return m_groups_isSet;
}

bool OAIApi_Core_Dto_Tags_Tag::is_groups_Valid() const{
    return m_groups_isValid;
}

qint64 OAIApi_Core_Dto_Tags_Tag::getId() const {
    return m_id;
}
void OAIApi_Core_Dto_Tags_Tag::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIApi_Core_Dto_Tags_Tag::is_id_Set() const{
    return m_id_isSet;
}

bool OAIApi_Core_Dto_Tags_Tag::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIApi_Core_Dto_Tags_Tag::getName() const {
    return m_name;
}
void OAIApi_Core_Dto_Tags_Tag::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApi_Core_Dto_Tags_Tag::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApi_Core_Dto_Tags_Tag::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIApi_Core_Dto_Tags_Tag::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_datapoints.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_Core_Dto_Tags_Tag::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
