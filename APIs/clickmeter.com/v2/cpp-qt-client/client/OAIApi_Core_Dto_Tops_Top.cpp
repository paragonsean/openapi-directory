/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_Core_Dto_Tops_Top.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_Core_Dto_Tops_Top::OAIApi_Core_Dto_Tops_Top(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_Core_Dto_Tops_Top::OAIApi_Core_Dto_Tops_Top() {
    this->initializeModel();
}

OAIApi_Core_Dto_Tops_Top::~OAIApi_Core_Dto_Tops_Top() {}

void OAIApi_Core_Dto_Tops_Top::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_data_isSet = false;
    m_data_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;
}

void OAIApi_Core_Dto_Tops_Top::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_Core_Dto_Tops_Top::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;
}

QString OAIApi_Core_Dto_Tops_Top::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_Core_Dto_Tops_Top::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_data.size() > 0) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    return obj;
}

QString OAIApi_Core_Dto_Tops_Top::getCreatedAt() const {
    return m_created_at;
}
void OAIApi_Core_Dto_Tops_Top::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIApi_Core_Dto_Tops_Top::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIApi_Core_Dto_Tops_Top::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QList<OAIApi_Core_Dto_Tops_TopItem> OAIApi_Core_Dto_Tops_Top::getData() const {
    return m_data;
}
void OAIApi_Core_Dto_Tops_Top::setData(const QList<OAIApi_Core_Dto_Tops_TopItem> &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIApi_Core_Dto_Tops_Top::is_data_Set() const{
    return m_data_isSet;
}

bool OAIApi_Core_Dto_Tops_Top::is_data_Valid() const{
    return m_data_isValid;
}

QString OAIApi_Core_Dto_Tops_Top::getKey() const {
    return m_key;
}
void OAIApi_Core_Dto_Tops_Top::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIApi_Core_Dto_Tops_Top::is_key_Set() const{
    return m_key_isSet;
}

bool OAIApi_Core_Dto_Tops_Top::is_key_Valid() const{
    return m_key_isValid;
}

bool OAIApi_Core_Dto_Tops_Top::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_Core_Dto_Tops_Top::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
