/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_Core_Dto_ClickStream_HitDatapointInfo.h
 *
 * 
 */

#ifndef OAIApi_Core_Dto_ClickStream_HitDatapointInfo_H
#define OAIApi_Core_Dto_ClickStream_HitDatapointInfo_H

#include <QJsonObject>

#include "OAIApi_Core_Dto_Tags_Tag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApi_Core_Dto_Tags_Tag;

class OAIApi_Core_Dto_ClickStream_HitDatapointInfo : public OAIObject {
public:
    OAIApi_Core_Dto_ClickStream_HitDatapointInfo();
    OAIApi_Core_Dto_ClickStream_HitDatapointInfo(QString json);
    ~OAIApi_Core_Dto_ClickStream_HitDatapointInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreationDate() const;
    void setCreationDate(const QString &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    bool isDatapointFavourite() const;
    void setDatapointFavourite(const bool &datapoint_favourite);
    bool is_datapoint_favourite_Set() const;
    bool is_datapoint_favourite_Valid() const;

    qint64 getDatapointId() const;
    void setDatapointId(const qint64 &datapoint_id);
    bool is_datapoint_id_Set() const;
    bool is_datapoint_id_Valid() const;

    QString getDatapointName() const;
    void setDatapointName(const QString &datapoint_name);
    bool is_datapoint_name_Set() const;
    bool is_datapoint_name_Valid() const;

    QString getDatapointTitle() const;
    void setDatapointTitle(const QString &datapoint_title);
    bool is_datapoint_title_Set() const;
    bool is_datapoint_title_Valid() const;

    QString getDatapointType() const;
    void setDatapointType(const QString &datapoint_type);
    bool is_datapoint_type_Set() const;
    bool is_datapoint_type_Valid() const;

    QString getDestinationUrl() const;
    void setDestinationUrl(const QString &destination_url);
    bool is_destination_url_Set() const;
    bool is_destination_url_Valid() const;

    qint64 getGroupId() const;
    void setGroupId(const qint64 &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    QString getGroupName() const;
    void setGroupName(const QString &group_name);
    bool is_group_name_Set() const;
    bool is_group_name_Valid() const;

    bool isIsAbTest() const;
    void setIsAbTest(const bool &is_ab_test);
    bool is_is_ab_test_Set() const;
    bool is_is_ab_test_Valid() const;

    bool isIsPrivateShared() const;
    void setIsPrivateShared(const bool &is_private_shared);
    bool is_is_private_shared_Set() const;
    bool is_is_private_shared_Valid() const;

    bool isIsPublic() const;
    void setIsPublic(const bool &is_public);
    bool is_is_public_Set() const;
    bool is_is_public_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIApi_Core_Dto_Tags_Tag> getTags() const;
    void setTags(const QList<OAIApi_Core_Dto_Tags_Tag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTrackingCode() const;
    void setTrackingCode(const QString &tracking_code);
    bool is_tracking_code_Set() const;
    bool is_tracking_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    bool m_datapoint_favourite;
    bool m_datapoint_favourite_isSet;
    bool m_datapoint_favourite_isValid;

    qint64 m_datapoint_id;
    bool m_datapoint_id_isSet;
    bool m_datapoint_id_isValid;

    QString m_datapoint_name;
    bool m_datapoint_name_isSet;
    bool m_datapoint_name_isValid;

    QString m_datapoint_title;
    bool m_datapoint_title_isSet;
    bool m_datapoint_title_isValid;

    QString m_datapoint_type;
    bool m_datapoint_type_isSet;
    bool m_datapoint_type_isValid;

    QString m_destination_url;
    bool m_destination_url_isSet;
    bool m_destination_url_isValid;

    qint64 m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    QString m_group_name;
    bool m_group_name_isSet;
    bool m_group_name_isValid;

    bool m_is_ab_test;
    bool m_is_ab_test_isSet;
    bool m_is_ab_test_isValid;

    bool m_is_private_shared;
    bool m_is_private_shared_isSet;
    bool m_is_private_shared_isValid;

    bool m_is_public;
    bool m_is_public_isSet;
    bool m_is_public_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIApi_Core_Dto_Tags_Tag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_tracking_code;
    bool m_tracking_code_isSet;
    bool m_tracking_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_Core_Dto_ClickStream_HitDatapointInfo)

#endif // OAIApi_Core_Dto_ClickStream_HitDatapointInfo_H
