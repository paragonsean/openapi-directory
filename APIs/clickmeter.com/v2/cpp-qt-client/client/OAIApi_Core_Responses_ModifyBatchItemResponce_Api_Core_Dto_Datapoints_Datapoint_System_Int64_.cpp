/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_() {
    this->initializeModel();
}

OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::~OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_() {}

void OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::initializeModel() {

    m_entity_data_isSet = false;
    m_entity_data_isValid = false;

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::fromJsonObject(QJsonObject json) {

    m_entity_data_isValid = ::OpenAPI::fromJsonValue(m_entity_data, json[QString("entityData")]);
    m_entity_data_isSet = !json[QString("entityData")].isNull() && m_entity_data_isValid;

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_data.isSet()) {
        obj.insert(QString("entityData"), ::OpenAPI::toJsonValue(m_entity_data));
    }
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIApi_Core_Dto_Datapoints_Datapoint OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::getEntityData() const {
    return m_entity_data;
}
void OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::setEntityData(const OAIApi_Core_Dto_Datapoints_Datapoint &entity_data) {
    m_entity_data = entity_data;
    m_entity_data_isSet = true;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::is_entity_data_Set() const{
    return m_entity_data_isSet;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::is_entity_data_Valid() const{
    return m_entity_data_isValid;
}

QList<OAIClickMeter_Infrastructure_Validation_ValidationFailure> OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::getErrors() const {
    return m_errors;
}
void OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::setErrors(const QList<OAIClickMeter_Infrastructure_Validation_ValidationFailure> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::is_errors_Valid() const{
    return m_errors_isValid;
}

OAIApi_Core_Responses_EntityUri_System_Int64_ OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::getResult() const {
    return m_result;
}
void OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::setResult(const OAIApi_Core_Responses_EntityUri_System_Int64_ &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::is_result_Set() const{
    return m_result_isSet;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::is_result_Valid() const{
    return m_result_isValid;
}

QString OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::getStatus() const {
    return m_status;
}
void OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::is_status_Set() const{
    return m_status_isSet;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_Core_Responses_ModifyBatchItemResponce_Api_Core_Dto_Datapoints_Datapoint_System_Int64_::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
