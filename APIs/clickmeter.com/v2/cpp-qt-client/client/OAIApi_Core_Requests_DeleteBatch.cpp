/**
 * ClickMeter API
 * Api dashboard for ClickMeter API
 *
 * The version of the OpenAPI document: v2
 * Contact: api@clickmeter.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_Core_Requests_DeleteBatch.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_Core_Requests_DeleteBatch::OAIApi_Core_Requests_DeleteBatch(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_Core_Requests_DeleteBatch::OAIApi_Core_Requests_DeleteBatch() {
    this->initializeModel();
}

OAIApi_Core_Requests_DeleteBatch::~OAIApi_Core_Requests_DeleteBatch() {}

void OAIApi_Core_Requests_DeleteBatch::initializeModel() {

    m_entities_isSet = false;
    m_entities_isValid = false;
}

void OAIApi_Core_Requests_DeleteBatch::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_Core_Requests_DeleteBatch::fromJsonObject(QJsonObject json) {

    m_entities_isValid = ::OpenAPI::fromJsonValue(m_entities, json[QString("Entities")]);
    m_entities_isSet = !json[QString("Entities")].isNull() && m_entities_isValid;
}

QString OAIApi_Core_Requests_DeleteBatch::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_Core_Requests_DeleteBatch::asJsonObject() const {
    QJsonObject obj;
    if (m_entities.size() > 0) {
        obj.insert(QString("Entities"), ::OpenAPI::toJsonValue(m_entities));
    }
    return obj;
}

QList<OAIApi_Core_Dto_EntityUriLong> OAIApi_Core_Requests_DeleteBatch::getEntities() const {
    return m_entities;
}
void OAIApi_Core_Requests_DeleteBatch::setEntities(const QList<OAIApi_Core_Dto_EntityUriLong> &entities) {
    m_entities = entities;
    m_entities_isSet = true;
}

bool OAIApi_Core_Requests_DeleteBatch::is_entities_Set() const{
    return m_entities_isSet;
}

bool OAIApi_Core_Requests_DeleteBatch::is_entities_Valid() const{
    return m_entities_isValid;
}

bool OAIApi_Core_Requests_DeleteBatch::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entities.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_Core_Requests_DeleteBatch::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
