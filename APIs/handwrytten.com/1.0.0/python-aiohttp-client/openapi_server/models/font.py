# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Font(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, image: str=None, label: str=None):
        """Font - a model defined in OpenAPI

        :param id: The id of this Font.
        :param image: The image of this Font.
        :param label: The label of this Font.
        """
        self.openapi_types = {
            'id': str,
            'image': str,
            'label': str
        }

        self.attribute_map = {
            'id': 'id',
            'image': 'image',
            'label': 'label'
        }

        self._id = id
        self._image = image
        self._label = label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Font':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Font of this Font.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Font.

        name used internally at Handwrytten

        :return: The id of this Font.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Font.

        name used internally at Handwrytten

        :param id: The id of this Font.
        :type id: str
        """

        self._id = id

    @property
    def image(self):
        """Gets the image of this Font.

        url to sample of font

        :return: The image of this Font.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this Font.

        url to sample of font

        :param image: The image of this Font.
        :type image: str
        """

        self._image = image

    @property
    def label(self):
        """Gets the label of this Font.

        Common name

        :return: The label of this Font.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this Font.

        Common name

        :param label: The label of this Font.
        :type label: str
        """

        self._label = label
