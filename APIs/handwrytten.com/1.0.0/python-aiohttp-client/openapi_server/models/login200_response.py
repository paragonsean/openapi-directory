# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Login200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anet_customer_id: str=None, free_cards: int=None, status: str=None, uid: str=None, user_id: int=None):
        """Login200Response - a model defined in OpenAPI

        :param anet_customer_id: The anet_customer_id of this Login200Response.
        :param free_cards: The free_cards of this Login200Response.
        :param status: The status of this Login200Response.
        :param uid: The uid of this Login200Response.
        :param user_id: The user_id of this Login200Response.
        """
        self.openapi_types = {
            'anet_customer_id': str,
            'free_cards': int,
            'status': str,
            'uid': str,
            'user_id': int
        }

        self.attribute_map = {
            'anet_customer_id': 'anet_customer_id',
            'free_cards': 'free_cards',
            'status': 'status',
            'uid': 'uid',
            'user_id': 'user_id'
        }

        self._anet_customer_id = anet_customer_id
        self._free_cards = free_cards
        self._status = status
        self._uid = uid
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Login200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The login_200_response of this Login200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anet_customer_id(self):
        """Gets the anet_customer_id of this Login200Response.

        used internally by Handwrytten

        :return: The anet_customer_id of this Login200Response.
        :rtype: str
        """
        return self._anet_customer_id

    @anet_customer_id.setter
    def anet_customer_id(self, anet_customer_id):
        """Sets the anet_customer_id of this Login200Response.

        used internally by Handwrytten

        :param anet_customer_id: The anet_customer_id of this Login200Response.
        :type anet_customer_id: str
        """

        self._anet_customer_id = anet_customer_id

    @property
    def free_cards(self):
        """Gets the free_cards of this Login200Response.

        number of free cards in account

        :return: The free_cards of this Login200Response.
        :rtype: int
        """
        return self._free_cards

    @free_cards.setter
    def free_cards(self, free_cards):
        """Sets the free_cards of this Login200Response.

        number of free cards in account

        :param free_cards: The free_cards of this Login200Response.
        :type free_cards: int
        """

        self._free_cards = free_cards

    @property
    def status(self):
        """Gets the status of this Login200Response.


        :return: The status of this Login200Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Login200Response.


        :param status: The status of this Login200Response.
        :type status: str
        """

        self._status = status

    @property
    def uid(self):
        """Gets the uid of this Login200Response.

        token for future authorized calls

        :return: The uid of this Login200Response.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this Login200Response.

        token for future authorized calls

        :param uid: The uid of this Login200Response.
        :type uid: str
        """

        self._uid = uid

    @property
    def user_id(self):
        """Gets the user_id of this Login200Response.


        :return: The user_id of this Login200Response.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Login200Response.


        :param user_id: The user_id of this Login200Response.
        :type user_id: int
        """

        self._user_id = user_id
