# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateRecipientRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address1: str=None, address2: str=None, business_name: str=None, city: str=None, country: str=None, country_id: int=None, id: int=None, name: str=None, state: str=None, uid: str=None, zip: str=None):
        """UpdateRecipientRequest - a model defined in OpenAPI

        :param address1: The address1 of this UpdateRecipientRequest.
        :param address2: The address2 of this UpdateRecipientRequest.
        :param business_name: The business_name of this UpdateRecipientRequest.
        :param city: The city of this UpdateRecipientRequest.
        :param country: The country of this UpdateRecipientRequest.
        :param country_id: The country_id of this UpdateRecipientRequest.
        :param id: The id of this UpdateRecipientRequest.
        :param name: The name of this UpdateRecipientRequest.
        :param state: The state of this UpdateRecipientRequest.
        :param uid: The uid of this UpdateRecipientRequest.
        :param zip: The zip of this UpdateRecipientRequest.
        """
        self.openapi_types = {
            'address1': str,
            'address2': str,
            'business_name': str,
            'city': str,
            'country': str,
            'country_id': int,
            'id': int,
            'name': str,
            'state': str,
            'uid': str,
            'zip': str
        }

        self.attribute_map = {
            'address1': 'address1',
            'address2': 'address2',
            'business_name': 'business_name',
            'city': 'city',
            'country': 'country',
            'country_id': 'country_id',
            'id': 'id',
            'name': 'name',
            'state': 'state',
            'uid': 'uid',
            'zip': 'zip'
        }

        self._address1 = address1
        self._address2 = address2
        self._business_name = business_name
        self._city = city
        self._country = country
        self._country_id = country_id
        self._id = id
        self._name = name
        self._state = state
        self._uid = uid
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateRecipientRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateRecipient_request of this UpdateRecipientRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address1(self):
        """Gets the address1 of this UpdateRecipientRequest.

        the updated first line of the address

        :return: The address1 of this UpdateRecipientRequest.
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """Sets the address1 of this UpdateRecipientRequest.

        the updated first line of the address

        :param address1: The address1 of this UpdateRecipientRequest.
        :type address1: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """Gets the address2 of this UpdateRecipientRequest.

        the updated second (optional) line of the address

        :return: The address2 of this UpdateRecipientRequest.
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this UpdateRecipientRequest.

        the updated second (optional) line of the address

        :param address2: The address2 of this UpdateRecipientRequest.
        :type address2: str
        """

        self._address2 = address2

    @property
    def business_name(self):
        """Gets the business_name of this UpdateRecipientRequest.

        the updated optional business name on the address

        :return: The business_name of this UpdateRecipientRequest.
        :rtype: str
        """
        return self._business_name

    @business_name.setter
    def business_name(self, business_name):
        """Sets the business_name of this UpdateRecipientRequest.

        the updated optional business name on the address

        :param business_name: The business_name of this UpdateRecipientRequest.
        :type business_name: str
        """

        self._business_name = business_name

    @property
    def city(self):
        """Gets the city of this UpdateRecipientRequest.

        the updated city of the address

        :return: The city of this UpdateRecipientRequest.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this UpdateRecipientRequest.

        the updated city of the address

        :param city: The city of this UpdateRecipientRequest.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this UpdateRecipientRequest.

        the updated name of the country of the address, or use country_id

        :return: The country of this UpdateRecipientRequest.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this UpdateRecipientRequest.

        the updated name of the country of the address, or use country_id

        :param country: The country of this UpdateRecipientRequest.
        :type country: str
        """

        self._country = country

    @property
    def country_id(self):
        """Gets the country_id of this UpdateRecipientRequest.

        the country id of the address

        :return: The country_id of this UpdateRecipientRequest.
        :rtype: int
        """
        return self._country_id

    @country_id.setter
    def country_id(self, country_id):
        """Sets the country_id of this UpdateRecipientRequest.

        the country id of the address

        :param country_id: The country_id of this UpdateRecipientRequest.
        :type country_id: int
        """

        self._country_id = country_id

    @property
    def id(self):
        """Gets the id of this UpdateRecipientRequest.

        the id of the address to update

        :return: The id of this UpdateRecipientRequest.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateRecipientRequest.

        the id of the address to update

        :param id: The id of this UpdateRecipientRequest.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this UpdateRecipientRequest.

        the updated name on the address

        :return: The name of this UpdateRecipientRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateRecipientRequest.

        the updated name on the address

        :param name: The name of this UpdateRecipientRequest.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this UpdateRecipientRequest.

        the updated abbreviated state or province of the address

        :return: The state of this UpdateRecipientRequest.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this UpdateRecipientRequest.

        the updated abbreviated state or province of the address

        :param state: The state of this UpdateRecipientRequest.
        :type state: str
        """

        self._state = state

    @property
    def uid(self):
        """Gets the uid of this UpdateRecipientRequest.

        authorized UID of the session.

        :return: The uid of this UpdateRecipientRequest.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this UpdateRecipientRequest.

        authorized UID of the session.

        :param uid: The uid of this UpdateRecipientRequest.
        :type uid: str
        """

        self._uid = uid

    @property
    def zip(self):
        """Gets the zip of this UpdateRecipientRequest.

        the updated zip or postal code of the address

        :return: The zip of this UpdateRecipientRequest.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this UpdateRecipientRequest.

        the updated zip or postal code of the address

        :param zip: The zip of this UpdateRecipientRequest.
        :type zip: str
        """

        self._zip = zip
