# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class State(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, short_name: str=None):
        """State - a model defined in OpenAPI

        :param name: The name of this State.
        :param short_name: The short_name of this State.
        """
        self.openapi_types = {
            'name': str,
            'short_name': str
        }

        self.attribute_map = {
            'name': 'name',
            'short_name': 'short_name'
        }

        self._name = name
        self._short_name = short_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'State':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The State of this State.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this State.

        the name of the state or province

        :return: The name of this State.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this State.

        the name of the state or province

        :param name: The name of this State.
        :type name: str
        """

        self._name = name

    @property
    def short_name(self):
        """Gets the short_name of this State.

        the two or three character abbreviation for a state or provinnee

        :return: The short_name of this State.
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this State.

        the two or three character abbreviation for a state or provinnee

        :param short_name: The short_name of this State.
        :type short_name: str
        """

        self._short_name = short_name
