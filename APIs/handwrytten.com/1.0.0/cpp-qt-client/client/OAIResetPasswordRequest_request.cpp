/**
 * Handwrytten API
 * This is the Handwrytten API for sending cards written in the handwriting of your choice. Using this api, you can send cards to users.  You can also customize cards with logos, which can be saved and then used like any other card in the system. For a \"sandbox\" account, please contact contact@handwrytten.com To move from credit card per-transaction to monthly invoicing, also contact us. [https://www.handwrytten.com](https://www.handwrytten.com) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@handwrytten.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResetPasswordRequest_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResetPasswordRequest_request::OAIResetPasswordRequest_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResetPasswordRequest_request::OAIResetPasswordRequest_request() {
    this->initializeModel();
}

OAIResetPasswordRequest_request::~OAIResetPasswordRequest_request() {}

void OAIResetPasswordRequest_request::initializeModel() {

    m_login_isSet = false;
    m_login_isValid = false;
}

void OAIResetPasswordRequest_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResetPasswordRequest_request::fromJsonObject(QJsonObject json) {

    m_login_isValid = ::OpenAPI::fromJsonValue(m_login, json[QString("login")]);
    m_login_isSet = !json[QString("login")].isNull() && m_login_isValid;
}

QString OAIResetPasswordRequest_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResetPasswordRequest_request::asJsonObject() const {
    QJsonObject obj;
    if (m_login_isSet) {
        obj.insert(QString("login"), ::OpenAPI::toJsonValue(m_login));
    }
    return obj;
}

QString OAIResetPasswordRequest_request::getLogin() const {
    return m_login;
}
void OAIResetPasswordRequest_request::setLogin(const QString &login) {
    m_login = login;
    m_login_isSet = true;
}

bool OAIResetPasswordRequest_request::is_login_Set() const{
    return m_login_isSet;
}

bool OAIResetPasswordRequest_request::is_login_Valid() const{
    return m_login_isValid;
}

bool OAIResetPasswordRequest_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_login_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResetPasswordRequest_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
