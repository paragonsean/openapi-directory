/**
 * Handwrytten API
 * This is the Handwrytten API for sending cards written in the handwriting of your choice. Using this api, you can send cards to users.  You can also customize cards with logos, which can be saved and then used like any other card in the system. For a \"sandbox\" account, please contact contact@handwrytten.com To move from credit card per-transaction to monthly invoicing, also contact us. [https://www.handwrytten.com](https://www.handwrytten.com) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@handwrytten.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogin_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogin_200_response::OAILogin_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogin_200_response::OAILogin_200_response() {
    this->initializeModel();
}

OAILogin_200_response::~OAILogin_200_response() {}

void OAILogin_200_response::initializeModel() {

    m_anet_customer_id_isSet = false;
    m_anet_customer_id_isValid = false;

    m_free_cards_isSet = false;
    m_free_cards_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAILogin_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogin_200_response::fromJsonObject(QJsonObject json) {

    m_anet_customer_id_isValid = ::OpenAPI::fromJsonValue(m_anet_customer_id, json[QString("anet_customer_id")]);
    m_anet_customer_id_isSet = !json[QString("anet_customer_id")].isNull() && m_anet_customer_id_isValid;

    m_free_cards_isValid = ::OpenAPI::fromJsonValue(m_free_cards, json[QString("free_cards")]);
    m_free_cards_isSet = !json[QString("free_cards")].isNull() && m_free_cards_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;
}

QString OAILogin_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogin_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_anet_customer_id_isSet) {
        obj.insert(QString("anet_customer_id"), ::OpenAPI::toJsonValue(m_anet_customer_id));
    }
    if (m_free_cards_isSet) {
        obj.insert(QString("free_cards"), ::OpenAPI::toJsonValue(m_free_cards));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QString OAILogin_200_response::getAnetCustomerId() const {
    return m_anet_customer_id;
}
void OAILogin_200_response::setAnetCustomerId(const QString &anet_customer_id) {
    m_anet_customer_id = anet_customer_id;
    m_anet_customer_id_isSet = true;
}

bool OAILogin_200_response::is_anet_customer_id_Set() const{
    return m_anet_customer_id_isSet;
}

bool OAILogin_200_response::is_anet_customer_id_Valid() const{
    return m_anet_customer_id_isValid;
}

qint32 OAILogin_200_response::getFreeCards() const {
    return m_free_cards;
}
void OAILogin_200_response::setFreeCards(const qint32 &free_cards) {
    m_free_cards = free_cards;
    m_free_cards_isSet = true;
}

bool OAILogin_200_response::is_free_cards_Set() const{
    return m_free_cards_isSet;
}

bool OAILogin_200_response::is_free_cards_Valid() const{
    return m_free_cards_isValid;
}

QString OAILogin_200_response::getStatus() const {
    return m_status;
}
void OAILogin_200_response::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILogin_200_response::is_status_Set() const{
    return m_status_isSet;
}

bool OAILogin_200_response::is_status_Valid() const{
    return m_status_isValid;
}

QString OAILogin_200_response::getUid() const {
    return m_uid;
}
void OAILogin_200_response::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAILogin_200_response::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAILogin_200_response::is_uid_Valid() const{
    return m_uid_isValid;
}

qint32 OAILogin_200_response::getUserId() const {
    return m_user_id;
}
void OAILogin_200_response::setUserId(const qint32 &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAILogin_200_response::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAILogin_200_response::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAILogin_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anet_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_free_cards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogin_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
