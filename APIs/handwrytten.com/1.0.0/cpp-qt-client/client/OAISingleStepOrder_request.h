/**
 * Handwrytten API
 * This is the Handwrytten API for sending cards written in the handwriting of your choice. Using this api, you can send cards to users.  You can also customize cards with logos, which can be saved and then used like any other card in the system. For a \"sandbox\" account, please contact contact@handwrytten.com To move from credit card per-transaction to monthly invoicing, also contact us. [https://www.handwrytten.com](https://www.handwrytten.com) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@handwrytten.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISingleStepOrder_request.h
 *
 * 
 */

#ifndef OAISingleStepOrder_request_H
#define OAISingleStepOrder_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISingleStepOrder_request : public OAIObject {
public:
    OAISingleStepOrder_request();
    OAISingleStepOrder_request(QString json);
    ~OAISingleStepOrder_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCardId() const;
    void setCardId(const qint32 &card_id);
    bool is_card_id_Set() const;
    bool is_card_id_Valid() const;

    qint32 getCreditCardId() const;
    void setCreditCardId(const qint32 &credit_card_id);
    bool is_credit_card_id_Set() const;
    bool is_credit_card_id_Valid() const;

    qint32 getDenominationId() const;
    void setDenominationId(const qint32 &denomination_id);
    bool is_denomination_id_Set() const;
    bool is_denomination_id_Valid() const;

    QString getFontLabel() const;
    void setFontLabel(const QString &font_label);
    bool is_font_label_Set() const;
    bool is_font_label_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getRecipientAddress1() const;
    void setRecipientAddress1(const QString &recipient_address1);
    bool is_recipient_address1_Set() const;
    bool is_recipient_address1_Valid() const;

    QString getRecipientAddress2() const;
    void setRecipientAddress2(const QString &recipient_address2);
    bool is_recipient_address2_Set() const;
    bool is_recipient_address2_Valid() const;

    QString getRecipientBusinessName() const;
    void setRecipientBusinessName(const QString &recipient_business_name);
    bool is_recipient_business_name_Set() const;
    bool is_recipient_business_name_Valid() const;

    QString getRecipientCity() const;
    void setRecipientCity(const QString &recipient_city);
    bool is_recipient_city_Set() const;
    bool is_recipient_city_Valid() const;

    QString getRecipientCountry() const;
    void setRecipientCountry(const QString &recipient_country);
    bool is_recipient_country_Set() const;
    bool is_recipient_country_Valid() const;

    qint32 getRecipientCountryId() const;
    void setRecipientCountryId(const qint32 &recipient_country_id);
    bool is_recipient_country_id_Set() const;
    bool is_recipient_country_id_Valid() const;

    QString getRecipientName() const;
    void setRecipientName(const QString &recipient_name);
    bool is_recipient_name_Set() const;
    bool is_recipient_name_Valid() const;

    QString getRecipientState() const;
    void setRecipientState(const QString &recipient_state);
    bool is_recipient_state_Set() const;
    bool is_recipient_state_Valid() const;

    QString getRecipientZip() const;
    void setRecipientZip(const QString &recipient_zip);
    bool is_recipient_zip_Set() const;
    bool is_recipient_zip_Valid() const;

    QString getSenderAddress1() const;
    void setSenderAddress1(const QString &sender_address1);
    bool is_sender_address1_Set() const;
    bool is_sender_address1_Valid() const;

    QString getSenderAddress2() const;
    void setSenderAddress2(const QString &sender_address2);
    bool is_sender_address2_Set() const;
    bool is_sender_address2_Valid() const;

    QString getSenderBusinessName() const;
    void setSenderBusinessName(const QString &sender_business_name);
    bool is_sender_business_name_Set() const;
    bool is_sender_business_name_Valid() const;

    QString getSenderCity() const;
    void setSenderCity(const QString &sender_city);
    bool is_sender_city_Set() const;
    bool is_sender_city_Valid() const;

    QString getSenderCountry() const;
    void setSenderCountry(const QString &sender_country);
    bool is_sender_country_Set() const;
    bool is_sender_country_Valid() const;

    qint32 getSenderCountryId() const;
    void setSenderCountryId(const qint32 &sender_country_id);
    bool is_sender_country_id_Set() const;
    bool is_sender_country_id_Valid() const;

    QString getSenderName() const;
    void setSenderName(const QString &sender_name);
    bool is_sender_name_Set() const;
    bool is_sender_name_Valid() const;

    QString getSenderState() const;
    void setSenderState(const QString &sender_state);
    bool is_sender_state_Set() const;
    bool is_sender_state_Valid() const;

    QString getSenderZip() const;
    void setSenderZip(const QString &sender_zip);
    bool is_sender_zip_Set() const;
    bool is_sender_zip_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_card_id;
    bool m_card_id_isSet;
    bool m_card_id_isValid;

    qint32 m_credit_card_id;
    bool m_credit_card_id_isSet;
    bool m_credit_card_id_isValid;

    qint32 m_denomination_id;
    bool m_denomination_id_isSet;
    bool m_denomination_id_isValid;

    QString m_font_label;
    bool m_font_label_isSet;
    bool m_font_label_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_recipient_address1;
    bool m_recipient_address1_isSet;
    bool m_recipient_address1_isValid;

    QString m_recipient_address2;
    bool m_recipient_address2_isSet;
    bool m_recipient_address2_isValid;

    QString m_recipient_business_name;
    bool m_recipient_business_name_isSet;
    bool m_recipient_business_name_isValid;

    QString m_recipient_city;
    bool m_recipient_city_isSet;
    bool m_recipient_city_isValid;

    QString m_recipient_country;
    bool m_recipient_country_isSet;
    bool m_recipient_country_isValid;

    qint32 m_recipient_country_id;
    bool m_recipient_country_id_isSet;
    bool m_recipient_country_id_isValid;

    QString m_recipient_name;
    bool m_recipient_name_isSet;
    bool m_recipient_name_isValid;

    QString m_recipient_state;
    bool m_recipient_state_isSet;
    bool m_recipient_state_isValid;

    QString m_recipient_zip;
    bool m_recipient_zip_isSet;
    bool m_recipient_zip_isValid;

    QString m_sender_address1;
    bool m_sender_address1_isSet;
    bool m_sender_address1_isValid;

    QString m_sender_address2;
    bool m_sender_address2_isSet;
    bool m_sender_address2_isValid;

    QString m_sender_business_name;
    bool m_sender_business_name_isSet;
    bool m_sender_business_name_isValid;

    QString m_sender_city;
    bool m_sender_city_isSet;
    bool m_sender_city_isValid;

    QString m_sender_country;
    bool m_sender_country_isSet;
    bool m_sender_country_isValid;

    qint32 m_sender_country_id;
    bool m_sender_country_id_isSet;
    bool m_sender_country_id_isValid;

    QString m_sender_name;
    bool m_sender_name_isSet;
    bool m_sender_name_isValid;

    QString m_sender_state;
    bool m_sender_state_isSet;
    bool m_sender_state_isValid;

    QString m_sender_zip;
    bool m_sender_zip_isSet;
    bool m_sender_zip_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISingleStepOrder_request)

#endif // OAISingleStepOrder_request_H
