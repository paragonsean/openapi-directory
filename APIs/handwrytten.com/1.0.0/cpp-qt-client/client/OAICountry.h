/**
 * Handwrytten API
 * This is the Handwrytten API for sending cards written in the handwriting of your choice. Using this api, you can send cards to users.  You can also customize cards with logos, which can be saved and then used like any other card in the system. For a \"sandbox\" account, please contact contact@handwrytten.com To move from credit card per-transaction to monthly invoicing, also contact us. [https://www.handwrytten.com](https://www.handwrytten.com) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@handwrytten.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICountry.h
 *
 * 
 */

#ifndef OAICountry_H
#define OAICountry_H

#include <QJsonObject>

#include "OAIState.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIState;

class OAICountry : public OAIObject {
public:
    OAICountry();
    OAICountry(QString json);
    ~OAICountry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAliases() const;
    void setAliases(const QString &aliases);
    bool is_aliases_Set() const;
    bool is_aliases_Valid() const;

    double getDeliveryCost() const;
    void setDeliveryCost(const double &delivery_cost);
    bool is_delivery_cost_Set() const;
    bool is_delivery_cost_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIState> getStates() const;
    void setStates(const QList<OAIState> &states);
    bool is_states_Set() const;
    bool is_states_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aliases;
    bool m_aliases_isSet;
    bool m_aliases_isValid;

    double m_delivery_cost;
    bool m_delivery_cost_isSet;
    bool m_delivery_cost_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIState> m_states;
    bool m_states_isSet;
    bool m_states_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICountry)

#endif // OAICountry_H
