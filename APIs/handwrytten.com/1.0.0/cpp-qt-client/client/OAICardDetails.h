/**
 * Handwrytten API
 * This is the Handwrytten API for sending cards written in the handwriting of your choice. Using this api, you can send cards to users.  You can also customize cards with logos, which can be saved and then used like any other card in the system. For a \"sandbox\" account, please contact contact@handwrytten.com To move from credit card per-transaction to monthly invoicing, also contact us. [https://www.handwrytten.com](https://www.handwrytten.com) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@handwrytten.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICardDetails.h
 *
 * 
 */

#ifndef OAICardDetails_H
#define OAICardDetails_H

#include <QJsonObject>

#include "OAIImageArray.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageArray;

class OAICardDetails : public OAIObject {
public:
    OAICardDetails();
    OAICardDetails(QString json);
    ~OAICardDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAvailableFree() const;
    void setAvailableFree(const qint32 &available_free);
    bool is_available_free_Set() const;
    bool is_available_free_Valid() const;

    qint32 getCategoryId() const;
    void setCategoryId(const qint32 &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getCover() const;
    void setCover(const QString &cover);
    bool is_cover_Set() const;
    bool is_cover_Valid() const;

    QString getCoverHeight() const;
    void setCoverHeight(const QString &cover_height);
    bool is_cover_height_Set() const;
    bool is_cover_height_Valid() const;

    QString getCoverWidth() const;
    void setCoverWidth(const QString &cover_width);
    bool is_cover_width_Set() const;
    bool is_cover_width_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIImageArray> getImages() const;
    void setImages(const QList<OAIImageArray> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOrientation() const;
    void setOrientation(const QString &orientation);
    bool is_orientation_Set() const;
    bool is_orientation_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_available_free;
    bool m_available_free_isSet;
    bool m_available_free_isValid;

    qint32 m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_cover;
    bool m_cover_isSet;
    bool m_cover_isValid;

    QString m_cover_height;
    bool m_cover_height_isSet;
    bool m_cover_height_isValid;

    QString m_cover_width;
    bool m_cover_width_isSet;
    bool m_cover_width_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIImageArray> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_orientation;
    bool m_orientation_isSet;
    bool m_orientation_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICardDetails)

#endif // OAICardDetails_H
