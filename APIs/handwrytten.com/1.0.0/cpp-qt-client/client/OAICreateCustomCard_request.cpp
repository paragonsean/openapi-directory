/**
 * Handwrytten API
 * This is the Handwrytten API for sending cards written in the handwriting of your choice. Using this api, you can send cards to users.  You can also customize cards with logos, which can be saved and then used like any other card in the system. For a \"sandbox\" account, please contact contact@handwrytten.com To move from credit card per-transaction to monthly invoicing, also contact us. [https://www.handwrytten.com](https://www.handwrytten.com) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@handwrytten.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateCustomCard_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateCustomCard_request::OAICreateCustomCard_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateCustomCard_request::OAICreateCustomCard_request() {
    this->initializeModel();
}

OAICreateCustomCard_request::~OAICreateCustomCard_request() {}

void OAICreateCustomCard_request::initializeModel() {

    m_card_id_isSet = false;
    m_card_id_isValid = false;

    m_cover_id_isSet = false;
    m_cover_id_isValid = false;

    m_cover_size_percent_isSet = false;
    m_cover_size_percent_isValid = false;

    m_footer_align_isSet = false;
    m_footer_align_isValid = false;

    m_footer_font_id_isSet = false;
    m_footer_font_id_isValid = false;

    m_footer_font_size_isSet = false;
    m_footer_font_size_isValid = false;

    m_footer_text_isSet = false;
    m_footer_text_isValid = false;

    m_header_align_isSet = false;
    m_header_align_isValid = false;

    m_header_auto_size_isSet = false;
    m_header_auto_size_isValid = false;

    m_header_font_id_isSet = false;
    m_header_font_id_isValid = false;

    m_header_font_size_isSet = false;
    m_header_font_size_isValid = false;

    m_header_text_isSet = false;
    m_header_text_isValid = false;

    m_logo_id_isSet = false;
    m_logo_id_isValid = false;

    m_logo_size_percent_isSet = false;
    m_logo_size_percent_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_uid_isSet = false;
    m_uid_isValid = false;
}

void OAICreateCustomCard_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateCustomCard_request::fromJsonObject(QJsonObject json) {

    m_card_id_isValid = ::OpenAPI::fromJsonValue(m_card_id, json[QString("card_id")]);
    m_card_id_isSet = !json[QString("card_id")].isNull() && m_card_id_isValid;

    m_cover_id_isValid = ::OpenAPI::fromJsonValue(m_cover_id, json[QString("cover_id")]);
    m_cover_id_isSet = !json[QString("cover_id")].isNull() && m_cover_id_isValid;

    m_cover_size_percent_isValid = ::OpenAPI::fromJsonValue(m_cover_size_percent, json[QString("cover_size_percent")]);
    m_cover_size_percent_isSet = !json[QString("cover_size_percent")].isNull() && m_cover_size_percent_isValid;

    m_footer_align_isValid = ::OpenAPI::fromJsonValue(m_footer_align, json[QString("footer_align")]);
    m_footer_align_isSet = !json[QString("footer_align")].isNull() && m_footer_align_isValid;

    m_footer_font_id_isValid = ::OpenAPI::fromJsonValue(m_footer_font_id, json[QString("footer_font_id")]);
    m_footer_font_id_isSet = !json[QString("footer_font_id")].isNull() && m_footer_font_id_isValid;

    m_footer_font_size_isValid = ::OpenAPI::fromJsonValue(m_footer_font_size, json[QString("footer_font_size")]);
    m_footer_font_size_isSet = !json[QString("footer_font_size")].isNull() && m_footer_font_size_isValid;

    m_footer_text_isValid = ::OpenAPI::fromJsonValue(m_footer_text, json[QString("footer_text")]);
    m_footer_text_isSet = !json[QString("footer_text")].isNull() && m_footer_text_isValid;

    m_header_align_isValid = ::OpenAPI::fromJsonValue(m_header_align, json[QString("header_align")]);
    m_header_align_isSet = !json[QString("header_align")].isNull() && m_header_align_isValid;

    m_header_auto_size_isValid = ::OpenAPI::fromJsonValue(m_header_auto_size, json[QString("header_auto_size")]);
    m_header_auto_size_isSet = !json[QString("header_auto_size")].isNull() && m_header_auto_size_isValid;

    m_header_font_id_isValid = ::OpenAPI::fromJsonValue(m_header_font_id, json[QString("header_font_id")]);
    m_header_font_id_isSet = !json[QString("header_font_id")].isNull() && m_header_font_id_isValid;

    m_header_font_size_isValid = ::OpenAPI::fromJsonValue(m_header_font_size, json[QString("header_font_size")]);
    m_header_font_size_isSet = !json[QString("header_font_size")].isNull() && m_header_font_size_isValid;

    m_header_text_isValid = ::OpenAPI::fromJsonValue(m_header_text, json[QString("header_text")]);
    m_header_text_isSet = !json[QString("header_text")].isNull() && m_header_text_isValid;

    m_logo_id_isValid = ::OpenAPI::fromJsonValue(m_logo_id, json[QString("logo_id")]);
    m_logo_id_isSet = !json[QString("logo_id")].isNull() && m_logo_id_isValid;

    m_logo_size_percent_isValid = ::OpenAPI::fromJsonValue(m_logo_size_percent, json[QString("logo_size_percent")]);
    m_logo_size_percent_isSet = !json[QString("logo_size_percent")].isNull() && m_logo_size_percent_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_uid_isValid = ::OpenAPI::fromJsonValue(m_uid, json[QString("uid")]);
    m_uid_isSet = !json[QString("uid")].isNull() && m_uid_isValid;
}

QString OAICreateCustomCard_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateCustomCard_request::asJsonObject() const {
    QJsonObject obj;
    if (m_card_id_isSet) {
        obj.insert(QString("card_id"), ::OpenAPI::toJsonValue(m_card_id));
    }
    if (m_cover_id_isSet) {
        obj.insert(QString("cover_id"), ::OpenAPI::toJsonValue(m_cover_id));
    }
    if (m_cover_size_percent_isSet) {
        obj.insert(QString("cover_size_percent"), ::OpenAPI::toJsonValue(m_cover_size_percent));
    }
    if (m_footer_align_isSet) {
        obj.insert(QString("footer_align"), ::OpenAPI::toJsonValue(m_footer_align));
    }
    if (m_footer_font_id_isSet) {
        obj.insert(QString("footer_font_id"), ::OpenAPI::toJsonValue(m_footer_font_id));
    }
    if (m_footer_font_size_isSet) {
        obj.insert(QString("footer_font_size"), ::OpenAPI::toJsonValue(m_footer_font_size));
    }
    if (m_footer_text_isSet) {
        obj.insert(QString("footer_text"), ::OpenAPI::toJsonValue(m_footer_text));
    }
    if (m_header_align_isSet) {
        obj.insert(QString("header_align"), ::OpenAPI::toJsonValue(m_header_align));
    }
    if (m_header_auto_size_isSet) {
        obj.insert(QString("header_auto_size"), ::OpenAPI::toJsonValue(m_header_auto_size));
    }
    if (m_header_font_id_isSet) {
        obj.insert(QString("header_font_id"), ::OpenAPI::toJsonValue(m_header_font_id));
    }
    if (m_header_font_size_isSet) {
        obj.insert(QString("header_font_size"), ::OpenAPI::toJsonValue(m_header_font_size));
    }
    if (m_header_text_isSet) {
        obj.insert(QString("header_text"), ::OpenAPI::toJsonValue(m_header_text));
    }
    if (m_logo_id_isSet) {
        obj.insert(QString("logo_id"), ::OpenAPI::toJsonValue(m_logo_id));
    }
    if (m_logo_size_percent_isSet) {
        obj.insert(QString("logo_size_percent"), ::OpenAPI::toJsonValue(m_logo_size_percent));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_uid_isSet) {
        obj.insert(QString("uid"), ::OpenAPI::toJsonValue(m_uid));
    }
    return obj;
}

qint32 OAICreateCustomCard_request::getCardId() const {
    return m_card_id;
}
void OAICreateCustomCard_request::setCardId(const qint32 &card_id) {
    m_card_id = card_id;
    m_card_id_isSet = true;
}

bool OAICreateCustomCard_request::is_card_id_Set() const{
    return m_card_id_isSet;
}

bool OAICreateCustomCard_request::is_card_id_Valid() const{
    return m_card_id_isValid;
}

qint32 OAICreateCustomCard_request::getCoverId() const {
    return m_cover_id;
}
void OAICreateCustomCard_request::setCoverId(const qint32 &cover_id) {
    m_cover_id = cover_id;
    m_cover_id_isSet = true;
}

bool OAICreateCustomCard_request::is_cover_id_Set() const{
    return m_cover_id_isSet;
}

bool OAICreateCustomCard_request::is_cover_id_Valid() const{
    return m_cover_id_isValid;
}

qint32 OAICreateCustomCard_request::getCoverSizePercent() const {
    return m_cover_size_percent;
}
void OAICreateCustomCard_request::setCoverSizePercent(const qint32 &cover_size_percent) {
    m_cover_size_percent = cover_size_percent;
    m_cover_size_percent_isSet = true;
}

bool OAICreateCustomCard_request::is_cover_size_percent_Set() const{
    return m_cover_size_percent_isSet;
}

bool OAICreateCustomCard_request::is_cover_size_percent_Valid() const{
    return m_cover_size_percent_isValid;
}

QString OAICreateCustomCard_request::getFooterAlign() const {
    return m_footer_align;
}
void OAICreateCustomCard_request::setFooterAlign(const QString &footer_align) {
    m_footer_align = footer_align;
    m_footer_align_isSet = true;
}

bool OAICreateCustomCard_request::is_footer_align_Set() const{
    return m_footer_align_isSet;
}

bool OAICreateCustomCard_request::is_footer_align_Valid() const{
    return m_footer_align_isValid;
}

qint32 OAICreateCustomCard_request::getFooterFontId() const {
    return m_footer_font_id;
}
void OAICreateCustomCard_request::setFooterFontId(const qint32 &footer_font_id) {
    m_footer_font_id = footer_font_id;
    m_footer_font_id_isSet = true;
}

bool OAICreateCustomCard_request::is_footer_font_id_Set() const{
    return m_footer_font_id_isSet;
}

bool OAICreateCustomCard_request::is_footer_font_id_Valid() const{
    return m_footer_font_id_isValid;
}

qint32 OAICreateCustomCard_request::getFooterFontSize() const {
    return m_footer_font_size;
}
void OAICreateCustomCard_request::setFooterFontSize(const qint32 &footer_font_size) {
    m_footer_font_size = footer_font_size;
    m_footer_font_size_isSet = true;
}

bool OAICreateCustomCard_request::is_footer_font_size_Set() const{
    return m_footer_font_size_isSet;
}

bool OAICreateCustomCard_request::is_footer_font_size_Valid() const{
    return m_footer_font_size_isValid;
}

QString OAICreateCustomCard_request::getFooterText() const {
    return m_footer_text;
}
void OAICreateCustomCard_request::setFooterText(const QString &footer_text) {
    m_footer_text = footer_text;
    m_footer_text_isSet = true;
}

bool OAICreateCustomCard_request::is_footer_text_Set() const{
    return m_footer_text_isSet;
}

bool OAICreateCustomCard_request::is_footer_text_Valid() const{
    return m_footer_text_isValid;
}

QString OAICreateCustomCard_request::getHeaderAlign() const {
    return m_header_align;
}
void OAICreateCustomCard_request::setHeaderAlign(const QString &header_align) {
    m_header_align = header_align;
    m_header_align_isSet = true;
}

bool OAICreateCustomCard_request::is_header_align_Set() const{
    return m_header_align_isSet;
}

bool OAICreateCustomCard_request::is_header_align_Valid() const{
    return m_header_align_isValid;
}

bool OAICreateCustomCard_request::isHeaderAutoSize() const {
    return m_header_auto_size;
}
void OAICreateCustomCard_request::setHeaderAutoSize(const bool &header_auto_size) {
    m_header_auto_size = header_auto_size;
    m_header_auto_size_isSet = true;
}

bool OAICreateCustomCard_request::is_header_auto_size_Set() const{
    return m_header_auto_size_isSet;
}

bool OAICreateCustomCard_request::is_header_auto_size_Valid() const{
    return m_header_auto_size_isValid;
}

qint32 OAICreateCustomCard_request::getHeaderFontId() const {
    return m_header_font_id;
}
void OAICreateCustomCard_request::setHeaderFontId(const qint32 &header_font_id) {
    m_header_font_id = header_font_id;
    m_header_font_id_isSet = true;
}

bool OAICreateCustomCard_request::is_header_font_id_Set() const{
    return m_header_font_id_isSet;
}

bool OAICreateCustomCard_request::is_header_font_id_Valid() const{
    return m_header_font_id_isValid;
}

qint32 OAICreateCustomCard_request::getHeaderFontSize() const {
    return m_header_font_size;
}
void OAICreateCustomCard_request::setHeaderFontSize(const qint32 &header_font_size) {
    m_header_font_size = header_font_size;
    m_header_font_size_isSet = true;
}

bool OAICreateCustomCard_request::is_header_font_size_Set() const{
    return m_header_font_size_isSet;
}

bool OAICreateCustomCard_request::is_header_font_size_Valid() const{
    return m_header_font_size_isValid;
}

QString OAICreateCustomCard_request::getHeaderText() const {
    return m_header_text;
}
void OAICreateCustomCard_request::setHeaderText(const QString &header_text) {
    m_header_text = header_text;
    m_header_text_isSet = true;
}

bool OAICreateCustomCard_request::is_header_text_Set() const{
    return m_header_text_isSet;
}

bool OAICreateCustomCard_request::is_header_text_Valid() const{
    return m_header_text_isValid;
}

qint32 OAICreateCustomCard_request::getLogoId() const {
    return m_logo_id;
}
void OAICreateCustomCard_request::setLogoId(const qint32 &logo_id) {
    m_logo_id = logo_id;
    m_logo_id_isSet = true;
}

bool OAICreateCustomCard_request::is_logo_id_Set() const{
    return m_logo_id_isSet;
}

bool OAICreateCustomCard_request::is_logo_id_Valid() const{
    return m_logo_id_isValid;
}

qint32 OAICreateCustomCard_request::getLogoSizePercent() const {
    return m_logo_size_percent;
}
void OAICreateCustomCard_request::setLogoSizePercent(const qint32 &logo_size_percent) {
    m_logo_size_percent = logo_size_percent;
    m_logo_size_percent_isSet = true;
}

bool OAICreateCustomCard_request::is_logo_size_percent_Set() const{
    return m_logo_size_percent_isSet;
}

bool OAICreateCustomCard_request::is_logo_size_percent_Valid() const{
    return m_logo_size_percent_isValid;
}

QString OAICreateCustomCard_request::getName() const {
    return m_name;
}
void OAICreateCustomCard_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateCustomCard_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateCustomCard_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateCustomCard_request::getType() const {
    return m_type;
}
void OAICreateCustomCard_request::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreateCustomCard_request::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreateCustomCard_request::is_type_Valid() const{
    return m_type_isValid;
}

QString OAICreateCustomCard_request::getUid() const {
    return m_uid;
}
void OAICreateCustomCard_request::setUid(const QString &uid) {
    m_uid = uid;
    m_uid_isSet = true;
}

bool OAICreateCustomCard_request::is_uid_Set() const{
    return m_uid_isSet;
}

bool OAICreateCustomCard_request::is_uid_Valid() const{
    return m_uid_isValid;
}

bool OAICreateCustomCard_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_card_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cover_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cover_size_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_align_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_font_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_font_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_align_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_auto_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_font_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_font_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_size_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateCustomCard_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
