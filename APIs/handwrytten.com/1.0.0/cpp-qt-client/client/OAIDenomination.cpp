/**
 * Handwrytten API
 * This is the Handwrytten API for sending cards written in the handwriting of your choice. Using this api, you can send cards to users.  You can also customize cards with logos, which can be saved and then used like any other card in the system. For a \"sandbox\" account, please contact contact@handwrytten.com To move from credit card per-transaction to monthly invoicing, also contact us. [https://www.handwrytten.com](https://www.handwrytten.com) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@handwrytten.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDenomination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDenomination::OAIDenomination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDenomination::OAIDenomination() {
    this->initializeModel();
}

OAIDenomination::~OAIDenomination() {}

void OAIDenomination::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_nominal_isSet = false;
    m_nominal_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;
}

void OAIDenomination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDenomination::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_nominal_isValid = ::OpenAPI::fromJsonValue(m_nominal, json[QString("nominal")]);
    m_nominal_isSet = !json[QString("nominal")].isNull() && m_nominal_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;
}

QString OAIDenomination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDenomination::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_nominal_isSet) {
        obj.insert(QString("nominal"), ::OpenAPI::toJsonValue(m_nominal));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    return obj;
}

qint32 OAIDenomination::getId() const {
    return m_id;
}
void OAIDenomination::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDenomination::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDenomination::is_id_Valid() const{
    return m_id_isValid;
}

double OAIDenomination::getNominal() const {
    return m_nominal;
}
void OAIDenomination::setNominal(const double &nominal) {
    m_nominal = nominal;
    m_nominal_isSet = true;
}

bool OAIDenomination::is_nominal_Set() const{
    return m_nominal_isSet;
}

bool OAIDenomination::is_nominal_Valid() const{
    return m_nominal_isValid;
}

double OAIDenomination::getPrice() const {
    return m_price;
}
void OAIDenomination::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIDenomination::is_price_Set() const{
    return m_price_isSet;
}

bool OAIDenomination::is_price_Valid() const{
    return m_price_isValid;
}

bool OAIDenomination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nominal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDenomination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
