/**
 * Handwrytten API
 * This is the Handwrytten API for sending cards written in the handwriting of your choice. Using this api, you can send cards to users.  You can also customize cards with logos, which can be saved and then used like any other card in the system. For a \"sandbox\" account, please contact contact@handwrytten.com To move from credit card per-transaction to monthly invoicing, also contact us. [https://www.handwrytten.com](https://www.handwrytten.com) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@handwrytten.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateCustomCardRequest model module.
 * @module model/CreateCustomCardRequest
 * @version 1.0.0
 */
class CreateCustomCardRequest {
    /**
     * Constructs a new <code>CreateCustomCardRequest</code>.
     * @alias module:model/CreateCustomCardRequest
     */
    constructor() { 
        
        CreateCustomCardRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateCustomCardRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateCustomCardRequest} obj Optional instance to populate.
     * @return {module:model/CreateCustomCardRequest} The populated <code>CreateCustomCardRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateCustomCardRequest();

            if (data.hasOwnProperty('card_id')) {
                obj['card_id'] = ApiClient.convertToType(data['card_id'], 'Number');
            }
            if (data.hasOwnProperty('cover_id')) {
                obj['cover_id'] = ApiClient.convertToType(data['cover_id'], 'Number');
            }
            if (data.hasOwnProperty('cover_size_percent')) {
                obj['cover_size_percent'] = ApiClient.convertToType(data['cover_size_percent'], 'Number');
            }
            if (data.hasOwnProperty('footer_align')) {
                obj['footer_align'] = ApiClient.convertToType(data['footer_align'], 'String');
            }
            if (data.hasOwnProperty('footer_font_id')) {
                obj['footer_font_id'] = ApiClient.convertToType(data['footer_font_id'], 'Number');
            }
            if (data.hasOwnProperty('footer_font_size')) {
                obj['footer_font_size'] = ApiClient.convertToType(data['footer_font_size'], 'Number');
            }
            if (data.hasOwnProperty('footer_text')) {
                obj['footer_text'] = ApiClient.convertToType(data['footer_text'], 'String');
            }
            if (data.hasOwnProperty('header_align')) {
                obj['header_align'] = ApiClient.convertToType(data['header_align'], 'String');
            }
            if (data.hasOwnProperty('header_auto_size')) {
                obj['header_auto_size'] = ApiClient.convertToType(data['header_auto_size'], 'Boolean');
            }
            if (data.hasOwnProperty('header_font_id')) {
                obj['header_font_id'] = ApiClient.convertToType(data['header_font_id'], 'Number');
            }
            if (data.hasOwnProperty('header_font_size')) {
                obj['header_font_size'] = ApiClient.convertToType(data['header_font_size'], 'Number');
            }
            if (data.hasOwnProperty('header_text')) {
                obj['header_text'] = ApiClient.convertToType(data['header_text'], 'String');
            }
            if (data.hasOwnProperty('logo_id')) {
                obj['logo_id'] = ApiClient.convertToType(data['logo_id'], 'Number');
            }
            if (data.hasOwnProperty('logo_size_percent')) {
                obj['logo_size_percent'] = ApiClient.convertToType(data['logo_size_percent'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateCustomCardRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateCustomCardRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['footer_align'] && !(typeof data['footer_align'] === 'string' || data['footer_align'] instanceof String)) {
            throw new Error("Expected the field `footer_align` to be a primitive type in the JSON string but got " + data['footer_align']);
        }
        // ensure the json data is a string
        if (data['footer_text'] && !(typeof data['footer_text'] === 'string' || data['footer_text'] instanceof String)) {
            throw new Error("Expected the field `footer_text` to be a primitive type in the JSON string but got " + data['footer_text']);
        }
        // ensure the json data is a string
        if (data['header_align'] && !(typeof data['header_align'] === 'string' || data['header_align'] instanceof String)) {
            throw new Error("Expected the field `header_align` to be a primitive type in the JSON string but got " + data['header_align']);
        }
        // ensure the json data is a string
        if (data['header_text'] && !(typeof data['header_text'] === 'string' || data['header_text'] instanceof String)) {
            throw new Error("Expected the field `header_text` to be a primitive type in the JSON string but got " + data['header_text']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }

        return true;
    }


}



/**
 * the card id of the card template you're starting with.  You can find this by logging into Handwrytten, clicking \"customize\" next to any customizable card, and pulling the card ID from the end of the URL
 * @member {Number} card_id
 */
CreateCustomCardRequest.prototype['card_id'] = undefined;

/**
 * the id of the image you want to use for the \"cover\".  The cover is the large image on the front of the flat card.
 * @member {Number} cover_id
 */
CreateCustomCardRequest.prototype['cover_id'] = undefined;

/**
 * the size of the image to use as the cover.
 * @member {Number} cover_size_percent
 */
CreateCustomCardRequest.prototype['cover_size_percent'] = undefined;

/**
 * set to \"left\", \"center\", or \"right\" to align the footer appropriately
 * @member {String} footer_align
 */
CreateCustomCardRequest.prototype['footer_align'] = undefined;

/**
 * font ID of the text in the footer, found by using ListFontForCustomizer
 * @member {Number} footer_font_id
 */
CreateCustomCardRequest.prototype['footer_font_id'] = undefined;

/**
 * Font size of the text in the footer
 * @member {Number} footer_font_size
 */
CreateCustomCardRequest.prototype['footer_font_size'] = undefined;

/**
 * optional text for the footer of the customizable card
 * @member {String} footer_text
 */
CreateCustomCardRequest.prototype['footer_text'] = undefined;

/**
 * set to \"left\", \"center\", or \"right\" to align the header appropriately
 * @member {String} header_align
 */
CreateCustomCardRequest.prototype['header_align'] = undefined;

/**
 * if set to true, the header will be maximized to fill the header area
 * @member {Boolean} header_auto_size
 */
CreateCustomCardRequest.prototype['header_auto_size'] = undefined;

/**
 * font ID of the text in the header, found by using ListFontForCustomizer
 * @member {Number} header_font_id
 */
CreateCustomCardRequest.prototype['header_font_id'] = undefined;

/**
 * font size of the text in the header of the card
 * @member {Number} header_font_size
 */
CreateCustomCardRequest.prototype['header_font_size'] = undefined;

/**
 * text in the header, if type is set to \"text\"
 * @member {String} header_text
 */
CreateCustomCardRequest.prototype['header_text'] = undefined;

/**
 * Optional.  If setting \"type\" to \"logo\", set the id of the logo here.
 * @member {Number} logo_id
 */
CreateCustomCardRequest.prototype['logo_id'] = undefined;

/**
 * set to the desired scaling of the logo on the header
 * @member {Number} logo_size_percent
 */
CreateCustomCardRequest.prototype['logo_size_percent'] = undefined;

/**
 * the name of the new card
 * @member {String} name
 */
CreateCustomCardRequest.prototype['name'] = undefined;

/**
 * Defines the top of the back of the card. Set to either \"logo\" or \"text\".
 * @member {String} type
 */
CreateCustomCardRequest.prototype['type'] = undefined;

/**
 * authorized UID of the session.
 * @member {String} uid
 */
CreateCustomCardRequest.prototype['uid'] = undefined;






export default CreateCustomCardRequest;

