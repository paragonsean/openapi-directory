/**
 * Handwrytten API
 * This is the Handwrytten API for sending cards written in the handwriting of your choice. Using this api, you can send cards to users.  You can also customize cards with logos, which can be saved and then used like any other card in the system. For a \"sandbox\" account, please contact contact@handwrytten.com To move from credit card per-transaction to monthly invoicing, also contact us. [https://www.handwrytten.com](https://www.handwrytten.com) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@handwrytten.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HandwryttenApi);
  }
}(this, function(expect, HandwryttenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HandwryttenApi.Card();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Card', function() {
    it('should create an instance of Card', function() {
      // uncomment below and update the code to test Card
      //var instance = new HandwryttenApi.Card();
      //expect(instance).to.be.a(HandwryttenApi.Card);
    });

    it('should have the property availableFree (base name: "available_free")', function() {
      // uncomment below and update the code to test the property availableFree
      //var instance = new HandwryttenApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property categoryId (base name: "category_id")', function() {
      // uncomment below and update the code to test the property categoryId
      //var instance = new HandwryttenApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property cover (base name: "cover")', function() {
      // uncomment below and update the code to test the property cover
      //var instance = new HandwryttenApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property coverHeight (base name: "cover_height")', function() {
      // uncomment below and update the code to test the property coverHeight
      //var instance = new HandwryttenApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property coverWidth (base name: "cover_width")', function() {
      // uncomment below and update the code to test the property coverWidth
      //var instance = new HandwryttenApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new HandwryttenApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new HandwryttenApi.Card();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new HandwryttenApi.Card();
      //expect(instance).to.be();
    });

  });

}));
