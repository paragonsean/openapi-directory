/**
 * IP geolocation API
 * Abstract IP geolocation API allows developers to retrieve the region, country and city behind any IP worldwide. The API covers the geolocation of IPv4 and IPv6 addresses in 180+ countries worldwide. Extra information can be retrieved like the currency, flag or language associated to an IP.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInline_response_200_security.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInline_response_200_security::OAIInline_response_200_security(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInline_response_200_security::OAIInline_response_200_security() {
    this->initializeModel();
}

OAIInline_response_200_security::~OAIInline_response_200_security() {}

void OAIInline_response_200_security::initializeModel() {

    m_is_vpn_isSet = false;
    m_is_vpn_isValid = false;
}

void OAIInline_response_200_security::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInline_response_200_security::fromJsonObject(QJsonObject json) {

    m_is_vpn_isValid = ::OpenAPI::fromJsonValue(m_is_vpn, json[QString("is_vpn")]);
    m_is_vpn_isSet = !json[QString("is_vpn")].isNull() && m_is_vpn_isValid;
}

QString OAIInline_response_200_security::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInline_response_200_security::asJsonObject() const {
    QJsonObject obj;
    if (m_is_vpn_isSet) {
        obj.insert(QString("is_vpn"), ::OpenAPI::toJsonValue(m_is_vpn));
    }
    return obj;
}

bool OAIInline_response_200_security::isIsVpn() const {
    return m_is_vpn;
}
void OAIInline_response_200_security::setIsVpn(const bool &is_vpn) {
    m_is_vpn = is_vpn;
    m_is_vpn_isSet = true;
}

bool OAIInline_response_200_security::is_is_vpn_Set() const{
    return m_is_vpn_isSet;
}

bool OAIInline_response_200_security::is_is_vpn_Valid() const{
    return m_is_vpn_isValid;
}

bool OAIInline_response_200_security::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_vpn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInline_response_200_security::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
