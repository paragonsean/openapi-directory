/**
 * IP geolocation API
 * Abstract IP geolocation API allows developers to retrieve the region, country and city behind any IP worldwide. The API covers the geolocation of IPv4 and IPv6 addresses in 180+ countries worldwide. Extra information can be retrieved like the currency, flag or language associated to an IP.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInline_response_200_currency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInline_response_200_currency::OAIInline_response_200_currency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInline_response_200_currency::OAIInline_response_200_currency() {
    this->initializeModel();
}

OAIInline_response_200_currency::~OAIInline_response_200_currency() {}

void OAIInline_response_200_currency::initializeModel() {

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_currency_name_isSet = false;
    m_currency_name_isValid = false;
}

void OAIInline_response_200_currency::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInline_response_200_currency::fromJsonObject(QJsonObject json) {

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currency_code")]);
    m_currency_code_isSet = !json[QString("currency_code")].isNull() && m_currency_code_isValid;

    m_currency_name_isValid = ::OpenAPI::fromJsonValue(m_currency_name, json[QString("currency_name")]);
    m_currency_name_isSet = !json[QString("currency_name")].isNull() && m_currency_name_isValid;
}

QString OAIInline_response_200_currency::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInline_response_200_currency::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_code_isSet) {
        obj.insert(QString("currency_code"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_currency_name_isSet) {
        obj.insert(QString("currency_name"), ::OpenAPI::toJsonValue(m_currency_name));
    }
    return obj;
}

QString OAIInline_response_200_currency::getCurrencyCode() const {
    return m_currency_code;
}
void OAIInline_response_200_currency::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIInline_response_200_currency::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIInline_response_200_currency::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIInline_response_200_currency::getCurrencyName() const {
    return m_currency_name;
}
void OAIInline_response_200_currency::setCurrencyName(const QString &currency_name) {
    m_currency_name = currency_name;
    m_currency_name_isSet = true;
}

bool OAIInline_response_200_currency::is_currency_name_Set() const{
    return m_currency_name_isSet;
}

bool OAIInline_response_200_currency::is_currency_name_Valid() const{
    return m_currency_name_isValid;
}

bool OAIInline_response_200_currency::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInline_response_200_currency::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
