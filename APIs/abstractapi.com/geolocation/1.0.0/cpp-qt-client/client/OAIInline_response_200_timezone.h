/**
 * IP geolocation API
 * Abstract IP geolocation API allows developers to retrieve the region, country and city behind any IP worldwide. The API covers the geolocation of IPv4 and IPv6 addresses in 180+ countries worldwide. Extra information can be retrieved like the currency, flag or language associated to an IP.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_response_200_timezone.h
 *
 * 
 */

#ifndef OAIInline_response_200_timezone_H
#define OAIInline_response_200_timezone_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInline_response_200_timezone : public OAIObject {
public:
    OAIInline_response_200_timezone();
    OAIInline_response_200_timezone(QString json);
    ~OAIInline_response_200_timezone() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbbreviation() const;
    void setAbbreviation(const QString &abbreviation);
    bool is_abbreviation_Set() const;
    bool is_abbreviation_Valid() const;

    QString getCurrentTime() const;
    void setCurrentTime(const QString &current_time);
    bool is_current_time_Set() const;
    bool is_current_time_Valid() const;

    qint32 getGmtOffset() const;
    void setGmtOffset(const qint32 &gmt_offset);
    bool is_gmt_offset_Set() const;
    bool is_gmt_offset_Valid() const;

    bool isIsDst() const;
    void setIsDst(const bool &is_dst);
    bool is_is_dst_Set() const;
    bool is_is_dst_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_abbreviation;
    bool m_abbreviation_isSet;
    bool m_abbreviation_isValid;

    QString m_current_time;
    bool m_current_time_isSet;
    bool m_current_time_isValid;

    qint32 m_gmt_offset;
    bool m_gmt_offset_isSet;
    bool m_gmt_offset_isValid;

    bool m_is_dst;
    bool m_is_dst_isSet;
    bool m_is_dst_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInline_response_200_timezone)

#endif // OAIInline_response_200_timezone_H
