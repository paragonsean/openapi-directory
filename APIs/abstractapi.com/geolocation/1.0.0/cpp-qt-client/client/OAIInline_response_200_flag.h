/**
 * IP geolocation API
 * Abstract IP geolocation API allows developers to retrieve the region, country and city behind any IP worldwide. The API covers the geolocation of IPv4 and IPv6 addresses in 180+ countries worldwide. Extra information can be retrieved like the currency, flag or language associated to an IP.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_response_200_flag.h
 *
 * 
 */

#ifndef OAIInline_response_200_flag_H
#define OAIInline_response_200_flag_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInline_response_200_flag : public OAIObject {
public:
    OAIInline_response_200_flag();
    OAIInline_response_200_flag(QString json);
    ~OAIInline_response_200_flag() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEmoji() const;
    void setEmoji(const QString &emoji);
    bool is_emoji_Set() const;
    bool is_emoji_Valid() const;

    QString getPng() const;
    void setPng(const QString &png);
    bool is_png_Set() const;
    bool is_png_Valid() const;

    QString getSvg() const;
    void setSvg(const QString &svg);
    bool is_svg_Set() const;
    bool is_svg_Valid() const;

    QString getUnicode() const;
    void setUnicode(const QString &unicode);
    bool is_unicode_Set() const;
    bool is_unicode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_emoji;
    bool m_emoji_isSet;
    bool m_emoji_isValid;

    QString m_png;
    bool m_png_isSet;
    bool m_png_isValid;

    QString m_svg;
    bool m_svg_isSet;
    bool m_svg_isValid;

    QString m_unicode;
    bool m_unicode_isSet;
    bool m_unicode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInline_response_200_flag)

#endif // OAIInline_response_200_flag_H
