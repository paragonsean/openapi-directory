/**
 * IP geolocation API
 * Abstract IP geolocation API allows developers to retrieve the region, country and city behind any IP worldwide. The API covers the geolocation of IPv4 and IPv6 addresses in 180+ countries worldwide. Extra information can be retrieved like the currency, flag or language associated to an IP.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_response_200.h
 *
 * 
 */

#ifndef OAIInline_response_200_H
#define OAIInline_response_200_H

#include <QJsonObject>

#include "OAIInline_response_200_connection.h"
#include "OAIInline_response_200_currency.h"
#include "OAIInline_response_200_flag.h"
#include "OAIInline_response_200_security.h"
#include "OAIInline_response_200_timezone.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInline_response_200_connection;
class OAIInline_response_200_currency;
class OAIInline_response_200_flag;
class OAIInline_response_200_security;
class OAIInline_response_200_timezone;

class OAIInline_response_200 : public OAIObject {
public:
    OAIInline_response_200();
    OAIInline_response_200(QString json);
    ~OAIInline_response_200() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    qint32 getCityGeonameId() const;
    void setCityGeonameId(const qint32 &city_geoname_id);
    bool is_city_geoname_id_Set() const;
    bool is_city_geoname_id_Valid() const;

    OAIInline_response_200_connection getConnection() const;
    void setConnection(const OAIInline_response_200_connection &connection);
    bool is_connection_Set() const;
    bool is_connection_Valid() const;

    QString getContinent() const;
    void setContinent(const QString &continent);
    bool is_continent_Set() const;
    bool is_continent_Valid() const;

    QString getContinentCode() const;
    void setContinentCode(const QString &continent_code);
    bool is_continent_code_Set() const;
    bool is_continent_code_Valid() const;

    qint32 getContinentGeonameId() const;
    void setContinentGeonameId(const qint32 &continent_geoname_id);
    bool is_continent_geoname_id_Set() const;
    bool is_continent_geoname_id_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    qint32 getCountryGeonameId() const;
    void setCountryGeonameId(const qint32 &country_geoname_id);
    bool is_country_geoname_id_Set() const;
    bool is_country_geoname_id_Valid() const;

    bool isCountryIsEu() const;
    void setCountryIsEu(const bool &country_is_eu);
    bool is_country_is_eu_Set() const;
    bool is_country_is_eu_Valid() const;

    OAIInline_response_200_currency getCurrency() const;
    void setCurrency(const OAIInline_response_200_currency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAIInline_response_200_flag getFlag() const;
    void setFlag(const OAIInline_response_200_flag &flag);
    bool is_flag_Set() const;
    bool is_flag_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    qint32 getRegionGeonameId() const;
    void setRegionGeonameId(const qint32 &region_geoname_id);
    bool is_region_geoname_id_Set() const;
    bool is_region_geoname_id_Valid() const;

    QString getRegionIsoCode() const;
    void setRegionIsoCode(const QString &region_iso_code);
    bool is_region_iso_code_Set() const;
    bool is_region_iso_code_Valid() const;

    OAIInline_response_200_security getSecurity() const;
    void setSecurity(const OAIInline_response_200_security &security);
    bool is_security_Set() const;
    bool is_security_Valid() const;

    OAIInline_response_200_timezone getTimezone() const;
    void setTimezone(const OAIInline_response_200_timezone &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    qint32 m_city_geoname_id;
    bool m_city_geoname_id_isSet;
    bool m_city_geoname_id_isValid;

    OAIInline_response_200_connection m_connection;
    bool m_connection_isSet;
    bool m_connection_isValid;

    QString m_continent;
    bool m_continent_isSet;
    bool m_continent_isValid;

    QString m_continent_code;
    bool m_continent_code_isSet;
    bool m_continent_code_isValid;

    qint32 m_continent_geoname_id;
    bool m_continent_geoname_id_isSet;
    bool m_continent_geoname_id_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    qint32 m_country_geoname_id;
    bool m_country_geoname_id_isSet;
    bool m_country_geoname_id_isValid;

    bool m_country_is_eu;
    bool m_country_is_eu_isSet;
    bool m_country_is_eu_isValid;

    OAIInline_response_200_currency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAIInline_response_200_flag m_flag;
    bool m_flag_isSet;
    bool m_flag_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    qint32 m_region_geoname_id;
    bool m_region_geoname_id_isSet;
    bool m_region_geoname_id_isValid;

    QString m_region_iso_code;
    bool m_region_iso_code_isSet;
    bool m_region_iso_code_isValid;

    OAIInline_response_200_security m_security;
    bool m_security_isSet;
    bool m_security_isValid;

    OAIInline_response_200_timezone m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInline_response_200)

#endif // OAIInline_response_200_H
