# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inline_response200_connection import InlineResponse200Connection
from openapi_server.models.inline_response200_currency import InlineResponse200Currency
from openapi_server.models.inline_response200_flag import InlineResponse200Flag
from openapi_server.models.inline_response200_security import InlineResponse200Security
from openapi_server.models.inline_response200_timezone import InlineResponse200Timezone
from openapi_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, city_geoname_id: int=None, connection: InlineResponse200Connection=None, continent: str=None, continent_code: str=None, continent_geoname_id: int=None, country: str=None, country_code: str=None, country_geoname_id: int=None, country_is_eu: bool=None, currency: InlineResponse200Currency=None, flag: InlineResponse200Flag=None, ip_address: str=None, latitude: float=None, longitude: float=None, postal_code: str=None, region: str=None, region_geoname_id: int=None, region_iso_code: str=None, security: InlineResponse200Security=None, timezone: InlineResponse200Timezone=None):
        """InlineResponse200 - a model defined in OpenAPI

        :param city: The city of this InlineResponse200.
        :param city_geoname_id: The city_geoname_id of this InlineResponse200.
        :param connection: The connection of this InlineResponse200.
        :param continent: The continent of this InlineResponse200.
        :param continent_code: The continent_code of this InlineResponse200.
        :param continent_geoname_id: The continent_geoname_id of this InlineResponse200.
        :param country: The country of this InlineResponse200.
        :param country_code: The country_code of this InlineResponse200.
        :param country_geoname_id: The country_geoname_id of this InlineResponse200.
        :param country_is_eu: The country_is_eu of this InlineResponse200.
        :param currency: The currency of this InlineResponse200.
        :param flag: The flag of this InlineResponse200.
        :param ip_address: The ip_address of this InlineResponse200.
        :param latitude: The latitude of this InlineResponse200.
        :param longitude: The longitude of this InlineResponse200.
        :param postal_code: The postal_code of this InlineResponse200.
        :param region: The region of this InlineResponse200.
        :param region_geoname_id: The region_geoname_id of this InlineResponse200.
        :param region_iso_code: The region_iso_code of this InlineResponse200.
        :param security: The security of this InlineResponse200.
        :param timezone: The timezone of this InlineResponse200.
        """
        self.openapi_types = {
            'city': str,
            'city_geoname_id': int,
            'connection': InlineResponse200Connection,
            'continent': str,
            'continent_code': str,
            'continent_geoname_id': int,
            'country': str,
            'country_code': str,
            'country_geoname_id': int,
            'country_is_eu': bool,
            'currency': InlineResponse200Currency,
            'flag': InlineResponse200Flag,
            'ip_address': str,
            'latitude': float,
            'longitude': float,
            'postal_code': str,
            'region': str,
            'region_geoname_id': int,
            'region_iso_code': str,
            'security': InlineResponse200Security,
            'timezone': InlineResponse200Timezone
        }

        self.attribute_map = {
            'city': 'city',
            'city_geoname_id': 'city_geoname_id',
            'connection': 'connection',
            'continent': 'continent',
            'continent_code': 'continent_code',
            'continent_geoname_id': 'continent_geoname_id',
            'country': 'country',
            'country_code': 'country_code',
            'country_geoname_id': 'country_geoname_id',
            'country_is_eu': 'country_is_eu',
            'currency': 'currency',
            'flag': 'flag',
            'ip_address': 'ip_address',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'postal_code': 'postal_code',
            'region': 'region',
            'region_geoname_id': 'region_geoname_id',
            'region_iso_code': 'region_iso_code',
            'security': 'security',
            'timezone': 'timezone'
        }

        self._city = city
        self._city_geoname_id = city_geoname_id
        self._connection = connection
        self._continent = continent
        self._continent_code = continent_code
        self._continent_geoname_id = continent_geoname_id
        self._country = country
        self._country_code = country_code
        self._country_geoname_id = country_geoname_id
        self._country_is_eu = country_is_eu
        self._currency = currency
        self._flag = flag
        self._ip_address = ip_address
        self._latitude = latitude
        self._longitude = longitude
        self._postal_code = postal_code
        self._region = region
        self._region_geoname_id = region_geoname_id
        self._region_iso_code = region_iso_code
        self._security = security
        self._timezone = timezone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inline_response_200 of this InlineResponse200.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this InlineResponse200.


        :return: The city of this InlineResponse200.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this InlineResponse200.


        :param city: The city of this InlineResponse200.
        :type city: str
        """

        self._city = city

    @property
    def city_geoname_id(self):
        """Gets the city_geoname_id of this InlineResponse200.


        :return: The city_geoname_id of this InlineResponse200.
        :rtype: int
        """
        return self._city_geoname_id

    @city_geoname_id.setter
    def city_geoname_id(self, city_geoname_id):
        """Sets the city_geoname_id of this InlineResponse200.


        :param city_geoname_id: The city_geoname_id of this InlineResponse200.
        :type city_geoname_id: int
        """

        self._city_geoname_id = city_geoname_id

    @property
    def connection(self):
        """Gets the connection of this InlineResponse200.


        :return: The connection of this InlineResponse200.
        :rtype: InlineResponse200Connection
        """
        return self._connection

    @connection.setter
    def connection(self, connection):
        """Sets the connection of this InlineResponse200.


        :param connection: The connection of this InlineResponse200.
        :type connection: InlineResponse200Connection
        """

        self._connection = connection

    @property
    def continent(self):
        """Gets the continent of this InlineResponse200.


        :return: The continent of this InlineResponse200.
        :rtype: str
        """
        return self._continent

    @continent.setter
    def continent(self, continent):
        """Sets the continent of this InlineResponse200.


        :param continent: The continent of this InlineResponse200.
        :type continent: str
        """

        self._continent = continent

    @property
    def continent_code(self):
        """Gets the continent_code of this InlineResponse200.


        :return: The continent_code of this InlineResponse200.
        :rtype: str
        """
        return self._continent_code

    @continent_code.setter
    def continent_code(self, continent_code):
        """Sets the continent_code of this InlineResponse200.


        :param continent_code: The continent_code of this InlineResponse200.
        :type continent_code: str
        """

        self._continent_code = continent_code

    @property
    def continent_geoname_id(self):
        """Gets the continent_geoname_id of this InlineResponse200.


        :return: The continent_geoname_id of this InlineResponse200.
        :rtype: int
        """
        return self._continent_geoname_id

    @continent_geoname_id.setter
    def continent_geoname_id(self, continent_geoname_id):
        """Sets the continent_geoname_id of this InlineResponse200.


        :param continent_geoname_id: The continent_geoname_id of this InlineResponse200.
        :type continent_geoname_id: int
        """

        self._continent_geoname_id = continent_geoname_id

    @property
    def country(self):
        """Gets the country of this InlineResponse200.


        :return: The country of this InlineResponse200.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this InlineResponse200.


        :param country: The country of this InlineResponse200.
        :type country: str
        """

        self._country = country

    @property
    def country_code(self):
        """Gets the country_code of this InlineResponse200.


        :return: The country_code of this InlineResponse200.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this InlineResponse200.


        :param country_code: The country_code of this InlineResponse200.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def country_geoname_id(self):
        """Gets the country_geoname_id of this InlineResponse200.


        :return: The country_geoname_id of this InlineResponse200.
        :rtype: int
        """
        return self._country_geoname_id

    @country_geoname_id.setter
    def country_geoname_id(self, country_geoname_id):
        """Sets the country_geoname_id of this InlineResponse200.


        :param country_geoname_id: The country_geoname_id of this InlineResponse200.
        :type country_geoname_id: int
        """

        self._country_geoname_id = country_geoname_id

    @property
    def country_is_eu(self):
        """Gets the country_is_eu of this InlineResponse200.


        :return: The country_is_eu of this InlineResponse200.
        :rtype: bool
        """
        return self._country_is_eu

    @country_is_eu.setter
    def country_is_eu(self, country_is_eu):
        """Sets the country_is_eu of this InlineResponse200.


        :param country_is_eu: The country_is_eu of this InlineResponse200.
        :type country_is_eu: bool
        """

        self._country_is_eu = country_is_eu

    @property
    def currency(self):
        """Gets the currency of this InlineResponse200.


        :return: The currency of this InlineResponse200.
        :rtype: InlineResponse200Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this InlineResponse200.


        :param currency: The currency of this InlineResponse200.
        :type currency: InlineResponse200Currency
        """

        self._currency = currency

    @property
    def flag(self):
        """Gets the flag of this InlineResponse200.


        :return: The flag of this InlineResponse200.
        :rtype: InlineResponse200Flag
        """
        return self._flag

    @flag.setter
    def flag(self, flag):
        """Sets the flag of this InlineResponse200.


        :param flag: The flag of this InlineResponse200.
        :type flag: InlineResponse200Flag
        """

        self._flag = flag

    @property
    def ip_address(self):
        """Gets the ip_address of this InlineResponse200.


        :return: The ip_address of this InlineResponse200.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this InlineResponse200.


        :param ip_address: The ip_address of this InlineResponse200.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def latitude(self):
        """Gets the latitude of this InlineResponse200.


        :return: The latitude of this InlineResponse200.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this InlineResponse200.


        :param latitude: The latitude of this InlineResponse200.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this InlineResponse200.


        :return: The longitude of this InlineResponse200.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this InlineResponse200.


        :param longitude: The longitude of this InlineResponse200.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def postal_code(self):
        """Gets the postal_code of this InlineResponse200.


        :return: The postal_code of this InlineResponse200.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this InlineResponse200.


        :param postal_code: The postal_code of this InlineResponse200.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def region(self):
        """Gets the region of this InlineResponse200.


        :return: The region of this InlineResponse200.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this InlineResponse200.


        :param region: The region of this InlineResponse200.
        :type region: str
        """

        self._region = region

    @property
    def region_geoname_id(self):
        """Gets the region_geoname_id of this InlineResponse200.


        :return: The region_geoname_id of this InlineResponse200.
        :rtype: int
        """
        return self._region_geoname_id

    @region_geoname_id.setter
    def region_geoname_id(self, region_geoname_id):
        """Sets the region_geoname_id of this InlineResponse200.


        :param region_geoname_id: The region_geoname_id of this InlineResponse200.
        :type region_geoname_id: int
        """

        self._region_geoname_id = region_geoname_id

    @property
    def region_iso_code(self):
        """Gets the region_iso_code of this InlineResponse200.


        :return: The region_iso_code of this InlineResponse200.
        :rtype: str
        """
        return self._region_iso_code

    @region_iso_code.setter
    def region_iso_code(self, region_iso_code):
        """Sets the region_iso_code of this InlineResponse200.


        :param region_iso_code: The region_iso_code of this InlineResponse200.
        :type region_iso_code: str
        """

        self._region_iso_code = region_iso_code

    @property
    def security(self):
        """Gets the security of this InlineResponse200.


        :return: The security of this InlineResponse200.
        :rtype: InlineResponse200Security
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this InlineResponse200.


        :param security: The security of this InlineResponse200.
        :type security: InlineResponse200Security
        """

        self._security = security

    @property
    def timezone(self):
        """Gets the timezone of this InlineResponse200.


        :return: The timezone of this InlineResponse200.
        :rtype: InlineResponse200Timezone
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this InlineResponse200.


        :param timezone: The timezone of this InlineResponse200.
        :type timezone: InlineResponse200Timezone
        """

        self._timezone = timezone
