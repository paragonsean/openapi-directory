# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InlineResponse200Connection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, autonomous_system_number: int=None, autonomous_system_organization: str=None, connection_type: str=None, isp_name: str=None, organization_name: str=None):
        """InlineResponse200Connection - a model defined in OpenAPI

        :param autonomous_system_number: The autonomous_system_number of this InlineResponse200Connection.
        :param autonomous_system_organization: The autonomous_system_organization of this InlineResponse200Connection.
        :param connection_type: The connection_type of this InlineResponse200Connection.
        :param isp_name: The isp_name of this InlineResponse200Connection.
        :param organization_name: The organization_name of this InlineResponse200Connection.
        """
        self.openapi_types = {
            'autonomous_system_number': int,
            'autonomous_system_organization': str,
            'connection_type': str,
            'isp_name': str,
            'organization_name': str
        }

        self.attribute_map = {
            'autonomous_system_number': 'autonomous_system_number',
            'autonomous_system_organization': 'autonomous_system_organization',
            'connection_type': 'connection_type',
            'isp_name': 'isp_name',
            'organization_name': 'organization_name'
        }

        self._autonomous_system_number = autonomous_system_number
        self._autonomous_system_organization = autonomous_system_organization
        self._connection_type = connection_type
        self._isp_name = isp_name
        self._organization_name = organization_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InlineResponse200Connection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inline_response_200_connection of this InlineResponse200Connection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def autonomous_system_number(self):
        """Gets the autonomous_system_number of this InlineResponse200Connection.


        :return: The autonomous_system_number of this InlineResponse200Connection.
        :rtype: int
        """
        return self._autonomous_system_number

    @autonomous_system_number.setter
    def autonomous_system_number(self, autonomous_system_number):
        """Sets the autonomous_system_number of this InlineResponse200Connection.


        :param autonomous_system_number: The autonomous_system_number of this InlineResponse200Connection.
        :type autonomous_system_number: int
        """

        self._autonomous_system_number = autonomous_system_number

    @property
    def autonomous_system_organization(self):
        """Gets the autonomous_system_organization of this InlineResponse200Connection.


        :return: The autonomous_system_organization of this InlineResponse200Connection.
        :rtype: str
        """
        return self._autonomous_system_organization

    @autonomous_system_organization.setter
    def autonomous_system_organization(self, autonomous_system_organization):
        """Sets the autonomous_system_organization of this InlineResponse200Connection.


        :param autonomous_system_organization: The autonomous_system_organization of this InlineResponse200Connection.
        :type autonomous_system_organization: str
        """

        self._autonomous_system_organization = autonomous_system_organization

    @property
    def connection_type(self):
        """Gets the connection_type of this InlineResponse200Connection.


        :return: The connection_type of this InlineResponse200Connection.
        :rtype: str
        """
        return self._connection_type

    @connection_type.setter
    def connection_type(self, connection_type):
        """Sets the connection_type of this InlineResponse200Connection.


        :param connection_type: The connection_type of this InlineResponse200Connection.
        :type connection_type: str
        """

        self._connection_type = connection_type

    @property
    def isp_name(self):
        """Gets the isp_name of this InlineResponse200Connection.


        :return: The isp_name of this InlineResponse200Connection.
        :rtype: str
        """
        return self._isp_name

    @isp_name.setter
    def isp_name(self, isp_name):
        """Sets the isp_name of this InlineResponse200Connection.


        :param isp_name: The isp_name of this InlineResponse200Connection.
        :type isp_name: str
        """

        self._isp_name = isp_name

    @property
    def organization_name(self):
        """Gets the organization_name of this InlineResponse200Connection.


        :return: The organization_name of this InlineResponse200Connection.
        :rtype: str
        """
        return self._organization_name

    @organization_name.setter
    def organization_name(self, organization_name):
        """Sets the organization_name of this InlineResponse200Connection.


        :param organization_name: The organization_name of this InlineResponse200Connection.
        :type organization_name: str
        """

        self._organization_name = organization_name
