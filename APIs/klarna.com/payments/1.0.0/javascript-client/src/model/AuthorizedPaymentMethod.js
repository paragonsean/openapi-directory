/**
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthorizedPaymentMethod model module.
 * @module model/AuthorizedPaymentMethod
 * @version 1.0.0
 */
class AuthorizedPaymentMethod {
    /**
     * Constructs a new <code>AuthorizedPaymentMethod</code>.
     * @alias module:model/AuthorizedPaymentMethod
     * @param type {module:model/AuthorizedPaymentMethod.TypeEnum} 
     */
    constructor(type) { 
        
        AuthorizedPaymentMethod.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>AuthorizedPaymentMethod</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthorizedPaymentMethod} obj Optional instance to populate.
     * @return {module:model/AuthorizedPaymentMethod} The populated <code>AuthorizedPaymentMethod</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthorizedPaymentMethod();

            if (data.hasOwnProperty('number_of_days')) {
                obj['number_of_days'] = ApiClient.convertToType(data['number_of_days'], 'Number');
            }
            if (data.hasOwnProperty('number_of_installments')) {
                obj['number_of_installments'] = ApiClient.convertToType(data['number_of_installments'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthorizedPaymentMethod</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthorizedPaymentMethod</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthorizedPaymentMethod.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

AuthorizedPaymentMethod.RequiredProperties = ["type"];

/**
 * @member {Number} number_of_days
 */
AuthorizedPaymentMethod.prototype['number_of_days'] = undefined;

/**
 * @member {Number} number_of_installments
 */
AuthorizedPaymentMethod.prototype['number_of_installments'] = undefined;

/**
 * @member {module:model/AuthorizedPaymentMethod.TypeEnum} type
 */
AuthorizedPaymentMethod.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AuthorizedPaymentMethod['TypeEnum'] = {

    /**
     * value: "invoice"
     * @const
     */
    "invoice": "invoice",

    /**
     * value: "fixed_amount"
     * @const
     */
    "fixed_amount": "fixed_amount",

    /**
     * value: "base_account"
     * @const
     */
    "base_account": "base_account",

    /**
     * value: "direct_debit"
     * @const
     */
    "direct_debit": "direct_debit",

    /**
     * value: "direct_bank_transfer"
     * @const
     */
    "direct_bank_transfer": "direct_bank_transfer",

    /**
     * value: "b2b_invoice"
     * @const
     */
    "b2b_invoice": "b2b_invoice",

    /**
     * value: "card"
     * @const
     */
    "card": "card",

    /**
     * value: "slice_it_by_card"
     * @const
     */
    "slice_it_by_card": "slice_it_by_card",

    /**
     * value: "pay_later_by_card"
     * @const
     */
    "pay_later_by_card": "pay_later_by_card",

    /**
     * value: "pay_by_card"
     * @const
     */
    "pay_by_card": "pay_by_card",

    /**
     * value: "fixed_sum_credit"
     * @const
     */
    "fixed_sum_credit": "fixed_sum_credit"
};



export default AuthorizedPaymentMethod;

