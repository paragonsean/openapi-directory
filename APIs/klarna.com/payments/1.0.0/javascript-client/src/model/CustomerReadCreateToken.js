/**
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomerReadCreateToken model module.
 * @module model/CustomerReadCreateToken
 * @version 1.0.0
 */
class CustomerReadCreateToken {
    /**
     * Constructs a new <code>CustomerReadCreateToken</code>.
     * @alias module:model/CustomerReadCreateToken
     */
    constructor() { 
        
        CustomerReadCreateToken.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomerReadCreateToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerReadCreateToken} obj Optional instance to populate.
     * @return {module:model/CustomerReadCreateToken} The populated <code>CustomerReadCreateToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerReadCreateToken();

            if (data.hasOwnProperty('date_of_birth')) {
                obj['date_of_birth'] = ApiClient.convertToType(data['date_of_birth'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerReadCreateToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerReadCreateToken</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['date_of_birth'] && !(typeof data['date_of_birth'] === 'string' || data['date_of_birth'] instanceof String)) {
            throw new Error("Expected the field `date_of_birth` to be a primitive type in the JSON string but got " + data['date_of_birth']);
        }
        // ensure the json data is a string
        if (data['gender'] && !(typeof data['gender'] === 'string' || data['gender'] instanceof String)) {
            throw new Error("Expected the field `gender` to be a primitive type in the JSON string but got " + data['gender']);
        }

        return true;
    }


}



/**
 * Customer’s date of birth. The format is ‘yyyy-mm-dd’
 * @member {String} date_of_birth
 */
CustomerReadCreateToken.prototype['date_of_birth'] = undefined;

/**
 * Customer’s gender - ‘male’ or ‘female’
 * @member {String} gender
 */
CustomerReadCreateToken.prototype['gender'] = undefined;






export default CustomerReadCreateToken;

