/**
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';
import CustomerReadCreateToken from './CustomerReadCreateToken';

/**
 * The CustomerTokenCreationResponse model module.
 * @module model/CustomerTokenCreationResponse
 * @version 1.0.0
 */
class CustomerTokenCreationResponse {
    /**
     * Constructs a new <code>CustomerTokenCreationResponse</code>.
     * @alias module:model/CustomerTokenCreationResponse
     * @param tokenId {String} Generated customer token. This token will be used to create a new order for the subscription using the Create a New order using token API.
     */
    constructor(tokenId) { 
        
        CustomerTokenCreationResponse.initialize(this, tokenId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tokenId) { 
        obj['token_id'] = tokenId;
    }

    /**
     * Constructs a <code>CustomerTokenCreationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerTokenCreationResponse} obj Optional instance to populate.
     * @return {module:model/CustomerTokenCreationResponse} The populated <code>CustomerTokenCreationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerTokenCreationResponse();

            if (data.hasOwnProperty('billing_address')) {
                obj['billing_address'] = Address.constructFromObject(data['billing_address']);
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = CustomerReadCreateToken.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('payment_method_reference')) {
                obj['payment_method_reference'] = ApiClient.convertToType(data['payment_method_reference'], 'String');
            }
            if (data.hasOwnProperty('redirect_url')) {
                obj['redirect_url'] = ApiClient.convertToType(data['redirect_url'], 'String');
            }
            if (data.hasOwnProperty('token_id')) {
                obj['token_id'] = ApiClient.convertToType(data['token_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerTokenCreationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerTokenCreationResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomerTokenCreationResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `billing_address`
        if (data['billing_address']) { // data not null
          Address.validateJSON(data['billing_address']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          CustomerReadCreateToken.validateJSON(data['customer']);
        }
        // ensure the json data is a string
        if (data['payment_method_reference'] && !(typeof data['payment_method_reference'] === 'string' || data['payment_method_reference'] instanceof String)) {
            throw new Error("Expected the field `payment_method_reference` to be a primitive type in the JSON string but got " + data['payment_method_reference']);
        }
        // ensure the json data is a string
        if (data['redirect_url'] && !(typeof data['redirect_url'] === 'string' || data['redirect_url'] instanceof String)) {
            throw new Error("Expected the field `redirect_url` to be a primitive type in the JSON string but got " + data['redirect_url']);
        }
        // ensure the json data is a string
        if (data['token_id'] && !(typeof data['token_id'] === 'string' || data['token_id'] instanceof String)) {
            throw new Error("Expected the field `token_id` to be a primitive type in the JSON string but got " + data['token_id']);
        }

        return true;
    }


}

CustomerTokenCreationResponse.RequiredProperties = ["token_id"];

/**
 * @member {module:model/Address} billing_address
 */
CustomerTokenCreationResponse.prototype['billing_address'] = undefined;

/**
 * @member {module:model/CustomerReadCreateToken} customer
 */
CustomerTokenCreationResponse.prototype['customer'] = undefined;

/**
 * Used to connect customers with payment method when it is present.
 * @member {String} payment_method_reference
 */
CustomerTokenCreationResponse.prototype['payment_method_reference'] = undefined;

/**
 * URL to redirect the customer to after placing the order. This is a Klarna URL where Klarna will place a cookie in the customer’s browser (if redirected) and redirect the customer back to the confirmation URL provided by the merchant. This is not a mandatory step but a recommended one to improve the returning customer’s experience.
 * @member {String} redirect_url
 */
CustomerTokenCreationResponse.prototype['redirect_url'] = undefined;

/**
 * Generated customer token. This token will be used to create a new order for the subscription using the Create a New order using token API.
 * @member {String} token_id
 */
CustomerTokenCreationResponse.prototype['token_id'] = undefined;






export default CustomerTokenCreationResponse;

