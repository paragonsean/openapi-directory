# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authorized_payment_method import AuthorizedPaymentMethod
from openapi_server import util


class ErrorV2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorized_payment_method: AuthorizedPaymentMethod=None, correlation_id: str=None, error_code: str=None, error_messages: List[str]=None, fraud_status: str=None, reason: str=None):
        """ErrorV2 - a model defined in OpenAPI

        :param authorized_payment_method: The authorized_payment_method of this ErrorV2.
        :param correlation_id: The correlation_id of this ErrorV2.
        :param error_code: The error_code of this ErrorV2.
        :param error_messages: The error_messages of this ErrorV2.
        :param fraud_status: The fraud_status of this ErrorV2.
        :param reason: The reason of this ErrorV2.
        """
        self.openapi_types = {
            'authorized_payment_method': AuthorizedPaymentMethod,
            'correlation_id': str,
            'error_code': str,
            'error_messages': List[str],
            'fraud_status': str,
            'reason': str
        }

        self.attribute_map = {
            'authorized_payment_method': 'authorized_payment_method',
            'correlation_id': 'correlation_id',
            'error_code': 'error_code',
            'error_messages': 'error_messages',
            'fraud_status': 'fraud_status',
            'reason': 'reason'
        }

        self._authorized_payment_method = authorized_payment_method
        self._correlation_id = correlation_id
        self._error_code = error_code
        self._error_messages = error_messages
        self._fraud_status = fraud_status
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorV2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorV2 of this ErrorV2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorized_payment_method(self):
        """Gets the authorized_payment_method of this ErrorV2.


        :return: The authorized_payment_method of this ErrorV2.
        :rtype: AuthorizedPaymentMethod
        """
        return self._authorized_payment_method

    @authorized_payment_method.setter
    def authorized_payment_method(self, authorized_payment_method):
        """Sets the authorized_payment_method of this ErrorV2.


        :param authorized_payment_method: The authorized_payment_method of this ErrorV2.
        :type authorized_payment_method: AuthorizedPaymentMethod
        """

        self._authorized_payment_method = authorized_payment_method

    @property
    def correlation_id(self):
        """Gets the correlation_id of this ErrorV2.


        :return: The correlation_id of this ErrorV2.
        :rtype: str
        """
        return self._correlation_id

    @correlation_id.setter
    def correlation_id(self, correlation_id):
        """Sets the correlation_id of this ErrorV2.


        :param correlation_id: The correlation_id of this ErrorV2.
        :type correlation_id: str
        """

        self._correlation_id = correlation_id

    @property
    def error_code(self):
        """Gets the error_code of this ErrorV2.


        :return: The error_code of this ErrorV2.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this ErrorV2.


        :param error_code: The error_code of this ErrorV2.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def error_messages(self):
        """Gets the error_messages of this ErrorV2.


        :return: The error_messages of this ErrorV2.
        :rtype: List[str]
        """
        return self._error_messages

    @error_messages.setter
    def error_messages(self, error_messages):
        """Sets the error_messages of this ErrorV2.


        :param error_messages: The error_messages of this ErrorV2.
        :type error_messages: List[str]
        """

        self._error_messages = error_messages

    @property
    def fraud_status(self):
        """Gets the fraud_status of this ErrorV2.


        :return: The fraud_status of this ErrorV2.
        :rtype: str
        """
        return self._fraud_status

    @fraud_status.setter
    def fraud_status(self, fraud_status):
        """Sets the fraud_status of this ErrorV2.


        :param fraud_status: The fraud_status of this ErrorV2.
        :type fraud_status: str
        """

        self._fraud_status = fraud_status

    @property
    def reason(self):
        """Gets the reason of this ErrorV2.


        :return: The reason of this ErrorV2.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this ErrorV2.


        :param reason: The reason of this ErrorV2.
        :type reason: str
        """

        self._reason = reason
