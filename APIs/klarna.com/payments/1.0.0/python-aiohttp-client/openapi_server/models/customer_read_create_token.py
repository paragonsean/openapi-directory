# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomerReadCreateToken(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_of_birth: str=None, gender: str=None):
        """CustomerReadCreateToken - a model defined in OpenAPI

        :param date_of_birth: The date_of_birth of this CustomerReadCreateToken.
        :param gender: The gender of this CustomerReadCreateToken.
        """
        self.openapi_types = {
            'date_of_birth': str,
            'gender': str
        }

        self.attribute_map = {
            'date_of_birth': 'date_of_birth',
            'gender': 'gender'
        }

        self._date_of_birth = date_of_birth
        self._gender = gender

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerReadCreateToken':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The customer_read_create_token of this CustomerReadCreateToken.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this CustomerReadCreateToken.

        Customer’s date of birth. The format is ‘yyyy-mm-dd’

        :return: The date_of_birth of this CustomerReadCreateToken.
        :rtype: str
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this CustomerReadCreateToken.

        Customer’s date of birth. The format is ‘yyyy-mm-dd’

        :param date_of_birth: The date_of_birth of this CustomerReadCreateToken.
        :type date_of_birth: str
        """

        self._date_of_birth = date_of_birth

    @property
    def gender(self):
        """Gets the gender of this CustomerReadCreateToken.

        Customer’s gender - ‘male’ or ‘female’

        :return: The gender of this CustomerReadCreateToken.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this CustomerReadCreateToken.

        Customer’s gender - ‘male’ or ‘female’

        :param gender: The gender of this CustomerReadCreateToken.
        :type gender: str
        """

        self._gender = gender
