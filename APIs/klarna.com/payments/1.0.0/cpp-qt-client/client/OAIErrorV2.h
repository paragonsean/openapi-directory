/**
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErrorV2.h
 *
 * 
 */

#ifndef OAIErrorV2_H
#define OAIErrorV2_H

#include <QJsonObject>

#include "OAIAuthorized_payment_method.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthorized_payment_method;

class OAIErrorV2 : public OAIObject {
public:
    OAIErrorV2();
    OAIErrorV2(QString json);
    ~OAIErrorV2() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuthorized_payment_method getAuthorizedPaymentMethod() const;
    void setAuthorizedPaymentMethod(const OAIAuthorized_payment_method &authorized_payment_method);
    bool is_authorized_payment_method_Set() const;
    bool is_authorized_payment_method_Valid() const;

    QString getCorrelationId() const;
    void setCorrelationId(const QString &correlation_id);
    bool is_correlation_id_Set() const;
    bool is_correlation_id_Valid() const;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QList<QString> getErrorMessages() const;
    void setErrorMessages(const QList<QString> &error_messages);
    bool is_error_messages_Set() const;
    bool is_error_messages_Valid() const;

    QString getFraudStatus() const;
    void setFraudStatus(const QString &fraud_status);
    bool is_fraud_status_Set() const;
    bool is_fraud_status_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuthorized_payment_method m_authorized_payment_method;
    bool m_authorized_payment_method_isSet;
    bool m_authorized_payment_method_isValid;

    QString m_correlation_id;
    bool m_correlation_id_isSet;
    bool m_correlation_id_isValid;

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QList<QString> m_error_messages;
    bool m_error_messages_isSet;
    bool m_error_messages_isValid;

    QString m_fraud_status;
    bool m_fraud_status_isSet;
    bool m_fraud_status_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErrorV2)

#endif // OAIErrorV2_H
