/**
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomer_token_creation_response.h
 *
 * 
 */

#ifndef OAICustomer_token_creation_response_H
#define OAICustomer_token_creation_response_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAICustomer_read_create_token.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAICustomer_read_create_token;

class OAICustomer_token_creation_response : public OAIObject {
public:
    OAICustomer_token_creation_response();
    OAICustomer_token_creation_response(QString json);
    ~OAICustomer_token_creation_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress getBillingAddress() const;
    void setBillingAddress(const OAIAddress &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    OAICustomer_read_create_token getCustomer() const;
    void setCustomer(const OAICustomer_read_create_token &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QString getPaymentMethodReference() const;
    void setPaymentMethodReference(const QString &payment_method_reference);
    bool is_payment_method_reference_Set() const;
    bool is_payment_method_reference_Valid() const;

    QString getRedirectUrl() const;
    void setRedirectUrl(const QString &redirect_url);
    bool is_redirect_url_Set() const;
    bool is_redirect_url_Valid() const;

    QString getTokenId() const;
    void setTokenId(const QString &token_id);
    bool is_token_id_Set() const;
    bool is_token_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    OAICustomer_read_create_token m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QString m_payment_method_reference;
    bool m_payment_method_reference_isSet;
    bool m_payment_method_reference_isValid;

    QString m_redirect_url;
    bool m_redirect_url_isSet;
    bool m_redirect_url_isValid;

    QString m_token_id;
    bool m_token_id_isSet;
    bool m_token_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomer_token_creation_response)

#endif // OAICustomer_token_creation_response_H
