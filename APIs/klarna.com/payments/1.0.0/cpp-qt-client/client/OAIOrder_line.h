/**
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrder_line.h
 *
 * 
 */

#ifndef OAIOrder_line_H
#define OAIOrder_line_H

#include <QJsonObject>

#include "OAIProduct_identifiers.h"
#include "OAISubscription.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProduct_identifiers;
class OAISubscription;

class OAIOrder_line : public OAIObject {
public:
    OAIOrder_line();
    OAIOrder_line(QString json);
    ~OAIOrder_line() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getMerchantData() const;
    void setMerchantData(const QString &merchant_data);
    bool is_merchant_data_Set() const;
    bool is_merchant_data_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIProduct_identifiers getProductIdentifiers() const;
    void setProductIdentifiers(const OAIProduct_identifiers &product_identifiers);
    bool is_product_identifiers_Set() const;
    bool is_product_identifiers_Valid() const;

    QString getProductUrl() const;
    void setProductUrl(const QString &product_url);
    bool is_product_url_Set() const;
    bool is_product_url_Valid() const;

    qint64 getQuantity() const;
    void setQuantity(const qint64 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getQuantityUnit() const;
    void setQuantityUnit(const QString &quantity_unit);
    bool is_quantity_unit_Set() const;
    bool is_quantity_unit_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    OAISubscription getSubscription() const;
    void setSubscription(const OAISubscription &subscription);
    bool is_subscription_Set() const;
    bool is_subscription_Valid() const;

    qint64 getTaxRate() const;
    void setTaxRate(const qint64 &tax_rate);
    bool is_tax_rate_Set() const;
    bool is_tax_rate_Valid() const;

    qint64 getTotalAmount() const;
    void setTotalAmount(const qint64 &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    qint64 getTotalDiscountAmount() const;
    void setTotalDiscountAmount(const qint64 &total_discount_amount);
    bool is_total_discount_amount_Set() const;
    bool is_total_discount_amount_Valid() const;

    qint64 getTotalTaxAmount() const;
    void setTotalTaxAmount(const qint64 &total_tax_amount);
    bool is_total_tax_amount_Set() const;
    bool is_total_tax_amount_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint64 getUnitPrice() const;
    void setUnitPrice(const qint64 &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_merchant_data;
    bool m_merchant_data_isSet;
    bool m_merchant_data_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIProduct_identifiers m_product_identifiers;
    bool m_product_identifiers_isSet;
    bool m_product_identifiers_isValid;

    QString m_product_url;
    bool m_product_url_isSet;
    bool m_product_url_isValid;

    qint64 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_quantity_unit;
    bool m_quantity_unit_isSet;
    bool m_quantity_unit_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    OAISubscription m_subscription;
    bool m_subscription_isSet;
    bool m_subscription_isValid;

    qint64 m_tax_rate;
    bool m_tax_rate_isSet;
    bool m_tax_rate_isValid;

    qint64 m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;

    qint64 m_total_discount_amount;
    bool m_total_discount_amount_isSet;
    bool m_total_discount_amount_isValid;

    qint64 m_total_tax_amount;
    bool m_total_tax_amount_isSet;
    bool m_total_tax_amount_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint64 m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrder_line)

#endif // OAIOrder_line_H
