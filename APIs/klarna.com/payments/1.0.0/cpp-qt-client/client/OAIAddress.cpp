/**
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddress::OAIAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddress::OAIAddress() {
    this->initializeModel();
}

OAIAddress::~OAIAddress() {}

void OAIAddress::initializeModel() {

    m_attention_isSet = false;
    m_attention_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_organization_name_isSet = false;
    m_organization_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_street_address_isSet = false;
    m_street_address_isValid = false;

    m_street_address2_isSet = false;
    m_street_address2_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddress::fromJsonObject(QJsonObject json) {

    m_attention_isValid = ::OpenAPI::fromJsonValue(m_attention, json[QString("attention")]);
    m_attention_isSet = !json[QString("attention")].isNull() && m_attention_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_family_name_isValid = ::OpenAPI::fromJsonValue(m_family_name, json[QString("family_name")]);
    m_family_name_isSet = !json[QString("family_name")].isNull() && m_family_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("given_name")]);
    m_given_name_isSet = !json[QString("given_name")].isNull() && m_given_name_isValid;

    m_organization_name_isValid = ::OpenAPI::fromJsonValue(m_organization_name, json[QString("organization_name")]);
    m_organization_name_isSet = !json[QString("organization_name")].isNull() && m_organization_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postal_code")]);
    m_postal_code_isSet = !json[QString("postal_code")].isNull() && m_postal_code_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_street_address_isValid = ::OpenAPI::fromJsonValue(m_street_address, json[QString("street_address")]);
    m_street_address_isSet = !json[QString("street_address")].isNull() && m_street_address_isValid;

    m_street_address2_isValid = ::OpenAPI::fromJsonValue(m_street_address2, json[QString("street_address2")]);
    m_street_address2_isSet = !json[QString("street_address2")].isNull() && m_street_address2_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_attention_isSet) {
        obj.insert(QString("attention"), ::OpenAPI::toJsonValue(m_attention));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_family_name_isSet) {
        obj.insert(QString("family_name"), ::OpenAPI::toJsonValue(m_family_name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("given_name"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_organization_name_isSet) {
        obj.insert(QString("organization_name"), ::OpenAPI::toJsonValue(m_organization_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postal_code"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_street_address_isSet) {
        obj.insert(QString("street_address"), ::OpenAPI::toJsonValue(m_street_address));
    }
    if (m_street_address2_isSet) {
        obj.insert(QString("street_address2"), ::OpenAPI::toJsonValue(m_street_address2));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIAddress::getAttention() const {
    return m_attention;
}
void OAIAddress::setAttention(const QString &attention) {
    m_attention = attention;
    m_attention_isSet = true;
}

bool OAIAddress::is_attention_Set() const{
    return m_attention_isSet;
}

bool OAIAddress::is_attention_Valid() const{
    return m_attention_isValid;
}

QString OAIAddress::getCity() const {
    return m_city;
}
void OAIAddress::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIAddress::is_city_Set() const{
    return m_city_isSet;
}

bool OAIAddress::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIAddress::getCountry() const {
    return m_country;
}
void OAIAddress::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIAddress::is_country_Set() const{
    return m_country_isSet;
}

bool OAIAddress::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIAddress::getEmail() const {
    return m_email;
}
void OAIAddress::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIAddress::is_email_Set() const{
    return m_email_isSet;
}

bool OAIAddress::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIAddress::getFamilyName() const {
    return m_family_name;
}
void OAIAddress::setFamilyName(const QString &family_name) {
    m_family_name = family_name;
    m_family_name_isSet = true;
}

bool OAIAddress::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAIAddress::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAIAddress::getGivenName() const {
    return m_given_name;
}
void OAIAddress::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAIAddress::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAIAddress::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAIAddress::getOrganizationName() const {
    return m_organization_name;
}
void OAIAddress::setOrganizationName(const QString &organization_name) {
    m_organization_name = organization_name;
    m_organization_name_isSet = true;
}

bool OAIAddress::is_organization_name_Set() const{
    return m_organization_name_isSet;
}

bool OAIAddress::is_organization_name_Valid() const{
    return m_organization_name_isValid;
}

QString OAIAddress::getPhone() const {
    return m_phone;
}
void OAIAddress::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIAddress::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIAddress::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAIAddress::getPostalCode() const {
    return m_postal_code;
}
void OAIAddress::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIAddress::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIAddress::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIAddress::getRegion() const {
    return m_region;
}
void OAIAddress::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIAddress::is_region_Set() const{
    return m_region_isSet;
}

bool OAIAddress::is_region_Valid() const{
    return m_region_isValid;
}

QString OAIAddress::getStreetAddress() const {
    return m_street_address;
}
void OAIAddress::setStreetAddress(const QString &street_address) {
    m_street_address = street_address;
    m_street_address_isSet = true;
}

bool OAIAddress::is_street_address_Set() const{
    return m_street_address_isSet;
}

bool OAIAddress::is_street_address_Valid() const{
    return m_street_address_isValid;
}

QString OAIAddress::getStreetAddress2() const {
    return m_street_address2;
}
void OAIAddress::setStreetAddress2(const QString &street_address2) {
    m_street_address2 = street_address2;
    m_street_address2_isSet = true;
}

bool OAIAddress::is_street_address2_Set() const{
    return m_street_address2_isSet;
}

bool OAIAddress::is_street_address2_Valid() const{
    return m_street_address2_isValid;
}

QString OAIAddress::getTitle() const {
    return m_title;
}
void OAIAddress::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIAddress::is_title_Set() const{
    return m_title_isSet;
}

bool OAIAddress::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attention_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_street_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_street_address2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
