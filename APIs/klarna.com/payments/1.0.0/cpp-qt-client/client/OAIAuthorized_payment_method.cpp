/**
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthorized_payment_method.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthorized_payment_method::OAIAuthorized_payment_method(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthorized_payment_method::OAIAuthorized_payment_method() {
    this->initializeModel();
}

OAIAuthorized_payment_method::~OAIAuthorized_payment_method() {}

void OAIAuthorized_payment_method::initializeModel() {

    m_number_of_days_isSet = false;
    m_number_of_days_isValid = false;

    m_number_of_installments_isSet = false;
    m_number_of_installments_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAuthorized_payment_method::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthorized_payment_method::fromJsonObject(QJsonObject json) {

    m_number_of_days_isValid = ::OpenAPI::fromJsonValue(m_number_of_days, json[QString("number_of_days")]);
    m_number_of_days_isSet = !json[QString("number_of_days")].isNull() && m_number_of_days_isValid;

    m_number_of_installments_isValid = ::OpenAPI::fromJsonValue(m_number_of_installments, json[QString("number_of_installments")]);
    m_number_of_installments_isSet = !json[QString("number_of_installments")].isNull() && m_number_of_installments_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAuthorized_payment_method::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthorized_payment_method::asJsonObject() const {
    QJsonObject obj;
    if (m_number_of_days_isSet) {
        obj.insert(QString("number_of_days"), ::OpenAPI::toJsonValue(m_number_of_days));
    }
    if (m_number_of_installments_isSet) {
        obj.insert(QString("number_of_installments"), ::OpenAPI::toJsonValue(m_number_of_installments));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

qint32 OAIAuthorized_payment_method::getNumberOfDays() const {
    return m_number_of_days;
}
void OAIAuthorized_payment_method::setNumberOfDays(const qint32 &number_of_days) {
    m_number_of_days = number_of_days;
    m_number_of_days_isSet = true;
}

bool OAIAuthorized_payment_method::is_number_of_days_Set() const{
    return m_number_of_days_isSet;
}

bool OAIAuthorized_payment_method::is_number_of_days_Valid() const{
    return m_number_of_days_isValid;
}

qint32 OAIAuthorized_payment_method::getNumberOfInstallments() const {
    return m_number_of_installments;
}
void OAIAuthorized_payment_method::setNumberOfInstallments(const qint32 &number_of_installments) {
    m_number_of_installments = number_of_installments;
    m_number_of_installments_isSet = true;
}

bool OAIAuthorized_payment_method::is_number_of_installments_Set() const{
    return m_number_of_installments_isSet;
}

bool OAIAuthorized_payment_method::is_number_of_installments_Valid() const{
    return m_number_of_installments_isValid;
}

QString OAIAuthorized_payment_method::getType() const {
    return m_type;
}
void OAIAuthorized_payment_method::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAuthorized_payment_method::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAuthorized_payment_method::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAuthorized_payment_method::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_number_of_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_installments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthorized_payment_method::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && true;
}

} // namespace OpenAPI
