/**
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOptions.h
 *
 * 
 */

#ifndef OAIOptions_H
#define OAIOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOptions : public OAIObject {
public:
    OAIOptions();
    OAIOptions(QString json);
    ~OAIOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColorBorder() const;
    void setColorBorder(const QString &color_border);
    bool is_color_border_Set() const;
    bool is_color_border_Valid() const;

    QString getColorBorderSelected() const;
    void setColorBorderSelected(const QString &color_border_selected);
    bool is_color_border_selected_Set() const;
    bool is_color_border_selected_Valid() const;

    QString getColorDetails() const;
    void setColorDetails(const QString &color_details);
    bool is_color_details_Set() const;
    bool is_color_details_Valid() const;

    QString getColorText() const;
    void setColorText(const QString &color_text);
    bool is_color_text_Set() const;
    bool is_color_text_Valid() const;

    QString getRadiusBorder() const;
    void setRadiusBorder(const QString &radius_border);
    bool is_radius_border_Set() const;
    bool is_radius_border_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_color_border;
    bool m_color_border_isSet;
    bool m_color_border_isValid;

    QString m_color_border_selected;
    bool m_color_border_selected_isSet;
    bool m_color_border_selected_isValid;

    QString m_color_details;
    bool m_color_details_isSet;
    bool m_color_details_isValid;

    QString m_color_text;
    bool m_color_text_isSet;
    bool m_color_text_isValid;

    QString m_radius_border;
    bool m_radius_border_isSet;
    bool m_radius_border_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOptions)

#endif // OAIOptions_H
