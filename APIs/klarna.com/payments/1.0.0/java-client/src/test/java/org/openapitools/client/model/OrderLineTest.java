/*
 * Klarna Payments API V1
 * The payments API is used to create a session to offer Klarna's payment methods as part of your checkout. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).  Read more on [Klarna payments](https://docs.klarna.com/klarna-payments/).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ProductIdentifiers;
import org.openapitools.client.model.Subscription;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OrderLine
 */
public class OrderLineTest {
    private final OrderLine model = new OrderLine();

    /**
     * Model tests for OrderLine
     */
    @Test
    public void testOrderLine() {
        // TODO: test OrderLine
    }

    /**
     * Test the property 'imageUrl'
     */
    @Test
    public void imageUrlTest() {
        // TODO: test imageUrl
    }

    /**
     * Test the property 'merchantData'
     */
    @Test
    public void merchantDataTest() {
        // TODO: test merchantData
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'productIdentifiers'
     */
    @Test
    public void productIdentifiersTest() {
        // TODO: test productIdentifiers
    }

    /**
     * Test the property 'productUrl'
     */
    @Test
    public void productUrlTest() {
        // TODO: test productUrl
    }

    /**
     * Test the property 'quantity'
     */
    @Test
    public void quantityTest() {
        // TODO: test quantity
    }

    /**
     * Test the property 'quantityUnit'
     */
    @Test
    public void quantityUnitTest() {
        // TODO: test quantityUnit
    }

    /**
     * Test the property 'reference'
     */
    @Test
    public void referenceTest() {
        // TODO: test reference
    }

    /**
     * Test the property 'subscription'
     */
    @Test
    public void subscriptionTest() {
        // TODO: test subscription
    }

    /**
     * Test the property 'taxRate'
     */
    @Test
    public void taxRateTest() {
        // TODO: test taxRate
    }

    /**
     * Test the property 'totalAmount'
     */
    @Test
    public void totalAmountTest() {
        // TODO: test totalAmount
    }

    /**
     * Test the property 'totalDiscountAmount'
     */
    @Test
    public void totalDiscountAmountTest() {
        // TODO: test totalDiscountAmount
    }

    /**
     * Test the property 'totalTaxAmount'
     */
    @Test
    public void totalTaxAmountTest() {
        // TODO: test totalTaxAmount
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'unitPrice'
     */
    @Test
    public void unitPriceTest() {
        // TODO: test unitPrice
    }

}
