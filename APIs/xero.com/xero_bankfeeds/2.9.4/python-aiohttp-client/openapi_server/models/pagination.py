# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Pagination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_count: int=None, page: int=None, page_count: int=None, page_size: int=None):
        """Pagination - a model defined in OpenAPI

        :param item_count: The item_count of this Pagination.
        :param page: The page of this Pagination.
        :param page_count: The page_count of this Pagination.
        :param page_size: The page_size of this Pagination.
        """
        self.openapi_types = {
            'item_count': int,
            'page': int,
            'page_count': int,
            'page_size': int
        }

        self.attribute_map = {
            'item_count': 'itemCount',
            'page': 'page',
            'page_count': 'pageCount',
            'page_size': 'pageSize'
        }

        self._item_count = item_count
        self._page = page
        self._page_count = page_count
        self._page_size = page_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pagination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pagination of this Pagination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_count(self):
        """Gets the item_count of this Pagination.

        Number of items returned

        :return: The item_count of this Pagination.
        :rtype: int
        """
        return self._item_count

    @item_count.setter
    def item_count(self, item_count):
        """Sets the item_count of this Pagination.

        Number of items returned

        :param item_count: The item_count of this Pagination.
        :type item_count: int
        """

        self._item_count = item_count

    @property
    def page(self):
        """Gets the page of this Pagination.

        Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned.

        :return: The page of this Pagination.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this Pagination.

        Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned.

        :param page: The page of this Pagination.
        :type page: int
        """

        self._page = page

    @property
    def page_count(self):
        """Gets the page_count of this Pagination.

        Number of pages available

        :return: The page_count of this Pagination.
        :rtype: int
        """
        return self._page_count

    @page_count.setter
    def page_count(self, page_count):
        """Sets the page_count of this Pagination.

        Number of pages available

        :param page_count: The page_count of this Pagination.
        :type page_count: int
        """

        self._page_count = page_count

    @property
    def page_size(self):
        """Gets the page_size of this Pagination.

        Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100.

        :return: The page_size of this Pagination.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this Pagination.

        Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100.

        :param page_size: The page_size of this Pagination.
        :type page_size: int
        """

        self._page_size = page_size
