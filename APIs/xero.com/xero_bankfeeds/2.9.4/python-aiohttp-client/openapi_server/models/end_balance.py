# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credit_debit_indicator import CreditDebitIndicator
from openapi_server import util


class EndBalance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, credit_debit_indicator: CreditDebitIndicator=None):
        """EndBalance - a model defined in OpenAPI

        :param amount: The amount of this EndBalance.
        :param credit_debit_indicator: The credit_debit_indicator of this EndBalance.
        """
        self.openapi_types = {
            'amount': float,
            'credit_debit_indicator': CreditDebitIndicator
        }

        self.attribute_map = {
            'amount': 'amount',
            'credit_debit_indicator': 'creditDebitIndicator'
        }

        self._amount = amount
        self._credit_debit_indicator = credit_debit_indicator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndBalance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndBalance of this EndBalance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this EndBalance.


        :return: The amount of this EndBalance.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this EndBalance.


        :param amount: The amount of this EndBalance.
        :type amount: float
        """

        self._amount = amount

    @property
    def credit_debit_indicator(self):
        """Gets the credit_debit_indicator of this EndBalance.


        :return: The credit_debit_indicator of this EndBalance.
        :rtype: CreditDebitIndicator
        """
        return self._credit_debit_indicator

    @credit_debit_indicator.setter
    def credit_debit_indicator(self, credit_debit_indicator):
        """Sets the credit_debit_indicator of this EndBalance.


        :param credit_debit_indicator: The credit_debit_indicator of this EndBalance.
        :type credit_debit_indicator: CreditDebitIndicator
        """

        self._credit_debit_indicator = credit_debit_indicator
