# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credit_debit_indicator import CreditDebitIndicator
from openapi_server import util


class StatementLine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, cheque_number: str=None, credit_debit_indicator: CreditDebitIndicator=None, description: str=None, payee_name: str=None, posted_date: date=None, reference: str=None, transaction_id: str=None):
        """StatementLine - a model defined in OpenAPI

        :param amount: The amount of this StatementLine.
        :param cheque_number: The cheque_number of this StatementLine.
        :param credit_debit_indicator: The credit_debit_indicator of this StatementLine.
        :param description: The description of this StatementLine.
        :param payee_name: The payee_name of this StatementLine.
        :param posted_date: The posted_date of this StatementLine.
        :param reference: The reference of this StatementLine.
        :param transaction_id: The transaction_id of this StatementLine.
        """
        self.openapi_types = {
            'amount': float,
            'cheque_number': str,
            'credit_debit_indicator': CreditDebitIndicator,
            'description': str,
            'payee_name': str,
            'posted_date': date,
            'reference': str,
            'transaction_id': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'cheque_number': 'chequeNumber',
            'credit_debit_indicator': 'creditDebitIndicator',
            'description': 'description',
            'payee_name': 'payeeName',
            'posted_date': 'postedDate',
            'reference': 'reference',
            'transaction_id': 'transactionId'
        }

        self._amount = amount
        self._cheque_number = cheque_number
        self._credit_debit_indicator = credit_debit_indicator
        self._description = description
        self._payee_name = payee_name
        self._posted_date = posted_date
        self._reference = reference
        self._transaction_id = transaction_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatementLine':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatementLine of this StatementLine.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this StatementLine.

        Transaction amount

        :return: The amount of this StatementLine.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this StatementLine.

        Transaction amount

        :param amount: The amount of this StatementLine.
        :type amount: float
        """

        self._amount = amount

    @property
    def cheque_number(self):
        """Gets the cheque_number of this StatementLine.

        The cheque/check number

        :return: The cheque_number of this StatementLine.
        :rtype: str
        """
        return self._cheque_number

    @cheque_number.setter
    def cheque_number(self, cheque_number):
        """Sets the cheque_number of this StatementLine.

        The cheque/check number

        :param cheque_number: The cheque_number of this StatementLine.
        :type cheque_number: str
        """

        self._cheque_number = cheque_number

    @property
    def credit_debit_indicator(self):
        """Gets the credit_debit_indicator of this StatementLine.


        :return: The credit_debit_indicator of this StatementLine.
        :rtype: CreditDebitIndicator
        """
        return self._credit_debit_indicator

    @credit_debit_indicator.setter
    def credit_debit_indicator(self, credit_debit_indicator):
        """Sets the credit_debit_indicator of this StatementLine.


        :param credit_debit_indicator: The credit_debit_indicator of this StatementLine.
        :type credit_debit_indicator: CreditDebitIndicator
        """

        self._credit_debit_indicator = credit_debit_indicator

    @property
    def description(self):
        """Gets the description of this StatementLine.

        Transaction description

        :return: The description of this StatementLine.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StatementLine.

        Transaction description

        :param description: The description of this StatementLine.
        :type description: str
        """

        self._description = description

    @property
    def payee_name(self):
        """Gets the payee_name of this StatementLine.

        Typically the merchant or payee name

        :return: The payee_name of this StatementLine.
        :rtype: str
        """
        return self._payee_name

    @payee_name.setter
    def payee_name(self, payee_name):
        """Sets the payee_name of this StatementLine.

        Typically the merchant or payee name

        :param payee_name: The payee_name of this StatementLine.
        :type payee_name: str
        """

        self._payee_name = payee_name

    @property
    def posted_date(self):
        """Gets the posted_date of this StatementLine.

        The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD

        :return: The posted_date of this StatementLine.
        :rtype: date
        """
        return self._posted_date

    @posted_date.setter
    def posted_date(self, posted_date):
        """Sets the posted_date of this StatementLine.

        The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD

        :param posted_date: The posted_date of this StatementLine.
        :type posted_date: date
        """

        self._posted_date = posted_date

    @property
    def reference(self):
        """Gets the reference of this StatementLine.

        Optional field to enhance the Description

        :return: The reference of this StatementLine.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this StatementLine.

        Optional field to enhance the Description

        :param reference: The reference of this StatementLine.
        :type reference: str
        """

        self._reference = reference

    @property
    def transaction_id(self):
        """Gets the transaction_id of this StatementLine.

        Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection.

        :return: The transaction_id of this StatementLine.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this StatementLine.

        Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection.

        :param transaction_id: The transaction_id of this StatementLine.
        :type transaction_id: str
        """

        self._transaction_id = transaction_id
