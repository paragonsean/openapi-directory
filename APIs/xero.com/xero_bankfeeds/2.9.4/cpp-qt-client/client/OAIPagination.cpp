/**
 * Xero Bank Feeds API
 * The Bank Feeds API is a closed API that is only available to financial institutions that have an established financial services partnership with Xero. If you're an existing financial services partner that wants access, contact your local Partner Manager. If you're a financial institution who wants to provide bank feeds to your business customers, contact us to become a financial services partner.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPagination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPagination::OAIPagination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPagination::OAIPagination() {
    this->initializeModel();
}

OAIPagination::~OAIPagination() {}

void OAIPagination::initializeModel() {

    m_item_count_isSet = false;
    m_item_count_isValid = false;

    m_page_isSet = false;
    m_page_isValid = false;

    m_page_count_isSet = false;
    m_page_count_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;
}

void OAIPagination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPagination::fromJsonObject(QJsonObject json) {

    m_item_count_isValid = ::OpenAPI::fromJsonValue(m_item_count, json[QString("itemCount")]);
    m_item_count_isSet = !json[QString("itemCount")].isNull() && m_item_count_isValid;

    m_page_isValid = ::OpenAPI::fromJsonValue(m_page, json[QString("page")]);
    m_page_isSet = !json[QString("page")].isNull() && m_page_isValid;

    m_page_count_isValid = ::OpenAPI::fromJsonValue(m_page_count, json[QString("pageCount")]);
    m_page_count_isSet = !json[QString("pageCount")].isNull() && m_page_count_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;
}

QString OAIPagination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPagination::asJsonObject() const {
    QJsonObject obj;
    if (m_item_count_isSet) {
        obj.insert(QString("itemCount"), ::OpenAPI::toJsonValue(m_item_count));
    }
    if (m_page_isSet) {
        obj.insert(QString("page"), ::OpenAPI::toJsonValue(m_page));
    }
    if (m_page_count_isSet) {
        obj.insert(QString("pageCount"), ::OpenAPI::toJsonValue(m_page_count));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    return obj;
}

qint32 OAIPagination::getItemCount() const {
    return m_item_count;
}
void OAIPagination::setItemCount(const qint32 &item_count) {
    m_item_count = item_count;
    m_item_count_isSet = true;
}

bool OAIPagination::is_item_count_Set() const{
    return m_item_count_isSet;
}

bool OAIPagination::is_item_count_Valid() const{
    return m_item_count_isValid;
}

qint32 OAIPagination::getPage() const {
    return m_page;
}
void OAIPagination::setPage(const qint32 &page) {
    m_page = page;
    m_page_isSet = true;
}

bool OAIPagination::is_page_Set() const{
    return m_page_isSet;
}

bool OAIPagination::is_page_Valid() const{
    return m_page_isValid;
}

qint32 OAIPagination::getPageCount() const {
    return m_page_count;
}
void OAIPagination::setPageCount(const qint32 &page_count) {
    m_page_count = page_count;
    m_page_count_isSet = true;
}

bool OAIPagination::is_page_count_Set() const{
    return m_page_count_isSet;
}

bool OAIPagination::is_page_count_Valid() const{
    return m_page_count_isValid;
}

qint32 OAIPagination::getPageSize() const {
    return m_page_size;
}
void OAIPagination::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIPagination::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIPagination::is_page_size_Valid() const{
    return m_page_size_isValid;
}

bool OAIPagination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_item_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPagination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
