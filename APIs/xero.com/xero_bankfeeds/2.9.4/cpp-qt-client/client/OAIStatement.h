/**
 * Xero Bank Feeds API
 * The Bank Feeds API is a closed API that is only available to financial institutions that have an established financial services partnership with Xero. If you're an existing financial services partner that wants access, contact your local Partner Manager. If you're a financial institution who wants to provide bank feeds to your business customers, contact us to become a financial services partner.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatement.h
 *
 * 
 */

#ifndef OAIStatement_H
#define OAIStatement_H

#include <QJsonObject>

#include "OAIEndBalance.h"
#include "OAIError.h"
#include "OAIStartBalance.h"
#include "OAIStatementLine.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEndBalance;
class OAIError;
class OAIStartBalance;
class OAIStatementLine;

class OAIStatement : public OAIObject {
public:
    OAIStatement();
    OAIStatement(QString json);
    ~OAIStatement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEndBalance getEndBalance() const;
    void setEndBalance(const OAIEndBalance &end_balance);
    bool is_end_balance_Set() const;
    bool is_end_balance_Valid() const;

    QDate getEndDate() const;
    void setEndDate(const QDate &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QList<OAIError> getErrors() const;
    void setErrors(const QList<OAIError> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QString getFeedConnectionId() const;
    void setFeedConnectionId(const QString &feed_connection_id);
    bool is_feed_connection_id_Set() const;
    bool is_feed_connection_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIStartBalance getStartBalance() const;
    void setStartBalance(const OAIStartBalance &start_balance);
    bool is_start_balance_Set() const;
    bool is_start_balance_Valid() const;

    QDate getStartDate() const;
    void setStartDate(const QDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    qint32 getStatementLineCount() const;
    void setStatementLineCount(const qint32 &statement_line_count);
    bool is_statement_line_count_Set() const;
    bool is_statement_line_count_Valid() const;

    QList<OAIStatementLine> getStatementLines() const;
    void setStatementLines(const QList<OAIStatementLine> &statement_lines);
    bool is_statement_lines_Set() const;
    bool is_statement_lines_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEndBalance m_end_balance;
    bool m_end_balance_isSet;
    bool m_end_balance_isValid;

    QDate m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QList<OAIError> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QString m_feed_connection_id;
    bool m_feed_connection_id_isSet;
    bool m_feed_connection_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIStartBalance m_start_balance;
    bool m_start_balance_isSet;
    bool m_start_balance_isValid;

    QDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    qint32 m_statement_line_count;
    bool m_statement_line_count_isSet;
    bool m_statement_line_count_isValid;

    QList<OAIStatementLine> m_statement_lines;
    bool m_statement_lines_isSet;
    bool m_statement_lines_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatement)

#endif // OAIStatement_H
