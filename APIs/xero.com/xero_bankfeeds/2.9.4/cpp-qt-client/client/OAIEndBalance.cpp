/**
 * Xero Bank Feeds API
 * The Bank Feeds API is a closed API that is only available to financial institutions that have an established financial services partnership with Xero. If you're an existing financial services partner that wants access, contact your local Partner Manager. If you're a financial institution who wants to provide bank feeds to your business customers, contact us to become a financial services partner.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEndBalance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEndBalance::OAIEndBalance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEndBalance::OAIEndBalance() {
    this->initializeModel();
}

OAIEndBalance::~OAIEndBalance() {}

void OAIEndBalance::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_credit_debit_indicator_isSet = false;
    m_credit_debit_indicator_isValid = false;
}

void OAIEndBalance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEndBalance::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_credit_debit_indicator_isValid = ::OpenAPI::fromJsonValue(m_credit_debit_indicator, json[QString("creditDebitIndicator")]);
    m_credit_debit_indicator_isSet = !json[QString("creditDebitIndicator")].isNull() && m_credit_debit_indicator_isValid;
}

QString OAIEndBalance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEndBalance::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_credit_debit_indicator.isSet()) {
        obj.insert(QString("creditDebitIndicator"), ::OpenAPI::toJsonValue(m_credit_debit_indicator));
    }
    return obj;
}

double OAIEndBalance::getAmount() const {
    return m_amount;
}
void OAIEndBalance::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIEndBalance::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIEndBalance::is_amount_Valid() const{
    return m_amount_isValid;
}

OAICreditDebitIndicator OAIEndBalance::getCreditDebitIndicator() const {
    return m_credit_debit_indicator;
}
void OAIEndBalance::setCreditDebitIndicator(const OAICreditDebitIndicator &credit_debit_indicator) {
    m_credit_debit_indicator = credit_debit_indicator;
    m_credit_debit_indicator_isSet = true;
}

bool OAIEndBalance::is_credit_debit_indicator_Set() const{
    return m_credit_debit_indicator_isSet;
}

bool OAIEndBalance::is_credit_debit_indicator_Valid() const{
    return m_credit_debit_indicator_isValid;
}

bool OAIEndBalance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credit_debit_indicator.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEndBalance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
