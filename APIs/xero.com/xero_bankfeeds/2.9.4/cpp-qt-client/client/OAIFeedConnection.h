/**
 * Xero Bank Feeds API
 * The Bank Feeds API is a closed API that is only available to financial institutions that have an established financial services partnership with Xero. If you're an existing financial services partner that wants access, contact your local Partner Manager. If you're a financial institution who wants to provide bank feeds to your business customers, contact us to become a financial services partner.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeedConnection.h
 *
 * 
 */

#ifndef OAIFeedConnection_H
#define OAIFeedConnection_H

#include <QJsonObject>

#include "OAICountryCode.h"
#include "OAICurrencyCode.h"
#include "OAIError.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIError;

class OAIFeedConnection : public OAIObject {
public:
    OAIFeedConnection();
    OAIFeedConnection(QString json);
    ~OAIFeedConnection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getAccountName() const;
    void setAccountName(const QString &account_name);
    bool is_account_name_Set() const;
    bool is_account_name_Valid() const;

    QString getAccountNumber() const;
    void setAccountNumber(const QString &account_number);
    bool is_account_number_Set() const;
    bool is_account_number_Valid() const;

    QString getAccountToken() const;
    void setAccountToken(const QString &account_token);
    bool is_account_token_Set() const;
    bool is_account_token_Valid() const;

    QString getAccountType() const;
    void setAccountType(const QString &account_type);
    bool is_account_type_Set() const;
    bool is_account_type_Valid() const;

    OAICountryCode getCountry() const;
    void setCountry(const OAICountryCode &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAICurrencyCode getCurrency() const;
    void setCurrency(const OAICurrencyCode &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAIError getError() const;
    void setError(const OAIError &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_account_name;
    bool m_account_name_isSet;
    bool m_account_name_isValid;

    QString m_account_number;
    bool m_account_number_isSet;
    bool m_account_number_isValid;

    QString m_account_token;
    bool m_account_token_isSet;
    bool m_account_token_isValid;

    QString m_account_type;
    bool m_account_type_isSet;
    bool m_account_type_isValid;

    OAICountryCode m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAICurrencyCode m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAIError m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeedConnection)

#endif // OAIFeedConnection_H
