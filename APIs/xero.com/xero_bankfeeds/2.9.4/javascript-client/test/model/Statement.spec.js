/**
 * Xero Bank Feeds API
 * The Bank Feeds API is a closed API that is only available to financial institutions that have an established financial services partnership with Xero. If you're an existing financial services partner that wants access, contact your local Partner Manager. If you're a financial institution who wants to provide bank feeds to your business customers, contact us to become a financial services partner.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XeroBankFeedsApi);
  }
}(this, function(expect, XeroBankFeedsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XeroBankFeedsApi.Statement();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Statement', function() {
    it('should create an instance of Statement', function() {
      // uncomment below and update the code to test Statement
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be.a(XeroBankFeedsApi.Statement);
    });

    it('should have the property endBalance (base name: "endBalance")', function() {
      // uncomment below and update the code to test the property endBalance
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

    it('should have the property errors (base name: "errors")', function() {
      // uncomment below and update the code to test the property errors
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

    it('should have the property feedConnectionId (base name: "feedConnectionId")', function() {
      // uncomment below and update the code to test the property feedConnectionId
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

    it('should have the property startBalance (base name: "startBalance")', function() {
      // uncomment below and update the code to test the property startBalance
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

    it('should have the property statementLineCount (base name: "statementLineCount")', function() {
      // uncomment below and update the code to test the property statementLineCount
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

    it('should have the property statementLines (base name: "statementLines")', function() {
      // uncomment below and update the code to test the property statementLines
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new XeroBankFeedsApi.Statement();
      //expect(instance).to.be();
    });

  });

}));
