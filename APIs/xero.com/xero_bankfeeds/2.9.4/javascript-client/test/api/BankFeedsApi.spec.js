/**
 * Xero Bank Feeds API
 * The Bank Feeds API is a closed API that is only available to financial institutions that have an established financial services partnership with Xero. If you're an existing financial services partner that wants access, contact your local Partner Manager. If you're a financial institution who wants to provide bank feeds to your business customers, contact us to become a financial services partner.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XeroBankFeedsApi);
  }
}(this, function(expect, XeroBankFeedsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XeroBankFeedsApi.BankFeedsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BankFeedsApi', function() {
    describe('createFeedConnections', function() {
      it('should call createFeedConnections successfully', function(done) {
        //uncomment below and update the code to test createFeedConnections
        //instance.createFeedConnections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createStatements', function() {
      it('should call createStatements successfully', function(done) {
        //uncomment below and update the code to test createStatements
        //instance.createStatements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFeedConnections', function() {
      it('should call deleteFeedConnections successfully', function(done) {
        //uncomment below and update the code to test deleteFeedConnections
        //instance.deleteFeedConnections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeedConnection', function() {
      it('should call getFeedConnection successfully', function(done) {
        //uncomment below and update the code to test getFeedConnection
        //instance.getFeedConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFeedConnections', function() {
      it('should call getFeedConnections successfully', function(done) {
        //uncomment below and update the code to test getFeedConnections
        //instance.getFeedConnections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStatement', function() {
      it('should call getStatement successfully', function(done) {
        //uncomment below and update the code to test getStatement
        //instance.getStatement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStatements', function() {
      it('should call getStatements successfully', function(done) {
        //uncomment below and update the code to test getStatements
        //instance.getStatements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
