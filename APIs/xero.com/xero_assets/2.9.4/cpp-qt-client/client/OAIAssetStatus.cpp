/**
 * Xero Assets API
 * The Assets API exposes fixed asset related functions of the Xero Accounting application and can be used for a variety of purposes such as creating assets, retrieving asset valuations etc.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetStatus::OAIAssetStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetStatus::OAIAssetStatus() {
    this->initializeModel();
}

OAIAssetStatus::~OAIAssetStatus() {}

void OAIAssetStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssetStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssetStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Draft", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetStatus::DRAFT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Registered", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetStatus::REGISTERED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disposed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetStatus::DISPOSED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssetStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssetStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssetStatus::DRAFT:
            val = "Draft";
            break;
        case eOAIAssetStatus::REGISTERED:
            val = "Registered";
            break;
        case eOAIAssetStatus::DISPOSED:
            val = "Disposed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssetStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssetStatus::eOAIAssetStatus OAIAssetStatus::getValue() const {
    return m_value;
}

void OAIAssetStatus::setValue(const OAIAssetStatus::eOAIAssetStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssetStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssetStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
