/**
 * Xero Assets API
 * The Assets API exposes fixed asset related functions of the Xero Accounting application and can be used for a variety of purposes such as creating assets, retrieving asset valuations etc.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetStatusQueryParam.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetStatusQueryParam::OAIAssetStatusQueryParam(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetStatusQueryParam::OAIAssetStatusQueryParam() {
    this->initializeModel();
}

OAIAssetStatusQueryParam::~OAIAssetStatusQueryParam() {}

void OAIAssetStatusQueryParam::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssetStatusQueryParam::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssetStatusQueryParam::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DRAFT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetStatusQueryParam::DRAFT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REGISTERED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetStatusQueryParam::REGISTERED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DISPOSED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetStatusQueryParam::DISPOSED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssetStatusQueryParam::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssetStatusQueryParam::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssetStatusQueryParam::DRAFT:
            val = "DRAFT";
            break;
        case eOAIAssetStatusQueryParam::REGISTERED:
            val = "REGISTERED";
            break;
        case eOAIAssetStatusQueryParam::DISPOSED:
            val = "DISPOSED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssetStatusQueryParam::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssetStatusQueryParam::eOAIAssetStatusQueryParam OAIAssetStatusQueryParam::getValue() const {
    return m_value;
}

void OAIAssetStatusQueryParam::setValue(const OAIAssetStatusQueryParam::eOAIAssetStatusQueryParam& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssetStatusQueryParam::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssetStatusQueryParam::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
