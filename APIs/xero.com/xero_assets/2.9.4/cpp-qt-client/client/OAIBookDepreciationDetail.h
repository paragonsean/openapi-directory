/**
 * Xero Assets API
 * The Assets API exposes fixed asset related functions of the Xero Accounting application and can be used for a variety of purposes such as creating assets, retrieving asset valuations etc.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBookDepreciationDetail.h
 *
 * 
 */

#ifndef OAIBookDepreciationDetail_H
#define OAIBookDepreciationDetail_H

#include <QJsonObject>

#include <QDate>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBookDepreciationDetail : public OAIObject {
public:
    OAIBookDepreciationDetail();
    OAIBookDepreciationDetail(QString json);
    ~OAIBookDepreciationDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCostLimit() const;
    void setCostLimit(const double &cost_limit);
    bool is_cost_limit_Set() const;
    bool is_cost_limit_Valid() const;

    double getCurrentAccumDepreciationAmount() const;
    void setCurrentAccumDepreciationAmount(const double &current_accum_depreciation_amount);
    bool is_current_accum_depreciation_amount_Set() const;
    bool is_current_accum_depreciation_amount_Valid() const;

    double getCurrentCapitalGain() const;
    void setCurrentCapitalGain(const double &current_capital_gain);
    bool is_current_capital_gain_Set() const;
    bool is_current_capital_gain_Valid() const;

    double getCurrentGainLoss() const;
    void setCurrentGainLoss(const double &current_gain_loss);
    bool is_current_gain_loss_Set() const;
    bool is_current_gain_loss_Valid() const;

    QDate getDepreciationStartDate() const;
    void setDepreciationStartDate(const QDate &depreciation_start_date);
    bool is_depreciation_start_date_Set() const;
    bool is_depreciation_start_date_Valid() const;

    double getPriorAccumDepreciationAmount() const;
    void setPriorAccumDepreciationAmount(const double &prior_accum_depreciation_amount);
    bool is_prior_accum_depreciation_amount_Set() const;
    bool is_prior_accum_depreciation_amount_Valid() const;

    double getResidualValue() const;
    void setResidualValue(const double &residual_value);
    bool is_residual_value_Set() const;
    bool is_residual_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_cost_limit;
    bool m_cost_limit_isSet;
    bool m_cost_limit_isValid;

    double m_current_accum_depreciation_amount;
    bool m_current_accum_depreciation_amount_isSet;
    bool m_current_accum_depreciation_amount_isValid;

    double m_current_capital_gain;
    bool m_current_capital_gain_isSet;
    bool m_current_capital_gain_isValid;

    double m_current_gain_loss;
    bool m_current_gain_loss_isSet;
    bool m_current_gain_loss_isValid;

    QDate m_depreciation_start_date;
    bool m_depreciation_start_date_isSet;
    bool m_depreciation_start_date_isValid;

    double m_prior_accum_depreciation_amount;
    bool m_prior_accum_depreciation_amount_isSet;
    bool m_prior_accum_depreciation_amount_isValid;

    double m_residual_value;
    bool m_residual_value_isSet;
    bool m_residual_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBookDepreciationDetail)

#endif // OAIBookDepreciationDetail_H
