/**
 * Xero Assets API
 * The Assets API exposes fixed asset related functions of the Xero Accounting application and can be used for a variety of purposes such as creating assets, retrieving asset valuations etc.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISetting.h
 *
 * 
 */

#ifndef OAISetting_H
#define OAISetting_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISetting : public OAIObject {
public:
    OAISetting();
    OAISetting(QString json);
    ~OAISetting() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetNumberPrefix() const;
    void setAssetNumberPrefix(const QString &asset_number_prefix);
    bool is_asset_number_prefix_Set() const;
    bool is_asset_number_prefix_Valid() const;

    QString getAssetNumberSequence() const;
    void setAssetNumberSequence(const QString &asset_number_sequence);
    bool is_asset_number_sequence_Set() const;
    bool is_asset_number_sequence_Valid() const;

    QDate getAssetStartDate() const;
    void setAssetStartDate(const QDate &asset_start_date);
    bool is_asset_start_date_Set() const;
    bool is_asset_start_date_Valid() const;

    QString getDefaultCapitalGainOnDisposalAccountId() const;
    void setDefaultCapitalGainOnDisposalAccountId(const QString &default_capital_gain_on_disposal_account_id);
    bool is_default_capital_gain_on_disposal_account_id_Set() const;
    bool is_default_capital_gain_on_disposal_account_id_Valid() const;

    QString getDefaultGainOnDisposalAccountId() const;
    void setDefaultGainOnDisposalAccountId(const QString &default_gain_on_disposal_account_id);
    bool is_default_gain_on_disposal_account_id_Set() const;
    bool is_default_gain_on_disposal_account_id_Valid() const;

    QString getDefaultLossOnDisposalAccountId() const;
    void setDefaultLossOnDisposalAccountId(const QString &default_loss_on_disposal_account_id);
    bool is_default_loss_on_disposal_account_id_Set() const;
    bool is_default_loss_on_disposal_account_id_Valid() const;

    QDate getLastDepreciationDate() const;
    void setLastDepreciationDate(const QDate &last_depreciation_date);
    bool is_last_depreciation_date_Set() const;
    bool is_last_depreciation_date_Valid() const;

    bool isOptInForTax() const;
    void setOptInForTax(const bool &opt_in_for_tax);
    bool is_opt_in_for_tax_Set() const;
    bool is_opt_in_for_tax_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_number_prefix;
    bool m_asset_number_prefix_isSet;
    bool m_asset_number_prefix_isValid;

    QString m_asset_number_sequence;
    bool m_asset_number_sequence_isSet;
    bool m_asset_number_sequence_isValid;

    QDate m_asset_start_date;
    bool m_asset_start_date_isSet;
    bool m_asset_start_date_isValid;

    QString m_default_capital_gain_on_disposal_account_id;
    bool m_default_capital_gain_on_disposal_account_id_isSet;
    bool m_default_capital_gain_on_disposal_account_id_isValid;

    QString m_default_gain_on_disposal_account_id;
    bool m_default_gain_on_disposal_account_id_isSet;
    bool m_default_gain_on_disposal_account_id_isValid;

    QString m_default_loss_on_disposal_account_id;
    bool m_default_loss_on_disposal_account_id_isSet;
    bool m_default_loss_on_disposal_account_id_isValid;

    QDate m_last_depreciation_date;
    bool m_last_depreciation_date_isSet;
    bool m_last_depreciation_date_isValid;

    bool m_opt_in_for_tax;
    bool m_opt_in_for_tax_isSet;
    bool m_opt_in_for_tax_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISetting)

#endif // OAISetting_H
