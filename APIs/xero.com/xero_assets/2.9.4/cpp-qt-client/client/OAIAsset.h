/**
 * Xero Assets API
 * The Assets API exposes fixed asset related functions of the Xero Accounting application and can be used for a variety of purposes such as creating assets, retrieving asset valuations etc.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAsset.h
 *
 * 
 */

#ifndef OAIAsset_H
#define OAIAsset_H

#include <QJsonObject>

#include "OAIAssetStatus.h"
#include "OAIBookDepreciationDetail.h"
#include "OAIBookDepreciationSetting.h"
#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBookDepreciationDetail;
class OAIBookDepreciationSetting;

class OAIAsset : public OAIObject {
public:
    OAIAsset();
    OAIAsset(QString json);
    ~OAIAsset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAccountingBookValue() const;
    void setAccountingBookValue(const double &accounting_book_value);
    bool is_accounting_book_value_Set() const;
    bool is_accounting_book_value_Valid() const;

    QString getAssetId() const;
    void setAssetId(const QString &asset_id);
    bool is_asset_id_Set() const;
    bool is_asset_id_Valid() const;

    QString getAssetName() const;
    void setAssetName(const QString &asset_name);
    bool is_asset_name_Set() const;
    bool is_asset_name_Valid() const;

    QString getAssetNumber() const;
    void setAssetNumber(const QString &asset_number);
    bool is_asset_number_Set() const;
    bool is_asset_number_Valid() const;

    OAIAssetStatus getAssetStatus() const;
    void setAssetStatus(const OAIAssetStatus &asset_status);
    bool is_asset_status_Set() const;
    bool is_asset_status_Valid() const;

    QString getAssetTypeId() const;
    void setAssetTypeId(const QString &asset_type_id);
    bool is_asset_type_id_Set() const;
    bool is_asset_type_id_Valid() const;

    OAIBookDepreciationDetail getBookDepreciationDetail() const;
    void setBookDepreciationDetail(const OAIBookDepreciationDetail &book_depreciation_detail);
    bool is_book_depreciation_detail_Set() const;
    bool is_book_depreciation_detail_Valid() const;

    OAIBookDepreciationSetting getBookDepreciationSetting() const;
    void setBookDepreciationSetting(const OAIBookDepreciationSetting &book_depreciation_setting);
    bool is_book_depreciation_setting_Set() const;
    bool is_book_depreciation_setting_Valid() const;

    bool isCanRollback() const;
    void setCanRollback(const bool &can_rollback);
    bool is_can_rollback_Set() const;
    bool is_can_rollback_Valid() const;

    QDate getDisposalDate() const;
    void setDisposalDate(const QDate &disposal_date);
    bool is_disposal_date_Set() const;
    bool is_disposal_date_Valid() const;

    double getDisposalPrice() const;
    void setDisposalPrice(const double &disposal_price);
    bool is_disposal_price_Set() const;
    bool is_disposal_price_Valid() const;

    bool isIsDeleteEnabledForDate() const;
    void setIsDeleteEnabledForDate(const bool &is_delete_enabled_for_date);
    bool is_is_delete_enabled_for_date_Set() const;
    bool is_is_delete_enabled_for_date_Valid() const;

    QDate getPurchaseDate() const;
    void setPurchaseDate(const QDate &purchase_date);
    bool is_purchase_date_Set() const;
    bool is_purchase_date_Valid() const;

    double getPurchasePrice() const;
    void setPurchasePrice(const double &purchase_price);
    bool is_purchase_price_Set() const;
    bool is_purchase_price_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getWarrantyExpiryDate() const;
    void setWarrantyExpiryDate(const QString &warranty_expiry_date);
    bool is_warranty_expiry_date_Set() const;
    bool is_warranty_expiry_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_accounting_book_value;
    bool m_accounting_book_value_isSet;
    bool m_accounting_book_value_isValid;

    QString m_asset_id;
    bool m_asset_id_isSet;
    bool m_asset_id_isValid;

    QString m_asset_name;
    bool m_asset_name_isSet;
    bool m_asset_name_isValid;

    QString m_asset_number;
    bool m_asset_number_isSet;
    bool m_asset_number_isValid;

    OAIAssetStatus m_asset_status;
    bool m_asset_status_isSet;
    bool m_asset_status_isValid;

    QString m_asset_type_id;
    bool m_asset_type_id_isSet;
    bool m_asset_type_id_isValid;

    OAIBookDepreciationDetail m_book_depreciation_detail;
    bool m_book_depreciation_detail_isSet;
    bool m_book_depreciation_detail_isValid;

    OAIBookDepreciationSetting m_book_depreciation_setting;
    bool m_book_depreciation_setting_isSet;
    bool m_book_depreciation_setting_isValid;

    bool m_can_rollback;
    bool m_can_rollback_isSet;
    bool m_can_rollback_isValid;

    QDate m_disposal_date;
    bool m_disposal_date_isSet;
    bool m_disposal_date_isValid;

    double m_disposal_price;
    bool m_disposal_price_isSet;
    bool m_disposal_price_isValid;

    bool m_is_delete_enabled_for_date;
    bool m_is_delete_enabled_for_date_isSet;
    bool m_is_delete_enabled_for_date_isValid;

    QDate m_purchase_date;
    bool m_purchase_date_isSet;
    bool m_purchase_date_isValid;

    double m_purchase_price;
    bool m_purchase_price_isSet;
    bool m_purchase_price_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_warranty_expiry_date;
    bool m_warranty_expiry_date_isSet;
    bool m_warranty_expiry_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAsset)

#endif // OAIAsset_H
