/*
 * Xero Assets API
 * The Assets API exposes fixed asset related functions of the Xero Accounting application and can be used for a variety of purposes such as creating assets, retrieving asset valuations etc.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Setting
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:53:35.289965-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Setting {
  public static final String SERIALIZED_NAME_ASSET_NUMBER_PREFIX = "assetNumberPrefix";
  @SerializedName(SERIALIZED_NAME_ASSET_NUMBER_PREFIX)
  private String assetNumberPrefix;

  public static final String SERIALIZED_NAME_ASSET_NUMBER_SEQUENCE = "assetNumberSequence";
  @SerializedName(SERIALIZED_NAME_ASSET_NUMBER_SEQUENCE)
  private String assetNumberSequence;

  public static final String SERIALIZED_NAME_ASSET_START_DATE = "assetStartDate";
  @SerializedName(SERIALIZED_NAME_ASSET_START_DATE)
  private LocalDate assetStartDate;

  public static final String SERIALIZED_NAME_DEFAULT_CAPITAL_GAIN_ON_DISPOSAL_ACCOUNT_ID = "defaultCapitalGainOnDisposalAccountId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CAPITAL_GAIN_ON_DISPOSAL_ACCOUNT_ID)
  private UUID defaultCapitalGainOnDisposalAccountId;

  public static final String SERIALIZED_NAME_DEFAULT_GAIN_ON_DISPOSAL_ACCOUNT_ID = "defaultGainOnDisposalAccountId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_GAIN_ON_DISPOSAL_ACCOUNT_ID)
  private UUID defaultGainOnDisposalAccountId;

  public static final String SERIALIZED_NAME_DEFAULT_LOSS_ON_DISPOSAL_ACCOUNT_ID = "defaultLossOnDisposalAccountId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_LOSS_ON_DISPOSAL_ACCOUNT_ID)
  private UUID defaultLossOnDisposalAccountId;

  public static final String SERIALIZED_NAME_LAST_DEPRECIATION_DATE = "lastDepreciationDate";
  @SerializedName(SERIALIZED_NAME_LAST_DEPRECIATION_DATE)
  private LocalDate lastDepreciationDate;

  public static final String SERIALIZED_NAME_OPT_IN_FOR_TAX = "optInForTax";
  @SerializedName(SERIALIZED_NAME_OPT_IN_FOR_TAX)
  private Boolean optInForTax;

  public Setting() {
  }

  public Setting assetNumberPrefix(String assetNumberPrefix) {
    this.assetNumberPrefix = assetNumberPrefix;
    return this;
  }

  /**
   * The prefix used for fixed asset numbers (“FA-” by default)
   * @return assetNumberPrefix
   */
  @javax.annotation.Nullable
  public String getAssetNumberPrefix() {
    return assetNumberPrefix;
  }

  public void setAssetNumberPrefix(String assetNumberPrefix) {
    this.assetNumberPrefix = assetNumberPrefix;
  }


  public Setting assetNumberSequence(String assetNumberSequence) {
    this.assetNumberSequence = assetNumberSequence;
    return this;
  }

  /**
   * The next available sequence number
   * @return assetNumberSequence
   */
  @javax.annotation.Nullable
  public String getAssetNumberSequence() {
    return assetNumberSequence;
  }

  public void setAssetNumberSequence(String assetNumberSequence) {
    this.assetNumberSequence = assetNumberSequence;
  }


  public Setting assetStartDate(LocalDate assetStartDate) {
    this.assetStartDate = assetStartDate;
    return this;
  }

  /**
   * The date depreciation calculations started on registered fixed assets in Xero
   * @return assetStartDate
   */
  @javax.annotation.Nullable
  public LocalDate getAssetStartDate() {
    return assetStartDate;
  }

  public void setAssetStartDate(LocalDate assetStartDate) {
    this.assetStartDate = assetStartDate;
  }


  public Setting defaultCapitalGainOnDisposalAccountId(UUID defaultCapitalGainOnDisposalAccountId) {
    this.defaultCapitalGainOnDisposalAccountId = defaultCapitalGainOnDisposalAccountId;
    return this;
  }

  /**
   * Default account that capital gains are posted to
   * @return defaultCapitalGainOnDisposalAccountId
   */
  @javax.annotation.Nullable
  public UUID getDefaultCapitalGainOnDisposalAccountId() {
    return defaultCapitalGainOnDisposalAccountId;
  }

  public void setDefaultCapitalGainOnDisposalAccountId(UUID defaultCapitalGainOnDisposalAccountId) {
    this.defaultCapitalGainOnDisposalAccountId = defaultCapitalGainOnDisposalAccountId;
  }


  public Setting defaultGainOnDisposalAccountId(UUID defaultGainOnDisposalAccountId) {
    this.defaultGainOnDisposalAccountId = defaultGainOnDisposalAccountId;
    return this;
  }

  /**
   * Default account that gains are posted to
   * @return defaultGainOnDisposalAccountId
   */
  @javax.annotation.Nullable
  public UUID getDefaultGainOnDisposalAccountId() {
    return defaultGainOnDisposalAccountId;
  }

  public void setDefaultGainOnDisposalAccountId(UUID defaultGainOnDisposalAccountId) {
    this.defaultGainOnDisposalAccountId = defaultGainOnDisposalAccountId;
  }


  public Setting defaultLossOnDisposalAccountId(UUID defaultLossOnDisposalAccountId) {
    this.defaultLossOnDisposalAccountId = defaultLossOnDisposalAccountId;
    return this;
  }

  /**
   * Default account that losses are posted to
   * @return defaultLossOnDisposalAccountId
   */
  @javax.annotation.Nullable
  public UUID getDefaultLossOnDisposalAccountId() {
    return defaultLossOnDisposalAccountId;
  }

  public void setDefaultLossOnDisposalAccountId(UUID defaultLossOnDisposalAccountId) {
    this.defaultLossOnDisposalAccountId = defaultLossOnDisposalAccountId;
  }


  public Setting lastDepreciationDate(LocalDate lastDepreciationDate) {
    this.lastDepreciationDate = lastDepreciationDate;
    return this;
  }

  /**
   * The last depreciation date
   * @return lastDepreciationDate
   */
  @javax.annotation.Nullable
  public LocalDate getLastDepreciationDate() {
    return lastDepreciationDate;
  }

  public void setLastDepreciationDate(LocalDate lastDepreciationDate) {
    this.lastDepreciationDate = lastDepreciationDate;
  }


  public Setting optInForTax(Boolean optInForTax) {
    this.optInForTax = optInForTax;
    return this;
  }

  /**
   * opt in for tax calculation
   * @return optInForTax
   */
  @javax.annotation.Nullable
  public Boolean getOptInForTax() {
    return optInForTax;
  }

  public void setOptInForTax(Boolean optInForTax) {
    this.optInForTax = optInForTax;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Setting setting = (Setting) o;
    return Objects.equals(this.assetNumberPrefix, setting.assetNumberPrefix) &&
        Objects.equals(this.assetNumberSequence, setting.assetNumberSequence) &&
        Objects.equals(this.assetStartDate, setting.assetStartDate) &&
        Objects.equals(this.defaultCapitalGainOnDisposalAccountId, setting.defaultCapitalGainOnDisposalAccountId) &&
        Objects.equals(this.defaultGainOnDisposalAccountId, setting.defaultGainOnDisposalAccountId) &&
        Objects.equals(this.defaultLossOnDisposalAccountId, setting.defaultLossOnDisposalAccountId) &&
        Objects.equals(this.lastDepreciationDate, setting.lastDepreciationDate) &&
        Objects.equals(this.optInForTax, setting.optInForTax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetNumberPrefix, assetNumberSequence, assetStartDate, defaultCapitalGainOnDisposalAccountId, defaultGainOnDisposalAccountId, defaultLossOnDisposalAccountId, lastDepreciationDate, optInForTax);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Setting {\n");
    sb.append("    assetNumberPrefix: ").append(toIndentedString(assetNumberPrefix)).append("\n");
    sb.append("    assetNumberSequence: ").append(toIndentedString(assetNumberSequence)).append("\n");
    sb.append("    assetStartDate: ").append(toIndentedString(assetStartDate)).append("\n");
    sb.append("    defaultCapitalGainOnDisposalAccountId: ").append(toIndentedString(defaultCapitalGainOnDisposalAccountId)).append("\n");
    sb.append("    defaultGainOnDisposalAccountId: ").append(toIndentedString(defaultGainOnDisposalAccountId)).append("\n");
    sb.append("    defaultLossOnDisposalAccountId: ").append(toIndentedString(defaultLossOnDisposalAccountId)).append("\n");
    sb.append("    lastDepreciationDate: ").append(toIndentedString(lastDepreciationDate)).append("\n");
    sb.append("    optInForTax: ").append(toIndentedString(optInForTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assetNumberPrefix");
    openapiFields.add("assetNumberSequence");
    openapiFields.add("assetStartDate");
    openapiFields.add("defaultCapitalGainOnDisposalAccountId");
    openapiFields.add("defaultGainOnDisposalAccountId");
    openapiFields.add("defaultLossOnDisposalAccountId");
    openapiFields.add("lastDepreciationDate");
    openapiFields.add("optInForTax");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Setting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Setting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Setting is not found in the empty JSON string", Setting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Setting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Setting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assetNumberPrefix") != null && !jsonObj.get("assetNumberPrefix").isJsonNull()) && !jsonObj.get("assetNumberPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetNumberPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetNumberPrefix").toString()));
      }
      if ((jsonObj.get("assetNumberSequence") != null && !jsonObj.get("assetNumberSequence").isJsonNull()) && !jsonObj.get("assetNumberSequence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetNumberSequence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetNumberSequence").toString()));
      }
      if ((jsonObj.get("defaultCapitalGainOnDisposalAccountId") != null && !jsonObj.get("defaultCapitalGainOnDisposalAccountId").isJsonNull()) && !jsonObj.get("defaultCapitalGainOnDisposalAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultCapitalGainOnDisposalAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultCapitalGainOnDisposalAccountId").toString()));
      }
      if ((jsonObj.get("defaultGainOnDisposalAccountId") != null && !jsonObj.get("defaultGainOnDisposalAccountId").isJsonNull()) && !jsonObj.get("defaultGainOnDisposalAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultGainOnDisposalAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultGainOnDisposalAccountId").toString()));
      }
      if ((jsonObj.get("defaultLossOnDisposalAccountId") != null && !jsonObj.get("defaultLossOnDisposalAccountId").isJsonNull()) && !jsonObj.get("defaultLossOnDisposalAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultLossOnDisposalAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultLossOnDisposalAccountId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Setting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Setting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Setting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Setting.class));

       return (TypeAdapter<T>) new TypeAdapter<Setting>() {
           @Override
           public void write(JsonWriter out, Setting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Setting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Setting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Setting
   * @throws IOException if the JSON string is invalid with respect to Setting
   */
  public static Setting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Setting.class);
  }

  /**
   * Convert an instance of Setting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

