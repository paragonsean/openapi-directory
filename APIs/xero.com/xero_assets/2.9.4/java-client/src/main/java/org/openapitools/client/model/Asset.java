/*
 * Xero Assets API
 * The Assets API exposes fixed asset related functions of the Xero Accounting application and can be used for a variety of purposes such as creating assets, retrieving asset valuations etc.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.client.model.AssetStatus;
import org.openapitools.client.model.BookDepreciationDetail;
import org.openapitools.client.model.BookDepreciationSetting;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Asset
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:53:35.289965-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Asset {
  public static final String SERIALIZED_NAME_ACCOUNTING_BOOK_VALUE = "accountingBookValue";
  @SerializedName(SERIALIZED_NAME_ACCOUNTING_BOOK_VALUE)
  private Double accountingBookValue;

  public static final String SERIALIZED_NAME_ASSET_ID = "assetId";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  private UUID assetId;

  public static final String SERIALIZED_NAME_ASSET_NAME = "assetName";
  @SerializedName(SERIALIZED_NAME_ASSET_NAME)
  private String assetName;

  public static final String SERIALIZED_NAME_ASSET_NUMBER = "assetNumber";
  @SerializedName(SERIALIZED_NAME_ASSET_NUMBER)
  private String assetNumber;

  public static final String SERIALIZED_NAME_ASSET_STATUS = "assetStatus";
  @SerializedName(SERIALIZED_NAME_ASSET_STATUS)
  private AssetStatus assetStatus;

  public static final String SERIALIZED_NAME_ASSET_TYPE_ID = "assetTypeId";
  @SerializedName(SERIALIZED_NAME_ASSET_TYPE_ID)
  private UUID assetTypeId;

  public static final String SERIALIZED_NAME_BOOK_DEPRECIATION_DETAIL = "bookDepreciationDetail";
  @SerializedName(SERIALIZED_NAME_BOOK_DEPRECIATION_DETAIL)
  private BookDepreciationDetail bookDepreciationDetail;

  public static final String SERIALIZED_NAME_BOOK_DEPRECIATION_SETTING = "bookDepreciationSetting";
  @SerializedName(SERIALIZED_NAME_BOOK_DEPRECIATION_SETTING)
  private BookDepreciationSetting bookDepreciationSetting;

  public static final String SERIALIZED_NAME_CAN_ROLLBACK = "canRollback";
  @SerializedName(SERIALIZED_NAME_CAN_ROLLBACK)
  private Boolean canRollback;

  public static final String SERIALIZED_NAME_DISPOSAL_DATE = "disposalDate";
  @SerializedName(SERIALIZED_NAME_DISPOSAL_DATE)
  private LocalDate disposalDate;

  public static final String SERIALIZED_NAME_DISPOSAL_PRICE = "disposalPrice";
  @SerializedName(SERIALIZED_NAME_DISPOSAL_PRICE)
  private Double disposalPrice;

  public static final String SERIALIZED_NAME_IS_DELETE_ENABLED_FOR_DATE = "isDeleteEnabledForDate";
  @SerializedName(SERIALIZED_NAME_IS_DELETE_ENABLED_FOR_DATE)
  private Boolean isDeleteEnabledForDate;

  public static final String SERIALIZED_NAME_PURCHASE_DATE = "purchaseDate";
  @SerializedName(SERIALIZED_NAME_PURCHASE_DATE)
  private LocalDate purchaseDate;

  public static final String SERIALIZED_NAME_PURCHASE_PRICE = "purchasePrice";
  @SerializedName(SERIALIZED_NAME_PURCHASE_PRICE)
  private Double purchasePrice;

  public static final String SERIALIZED_NAME_SERIAL_NUMBER = "serialNumber";
  @SerializedName(SERIALIZED_NAME_SERIAL_NUMBER)
  private String serialNumber;

  public static final String SERIALIZED_NAME_WARRANTY_EXPIRY_DATE = "warrantyExpiryDate";
  @SerializedName(SERIALIZED_NAME_WARRANTY_EXPIRY_DATE)
  private String warrantyExpiryDate;

  public Asset() {
  }

  public Asset accountingBookValue(Double accountingBookValue) {
    this.accountingBookValue = accountingBookValue;
    return this;
  }

  /**
   * The accounting value of the asset
   * @return accountingBookValue
   */
  @javax.annotation.Nullable
  public Double getAccountingBookValue() {
    return accountingBookValue;
  }

  public void setAccountingBookValue(Double accountingBookValue) {
    this.accountingBookValue = accountingBookValue;
  }


  public Asset assetId(UUID assetId) {
    this.assetId = assetId;
    return this;
  }

  /**
   * The Xero-generated Id for the asset
   * @return assetId
   */
  @javax.annotation.Nullable
  public UUID getAssetId() {
    return assetId;
  }

  public void setAssetId(UUID assetId) {
    this.assetId = assetId;
  }


  public Asset assetName(String assetName) {
    this.assetName = assetName;
    return this;
  }

  /**
   * The name of the asset
   * @return assetName
   */
  @javax.annotation.Nonnull
  public String getAssetName() {
    return assetName;
  }

  public void setAssetName(String assetName) {
    this.assetName = assetName;
  }


  public Asset assetNumber(String assetNumber) {
    this.assetNumber = assetNumber;
    return this;
  }

  /**
   * Must be unique.
   * @return assetNumber
   */
  @javax.annotation.Nullable
  public String getAssetNumber() {
    return assetNumber;
  }

  public void setAssetNumber(String assetNumber) {
    this.assetNumber = assetNumber;
  }


  public Asset assetStatus(AssetStatus assetStatus) {
    this.assetStatus = assetStatus;
    return this;
  }

  /**
   * Get assetStatus
   * @return assetStatus
   */
  @javax.annotation.Nullable
  public AssetStatus getAssetStatus() {
    return assetStatus;
  }

  public void setAssetStatus(AssetStatus assetStatus) {
    this.assetStatus = assetStatus;
  }


  public Asset assetTypeId(UUID assetTypeId) {
    this.assetTypeId = assetTypeId;
    return this;
  }

  /**
   * The Xero-generated Id for the asset type
   * @return assetTypeId
   */
  @javax.annotation.Nullable
  public UUID getAssetTypeId() {
    return assetTypeId;
  }

  public void setAssetTypeId(UUID assetTypeId) {
    this.assetTypeId = assetTypeId;
  }


  public Asset bookDepreciationDetail(BookDepreciationDetail bookDepreciationDetail) {
    this.bookDepreciationDetail = bookDepreciationDetail;
    return this;
  }

  /**
   * Get bookDepreciationDetail
   * @return bookDepreciationDetail
   */
  @javax.annotation.Nullable
  public BookDepreciationDetail getBookDepreciationDetail() {
    return bookDepreciationDetail;
  }

  public void setBookDepreciationDetail(BookDepreciationDetail bookDepreciationDetail) {
    this.bookDepreciationDetail = bookDepreciationDetail;
  }


  public Asset bookDepreciationSetting(BookDepreciationSetting bookDepreciationSetting) {
    this.bookDepreciationSetting = bookDepreciationSetting;
    return this;
  }

  /**
   * Get bookDepreciationSetting
   * @return bookDepreciationSetting
   */
  @javax.annotation.Nullable
  public BookDepreciationSetting getBookDepreciationSetting() {
    return bookDepreciationSetting;
  }

  public void setBookDepreciationSetting(BookDepreciationSetting bookDepreciationSetting) {
    this.bookDepreciationSetting = bookDepreciationSetting;
  }


  public Asset canRollback(Boolean canRollback) {
    this.canRollback = canRollback;
    return this;
  }

  /**
   * Boolean to indicate whether depreciation can be rolled back for this asset individually. This is true if it doesn&#39;t have &#39;legacy&#39; journal entries and if there is no lock period that would prevent this asset from rolling back.
   * @return canRollback
   */
  @javax.annotation.Nullable
  public Boolean getCanRollback() {
    return canRollback;
  }

  public void setCanRollback(Boolean canRollback) {
    this.canRollback = canRollback;
  }


  public Asset disposalDate(LocalDate disposalDate) {
    this.disposalDate = disposalDate;
    return this;
  }

  /**
   * The date the asset was disposed
   * @return disposalDate
   */
  @javax.annotation.Nullable
  public LocalDate getDisposalDate() {
    return disposalDate;
  }

  public void setDisposalDate(LocalDate disposalDate) {
    this.disposalDate = disposalDate;
  }


  public Asset disposalPrice(Double disposalPrice) {
    this.disposalPrice = disposalPrice;
    return this;
  }

  /**
   * The price the asset was disposed at
   * @return disposalPrice
   */
  @javax.annotation.Nullable
  public Double getDisposalPrice() {
    return disposalPrice;
  }

  public void setDisposalPrice(Double disposalPrice) {
    this.disposalPrice = disposalPrice;
  }


  public Asset isDeleteEnabledForDate(Boolean isDeleteEnabledForDate) {
    this.isDeleteEnabledForDate = isDeleteEnabledForDate;
    return this;
  }

  /**
   * Boolean to indicate whether delete is enabled
   * @return isDeleteEnabledForDate
   */
  @javax.annotation.Nullable
  public Boolean getIsDeleteEnabledForDate() {
    return isDeleteEnabledForDate;
  }

  public void setIsDeleteEnabledForDate(Boolean isDeleteEnabledForDate) {
    this.isDeleteEnabledForDate = isDeleteEnabledForDate;
  }


  public Asset purchaseDate(LocalDate purchaseDate) {
    this.purchaseDate = purchaseDate;
    return this;
  }

  /**
   * The date the asset was purchased YYYY-MM-DD
   * @return purchaseDate
   */
  @javax.annotation.Nullable
  public LocalDate getPurchaseDate() {
    return purchaseDate;
  }

  public void setPurchaseDate(LocalDate purchaseDate) {
    this.purchaseDate = purchaseDate;
  }


  public Asset purchasePrice(Double purchasePrice) {
    this.purchasePrice = purchasePrice;
    return this;
  }

  /**
   * The purchase price of the asset
   * @return purchasePrice
   */
  @javax.annotation.Nullable
  public Double getPurchasePrice() {
    return purchasePrice;
  }

  public void setPurchasePrice(Double purchasePrice) {
    this.purchasePrice = purchasePrice;
  }


  public Asset serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

  /**
   * The asset&#39;s serial number
   * @return serialNumber
   */
  @javax.annotation.Nullable
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }


  public Asset warrantyExpiryDate(String warrantyExpiryDate) {
    this.warrantyExpiryDate = warrantyExpiryDate;
    return this;
  }

  /**
   * The date the asset’s warranty expires (if needed) YYYY-MM-DD
   * @return warrantyExpiryDate
   */
  @javax.annotation.Nullable
  public String getWarrantyExpiryDate() {
    return warrantyExpiryDate;
  }

  public void setWarrantyExpiryDate(String warrantyExpiryDate) {
    this.warrantyExpiryDate = warrantyExpiryDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Asset asset = (Asset) o;
    return Objects.equals(this.accountingBookValue, asset.accountingBookValue) &&
        Objects.equals(this.assetId, asset.assetId) &&
        Objects.equals(this.assetName, asset.assetName) &&
        Objects.equals(this.assetNumber, asset.assetNumber) &&
        Objects.equals(this.assetStatus, asset.assetStatus) &&
        Objects.equals(this.assetTypeId, asset.assetTypeId) &&
        Objects.equals(this.bookDepreciationDetail, asset.bookDepreciationDetail) &&
        Objects.equals(this.bookDepreciationSetting, asset.bookDepreciationSetting) &&
        Objects.equals(this.canRollback, asset.canRollback) &&
        Objects.equals(this.disposalDate, asset.disposalDate) &&
        Objects.equals(this.disposalPrice, asset.disposalPrice) &&
        Objects.equals(this.isDeleteEnabledForDate, asset.isDeleteEnabledForDate) &&
        Objects.equals(this.purchaseDate, asset.purchaseDate) &&
        Objects.equals(this.purchasePrice, asset.purchasePrice) &&
        Objects.equals(this.serialNumber, asset.serialNumber) &&
        Objects.equals(this.warrantyExpiryDate, asset.warrantyExpiryDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountingBookValue, assetId, assetName, assetNumber, assetStatus, assetTypeId, bookDepreciationDetail, bookDepreciationSetting, canRollback, disposalDate, disposalPrice, isDeleteEnabledForDate, purchaseDate, purchasePrice, serialNumber, warrantyExpiryDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Asset {\n");
    sb.append("    accountingBookValue: ").append(toIndentedString(accountingBookValue)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    assetName: ").append(toIndentedString(assetName)).append("\n");
    sb.append("    assetNumber: ").append(toIndentedString(assetNumber)).append("\n");
    sb.append("    assetStatus: ").append(toIndentedString(assetStatus)).append("\n");
    sb.append("    assetTypeId: ").append(toIndentedString(assetTypeId)).append("\n");
    sb.append("    bookDepreciationDetail: ").append(toIndentedString(bookDepreciationDetail)).append("\n");
    sb.append("    bookDepreciationSetting: ").append(toIndentedString(bookDepreciationSetting)).append("\n");
    sb.append("    canRollback: ").append(toIndentedString(canRollback)).append("\n");
    sb.append("    disposalDate: ").append(toIndentedString(disposalDate)).append("\n");
    sb.append("    disposalPrice: ").append(toIndentedString(disposalPrice)).append("\n");
    sb.append("    isDeleteEnabledForDate: ").append(toIndentedString(isDeleteEnabledForDate)).append("\n");
    sb.append("    purchaseDate: ").append(toIndentedString(purchaseDate)).append("\n");
    sb.append("    purchasePrice: ").append(toIndentedString(purchasePrice)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    warrantyExpiryDate: ").append(toIndentedString(warrantyExpiryDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountingBookValue");
    openapiFields.add("assetId");
    openapiFields.add("assetName");
    openapiFields.add("assetNumber");
    openapiFields.add("assetStatus");
    openapiFields.add("assetTypeId");
    openapiFields.add("bookDepreciationDetail");
    openapiFields.add("bookDepreciationSetting");
    openapiFields.add("canRollback");
    openapiFields.add("disposalDate");
    openapiFields.add("disposalPrice");
    openapiFields.add("isDeleteEnabledForDate");
    openapiFields.add("purchaseDate");
    openapiFields.add("purchasePrice");
    openapiFields.add("serialNumber");
    openapiFields.add("warrantyExpiryDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("assetName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Asset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Asset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Asset is not found in the empty JSON string", Asset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Asset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Asset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Asset.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assetId") != null && !jsonObj.get("assetId").isJsonNull()) && !jsonObj.get("assetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetId").toString()));
      }
      if (!jsonObj.get("assetName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetName").toString()));
      }
      if ((jsonObj.get("assetNumber") != null && !jsonObj.get("assetNumber").isJsonNull()) && !jsonObj.get("assetNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetNumber").toString()));
      }
      // validate the optional field `assetStatus`
      if (jsonObj.get("assetStatus") != null && !jsonObj.get("assetStatus").isJsonNull()) {
        AssetStatus.validateJsonElement(jsonObj.get("assetStatus"));
      }
      if ((jsonObj.get("assetTypeId") != null && !jsonObj.get("assetTypeId").isJsonNull()) && !jsonObj.get("assetTypeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetTypeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetTypeId").toString()));
      }
      // validate the optional field `bookDepreciationDetail`
      if (jsonObj.get("bookDepreciationDetail") != null && !jsonObj.get("bookDepreciationDetail").isJsonNull()) {
        BookDepreciationDetail.validateJsonElement(jsonObj.get("bookDepreciationDetail"));
      }
      // validate the optional field `bookDepreciationSetting`
      if (jsonObj.get("bookDepreciationSetting") != null && !jsonObj.get("bookDepreciationSetting").isJsonNull()) {
        BookDepreciationSetting.validateJsonElement(jsonObj.get("bookDepreciationSetting"));
      }
      if ((jsonObj.get("serialNumber") != null && !jsonObj.get("serialNumber").isJsonNull()) && !jsonObj.get("serialNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serialNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serialNumber").toString()));
      }
      if ((jsonObj.get("warrantyExpiryDate") != null && !jsonObj.get("warrantyExpiryDate").isJsonNull()) && !jsonObj.get("warrantyExpiryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warrantyExpiryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warrantyExpiryDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Asset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Asset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Asset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Asset.class));

       return (TypeAdapter<T>) new TypeAdapter<Asset>() {
           @Override
           public void write(JsonWriter out, Asset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Asset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Asset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Asset
   * @throws IOException if the JSON string is invalid with respect to Asset
   */
  public static Asset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Asset.class);
  }

  /**
   * Convert an instance of Asset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

