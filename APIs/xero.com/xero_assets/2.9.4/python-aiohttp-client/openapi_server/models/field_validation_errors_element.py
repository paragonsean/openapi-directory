# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FieldValidationErrorsElement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detail: str=None, field_name: str=None, localised_message: str=None, title: str=None, type: str=None, value_provided: str=None):
        """FieldValidationErrorsElement - a model defined in OpenAPI

        :param detail: The detail of this FieldValidationErrorsElement.
        :param field_name: The field_name of this FieldValidationErrorsElement.
        :param localised_message: The localised_message of this FieldValidationErrorsElement.
        :param title: The title of this FieldValidationErrorsElement.
        :param type: The type of this FieldValidationErrorsElement.
        :param value_provided: The value_provided of this FieldValidationErrorsElement.
        """
        self.openapi_types = {
            'detail': str,
            'field_name': str,
            'localised_message': str,
            'title': str,
            'type': str,
            'value_provided': str
        }

        self.attribute_map = {
            'detail': 'detail',
            'field_name': 'fieldName',
            'localised_message': 'localisedMessage',
            'title': 'title',
            'type': 'type',
            'value_provided': 'valueProvided'
        }

        self._detail = detail
        self._field_name = field_name
        self._localised_message = localised_message
        self._title = title
        self._type = type
        self._value_provided = value_provided

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldValidationErrorsElement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldValidationErrorsElement of this FieldValidationErrorsElement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detail(self):
        """Gets the detail of this FieldValidationErrorsElement.

        Detail of the field validation error

        :return: The detail of this FieldValidationErrorsElement.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this FieldValidationErrorsElement.

        Detail of the field validation error

        :param detail: The detail of this FieldValidationErrorsElement.
        :type detail: str
        """

        self._detail = detail

    @property
    def field_name(self):
        """Gets the field_name of this FieldValidationErrorsElement.

        The field name of the erroneous field

        :return: The field_name of this FieldValidationErrorsElement.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this FieldValidationErrorsElement.

        The field name of the erroneous field

        :param field_name: The field_name of this FieldValidationErrorsElement.
        :type field_name: str
        """

        self._field_name = field_name

    @property
    def localised_message(self):
        """Gets the localised_message of this FieldValidationErrorsElement.

        Explanation of the field validation error

        :return: The localised_message of this FieldValidationErrorsElement.
        :rtype: str
        """
        return self._localised_message

    @localised_message.setter
    def localised_message(self, localised_message):
        """Sets the localised_message of this FieldValidationErrorsElement.

        Explanation of the field validation error

        :param localised_message: The localised_message of this FieldValidationErrorsElement.
        :type localised_message: str
        """

        self._localised_message = localised_message

    @property
    def title(self):
        """Gets the title of this FieldValidationErrorsElement.

        Title of the field validation error

        :return: The title of this FieldValidationErrorsElement.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this FieldValidationErrorsElement.

        Title of the field validation error

        :param title: The title of this FieldValidationErrorsElement.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this FieldValidationErrorsElement.

        Internal type of the field validation error message

        :return: The type of this FieldValidationErrorsElement.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FieldValidationErrorsElement.

        Internal type of the field validation error message

        :param type: The type of this FieldValidationErrorsElement.
        :type type: str
        """

        self._type = type

    @property
    def value_provided(self):
        """Gets the value_provided of this FieldValidationErrorsElement.

        The provided value

        :return: The value_provided of this FieldValidationErrorsElement.
        :rtype: str
        """
        return self._value_provided

    @value_provided.setter
    def value_provided(self, value_provided):
        """Sets the value_provided of this FieldValidationErrorsElement.

        The provided value

        :param value_provided: The value_provided of this FieldValidationErrorsElement.
        :type value_provided: str
        """

        self._value_provided = value_provided
