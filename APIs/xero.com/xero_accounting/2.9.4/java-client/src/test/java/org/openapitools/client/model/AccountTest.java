/*
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.AccountType;
import org.openapitools.client.model.CurrencyCode;
import org.openapitools.client.model.ValidationError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Account
 */
public class AccountTest {
    private final Account model = new Account();

    /**
     * Model tests for Account
     */
    @Test
    public void testAccount() {
        // TODO: test Account
    }

    /**
     * Test the property 'accountID'
     */
    @Test
    public void accountIDTest() {
        // TODO: test accountID
    }

    /**
     * Test the property 'addToWatchlist'
     */
    @Test
    public void addToWatchlistTest() {
        // TODO: test addToWatchlist
    }

    /**
     * Test the property 'bankAccountNumber'
     */
    @Test
    public void bankAccountNumberTest() {
        // TODO: test bankAccountNumber
    }

    /**
     * Test the property 'bankAccountType'
     */
    @Test
    public void bankAccountTypeTest() {
        // TODO: test bankAccountType
    }

    /**
     * Test the property 'propertyClass'
     */
    @Test
    public void propertyClassTest() {
        // TODO: test propertyClass
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'enablePaymentsToAccount'
     */
    @Test
    public void enablePaymentsToAccountTest() {
        // TODO: test enablePaymentsToAccount
    }

    /**
     * Test the property 'hasAttachments'
     */
    @Test
    public void hasAttachmentsTest() {
        // TODO: test hasAttachments
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'reportingCode'
     */
    @Test
    public void reportingCodeTest() {
        // TODO: test reportingCode
    }

    /**
     * Test the property 'reportingCodeName'
     */
    @Test
    public void reportingCodeNameTest() {
        // TODO: test reportingCodeName
    }

    /**
     * Test the property 'showInExpenseClaims'
     */
    @Test
    public void showInExpenseClaimsTest() {
        // TODO: test showInExpenseClaims
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'systemAccount'
     */
    @Test
    public void systemAccountTest() {
        // TODO: test systemAccount
    }

    /**
     * Test the property 'taxType'
     */
    @Test
    public void taxTypeTest() {
        // TODO: test taxType
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'updatedDateUTC'
     */
    @Test
    public void updatedDateUTCTest() {
        // TODO: test updatedDateUTC
    }

    /**
     * Test the property 'validationErrors'
     */
    @Test
    public void validationErrorsTest() {
        // TODO: test validationErrors
    }

}
