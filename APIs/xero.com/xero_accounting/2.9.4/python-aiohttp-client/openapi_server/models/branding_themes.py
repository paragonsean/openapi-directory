# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.branding_theme import BrandingTheme
from openapi_server import util


class BrandingThemes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, branding_themes: List[BrandingTheme]=None):
        """BrandingThemes - a model defined in OpenAPI

        :param branding_themes: The branding_themes of this BrandingThemes.
        """
        self.openapi_types = {
            'branding_themes': List[BrandingTheme]
        }

        self.attribute_map = {
            'branding_themes': 'BrandingThemes'
        }

        self._branding_themes = branding_themes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BrandingThemes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BrandingThemes of this BrandingThemes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def branding_themes(self):
        """Gets the branding_themes of this BrandingThemes.


        :return: The branding_themes of this BrandingThemes.
        :rtype: List[BrandingTheme]
        """
        return self._branding_themes

    @branding_themes.setter
    def branding_themes(self, branding_themes):
        """Sets the branding_themes of this BrandingThemes.


        :param branding_themes: The branding_themes of this BrandingThemes.
        :type branding_themes: List[BrandingTheme]
        """

        self._branding_themes = branding_themes
