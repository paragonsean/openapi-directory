# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.validation_error import ValidationError
from openapi_server import util


class Element(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bank_transaction_id: str=None, batch_payment_id: str=None, contact_id: str=None, credit_note_id: str=None, invoice_id: str=None, item_id: str=None, purchase_order_id: str=None, validation_errors: List[ValidationError]=None):
        """Element - a model defined in OpenAPI

        :param bank_transaction_id: The bank_transaction_id of this Element.
        :param batch_payment_id: The batch_payment_id of this Element.
        :param contact_id: The contact_id of this Element.
        :param credit_note_id: The credit_note_id of this Element.
        :param invoice_id: The invoice_id of this Element.
        :param item_id: The item_id of this Element.
        :param purchase_order_id: The purchase_order_id of this Element.
        :param validation_errors: The validation_errors of this Element.
        """
        self.openapi_types = {
            'bank_transaction_id': str,
            'batch_payment_id': str,
            'contact_id': str,
            'credit_note_id': str,
            'invoice_id': str,
            'item_id': str,
            'purchase_order_id': str,
            'validation_errors': List[ValidationError]
        }

        self.attribute_map = {
            'bank_transaction_id': 'BankTransactionID',
            'batch_payment_id': 'BatchPaymentID',
            'contact_id': 'ContactID',
            'credit_note_id': 'CreditNoteID',
            'invoice_id': 'InvoiceID',
            'item_id': 'ItemID',
            'purchase_order_id': 'PurchaseOrderID',
            'validation_errors': 'ValidationErrors'
        }

        self._bank_transaction_id = bank_transaction_id
        self._batch_payment_id = batch_payment_id
        self._contact_id = contact_id
        self._credit_note_id = credit_note_id
        self._invoice_id = invoice_id
        self._item_id = item_id
        self._purchase_order_id = purchase_order_id
        self._validation_errors = validation_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Element':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Element of this Element.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bank_transaction_id(self):
        """Gets the bank_transaction_id of this Element.


        :return: The bank_transaction_id of this Element.
        :rtype: str
        """
        return self._bank_transaction_id

    @bank_transaction_id.setter
    def bank_transaction_id(self, bank_transaction_id):
        """Sets the bank_transaction_id of this Element.


        :param bank_transaction_id: The bank_transaction_id of this Element.
        :type bank_transaction_id: str
        """

        self._bank_transaction_id = bank_transaction_id

    @property
    def batch_payment_id(self):
        """Gets the batch_payment_id of this Element.

        Unique ID for batch payment object with validation error

        :return: The batch_payment_id of this Element.
        :rtype: str
        """
        return self._batch_payment_id

    @batch_payment_id.setter
    def batch_payment_id(self, batch_payment_id):
        """Sets the batch_payment_id of this Element.

        Unique ID for batch payment object with validation error

        :param batch_payment_id: The batch_payment_id of this Element.
        :type batch_payment_id: str
        """

        self._batch_payment_id = batch_payment_id

    @property
    def contact_id(self):
        """Gets the contact_id of this Element.


        :return: The contact_id of this Element.
        :rtype: str
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this Element.


        :param contact_id: The contact_id of this Element.
        :type contact_id: str
        """

        self._contact_id = contact_id

    @property
    def credit_note_id(self):
        """Gets the credit_note_id of this Element.


        :return: The credit_note_id of this Element.
        :rtype: str
        """
        return self._credit_note_id

    @credit_note_id.setter
    def credit_note_id(self, credit_note_id):
        """Sets the credit_note_id of this Element.


        :param credit_note_id: The credit_note_id of this Element.
        :type credit_note_id: str
        """

        self._credit_note_id = credit_note_id

    @property
    def invoice_id(self):
        """Gets the invoice_id of this Element.


        :return: The invoice_id of this Element.
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this Element.


        :param invoice_id: The invoice_id of this Element.
        :type invoice_id: str
        """

        self._invoice_id = invoice_id

    @property
    def item_id(self):
        """Gets the item_id of this Element.


        :return: The item_id of this Element.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this Element.


        :param item_id: The item_id of this Element.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def purchase_order_id(self):
        """Gets the purchase_order_id of this Element.


        :return: The purchase_order_id of this Element.
        :rtype: str
        """
        return self._purchase_order_id

    @purchase_order_id.setter
    def purchase_order_id(self, purchase_order_id):
        """Sets the purchase_order_id of this Element.


        :param purchase_order_id: The purchase_order_id of this Element.
        :type purchase_order_id: str
        """

        self._purchase_order_id = purchase_order_id

    @property
    def validation_errors(self):
        """Gets the validation_errors of this Element.

        Array of Validation Error message

        :return: The validation_errors of this Element.
        :rtype: List[ValidationError]
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this Element.

        Array of Validation Error message

        :param validation_errors: The validation_errors of this Element.
        :type validation_errors: List[ValidationError]
        """

        self._validation_errors = validation_errors
