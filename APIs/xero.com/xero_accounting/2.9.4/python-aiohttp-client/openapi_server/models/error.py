# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.element import Element
from openapi_server import util


class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, elements: List[Element]=None, error_number: int=None, message: str=None, type: str=None):
        """Error - a model defined in OpenAPI

        :param elements: The elements of this Error.
        :param error_number: The error_number of this Error.
        :param message: The message of this Error.
        :param type: The type of this Error.
        """
        self.openapi_types = {
            'elements': List[Element],
            'error_number': int,
            'message': str,
            'type': str
        }

        self.attribute_map = {
            'elements': 'Elements',
            'error_number': 'ErrorNumber',
            'message': 'Message',
            'type': 'Type'
        }

        self._elements = elements
        self._error_number = error_number
        self._message = message
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Error of this Error.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def elements(self):
        """Gets the elements of this Error.

        Array of Elements of validation Errors

        :return: The elements of this Error.
        :rtype: List[Element]
        """
        return self._elements

    @elements.setter
    def elements(self, elements):
        """Sets the elements of this Error.

        Array of Elements of validation Errors

        :param elements: The elements of this Error.
        :type elements: List[Element]
        """

        self._elements = elements

    @property
    def error_number(self):
        """Gets the error_number of this Error.

        Exception number

        :return: The error_number of this Error.
        :rtype: int
        """
        return self._error_number

    @error_number.setter
    def error_number(self, error_number):
        """Sets the error_number of this Error.

        Exception number

        :param error_number: The error_number of this Error.
        :type error_number: int
        """

        self._error_number = error_number

    @property
    def message(self):
        """Gets the message of this Error.

        Exception message

        :return: The message of this Error.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Error.

        Exception message

        :param message: The message of this Error.
        :type message: str
        """

        self._message = message

    @property
    def type(self):
        """Gets the type of this Error.

        Exception type

        :return: The type of this Error.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Error.

        Exception type

        :param type: The type of this Error.
        :type type: str
        """

        self._type = type
