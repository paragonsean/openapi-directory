# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bank_transaction import BankTransaction
from openapi_server import util


class BankTransactions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bank_transactions: List[BankTransaction]=None):
        """BankTransactions - a model defined in OpenAPI

        :param bank_transactions: The bank_transactions of this BankTransactions.
        """
        self.openapi_types = {
            'bank_transactions': List[BankTransaction]
        }

        self.attribute_map = {
            'bank_transactions': 'BankTransactions'
        }

        self._bank_transactions = bank_transactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BankTransactions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BankTransactions of this BankTransactions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bank_transactions(self):
        """Gets the bank_transactions of this BankTransactions.


        :return: The bank_transactions of this BankTransactions.
        :rtype: List[BankTransaction]
        """
        return self._bank_transactions

    @bank_transactions.setter
    def bank_transactions(self, bank_transactions):
        """Sets the bank_transactions of this BankTransactions.


        :param bank_transactions: The bank_transactions of this BankTransactions.
        :type bank_transactions: List[BankTransaction]
        """

        self._bank_transactions = bank_transactions
