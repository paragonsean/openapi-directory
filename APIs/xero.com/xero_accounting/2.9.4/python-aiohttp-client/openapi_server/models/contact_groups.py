# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_group import ContactGroup
from openapi_server import util


class ContactGroups(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_groups: List[ContactGroup]=None):
        """ContactGroups - a model defined in OpenAPI

        :param contact_groups: The contact_groups of this ContactGroups.
        """
        self.openapi_types = {
            'contact_groups': List[ContactGroup]
        }

        self.attribute_map = {
            'contact_groups': 'ContactGroups'
        }

        self._contact_groups = contact_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactGroups':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactGroups of this ContactGroups.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_groups(self):
        """Gets the contact_groups of this ContactGroups.


        :return: The contact_groups of this ContactGroups.
        :rtype: List[ContactGroup]
        """
        return self._contact_groups

    @contact_groups.setter
    def contact_groups(self, contact_groups):
        """Sets the contact_groups of this ContactGroups.


        :param contact_groups: The contact_groups of this ContactGroups.
        :type contact_groups: List[ContactGroup]
        """

        self._contact_groups = contact_groups
