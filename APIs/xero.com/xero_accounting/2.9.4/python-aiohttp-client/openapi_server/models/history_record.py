# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HistoryRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changes: str=None, date_utc: str=None, details: str=None, user: str=None):
        """HistoryRecord - a model defined in OpenAPI

        :param changes: The changes of this HistoryRecord.
        :param date_utc: The date_utc of this HistoryRecord.
        :param details: The details of this HistoryRecord.
        :param user: The user of this HistoryRecord.
        """
        self.openapi_types = {
            'changes': str,
            'date_utc': str,
            'details': str,
            'user': str
        }

        self.attribute_map = {
            'changes': 'Changes',
            'date_utc': 'DateUTC',
            'details': 'Details',
            'user': 'User'
        }

        self._changes = changes
        self._date_utc = date_utc
        self._details = details
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryRecord of this HistoryRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changes(self):
        """Gets the changes of this HistoryRecord.

        Name of branding theme

        :return: The changes of this HistoryRecord.
        :rtype: str
        """
        return self._changes

    @changes.setter
    def changes(self, changes):
        """Sets the changes of this HistoryRecord.

        Name of branding theme

        :param changes: The changes of this HistoryRecord.
        :type changes: str
        """

        self._changes = changes

    @property
    def date_utc(self):
        """Gets the date_utc of this HistoryRecord.

        UTC timestamp of creation date of branding theme

        :return: The date_utc of this HistoryRecord.
        :rtype: str
        """
        return self._date_utc

    @date_utc.setter
    def date_utc(self, date_utc):
        """Sets the date_utc of this HistoryRecord.

        UTC timestamp of creation date of branding theme

        :param date_utc: The date_utc of this HistoryRecord.
        :type date_utc: str
        """

        self._date_utc = date_utc

    @property
    def details(self):
        """Gets the details of this HistoryRecord.

        details

        :return: The details of this HistoryRecord.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this HistoryRecord.

        details

        :param details: The details of this HistoryRecord.
        :type details: str
        """

        self._details = details

    @property
    def user(self):
        """Gets the user of this HistoryRecord.

        has a value of 0

        :return: The user of this HistoryRecord.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this HistoryRecord.

        has a value of 0

        :param user: The user of this HistoryRecord.
        :type user: str
        """

        self._user = user
