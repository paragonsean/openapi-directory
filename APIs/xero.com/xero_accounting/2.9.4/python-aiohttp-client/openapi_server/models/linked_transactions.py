# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.linked_transaction import LinkedTransaction
from openapi_server import util


class LinkedTransactions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, linked_transactions: List[LinkedTransaction]=None):
        """LinkedTransactions - a model defined in OpenAPI

        :param linked_transactions: The linked_transactions of this LinkedTransactions.
        """
        self.openapi_types = {
            'linked_transactions': List[LinkedTransaction]
        }

        self.attribute_map = {
            'linked_transactions': 'LinkedTransactions'
        }

        self._linked_transactions = linked_transactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedTransactions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedTransactions of this LinkedTransactions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linked_transactions(self):
        """Gets the linked_transactions of this LinkedTransactions.


        :return: The linked_transactions of this LinkedTransactions.
        :rtype: List[LinkedTransaction]
        """
        return self._linked_transactions

    @linked_transactions.setter
    def linked_transactions(self, linked_transactions):
        """Sets the linked_transactions of this LinkedTransactions.


        :param linked_transactions: The linked_transactions of this LinkedTransactions.
        :type linked_transactions: List[LinkedTransaction]
        """

        self._linked_transactions = linked_transactions
