# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.expense_claim import ExpenseClaim
from openapi_server import util


class ExpenseClaims(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expense_claims: List[ExpenseClaim]=None):
        """ExpenseClaims - a model defined in OpenAPI

        :param expense_claims: The expense_claims of this ExpenseClaims.
        """
        self.openapi_types = {
            'expense_claims': List[ExpenseClaim]
        }

        self.attribute_map = {
            'expense_claims': 'ExpenseClaims'
        }

        self._expense_claims = expense_claims

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExpenseClaims':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExpenseClaims of this ExpenseClaims.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expense_claims(self):
        """Gets the expense_claims of this ExpenseClaims.


        :return: The expense_claims of this ExpenseClaims.
        :rtype: List[ExpenseClaim]
        """
        return self._expense_claims

    @expense_claims.setter
    def expense_claims(self, expense_claims):
        """Sets the expense_claims of this ExpenseClaims.


        :param expense_claims: The expense_claims of this ExpenseClaims.
        :type expense_claims: List[ExpenseClaim]
        """

        self._expense_claims = expense_claims
