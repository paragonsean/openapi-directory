# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repeating_invoice import RepeatingInvoice
from openapi_server import util


class RepeatingInvoices(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, repeating_invoices: List[RepeatingInvoice]=None):
        """RepeatingInvoices - a model defined in OpenAPI

        :param repeating_invoices: The repeating_invoices of this RepeatingInvoices.
        """
        self.openapi_types = {
            'repeating_invoices': List[RepeatingInvoice]
        }

        self.attribute_map = {
            'repeating_invoices': 'RepeatingInvoices'
        }

        self._repeating_invoices = repeating_invoices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepeatingInvoices':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepeatingInvoices of this RepeatingInvoices.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def repeating_invoices(self):
        """Gets the repeating_invoices of this RepeatingInvoices.


        :return: The repeating_invoices of this RepeatingInvoices.
        :rtype: List[RepeatingInvoice]
        """
        return self._repeating_invoices

    @repeating_invoices.setter
    def repeating_invoices(self, repeating_invoices):
        """Sets the repeating_invoices of this RepeatingInvoices.


        :param repeating_invoices: The repeating_invoices of this RepeatingInvoices.
        :type repeating_invoices: List[RepeatingInvoice]
        """

        self._repeating_invoices = repeating_invoices
