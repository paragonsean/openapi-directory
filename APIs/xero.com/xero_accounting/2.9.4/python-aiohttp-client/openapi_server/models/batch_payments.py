# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_payment import BatchPayment
from openapi_server import util


class BatchPayments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_payments: List[BatchPayment]=None):
        """BatchPayments - a model defined in OpenAPI

        :param batch_payments: The batch_payments of this BatchPayments.
        """
        self.openapi_types = {
            'batch_payments': List[BatchPayment]
        }

        self.attribute_map = {
            'batch_payments': 'BatchPayments'
        }

        self._batch_payments = batch_payments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchPayments':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchPayments of this BatchPayments.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_payments(self):
        """Gets the batch_payments of this BatchPayments.


        :return: The batch_payments of this BatchPayments.
        :rtype: List[BatchPayment]
        """
        return self._batch_payments

    @batch_payments.setter
    def batch_payments(self, batch_payments):
        """Sets the batch_payments of this BatchPayments.


        :param batch_payments: The batch_payments of this BatchPayments.
        :type batch_payments: List[BatchPayment]
        """

        self._batch_payments = batch_payments
