/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaxRate.h
 *
 * 
 */

#ifndef OAITaxRate_H
#define OAITaxRate_H

#include <QJsonObject>

#include "OAITaxComponent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITaxComponent;

class OAITaxRate : public OAIObject {
public:
    OAITaxRate();
    OAITaxRate(QString json);
    ~OAITaxRate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanApplyToAssets() const;
    void setCanApplyToAssets(const bool &can_apply_to_assets);
    bool is_can_apply_to_assets_Set() const;
    bool is_can_apply_to_assets_Valid() const;

    bool isCanApplyToEquity() const;
    void setCanApplyToEquity(const bool &can_apply_to_equity);
    bool is_can_apply_to_equity_Set() const;
    bool is_can_apply_to_equity_Valid() const;

    bool isCanApplyToExpenses() const;
    void setCanApplyToExpenses(const bool &can_apply_to_expenses);
    bool is_can_apply_to_expenses_Set() const;
    bool is_can_apply_to_expenses_Valid() const;

    bool isCanApplyToLiabilities() const;
    void setCanApplyToLiabilities(const bool &can_apply_to_liabilities);
    bool is_can_apply_to_liabilities_Set() const;
    bool is_can_apply_to_liabilities_Valid() const;

    bool isCanApplyToRevenue() const;
    void setCanApplyToRevenue(const bool &can_apply_to_revenue);
    bool is_can_apply_to_revenue_Set() const;
    bool is_can_apply_to_revenue_Valid() const;

    double getDisplayTaxRate() const;
    void setDisplayTaxRate(const double &display_tax_rate);
    bool is_display_tax_rate_Set() const;
    bool is_display_tax_rate_Valid() const;

    double getEffectiveRate() const;
    void setEffectiveRate(const double &effective_rate);
    bool is_effective_rate_Set() const;
    bool is_effective_rate_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReportTaxType() const;
    void setReportTaxType(const QString &report_tax_type);
    bool is_report_tax_type_Set() const;
    bool is_report_tax_type_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAITaxComponent> getTaxComponents() const;
    void setTaxComponents(const QList<OAITaxComponent> &tax_components);
    bool is_tax_components_Set() const;
    bool is_tax_components_Valid() const;

    QString getTaxType() const;
    void setTaxType(const QString &tax_type);
    bool is_tax_type_Set() const;
    bool is_tax_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_apply_to_assets;
    bool m_can_apply_to_assets_isSet;
    bool m_can_apply_to_assets_isValid;

    bool m_can_apply_to_equity;
    bool m_can_apply_to_equity_isSet;
    bool m_can_apply_to_equity_isValid;

    bool m_can_apply_to_expenses;
    bool m_can_apply_to_expenses_isSet;
    bool m_can_apply_to_expenses_isValid;

    bool m_can_apply_to_liabilities;
    bool m_can_apply_to_liabilities_isSet;
    bool m_can_apply_to_liabilities_isValid;

    bool m_can_apply_to_revenue;
    bool m_can_apply_to_revenue_isSet;
    bool m_can_apply_to_revenue_isValid;

    double m_display_tax_rate;
    bool m_display_tax_rate_isSet;
    bool m_display_tax_rate_isValid;

    double m_effective_rate;
    bool m_effective_rate_isSet;
    bool m_effective_rate_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_report_tax_type;
    bool m_report_tax_type_isSet;
    bool m_report_tax_type_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAITaxComponent> m_tax_components;
    bool m_tax_components_isSet;
    bool m_tax_components_isValid;

    QString m_tax_type;
    bool m_tax_type_isSet;
    bool m_tax_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaxRate)

#endif // OAITaxRate_H
