/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJournalLine.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJournalLine::OAIJournalLine(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJournalLine::OAIJournalLine() {
    this->initializeModel();
}

OAIJournalLine::~OAIJournalLine() {}

void OAIJournalLine::initializeModel() {

    m_account_code_isSet = false;
    m_account_code_isValid = false;

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_account_type_isSet = false;
    m_account_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_gross_amount_isSet = false;
    m_gross_amount_isValid = false;

    m_journal_line_id_isSet = false;
    m_journal_line_id_isValid = false;

    m_net_amount_isSet = false;
    m_net_amount_isValid = false;

    m_tax_amount_isSet = false;
    m_tax_amount_isValid = false;

    m_tax_name_isSet = false;
    m_tax_name_isValid = false;

    m_tax_type_isSet = false;
    m_tax_type_isValid = false;

    m_tracking_categories_isSet = false;
    m_tracking_categories_isValid = false;
}

void OAIJournalLine::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJournalLine::fromJsonObject(QJsonObject json) {

    m_account_code_isValid = ::OpenAPI::fromJsonValue(m_account_code, json[QString("AccountCode")]);
    m_account_code_isSet = !json[QString("AccountCode")].isNull() && m_account_code_isValid;

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("AccountID")]);
    m_account_id_isSet = !json[QString("AccountID")].isNull() && m_account_id_isValid;

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("AccountName")]);
    m_account_name_isSet = !json[QString("AccountName")].isNull() && m_account_name_isValid;

    m_account_type_isValid = ::OpenAPI::fromJsonValue(m_account_type, json[QString("AccountType")]);
    m_account_type_isSet = !json[QString("AccountType")].isNull() && m_account_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_gross_amount_isValid = ::OpenAPI::fromJsonValue(m_gross_amount, json[QString("GrossAmount")]);
    m_gross_amount_isSet = !json[QString("GrossAmount")].isNull() && m_gross_amount_isValid;

    m_journal_line_id_isValid = ::OpenAPI::fromJsonValue(m_journal_line_id, json[QString("JournalLineID")]);
    m_journal_line_id_isSet = !json[QString("JournalLineID")].isNull() && m_journal_line_id_isValid;

    m_net_amount_isValid = ::OpenAPI::fromJsonValue(m_net_amount, json[QString("NetAmount")]);
    m_net_amount_isSet = !json[QString("NetAmount")].isNull() && m_net_amount_isValid;

    m_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_tax_amount, json[QString("TaxAmount")]);
    m_tax_amount_isSet = !json[QString("TaxAmount")].isNull() && m_tax_amount_isValid;

    m_tax_name_isValid = ::OpenAPI::fromJsonValue(m_tax_name, json[QString("TaxName")]);
    m_tax_name_isSet = !json[QString("TaxName")].isNull() && m_tax_name_isValid;

    m_tax_type_isValid = ::OpenAPI::fromJsonValue(m_tax_type, json[QString("TaxType")]);
    m_tax_type_isSet = !json[QString("TaxType")].isNull() && m_tax_type_isValid;

    m_tracking_categories_isValid = ::OpenAPI::fromJsonValue(m_tracking_categories, json[QString("TrackingCategories")]);
    m_tracking_categories_isSet = !json[QString("TrackingCategories")].isNull() && m_tracking_categories_isValid;
}

QString OAIJournalLine::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJournalLine::asJsonObject() const {
    QJsonObject obj;
    if (m_account_code_isSet) {
        obj.insert(QString("AccountCode"), ::OpenAPI::toJsonValue(m_account_code));
    }
    if (m_account_id_isSet) {
        obj.insert(QString("AccountID"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_account_name_isSet) {
        obj.insert(QString("AccountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_account_type.isSet()) {
        obj.insert(QString("AccountType"), ::OpenAPI::toJsonValue(m_account_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_gross_amount_isSet) {
        obj.insert(QString("GrossAmount"), ::OpenAPI::toJsonValue(m_gross_amount));
    }
    if (m_journal_line_id_isSet) {
        obj.insert(QString("JournalLineID"), ::OpenAPI::toJsonValue(m_journal_line_id));
    }
    if (m_net_amount_isSet) {
        obj.insert(QString("NetAmount"), ::OpenAPI::toJsonValue(m_net_amount));
    }
    if (m_tax_amount_isSet) {
        obj.insert(QString("TaxAmount"), ::OpenAPI::toJsonValue(m_tax_amount));
    }
    if (m_tax_name_isSet) {
        obj.insert(QString("TaxName"), ::OpenAPI::toJsonValue(m_tax_name));
    }
    if (m_tax_type_isSet) {
        obj.insert(QString("TaxType"), ::OpenAPI::toJsonValue(m_tax_type));
    }
    if (m_tracking_categories.size() > 0) {
        obj.insert(QString("TrackingCategories"), ::OpenAPI::toJsonValue(m_tracking_categories));
    }
    return obj;
}

QString OAIJournalLine::getAccountCode() const {
    return m_account_code;
}
void OAIJournalLine::setAccountCode(const QString &account_code) {
    m_account_code = account_code;
    m_account_code_isSet = true;
}

bool OAIJournalLine::is_account_code_Set() const{
    return m_account_code_isSet;
}

bool OAIJournalLine::is_account_code_Valid() const{
    return m_account_code_isValid;
}

QString OAIJournalLine::getAccountId() const {
    return m_account_id;
}
void OAIJournalLine::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIJournalLine::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIJournalLine::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIJournalLine::getAccountName() const {
    return m_account_name;
}
void OAIJournalLine::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIJournalLine::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIJournalLine::is_account_name_Valid() const{
    return m_account_name_isValid;
}

OAIAccountType OAIJournalLine::getAccountType() const {
    return m_account_type;
}
void OAIJournalLine::setAccountType(const OAIAccountType &account_type) {
    m_account_type = account_type;
    m_account_type_isSet = true;
}

bool OAIJournalLine::is_account_type_Set() const{
    return m_account_type_isSet;
}

bool OAIJournalLine::is_account_type_Valid() const{
    return m_account_type_isValid;
}

QString OAIJournalLine::getDescription() const {
    return m_description;
}
void OAIJournalLine::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIJournalLine::is_description_Set() const{
    return m_description_isSet;
}

bool OAIJournalLine::is_description_Valid() const{
    return m_description_isValid;
}

double OAIJournalLine::getGrossAmount() const {
    return m_gross_amount;
}
void OAIJournalLine::setGrossAmount(const double &gross_amount) {
    m_gross_amount = gross_amount;
    m_gross_amount_isSet = true;
}

bool OAIJournalLine::is_gross_amount_Set() const{
    return m_gross_amount_isSet;
}

bool OAIJournalLine::is_gross_amount_Valid() const{
    return m_gross_amount_isValid;
}

QString OAIJournalLine::getJournalLineId() const {
    return m_journal_line_id;
}
void OAIJournalLine::setJournalLineId(const QString &journal_line_id) {
    m_journal_line_id = journal_line_id;
    m_journal_line_id_isSet = true;
}

bool OAIJournalLine::is_journal_line_id_Set() const{
    return m_journal_line_id_isSet;
}

bool OAIJournalLine::is_journal_line_id_Valid() const{
    return m_journal_line_id_isValid;
}

double OAIJournalLine::getNetAmount() const {
    return m_net_amount;
}
void OAIJournalLine::setNetAmount(const double &net_amount) {
    m_net_amount = net_amount;
    m_net_amount_isSet = true;
}

bool OAIJournalLine::is_net_amount_Set() const{
    return m_net_amount_isSet;
}

bool OAIJournalLine::is_net_amount_Valid() const{
    return m_net_amount_isValid;
}

double OAIJournalLine::getTaxAmount() const {
    return m_tax_amount;
}
void OAIJournalLine::setTaxAmount(const double &tax_amount) {
    m_tax_amount = tax_amount;
    m_tax_amount_isSet = true;
}

bool OAIJournalLine::is_tax_amount_Set() const{
    return m_tax_amount_isSet;
}

bool OAIJournalLine::is_tax_amount_Valid() const{
    return m_tax_amount_isValid;
}

QString OAIJournalLine::getTaxName() const {
    return m_tax_name;
}
void OAIJournalLine::setTaxName(const QString &tax_name) {
    m_tax_name = tax_name;
    m_tax_name_isSet = true;
}

bool OAIJournalLine::is_tax_name_Set() const{
    return m_tax_name_isSet;
}

bool OAIJournalLine::is_tax_name_Valid() const{
    return m_tax_name_isValid;
}

QString OAIJournalLine::getTaxType() const {
    return m_tax_type;
}
void OAIJournalLine::setTaxType(const QString &tax_type) {
    m_tax_type = tax_type;
    m_tax_type_isSet = true;
}

bool OAIJournalLine::is_tax_type_Set() const{
    return m_tax_type_isSet;
}

bool OAIJournalLine::is_tax_type_Valid() const{
    return m_tax_type_isValid;
}

QList<OAITrackingCategory> OAIJournalLine::getTrackingCategories() const {
    return m_tracking_categories;
}
void OAIJournalLine::setTrackingCategories(const QList<OAITrackingCategory> &tracking_categories) {
    m_tracking_categories = tracking_categories;
    m_tracking_categories_isSet = true;
}

bool OAIJournalLine::is_tracking_categories_Set() const{
    return m_tracking_categories_isSet;
}

bool OAIJournalLine::is_tracking_categories_Valid() const{
    return m_tracking_categories_isValid;
}

bool OAIJournalLine::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_journal_line_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJournalLine::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
