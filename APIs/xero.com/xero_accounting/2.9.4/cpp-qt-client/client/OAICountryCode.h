/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICountryCode.h
 *
 * 
 */

#ifndef OAICountryCode_H
#define OAICountryCode_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICountryCode : public OAIEnum {
public:
    OAICountryCode();
    OAICountryCode(QString json);
    ~OAICountryCode() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAICountryCode {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        AD, 
        AE, 
        AF, 
        AG, 
        AI, 
        AL, 
        AM, 
        AN, 
        AO, 
        AQ, 
        AR, 
        AS, 
        AT, 
        AU, 
        AW, 
        AZ, 
        BA, 
        BB, 
        BD, 
        BE, 
        BF, 
        BG, 
        BH, 
        BI, 
        BJ, 
        BL, 
        BM, 
        BN, 
        BO, 
        BR, 
        BS, 
        BT, 
        BW, 
        BY, 
        BZ, 
        CA, 
        CC, 
        CD, 
        CF, 
        CG, 
        CH, 
        CI, 
        CK, 
        CL, 
        CM, 
        CN, 
        CO, 
        CR, 
        CU, 
        CV, 
        CW, 
        CX, 
        CY, 
        CZ, 
        DE, 
        DJ, 
        DK, 
        DM, 
        DO, 
        DZ, 
        EC, 
        EE, 
        EG, 
        EH, 
        ER, 
        ES, 
        ET, 
        FI, 
        FJ, 
        FK, 
        FM, 
        FO, 
        FR, 
        GA, 
        GB, 
        GD, 
        GE, 
        GG, 
        GH, 
        GI, 
        GL, 
        GM, 
        GN, 
        GQ, 
        GR, 
        GT, 
        GU, 
        GW, 
        GY, 
        HK, 
        HN, 
        HR, 
        HT, 
        HU, 
        ID, 
        IE, 
        IL, 
        IM, 
        IN, 
        IO, 
        IQ, 
        IR, 
        IS, 
        IT, 
        JE, 
        JM, 
        JO, 
        JP, 
        KE, 
        KG, 
        KH, 
        KI, 
        KM, 
        KN, 
        KP, 
        KR, 
        KW, 
        KY, 
        KZ, 
        LA, 
        LB, 
        LC, 
        LI, 
        LK, 
        LR, 
        LS, 
        LT, 
        LU, 
        LV, 
        LY, 
        MA, 
        MC, 
        MD, 
        ME, 
        MF, 
        MG, 
        MH, 
        MK, 
        ML, 
        MM, 
        MN, 
        MO, 
        MP, 
        MR, 
        MS, 
        MT, 
        MU, 
        MV, 
        MW, 
        MX, 
        MY, 
        MZ, 
        NA, 
        NC, 
        NE, 
        NG, 
        NI, 
        NL, 
        FALSE, 
        NP, 
        NR, 
        NU, 
        NZ, 
        OM, 
        PA, 
        PE, 
        PF, 
        PG, 
        PH, 
        PK, 
        PL, 
        PM, 
        PN, 
        PR, 
        PS, 
        PT, 
        PW, 
        PY, 
        QA, 
        RE, 
        RO, 
        RS, 
        RU, 
        RW, 
        SA, 
        SB, 
        SC, 
        SD, 
        SE, 
        SG, 
        SH, 
        SI, 
        SJ, 
        SK, 
        SL, 
        SM, 
        SN, 
        SO, 
        SR, 
        SS, 
        ST, 
        SV, 
        SX, 
        SY, 
        SZ, 
        TC, 
        TD, 
        TG, 
        TH, 
        TJ, 
        TK, 
        TL, 
        TM, 
        TN, 
        TO, 
        TR, 
        TT, 
        TV, 
        TW, 
        TZ, 
        UA, 
        UG, 
        US, 
        UY, 
        UZ, 
        VA, 
        VC, 
        VE, 
        VG, 
        VI, 
        VN, 
        VU, 
        WF, 
        WS, 
        XK, 
        YE, 
        YT, 
        ZA, 
        ZM, 
        ZW
    };
    OAICountryCode::eOAICountryCode getValue() const;
    void setValue(const OAICountryCode::eOAICountryCode& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAICountryCode m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICountryCode)

#endif // OAICountryCode_H
