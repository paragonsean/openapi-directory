/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBatchPaymentDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBatchPaymentDetails::OAIBatchPaymentDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBatchPaymentDetails::OAIBatchPaymentDetails() {
    this->initializeModel();
}

OAIBatchPaymentDetails::~OAIBatchPaymentDetails() {}

void OAIBatchPaymentDetails::initializeModel() {

    m_bank_account_name_isSet = false;
    m_bank_account_name_isValid = false;

    m_bank_account_number_isSet = false;
    m_bank_account_number_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_details_isSet = false;
    m_details_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;
}

void OAIBatchPaymentDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBatchPaymentDetails::fromJsonObject(QJsonObject json) {

    m_bank_account_name_isValid = ::OpenAPI::fromJsonValue(m_bank_account_name, json[QString("BankAccountName")]);
    m_bank_account_name_isSet = !json[QString("BankAccountName")].isNull() && m_bank_account_name_isValid;

    m_bank_account_number_isValid = ::OpenAPI::fromJsonValue(m_bank_account_number, json[QString("BankAccountNumber")]);
    m_bank_account_number_isSet = !json[QString("BankAccountNumber")].isNull() && m_bank_account_number_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("Code")]);
    m_code_isSet = !json[QString("Code")].isNull() && m_code_isValid;

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("Details")]);
    m_details_isSet = !json[QString("Details")].isNull() && m_details_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("Reference")]);
    m_reference_isSet = !json[QString("Reference")].isNull() && m_reference_isValid;
}

QString OAIBatchPaymentDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBatchPaymentDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_bank_account_name_isSet) {
        obj.insert(QString("BankAccountName"), ::OpenAPI::toJsonValue(m_bank_account_name));
    }
    if (m_bank_account_number_isSet) {
        obj.insert(QString("BankAccountNumber"), ::OpenAPI::toJsonValue(m_bank_account_number));
    }
    if (m_code_isSet) {
        obj.insert(QString("Code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_details_isSet) {
        obj.insert(QString("Details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_reference_isSet) {
        obj.insert(QString("Reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    return obj;
}

QString OAIBatchPaymentDetails::getBankAccountName() const {
    return m_bank_account_name;
}
void OAIBatchPaymentDetails::setBankAccountName(const QString &bank_account_name) {
    m_bank_account_name = bank_account_name;
    m_bank_account_name_isSet = true;
}

bool OAIBatchPaymentDetails::is_bank_account_name_Set() const{
    return m_bank_account_name_isSet;
}

bool OAIBatchPaymentDetails::is_bank_account_name_Valid() const{
    return m_bank_account_name_isValid;
}

QString OAIBatchPaymentDetails::getBankAccountNumber() const {
    return m_bank_account_number;
}
void OAIBatchPaymentDetails::setBankAccountNumber(const QString &bank_account_number) {
    m_bank_account_number = bank_account_number;
    m_bank_account_number_isSet = true;
}

bool OAIBatchPaymentDetails::is_bank_account_number_Set() const{
    return m_bank_account_number_isSet;
}

bool OAIBatchPaymentDetails::is_bank_account_number_Valid() const{
    return m_bank_account_number_isValid;
}

QString OAIBatchPaymentDetails::getCode() const {
    return m_code;
}
void OAIBatchPaymentDetails::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIBatchPaymentDetails::is_code_Set() const{
    return m_code_isSet;
}

bool OAIBatchPaymentDetails::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIBatchPaymentDetails::getDetails() const {
    return m_details;
}
void OAIBatchPaymentDetails::setDetails(const QString &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAIBatchPaymentDetails::is_details_Set() const{
    return m_details_isSet;
}

bool OAIBatchPaymentDetails::is_details_Valid() const{
    return m_details_isValid;
}

QString OAIBatchPaymentDetails::getReference() const {
    return m_reference;
}
void OAIBatchPaymentDetails::setReference(const QString &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAIBatchPaymentDetails::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAIBatchPaymentDetails::is_reference_Valid() const{
    return m_reference_isValid;
}

bool OAIBatchPaymentDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBatchPaymentDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
