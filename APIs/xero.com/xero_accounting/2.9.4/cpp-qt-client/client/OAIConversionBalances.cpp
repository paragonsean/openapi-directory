/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConversionBalances.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConversionBalances::OAIConversionBalances(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConversionBalances::OAIConversionBalances() {
    this->initializeModel();
}

OAIConversionBalances::~OAIConversionBalances() {}

void OAIConversionBalances::initializeModel() {

    m_account_code_isSet = false;
    m_account_code_isValid = false;

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_balance_details_isSet = false;
    m_balance_details_isValid = false;
}

void OAIConversionBalances::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConversionBalances::fromJsonObject(QJsonObject json) {

    m_account_code_isValid = ::OpenAPI::fromJsonValue(m_account_code, json[QString("AccountCode")]);
    m_account_code_isSet = !json[QString("AccountCode")].isNull() && m_account_code_isValid;

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("Balance")]);
    m_balance_isSet = !json[QString("Balance")].isNull() && m_balance_isValid;

    m_balance_details_isValid = ::OpenAPI::fromJsonValue(m_balance_details, json[QString("BalanceDetails")]);
    m_balance_details_isSet = !json[QString("BalanceDetails")].isNull() && m_balance_details_isValid;
}

QString OAIConversionBalances::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConversionBalances::asJsonObject() const {
    QJsonObject obj;
    if (m_account_code_isSet) {
        obj.insert(QString("AccountCode"), ::OpenAPI::toJsonValue(m_account_code));
    }
    if (m_balance_isSet) {
        obj.insert(QString("Balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_balance_details.size() > 0) {
        obj.insert(QString("BalanceDetails"), ::OpenAPI::toJsonValue(m_balance_details));
    }
    return obj;
}

QString OAIConversionBalances::getAccountCode() const {
    return m_account_code;
}
void OAIConversionBalances::setAccountCode(const QString &account_code) {
    m_account_code = account_code;
    m_account_code_isSet = true;
}

bool OAIConversionBalances::is_account_code_Set() const{
    return m_account_code_isSet;
}

bool OAIConversionBalances::is_account_code_Valid() const{
    return m_account_code_isValid;
}

double OAIConversionBalances::getBalance() const {
    return m_balance;
}
void OAIConversionBalances::setBalance(const double &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAIConversionBalances::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAIConversionBalances::is_balance_Valid() const{
    return m_balance_isValid;
}

QList<OAIBalanceDetails> OAIConversionBalances::getBalanceDetails() const {
    return m_balance_details;
}
void OAIConversionBalances::setBalanceDetails(const QList<OAIBalanceDetails> &balance_details) {
    m_balance_details = balance_details;
    m_balance_details_isSet = true;
}

bool OAIConversionBalances::is_balance_details_Set() const{
    return m_balance_details_isSet;
}

bool OAIConversionBalances::is_balance_details_Valid() const{
    return m_balance_details_isValid;
}

bool OAIConversionBalances::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConversionBalances::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
