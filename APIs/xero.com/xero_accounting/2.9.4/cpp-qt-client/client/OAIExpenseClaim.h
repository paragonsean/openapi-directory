/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpenseClaim.h
 *
 * 
 */

#ifndef OAIExpenseClaim_H
#define OAIExpenseClaim_H

#include <QJsonObject>

#include "OAIPayment.h"
#include "OAIReceipt.h"
#include "OAIUser.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPayment;
class OAIReceipt;
class OAIUser;

class OAIExpenseClaim : public OAIObject {
public:
    OAIExpenseClaim();
    OAIExpenseClaim(QString json);
    ~OAIExpenseClaim() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmountDue() const;
    void setAmountDue(const double &amount_due);
    bool is_amount_due_Set() const;
    bool is_amount_due_Valid() const;

    double getAmountPaid() const;
    void setAmountPaid(const double &amount_paid);
    bool is_amount_paid_Set() const;
    bool is_amount_paid_Valid() const;

    QString getExpenseClaimId() const;
    void setExpenseClaimId(const QString &expense_claim_id);
    bool is_expense_claim_id_Set() const;
    bool is_expense_claim_id_Valid() const;

    QString getPaymentDueDate() const;
    void setPaymentDueDate(const QString &payment_due_date);
    bool is_payment_due_date_Set() const;
    bool is_payment_due_date_Valid() const;

    QList<OAIPayment> getPayments() const;
    void setPayments(const QList<OAIPayment> &payments);
    bool is_payments_Set() const;
    bool is_payments_Valid() const;

    QString getReceiptId() const;
    void setReceiptId(const QString &receipt_id);
    bool is_receipt_id_Set() const;
    bool is_receipt_id_Valid() const;

    QList<OAIReceipt> getReceipts() const;
    void setReceipts(const QList<OAIReceipt> &receipts);
    bool is_receipts_Set() const;
    bool is_receipts_Valid() const;

    QString getReportingDate() const;
    void setReportingDate(const QString &reporting_date);
    bool is_reporting_date_Set() const;
    bool is_reporting_date_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QString getUpdatedDateUtc() const;
    void setUpdatedDateUtc(const QString &updated_date_utc);
    bool is_updated_date_utc_Set() const;
    bool is_updated_date_utc_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount_due;
    bool m_amount_due_isSet;
    bool m_amount_due_isValid;

    double m_amount_paid;
    bool m_amount_paid_isSet;
    bool m_amount_paid_isValid;

    QString m_expense_claim_id;
    bool m_expense_claim_id_isSet;
    bool m_expense_claim_id_isValid;

    QString m_payment_due_date;
    bool m_payment_due_date_isSet;
    bool m_payment_due_date_isValid;

    QList<OAIPayment> m_payments;
    bool m_payments_isSet;
    bool m_payments_isValid;

    QString m_receipt_id;
    bool m_receipt_id_isSet;
    bool m_receipt_id_isValid;

    QList<OAIReceipt> m_receipts;
    bool m_receipts_isSet;
    bool m_receipts_isValid;

    QString m_reporting_date;
    bool m_reporting_date_isSet;
    bool m_reporting_date_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QString m_updated_date_utc;
    bool m_updated_date_utc_isSet;
    bool m_updated_date_utc_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpenseClaim)

#endif // OAIExpenseClaim_H
