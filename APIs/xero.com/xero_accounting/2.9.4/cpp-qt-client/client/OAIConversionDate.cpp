/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConversionDate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConversionDate::OAIConversionDate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConversionDate::OAIConversionDate() {
    this->initializeModel();
}

OAIConversionDate::~OAIConversionDate() {}

void OAIConversionDate::initializeModel() {

    m_month_isSet = false;
    m_month_isValid = false;

    m_year_isSet = false;
    m_year_isValid = false;
}

void OAIConversionDate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConversionDate::fromJsonObject(QJsonObject json) {

    m_month_isValid = ::OpenAPI::fromJsonValue(m_month, json[QString("Month")]);
    m_month_isSet = !json[QString("Month")].isNull() && m_month_isValid;

    m_year_isValid = ::OpenAPI::fromJsonValue(m_year, json[QString("Year")]);
    m_year_isSet = !json[QString("Year")].isNull() && m_year_isValid;
}

QString OAIConversionDate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConversionDate::asJsonObject() const {
    QJsonObject obj;
    if (m_month_isSet) {
        obj.insert(QString("Month"), ::OpenAPI::toJsonValue(m_month));
    }
    if (m_year_isSet) {
        obj.insert(QString("Year"), ::OpenAPI::toJsonValue(m_year));
    }
    return obj;
}

qint32 OAIConversionDate::getMonth() const {
    return m_month;
}
void OAIConversionDate::setMonth(const qint32 &month) {
    m_month = month;
    m_month_isSet = true;
}

bool OAIConversionDate::is_month_Set() const{
    return m_month_isSet;
}

bool OAIConversionDate::is_month_Valid() const{
    return m_month_isValid;
}

qint32 OAIConversionDate::getYear() const {
    return m_year;
}
void OAIConversionDate::setYear(const qint32 &year) {
    m_year = year;
    m_year_isSet = true;
}

bool OAIConversionDate::is_year_Set() const{
    return m_year_isSet;
}

bool OAIConversionDate::is_year_Valid() const{
    return m_year_isValid;
}

bool OAIConversionDate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConversionDate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
