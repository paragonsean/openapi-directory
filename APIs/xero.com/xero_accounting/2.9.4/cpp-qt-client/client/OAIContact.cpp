/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContact::OAIContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContact::OAIContact() {
    this->initializeModel();
}

OAIContact::~OAIContact() {}

void OAIContact::initializeModel() {

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_accounts_payable_tax_type_isSet = false;
    m_accounts_payable_tax_type_isValid = false;

    m_accounts_receivable_tax_type_isSet = false;
    m_accounts_receivable_tax_type_isValid = false;

    m_addresses_isSet = false;
    m_addresses_isValid = false;

    m_attachments_isSet = false;
    m_attachments_isValid = false;

    m_balances_isSet = false;
    m_balances_isValid = false;

    m_bank_account_details_isSet = false;
    m_bank_account_details_isValid = false;

    m_batch_payments_isSet = false;
    m_batch_payments_isValid = false;

    m_branding_theme_isSet = false;
    m_branding_theme_isValid = false;

    m_contact_groups_isSet = false;
    m_contact_groups_isValid = false;

    m_contact_id_isSet = false;
    m_contact_id_isValid = false;

    m_contact_number_isSet = false;
    m_contact_number_isValid = false;

    m_contact_persons_isSet = false;
    m_contact_persons_isValid = false;

    m_contact_status_isSet = false;
    m_contact_status_isValid = false;

    m_default_currency_isSet = false;
    m_default_currency_isValid = false;

    m_discount_isSet = false;
    m_discount_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_has_attachments_isSet = false;
    m_has_attachments_isValid = false;

    m_has_validation_errors_isSet = false;
    m_has_validation_errors_isValid = false;

    m_is_customer_isSet = false;
    m_is_customer_isValid = false;

    m_is_supplier_isSet = false;
    m_is_supplier_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_payment_terms_isSet = false;
    m_payment_terms_isValid = false;

    m_phones_isSet = false;
    m_phones_isValid = false;

    m_purchases_default_account_code_isSet = false;
    m_purchases_default_account_code_isValid = false;

    m_purchases_tracking_categories_isSet = false;
    m_purchases_tracking_categories_isValid = false;

    m_sales_default_account_code_isSet = false;
    m_sales_default_account_code_isValid = false;

    m_sales_tracking_categories_isSet = false;
    m_sales_tracking_categories_isValid = false;

    m_skype_user_name_isSet = false;
    m_skype_user_name_isValid = false;

    m_status_attribute_string_isSet = false;
    m_status_attribute_string_isValid = false;

    m_tax_number_isSet = false;
    m_tax_number_isValid = false;

    m_tracking_category_name_isSet = false;
    m_tracking_category_name_isValid = false;

    m_tracking_category_option_isSet = false;
    m_tracking_category_option_isValid = false;

    m_updated_date_utc_isSet = false;
    m_updated_date_utc_isValid = false;

    m_validation_errors_isSet = false;
    m_validation_errors_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;

    m_xero_network_key_isSet = false;
    m_xero_network_key_isValid = false;
}

void OAIContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContact::fromJsonObject(QJsonObject json) {

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("AccountNumber")]);
    m_account_number_isSet = !json[QString("AccountNumber")].isNull() && m_account_number_isValid;

    m_accounts_payable_tax_type_isValid = ::OpenAPI::fromJsonValue(m_accounts_payable_tax_type, json[QString("AccountsPayableTaxType")]);
    m_accounts_payable_tax_type_isSet = !json[QString("AccountsPayableTaxType")].isNull() && m_accounts_payable_tax_type_isValid;

    m_accounts_receivable_tax_type_isValid = ::OpenAPI::fromJsonValue(m_accounts_receivable_tax_type, json[QString("AccountsReceivableTaxType")]);
    m_accounts_receivable_tax_type_isSet = !json[QString("AccountsReceivableTaxType")].isNull() && m_accounts_receivable_tax_type_isValid;

    m_addresses_isValid = ::OpenAPI::fromJsonValue(m_addresses, json[QString("Addresses")]);
    m_addresses_isSet = !json[QString("Addresses")].isNull() && m_addresses_isValid;

    m_attachments_isValid = ::OpenAPI::fromJsonValue(m_attachments, json[QString("Attachments")]);
    m_attachments_isSet = !json[QString("Attachments")].isNull() && m_attachments_isValid;

    m_balances_isValid = ::OpenAPI::fromJsonValue(m_balances, json[QString("Balances")]);
    m_balances_isSet = !json[QString("Balances")].isNull() && m_balances_isValid;

    m_bank_account_details_isValid = ::OpenAPI::fromJsonValue(m_bank_account_details, json[QString("BankAccountDetails")]);
    m_bank_account_details_isSet = !json[QString("BankAccountDetails")].isNull() && m_bank_account_details_isValid;

    m_batch_payments_isValid = ::OpenAPI::fromJsonValue(m_batch_payments, json[QString("BatchPayments")]);
    m_batch_payments_isSet = !json[QString("BatchPayments")].isNull() && m_batch_payments_isValid;

    m_branding_theme_isValid = ::OpenAPI::fromJsonValue(m_branding_theme, json[QString("BrandingTheme")]);
    m_branding_theme_isSet = !json[QString("BrandingTheme")].isNull() && m_branding_theme_isValid;

    m_contact_groups_isValid = ::OpenAPI::fromJsonValue(m_contact_groups, json[QString("ContactGroups")]);
    m_contact_groups_isSet = !json[QString("ContactGroups")].isNull() && m_contact_groups_isValid;

    m_contact_id_isValid = ::OpenAPI::fromJsonValue(m_contact_id, json[QString("ContactID")]);
    m_contact_id_isSet = !json[QString("ContactID")].isNull() && m_contact_id_isValid;

    m_contact_number_isValid = ::OpenAPI::fromJsonValue(m_contact_number, json[QString("ContactNumber")]);
    m_contact_number_isSet = !json[QString("ContactNumber")].isNull() && m_contact_number_isValid;

    m_contact_persons_isValid = ::OpenAPI::fromJsonValue(m_contact_persons, json[QString("ContactPersons")]);
    m_contact_persons_isSet = !json[QString("ContactPersons")].isNull() && m_contact_persons_isValid;

    m_contact_status_isValid = ::OpenAPI::fromJsonValue(m_contact_status, json[QString("ContactStatus")]);
    m_contact_status_isSet = !json[QString("ContactStatus")].isNull() && m_contact_status_isValid;

    m_default_currency_isValid = ::OpenAPI::fromJsonValue(m_default_currency, json[QString("DefaultCurrency")]);
    m_default_currency_isSet = !json[QString("DefaultCurrency")].isNull() && m_default_currency_isValid;

    m_discount_isValid = ::OpenAPI::fromJsonValue(m_discount, json[QString("Discount")]);
    m_discount_isSet = !json[QString("Discount")].isNull() && m_discount_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("EmailAddress")]);
    m_email_address_isSet = !json[QString("EmailAddress")].isNull() && m_email_address_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("FirstName")]);
    m_first_name_isSet = !json[QString("FirstName")].isNull() && m_first_name_isValid;

    m_has_attachments_isValid = ::OpenAPI::fromJsonValue(m_has_attachments, json[QString("HasAttachments")]);
    m_has_attachments_isSet = !json[QString("HasAttachments")].isNull() && m_has_attachments_isValid;

    m_has_validation_errors_isValid = ::OpenAPI::fromJsonValue(m_has_validation_errors, json[QString("HasValidationErrors")]);
    m_has_validation_errors_isSet = !json[QString("HasValidationErrors")].isNull() && m_has_validation_errors_isValid;

    m_is_customer_isValid = ::OpenAPI::fromJsonValue(m_is_customer, json[QString("IsCustomer")]);
    m_is_customer_isSet = !json[QString("IsCustomer")].isNull() && m_is_customer_isValid;

    m_is_supplier_isValid = ::OpenAPI::fromJsonValue(m_is_supplier, json[QString("IsSupplier")]);
    m_is_supplier_isSet = !json[QString("IsSupplier")].isNull() && m_is_supplier_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("LastName")]);
    m_last_name_isSet = !json[QString("LastName")].isNull() && m_last_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_payment_terms_isValid = ::OpenAPI::fromJsonValue(m_payment_terms, json[QString("PaymentTerms")]);
    m_payment_terms_isSet = !json[QString("PaymentTerms")].isNull() && m_payment_terms_isValid;

    m_phones_isValid = ::OpenAPI::fromJsonValue(m_phones, json[QString("Phones")]);
    m_phones_isSet = !json[QString("Phones")].isNull() && m_phones_isValid;

    m_purchases_default_account_code_isValid = ::OpenAPI::fromJsonValue(m_purchases_default_account_code, json[QString("PurchasesDefaultAccountCode")]);
    m_purchases_default_account_code_isSet = !json[QString("PurchasesDefaultAccountCode")].isNull() && m_purchases_default_account_code_isValid;

    m_purchases_tracking_categories_isValid = ::OpenAPI::fromJsonValue(m_purchases_tracking_categories, json[QString("PurchasesTrackingCategories")]);
    m_purchases_tracking_categories_isSet = !json[QString("PurchasesTrackingCategories")].isNull() && m_purchases_tracking_categories_isValid;

    m_sales_default_account_code_isValid = ::OpenAPI::fromJsonValue(m_sales_default_account_code, json[QString("SalesDefaultAccountCode")]);
    m_sales_default_account_code_isSet = !json[QString("SalesDefaultAccountCode")].isNull() && m_sales_default_account_code_isValid;

    m_sales_tracking_categories_isValid = ::OpenAPI::fromJsonValue(m_sales_tracking_categories, json[QString("SalesTrackingCategories")]);
    m_sales_tracking_categories_isSet = !json[QString("SalesTrackingCategories")].isNull() && m_sales_tracking_categories_isValid;

    m_skype_user_name_isValid = ::OpenAPI::fromJsonValue(m_skype_user_name, json[QString("SkypeUserName")]);
    m_skype_user_name_isSet = !json[QString("SkypeUserName")].isNull() && m_skype_user_name_isValid;

    m_status_attribute_string_isValid = ::OpenAPI::fromJsonValue(m_status_attribute_string, json[QString("StatusAttributeString")]);
    m_status_attribute_string_isSet = !json[QString("StatusAttributeString")].isNull() && m_status_attribute_string_isValid;

    m_tax_number_isValid = ::OpenAPI::fromJsonValue(m_tax_number, json[QString("TaxNumber")]);
    m_tax_number_isSet = !json[QString("TaxNumber")].isNull() && m_tax_number_isValid;

    m_tracking_category_name_isValid = ::OpenAPI::fromJsonValue(m_tracking_category_name, json[QString("TrackingCategoryName")]);
    m_tracking_category_name_isSet = !json[QString("TrackingCategoryName")].isNull() && m_tracking_category_name_isValid;

    m_tracking_category_option_isValid = ::OpenAPI::fromJsonValue(m_tracking_category_option, json[QString("TrackingCategoryOption")]);
    m_tracking_category_option_isSet = !json[QString("TrackingCategoryOption")].isNull() && m_tracking_category_option_isValid;

    m_updated_date_utc_isValid = ::OpenAPI::fromJsonValue(m_updated_date_utc, json[QString("UpdatedDateUTC")]);
    m_updated_date_utc_isSet = !json[QString("UpdatedDateUTC")].isNull() && m_updated_date_utc_isValid;

    m_validation_errors_isValid = ::OpenAPI::fromJsonValue(m_validation_errors, json[QString("ValidationErrors")]);
    m_validation_errors_isSet = !json[QString("ValidationErrors")].isNull() && m_validation_errors_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("Website")]);
    m_website_isSet = !json[QString("Website")].isNull() && m_website_isValid;

    m_xero_network_key_isValid = ::OpenAPI::fromJsonValue(m_xero_network_key, json[QString("XeroNetworkKey")]);
    m_xero_network_key_isSet = !json[QString("XeroNetworkKey")].isNull() && m_xero_network_key_isValid;
}

QString OAIContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContact::asJsonObject() const {
    QJsonObject obj;
    if (m_account_number_isSet) {
        obj.insert(QString("AccountNumber"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_accounts_payable_tax_type_isSet) {
        obj.insert(QString("AccountsPayableTaxType"), ::OpenAPI::toJsonValue(m_accounts_payable_tax_type));
    }
    if (m_accounts_receivable_tax_type_isSet) {
        obj.insert(QString("AccountsReceivableTaxType"), ::OpenAPI::toJsonValue(m_accounts_receivable_tax_type));
    }
    if (m_addresses.size() > 0) {
        obj.insert(QString("Addresses"), ::OpenAPI::toJsonValue(m_addresses));
    }
    if (m_attachments.size() > 0) {
        obj.insert(QString("Attachments"), ::OpenAPI::toJsonValue(m_attachments));
    }
    if (m_balances.isSet()) {
        obj.insert(QString("Balances"), ::OpenAPI::toJsonValue(m_balances));
    }
    if (m_bank_account_details_isSet) {
        obj.insert(QString("BankAccountDetails"), ::OpenAPI::toJsonValue(m_bank_account_details));
    }
    if (m_batch_payments.isSet()) {
        obj.insert(QString("BatchPayments"), ::OpenAPI::toJsonValue(m_batch_payments));
    }
    if (m_branding_theme.isSet()) {
        obj.insert(QString("BrandingTheme"), ::OpenAPI::toJsonValue(m_branding_theme));
    }
    if (m_contact_groups.size() > 0) {
        obj.insert(QString("ContactGroups"), ::OpenAPI::toJsonValue(m_contact_groups));
    }
    if (m_contact_id_isSet) {
        obj.insert(QString("ContactID"), ::OpenAPI::toJsonValue(m_contact_id));
    }
    if (m_contact_number_isSet) {
        obj.insert(QString("ContactNumber"), ::OpenAPI::toJsonValue(m_contact_number));
    }
    if (m_contact_persons.size() > 0) {
        obj.insert(QString("ContactPersons"), ::OpenAPI::toJsonValue(m_contact_persons));
    }
    if (m_contact_status_isSet) {
        obj.insert(QString("ContactStatus"), ::OpenAPI::toJsonValue(m_contact_status));
    }
    if (m_default_currency.isSet()) {
        obj.insert(QString("DefaultCurrency"), ::OpenAPI::toJsonValue(m_default_currency));
    }
    if (m_discount_isSet) {
        obj.insert(QString("Discount"), ::OpenAPI::toJsonValue(m_discount));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("EmailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("FirstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_has_attachments_isSet) {
        obj.insert(QString("HasAttachments"), ::OpenAPI::toJsonValue(m_has_attachments));
    }
    if (m_has_validation_errors_isSet) {
        obj.insert(QString("HasValidationErrors"), ::OpenAPI::toJsonValue(m_has_validation_errors));
    }
    if (m_is_customer_isSet) {
        obj.insert(QString("IsCustomer"), ::OpenAPI::toJsonValue(m_is_customer));
    }
    if (m_is_supplier_isSet) {
        obj.insert(QString("IsSupplier"), ::OpenAPI::toJsonValue(m_is_supplier));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("LastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_payment_terms.isSet()) {
        obj.insert(QString("PaymentTerms"), ::OpenAPI::toJsonValue(m_payment_terms));
    }
    if (m_phones.size() > 0) {
        obj.insert(QString("Phones"), ::OpenAPI::toJsonValue(m_phones));
    }
    if (m_purchases_default_account_code_isSet) {
        obj.insert(QString("PurchasesDefaultAccountCode"), ::OpenAPI::toJsonValue(m_purchases_default_account_code));
    }
    if (m_purchases_tracking_categories.size() > 0) {
        obj.insert(QString("PurchasesTrackingCategories"), ::OpenAPI::toJsonValue(m_purchases_tracking_categories));
    }
    if (m_sales_default_account_code_isSet) {
        obj.insert(QString("SalesDefaultAccountCode"), ::OpenAPI::toJsonValue(m_sales_default_account_code));
    }
    if (m_sales_tracking_categories.size() > 0) {
        obj.insert(QString("SalesTrackingCategories"), ::OpenAPI::toJsonValue(m_sales_tracking_categories));
    }
    if (m_skype_user_name_isSet) {
        obj.insert(QString("SkypeUserName"), ::OpenAPI::toJsonValue(m_skype_user_name));
    }
    if (m_status_attribute_string_isSet) {
        obj.insert(QString("StatusAttributeString"), ::OpenAPI::toJsonValue(m_status_attribute_string));
    }
    if (m_tax_number_isSet) {
        obj.insert(QString("TaxNumber"), ::OpenAPI::toJsonValue(m_tax_number));
    }
    if (m_tracking_category_name_isSet) {
        obj.insert(QString("TrackingCategoryName"), ::OpenAPI::toJsonValue(m_tracking_category_name));
    }
    if (m_tracking_category_option_isSet) {
        obj.insert(QString("TrackingCategoryOption"), ::OpenAPI::toJsonValue(m_tracking_category_option));
    }
    if (m_updated_date_utc_isSet) {
        obj.insert(QString("UpdatedDateUTC"), ::OpenAPI::toJsonValue(m_updated_date_utc));
    }
    if (m_validation_errors.size() > 0) {
        obj.insert(QString("ValidationErrors"), ::OpenAPI::toJsonValue(m_validation_errors));
    }
    if (m_website_isSet) {
        obj.insert(QString("Website"), ::OpenAPI::toJsonValue(m_website));
    }
    if (m_xero_network_key_isSet) {
        obj.insert(QString("XeroNetworkKey"), ::OpenAPI::toJsonValue(m_xero_network_key));
    }
    return obj;
}

QString OAIContact::getAccountNumber() const {
    return m_account_number;
}
void OAIContact::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIContact::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIContact::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAIContact::getAccountsPayableTaxType() const {
    return m_accounts_payable_tax_type;
}
void OAIContact::setAccountsPayableTaxType(const QString &accounts_payable_tax_type) {
    m_accounts_payable_tax_type = accounts_payable_tax_type;
    m_accounts_payable_tax_type_isSet = true;
}

bool OAIContact::is_accounts_payable_tax_type_Set() const{
    return m_accounts_payable_tax_type_isSet;
}

bool OAIContact::is_accounts_payable_tax_type_Valid() const{
    return m_accounts_payable_tax_type_isValid;
}

QString OAIContact::getAccountsReceivableTaxType() const {
    return m_accounts_receivable_tax_type;
}
void OAIContact::setAccountsReceivableTaxType(const QString &accounts_receivable_tax_type) {
    m_accounts_receivable_tax_type = accounts_receivable_tax_type;
    m_accounts_receivable_tax_type_isSet = true;
}

bool OAIContact::is_accounts_receivable_tax_type_Set() const{
    return m_accounts_receivable_tax_type_isSet;
}

bool OAIContact::is_accounts_receivable_tax_type_Valid() const{
    return m_accounts_receivable_tax_type_isValid;
}

QList<OAIAddress> OAIContact::getAddresses() const {
    return m_addresses;
}
void OAIContact::setAddresses(const QList<OAIAddress> &addresses) {
    m_addresses = addresses;
    m_addresses_isSet = true;
}

bool OAIContact::is_addresses_Set() const{
    return m_addresses_isSet;
}

bool OAIContact::is_addresses_Valid() const{
    return m_addresses_isValid;
}

QList<OAIAttachment> OAIContact::getAttachments() const {
    return m_attachments;
}
void OAIContact::setAttachments(const QList<OAIAttachment> &attachments) {
    m_attachments = attachments;
    m_attachments_isSet = true;
}

bool OAIContact::is_attachments_Set() const{
    return m_attachments_isSet;
}

bool OAIContact::is_attachments_Valid() const{
    return m_attachments_isValid;
}

OAIBalances OAIContact::getBalances() const {
    return m_balances;
}
void OAIContact::setBalances(const OAIBalances &balances) {
    m_balances = balances;
    m_balances_isSet = true;
}

bool OAIContact::is_balances_Set() const{
    return m_balances_isSet;
}

bool OAIContact::is_balances_Valid() const{
    return m_balances_isValid;
}

QString OAIContact::getBankAccountDetails() const {
    return m_bank_account_details;
}
void OAIContact::setBankAccountDetails(const QString &bank_account_details) {
    m_bank_account_details = bank_account_details;
    m_bank_account_details_isSet = true;
}

bool OAIContact::is_bank_account_details_Set() const{
    return m_bank_account_details_isSet;
}

bool OAIContact::is_bank_account_details_Valid() const{
    return m_bank_account_details_isValid;
}

OAIBatchPaymentDetails OAIContact::getBatchPayments() const {
    return m_batch_payments;
}
void OAIContact::setBatchPayments(const OAIBatchPaymentDetails &batch_payments) {
    m_batch_payments = batch_payments;
    m_batch_payments_isSet = true;
}

bool OAIContact::is_batch_payments_Set() const{
    return m_batch_payments_isSet;
}

bool OAIContact::is_batch_payments_Valid() const{
    return m_batch_payments_isValid;
}

OAIBrandingTheme OAIContact::getBrandingTheme() const {
    return m_branding_theme;
}
void OAIContact::setBrandingTheme(const OAIBrandingTheme &branding_theme) {
    m_branding_theme = branding_theme;
    m_branding_theme_isSet = true;
}

bool OAIContact::is_branding_theme_Set() const{
    return m_branding_theme_isSet;
}

bool OAIContact::is_branding_theme_Valid() const{
    return m_branding_theme_isValid;
}

QList<OAIContactGroup> OAIContact::getContactGroups() const {
    return m_contact_groups;
}
void OAIContact::setContactGroups(const QList<OAIContactGroup> &contact_groups) {
    m_contact_groups = contact_groups;
    m_contact_groups_isSet = true;
}

bool OAIContact::is_contact_groups_Set() const{
    return m_contact_groups_isSet;
}

bool OAIContact::is_contact_groups_Valid() const{
    return m_contact_groups_isValid;
}

QString OAIContact::getContactId() const {
    return m_contact_id;
}
void OAIContact::setContactId(const QString &contact_id) {
    m_contact_id = contact_id;
    m_contact_id_isSet = true;
}

bool OAIContact::is_contact_id_Set() const{
    return m_contact_id_isSet;
}

bool OAIContact::is_contact_id_Valid() const{
    return m_contact_id_isValid;
}

QString OAIContact::getContactNumber() const {
    return m_contact_number;
}
void OAIContact::setContactNumber(const QString &contact_number) {
    m_contact_number = contact_number;
    m_contact_number_isSet = true;
}

bool OAIContact::is_contact_number_Set() const{
    return m_contact_number_isSet;
}

bool OAIContact::is_contact_number_Valid() const{
    return m_contact_number_isValid;
}

QList<OAIContactPerson> OAIContact::getContactPersons() const {
    return m_contact_persons;
}
void OAIContact::setContactPersons(const QList<OAIContactPerson> &contact_persons) {
    m_contact_persons = contact_persons;
    m_contact_persons_isSet = true;
}

bool OAIContact::is_contact_persons_Set() const{
    return m_contact_persons_isSet;
}

bool OAIContact::is_contact_persons_Valid() const{
    return m_contact_persons_isValid;
}

QString OAIContact::getContactStatus() const {
    return m_contact_status;
}
void OAIContact::setContactStatus(const QString &contact_status) {
    m_contact_status = contact_status;
    m_contact_status_isSet = true;
}

bool OAIContact::is_contact_status_Set() const{
    return m_contact_status_isSet;
}

bool OAIContact::is_contact_status_Valid() const{
    return m_contact_status_isValid;
}

OAICurrencyCode OAIContact::getDefaultCurrency() const {
    return m_default_currency;
}
void OAIContact::setDefaultCurrency(const OAICurrencyCode &default_currency) {
    m_default_currency = default_currency;
    m_default_currency_isSet = true;
}

bool OAIContact::is_default_currency_Set() const{
    return m_default_currency_isSet;
}

bool OAIContact::is_default_currency_Valid() const{
    return m_default_currency_isValid;
}

double OAIContact::getDiscount() const {
    return m_discount;
}
void OAIContact::setDiscount(const double &discount) {
    m_discount = discount;
    m_discount_isSet = true;
}

bool OAIContact::is_discount_Set() const{
    return m_discount_isSet;
}

bool OAIContact::is_discount_Valid() const{
    return m_discount_isValid;
}

QString OAIContact::getEmailAddress() const {
    return m_email_address;
}
void OAIContact::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAIContact::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAIContact::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QString OAIContact::getFirstName() const {
    return m_first_name;
}
void OAIContact::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIContact::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIContact::is_first_name_Valid() const{
    return m_first_name_isValid;
}

bool OAIContact::isHasAttachments() const {
    return m_has_attachments;
}
void OAIContact::setHasAttachments(const bool &has_attachments) {
    m_has_attachments = has_attachments;
    m_has_attachments_isSet = true;
}

bool OAIContact::is_has_attachments_Set() const{
    return m_has_attachments_isSet;
}

bool OAIContact::is_has_attachments_Valid() const{
    return m_has_attachments_isValid;
}

bool OAIContact::isHasValidationErrors() const {
    return m_has_validation_errors;
}
void OAIContact::setHasValidationErrors(const bool &has_validation_errors) {
    m_has_validation_errors = has_validation_errors;
    m_has_validation_errors_isSet = true;
}

bool OAIContact::is_has_validation_errors_Set() const{
    return m_has_validation_errors_isSet;
}

bool OAIContact::is_has_validation_errors_Valid() const{
    return m_has_validation_errors_isValid;
}

bool OAIContact::isIsCustomer() const {
    return m_is_customer;
}
void OAIContact::setIsCustomer(const bool &is_customer) {
    m_is_customer = is_customer;
    m_is_customer_isSet = true;
}

bool OAIContact::is_is_customer_Set() const{
    return m_is_customer_isSet;
}

bool OAIContact::is_is_customer_Valid() const{
    return m_is_customer_isValid;
}

bool OAIContact::isIsSupplier() const {
    return m_is_supplier;
}
void OAIContact::setIsSupplier(const bool &is_supplier) {
    m_is_supplier = is_supplier;
    m_is_supplier_isSet = true;
}

bool OAIContact::is_is_supplier_Set() const{
    return m_is_supplier_isSet;
}

bool OAIContact::is_is_supplier_Valid() const{
    return m_is_supplier_isValid;
}

QString OAIContact::getLastName() const {
    return m_last_name;
}
void OAIContact::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIContact::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIContact::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIContact::getName() const {
    return m_name;
}
void OAIContact::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIContact::is_name_Set() const{
    return m_name_isSet;
}

bool OAIContact::is_name_Valid() const{
    return m_name_isValid;
}

OAIPaymentTerm OAIContact::getPaymentTerms() const {
    return m_payment_terms;
}
void OAIContact::setPaymentTerms(const OAIPaymentTerm &payment_terms) {
    m_payment_terms = payment_terms;
    m_payment_terms_isSet = true;
}

bool OAIContact::is_payment_terms_Set() const{
    return m_payment_terms_isSet;
}

bool OAIContact::is_payment_terms_Valid() const{
    return m_payment_terms_isValid;
}

QList<OAIPhone> OAIContact::getPhones() const {
    return m_phones;
}
void OAIContact::setPhones(const QList<OAIPhone> &phones) {
    m_phones = phones;
    m_phones_isSet = true;
}

bool OAIContact::is_phones_Set() const{
    return m_phones_isSet;
}

bool OAIContact::is_phones_Valid() const{
    return m_phones_isValid;
}

QString OAIContact::getPurchasesDefaultAccountCode() const {
    return m_purchases_default_account_code;
}
void OAIContact::setPurchasesDefaultAccountCode(const QString &purchases_default_account_code) {
    m_purchases_default_account_code = purchases_default_account_code;
    m_purchases_default_account_code_isSet = true;
}

bool OAIContact::is_purchases_default_account_code_Set() const{
    return m_purchases_default_account_code_isSet;
}

bool OAIContact::is_purchases_default_account_code_Valid() const{
    return m_purchases_default_account_code_isValid;
}

QList<OAISalesTrackingCategory> OAIContact::getPurchasesTrackingCategories() const {
    return m_purchases_tracking_categories;
}
void OAIContact::setPurchasesTrackingCategories(const QList<OAISalesTrackingCategory> &purchases_tracking_categories) {
    m_purchases_tracking_categories = purchases_tracking_categories;
    m_purchases_tracking_categories_isSet = true;
}

bool OAIContact::is_purchases_tracking_categories_Set() const{
    return m_purchases_tracking_categories_isSet;
}

bool OAIContact::is_purchases_tracking_categories_Valid() const{
    return m_purchases_tracking_categories_isValid;
}

QString OAIContact::getSalesDefaultAccountCode() const {
    return m_sales_default_account_code;
}
void OAIContact::setSalesDefaultAccountCode(const QString &sales_default_account_code) {
    m_sales_default_account_code = sales_default_account_code;
    m_sales_default_account_code_isSet = true;
}

bool OAIContact::is_sales_default_account_code_Set() const{
    return m_sales_default_account_code_isSet;
}

bool OAIContact::is_sales_default_account_code_Valid() const{
    return m_sales_default_account_code_isValid;
}

QList<OAISalesTrackingCategory> OAIContact::getSalesTrackingCategories() const {
    return m_sales_tracking_categories;
}
void OAIContact::setSalesTrackingCategories(const QList<OAISalesTrackingCategory> &sales_tracking_categories) {
    m_sales_tracking_categories = sales_tracking_categories;
    m_sales_tracking_categories_isSet = true;
}

bool OAIContact::is_sales_tracking_categories_Set() const{
    return m_sales_tracking_categories_isSet;
}

bool OAIContact::is_sales_tracking_categories_Valid() const{
    return m_sales_tracking_categories_isValid;
}

QString OAIContact::getSkypeUserName() const {
    return m_skype_user_name;
}
void OAIContact::setSkypeUserName(const QString &skype_user_name) {
    m_skype_user_name = skype_user_name;
    m_skype_user_name_isSet = true;
}

bool OAIContact::is_skype_user_name_Set() const{
    return m_skype_user_name_isSet;
}

bool OAIContact::is_skype_user_name_Valid() const{
    return m_skype_user_name_isValid;
}

QString OAIContact::getStatusAttributeString() const {
    return m_status_attribute_string;
}
void OAIContact::setStatusAttributeString(const QString &status_attribute_string) {
    m_status_attribute_string = status_attribute_string;
    m_status_attribute_string_isSet = true;
}

bool OAIContact::is_status_attribute_string_Set() const{
    return m_status_attribute_string_isSet;
}

bool OAIContact::is_status_attribute_string_Valid() const{
    return m_status_attribute_string_isValid;
}

QString OAIContact::getTaxNumber() const {
    return m_tax_number;
}
void OAIContact::setTaxNumber(const QString &tax_number) {
    m_tax_number = tax_number;
    m_tax_number_isSet = true;
}

bool OAIContact::is_tax_number_Set() const{
    return m_tax_number_isSet;
}

bool OAIContact::is_tax_number_Valid() const{
    return m_tax_number_isValid;
}

QString OAIContact::getTrackingCategoryName() const {
    return m_tracking_category_name;
}
void OAIContact::setTrackingCategoryName(const QString &tracking_category_name) {
    m_tracking_category_name = tracking_category_name;
    m_tracking_category_name_isSet = true;
}

bool OAIContact::is_tracking_category_name_Set() const{
    return m_tracking_category_name_isSet;
}

bool OAIContact::is_tracking_category_name_Valid() const{
    return m_tracking_category_name_isValid;
}

QString OAIContact::getTrackingCategoryOption() const {
    return m_tracking_category_option;
}
void OAIContact::setTrackingCategoryOption(const QString &tracking_category_option) {
    m_tracking_category_option = tracking_category_option;
    m_tracking_category_option_isSet = true;
}

bool OAIContact::is_tracking_category_option_Set() const{
    return m_tracking_category_option_isSet;
}

bool OAIContact::is_tracking_category_option_Valid() const{
    return m_tracking_category_option_isValid;
}

QString OAIContact::getUpdatedDateUtc() const {
    return m_updated_date_utc;
}
void OAIContact::setUpdatedDateUtc(const QString &updated_date_utc) {
    m_updated_date_utc = updated_date_utc;
    m_updated_date_utc_isSet = true;
}

bool OAIContact::is_updated_date_utc_Set() const{
    return m_updated_date_utc_isSet;
}

bool OAIContact::is_updated_date_utc_Valid() const{
    return m_updated_date_utc_isValid;
}

QList<OAIValidationError> OAIContact::getValidationErrors() const {
    return m_validation_errors;
}
void OAIContact::setValidationErrors(const QList<OAIValidationError> &validation_errors) {
    m_validation_errors = validation_errors;
    m_validation_errors_isSet = true;
}

bool OAIContact::is_validation_errors_Set() const{
    return m_validation_errors_isSet;
}

bool OAIContact::is_validation_errors_Valid() const{
    return m_validation_errors_isValid;
}

QString OAIContact::getWebsite() const {
    return m_website;
}
void OAIContact::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAIContact::is_website_Set() const{
    return m_website_isSet;
}

bool OAIContact::is_website_Valid() const{
    return m_website_isValid;
}

QString OAIContact::getXeroNetworkKey() const {
    return m_xero_network_key;
}
void OAIContact::setXeroNetworkKey(const QString &xero_network_key) {
    m_xero_network_key = xero_network_key;
    m_xero_network_key_isSet = true;
}

bool OAIContact::is_xero_network_key_Set() const{
    return m_xero_network_key_isSet;
}

bool OAIContact::is_xero_network_key_Valid() const{
    return m_xero_network_key_isValid;
}

bool OAIContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accounts_payable_tax_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accounts_receivable_tax_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_attachments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_balances.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_account_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_batch_payments.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_branding_theme.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_persons.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_currency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_attachments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_validation_errors_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_customer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_supplier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_terms.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phones.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchases_default_account_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchases_tracking_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales_default_account_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales_tracking_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_skype_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_attribute_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_category_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_category_option_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_date_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_xero_network_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
