/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICISOrgSetting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICISOrgSetting::OAICISOrgSetting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICISOrgSetting::OAICISOrgSetting() {
    this->initializeModel();
}

OAICISOrgSetting::~OAICISOrgSetting() {}

void OAICISOrgSetting::initializeModel() {

    m_cis_contractor_enabled_isSet = false;
    m_cis_contractor_enabled_isValid = false;

    m_cis_sub_contractor_enabled_isSet = false;
    m_cis_sub_contractor_enabled_isValid = false;

    m_rate_isSet = false;
    m_rate_isValid = false;
}

void OAICISOrgSetting::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICISOrgSetting::fromJsonObject(QJsonObject json) {

    m_cis_contractor_enabled_isValid = ::OpenAPI::fromJsonValue(m_cis_contractor_enabled, json[QString("CISContractorEnabled")]);
    m_cis_contractor_enabled_isSet = !json[QString("CISContractorEnabled")].isNull() && m_cis_contractor_enabled_isValid;

    m_cis_sub_contractor_enabled_isValid = ::OpenAPI::fromJsonValue(m_cis_sub_contractor_enabled, json[QString("CISSubContractorEnabled")]);
    m_cis_sub_contractor_enabled_isSet = !json[QString("CISSubContractorEnabled")].isNull() && m_cis_sub_contractor_enabled_isValid;

    m_rate_isValid = ::OpenAPI::fromJsonValue(m_rate, json[QString("Rate")]);
    m_rate_isSet = !json[QString("Rate")].isNull() && m_rate_isValid;
}

QString OAICISOrgSetting::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICISOrgSetting::asJsonObject() const {
    QJsonObject obj;
    if (m_cis_contractor_enabled_isSet) {
        obj.insert(QString("CISContractorEnabled"), ::OpenAPI::toJsonValue(m_cis_contractor_enabled));
    }
    if (m_cis_sub_contractor_enabled_isSet) {
        obj.insert(QString("CISSubContractorEnabled"), ::OpenAPI::toJsonValue(m_cis_sub_contractor_enabled));
    }
    if (m_rate_isSet) {
        obj.insert(QString("Rate"), ::OpenAPI::toJsonValue(m_rate));
    }
    return obj;
}

bool OAICISOrgSetting::isCisContractorEnabled() const {
    return m_cis_contractor_enabled;
}
void OAICISOrgSetting::setCisContractorEnabled(const bool &cis_contractor_enabled) {
    m_cis_contractor_enabled = cis_contractor_enabled;
    m_cis_contractor_enabled_isSet = true;
}

bool OAICISOrgSetting::is_cis_contractor_enabled_Set() const{
    return m_cis_contractor_enabled_isSet;
}

bool OAICISOrgSetting::is_cis_contractor_enabled_Valid() const{
    return m_cis_contractor_enabled_isValid;
}

bool OAICISOrgSetting::isCisSubContractorEnabled() const {
    return m_cis_sub_contractor_enabled;
}
void OAICISOrgSetting::setCisSubContractorEnabled(const bool &cis_sub_contractor_enabled) {
    m_cis_sub_contractor_enabled = cis_sub_contractor_enabled;
    m_cis_sub_contractor_enabled_isSet = true;
}

bool OAICISOrgSetting::is_cis_sub_contractor_enabled_Set() const{
    return m_cis_sub_contractor_enabled_isSet;
}

bool OAICISOrgSetting::is_cis_sub_contractor_enabled_Valid() const{
    return m_cis_sub_contractor_enabled_isValid;
}

double OAICISOrgSetting::getRate() const {
    return m_rate;
}
void OAICISOrgSetting::setRate(const double &rate) {
    m_rate = rate;
    m_rate_isSet = true;
}

bool OAICISOrgSetting::is_rate_Set() const{
    return m_rate_isSet;
}

bool OAICISOrgSetting::is_rate_Valid() const{
    return m_rate_isValid;
}

bool OAICISOrgSetting::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cis_contractor_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cis_sub_contractor_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICISOrgSetting::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
