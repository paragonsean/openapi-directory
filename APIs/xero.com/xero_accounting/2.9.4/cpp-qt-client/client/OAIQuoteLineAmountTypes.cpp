/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuoteLineAmountTypes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuoteLineAmountTypes::OAIQuoteLineAmountTypes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuoteLineAmountTypes::OAIQuoteLineAmountTypes() {
    this->initializeModel();
}

OAIQuoteLineAmountTypes::~OAIQuoteLineAmountTypes() {}

void OAIQuoteLineAmountTypes::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIQuoteLineAmountTypes::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIQuoteLineAmountTypes::fromJson(QString jsonString) {
    
    if ( jsonString.compare("EXCLUSIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuoteLineAmountTypes::EXCLUSIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INCLUSIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuoteLineAmountTypes::INCLUSIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NOTAX", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuoteLineAmountTypes::NOTAX;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIQuoteLineAmountTypes::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIQuoteLineAmountTypes::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIQuoteLineAmountTypes::EXCLUSIVE:
            val = "EXCLUSIVE";
            break;
        case eOAIQuoteLineAmountTypes::INCLUSIVE:
            val = "INCLUSIVE";
            break;
        case eOAIQuoteLineAmountTypes::NOTAX:
            val = "NOTAX";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIQuoteLineAmountTypes::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIQuoteLineAmountTypes::eOAIQuoteLineAmountTypes OAIQuoteLineAmountTypes::getValue() const {
    return m_value;
}

void OAIQuoteLineAmountTypes::setValue(const OAIQuoteLineAmountTypes::eOAIQuoteLineAmountTypes& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIQuoteLineAmountTypes::isSet() const {
    
    return m_value_isSet;
}

bool OAIQuoteLineAmountTypes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
