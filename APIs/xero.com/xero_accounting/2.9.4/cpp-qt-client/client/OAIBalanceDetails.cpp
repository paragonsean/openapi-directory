/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBalanceDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBalanceDetails::OAIBalanceDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBalanceDetails::OAIBalanceDetails() {
    this->initializeModel();
}

OAIBalanceDetails::~OAIBalanceDetails() {}

void OAIBalanceDetails::initializeModel() {

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_currency_rate_isSet = false;
    m_currency_rate_isValid = false;
}

void OAIBalanceDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBalanceDetails::fromJsonObject(QJsonObject json) {

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("Balance")]);
    m_balance_isSet = !json[QString("Balance")].isNull() && m_balance_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("CurrencyCode")]);
    m_currency_code_isSet = !json[QString("CurrencyCode")].isNull() && m_currency_code_isValid;

    m_currency_rate_isValid = ::OpenAPI::fromJsonValue(m_currency_rate, json[QString("CurrencyRate")]);
    m_currency_rate_isSet = !json[QString("CurrencyRate")].isNull() && m_currency_rate_isValid;
}

QString OAIBalanceDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBalanceDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_balance_isSet) {
        obj.insert(QString("Balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("CurrencyCode"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_currency_rate_isSet) {
        obj.insert(QString("CurrencyRate"), ::OpenAPI::toJsonValue(m_currency_rate));
    }
    return obj;
}

double OAIBalanceDetails::getBalance() const {
    return m_balance;
}
void OAIBalanceDetails::setBalance(const double &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAIBalanceDetails::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAIBalanceDetails::is_balance_Valid() const{
    return m_balance_isValid;
}

QString OAIBalanceDetails::getCurrencyCode() const {
    return m_currency_code;
}
void OAIBalanceDetails::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIBalanceDetails::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIBalanceDetails::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

double OAIBalanceDetails::getCurrencyRate() const {
    return m_currency_rate;
}
void OAIBalanceDetails::setCurrencyRate(const double &currency_rate) {
    m_currency_rate = currency_rate;
    m_currency_rate_isSet = true;
}

bool OAIBalanceDetails::is_currency_rate_Set() const{
    return m_currency_rate_isSet;
}

bool OAIBalanceDetails::is_currency_rate_Valid() const{
    return m_currency_rate_isValid;
}

bool OAIBalanceDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_rate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBalanceDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
