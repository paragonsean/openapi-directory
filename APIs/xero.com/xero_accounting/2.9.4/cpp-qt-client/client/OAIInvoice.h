/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInvoice.h
 *
 * 
 */

#ifndef OAIInvoice_H
#define OAIInvoice_H

#include <QJsonObject>

#include "OAIAttachment.h"
#include "OAIContact.h"
#include "OAICreditNote.h"
#include "OAICurrencyCode.h"
#include "OAILineAmountTypes.h"
#include "OAILineItem.h"
#include "OAIOverpayment.h"
#include "OAIPayment.h"
#include "OAIPrepayment.h"
#include "OAIValidationError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachment;
class OAIContact;
class OAICreditNote;
class OAILineItem;
class OAIOverpayment;
class OAIPayment;
class OAIPrepayment;
class OAIValidationError;

class OAIInvoice : public OAIObject {
public:
    OAIInvoice();
    OAIInvoice(QString json);
    ~OAIInvoice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmountCredited() const;
    void setAmountCredited(const double &amount_credited);
    bool is_amount_credited_Set() const;
    bool is_amount_credited_Valid() const;

    double getAmountDue() const;
    void setAmountDue(const double &amount_due);
    bool is_amount_due_Set() const;
    bool is_amount_due_Valid() const;

    double getAmountPaid() const;
    void setAmountPaid(const double &amount_paid);
    bool is_amount_paid_Set() const;
    bool is_amount_paid_Valid() const;

    QList<OAIAttachment> getAttachments() const;
    void setAttachments(const QList<OAIAttachment> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QString getBrandingThemeId() const;
    void setBrandingThemeId(const QString &branding_theme_id);
    bool is_branding_theme_id_Set() const;
    bool is_branding_theme_id_Valid() const;

    double getCisDeduction() const;
    void setCisDeduction(const double &cis_deduction);
    bool is_cis_deduction_Set() const;
    bool is_cis_deduction_Valid() const;

    double getCisRate() const;
    void setCisRate(const double &cis_rate);
    bool is_cis_rate_Set() const;
    bool is_cis_rate_Valid() const;

    OAIContact getContact() const;
    void setContact(const OAIContact &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    QList<OAICreditNote> getCreditNotes() const;
    void setCreditNotes(const QList<OAICreditNote> &credit_notes);
    bool is_credit_notes_Set() const;
    bool is_credit_notes_Valid() const;

    OAICurrencyCode getCurrencyCode() const;
    void setCurrencyCode(const OAICurrencyCode &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    double getCurrencyRate() const;
    void setCurrencyRate(const double &currency_rate);
    bool is_currency_rate_Set() const;
    bool is_currency_rate_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDueDate() const;
    void setDueDate(const QString &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    QString getExpectedPaymentDate() const;
    void setExpectedPaymentDate(const QString &expected_payment_date);
    bool is_expected_payment_date_Set() const;
    bool is_expected_payment_date_Valid() const;

    QString getFullyPaidOnDate() const;
    void setFullyPaidOnDate(const QString &fully_paid_on_date);
    bool is_fully_paid_on_date_Set() const;
    bool is_fully_paid_on_date_Valid() const;

    bool isHasAttachments() const;
    void setHasAttachments(const bool &has_attachments);
    bool is_has_attachments_Set() const;
    bool is_has_attachments_Valid() const;

    bool isHasErrors() const;
    void setHasErrors(const bool &has_errors);
    bool is_has_errors_Set() const;
    bool is_has_errors_Valid() const;

    QString getInvoiceId() const;
    void setInvoiceId(const QString &invoice_id);
    bool is_invoice_id_Set() const;
    bool is_invoice_id_Valid() const;

    QString getInvoiceNumber() const;
    void setInvoiceNumber(const QString &invoice_number);
    bool is_invoice_number_Set() const;
    bool is_invoice_number_Valid() const;

    bool isIsDiscounted() const;
    void setIsDiscounted(const bool &is_discounted);
    bool is_is_discounted_Set() const;
    bool is_is_discounted_Valid() const;

    OAILineAmountTypes getLineAmountTypes() const;
    void setLineAmountTypes(const OAILineAmountTypes &line_amount_types);
    bool is_line_amount_types_Set() const;
    bool is_line_amount_types_Valid() const;

    QList<OAILineItem> getLineItems() const;
    void setLineItems(const QList<OAILineItem> &line_items);
    bool is_line_items_Set() const;
    bool is_line_items_Valid() const;

    QList<OAIOverpayment> getOverpayments() const;
    void setOverpayments(const QList<OAIOverpayment> &overpayments);
    bool is_overpayments_Set() const;
    bool is_overpayments_Valid() const;

    QList<OAIPayment> getPayments() const;
    void setPayments(const QList<OAIPayment> &payments);
    bool is_payments_Set() const;
    bool is_payments_Valid() const;

    QString getPlannedPaymentDate() const;
    void setPlannedPaymentDate(const QString &planned_payment_date);
    bool is_planned_payment_date_Set() const;
    bool is_planned_payment_date_Valid() const;

    QList<OAIPrepayment> getPrepayments() const;
    void setPrepayments(const QList<OAIPrepayment> &prepayments);
    bool is_prepayments_Set() const;
    bool is_prepayments_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getRepeatingInvoiceId() const;
    void setRepeatingInvoiceId(const QString &repeating_invoice_id);
    bool is_repeating_invoice_id_Set() const;
    bool is_repeating_invoice_id_Valid() const;

    bool isSentToContact() const;
    void setSentToContact(const bool &sent_to_contact);
    bool is_sent_to_contact_Set() const;
    bool is_sent_to_contact_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusAttributeString() const;
    void setStatusAttributeString(const QString &status_attribute_string);
    bool is_status_attribute_string_Set() const;
    bool is_status_attribute_string_Valid() const;

    double getSubTotal() const;
    void setSubTotal(const double &sub_total);
    bool is_sub_total_Set() const;
    bool is_sub_total_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    double getTotalDiscount() const;
    void setTotalDiscount(const double &total_discount);
    bool is_total_discount_Set() const;
    bool is_total_discount_Valid() const;

    double getTotalTax() const;
    void setTotalTax(const double &total_tax);
    bool is_total_tax_Set() const;
    bool is_total_tax_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUpdatedDateUtc() const;
    void setUpdatedDateUtc(const QString &updated_date_utc);
    bool is_updated_date_utc_Set() const;
    bool is_updated_date_utc_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QList<OAIValidationError> getValidationErrors() const;
    void setValidationErrors(const QList<OAIValidationError> &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    QList<OAIValidationError> getWarnings() const;
    void setWarnings(const QList<OAIValidationError> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount_credited;
    bool m_amount_credited_isSet;
    bool m_amount_credited_isValid;

    double m_amount_due;
    bool m_amount_due_isSet;
    bool m_amount_due_isValid;

    double m_amount_paid;
    bool m_amount_paid_isSet;
    bool m_amount_paid_isValid;

    QList<OAIAttachment> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QString m_branding_theme_id;
    bool m_branding_theme_id_isSet;
    bool m_branding_theme_id_isValid;

    double m_cis_deduction;
    bool m_cis_deduction_isSet;
    bool m_cis_deduction_isValid;

    double m_cis_rate;
    bool m_cis_rate_isSet;
    bool m_cis_rate_isValid;

    OAIContact m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    QList<OAICreditNote> m_credit_notes;
    bool m_credit_notes_isSet;
    bool m_credit_notes_isValid;

    OAICurrencyCode m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    double m_currency_rate;
    bool m_currency_rate_isSet;
    bool m_currency_rate_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    QString m_expected_payment_date;
    bool m_expected_payment_date_isSet;
    bool m_expected_payment_date_isValid;

    QString m_fully_paid_on_date;
    bool m_fully_paid_on_date_isSet;
    bool m_fully_paid_on_date_isValid;

    bool m_has_attachments;
    bool m_has_attachments_isSet;
    bool m_has_attachments_isValid;

    bool m_has_errors;
    bool m_has_errors_isSet;
    bool m_has_errors_isValid;

    QString m_invoice_id;
    bool m_invoice_id_isSet;
    bool m_invoice_id_isValid;

    QString m_invoice_number;
    bool m_invoice_number_isSet;
    bool m_invoice_number_isValid;

    bool m_is_discounted;
    bool m_is_discounted_isSet;
    bool m_is_discounted_isValid;

    OAILineAmountTypes m_line_amount_types;
    bool m_line_amount_types_isSet;
    bool m_line_amount_types_isValid;

    QList<OAILineItem> m_line_items;
    bool m_line_items_isSet;
    bool m_line_items_isValid;

    QList<OAIOverpayment> m_overpayments;
    bool m_overpayments_isSet;
    bool m_overpayments_isValid;

    QList<OAIPayment> m_payments;
    bool m_payments_isSet;
    bool m_payments_isValid;

    QString m_planned_payment_date;
    bool m_planned_payment_date_isSet;
    bool m_planned_payment_date_isValid;

    QList<OAIPrepayment> m_prepayments;
    bool m_prepayments_isSet;
    bool m_prepayments_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_repeating_invoice_id;
    bool m_repeating_invoice_id_isSet;
    bool m_repeating_invoice_id_isValid;

    bool m_sent_to_contact;
    bool m_sent_to_contact_isSet;
    bool m_sent_to_contact_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_attribute_string;
    bool m_status_attribute_string_isSet;
    bool m_status_attribute_string_isValid;

    double m_sub_total;
    bool m_sub_total_isSet;
    bool m_sub_total_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    double m_total_discount;
    bool m_total_discount_isSet;
    bool m_total_discount_isValid;

    double m_total_tax;
    bool m_total_tax_isSet;
    bool m_total_tax_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_updated_date_utc;
    bool m_updated_date_utc_isSet;
    bool m_updated_date_utc_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QList<OAIValidationError> m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;

    QList<OAIValidationError> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInvoice)

#endif // OAIInvoice_H
