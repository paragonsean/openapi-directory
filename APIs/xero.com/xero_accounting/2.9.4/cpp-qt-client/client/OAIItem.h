/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItem.h
 *
 * 
 */

#ifndef OAIItem_H
#define OAIItem_H

#include <QJsonObject>

#include "OAIPurchase.h"
#include "OAIValidationError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPurchase;
class OAIValidationError;

class OAIItem : public OAIObject {
public:
    OAIItem();
    OAIItem(QString json);
    ~OAIItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getInventoryAssetAccountCode() const;
    void setInventoryAssetAccountCode(const QString &inventory_asset_account_code);
    bool is_inventory_asset_account_code_Set() const;
    bool is_inventory_asset_account_code_Valid() const;

    bool isIsPurchased() const;
    void setIsPurchased(const bool &is_purchased);
    bool is_is_purchased_Set() const;
    bool is_is_purchased_Valid() const;

    bool isIsSold() const;
    void setIsSold(const bool &is_sold);
    bool is_is_sold_Set() const;
    bool is_is_sold_Valid() const;

    bool isIsTrackedAsInventory() const;
    void setIsTrackedAsInventory(const bool &is_tracked_as_inventory);
    bool is_is_tracked_as_inventory_Set() const;
    bool is_is_tracked_as_inventory_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPurchaseDescription() const;
    void setPurchaseDescription(const QString &purchase_description);
    bool is_purchase_description_Set() const;
    bool is_purchase_description_Valid() const;

    OAIPurchase getPurchaseDetails() const;
    void setPurchaseDetails(const OAIPurchase &purchase_details);
    bool is_purchase_details_Set() const;
    bool is_purchase_details_Valid() const;

    double getQuantityOnHand() const;
    void setQuantityOnHand(const double &quantity_on_hand);
    bool is_quantity_on_hand_Set() const;
    bool is_quantity_on_hand_Valid() const;

    OAIPurchase getSalesDetails() const;
    void setSalesDetails(const OAIPurchase &sales_details);
    bool is_sales_details_Set() const;
    bool is_sales_details_Valid() const;

    QString getStatusAttributeString() const;
    void setStatusAttributeString(const QString &status_attribute_string);
    bool is_status_attribute_string_Set() const;
    bool is_status_attribute_string_Valid() const;

    double getTotalCostPool() const;
    void setTotalCostPool(const double &total_cost_pool);
    bool is_total_cost_pool_Set() const;
    bool is_total_cost_pool_Valid() const;

    QString getUpdatedDateUtc() const;
    void setUpdatedDateUtc(const QString &updated_date_utc);
    bool is_updated_date_utc_Set() const;
    bool is_updated_date_utc_Valid() const;

    QList<OAIValidationError> getValidationErrors() const;
    void setValidationErrors(const QList<OAIValidationError> &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_inventory_asset_account_code;
    bool m_inventory_asset_account_code_isSet;
    bool m_inventory_asset_account_code_isValid;

    bool m_is_purchased;
    bool m_is_purchased_isSet;
    bool m_is_purchased_isValid;

    bool m_is_sold;
    bool m_is_sold_isSet;
    bool m_is_sold_isValid;

    bool m_is_tracked_as_inventory;
    bool m_is_tracked_as_inventory_isSet;
    bool m_is_tracked_as_inventory_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_purchase_description;
    bool m_purchase_description_isSet;
    bool m_purchase_description_isValid;

    OAIPurchase m_purchase_details;
    bool m_purchase_details_isSet;
    bool m_purchase_details_isValid;

    double m_quantity_on_hand;
    bool m_quantity_on_hand_isSet;
    bool m_quantity_on_hand_isValid;

    OAIPurchase m_sales_details;
    bool m_sales_details_isSet;
    bool m_sales_details_isValid;

    QString m_status_attribute_string;
    bool m_status_attribute_string_isSet;
    bool m_status_attribute_string_isValid;

    double m_total_cost_pool;
    bool m_total_cost_pool_isSet;
    bool m_total_cost_pool_isValid;

    QString m_updated_date_utc;
    bool m_updated_date_utc_isSet;
    bool m_updated_date_utc_isValid;

    QList<OAIValidationError> m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItem)

#endif // OAIItem_H
