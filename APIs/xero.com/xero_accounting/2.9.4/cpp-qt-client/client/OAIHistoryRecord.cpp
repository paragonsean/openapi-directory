/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHistoryRecord.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHistoryRecord::OAIHistoryRecord(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHistoryRecord::OAIHistoryRecord() {
    this->initializeModel();
}

OAIHistoryRecord::~OAIHistoryRecord() {}

void OAIHistoryRecord::initializeModel() {

    m_changes_isSet = false;
    m_changes_isValid = false;

    m_date_utc_isSet = false;
    m_date_utc_isValid = false;

    m_details_isSet = false;
    m_details_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAIHistoryRecord::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHistoryRecord::fromJsonObject(QJsonObject json) {

    m_changes_isValid = ::OpenAPI::fromJsonValue(m_changes, json[QString("Changes")]);
    m_changes_isSet = !json[QString("Changes")].isNull() && m_changes_isValid;

    m_date_utc_isValid = ::OpenAPI::fromJsonValue(m_date_utc, json[QString("DateUTC")]);
    m_date_utc_isSet = !json[QString("DateUTC")].isNull() && m_date_utc_isValid;

    m_details_isValid = ::OpenAPI::fromJsonValue(m_details, json[QString("Details")]);
    m_details_isSet = !json[QString("Details")].isNull() && m_details_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("User")]);
    m_user_isSet = !json[QString("User")].isNull() && m_user_isValid;
}

QString OAIHistoryRecord::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHistoryRecord::asJsonObject() const {
    QJsonObject obj;
    if (m_changes_isSet) {
        obj.insert(QString("Changes"), ::OpenAPI::toJsonValue(m_changes));
    }
    if (m_date_utc_isSet) {
        obj.insert(QString("DateUTC"), ::OpenAPI::toJsonValue(m_date_utc));
    }
    if (m_details_isSet) {
        obj.insert(QString("Details"), ::OpenAPI::toJsonValue(m_details));
    }
    if (m_user_isSet) {
        obj.insert(QString("User"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

QString OAIHistoryRecord::getChanges() const {
    return m_changes;
}
void OAIHistoryRecord::setChanges(const QString &changes) {
    m_changes = changes;
    m_changes_isSet = true;
}

bool OAIHistoryRecord::is_changes_Set() const{
    return m_changes_isSet;
}

bool OAIHistoryRecord::is_changes_Valid() const{
    return m_changes_isValid;
}

QString OAIHistoryRecord::getDateUtc() const {
    return m_date_utc;
}
void OAIHistoryRecord::setDateUtc(const QString &date_utc) {
    m_date_utc = date_utc;
    m_date_utc_isSet = true;
}

bool OAIHistoryRecord::is_date_utc_Set() const{
    return m_date_utc_isSet;
}

bool OAIHistoryRecord::is_date_utc_Valid() const{
    return m_date_utc_isValid;
}

QString OAIHistoryRecord::getDetails() const {
    return m_details;
}
void OAIHistoryRecord::setDetails(const QString &details) {
    m_details = details;
    m_details_isSet = true;
}

bool OAIHistoryRecord::is_details_Set() const{
    return m_details_isSet;
}

bool OAIHistoryRecord::is_details_Valid() const{
    return m_details_isValid;
}

QString OAIHistoryRecord::getUser() const {
    return m_user;
}
void OAIHistoryRecord::setUser(const QString &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIHistoryRecord::is_user_Set() const{
    return m_user_isSet;
}

bool OAIHistoryRecord::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIHistoryRecord::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_changes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHistoryRecord::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
