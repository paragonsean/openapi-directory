/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportFields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportFields::OAIReportFields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportFields::OAIReportFields() {
    this->initializeModel();
}

OAIReportFields::~OAIReportFields() {}

void OAIReportFields::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_field_id_isSet = false;
    m_field_id_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIReportFields::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportFields::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_field_id_isValid = ::OpenAPI::fromJsonValue(m_field_id, json[QString("FieldID")]);
    m_field_id_isSet = !json[QString("FieldID")].isNull() && m_field_id_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("Value")]);
    m_value_isSet = !json[QString("Value")].isNull() && m_value_isValid;
}

QString OAIReportFields::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportFields::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_field_id_isSet) {
        obj.insert(QString("FieldID"), ::OpenAPI::toJsonValue(m_field_id));
    }
    if (m_value_isSet) {
        obj.insert(QString("Value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIReportFields::getDescription() const {
    return m_description;
}
void OAIReportFields::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIReportFields::is_description_Set() const{
    return m_description_isSet;
}

bool OAIReportFields::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIReportFields::getFieldId() const {
    return m_field_id;
}
void OAIReportFields::setFieldId(const QString &field_id) {
    m_field_id = field_id;
    m_field_id_isSet = true;
}

bool OAIReportFields::is_field_id_Set() const{
    return m_field_id_isSet;
}

bool OAIReportFields::is_field_id_Valid() const{
    return m_field_id_isValid;
}

QString OAIReportFields::getValue() const {
    return m_value;
}
void OAIReportFields::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIReportFields::is_value_Set() const{
    return m_value_isSet;
}

bool OAIReportFields::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIReportFields::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportFields::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
