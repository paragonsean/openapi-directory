/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPayment.h
 *
 * 
 */

#ifndef OAIPayment_H
#define OAIPayment_H

#include <QJsonObject>

#include "OAIAccount.h"
#include "OAICreditNote.h"
#include "OAIInvoice.h"
#include "OAIOverpayment.h"
#include "OAIPrepayment.h"
#include "OAIValidationError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccount;
class OAICreditNote;
class OAIInvoice;
class OAIOverpayment;
class OAIPrepayment;
class OAIValidationError;

class OAIPayment : public OAIObject {
public:
    OAIPayment();
    OAIPayment(QString json);
    ~OAIPayment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccount getAccount() const;
    void setAccount(const OAIAccount &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getBankAccountNumber() const;
    void setBankAccountNumber(const QString &bank_account_number);
    bool is_bank_account_number_Set() const;
    bool is_bank_account_number_Valid() const;

    QString getBatchPaymentId() const;
    void setBatchPaymentId(const QString &batch_payment_id);
    bool is_batch_payment_id_Set() const;
    bool is_batch_payment_id_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    OAICreditNote getCreditNote() const;
    void setCreditNote(const OAICreditNote &credit_note);
    bool is_credit_note_Set() const;
    bool is_credit_note_Valid() const;

    QString getCreditNoteNumber() const;
    void setCreditNoteNumber(const QString &credit_note_number);
    bool is_credit_note_number_Set() const;
    bool is_credit_note_number_Valid() const;

    double getCurrencyRate() const;
    void setCurrencyRate(const double &currency_rate);
    bool is_currency_rate_Set() const;
    bool is_currency_rate_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDetails() const;
    void setDetails(const QString &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    bool isHasAccount() const;
    void setHasAccount(const bool &has_account);
    bool is_has_account_Set() const;
    bool is_has_account_Valid() const;

    bool isHasValidationErrors() const;
    void setHasValidationErrors(const bool &has_validation_errors);
    bool is_has_validation_errors_Set() const;
    bool is_has_validation_errors_Valid() const;

    OAIInvoice getInvoice() const;
    void setInvoice(const OAIInvoice &invoice);
    bool is_invoice_Set() const;
    bool is_invoice_Valid() const;

    QString getInvoiceNumber() const;
    void setInvoiceNumber(const QString &invoice_number);
    bool is_invoice_number_Set() const;
    bool is_invoice_number_Valid() const;

    bool isIsReconciled() const;
    void setIsReconciled(const bool &is_reconciled);
    bool is_is_reconciled_Set() const;
    bool is_is_reconciled_Valid() const;

    OAIOverpayment getOverpayment() const;
    void setOverpayment(const OAIOverpayment &overpayment);
    bool is_overpayment_Set() const;
    bool is_overpayment_Valid() const;

    QString getParticulars() const;
    void setParticulars(const QString &particulars);
    bool is_particulars_Set() const;
    bool is_particulars_Valid() const;

    QString getPaymentId() const;
    void setPaymentId(const QString &payment_id);
    bool is_payment_id_Set() const;
    bool is_payment_id_Valid() const;

    QString getPaymentType() const;
    void setPaymentType(const QString &payment_type);
    bool is_payment_type_Set() const;
    bool is_payment_type_Valid() const;

    OAIPrepayment getPrepayment() const;
    void setPrepayment(const OAIPrepayment &prepayment);
    bool is_prepayment_Set() const;
    bool is_prepayment_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusAttributeString() const;
    void setStatusAttributeString(const QString &status_attribute_string);
    bool is_status_attribute_string_Set() const;
    bool is_status_attribute_string_Valid() const;

    QString getUpdatedDateUtc() const;
    void setUpdatedDateUtc(const QString &updated_date_utc);
    bool is_updated_date_utc_Set() const;
    bool is_updated_date_utc_Valid() const;

    QList<OAIValidationError> getValidationErrors() const;
    void setValidationErrors(const QList<OAIValidationError> &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccount m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_bank_account_number;
    bool m_bank_account_number_isSet;
    bool m_bank_account_number_isValid;

    QString m_batch_payment_id;
    bool m_batch_payment_id_isSet;
    bool m_batch_payment_id_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    OAICreditNote m_credit_note;
    bool m_credit_note_isSet;
    bool m_credit_note_isValid;

    QString m_credit_note_number;
    bool m_credit_note_number_isSet;
    bool m_credit_note_number_isValid;

    double m_currency_rate;
    bool m_currency_rate_isSet;
    bool m_currency_rate_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    bool m_has_account;
    bool m_has_account_isSet;
    bool m_has_account_isValid;

    bool m_has_validation_errors;
    bool m_has_validation_errors_isSet;
    bool m_has_validation_errors_isValid;

    OAIInvoice m_invoice;
    bool m_invoice_isSet;
    bool m_invoice_isValid;

    QString m_invoice_number;
    bool m_invoice_number_isSet;
    bool m_invoice_number_isValid;

    bool m_is_reconciled;
    bool m_is_reconciled_isSet;
    bool m_is_reconciled_isValid;

    OAIOverpayment m_overpayment;
    bool m_overpayment_isSet;
    bool m_overpayment_isValid;

    QString m_particulars;
    bool m_particulars_isSet;
    bool m_particulars_isValid;

    QString m_payment_id;
    bool m_payment_id_isSet;
    bool m_payment_id_isValid;

    QString m_payment_type;
    bool m_payment_type_isSet;
    bool m_payment_type_isValid;

    OAIPrepayment m_prepayment;
    bool m_prepayment_isSet;
    bool m_prepayment_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_attribute_string;
    bool m_status_attribute_string_isSet;
    bool m_status_attribute_string_isValid;

    QString m_updated_date_utc;
    bool m_updated_date_utc_isSet;
    bool m_updated_date_utc_isValid;

    QList<OAIValidationError> m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPayment)

#endif // OAIPayment_H
