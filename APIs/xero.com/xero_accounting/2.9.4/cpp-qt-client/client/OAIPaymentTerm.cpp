/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentTerm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentTerm::OAIPaymentTerm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentTerm::OAIPaymentTerm() {
    this->initializeModel();
}

OAIPaymentTerm::~OAIPaymentTerm() {}

void OAIPaymentTerm::initializeModel() {

    m_bills_isSet = false;
    m_bills_isValid = false;

    m_sales_isSet = false;
    m_sales_isValid = false;
}

void OAIPaymentTerm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentTerm::fromJsonObject(QJsonObject json) {

    m_bills_isValid = ::OpenAPI::fromJsonValue(m_bills, json[QString("Bills")]);
    m_bills_isSet = !json[QString("Bills")].isNull() && m_bills_isValid;

    m_sales_isValid = ::OpenAPI::fromJsonValue(m_sales, json[QString("Sales")]);
    m_sales_isSet = !json[QString("Sales")].isNull() && m_sales_isValid;
}

QString OAIPaymentTerm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentTerm::asJsonObject() const {
    QJsonObject obj;
    if (m_bills.isSet()) {
        obj.insert(QString("Bills"), ::OpenAPI::toJsonValue(m_bills));
    }
    if (m_sales.isSet()) {
        obj.insert(QString("Sales"), ::OpenAPI::toJsonValue(m_sales));
    }
    return obj;
}

OAIBill OAIPaymentTerm::getBills() const {
    return m_bills;
}
void OAIPaymentTerm::setBills(const OAIBill &bills) {
    m_bills = bills;
    m_bills_isSet = true;
}

bool OAIPaymentTerm::is_bills_Set() const{
    return m_bills_isSet;
}

bool OAIPaymentTerm::is_bills_Valid() const{
    return m_bills_isValid;
}

OAIBill OAIPaymentTerm::getSales() const {
    return m_sales;
}
void OAIPaymentTerm::setSales(const OAIBill &sales) {
    m_sales = sales;
    m_sales_isSet = true;
}

bool OAIPaymentTerm::is_sales_Set() const{
    return m_sales_isSet;
}

bool OAIPaymentTerm::is_sales_Valid() const{
    return m_sales_isValid;
}

bool OAIPaymentTerm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bills.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentTerm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
