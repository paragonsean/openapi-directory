/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAllocation.h
 *
 * 
 */

#ifndef OAIAllocation_H
#define OAIAllocation_H

#include <QJsonObject>

#include "OAICreditNote.h"
#include "OAIInvoice.h"
#include "OAIOverpayment.h"
#include "OAIPrepayment.h"
#include "OAIValidationError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreditNote;
class OAIInvoice;
class OAIOverpayment;
class OAIPrepayment;
class OAIValidationError;

class OAIAllocation : public OAIObject {
public:
    OAIAllocation();
    OAIAllocation(QString json);
    ~OAIAllocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAICreditNote getCreditNote() const;
    void setCreditNote(const OAICreditNote &credit_note);
    bool is_credit_note_Set() const;
    bool is_credit_note_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    OAIInvoice getInvoice() const;
    void setInvoice(const OAIInvoice &invoice);
    bool is_invoice_Set() const;
    bool is_invoice_Valid() const;

    OAIOverpayment getOverpayment() const;
    void setOverpayment(const OAIOverpayment &overpayment);
    bool is_overpayment_Set() const;
    bool is_overpayment_Valid() const;

    OAIPrepayment getPrepayment() const;
    void setPrepayment(const OAIPrepayment &prepayment);
    bool is_prepayment_Set() const;
    bool is_prepayment_Valid() const;

    QString getStatusAttributeString() const;
    void setStatusAttributeString(const QString &status_attribute_string);
    bool is_status_attribute_string_Set() const;
    bool is_status_attribute_string_Valid() const;

    QList<OAIValidationError> getValidationErrors() const;
    void setValidationErrors(const QList<OAIValidationError> &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAICreditNote m_credit_note;
    bool m_credit_note_isSet;
    bool m_credit_note_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    OAIInvoice m_invoice;
    bool m_invoice_isSet;
    bool m_invoice_isValid;

    OAIOverpayment m_overpayment;
    bool m_overpayment_isSet;
    bool m_overpayment_isValid;

    OAIPrepayment m_prepayment;
    bool m_prepayment_isSet;
    bool m_prepayment_isValid;

    QString m_status_attribute_string;
    bool m_status_attribute_string_isSet;
    bool m_status_attribute_string_isValid;

    QList<OAIValidationError> m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAllocation)

#endif // OAIAllocation_H
