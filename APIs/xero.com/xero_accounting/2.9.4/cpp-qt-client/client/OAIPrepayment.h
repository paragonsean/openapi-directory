/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrepayment.h
 *
 * 
 */

#ifndef OAIPrepayment_H
#define OAIPrepayment_H

#include <QJsonObject>

#include "OAIAllocation.h"
#include "OAIAttachment.h"
#include "OAIContact.h"
#include "OAICurrencyCode.h"
#include "OAILineAmountTypes.h"
#include "OAILineItem.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAllocation;
class OAIAttachment;
class OAIContact;
class OAILineItem;

class OAIPrepayment : public OAIObject {
public:
    OAIPrepayment();
    OAIPrepayment(QString json);
    ~OAIPrepayment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAllocation> getAllocations() const;
    void setAllocations(const QList<OAIAllocation> &allocations);
    bool is_allocations_Set() const;
    bool is_allocations_Valid() const;

    double getAppliedAmount() const;
    void setAppliedAmount(const double &applied_amount);
    bool is_applied_amount_Set() const;
    bool is_applied_amount_Valid() const;

    QList<OAIAttachment> getAttachments() const;
    void setAttachments(const QList<OAIAttachment> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    OAIContact getContact() const;
    void setContact(const OAIContact &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    OAICurrencyCode getCurrencyCode() const;
    void setCurrencyCode(const OAICurrencyCode &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    double getCurrencyRate() const;
    void setCurrencyRate(const double &currency_rate);
    bool is_currency_rate_Set() const;
    bool is_currency_rate_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    bool isHasAttachments() const;
    void setHasAttachments(const bool &has_attachments);
    bool is_has_attachments_Set() const;
    bool is_has_attachments_Valid() const;

    OAILineAmountTypes getLineAmountTypes() const;
    void setLineAmountTypes(const OAILineAmountTypes &line_amount_types);
    bool is_line_amount_types_Set() const;
    bool is_line_amount_types_Valid() const;

    QList<OAILineItem> getLineItems() const;
    void setLineItems(const QList<OAILineItem> &line_items);
    bool is_line_items_Set() const;
    bool is_line_items_Valid() const;

    QString getPrepaymentId() const;
    void setPrepaymentId(const QString &prepayment_id);
    bool is_prepayment_id_Set() const;
    bool is_prepayment_id_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    double getRemainingCredit() const;
    void setRemainingCredit(const double &remaining_credit);
    bool is_remaining_credit_Set() const;
    bool is_remaining_credit_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    double getSubTotal() const;
    void setSubTotal(const double &sub_total);
    bool is_sub_total_Set() const;
    bool is_sub_total_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    double getTotalTax() const;
    void setTotalTax(const double &total_tax);
    bool is_total_tax_Set() const;
    bool is_total_tax_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUpdatedDateUtc() const;
    void setUpdatedDateUtc(const QString &updated_date_utc);
    bool is_updated_date_utc_Set() const;
    bool is_updated_date_utc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAllocation> m_allocations;
    bool m_allocations_isSet;
    bool m_allocations_isValid;

    double m_applied_amount;
    bool m_applied_amount_isSet;
    bool m_applied_amount_isValid;

    QList<OAIAttachment> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    OAIContact m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    OAICurrencyCode m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    double m_currency_rate;
    bool m_currency_rate_isSet;
    bool m_currency_rate_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    bool m_has_attachments;
    bool m_has_attachments_isSet;
    bool m_has_attachments_isValid;

    OAILineAmountTypes m_line_amount_types;
    bool m_line_amount_types_isSet;
    bool m_line_amount_types_isValid;

    QList<OAILineItem> m_line_items;
    bool m_line_items_isSet;
    bool m_line_items_isValid;

    QString m_prepayment_id;
    bool m_prepayment_id_isSet;
    bool m_prepayment_id_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    double m_remaining_credit;
    bool m_remaining_credit_isSet;
    bool m_remaining_credit_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    double m_sub_total;
    bool m_sub_total_isSet;
    bool m_sub_total_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    double m_total_tax;
    bool m_total_tax_isSet;
    bool m_total_tax_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_updated_date_utc;
    bool m_updated_date_utc_isSet;
    bool m_updated_date_utc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrepayment)

#endif // OAIPrepayment_H
