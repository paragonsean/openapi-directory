/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeZone.h
 *
 * Timezone specifications
 */

#ifndef OAITimeZone_H
#define OAITimeZone_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITimeZone : public OAIEnum {
public:
    OAITimeZone();
    OAITimeZone(QString json);
    ~OAITimeZone() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAITimeZone {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        MOROCCOSTANDARDTIME, 
        UTC, 
        GMTSTANDARDTIME, 
        GREENWICHSTANDARDTIME, 
        WEUROPESTANDARDTIME, 
        CENTRALEUROPESTANDARDTIME, 
        ROMANCESTANDARDTIME, 
        CENTRALEUROPEANSTANDARDTIME, 
        WCENTRALAFRICASTANDARDTIME, 
        NAMIBIASTANDARDTIME, 
        JORDANSTANDARDTIME, 
        GTBSTANDARDTIME, 
        MIDDLEEASTSTANDARDTIME, 
        EGYPTSTANDARDTIME, 
        SYRIASTANDARDTIME, 
        EEUROPESTANDARDTIME, 
        SOUTHAFRICASTANDARDTIME, 
        FLESTANDARDTIME, 
        TURKEYSTANDARDTIME, 
        ISRAELSTANDARDTIME, 
        KALININGRADSTANDARDTIME, 
        LIBYASTANDARDTIME, 
        ARABICSTANDARDTIME, 
        ARABSTANDARDTIME, 
        BELARUSSTANDARDTIME, 
        RUSSIANSTANDARDTIME, 
        EAFRICASTANDARDTIME, 
        IRANSTANDARDTIME, 
        ARABIANSTANDARDTIME, 
        AZERBAIJANSTANDARDTIME, 
        RUSSIATIMEZONE3, 
        MAURITIUSSTANDARDTIME, 
        GEORGIANSTANDARDTIME, 
        CAUCASUSSTANDARDTIME, 
        AFGHANISTANSTANDARDTIME, 
        WESTASIASTANDARDTIME, 
        EKATERINBURGSTANDARDTIME, 
        PAKISTANSTANDARDTIME, 
        INDIASTANDARDTIME, 
        SRILANKASTANDARDTIME, 
        NEPALSTANDARDTIME, 
        CENTRALASIASTANDARDTIME, 
        BANGLADESHSTANDARDTIME, 
        NCENTRALASIASTANDARDTIME, 
        MYANMARSTANDARDTIME, 
        SEASIASTANDARDTIME, 
        NORTHASIASTANDARDTIME, 
        CHINASTANDARDTIME, 
        NORTHASIAEASTSTANDARDTIME, 
        SINGAPORESTANDARDTIME, 
        WAUSTRALIASTANDARDTIME, 
        TAIPEISTANDARDTIME, 
        ULAANBAATARSTANDARDTIME, 
        TOKYOSTANDARDTIME, 
        KOREASTANDARDTIME, 
        YAKUTSKSTANDARDTIME, 
        CENAUSTRALIASTANDARDTIME, 
        AUSCENTRALSTANDARDTIME, 
        EAUSTRALIASTANDARDTIME, 
        AUSEASTERNSTANDARDTIME, 
        WESTPACIFICSTANDARDTIME, 
        TASMANIASTANDARDTIME, 
        MAGADANSTANDARDTIME, 
        VLADIVOSTOKSTANDARDTIME, 
        RUSSIATIMEZONE10, 
        CENTRALPACIFICSTANDARDTIME, 
        RUSSIATIMEZONE11, 
        NEWZEALANDSTANDARDTIME, 
        UTC_12, 
        UTC_13, 
        FIJISTANDARDTIME, 
        KAMCHATKASTANDARDTIME, 
        TONGASTANDARDTIME, 
        SAMOASTANDARDTIME, 
        LINEISLANDSSTANDARDTIME, 
        AZORESSTANDARDTIME, 
        CAPEVERDESTANDARDTIME, 
        UTC02, 
        MIDATLANTICSTANDARDTIME, 
        ESOUTHAMERICASTANDARDTIME, 
        ARGENTINASTANDARDTIME, 
        SAEASTERNSTANDARDTIME, 
        GREENLANDSTANDARDTIME, 
        MONTEVIDEOSTANDARDTIME, 
        BAHIASTANDARDTIME, 
        NEWFOUNDLANDSTANDARDTIME, 
        PARAGUAYSTANDARDTIME, 
        ATLANTICSTANDARDTIME, 
        CENTRALBRAZILIANSTANDARDTIME, 
        SAWESTERNSTANDARDTIME, 
        PACIFICSASTANDARDTIME, 
        VENEZUELASTANDARDTIME, 
        SAPACIFICSTANDARDTIME, 
        EASTERNSTANDARDTIME, 
        USEASTERNSTANDARDTIME, 
        CENTRALAMERICASTANDARDTIME, 
        CENTRALSTANDARDTIME, 
        CENTRALSTANDARDTIME_MEXICO_, 
        CANADACENTRALSTANDARDTIME, 
        USMOUNTAINSTANDARDTIME, 
        MOUNTAINSTANDARDTIME_MEXICO_, 
        MOUNTAINSTANDARDTIME, 
        PACIFICSTANDARDTIME_MEXICO_, 
        PACIFICSTANDARDTIME, 
        ALASKANSTANDARDTIME, 
        HAWAIIANSTANDARDTIME, 
        UTC11, 
        DATELINESTANDARDTIME
    };
    OAITimeZone::eOAITimeZone getValue() const;
    void setValue(const OAITimeZone::eOAITimeZone& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAITimeZone m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeZone)

#endif // OAITimeZone_H
