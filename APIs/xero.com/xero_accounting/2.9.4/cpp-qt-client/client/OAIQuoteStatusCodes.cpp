/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuoteStatusCodes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuoteStatusCodes::OAIQuoteStatusCodes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuoteStatusCodes::OAIQuoteStatusCodes() {
    this->initializeModel();
}

OAIQuoteStatusCodes::~OAIQuoteStatusCodes() {}

void OAIQuoteStatusCodes::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIQuoteStatusCodes::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIQuoteStatusCodes::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DRAFT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuoteStatusCodes::DRAFT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuoteStatusCodes::SENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DECLINED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuoteStatusCodes::DECLINED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACCEPTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuoteStatusCodes::ACCEPTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVOICED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuoteStatusCodes::INVOICED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuoteStatusCodes::DELETED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIQuoteStatusCodes::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIQuoteStatusCodes::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIQuoteStatusCodes::DRAFT:
            val = "DRAFT";
            break;
        case eOAIQuoteStatusCodes::SENT:
            val = "SENT";
            break;
        case eOAIQuoteStatusCodes::DECLINED:
            val = "DECLINED";
            break;
        case eOAIQuoteStatusCodes::ACCEPTED:
            val = "ACCEPTED";
            break;
        case eOAIQuoteStatusCodes::INVOICED:
            val = "INVOICED";
            break;
        case eOAIQuoteStatusCodes::DELETED:
            val = "DELETED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIQuoteStatusCodes::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIQuoteStatusCodes::eOAIQuoteStatusCodes OAIQuoteStatusCodes::getValue() const {
    return m_value;
}

void OAIQuoteStatusCodes::setValue(const OAIQuoteStatusCodes::eOAIQuoteStatusCodes& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIQuoteStatusCodes::isSet() const {
    
    return m_value_isSet;
}

bool OAIQuoteStatusCodes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
