/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManualJournalLine.h
 *
 * 
 */

#ifndef OAIManualJournalLine_H
#define OAIManualJournalLine_H

#include <QJsonObject>

#include "OAITrackingCategory.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITrackingCategory;

class OAIManualJournalLine : public OAIObject {
public:
    OAIManualJournalLine();
    OAIManualJournalLine(QString json);
    ~OAIManualJournalLine() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountCode() const;
    void setAccountCode(const QString &account_code);
    bool is_account_code_Set() const;
    bool is_account_code_Valid() const;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isIsBlank() const;
    void setIsBlank(const bool &is_blank);
    bool is_is_blank_Set() const;
    bool is_is_blank_Valid() const;

    double getLineAmount() const;
    void setLineAmount(const double &line_amount);
    bool is_line_amount_Set() const;
    bool is_line_amount_Valid() const;

    double getTaxAmount() const;
    void setTaxAmount(const double &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    QString getTaxType() const;
    void setTaxType(const QString &tax_type);
    bool is_tax_type_Set() const;
    bool is_tax_type_Valid() const;

    QList<OAITrackingCategory> getTracking() const;
    void setTracking(const QList<OAITrackingCategory> &tracking);
    bool is_tracking_Set() const;
    bool is_tracking_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_code;
    bool m_account_code_isSet;
    bool m_account_code_isValid;

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_is_blank;
    bool m_is_blank_isSet;
    bool m_is_blank_isValid;

    double m_line_amount;
    bool m_line_amount_isSet;
    bool m_line_amount_isValid;

    double m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    QString m_tax_type;
    bool m_tax_type_isSet;
    bool m_tax_type_isValid;

    QList<OAITrackingCategory> m_tracking;
    bool m_tracking_isSet;
    bool m_tracking_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManualJournalLine)

#endif // OAIManualJournalLine_H
