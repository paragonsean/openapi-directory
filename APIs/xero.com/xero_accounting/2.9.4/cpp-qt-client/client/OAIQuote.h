/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuote.h
 *
 * 
 */

#ifndef OAIQuote_H
#define OAIQuote_H

#include <QJsonObject>

#include "OAIContact.h"
#include "OAICurrencyCode.h"
#include "OAILineItem.h"
#include "OAIQuoteLineAmountTypes.h"
#include "OAIQuoteStatusCodes.h"
#include "OAIValidationError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContact;
class OAILineItem;
class OAIValidationError;

class OAIQuote : public OAIObject {
public:
    OAIQuote();
    OAIQuote(QString json);
    ~OAIQuote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBrandingThemeId() const;
    void setBrandingThemeId(const QString &branding_theme_id);
    bool is_branding_theme_id_Set() const;
    bool is_branding_theme_id_Valid() const;

    OAIContact getContact() const;
    void setContact(const OAIContact &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    OAICurrencyCode getCurrencyCode() const;
    void setCurrencyCode(const OAICurrencyCode &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    double getCurrencyRate() const;
    void setCurrencyRate(const double &currency_rate);
    bool is_currency_rate_Set() const;
    bool is_currency_rate_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDateString() const;
    void setDateString(const QString &date_string);
    bool is_date_string_Set() const;
    bool is_date_string_Valid() const;

    QString getExpiryDate() const;
    void setExpiryDate(const QString &expiry_date);
    bool is_expiry_date_Set() const;
    bool is_expiry_date_Valid() const;

    QString getExpiryDateString() const;
    void setExpiryDateString(const QString &expiry_date_string);
    bool is_expiry_date_string_Set() const;
    bool is_expiry_date_string_Valid() const;

    OAIQuoteLineAmountTypes getLineAmountTypes() const;
    void setLineAmountTypes(const OAIQuoteLineAmountTypes &line_amount_types);
    bool is_line_amount_types_Set() const;
    bool is_line_amount_types_Valid() const;

    QList<OAILineItem> getLineItems() const;
    void setLineItems(const QList<OAILineItem> &line_items);
    bool is_line_items_Set() const;
    bool is_line_items_Valid() const;

    QString getQuoteId() const;
    void setQuoteId(const QString &quote_id);
    bool is_quote_id_Set() const;
    bool is_quote_id_Valid() const;

    QString getQuoteNumber() const;
    void setQuoteNumber(const QString &quote_number);
    bool is_quote_number_Set() const;
    bool is_quote_number_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    OAIQuoteStatusCodes getStatus() const;
    void setStatus(const OAIQuoteStatusCodes &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusAttributeString() const;
    void setStatusAttributeString(const QString &status_attribute_string);
    bool is_status_attribute_string_Set() const;
    bool is_status_attribute_string_Valid() const;

    double getSubTotal() const;
    void setSubTotal(const double &sub_total);
    bool is_sub_total_Set() const;
    bool is_sub_total_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    QString getTerms() const;
    void setTerms(const QString &terms);
    bool is_terms_Set() const;
    bool is_terms_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    double getTotalDiscount() const;
    void setTotalDiscount(const double &total_discount);
    bool is_total_discount_Set() const;
    bool is_total_discount_Valid() const;

    double getTotalTax() const;
    void setTotalTax(const double &total_tax);
    bool is_total_tax_Set() const;
    bool is_total_tax_Valid() const;

    QString getUpdatedDateUtc() const;
    void setUpdatedDateUtc(const QString &updated_date_utc);
    bool is_updated_date_utc_Set() const;
    bool is_updated_date_utc_Valid() const;

    QList<OAIValidationError> getValidationErrors() const;
    void setValidationErrors(const QList<OAIValidationError> &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_branding_theme_id;
    bool m_branding_theme_id_isSet;
    bool m_branding_theme_id_isValid;

    OAIContact m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    OAICurrencyCode m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    double m_currency_rate;
    bool m_currency_rate_isSet;
    bool m_currency_rate_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_date_string;
    bool m_date_string_isSet;
    bool m_date_string_isValid;

    QString m_expiry_date;
    bool m_expiry_date_isSet;
    bool m_expiry_date_isValid;

    QString m_expiry_date_string;
    bool m_expiry_date_string_isSet;
    bool m_expiry_date_string_isValid;

    OAIQuoteLineAmountTypes m_line_amount_types;
    bool m_line_amount_types_isSet;
    bool m_line_amount_types_isValid;

    QList<OAILineItem> m_line_items;
    bool m_line_items_isSet;
    bool m_line_items_isValid;

    QString m_quote_id;
    bool m_quote_id_isSet;
    bool m_quote_id_isValid;

    QString m_quote_number;
    bool m_quote_number_isSet;
    bool m_quote_number_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    OAIQuoteStatusCodes m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_attribute_string;
    bool m_status_attribute_string_isSet;
    bool m_status_attribute_string_isValid;

    double m_sub_total;
    bool m_sub_total_isSet;
    bool m_sub_total_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    QString m_terms;
    bool m_terms_isSet;
    bool m_terms_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    double m_total_discount;
    bool m_total_discount_isSet;
    bool m_total_discount_isValid;

    double m_total_tax;
    bool m_total_tax_isSet;
    bool m_total_tax_isValid;

    QString m_updated_date_utc;
    bool m_updated_date_utc_isSet;
    bool m_updated_date_utc_isValid;

    QList<OAIValidationError> m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuote)

#endif // OAIQuote_H
