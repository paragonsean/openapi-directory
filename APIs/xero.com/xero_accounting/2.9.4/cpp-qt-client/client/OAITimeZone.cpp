/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeZone.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeZone::OAITimeZone(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeZone::OAITimeZone() {
    this->initializeModel();
}

OAITimeZone::~OAITimeZone() {}

void OAITimeZone::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITimeZone::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITimeZone::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MOROCCOSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::MOROCCOSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UTC", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::UTC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GMTSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::GMTSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GREENWICHSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::GREENWICHSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WEUROPESTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::WEUROPESTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CENTRALEUROPESTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CENTRALEUROPESTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ROMANCESTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ROMANCESTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CENTRALEUROPEANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CENTRALEUROPEANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WCENTRALAFRICASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::WCENTRALAFRICASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NAMIBIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::NAMIBIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JORDANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::JORDANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GTBSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::GTBSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MIDDLEEASTSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::MIDDLEEASTSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EGYPTSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::EGYPTSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SYRIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::SYRIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EEUROPESTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::EEUROPESTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SOUTHAFRICASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::SOUTHAFRICASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FLESTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::FLESTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TURKEYSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::TURKEYSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ISRAELSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ISRAELSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KALININGRADSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::KALININGRADSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LIBYASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::LIBYASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ARABICSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ARABICSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ARABSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ARABSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BELARUSSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::BELARUSSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RUSSIANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::RUSSIANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EAFRICASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::EAFRICASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IRANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::IRANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ARABIANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ARABIANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AZERBAIJANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::AZERBAIJANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RUSSIATIMEZONE3", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::RUSSIATIMEZONE3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAURITIUSSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::MAURITIUSSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GEORGIANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::GEORGIANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CAUCASUSSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CAUCASUSSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AFGHANISTANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::AFGHANISTANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WESTASIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::WESTASIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EKATERINBURGSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::EKATERINBURGSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAKISTANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::PAKISTANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INDIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::INDIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SRILANKASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::SRILANKASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NEPALSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::NEPALSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CENTRALASIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CENTRALASIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BANGLADESHSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::BANGLADESHSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NCENTRALASIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::NCENTRALASIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MYANMARSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::MYANMARSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SEASIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::SEASIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NORTHASIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::NORTHASIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHINASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CHINASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NORTHASIAEASTSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::NORTHASIAEASTSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SINGAPORESTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::SINGAPORESTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WAUSTRALIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::WAUSTRALIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TAIPEISTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::TAIPEISTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ULAANBAATARSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ULAANBAATARSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TOKYOSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::TOKYOSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KOREASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::KOREASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("YAKUTSKSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::YAKUTSKSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CENAUSTRALIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CENAUSTRALIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUSCENTRALSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::AUSCENTRALSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EAUSTRALIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::EAUSTRALIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AUSEASTERNSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::AUSEASTERNSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WESTPACIFICSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::WESTPACIFICSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TASMANIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::TASMANIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAGADANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::MAGADANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VLADIVOSTOKSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::VLADIVOSTOKSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RUSSIATIMEZONE10", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::RUSSIATIMEZONE10;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CENTRALPACIFICSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CENTRALPACIFICSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RUSSIATIMEZONE11", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::RUSSIATIMEZONE11;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NEWZEALANDSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::NEWZEALANDSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UTC+12", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::UTC_12;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UTC+13", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::UTC_13;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FIJISTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::FIJISTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("KAMCHATKASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::KAMCHATKASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TONGASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::TONGASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SAMOASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::SAMOASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LINEISLANDSSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::LINEISLANDSSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AZORESSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::AZORESSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CAPEVERDESTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CAPEVERDESTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UTC02", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::UTC02;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MIDATLANTICSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::MIDATLANTICSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ESOUTHAMERICASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ESOUTHAMERICASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ARGENTINASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ARGENTINASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SAEASTERNSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::SAEASTERNSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GREENLANDSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::GREENLANDSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MONTEVIDEOSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::MONTEVIDEOSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BAHIASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::BAHIASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NEWFOUNDLANDSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::NEWFOUNDLANDSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PARAGUAYSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::PARAGUAYSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ATLANTICSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ATLANTICSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CENTRALBRAZILIANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CENTRALBRAZILIANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SAWESTERNSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::SAWESTERNSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PACIFICSASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::PACIFICSASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VENEZUELASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::VENEZUELASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SAPACIFICSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::SAPACIFICSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EASTERNSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::EASTERNSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("USEASTERNSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::USEASTERNSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CENTRALAMERICASTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CENTRALAMERICASTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CENTRALSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CENTRALSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CENTRALSTANDARDTIME(MEXICO)", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CENTRALSTANDARDTIME_MEXICO_;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANADACENTRALSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::CANADACENTRALSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("USMOUNTAINSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::USMOUNTAINSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MOUNTAINSTANDARDTIME(MEXICO)", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::MOUNTAINSTANDARDTIME_MEXICO_;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MOUNTAINSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::MOUNTAINSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PACIFICSTANDARDTIME(MEXICO)", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::PACIFICSTANDARDTIME_MEXICO_;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PACIFICSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::PACIFICSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ALASKANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::ALASKANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HAWAIIANSTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::HAWAIIANSTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UTC11", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::UTC11;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DATELINESTANDARDTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAITimeZone::DATELINESTANDARDTIME;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITimeZone::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITimeZone::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITimeZone::MOROCCOSTANDARDTIME:
            val = "MOROCCOSTANDARDTIME";
            break;
        case eOAITimeZone::UTC:
            val = "UTC";
            break;
        case eOAITimeZone::GMTSTANDARDTIME:
            val = "GMTSTANDARDTIME";
            break;
        case eOAITimeZone::GREENWICHSTANDARDTIME:
            val = "GREENWICHSTANDARDTIME";
            break;
        case eOAITimeZone::WEUROPESTANDARDTIME:
            val = "WEUROPESTANDARDTIME";
            break;
        case eOAITimeZone::CENTRALEUROPESTANDARDTIME:
            val = "CENTRALEUROPESTANDARDTIME";
            break;
        case eOAITimeZone::ROMANCESTANDARDTIME:
            val = "ROMANCESTANDARDTIME";
            break;
        case eOAITimeZone::CENTRALEUROPEANSTANDARDTIME:
            val = "CENTRALEUROPEANSTANDARDTIME";
            break;
        case eOAITimeZone::WCENTRALAFRICASTANDARDTIME:
            val = "WCENTRALAFRICASTANDARDTIME";
            break;
        case eOAITimeZone::NAMIBIASTANDARDTIME:
            val = "NAMIBIASTANDARDTIME";
            break;
        case eOAITimeZone::JORDANSTANDARDTIME:
            val = "JORDANSTANDARDTIME";
            break;
        case eOAITimeZone::GTBSTANDARDTIME:
            val = "GTBSTANDARDTIME";
            break;
        case eOAITimeZone::MIDDLEEASTSTANDARDTIME:
            val = "MIDDLEEASTSTANDARDTIME";
            break;
        case eOAITimeZone::EGYPTSTANDARDTIME:
            val = "EGYPTSTANDARDTIME";
            break;
        case eOAITimeZone::SYRIASTANDARDTIME:
            val = "SYRIASTANDARDTIME";
            break;
        case eOAITimeZone::EEUROPESTANDARDTIME:
            val = "EEUROPESTANDARDTIME";
            break;
        case eOAITimeZone::SOUTHAFRICASTANDARDTIME:
            val = "SOUTHAFRICASTANDARDTIME";
            break;
        case eOAITimeZone::FLESTANDARDTIME:
            val = "FLESTANDARDTIME";
            break;
        case eOAITimeZone::TURKEYSTANDARDTIME:
            val = "TURKEYSTANDARDTIME";
            break;
        case eOAITimeZone::ISRAELSTANDARDTIME:
            val = "ISRAELSTANDARDTIME";
            break;
        case eOAITimeZone::KALININGRADSTANDARDTIME:
            val = "KALININGRADSTANDARDTIME";
            break;
        case eOAITimeZone::LIBYASTANDARDTIME:
            val = "LIBYASTANDARDTIME";
            break;
        case eOAITimeZone::ARABICSTANDARDTIME:
            val = "ARABICSTANDARDTIME";
            break;
        case eOAITimeZone::ARABSTANDARDTIME:
            val = "ARABSTANDARDTIME";
            break;
        case eOAITimeZone::BELARUSSTANDARDTIME:
            val = "BELARUSSTANDARDTIME";
            break;
        case eOAITimeZone::RUSSIANSTANDARDTIME:
            val = "RUSSIANSTANDARDTIME";
            break;
        case eOAITimeZone::EAFRICASTANDARDTIME:
            val = "EAFRICASTANDARDTIME";
            break;
        case eOAITimeZone::IRANSTANDARDTIME:
            val = "IRANSTANDARDTIME";
            break;
        case eOAITimeZone::ARABIANSTANDARDTIME:
            val = "ARABIANSTANDARDTIME";
            break;
        case eOAITimeZone::AZERBAIJANSTANDARDTIME:
            val = "AZERBAIJANSTANDARDTIME";
            break;
        case eOAITimeZone::RUSSIATIMEZONE3:
            val = "RUSSIATIMEZONE3";
            break;
        case eOAITimeZone::MAURITIUSSTANDARDTIME:
            val = "MAURITIUSSTANDARDTIME";
            break;
        case eOAITimeZone::GEORGIANSTANDARDTIME:
            val = "GEORGIANSTANDARDTIME";
            break;
        case eOAITimeZone::CAUCASUSSTANDARDTIME:
            val = "CAUCASUSSTANDARDTIME";
            break;
        case eOAITimeZone::AFGHANISTANSTANDARDTIME:
            val = "AFGHANISTANSTANDARDTIME";
            break;
        case eOAITimeZone::WESTASIASTANDARDTIME:
            val = "WESTASIASTANDARDTIME";
            break;
        case eOAITimeZone::EKATERINBURGSTANDARDTIME:
            val = "EKATERINBURGSTANDARDTIME";
            break;
        case eOAITimeZone::PAKISTANSTANDARDTIME:
            val = "PAKISTANSTANDARDTIME";
            break;
        case eOAITimeZone::INDIASTANDARDTIME:
            val = "INDIASTANDARDTIME";
            break;
        case eOAITimeZone::SRILANKASTANDARDTIME:
            val = "SRILANKASTANDARDTIME";
            break;
        case eOAITimeZone::NEPALSTANDARDTIME:
            val = "NEPALSTANDARDTIME";
            break;
        case eOAITimeZone::CENTRALASIASTANDARDTIME:
            val = "CENTRALASIASTANDARDTIME";
            break;
        case eOAITimeZone::BANGLADESHSTANDARDTIME:
            val = "BANGLADESHSTANDARDTIME";
            break;
        case eOAITimeZone::NCENTRALASIASTANDARDTIME:
            val = "NCENTRALASIASTANDARDTIME";
            break;
        case eOAITimeZone::MYANMARSTANDARDTIME:
            val = "MYANMARSTANDARDTIME";
            break;
        case eOAITimeZone::SEASIASTANDARDTIME:
            val = "SEASIASTANDARDTIME";
            break;
        case eOAITimeZone::NORTHASIASTANDARDTIME:
            val = "NORTHASIASTANDARDTIME";
            break;
        case eOAITimeZone::CHINASTANDARDTIME:
            val = "CHINASTANDARDTIME";
            break;
        case eOAITimeZone::NORTHASIAEASTSTANDARDTIME:
            val = "NORTHASIAEASTSTANDARDTIME";
            break;
        case eOAITimeZone::SINGAPORESTANDARDTIME:
            val = "SINGAPORESTANDARDTIME";
            break;
        case eOAITimeZone::WAUSTRALIASTANDARDTIME:
            val = "WAUSTRALIASTANDARDTIME";
            break;
        case eOAITimeZone::TAIPEISTANDARDTIME:
            val = "TAIPEISTANDARDTIME";
            break;
        case eOAITimeZone::ULAANBAATARSTANDARDTIME:
            val = "ULAANBAATARSTANDARDTIME";
            break;
        case eOAITimeZone::TOKYOSTANDARDTIME:
            val = "TOKYOSTANDARDTIME";
            break;
        case eOAITimeZone::KOREASTANDARDTIME:
            val = "KOREASTANDARDTIME";
            break;
        case eOAITimeZone::YAKUTSKSTANDARDTIME:
            val = "YAKUTSKSTANDARDTIME";
            break;
        case eOAITimeZone::CENAUSTRALIASTANDARDTIME:
            val = "CENAUSTRALIASTANDARDTIME";
            break;
        case eOAITimeZone::AUSCENTRALSTANDARDTIME:
            val = "AUSCENTRALSTANDARDTIME";
            break;
        case eOAITimeZone::EAUSTRALIASTANDARDTIME:
            val = "EAUSTRALIASTANDARDTIME";
            break;
        case eOAITimeZone::AUSEASTERNSTANDARDTIME:
            val = "AUSEASTERNSTANDARDTIME";
            break;
        case eOAITimeZone::WESTPACIFICSTANDARDTIME:
            val = "WESTPACIFICSTANDARDTIME";
            break;
        case eOAITimeZone::TASMANIASTANDARDTIME:
            val = "TASMANIASTANDARDTIME";
            break;
        case eOAITimeZone::MAGADANSTANDARDTIME:
            val = "MAGADANSTANDARDTIME";
            break;
        case eOAITimeZone::VLADIVOSTOKSTANDARDTIME:
            val = "VLADIVOSTOKSTANDARDTIME";
            break;
        case eOAITimeZone::RUSSIATIMEZONE10:
            val = "RUSSIATIMEZONE10";
            break;
        case eOAITimeZone::CENTRALPACIFICSTANDARDTIME:
            val = "CENTRALPACIFICSTANDARDTIME";
            break;
        case eOAITimeZone::RUSSIATIMEZONE11:
            val = "RUSSIATIMEZONE11";
            break;
        case eOAITimeZone::NEWZEALANDSTANDARDTIME:
            val = "NEWZEALANDSTANDARDTIME";
            break;
        case eOAITimeZone::UTC_12:
            val = "UTC+12";
            break;
        case eOAITimeZone::UTC_13:
            val = "UTC+13";
            break;
        case eOAITimeZone::FIJISTANDARDTIME:
            val = "FIJISTANDARDTIME";
            break;
        case eOAITimeZone::KAMCHATKASTANDARDTIME:
            val = "KAMCHATKASTANDARDTIME";
            break;
        case eOAITimeZone::TONGASTANDARDTIME:
            val = "TONGASTANDARDTIME";
            break;
        case eOAITimeZone::SAMOASTANDARDTIME:
            val = "SAMOASTANDARDTIME";
            break;
        case eOAITimeZone::LINEISLANDSSTANDARDTIME:
            val = "LINEISLANDSSTANDARDTIME";
            break;
        case eOAITimeZone::AZORESSTANDARDTIME:
            val = "AZORESSTANDARDTIME";
            break;
        case eOAITimeZone::CAPEVERDESTANDARDTIME:
            val = "CAPEVERDESTANDARDTIME";
            break;
        case eOAITimeZone::UTC02:
            val = "UTC02";
            break;
        case eOAITimeZone::MIDATLANTICSTANDARDTIME:
            val = "MIDATLANTICSTANDARDTIME";
            break;
        case eOAITimeZone::ESOUTHAMERICASTANDARDTIME:
            val = "ESOUTHAMERICASTANDARDTIME";
            break;
        case eOAITimeZone::ARGENTINASTANDARDTIME:
            val = "ARGENTINASTANDARDTIME";
            break;
        case eOAITimeZone::SAEASTERNSTANDARDTIME:
            val = "SAEASTERNSTANDARDTIME";
            break;
        case eOAITimeZone::GREENLANDSTANDARDTIME:
            val = "GREENLANDSTANDARDTIME";
            break;
        case eOAITimeZone::MONTEVIDEOSTANDARDTIME:
            val = "MONTEVIDEOSTANDARDTIME";
            break;
        case eOAITimeZone::BAHIASTANDARDTIME:
            val = "BAHIASTANDARDTIME";
            break;
        case eOAITimeZone::NEWFOUNDLANDSTANDARDTIME:
            val = "NEWFOUNDLANDSTANDARDTIME";
            break;
        case eOAITimeZone::PARAGUAYSTANDARDTIME:
            val = "PARAGUAYSTANDARDTIME";
            break;
        case eOAITimeZone::ATLANTICSTANDARDTIME:
            val = "ATLANTICSTANDARDTIME";
            break;
        case eOAITimeZone::CENTRALBRAZILIANSTANDARDTIME:
            val = "CENTRALBRAZILIANSTANDARDTIME";
            break;
        case eOAITimeZone::SAWESTERNSTANDARDTIME:
            val = "SAWESTERNSTANDARDTIME";
            break;
        case eOAITimeZone::PACIFICSASTANDARDTIME:
            val = "PACIFICSASTANDARDTIME";
            break;
        case eOAITimeZone::VENEZUELASTANDARDTIME:
            val = "VENEZUELASTANDARDTIME";
            break;
        case eOAITimeZone::SAPACIFICSTANDARDTIME:
            val = "SAPACIFICSTANDARDTIME";
            break;
        case eOAITimeZone::EASTERNSTANDARDTIME:
            val = "EASTERNSTANDARDTIME";
            break;
        case eOAITimeZone::USEASTERNSTANDARDTIME:
            val = "USEASTERNSTANDARDTIME";
            break;
        case eOAITimeZone::CENTRALAMERICASTANDARDTIME:
            val = "CENTRALAMERICASTANDARDTIME";
            break;
        case eOAITimeZone::CENTRALSTANDARDTIME:
            val = "CENTRALSTANDARDTIME";
            break;
        case eOAITimeZone::CENTRALSTANDARDTIME_MEXICO_:
            val = "CENTRALSTANDARDTIME(MEXICO)";
            break;
        case eOAITimeZone::CANADACENTRALSTANDARDTIME:
            val = "CANADACENTRALSTANDARDTIME";
            break;
        case eOAITimeZone::USMOUNTAINSTANDARDTIME:
            val = "USMOUNTAINSTANDARDTIME";
            break;
        case eOAITimeZone::MOUNTAINSTANDARDTIME_MEXICO_:
            val = "MOUNTAINSTANDARDTIME(MEXICO)";
            break;
        case eOAITimeZone::MOUNTAINSTANDARDTIME:
            val = "MOUNTAINSTANDARDTIME";
            break;
        case eOAITimeZone::PACIFICSTANDARDTIME_MEXICO_:
            val = "PACIFICSTANDARDTIME(MEXICO)";
            break;
        case eOAITimeZone::PACIFICSTANDARDTIME:
            val = "PACIFICSTANDARDTIME";
            break;
        case eOAITimeZone::ALASKANSTANDARDTIME:
            val = "ALASKANSTANDARDTIME";
            break;
        case eOAITimeZone::HAWAIIANSTANDARDTIME:
            val = "HAWAIIANSTANDARDTIME";
            break;
        case eOAITimeZone::UTC11:
            val = "UTC11";
            break;
        case eOAITimeZone::DATELINESTANDARDTIME:
            val = "DATELINESTANDARDTIME";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITimeZone::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITimeZone::eOAITimeZone OAITimeZone::getValue() const {
    return m_value;
}

void OAITimeZone::setValue(const OAITimeZone::eOAITimeZone& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITimeZone::isSet() const {
    
    return m_value_isSet;
}

bool OAITimeZone::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
