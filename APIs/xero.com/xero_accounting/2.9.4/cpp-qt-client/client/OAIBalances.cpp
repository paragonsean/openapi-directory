/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBalances.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBalances::OAIBalances(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBalances::OAIBalances() {
    this->initializeModel();
}

OAIBalances::~OAIBalances() {}

void OAIBalances::initializeModel() {

    m_accounts_payable_isSet = false;
    m_accounts_payable_isValid = false;

    m_accounts_receivable_isSet = false;
    m_accounts_receivable_isValid = false;
}

void OAIBalances::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBalances::fromJsonObject(QJsonObject json) {

    m_accounts_payable_isValid = ::OpenAPI::fromJsonValue(m_accounts_payable, json[QString("AccountsPayable")]);
    m_accounts_payable_isSet = !json[QString("AccountsPayable")].isNull() && m_accounts_payable_isValid;

    m_accounts_receivable_isValid = ::OpenAPI::fromJsonValue(m_accounts_receivable, json[QString("AccountsReceivable")]);
    m_accounts_receivable_isSet = !json[QString("AccountsReceivable")].isNull() && m_accounts_receivable_isValid;
}

QString OAIBalances::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBalances::asJsonObject() const {
    QJsonObject obj;
    if (m_accounts_payable.isSet()) {
        obj.insert(QString("AccountsPayable"), ::OpenAPI::toJsonValue(m_accounts_payable));
    }
    if (m_accounts_receivable.isSet()) {
        obj.insert(QString("AccountsReceivable"), ::OpenAPI::toJsonValue(m_accounts_receivable));
    }
    return obj;
}

OAIAccountsPayable OAIBalances::getAccountsPayable() const {
    return m_accounts_payable;
}
void OAIBalances::setAccountsPayable(const OAIAccountsPayable &accounts_payable) {
    m_accounts_payable = accounts_payable;
    m_accounts_payable_isSet = true;
}

bool OAIBalances::is_accounts_payable_Set() const{
    return m_accounts_payable_isSet;
}

bool OAIBalances::is_accounts_payable_Valid() const{
    return m_accounts_payable_isValid;
}

OAIAccountsReceivable OAIBalances::getAccountsReceivable() const {
    return m_accounts_receivable;
}
void OAIBalances::setAccountsReceivable(const OAIAccountsReceivable &accounts_receivable) {
    m_accounts_receivable = accounts_receivable;
    m_accounts_receivable_isSet = true;
}

bool OAIBalances::is_accounts_receivable_Set() const{
    return m_accounts_receivable_isSet;
}

bool OAIBalances::is_accounts_receivable_Valid() const{
    return m_accounts_receivable_isValid;
}

bool OAIBalances::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accounts_payable.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_accounts_receivable.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBalances::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
