/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportSummaryAccounts.h
 *
 * A summary of the accounts changes
 */

#ifndef OAIImportSummaryAccounts_H
#define OAIImportSummaryAccounts_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportSummaryAccounts : public OAIObject {
public:
    OAIImportSummaryAccounts();
    OAIImportSummaryAccounts(QString json);
    ~OAIImportSummaryAccounts() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getDeleted() const;
    void setDeleted(const double &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    double getErrored() const;
    void setErrored(const double &errored);
    bool is_errored_Set() const;
    bool is_errored_Valid() const;

    double getLocked() const;
    void setLocked(const double &locked);
    bool is_locked_Set() const;
    bool is_locked_Valid() const;

    double getRNew() const;
    void setRNew(const double &r_new);
    bool is_r_new_Set() const;
    bool is_r_new_Valid() const;

    double getNewOrUpdated() const;
    void setNewOrUpdated(const double &new_or_updated);
    bool is_new_or_updated_Set() const;
    bool is_new_or_updated_Valid() const;

    bool isPresent() const;
    void setPresent(const bool &present);
    bool is_present_Set() const;
    bool is_present_Valid() const;

    double getSystem() const;
    void setSystem(const double &system);
    bool is_system_Set() const;
    bool is_system_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    double getUpdated() const;
    void setUpdated(const double &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    double m_errored;
    bool m_errored_isSet;
    bool m_errored_isValid;

    double m_locked;
    bool m_locked_isSet;
    bool m_locked_isValid;

    double m_r_new;
    bool m_r_new_isSet;
    bool m_r_new_isValid;

    double m_new_or_updated;
    bool m_new_or_updated_isSet;
    bool m_new_or_updated_isValid;

    bool m_present;
    bool m_present_isSet;
    bool m_present_isValid;

    double m_system;
    bool m_system_isSet;
    bool m_system_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    double m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportSummaryAccounts)

#endif // OAIImportSummaryAccounts_H
