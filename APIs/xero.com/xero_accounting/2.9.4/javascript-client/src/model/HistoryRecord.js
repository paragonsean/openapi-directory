/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HistoryRecord model module.
 * @module model/HistoryRecord
 * @version 2.9.4
 */
class HistoryRecord {
    /**
     * Constructs a new <code>HistoryRecord</code>.
     * @alias module:model/HistoryRecord
     */
    constructor() { 
        
        HistoryRecord.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistoryRecord</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryRecord} obj Optional instance to populate.
     * @return {module:model/HistoryRecord} The populated <code>HistoryRecord</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryRecord();

            if (data.hasOwnProperty('Changes')) {
                obj['Changes'] = ApiClient.convertToType(data['Changes'], 'String');
            }
            if (data.hasOwnProperty('DateUTC')) {
                obj['DateUTC'] = ApiClient.convertToType(data['DateUTC'], 'String');
            }
            if (data.hasOwnProperty('Details')) {
                obj['Details'] = ApiClient.convertToType(data['Details'], 'String');
            }
            if (data.hasOwnProperty('User')) {
                obj['User'] = ApiClient.convertToType(data['User'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryRecord</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryRecord</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Changes'] && !(typeof data['Changes'] === 'string' || data['Changes'] instanceof String)) {
            throw new Error("Expected the field `Changes` to be a primitive type in the JSON string but got " + data['Changes']);
        }
        // ensure the json data is a string
        if (data['DateUTC'] && !(typeof data['DateUTC'] === 'string' || data['DateUTC'] instanceof String)) {
            throw new Error("Expected the field `DateUTC` to be a primitive type in the JSON string but got " + data['DateUTC']);
        }
        // ensure the json data is a string
        if (data['Details'] && !(typeof data['Details'] === 'string' || data['Details'] instanceof String)) {
            throw new Error("Expected the field `Details` to be a primitive type in the JSON string but got " + data['Details']);
        }
        // ensure the json data is a string
        if (data['User'] && !(typeof data['User'] === 'string' || data['User'] instanceof String)) {
            throw new Error("Expected the field `User` to be a primitive type in the JSON string but got " + data['User']);
        }

        return true;
    }


}



/**
 * Name of branding theme
 * @member {String} Changes
 */
HistoryRecord.prototype['Changes'] = undefined;

/**
 * UTC timestamp of creation date of branding theme
 * @member {String} DateUTC
 */
HistoryRecord.prototype['DateUTC'] = undefined;

/**
 * details
 * @member {String} Details
 */
HistoryRecord.prototype['Details'] = undefined;

/**
 * has a value of 0
 * @member {String} User
 */
HistoryRecord.prototype['User'] = undefined;






export default HistoryRecord;

