/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BalanceDetails model module.
 * @module model/BalanceDetails
 * @version 2.9.4
 */
class BalanceDetails {
    /**
     * Constructs a new <code>BalanceDetails</code>.
     * An array to specify multiple currency balances of an account
     * @alias module:model/BalanceDetails
     */
    constructor() { 
        
        BalanceDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BalanceDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BalanceDetails} obj Optional instance to populate.
     * @return {module:model/BalanceDetails} The populated <code>BalanceDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BalanceDetails();

            if (data.hasOwnProperty('Balance')) {
                obj['Balance'] = ApiClient.convertToType(data['Balance'], 'Number');
            }
            if (data.hasOwnProperty('CurrencyCode')) {
                obj['CurrencyCode'] = ApiClient.convertToType(data['CurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('CurrencyRate')) {
                obj['CurrencyRate'] = ApiClient.convertToType(data['CurrencyRate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BalanceDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BalanceDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CurrencyCode'] && !(typeof data['CurrencyCode'] === 'string' || data['CurrencyCode'] instanceof String)) {
            throw new Error("Expected the field `CurrencyCode` to be a primitive type in the JSON string but got " + data['CurrencyCode']);
        }

        return true;
    }


}



/**
 * The opening balances of the account. Debits are positive, credits are negative values
 * @member {Number} Balance
 */
BalanceDetails.prototype['Balance'] = undefined;

/**
 * The currency of the balance (Not required for base currency)
 * @member {String} CurrencyCode
 */
BalanceDetails.prototype['CurrencyCode'] = undefined;

/**
 * (Optional) Exchange rate to base currency when money is spent or received. If not specified, XE rate for the day is applied
 * @member {Number} CurrencyRate
 */
BalanceDetails.prototype['CurrencyRate'] = undefined;






export default BalanceDetails;

