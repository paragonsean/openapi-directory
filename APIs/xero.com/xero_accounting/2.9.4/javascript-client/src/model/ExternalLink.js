/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExternalLink model module.
 * @module model/ExternalLink
 * @version 2.9.4
 */
class ExternalLink {
    /**
     * Constructs a new <code>ExternalLink</code>.
     * @alias module:model/ExternalLink
     */
    constructor() { 
        
        ExternalLink.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExternalLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExternalLink} obj Optional instance to populate.
     * @return {module:model/ExternalLink} The populated <code>ExternalLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExternalLink();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('LinkType')) {
                obj['LinkType'] = ApiClient.convertToType(data['LinkType'], 'String');
            }
            if (data.hasOwnProperty('Url')) {
                obj['Url'] = ApiClient.convertToType(data['Url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExternalLink</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExternalLink</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['LinkType'] && !(typeof data['LinkType'] === 'string' || data['LinkType'] instanceof String)) {
            throw new Error("Expected the field `LinkType` to be a primitive type in the JSON string but got " + data['LinkType']);
        }
        // ensure the json data is a string
        if (data['Url'] && !(typeof data['Url'] === 'string' || data['Url'] instanceof String)) {
            throw new Error("Expected the field `Url` to be a primitive type in the JSON string but got " + data['Url']);
        }

        return true;
    }


}



/**
 * @member {String} Description
 */
ExternalLink.prototype['Description'] = undefined;

/**
 * See External link types
 * @member {module:model/ExternalLink.LinkTypeEnum} LinkType
 */
ExternalLink.prototype['LinkType'] = undefined;

/**
 * URL for service e.g. http://twitter.com/xeroapi
 * @member {String} Url
 */
ExternalLink.prototype['Url'] = undefined;





/**
 * Allowed values for the <code>LinkType</code> property.
 * @enum {String}
 * @readonly
 */
ExternalLink['LinkTypeEnum'] = {

    /**
     * value: "Facebook"
     * @const
     */
    "Facebook": "Facebook",

    /**
     * value: "GooglePlus"
     * @const
     */
    "GooglePlus": "GooglePlus",

    /**
     * value: "LinkedIn"
     * @const
     */
    "LinkedIn": "LinkedIn",

    /**
     * value: "Twitter"
     * @const
     */
    "Twitter": "Twitter",

    /**
     * value: "Website"
     * @const
     */
    "Website": "Website"
};



export default ExternalLink;

