/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XeroAccountingApi);
  }
}(this, function(expect, XeroAccountingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XeroAccountingApi.Organisation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Organisation', function() {
    it('should create an instance of Organisation', function() {
      // uncomment below and update the code to test Organisation
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be.a(XeroAccountingApi.Organisation);
    });

    it('should have the property aPIKey (base name: "APIKey")', function() {
      // uncomment below and update the code to test the property aPIKey
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property addresses (base name: "Addresses")', function() {
      // uncomment below and update the code to test the property addresses
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property baseCurrency (base name: "BaseCurrency")', function() {
      // uncomment below and update the code to test the property baseCurrency
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property _class (base name: "Class")', function() {
      // uncomment below and update the code to test the property _class
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "CountryCode")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property createdDateUTC (base name: "CreatedDateUTC")', function() {
      // uncomment below and update the code to test the property createdDateUTC
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property defaultPurchasesTax (base name: "DefaultPurchasesTax")', function() {
      // uncomment below and update the code to test the property defaultPurchasesTax
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property defaultSalesTax (base name: "DefaultSalesTax")', function() {
      // uncomment below and update the code to test the property defaultSalesTax
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property edition (base name: "Edition")', function() {
      // uncomment below and update the code to test the property edition
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property employerIdentificationNumber (base name: "EmployerIdentificationNumber")', function() {
      // uncomment below and update the code to test the property employerIdentificationNumber
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property endOfYearLockDate (base name: "EndOfYearLockDate")', function() {
      // uncomment below and update the code to test the property endOfYearLockDate
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property externalLinks (base name: "ExternalLinks")', function() {
      // uncomment below and update the code to test the property externalLinks
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property financialYearEndDay (base name: "FinancialYearEndDay")', function() {
      // uncomment below and update the code to test the property financialYearEndDay
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property financialYearEndMonth (base name: "FinancialYearEndMonth")', function() {
      // uncomment below and update the code to test the property financialYearEndMonth
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property isDemoCompany (base name: "IsDemoCompany")', function() {
      // uncomment below and update the code to test the property isDemoCompany
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property legalName (base name: "LegalName")', function() {
      // uncomment below and update the code to test the property legalName
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property lineOfBusiness (base name: "LineOfBusiness")', function() {
      // uncomment below and update the code to test the property lineOfBusiness
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property organisationEntityType (base name: "OrganisationEntityType")', function() {
      // uncomment below and update the code to test the property organisationEntityType
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property organisationID (base name: "OrganisationID")', function() {
      // uncomment below and update the code to test the property organisationID
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property organisationStatus (base name: "OrganisationStatus")', function() {
      // uncomment below and update the code to test the property organisationStatus
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property organisationType (base name: "OrganisationType")', function() {
      // uncomment below and update the code to test the property organisationType
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property paymentTerms (base name: "PaymentTerms")', function() {
      // uncomment below and update the code to test the property paymentTerms
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property paysTax (base name: "PaysTax")', function() {
      // uncomment below and update the code to test the property paysTax
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property periodLockDate (base name: "PeriodLockDate")', function() {
      // uncomment below and update the code to test the property periodLockDate
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property phones (base name: "Phones")', function() {
      // uncomment below and update the code to test the property phones
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property registrationNumber (base name: "RegistrationNumber")', function() {
      // uncomment below and update the code to test the property registrationNumber
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property salesTaxBasis (base name: "SalesTaxBasis")', function() {
      // uncomment below and update the code to test the property salesTaxBasis
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property salesTaxPeriod (base name: "SalesTaxPeriod")', function() {
      // uncomment below and update the code to test the property salesTaxPeriod
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property shortCode (base name: "ShortCode")', function() {
      // uncomment below and update the code to test the property shortCode
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property taxNumber (base name: "TaxNumber")', function() {
      // uncomment below and update the code to test the property taxNumber
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "Timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "Version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new XeroAccountingApi.Organisation();
      //expect(instance).to.be();
    });

  });

}));
