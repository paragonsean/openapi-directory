/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XeroAccountingApi);
  }
}(this, function(expect, XeroAccountingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XeroAccountingApi.Item();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Item', function() {
    it('should create an instance of Item', function() {
      // uncomment below and update the code to test Item
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be.a(XeroAccountingApi.Item);
    });

    it('should have the property code (base name: "Code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property inventoryAssetAccountCode (base name: "InventoryAssetAccountCode")', function() {
      // uncomment below and update the code to test the property inventoryAssetAccountCode
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property isPurchased (base name: "IsPurchased")', function() {
      // uncomment below and update the code to test the property isPurchased
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property isSold (base name: "IsSold")', function() {
      // uncomment below and update the code to test the property isSold
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property isTrackedAsInventory (base name: "IsTrackedAsInventory")', function() {
      // uncomment below and update the code to test the property isTrackedAsInventory
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property itemID (base name: "ItemID")', function() {
      // uncomment below and update the code to test the property itemID
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property purchaseDescription (base name: "PurchaseDescription")', function() {
      // uncomment below and update the code to test the property purchaseDescription
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property purchaseDetails (base name: "PurchaseDetails")', function() {
      // uncomment below and update the code to test the property purchaseDetails
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property quantityOnHand (base name: "QuantityOnHand")', function() {
      // uncomment below and update the code to test the property quantityOnHand
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property salesDetails (base name: "SalesDetails")', function() {
      // uncomment below and update the code to test the property salesDetails
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property statusAttributeString (base name: "StatusAttributeString")', function() {
      // uncomment below and update the code to test the property statusAttributeString
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property totalCostPool (base name: "TotalCostPool")', function() {
      // uncomment below and update the code to test the property totalCostPool
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property updatedDateUTC (base name: "UpdatedDateUTC")', function() {
      // uncomment below and update the code to test the property updatedDateUTC
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

    it('should have the property validationErrors (base name: "ValidationErrors")', function() {
      // uncomment below and update the code to test the property validationErrors
      //var instance = new XeroAccountingApi.Item();
      //expect(instance).to.be();
    });

  });

}));
