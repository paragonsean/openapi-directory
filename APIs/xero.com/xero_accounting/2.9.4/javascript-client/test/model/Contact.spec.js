/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XeroAccountingApi);
  }
}(this, function(expect, XeroAccountingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XeroAccountingApi.Contact();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Contact', function() {
    it('should create an instance of Contact', function() {
      // uncomment below and update the code to test Contact
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be.a(XeroAccountingApi.Contact);
    });

    it('should have the property accountNumber (base name: "AccountNumber")', function() {
      // uncomment below and update the code to test the property accountNumber
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property accountsPayableTaxType (base name: "AccountsPayableTaxType")', function() {
      // uncomment below and update the code to test the property accountsPayableTaxType
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property accountsReceivableTaxType (base name: "AccountsReceivableTaxType")', function() {
      // uncomment below and update the code to test the property accountsReceivableTaxType
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property addresses (base name: "Addresses")', function() {
      // uncomment below and update the code to test the property addresses
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property attachments (base name: "Attachments")', function() {
      // uncomment below and update the code to test the property attachments
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property balances (base name: "Balances")', function() {
      // uncomment below and update the code to test the property balances
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property bankAccountDetails (base name: "BankAccountDetails")', function() {
      // uncomment below and update the code to test the property bankAccountDetails
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property batchPayments (base name: "BatchPayments")', function() {
      // uncomment below and update the code to test the property batchPayments
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property brandingTheme (base name: "BrandingTheme")', function() {
      // uncomment below and update the code to test the property brandingTheme
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property contactGroups (base name: "ContactGroups")', function() {
      // uncomment below and update the code to test the property contactGroups
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property contactID (base name: "ContactID")', function() {
      // uncomment below and update the code to test the property contactID
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property contactNumber (base name: "ContactNumber")', function() {
      // uncomment below and update the code to test the property contactNumber
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property contactPersons (base name: "ContactPersons")', function() {
      // uncomment below and update the code to test the property contactPersons
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property contactStatus (base name: "ContactStatus")', function() {
      // uncomment below and update the code to test the property contactStatus
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property defaultCurrency (base name: "DefaultCurrency")', function() {
      // uncomment below and update the code to test the property defaultCurrency
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property discount (base name: "Discount")', function() {
      // uncomment below and update the code to test the property discount
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property emailAddress (base name: "EmailAddress")', function() {
      // uncomment below and update the code to test the property emailAddress
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "FirstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property hasAttachments (base name: "HasAttachments")', function() {
      // uncomment below and update the code to test the property hasAttachments
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property hasValidationErrors (base name: "HasValidationErrors")', function() {
      // uncomment below and update the code to test the property hasValidationErrors
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property isCustomer (base name: "IsCustomer")', function() {
      // uncomment below and update the code to test the property isCustomer
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property isSupplier (base name: "IsSupplier")', function() {
      // uncomment below and update the code to test the property isSupplier
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "LastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property paymentTerms (base name: "PaymentTerms")', function() {
      // uncomment below and update the code to test the property paymentTerms
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property phones (base name: "Phones")', function() {
      // uncomment below and update the code to test the property phones
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property purchasesDefaultAccountCode (base name: "PurchasesDefaultAccountCode")', function() {
      // uncomment below and update the code to test the property purchasesDefaultAccountCode
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property purchasesTrackingCategories (base name: "PurchasesTrackingCategories")', function() {
      // uncomment below and update the code to test the property purchasesTrackingCategories
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property salesDefaultAccountCode (base name: "SalesDefaultAccountCode")', function() {
      // uncomment below and update the code to test the property salesDefaultAccountCode
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property salesTrackingCategories (base name: "SalesTrackingCategories")', function() {
      // uncomment below and update the code to test the property salesTrackingCategories
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property skypeUserName (base name: "SkypeUserName")', function() {
      // uncomment below and update the code to test the property skypeUserName
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property statusAttributeString (base name: "StatusAttributeString")', function() {
      // uncomment below and update the code to test the property statusAttributeString
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property taxNumber (base name: "TaxNumber")', function() {
      // uncomment below and update the code to test the property taxNumber
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property trackingCategoryName (base name: "TrackingCategoryName")', function() {
      // uncomment below and update the code to test the property trackingCategoryName
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property trackingCategoryOption (base name: "TrackingCategoryOption")', function() {
      // uncomment below and update the code to test the property trackingCategoryOption
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property updatedDateUTC (base name: "UpdatedDateUTC")', function() {
      // uncomment below and update the code to test the property updatedDateUTC
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property validationErrors (base name: "ValidationErrors")', function() {
      // uncomment below and update the code to test the property validationErrors
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "Website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

    it('should have the property xeroNetworkKey (base name: "XeroNetworkKey")', function() {
      // uncomment below and update the code to test the property xeroNetworkKey
      //var instance = new XeroAccountingApi.Contact();
      //expect(instance).to.be();
    });

  });

}));
