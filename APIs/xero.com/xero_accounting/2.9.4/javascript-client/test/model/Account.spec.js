/**
 * Xero Accounting API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XeroAccountingApi);
  }
}(this, function(expect, XeroAccountingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XeroAccountingApi.Account();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Account', function() {
    it('should create an instance of Account', function() {
      // uncomment below and update the code to test Account
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be.a(XeroAccountingApi.Account);
    });

    it('should have the property accountID (base name: "AccountID")', function() {
      // uncomment below and update the code to test the property accountID
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property addToWatchlist (base name: "AddToWatchlist")', function() {
      // uncomment below and update the code to test the property addToWatchlist
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property bankAccountNumber (base name: "BankAccountNumber")', function() {
      // uncomment below and update the code to test the property bankAccountNumber
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property bankAccountType (base name: "BankAccountType")', function() {
      // uncomment below and update the code to test the property bankAccountType
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property _class (base name: "Class")', function() {
      // uncomment below and update the code to test the property _class
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "Code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "CurrencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "Description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property enablePaymentsToAccount (base name: "EnablePaymentsToAccount")', function() {
      // uncomment below and update the code to test the property enablePaymentsToAccount
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property hasAttachments (base name: "HasAttachments")', function() {
      // uncomment below and update the code to test the property hasAttachments
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property reportingCode (base name: "ReportingCode")', function() {
      // uncomment below and update the code to test the property reportingCode
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property reportingCodeName (base name: "ReportingCodeName")', function() {
      // uncomment below and update the code to test the property reportingCodeName
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property showInExpenseClaims (base name: "ShowInExpenseClaims")', function() {
      // uncomment below and update the code to test the property showInExpenseClaims
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property systemAccount (base name: "SystemAccount")', function() {
      // uncomment below and update the code to test the property systemAccount
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property taxType (base name: "TaxType")', function() {
      // uncomment below and update the code to test the property taxType
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property updatedDateUTC (base name: "UpdatedDateUTC")', function() {
      // uncomment below and update the code to test the property updatedDateUTC
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

    it('should have the property validationErrors (base name: "ValidationErrors")', function() {
      // uncomment below and update the code to test the property validationErrors
      //var instance = new XeroAccountingApi.Account();
      //expect(instance).to.be();
    });

  });

}));
