/**
 * Xero Files API
 * These endpoints are specific to Xero Files API
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileObject::OAIFileObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileObject::OAIFileObject() {
    this->initializeModel();
}

OAIFileObject::~OAIFileObject() {}

void OAIFileObject::initializeModel() {

    m_created_date_utc_isSet = false;
    m_created_date_utc_isValid = false;

    m_folder_id_isSet = false;
    m_folder_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_mime_type_isSet = false;
    m_mime_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_updated_date_utc_isSet = false;
    m_updated_date_utc_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAIFileObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileObject::fromJsonObject(QJsonObject json) {

    m_created_date_utc_isValid = ::OpenAPI::fromJsonValue(m_created_date_utc, json[QString("CreatedDateUtc")]);
    m_created_date_utc_isSet = !json[QString("CreatedDateUtc")].isNull() && m_created_date_utc_isValid;

    m_folder_id_isValid = ::OpenAPI::fromJsonValue(m_folder_id, json[QString("FolderId")]);
    m_folder_id_isSet = !json[QString("FolderId")].isNull() && m_folder_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_mime_type_isValid = ::OpenAPI::fromJsonValue(m_mime_type, json[QString("MimeType")]);
    m_mime_type_isSet = !json[QString("MimeType")].isNull() && m_mime_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("Size")]);
    m_size_isSet = !json[QString("Size")].isNull() && m_size_isValid;

    m_updated_date_utc_isValid = ::OpenAPI::fromJsonValue(m_updated_date_utc, json[QString("UpdatedDateUtc")]);
    m_updated_date_utc_isSet = !json[QString("UpdatedDateUtc")].isNull() && m_updated_date_utc_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("User")]);
    m_user_isSet = !json[QString("User")].isNull() && m_user_isValid;
}

QString OAIFileObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileObject::asJsonObject() const {
    QJsonObject obj;
    if (m_created_date_utc_isSet) {
        obj.insert(QString("CreatedDateUtc"), ::OpenAPI::toJsonValue(m_created_date_utc));
    }
    if (m_folder_id_isSet) {
        obj.insert(QString("FolderId"), ::OpenAPI::toJsonValue(m_folder_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_mime_type_isSet) {
        obj.insert(QString("MimeType"), ::OpenAPI::toJsonValue(m_mime_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_size_isSet) {
        obj.insert(QString("Size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_updated_date_utc_isSet) {
        obj.insert(QString("UpdatedDateUtc"), ::OpenAPI::toJsonValue(m_updated_date_utc));
    }
    if (m_user.isSet()) {
        obj.insert(QString("User"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

QString OAIFileObject::getCreatedDateUtc() const {
    return m_created_date_utc;
}
void OAIFileObject::setCreatedDateUtc(const QString &created_date_utc) {
    m_created_date_utc = created_date_utc;
    m_created_date_utc_isSet = true;
}

bool OAIFileObject::is_created_date_utc_Set() const{
    return m_created_date_utc_isSet;
}

bool OAIFileObject::is_created_date_utc_Valid() const{
    return m_created_date_utc_isValid;
}

QString OAIFileObject::getFolderId() const {
    return m_folder_id;
}
void OAIFileObject::setFolderId(const QString &folder_id) {
    m_folder_id = folder_id;
    m_folder_id_isSet = true;
}

bool OAIFileObject::is_folder_id_Set() const{
    return m_folder_id_isSet;
}

bool OAIFileObject::is_folder_id_Valid() const{
    return m_folder_id_isValid;
}

QString OAIFileObject::getId() const {
    return m_id;
}
void OAIFileObject::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIFileObject::is_id_Set() const{
    return m_id_isSet;
}

bool OAIFileObject::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIFileObject::getMimeType() const {
    return m_mime_type;
}
void OAIFileObject::setMimeType(const QString &mime_type) {
    m_mime_type = mime_type;
    m_mime_type_isSet = true;
}

bool OAIFileObject::is_mime_type_Set() const{
    return m_mime_type_isSet;
}

bool OAIFileObject::is_mime_type_Valid() const{
    return m_mime_type_isValid;
}

QString OAIFileObject::getName() const {
    return m_name;
}
void OAIFileObject::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFileObject::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFileObject::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIFileObject::getSize() const {
    return m_size;
}
void OAIFileObject::setSize(const qint32 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIFileObject::is_size_Set() const{
    return m_size_isSet;
}

bool OAIFileObject::is_size_Valid() const{
    return m_size_isValid;
}

QString OAIFileObject::getUpdatedDateUtc() const {
    return m_updated_date_utc;
}
void OAIFileObject::setUpdatedDateUtc(const QString &updated_date_utc) {
    m_updated_date_utc = updated_date_utc;
    m_updated_date_utc_isSet = true;
}

bool OAIFileObject::is_updated_date_utc_Set() const{
    return m_updated_date_utc_isSet;
}

bool OAIFileObject::is_updated_date_utc_Valid() const{
    return m_updated_date_utc_isValid;
}

OAIUser OAIFileObject::getUser() const {
    return m_user;
}
void OAIFileObject::setUser(const OAIUser &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIFileObject::is_user_Set() const{
    return m_user_isSet;
}

bool OAIFileObject::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIFileObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_date_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_folder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mime_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_date_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
