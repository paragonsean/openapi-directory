/**
 * Xero Files API
 * These endpoints are specific to Xero Files API
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectGroup::OAIObjectGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectGroup::OAIObjectGroup() {
    this->initializeModel();
}

OAIObjectGroup::~OAIObjectGroup() {}

void OAIObjectGroup::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIObjectGroup::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIObjectGroup::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Account", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::ACCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BankTransaction", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::BANKTRANSACTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Contact", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::CONTACT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CreditNote", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::CREDITNOTE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Invoice", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::INVOICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Item", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::ITEM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ManualJournal", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::MANUALJOURNAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Overpayment", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::OVERPAYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Payment", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::PAYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Prepayment", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::PREPAYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Receipt", Qt::CaseInsensitive) == 0) {
        m_value = eOAIObjectGroup::RECEIPT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIObjectGroup::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIObjectGroup::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIObjectGroup::ACCOUNT:
            val = "Account";
            break;
        case eOAIObjectGroup::BANKTRANSACTION:
            val = "BankTransaction";
            break;
        case eOAIObjectGroup::CONTACT:
            val = "Contact";
            break;
        case eOAIObjectGroup::CREDITNOTE:
            val = "CreditNote";
            break;
        case eOAIObjectGroup::INVOICE:
            val = "Invoice";
            break;
        case eOAIObjectGroup::ITEM:
            val = "Item";
            break;
        case eOAIObjectGroup::MANUALJOURNAL:
            val = "ManualJournal";
            break;
        case eOAIObjectGroup::OVERPAYMENT:
            val = "Overpayment";
            break;
        case eOAIObjectGroup::PAYMENT:
            val = "Payment";
            break;
        case eOAIObjectGroup::PREPAYMENT:
            val = "Prepayment";
            break;
        case eOAIObjectGroup::RECEIPT:
            val = "Receipt";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIObjectGroup::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIObjectGroup::eOAIObjectGroup OAIObjectGroup::getValue() const {
    return m_value;
}

void OAIObjectGroup::setValue(const OAIObjectGroup::eOAIObjectGroup& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIObjectGroup::isSet() const {
    
    return m_value_isSet;
}

bool OAIObjectGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
