/**
 * Xero Files API
 * These endpoints are specific to Xero Files API
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociation::OAIAssociation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociation::OAIAssociation() {
    this->initializeModel();
}

OAIAssociation::~OAIAssociation() {}

void OAIAssociation::initializeModel() {

    m_file_id_isSet = false;
    m_file_id_isValid = false;

    m_object_group_isSet = false;
    m_object_group_isValid = false;

    m_object_id_isSet = false;
    m_object_id_isValid = false;

    m_object_type_isSet = false;
    m_object_type_isValid = false;
}

void OAIAssociation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociation::fromJsonObject(QJsonObject json) {

    m_file_id_isValid = ::OpenAPI::fromJsonValue(m_file_id, json[QString("FileId")]);
    m_file_id_isSet = !json[QString("FileId")].isNull() && m_file_id_isValid;

    m_object_group_isValid = ::OpenAPI::fromJsonValue(m_object_group, json[QString("ObjectGroup")]);
    m_object_group_isSet = !json[QString("ObjectGroup")].isNull() && m_object_group_isValid;

    m_object_id_isValid = ::OpenAPI::fromJsonValue(m_object_id, json[QString("ObjectId")]);
    m_object_id_isSet = !json[QString("ObjectId")].isNull() && m_object_id_isValid;

    m_object_type_isValid = ::OpenAPI::fromJsonValue(m_object_type, json[QString("ObjectType")]);
    m_object_type_isSet = !json[QString("ObjectType")].isNull() && m_object_type_isValid;
}

QString OAIAssociation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociation::asJsonObject() const {
    QJsonObject obj;
    if (m_file_id_isSet) {
        obj.insert(QString("FileId"), ::OpenAPI::toJsonValue(m_file_id));
    }
    if (m_object_group.isSet()) {
        obj.insert(QString("ObjectGroup"), ::OpenAPI::toJsonValue(m_object_group));
    }
    if (m_object_id_isSet) {
        obj.insert(QString("ObjectId"), ::OpenAPI::toJsonValue(m_object_id));
    }
    if (m_object_type.isSet()) {
        obj.insert(QString("ObjectType"), ::OpenAPI::toJsonValue(m_object_type));
    }
    return obj;
}

QString OAIAssociation::getFileId() const {
    return m_file_id;
}
void OAIAssociation::setFileId(const QString &file_id) {
    m_file_id = file_id;
    m_file_id_isSet = true;
}

bool OAIAssociation::is_file_id_Set() const{
    return m_file_id_isSet;
}

bool OAIAssociation::is_file_id_Valid() const{
    return m_file_id_isValid;
}

OAIObjectGroup OAIAssociation::getObjectGroup() const {
    return m_object_group;
}
void OAIAssociation::setObjectGroup(const OAIObjectGroup &object_group) {
    m_object_group = object_group;
    m_object_group_isSet = true;
}

bool OAIAssociation::is_object_group_Set() const{
    return m_object_group_isSet;
}

bool OAIAssociation::is_object_group_Valid() const{
    return m_object_group_isValid;
}

QString OAIAssociation::getObjectId() const {
    return m_object_id;
}
void OAIAssociation::setObjectId(const QString &object_id) {
    m_object_id = object_id;
    m_object_id_isSet = true;
}

bool OAIAssociation::is_object_id_Set() const{
    return m_object_id_isSet;
}

bool OAIAssociation::is_object_id_Valid() const{
    return m_object_id_isValid;
}

OAIObjectType OAIAssociation::getObjectType() const {
    return m_object_type;
}
void OAIAssociation::setObjectType(const OAIObjectType &object_type) {
    m_object_type = object_type;
    m_object_type_isSet = true;
}

bool OAIAssociation::is_object_type_Set() const{
    return m_object_type_isSet;
}

bool OAIAssociation::is_object_type_Valid() const{
    return m_object_type_isValid;
}

bool OAIAssociation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
