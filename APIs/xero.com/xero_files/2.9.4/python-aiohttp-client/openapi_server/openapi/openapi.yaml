openapi: 3.0.0
info:
  contact:
    email: api@xero.com
    name: Xero Platform Team
    url: https://developer.xero.com
    x-twitter: XeroAPI
  description: These endpoints are specific to Xero Files API
  termsOfService: https://developer.xero.com/xero-developer-platform-terms-conditions/
  title: Xero Files API
  version: 2.9.4
  x-apisguru-categories:
  - financial
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/XeroAPI/Xero-OpenAPI/master/xero_files.yaml
    version: "3.0"
  x-providerName: xero.com
  x-serviceName: xero_files
servers:
- description: Xero Files API
  url: https://api.xero.com/files.xro/1.0/
tags:
- description: Operations available to regular developers
  name: Files
paths:
  /Associations/{ObjectId}:
    get:
      description: "By passing in the appropriate options,"
      operationId: get_associations_by_object
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: Object id for single object
        explode: false
        in: path
        name: ObjectId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: "[ { \"FileId\":\"6beccb4a-0d7d-4518-93f3-e0cd1dccb254\", \"\
                ObjectId\":\"1270bf7c-5d18-473a-9231-1e36c4bd33ed\", \"ObjectType\"\
                :\"Business\", \"ObjectGroup\":\"Contact\" } ]"
              schema:
                items:
                  $ref: '#/components/schemas/Association'
                type: array
          description: search results matching criteria
      security:
      - OAuth2:
        - files.read
      summary: Retrieves an association object using a unique object ID
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
  /Files:
    get:
      operationId: get_files
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: pass an optional page size value
        explode: true
        in: query
        name: pagesize
        required: false
        schema:
          example: 50
          maximum: 100
          type: integer
        style: form
      - description: number of records to skip for pagination
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          minimum: 1
          type: integer
        style: form
      - description: values to sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - Name
          - Size
          - CreatedDateUTC
          example: CreatedDateUTC DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example: "{ \"TotalCount\": 100, \"Page\": 1, \"PerPage\": 2, \"Items\"\
                : [ { \"Name\": \"helo-heros.jpg\", \"MimeType\": \"application/jpg\"\
                , \"Size\": 2878711, \"CreatedDateUtc\": \"2021-02-10T16:02:54.9930000\"\
                , \"UpdatedDateUtc\": \"2021-02-10T16:02:54.9930000\", \"User\": {\
                \ \"Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\", \"\
                LastName\": \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\"\
                : \"740add2a-a703-4b8a-a670-1093919c2040\" }, \"FolderId\": \"bf924975-7097-46f2-a143-1ecfbab3c8c3\"\
                , \"Id\": \"3d413bfe-f40f-4807-b953-9a42f834ff15\" }, { \"Name\":\
                \ \"helo-heros.jpg\", \"MimeType\": \"application/jpg\", \"Size\"\
                : 2878711, \"CreatedDateUtc\": \"2021-02-09T21:16:00.6130000\", \"\
                UpdatedDateUtc\": \"2021-02-09T21:16:00.6130000\", \"User\": { \"\
                Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\", \"LastName\"\
                : \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\": \"740add2a-a703-4b8a-a670-1093919c2040\"\
                \ }, \"FolderId\": \"bf924975-7097-46f2-a143-1ecfbab3c8c3\", \"Id\"\
                : \"22f87409-cdfd-4813-a868-559481bcb052\" } ] }"
              schema:
                $ref: '#/components/schemas/Files'
          description: search results matching criteria
      security:
      - OAuth2:
        - files.read
      summary: Retrieves files
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
    post:
      operationId: upload_file
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: pass an optional folder id to save file to specific folder
        explode: true
        in: query
        name: FolderId
        required: false
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadFile_request'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              example: "{ \"Name\": \"helo-heros.jpg\", \"MimeType\": \"application/jpg\"\
                , \"Size\": 2878711, \"CreatedDateUtc\": \"2021-02-10T23:17:50.1930000\"\
                , \"UpdatedDateUtc\": \"2021-02-10T23:17:50.1930000\", \"User\": {\
                \ \"Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\", \"\
                LastName\": \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\"\
                : \"740add2a-a703-4b8a-a670-1093919c2040\" }, \"FolderId\": \"bf924975-7097-46f2-a143-1ecfbab3c8c3\"\
                , \"Id\": \"22f87409-cdfd-4813-a868-559481bcb052\" }"
              schema:
                $ref: '#/components/schemas/FileObject'
          description: A successful request
        "400":
          content:
            application/json:
              example: "[ { \"type\":\"Validation\", \"title\":\"Validation failure\"\
                , \"detail\":\"Extension: boo is not a valid File extension.\" } ]"
          description: "invalid input, object invalid"
      security:
      - OAuth2:
        - files
      summary: Uploads a File
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
      x-codegen-request-body-name: body
  /Files/{FileId}:
    delete:
      description: Delete a specific file
      operationId: delete_file
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: File id for single object
        explode: false
        in: path
        name: FileId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Successful deletion - return response 204 no content
          x-isEmpty: true
      security:
      - OAuth2:
        - files
      summary: Deletes a specific file
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
    get:
      operationId: get_file
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: File id for single object
        explode: false
        in: path
        name: FileId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: "{ \"Name\": \"helo-heros.jpg\", \"MimeType\": \"application/jpg\"\
                , \"Size\": 2878711, \"CreatedDateUtc\": \"2021-02-10T23:17:50.1930000\"\
                , \"UpdatedDateUtc\": \"2021-02-10T23:17:50.1930000\", \"User\": {\
                \ \"Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\", \"\
                LastName\": \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\"\
                : \"740add2a-a703-4b8a-a670-1093919c2040\" }, \"FolderId\": \"bf924975-7097-46f2-a143-1ecfbab3c8c3\"\
                , \"Id\": \"efd77bfc-7018-4da1-b251-7aa2d438382c\" }"
              schema:
                $ref: '#/components/schemas/FileObject'
          description: search results matching criteria
      security:
      - OAuth2:
        - files.read
      summary: Retrieves a file by a unique file ID
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
    put:
      description: Updates file properties of a single file
      operationId: update_file
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: File id for single object
        explode: false
        in: path
        name: FileId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{ \"FolderId\": \"bf924975-7097-46f2-a143-1ecfbab3c8c3\" }"
            schema:
              $ref: '#/components/schemas/FileObject'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example: "{ \"Name\": \"helo-heros.jpg\", \"MimeType\": \"application/jpg\"\
                , \"Size\": 2878711, \"CreatedDateUtc\": \"2021-02-10T23:17:50.1930000\"\
                , \"UpdatedDateUtc\": \"2021-02-10T23:58:54.1000000\", \"User\": {\
                \ \"Name\": \"sid.maestre@xero.com\", \"FirstName\": \"Sidney\", \"\
                LastName\": \"Maestre\", \"FullName\": \"Sidney Maestre\", \"Id\"\
                : \"740add2a-a703-4b8a-a670-1093919c2040\" }, \"FolderId\": \"bf924975-7097-46f2-a143-1ecfbab3c8c3\"\
                , \"Id\": \"efd77bfc-7018-4da1-b251-7aa2d438382c\" }"
              schema:
                $ref: '#/components/schemas/FileObject'
          description: A successful request
        "400":
          content:
            application/json:
              example: "[ { \"type\":\"Rename\", \"title\":\"Rename failed\", \"detail\"\
                :\"Unable to rename efd77bfc-7018-4da1-b251-7aa2d438382c to FooBar\"\
                \ } ]"
          description: "invalid input, object invalid"
      security:
      - OAuth2:
        - files
      summary: Update a file
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
      x-codegen-request-body-name: body
  /Files/{FileId}/Associations:
    get:
      description: "By passing in the appropriate options, \n"
      operationId: get_file_associations
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: File id for single object
        explode: false
        in: path
        name: FileId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: "[ { \"FileId\":\"6beccb4a-0d7d-4518-93f3-e0cd1dccb254\", \"\
                ObjectId\":\"1270bf7c-5d18-473a-9231-1e36c4bd33ed\", \"ObjectType\"\
                :\"Business\", \"ObjectGroup\":\"Contact\" } ]"
              schema:
                items:
                  $ref: '#/components/schemas/Association'
                type: array
          description: search results matching criteria
      security:
      - OAuth2:
        - files.read
      summary: Retrieves a specific file associations
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
    post:
      description: "By passing in the appropriate options, you can create a new folder"
      operationId: create_file_association
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: File id for single object
        explode: false
        in: path
        name: FileId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{ \"ObjectId\": \"1270bf7c-5d18-473a-9231-1e36c4bd33ed\", \"\
              ObjectGroup\": \"Contact\", \"ObjectType\": \"Business\" }"
            schema:
              $ref: '#/components/schemas/Association'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              example: "{ \"FileId\": \"6beccb4a-0d7d-4518-93f3-e0cd1dccb254\", \"\
                ObjectId\": \"1270bf7c-5d18-473a-9231-1e36c4bd33ed\", \"ObjectType\"\
                : \"Business\", \"ObjectGroup\": \"Contact\" }"
              schema:
                $ref: '#/components/schemas/Association'
          description: A successful request
        "400":
          content:
            application/json:
              example: "[ { \"type\":\"Validation\", \"title\":\"Validation failure\"\
                , \"detail\":\"Object is not a Account\" } ]"
          description: "invalid input, object invalid"
      security:
      - OAuth2:
        - files
      summary: Creates a new file association
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
      x-codegen-request-body-name: body
  /Files/{FileId}/Associations/{ObjectId}:
    delete:
      description: "By passing in the appropriate options, you can create a new folder"
      operationId: delete_file_association
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: File id for single object
        explode: false
        in: path
        name: FileId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      - description: Object id for single object
        explode: false
        in: path
        name: ObjectId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Successful deletion - return response 204 no content
          x-isEmpty: true
      security:
      - OAuth2:
        - files
      summary: Deletes an existing file association
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
  /Files/{FileId}/Content:
    get:
      description: "By passing in the appropriate options, retrieve data for specific\
        \ file"
      operationId: get_file_content
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: File id for single object
        explode: false
        in: path
        name: FileId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: returns the byte array of the specific file based on id
      security:
      - OAuth2:
        - files.read
      summary: Retrieves the content of a specific file
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
  /Folders:
    get:
      description: "By passing in the appropriate options, you can search for available\
        \ folders"
      operationId: get_folders
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: values to sort by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - Name
          - Size
          - CreatedDateUTC
          example: CreatedDateUTC DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example: "[ { \"Name\":\"Inbox\", \"FileCount\":14, \"Email\":\"xero.inbox.jpf4.6oo29retajkhtfus@xerofiles.com\"\
                , \"IsInbox\":true, \"Id\":\"bf924975-7097-46f2-a143-1ecfbab3c8c3\"\
                \ }, { \"Name\":\"Contracts\", \"FileCount\":7, \"IsInbox\":false,\
                \ \"Id\":\"554ff1ad-4b94-4266-9b45-e29bcb75e6bf\" } ]"
              schema:
                items:
                  $ref: '#/components/schemas/Folder'
                type: array
          description: search results matching criteria
      security:
      - OAuth2:
        - files.read
      summary: Retrieves folders
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
    post:
      description: "By passing in the appropriate properties, you can create a new\
        \ folder"
      operationId: create_folder
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{ \"Name\": \"My Docs\" }"
            schema:
              $ref: '#/components/schemas/Folder'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example: "{ \"Name\": \"My Docs\", \"FileCount\": 0, \"IsInbox\": false,\
                \ \"Id\": \"913970ad-8c8e-4666-8294-35b9cac23206\" }"
              schema:
                $ref: '#/components/schemas/Folder'
          description: search results matching criteria
        "400":
          content:
            application/json:
              example: "[ { \"type\":\"Validation\", \"title\":\"Validation failure\"\
                , \"detail\":\"Name contains one or more bad characters\" } ]"
          description: "invalid input, object invalid"
      security:
      - OAuth2:
        - files
      summary: Creates a new folder
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
      x-codegen-request-body-name: body
  /Folders/{FolderId}:
    delete:
      description: "By passing in the appropriate ID, you can delete a folder"
      operationId: delete_folder
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: Folder id for single object
        explode: false
        in: path
        name: FolderId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Successful deletion - return response 204 no content
          x-isEmpty: true
      security:
      - OAuth2:
        - files
      summary: Deletes a folder
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
    get:
      description: "By passing in the appropriate ID, you can search for specific\
        \ folder"
      operationId: get_folder
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: Folder id for single object
        explode: false
        in: path
        name: FolderId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: "{ \"Name\": \"My Docs\", \"FileCount\": 0, \"IsInbox\": false,\
                \ \"Id\": \"4c5f3fe4-2516-4863-ac88-3029351773bf\" }"
              schema:
                $ref: '#/components/schemas/Folder'
          description: search results matching criteria
      security:
      - OAuth2:
        - files.read
      summary: Retrieves specific folder by using a unique folder ID
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
    put:
      description: "By passing in the appropriate ID and properties, you can update\
        \ a folder"
      operationId: update_folder
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      - description: Folder id for single object
        explode: false
        in: path
        name: FolderId
        required: true
        schema:
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: "{ \"Name\": \"Your Docs\" }"
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example: "{ \"Name\": \"Your Docs\", \"FileCount\": 0, \"IsInbox\":\
                \ false, \"Id\": \"4c5f3fe4-2516-4863-ac88-3029351773bf\" }"
              schema:
                $ref: '#/components/schemas/Folder'
          description: return the updated object
        "400":
          content:
            application/json:
              example: "[ { \"type\":\"Validation\", \"title\":\"Validation failure\"\
                , \"detail\":\"Name contains one or more bad characters\" } ]"
          description: "invalid input, object invalid"
      security:
      - OAuth2:
        - files
      summary: Updates an existing folder
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
      x-codegen-request-body-name: body
  /Inbox:
    get:
      description: Search for the user inbox
      operationId: get_inbox
      parameters:
      - description: Xero identifier for Tenant
        example: YOUR_XERO_TENANT_ID
        explode: false
        in: header
        name: xero-tenant-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: "{ \"Name\": \"Inbox\", \"FileCount\": 14, \"Email\": \"xero.inbox.jpf4.6oo29retajkhtfus@xerofiles.com\"\
                , \"IsInbox\": true, \"Id\": \"bf924975-7097-46f2-a143-1ecfbab3c8c3\"\
                \ }"
              schema:
                $ref: '#/components/schemas/Folder'
          description: search results matching criteria
      security:
      - OAuth2:
        - files.read
      summary: Retrieves inbox folder
      tags:
      - Files
      x-openapi-router-controller: openapi_server.controllers.files_controller
components:
  parameters:
    requiredHeader:
      description: Xero identifier for Tenant
      example: YOUR_XERO_TENANT_ID
      explode: false
      in: header
      name: xero-tenant-id
      required: true
      schema:
        type: string
      style: simple
  schemas:
    Association:
      example:
        ObjectType: Unknown
        ObjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ObjectGroup: Account
        FileId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        FileId:
          description: The unique identifier of the file
          format: uuid
          title: FileId
          type: string
        ObjectGroup:
          $ref: '#/components/schemas/ObjectGroup'
        ObjectId:
          description: "The identifier of the object that the file is being associated\
            \ with (e.g. InvoiceID, BankTransactionID, ContactID)"
          format: uuid
          title: ObjectId
          type: string
        ObjectType:
          $ref: '#/components/schemas/ObjectType'
      title: Association
      type: object
    FileObject:
      example:
        CreatedDateUtc: 2020-12-03T19:04:58.6970000
        User:
          FirstName: John
          FullName: Smith
          Id: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          LastName: Smith
          Name: john.smith@mail.com
        UpdatedDateUtc: 2020-12-03T19:04:58.6970000
        Size: 3615
        FolderId: 0f8ccf21-7267-4268-9167-a1e2c40c84c8
        Id: d290f1ee-6c54-4b01-90e6-d701748f0851
        MimeType: image/jpeg
        Name: File2.jpg
      properties:
        CreatedDateUtc:
          description: Created date in UTC
          example: 2020-12-03T19:04:58.6970000
          title: CreatedDateUtc
          type: string
        FolderId:
          description: Folder relation object's UUID
          example: 0f8ccf21-7267-4268-9167-a1e2c40c84c8
          format: uuid
          title: FolderId
          type: string
        Id:
          description: File object's UUID
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
          format: uuid
          title: Id
          type: string
        MimeType:
          description: "MimeType of the file (image/png, image/jpeg, application/pdf,\
            \ etc..)"
          example: image/jpeg
          title: MimeType
          type: string
        Name:
          description: File Name
          example: File2.jpg
          title: Name
          type: string
        Size:
          description: Numeric value in bytes
          example: 3615
          title: Size
          type: integer
        UpdatedDateUtc:
          description: Updated date in UTC
          example: 2020-12-03T19:04:58.6970000
          title: UpdatedDateUtc
          type: string
        User:
          $ref: '#/components/schemas/User'
      required:
      - id
      - manufacturer
      - name
      - releaseDate
      title: FileObject
      type: object
    Files:
      example:
        TotalCount: 2
        PerPage: 50
        Items:
        - CreatedDateUtc: 2020-12-03T19:04:58.6970000
          User:
            FirstName: John
            FullName: Smith
            Id: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
            LastName: Smith
            Name: john.smith@mail.com
          UpdatedDateUtc: 2020-12-03T19:04:58.6970000
          Size: 3615
          FolderId: 0f8ccf21-7267-4268-9167-a1e2c40c84c8
          Id: d290f1ee-6c54-4b01-90e6-d701748f0851
          MimeType: image/jpeg
          Name: File2.jpg
        - CreatedDateUtc: 2020-12-03T19:04:58.6970000
          User:
            FirstName: John
            FullName: Smith
            Id: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
            LastName: Smith
            Name: john.smith@mail.com
          UpdatedDateUtc: 2020-12-03T19:04:58.6970000
          Size: 3615
          FolderId: 0f8ccf21-7267-4268-9167-a1e2c40c84c8
          Id: d290f1ee-6c54-4b01-90e6-d701748f0851
          MimeType: image/jpeg
          Name: File2.jpg
        Page: 1
      properties:
        Items:
          items:
            $ref: '#/components/schemas/FileObject'
          title: Items
          type: array
        Page:
          example: 1
          title: Page
          type: integer
        PerPage:
          example: 50
          title: PerPage
          type: integer
        TotalCount:
          example: 2
          title: TotalCount
          type: integer
      title: Files
      type: object
    Folder:
      example:
        IsInbox: true
        Email: foo@bar.com
        FileCount: 5
        Id: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
        Name: assets
      properties:
        Email:
          description: The email address used to email files to the inbox. Only the
            inbox will have this element.
          example: foo@bar.com
          title: Email
          type: string
        FileCount:
          description: The number of files in the folder
          example: 5
          title: FileCount
          type: integer
        Id:
          description: Xero unique identifier for a folder  Files
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          title: Id
          type: string
        IsInbox:
          description: to indicate if the folder is the Inbox. The Inbox cannot be
            renamed or deleted.
          example: true
          title: IsInbox
          type: boolean
        Name:
          description: The name of the folder
          example: assets
          title: Name
          type: string
      required:
      - name
      title: Folder
    Folders:
      properties:
        Folders:
          items:
            $ref: '#/components/schemas/Folder'
          type: array
      type: object
    ObjectGroup:
      description: The Object Group that the object is in. These roughly correlate
        to the endpoints that can be used to retrieve the object via the core accounting
        API.
      enum:
      - Account
      - BankTransaction
      - Contact
      - CreditNote
      - Invoice
      - Item
      - ManualJournal
      - Overpayment
      - Payment
      - Prepayment
      - Receipt
      title: ObjectGroup
      type: string
    ObjectType:
      description: The Object Type
      enum:
      - Unknown
      - Accpay
      - AccPayCredit
      - AccPayPayment
      - AccRec
      - AccRecCredit
      - AccRecPayment
      - Adjustment
      - ApCreditPayment
      - ApOverPayment
      - ApOverPaymentPayment
      - ApOverPaymentSourcePayment
      - ApPrepayment
      - ApPrepaymentPayment
      - ApPrepaymentSourcePayment
      - ArCreditPayment
      - ArOverPayment
      - ArOverpaymentPayment
      - ArOverpaymentSourcePayment
      - ArPrepayment
      - ArPrepaymentPayment
      - ArPrepaymentSourcePayment
      - CashPaid
      - CashRec
      - ExpPayment
      - ManJournal
      - PurchaseOrder
      - Receipt
      - Transfer
      - Account
      - Contact
      - Business
      - Employee
      - Person
      - User
      - Org
      - FixedAsset
      - PayRun
      - PriceListItem
      - Bank
      - Current
      - Equity
      - Expense
      - Fixed
      - Liability
      - Prepayment
      - Revenue
      - Sales
      - Overheads
      - Depreciatn
      - OtherIncome
      - DirectCosts
      - Currliab
      - Termliab
      - NonCurrent
      title: ObjectType
      type: string
    User:
      example:
        FirstName: John
        FullName: Smith
        Id: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
        LastName: Smith
        Name: john.smith@mail.com
      properties:
        FirstName:
          description: First name of user
          example: John
          title: FirstName
          type: string
        FullName:
          description: Last name of user
          example: Smith
          title: FullName
          type: string
        Id:
          description: Xero identifier
          example: 4ff1e5cc-9835-40d5-bb18-09fdb118db9c
          format: uuid
          title: Id
          type: string
        LastName:
          description: Last name of user
          example: Smith
          title: LastName
          type: string
        Name:
          description: "Key is Name, but returns Email address of user who created\
            \ the file"
          example: john.smith@mail.com
          title: Name
          type: string
      required:
      - Id
      title: User
      type: object
    uploadFile_request:
      properties:
        body:
          format: byte
          type: string
        filename:
          type: string
        mimeType:
          type: string
        name:
          description: exact name of the file you are uploading
          type: string
      type: object
  securitySchemes:
    OAuth2:
      description: For more information
      flows:
        authorizationCode:
          authorizationUrl: https://login.xero.com/identity/connect/authorize
          scopes:
            email: Grant read-only access to your email
            files: Grant read-write access to files and folders
            files.read: Grant read-only access to files and folders
            openid: Grant read-only access to your open id
            profile: your profile information
          tokenUrl: https://identity.xero.com/connect/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_OAuth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_OAuth2
