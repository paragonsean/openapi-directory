# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user import User
from openapi_server import util


class FileObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_date_utc: str=None, folder_id: str=None, id: str=None, mime_type: str=None, name: str=None, size: int=None, updated_date_utc: str=None, user: User=None):
        """FileObject - a model defined in OpenAPI

        :param created_date_utc: The created_date_utc of this FileObject.
        :param folder_id: The folder_id of this FileObject.
        :param id: The id of this FileObject.
        :param mime_type: The mime_type of this FileObject.
        :param name: The name of this FileObject.
        :param size: The size of this FileObject.
        :param updated_date_utc: The updated_date_utc of this FileObject.
        :param user: The user of this FileObject.
        """
        self.openapi_types = {
            'created_date_utc': str,
            'folder_id': str,
            'id': str,
            'mime_type': str,
            'name': str,
            'size': int,
            'updated_date_utc': str,
            'user': User
        }

        self.attribute_map = {
            'created_date_utc': 'CreatedDateUtc',
            'folder_id': 'FolderId',
            'id': 'Id',
            'mime_type': 'MimeType',
            'name': 'Name',
            'size': 'Size',
            'updated_date_utc': 'UpdatedDateUtc',
            'user': 'User'
        }

        self._created_date_utc = created_date_utc
        self._folder_id = folder_id
        self._id = id
        self._mime_type = mime_type
        self._name = name
        self._size = size
        self._updated_date_utc = updated_date_utc
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileObject of this FileObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_date_utc(self):
        """Gets the created_date_utc of this FileObject.

        Created date in UTC

        :return: The created_date_utc of this FileObject.
        :rtype: str
        """
        return self._created_date_utc

    @created_date_utc.setter
    def created_date_utc(self, created_date_utc):
        """Sets the created_date_utc of this FileObject.

        Created date in UTC

        :param created_date_utc: The created_date_utc of this FileObject.
        :type created_date_utc: str
        """

        self._created_date_utc = created_date_utc

    @property
    def folder_id(self):
        """Gets the folder_id of this FileObject.

        Folder relation object's UUID

        :return: The folder_id of this FileObject.
        :rtype: str
        """
        return self._folder_id

    @folder_id.setter
    def folder_id(self, folder_id):
        """Sets the folder_id of this FileObject.

        Folder relation object's UUID

        :param folder_id: The folder_id of this FileObject.
        :type folder_id: str
        """

        self._folder_id = folder_id

    @property
    def id(self):
        """Gets the id of this FileObject.

        File object's UUID

        :return: The id of this FileObject.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FileObject.

        File object's UUID

        :param id: The id of this FileObject.
        :type id: str
        """

        self._id = id

    @property
    def mime_type(self):
        """Gets the mime_type of this FileObject.

        MimeType of the file (image/png, image/jpeg, application/pdf, etc..)

        :return: The mime_type of this FileObject.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this FileObject.

        MimeType of the file (image/png, image/jpeg, application/pdf, etc..)

        :param mime_type: The mime_type of this FileObject.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def name(self):
        """Gets the name of this FileObject.

        File Name

        :return: The name of this FileObject.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FileObject.

        File Name

        :param name: The name of this FileObject.
        :type name: str
        """

        self._name = name

    @property
    def size(self):
        """Gets the size of this FileObject.

        Numeric value in bytes

        :return: The size of this FileObject.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this FileObject.

        Numeric value in bytes

        :param size: The size of this FileObject.
        :type size: int
        """

        self._size = size

    @property
    def updated_date_utc(self):
        """Gets the updated_date_utc of this FileObject.

        Updated date in UTC

        :return: The updated_date_utc of this FileObject.
        :rtype: str
        """
        return self._updated_date_utc

    @updated_date_utc.setter
    def updated_date_utc(self, updated_date_utc):
        """Sets the updated_date_utc of this FileObject.

        Updated date in UTC

        :param updated_date_utc: The updated_date_utc of this FileObject.
        :type updated_date_utc: str
        """

        self._updated_date_utc = updated_date_utc

    @property
    def user(self):
        """Gets the user of this FileObject.


        :return: The user of this FileObject.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this FileObject.


        :param user: The user of this FileObject.
        :type user: User
        """

        self._user = user
