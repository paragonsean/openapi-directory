# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.object_group import ObjectGroup
from openapi_server.models.object_type import ObjectType
from openapi_server import util


class Association(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_id: str=None, object_group: ObjectGroup=None, object_id: str=None, object_type: ObjectType=None):
        """Association - a model defined in OpenAPI

        :param file_id: The file_id of this Association.
        :param object_group: The object_group of this Association.
        :param object_id: The object_id of this Association.
        :param object_type: The object_type of this Association.
        """
        self.openapi_types = {
            'file_id': str,
            'object_group': ObjectGroup,
            'object_id': str,
            'object_type': ObjectType
        }

        self.attribute_map = {
            'file_id': 'FileId',
            'object_group': 'ObjectGroup',
            'object_id': 'ObjectId',
            'object_type': 'ObjectType'
        }

        self._file_id = file_id
        self._object_group = object_group
        self._object_id = object_id
        self._object_type = object_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Association':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Association of this Association.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_id(self):
        """Gets the file_id of this Association.

        The unique identifier of the file

        :return: The file_id of this Association.
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this Association.

        The unique identifier of the file

        :param file_id: The file_id of this Association.
        :type file_id: str
        """

        self._file_id = file_id

    @property
    def object_group(self):
        """Gets the object_group of this Association.


        :return: The object_group of this Association.
        :rtype: ObjectGroup
        """
        return self._object_group

    @object_group.setter
    def object_group(self, object_group):
        """Sets the object_group of this Association.


        :param object_group: The object_group of this Association.
        :type object_group: ObjectGroup
        """

        self._object_group = object_group

    @property
    def object_id(self):
        """Gets the object_id of this Association.

        The identifier of the object that the file is being associated with (e.g. InvoiceID, BankTransactionID, ContactID)

        :return: The object_id of this Association.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id):
        """Sets the object_id of this Association.

        The identifier of the object that the file is being associated with (e.g. InvoiceID, BankTransactionID, ContactID)

        :param object_id: The object_id of this Association.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def object_type(self):
        """Gets the object_type of this Association.


        :return: The object_type of this Association.
        :rtype: ObjectType
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this Association.


        :param object_type: The object_type of this Association.
        :type object_type: ObjectType
        """

        self._object_type = object_type
