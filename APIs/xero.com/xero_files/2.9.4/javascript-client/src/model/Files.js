/**
 * Xero Files API
 * These endpoints are specific to Xero Files API
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FileObject from './FileObject';

/**
 * The Files model module.
 * @module model/Files
 * @version 2.9.4
 */
class Files {
    /**
     * Constructs a new <code>Files</code>.
     * @alias module:model/Files
     */
    constructor() { 
        
        Files.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Files</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Files} obj Optional instance to populate.
     * @return {module:model/Files} The populated <code>Files</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Files();

            if (data.hasOwnProperty('Items')) {
                obj['Items'] = ApiClient.convertToType(data['Items'], [FileObject]);
            }
            if (data.hasOwnProperty('Page')) {
                obj['Page'] = ApiClient.convertToType(data['Page'], 'Number');
            }
            if (data.hasOwnProperty('PerPage')) {
                obj['PerPage'] = ApiClient.convertToType(data['PerPage'], 'Number');
            }
            if (data.hasOwnProperty('TotalCount')) {
                obj['TotalCount'] = ApiClient.convertToType(data['TotalCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Files</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Files</code>.
     */
    static validateJSON(data) {
        if (data['Items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Items'])) {
                throw new Error("Expected the field `Items` to be an array in the JSON data but got " + data['Items']);
            }
            // validate the optional field `Items` (array)
            for (const item of data['Items']) {
                FileObject.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/FileObject>} Items
 */
Files.prototype['Items'] = undefined;

/**
 * @member {Number} Page
 */
Files.prototype['Page'] = undefined;

/**
 * @member {Number} PerPage
 */
Files.prototype['PerPage'] = undefined;

/**
 * @member {Number} TotalCount
 */
Files.prototype['TotalCount'] = undefined;






export default Files;

