/**
 * Xero Files API
 * These endpoints are specific to Xero Files API
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Folder from './Folder';

/**
 * The Folders model module.
 * @module model/Folders
 * @version 2.9.4
 */
class Folders {
    /**
     * Constructs a new <code>Folders</code>.
     * @alias module:model/Folders
     */
    constructor() { 
        
        Folders.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Folders</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Folders} obj Optional instance to populate.
     * @return {module:model/Folders} The populated <code>Folders</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Folders();

            if (data.hasOwnProperty('Folders')) {
                obj['Folders'] = ApiClient.convertToType(data['Folders'], [Folder]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Folders</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Folders</code>.
     */
    static validateJSON(data) {
        if (data['Folders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Folders'])) {
                throw new Error("Expected the field `Folders` to be an array in the JSON data but got " + data['Folders']);
            }
            // validate the optional field `Folders` (array)
            for (const item of data['Folders']) {
                Folder.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/Folder>} Folders
 */
Folders.prototype['Folders'] = undefined;






export default Folders;

