# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Connection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_event_id: str=None, created_date_utc: datetime=None, id: str=None, tenant_id: str=None, tenant_name: str=None, tenant_type: str=None, updated_date_utc: datetime=None):
        """Connection - a model defined in OpenAPI

        :param auth_event_id: The auth_event_id of this Connection.
        :param created_date_utc: The created_date_utc of this Connection.
        :param id: The id of this Connection.
        :param tenant_id: The tenant_id of this Connection.
        :param tenant_name: The tenant_name of this Connection.
        :param tenant_type: The tenant_type of this Connection.
        :param updated_date_utc: The updated_date_utc of this Connection.
        """
        self.openapi_types = {
            'auth_event_id': str,
            'created_date_utc': datetime,
            'id': str,
            'tenant_id': str,
            'tenant_name': str,
            'tenant_type': str,
            'updated_date_utc': datetime
        }

        self.attribute_map = {
            'auth_event_id': 'authEventId',
            'created_date_utc': 'createdDateUtc',
            'id': 'id',
            'tenant_id': 'tenantId',
            'tenant_name': 'tenantName',
            'tenant_type': 'tenantType',
            'updated_date_utc': 'updatedDateUtc'
        }

        self._auth_event_id = auth_event_id
        self._created_date_utc = created_date_utc
        self._id = id
        self._tenant_id = tenant_id
        self._tenant_name = tenant_name
        self._tenant_type = tenant_type
        self._updated_date_utc = updated_date_utc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Connection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Connection of this Connection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_event_id(self):
        """Gets the auth_event_id of this Connection.

        Identifier shared across connections authorised at the same time

        :return: The auth_event_id of this Connection.
        :rtype: str
        """
        return self._auth_event_id

    @auth_event_id.setter
    def auth_event_id(self, auth_event_id):
        """Sets the auth_event_id of this Connection.

        Identifier shared across connections authorised at the same time

        :param auth_event_id: The auth_event_id of this Connection.
        :type auth_event_id: str
        """

        self._auth_event_id = auth_event_id

    @property
    def created_date_utc(self):
        """Gets the created_date_utc of this Connection.

        The date when the user connected this tenant to your app

        :return: The created_date_utc of this Connection.
        :rtype: datetime
        """
        return self._created_date_utc

    @created_date_utc.setter
    def created_date_utc(self, created_date_utc):
        """Sets the created_date_utc of this Connection.

        The date when the user connected this tenant to your app

        :param created_date_utc: The created_date_utc of this Connection.
        :type created_date_utc: datetime
        """

        self._created_date_utc = created_date_utc

    @property
    def id(self):
        """Gets the id of this Connection.

        Xero identifier

        :return: The id of this Connection.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Connection.

        Xero identifier

        :param id: The id of this Connection.
        :type id: str
        """

        self._id = id

    @property
    def tenant_id(self):
        """Gets the tenant_id of this Connection.

        Xero identifier of organisation

        :return: The tenant_id of this Connection.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this Connection.

        Xero identifier of organisation

        :param tenant_id: The tenant_id of this Connection.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def tenant_name(self):
        """Gets the tenant_name of this Connection.

        Xero tenant name

        :return: The tenant_name of this Connection.
        :rtype: str
        """
        return self._tenant_name

    @tenant_name.setter
    def tenant_name(self, tenant_name):
        """Sets the tenant_name of this Connection.

        Xero tenant name

        :param tenant_name: The tenant_name of this Connection.
        :type tenant_name: str
        """

        self._tenant_name = tenant_name

    @property
    def tenant_type(self):
        """Gets the tenant_type of this Connection.

        Xero tenant type (i.e. ORGANISATION, PRACTICE)

        :return: The tenant_type of this Connection.
        :rtype: str
        """
        return self._tenant_type

    @tenant_type.setter
    def tenant_type(self, tenant_type):
        """Sets the tenant_type of this Connection.

        Xero tenant type (i.e. ORGANISATION, PRACTICE)

        :param tenant_type: The tenant_type of this Connection.
        :type tenant_type: str
        """

        self._tenant_type = tenant_type

    @property
    def updated_date_utc(self):
        """Gets the updated_date_utc of this Connection.

        The date when the user most recently connected this tenant to your app. May differ to the created date if the user has disconnected and subsequently reconnected this tenant to your app.

        :return: The updated_date_utc of this Connection.
        :rtype: datetime
        """
        return self._updated_date_utc

    @updated_date_utc.setter
    def updated_date_utc(self, updated_date_utc):
        """Sets the updated_date_utc of this Connection.

        The date when the user most recently connected this tenant to your app. May differ to the created date if the user has disconnected and subsequently reconnected this tenant to your app.

        :param updated_date_utc: The updated_date_utc of this Connection.
        :type updated_date_utc: datetime
        """

        self._updated_date_utc = updated_date_utc
