/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XeroPayrollAuApi);
  }
}(this, function(expect, XeroPayrollAuApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XeroPayrollAuApi.TaxDeclaration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TaxDeclaration', function() {
    it('should create an instance of TaxDeclaration', function() {
      // uncomment below and update the code to test TaxDeclaration
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be.a(XeroPayrollAuApi.TaxDeclaration);
    });

    it('should have the property approvedWithholdingVariationPercentage (base name: "ApprovedWithholdingVariationPercentage")', function() {
      // uncomment below and update the code to test the property approvedWithholdingVariationPercentage
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property australianResidentForTaxPurposes (base name: "AustralianResidentForTaxPurposes")', function() {
      // uncomment below and update the code to test the property australianResidentForTaxPurposes
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property eligibleToReceiveLeaveLoading (base name: "EligibleToReceiveLeaveLoading")', function() {
      // uncomment below and update the code to test the property eligibleToReceiveLeaveLoading
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property employeeID (base name: "EmployeeID")', function() {
      // uncomment below and update the code to test the property employeeID
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property employmentBasis (base name: "EmploymentBasis")', function() {
      // uncomment below and update the code to test the property employmentBasis
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property hasHELPDebt (base name: "HasHELPDebt")', function() {
      // uncomment below and update the code to test the property hasHELPDebt
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property hasSFSSDebt (base name: "HasSFSSDebt")', function() {
      // uncomment below and update the code to test the property hasSFSSDebt
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property hasStudentStartupLoan (base name: "HasStudentStartupLoan")', function() {
      // uncomment below and update the code to test the property hasStudentStartupLoan
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property hasTradeSupportLoanDebt (base name: "HasTradeSupportLoanDebt")', function() {
      // uncomment below and update the code to test the property hasTradeSupportLoanDebt
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property residencyStatus (base name: "ResidencyStatus")', function() {
      // uncomment below and update the code to test the property residencyStatus
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property tFNExemptionType (base name: "TFNExemptionType")', function() {
      // uncomment below and update the code to test the property tFNExemptionType
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property taxFileNumber (base name: "TaxFileNumber")', function() {
      // uncomment below and update the code to test the property taxFileNumber
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property taxFreeThresholdClaimed (base name: "TaxFreeThresholdClaimed")', function() {
      // uncomment below and update the code to test the property taxFreeThresholdClaimed
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property taxOffsetEstimatedAmount (base name: "TaxOffsetEstimatedAmount")', function() {
      // uncomment below and update the code to test the property taxOffsetEstimatedAmount
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property updatedDateUTC (base name: "UpdatedDateUTC")', function() {
      // uncomment below and update the code to test the property updatedDateUTC
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

    it('should have the property upwardVariationTaxWithholdingAmount (base name: "UpwardVariationTaxWithholdingAmount")', function() {
      // uncomment below and update the code to test the property upwardVariationTaxWithholdingAmount
      //var instance = new XeroPayrollAuApi.TaxDeclaration();
      //expect(instance).to.be();
    });

  });

}));
