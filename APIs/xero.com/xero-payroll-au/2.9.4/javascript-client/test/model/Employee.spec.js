/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.XeroPayrollAuApi);
  }
}(this, function(expect, XeroPayrollAuApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new XeroPayrollAuApi.Employee();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Employee', function() {
    it('should create an instance of Employee', function() {
      // uncomment below and update the code to test Employee
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be.a(XeroPayrollAuApi.Employee);
    });

    it('should have the property bankAccounts (base name: "BankAccounts")', function() {
      // uncomment below and update the code to test the property bankAccounts
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property classification (base name: "Classification")', function() {
      // uncomment below and update the code to test the property classification
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property dateOfBirth (base name: "DateOfBirth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "Email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property employeeGroupName (base name: "EmployeeGroupName")', function() {
      // uncomment below and update the code to test the property employeeGroupName
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property employeeID (base name: "EmployeeID")', function() {
      // uncomment below and update the code to test the property employeeID
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "FirstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "Gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property homeAddress (base name: "HomeAddress")', function() {
      // uncomment below and update the code to test the property homeAddress
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property isAuthorisedToApproveLeave (base name: "IsAuthorisedToApproveLeave")', function() {
      // uncomment below and update the code to test the property isAuthorisedToApproveLeave
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property isAuthorisedToApproveTimesheets (base name: "IsAuthorisedToApproveTimesheets")', function() {
      // uncomment below and update the code to test the property isAuthorisedToApproveTimesheets
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property jobTitle (base name: "JobTitle")', function() {
      // uncomment below and update the code to test the property jobTitle
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "LastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property leaveBalances (base name: "LeaveBalances")', function() {
      // uncomment below and update the code to test the property leaveBalances
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property leaveLines (base name: "LeaveLines")', function() {
      // uncomment below and update the code to test the property leaveLines
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property middleNames (base name: "MiddleNames")', function() {
      // uncomment below and update the code to test the property middleNames
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property mobile (base name: "Mobile")', function() {
      // uncomment below and update the code to test the property mobile
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property openingBalances (base name: "OpeningBalances")', function() {
      // uncomment below and update the code to test the property openingBalances
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property ordinaryEarningsRateID (base name: "OrdinaryEarningsRateID")', function() {
      // uncomment below and update the code to test the property ordinaryEarningsRateID
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property payTemplate (base name: "PayTemplate")', function() {
      // uncomment below and update the code to test the property payTemplate
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property payrollCalendarID (base name: "PayrollCalendarID")', function() {
      // uncomment below and update the code to test the property payrollCalendarID
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "Phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "StartDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property superMemberships (base name: "SuperMemberships")', function() {
      // uncomment below and update the code to test the property superMemberships
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property taxDeclaration (base name: "TaxDeclaration")', function() {
      // uncomment below and update the code to test the property taxDeclaration
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property terminationDate (base name: "TerminationDate")', function() {
      // uncomment below and update the code to test the property terminationDate
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "Title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property twitterUserName (base name: "TwitterUserName")', function() {
      // uncomment below and update the code to test the property twitterUserName
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property updatedDateUTC (base name: "UpdatedDateUTC")', function() {
      // uncomment below and update the code to test the property updatedDateUTC
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

    it('should have the property validationErrors (base name: "ValidationErrors")', function() {
      // uncomment below and update the code to test the property validationErrors
      //var instance = new XeroPayrollAuApi.Employee();
      //expect(instance).to.be();
    });

  });

}));
