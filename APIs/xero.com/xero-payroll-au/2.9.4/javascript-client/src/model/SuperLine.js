/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SuperannuationCalculationType from './SuperannuationCalculationType';
import SuperannuationContributionType from './SuperannuationContributionType';

/**
 * The SuperLine model module.
 * @module model/SuperLine
 * @version 2.9.4
 */
class SuperLine {
    /**
     * Constructs a new <code>SuperLine</code>.
     * @alias module:model/SuperLine
     */
    constructor() { 
        
        SuperLine.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SuperLine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SuperLine} obj Optional instance to populate.
     * @return {module:model/SuperLine} The populated <code>SuperLine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SuperLine();

            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = ApiClient.convertToType(data['Amount'], 'Number');
            }
            if (data.hasOwnProperty('CalculationType')) {
                obj['CalculationType'] = SuperannuationCalculationType.constructFromObject(data['CalculationType']);
            }
            if (data.hasOwnProperty('ContributionType')) {
                obj['ContributionType'] = SuperannuationContributionType.constructFromObject(data['ContributionType']);
            }
            if (data.hasOwnProperty('ExpenseAccountCode')) {
                obj['ExpenseAccountCode'] = ApiClient.convertToType(data['ExpenseAccountCode'], 'String');
            }
            if (data.hasOwnProperty('LiabilityAccountCode')) {
                obj['LiabilityAccountCode'] = ApiClient.convertToType(data['LiabilityAccountCode'], 'String');
            }
            if (data.hasOwnProperty('MinimumMonthlyEarnings')) {
                obj['MinimumMonthlyEarnings'] = ApiClient.convertToType(data['MinimumMonthlyEarnings'], 'Number');
            }
            if (data.hasOwnProperty('Percentage')) {
                obj['Percentage'] = ApiClient.convertToType(data['Percentage'], 'Number');
            }
            if (data.hasOwnProperty('SuperMembershipID')) {
                obj['SuperMembershipID'] = ApiClient.convertToType(data['SuperMembershipID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SuperLine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SuperLine</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ExpenseAccountCode'] && !(typeof data['ExpenseAccountCode'] === 'string' || data['ExpenseAccountCode'] instanceof String)) {
            throw new Error("Expected the field `ExpenseAccountCode` to be a primitive type in the JSON string but got " + data['ExpenseAccountCode']);
        }
        // ensure the json data is a string
        if (data['LiabilityAccountCode'] && !(typeof data['LiabilityAccountCode'] === 'string' || data['LiabilityAccountCode'] instanceof String)) {
            throw new Error("Expected the field `LiabilityAccountCode` to be a primitive type in the JSON string but got " + data['LiabilityAccountCode']);
        }
        // ensure the json data is a string
        if (data['SuperMembershipID'] && !(typeof data['SuperMembershipID'] === 'string' || data['SuperMembershipID'] instanceof String)) {
            throw new Error("Expected the field `SuperMembershipID` to be a primitive type in the JSON string but got " + data['SuperMembershipID']);
        }

        return true;
    }


}



/**
 * Super membership amount
 * @member {Number} Amount
 */
SuperLine.prototype['Amount'] = undefined;

/**
 * @member {module:model/SuperannuationCalculationType} CalculationType
 */
SuperLine.prototype['CalculationType'] = undefined;

/**
 * @member {module:model/SuperannuationContributionType} ContributionType
 */
SuperLine.prototype['ContributionType'] = undefined;

/**
 * expense account code
 * @member {String} ExpenseAccountCode
 */
SuperLine.prototype['ExpenseAccountCode'] = undefined;

/**
 * liabilty account code
 * @member {String} LiabilityAccountCode
 */
SuperLine.prototype['LiabilityAccountCode'] = undefined;

/**
 * amount of minimum earnings
 * @member {Number} MinimumMonthlyEarnings
 */
SuperLine.prototype['MinimumMonthlyEarnings'] = undefined;

/**
 * percentage for super line
 * @member {Number} Percentage
 */
SuperLine.prototype['Percentage'] = undefined;

/**
 * Xero super membership ID
 * @member {String} SuperMembershipID
 */
SuperLine.prototype['SuperMembershipID'] = undefined;






export default SuperLine;

