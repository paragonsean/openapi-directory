/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SettingsTrackingCategoriesTimesheetCategories model module.
 * @module model/SettingsTrackingCategoriesTimesheetCategories
 * @version 2.9.4
 */
class SettingsTrackingCategoriesTimesheetCategories {
    /**
     * Constructs a new <code>SettingsTrackingCategoriesTimesheetCategories</code>.
     * The tracking category used for timesheets
     * @alias module:model/SettingsTrackingCategoriesTimesheetCategories
     */
    constructor() { 
        
        SettingsTrackingCategoriesTimesheetCategories.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SettingsTrackingCategoriesTimesheetCategories</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SettingsTrackingCategoriesTimesheetCategories} obj Optional instance to populate.
     * @return {module:model/SettingsTrackingCategoriesTimesheetCategories} The populated <code>SettingsTrackingCategoriesTimesheetCategories</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SettingsTrackingCategoriesTimesheetCategories();

            if (data.hasOwnProperty('TrackingCategoryID')) {
                obj['TrackingCategoryID'] = ApiClient.convertToType(data['TrackingCategoryID'], 'String');
            }
            if (data.hasOwnProperty('TrackingCategoryName')) {
                obj['TrackingCategoryName'] = ApiClient.convertToType(data['TrackingCategoryName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SettingsTrackingCategoriesTimesheetCategories</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SettingsTrackingCategoriesTimesheetCategories</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['TrackingCategoryID'] && !(typeof data['TrackingCategoryID'] === 'string' || data['TrackingCategoryID'] instanceof String)) {
            throw new Error("Expected the field `TrackingCategoryID` to be a primitive type in the JSON string but got " + data['TrackingCategoryID']);
        }
        // ensure the json data is a string
        if (data['TrackingCategoryName'] && !(typeof data['TrackingCategoryName'] === 'string' || data['TrackingCategoryName'] instanceof String)) {
            throw new Error("Expected the field `TrackingCategoryName` to be a primitive type in the JSON string but got " + data['TrackingCategoryName']);
        }

        return true;
    }


}



/**
 * The identifier for the tracking category
 * @member {String} TrackingCategoryID
 */
SettingsTrackingCategoriesTimesheetCategories.prototype['TrackingCategoryID'] = undefined;

/**
 * Name of the tracking category
 * @member {String} TrackingCategoryName
 */
SettingsTrackingCategoriesTimesheetCategories.prototype['TrackingCategoryName'] = undefined;






export default SettingsTrackingCategoriesTimesheetCategories;

