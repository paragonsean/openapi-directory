/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ManualTaxType from './ManualTaxType';

/**
 * The TaxLine model module.
 * @module model/TaxLine
 * @version 2.9.4
 */
class TaxLine {
    /**
     * Constructs a new <code>TaxLine</code>.
     * @alias module:model/TaxLine
     */
    constructor() { 
        
        TaxLine.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaxLine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaxLine} obj Optional instance to populate.
     * @return {module:model/TaxLine} The populated <code>TaxLine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaxLine();

            if (data.hasOwnProperty('Amount')) {
                obj['Amount'] = ApiClient.convertToType(data['Amount'], 'Number');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('LiabilityAccount')) {
                obj['LiabilityAccount'] = ApiClient.convertToType(data['LiabilityAccount'], 'String');
            }
            if (data.hasOwnProperty('ManualTaxType')) {
                obj['ManualTaxType'] = ManualTaxType.constructFromObject(data['ManualTaxType']);
            }
            if (data.hasOwnProperty('PayslipTaxLineID')) {
                obj['PayslipTaxLineID'] = ApiClient.convertToType(data['PayslipTaxLineID'], 'String');
            }
            if (data.hasOwnProperty('TaxTypeName')) {
                obj['TaxTypeName'] = ApiClient.convertToType(data['TaxTypeName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaxLine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaxLine</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['LiabilityAccount'] && !(typeof data['LiabilityAccount'] === 'string' || data['LiabilityAccount'] instanceof String)) {
            throw new Error("Expected the field `LiabilityAccount` to be a primitive type in the JSON string but got " + data['LiabilityAccount']);
        }
        // ensure the json data is a string
        if (data['PayslipTaxLineID'] && !(typeof data['PayslipTaxLineID'] === 'string' || data['PayslipTaxLineID'] instanceof String)) {
            throw new Error("Expected the field `PayslipTaxLineID` to be a primitive type in the JSON string but got " + data['PayslipTaxLineID']);
        }
        // ensure the json data is a string
        if (data['TaxTypeName'] && !(typeof data['TaxTypeName'] === 'string' || data['TaxTypeName'] instanceof String)) {
            throw new Error("Expected the field `TaxTypeName` to be a primitive type in the JSON string but got " + data['TaxTypeName']);
        }

        return true;
    }


}



/**
 * The tax line amount
 * @member {Number} Amount
 */
TaxLine.prototype['Amount'] = undefined;

/**
 * Description of the tax line.
 * @member {String} Description
 */
TaxLine.prototype['Description'] = undefined;

/**
 * The tax line liability account code. For posted pay run you should be able to see liability account code
 * @member {String} LiabilityAccount
 */
TaxLine.prototype['LiabilityAccount'] = undefined;

/**
 * @member {module:model/ManualTaxType} ManualTaxType
 */
TaxLine.prototype['ManualTaxType'] = undefined;

/**
 * Xero identifier for payslip tax line ID.
 * @member {String} PayslipTaxLineID
 */
TaxLine.prototype['PayslipTaxLineID'] = undefined;

/**
 * Name of the tax type.
 * @member {String} TaxTypeName
 */
TaxLine.prototype['TaxTypeName'] = undefined;






export default TaxLine;

