/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmploymentTerminationPaymentType from './EmploymentTerminationPaymentType';
import EntitlementFinalPayPayoutType from './EntitlementFinalPayPayoutType';
import LeaveLineCalculationType from './LeaveLineCalculationType';

/**
 * The LeaveLine model module.
 * @module model/LeaveLine
 * @version 2.9.4
 */
class LeaveLine {
    /**
     * Constructs a new <code>LeaveLine</code>.
     * @alias module:model/LeaveLine
     */
    constructor() { 
        
        LeaveLine.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LeaveLine</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LeaveLine} obj Optional instance to populate.
     * @return {module:model/LeaveLine} The populated <code>LeaveLine</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LeaveLine();

            if (data.hasOwnProperty('AnnualNumberOfUnits')) {
                obj['AnnualNumberOfUnits'] = ApiClient.convertToType(data['AnnualNumberOfUnits'], 'Number');
            }
            if (data.hasOwnProperty('CalculationType')) {
                obj['CalculationType'] = LeaveLineCalculationType.constructFromObject(data['CalculationType']);
            }
            if (data.hasOwnProperty('EmploymentTerminationPaymentType')) {
                obj['EmploymentTerminationPaymentType'] = EmploymentTerminationPaymentType.constructFromObject(data['EmploymentTerminationPaymentType']);
            }
            if (data.hasOwnProperty('EntitlementFinalPayPayoutType')) {
                obj['EntitlementFinalPayPayoutType'] = EntitlementFinalPayPayoutType.constructFromObject(data['EntitlementFinalPayPayoutType']);
            }
            if (data.hasOwnProperty('FullTimeNumberOfUnitsPerPeriod')) {
                obj['FullTimeNumberOfUnitsPerPeriod'] = ApiClient.convertToType(data['FullTimeNumberOfUnitsPerPeriod'], 'Number');
            }
            if (data.hasOwnProperty('IncludeSuperannuationGuaranteeContribution')) {
                obj['IncludeSuperannuationGuaranteeContribution'] = ApiClient.convertToType(data['IncludeSuperannuationGuaranteeContribution'], 'Boolean');
            }
            if (data.hasOwnProperty('LeaveTypeID')) {
                obj['LeaveTypeID'] = ApiClient.convertToType(data['LeaveTypeID'], 'String');
            }
            if (data.hasOwnProperty('NumberOfUnits')) {
                obj['NumberOfUnits'] = ApiClient.convertToType(data['NumberOfUnits'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LeaveLine</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LeaveLine</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['LeaveTypeID'] && !(typeof data['LeaveTypeID'] === 'string' || data['LeaveTypeID'] instanceof String)) {
            throw new Error("Expected the field `LeaveTypeID` to be a primitive type in the JSON string but got " + data['LeaveTypeID']);
        }

        return true;
    }


}



/**
 * Hours of leave accrued each year
 * @member {Number} AnnualNumberOfUnits
 */
LeaveLine.prototype['AnnualNumberOfUnits'] = undefined;

/**
 * @member {module:model/LeaveLineCalculationType} CalculationType
 */
LeaveLine.prototype['CalculationType'] = undefined;

/**
 * @member {module:model/EmploymentTerminationPaymentType} EmploymentTerminationPaymentType
 */
LeaveLine.prototype['EmploymentTerminationPaymentType'] = undefined;

/**
 * @member {module:model/EntitlementFinalPayPayoutType} EntitlementFinalPayPayoutType
 */
LeaveLine.prototype['EntitlementFinalPayPayoutType'] = undefined;

/**
 * Normal ordinary earnings number of units for leave line.
 * @member {Number} FullTimeNumberOfUnitsPerPeriod
 */
LeaveLine.prototype['FullTimeNumberOfUnitsPerPeriod'] = undefined;

/**
 * amount of leave line
 * @member {Boolean} IncludeSuperannuationGuaranteeContribution
 */
LeaveLine.prototype['IncludeSuperannuationGuaranteeContribution'] = undefined;

/**
 * Xero leave type identifier
 * @member {String} LeaveTypeID
 */
LeaveLine.prototype['LeaveTypeID'] = undefined;

/**
 * Number of units for leave line.
 * @member {Number} NumberOfUnits
 */
LeaveLine.prototype['NumberOfUnits'] = undefined;






export default LeaveLine;

