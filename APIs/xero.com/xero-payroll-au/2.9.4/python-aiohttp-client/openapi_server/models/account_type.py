# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    BANK = 'BANK'
    CURRENT = 'CURRENT'
    CURRLIAB = 'CURRLIAB'
    DEPRECIATN = 'DEPRECIATN'
    DIRECTCOSTS = 'DIRECTCOSTS'
    EQUITY = 'EQUITY'
    EXPENSE = 'EXPENSE'
    FIXED = 'FIXED'
    INVENTORY = 'INVENTORY'
    LIABILITY = 'LIABILITY'
    NONCURRENT = 'NONCURRENT'
    OTHERINCOME = 'OTHERINCOME'
    OVERHEADS = 'OVERHEADS'
    PREPAYMENT = 'PREPAYMENT'
    REVENUE = 'REVENUE'
    SALES = 'SALES'
    TERMLIAB = 'TERMLIAB'
    PAYGLIABILITY = 'PAYGLIABILITY'
    PAYG = 'PAYG'
    SUPERANNUATIONEXPENSE = 'SUPERANNUATIONEXPENSE'
    SUPERANNUATIONLIABILITY = 'SUPERANNUATIONLIABILITY'
    WAGESEXPENSE = 'WAGESEXPENSE'
    WAGESPAYABLELIABILITY = 'WAGESPAYABLELIABILITY'

    def __init__(self):
        """AccountType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountType of this AccountType.
        """
        return util.deserialize_model(dikt, cls)
