# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.timesheet_line import TimesheetLine
from openapi_server.models.timesheet_status import TimesheetStatus
from openapi_server.models.validation_error import ValidationError
from openapi_server import util


class Timesheet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, employee_id: str=None, end_date: str=None, hours: float=None, start_date: str=None, status: TimesheetStatus=None, timesheet_id: str=None, timesheet_lines: List[TimesheetLine]=None, updated_date_utc: str=None, validation_errors: List[ValidationError]=None):
        """Timesheet - a model defined in OpenAPI

        :param employee_id: The employee_id of this Timesheet.
        :param end_date: The end_date of this Timesheet.
        :param hours: The hours of this Timesheet.
        :param start_date: The start_date of this Timesheet.
        :param status: The status of this Timesheet.
        :param timesheet_id: The timesheet_id of this Timesheet.
        :param timesheet_lines: The timesheet_lines of this Timesheet.
        :param updated_date_utc: The updated_date_utc of this Timesheet.
        :param validation_errors: The validation_errors of this Timesheet.
        """
        self.openapi_types = {
            'employee_id': str,
            'end_date': str,
            'hours': float,
            'start_date': str,
            'status': TimesheetStatus,
            'timesheet_id': str,
            'timesheet_lines': List[TimesheetLine],
            'updated_date_utc': str,
            'validation_errors': List[ValidationError]
        }

        self.attribute_map = {
            'employee_id': 'EmployeeID',
            'end_date': 'EndDate',
            'hours': 'Hours',
            'start_date': 'StartDate',
            'status': 'Status',
            'timesheet_id': 'TimesheetID',
            'timesheet_lines': 'TimesheetLines',
            'updated_date_utc': 'UpdatedDateUTC',
            'validation_errors': 'ValidationErrors'
        }

        self._employee_id = employee_id
        self._end_date = end_date
        self._hours = hours
        self._start_date = start_date
        self._status = status
        self._timesheet_id = timesheet_id
        self._timesheet_lines = timesheet_lines
        self._updated_date_utc = updated_date_utc
        self._validation_errors = validation_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Timesheet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Timesheet of this Timesheet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def employee_id(self):
        """Gets the employee_id of this Timesheet.

        The Xero identifier for an employee

        :return: The employee_id of this Timesheet.
        :rtype: str
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id):
        """Sets the employee_id of this Timesheet.

        The Xero identifier for an employee

        :param employee_id: The employee_id of this Timesheet.
        :type employee_id: str
        """
        if employee_id is None:
            raise ValueError("Invalid value for `employee_id`, must not be `None`")

        self._employee_id = employee_id

    @property
    def end_date(self):
        """Gets the end_date of this Timesheet.

        Period end date (YYYY-MM-DD)

        :return: The end_date of this Timesheet.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Timesheet.

        Period end date (YYYY-MM-DD)

        :param end_date: The end_date of this Timesheet.
        :type end_date: str
        """
        if end_date is None:
            raise ValueError("Invalid value for `end_date`, must not be `None`")

        self._end_date = end_date

    @property
    def hours(self):
        """Gets the hours of this Timesheet.

        Timesheet total hours

        :return: The hours of this Timesheet.
        :rtype: float
        """
        return self._hours

    @hours.setter
    def hours(self, hours):
        """Sets the hours of this Timesheet.

        Timesheet total hours

        :param hours: The hours of this Timesheet.
        :type hours: float
        """

        self._hours = hours

    @property
    def start_date(self):
        """Gets the start_date of this Timesheet.

        Period start date (YYYY-MM-DD)

        :return: The start_date of this Timesheet.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Timesheet.

        Period start date (YYYY-MM-DD)

        :param start_date: The start_date of this Timesheet.
        :type start_date: str
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")

        self._start_date = start_date

    @property
    def status(self):
        """Gets the status of this Timesheet.


        :return: The status of this Timesheet.
        :rtype: TimesheetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Timesheet.


        :param status: The status of this Timesheet.
        :type status: TimesheetStatus
        """

        self._status = status

    @property
    def timesheet_id(self):
        """Gets the timesheet_id of this Timesheet.

        The Xero identifier for a Payroll Timesheet

        :return: The timesheet_id of this Timesheet.
        :rtype: str
        """
        return self._timesheet_id

    @timesheet_id.setter
    def timesheet_id(self, timesheet_id):
        """Sets the timesheet_id of this Timesheet.

        The Xero identifier for a Payroll Timesheet

        :param timesheet_id: The timesheet_id of this Timesheet.
        :type timesheet_id: str
        """

        self._timesheet_id = timesheet_id

    @property
    def timesheet_lines(self):
        """Gets the timesheet_lines of this Timesheet.


        :return: The timesheet_lines of this Timesheet.
        :rtype: List[TimesheetLine]
        """
        return self._timesheet_lines

    @timesheet_lines.setter
    def timesheet_lines(self, timesheet_lines):
        """Sets the timesheet_lines of this Timesheet.


        :param timesheet_lines: The timesheet_lines of this Timesheet.
        :type timesheet_lines: List[TimesheetLine]
        """

        self._timesheet_lines = timesheet_lines

    @property
    def updated_date_utc(self):
        """Gets the updated_date_utc of this Timesheet.

        Last modified timestamp

        :return: The updated_date_utc of this Timesheet.
        :rtype: str
        """
        return self._updated_date_utc

    @updated_date_utc.setter
    def updated_date_utc(self, updated_date_utc):
        """Sets the updated_date_utc of this Timesheet.

        Last modified timestamp

        :param updated_date_utc: The updated_date_utc of this Timesheet.
        :type updated_date_utc: str
        """

        self._updated_date_utc = updated_date_utc

    @property
    def validation_errors(self):
        """Gets the validation_errors of this Timesheet.

        Displays array of validation error messages from the API

        :return: The validation_errors of this Timesheet.
        :rtype: List[ValidationError]
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this Timesheet.

        Displays array of validation error messages from the API

        :param validation_errors: The validation_errors of this Timesheet.
        :type validation_errors: List[ValidationError]
        """

        self._validation_errors = validation_errors
