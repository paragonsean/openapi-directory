# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account import Account
from openapi_server.models.settings_tracking_categories import SettingsTrackingCategories
from openapi_server import util


class Settings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounts: List[Account]=None, days_in_payroll_year: int=None, tracking_categories: SettingsTrackingCategories=None):
        """Settings - a model defined in OpenAPI

        :param accounts: The accounts of this Settings.
        :param days_in_payroll_year: The days_in_payroll_year of this Settings.
        :param tracking_categories: The tracking_categories of this Settings.
        """
        self.openapi_types = {
            'accounts': List[Account],
            'days_in_payroll_year': int,
            'tracking_categories': SettingsTrackingCategories
        }

        self.attribute_map = {
            'accounts': 'Accounts',
            'days_in_payroll_year': 'DaysInPayrollYear',
            'tracking_categories': 'TrackingCategories'
        }

        self._accounts = accounts
        self._days_in_payroll_year = days_in_payroll_year
        self._tracking_categories = tracking_categories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Settings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Settings of this Settings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounts(self):
        """Gets the accounts of this Settings.

        Payroll Account details for SuperExpense, SuperLiabilty, WagesExpense, PAYGLiability & WagesPayable.

        :return: The accounts of this Settings.
        :rtype: List[Account]
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this Settings.

        Payroll Account details for SuperExpense, SuperLiabilty, WagesExpense, PAYGLiability & WagesPayable.

        :param accounts: The accounts of this Settings.
        :type accounts: List[Account]
        """

        self._accounts = accounts

    @property
    def days_in_payroll_year(self):
        """Gets the days_in_payroll_year of this Settings.

        Number of days in the Payroll year

        :return: The days_in_payroll_year of this Settings.
        :rtype: int
        """
        return self._days_in_payroll_year

    @days_in_payroll_year.setter
    def days_in_payroll_year(self, days_in_payroll_year):
        """Sets the days_in_payroll_year of this Settings.

        Number of days in the Payroll year

        :param days_in_payroll_year: The days_in_payroll_year of this Settings.
        :type days_in_payroll_year: int
        """

        self._days_in_payroll_year = days_in_payroll_year

    @property
    def tracking_categories(self):
        """Gets the tracking_categories of this Settings.


        :return: The tracking_categories of this Settings.
        :rtype: SettingsTrackingCategories
        """
        return self._tracking_categories

    @tracking_categories.setter
    def tracking_categories(self, tracking_categories):
        """Sets the tracking_categories of this Settings.


        :param tracking_categories: The tracking_categories of this Settings.
        :type tracking_categories: SettingsTrackingCategories
        """

        self._tracking_categories = tracking_categories
