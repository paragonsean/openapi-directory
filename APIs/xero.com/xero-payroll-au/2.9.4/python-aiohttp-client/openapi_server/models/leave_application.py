# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.leave_period import LeavePeriod
from openapi_server.models.validation_error import ValidationError
from openapi_server import util


class LeaveApplication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, employee_id: str=None, end_date: str=None, leave_application_id: str=None, leave_periods: List[LeavePeriod]=None, leave_type_id: str=None, start_date: str=None, title: str=None, updated_date_utc: str=None, validation_errors: List[ValidationError]=None):
        """LeaveApplication - a model defined in OpenAPI

        :param description: The description of this LeaveApplication.
        :param employee_id: The employee_id of this LeaveApplication.
        :param end_date: The end_date of this LeaveApplication.
        :param leave_application_id: The leave_application_id of this LeaveApplication.
        :param leave_periods: The leave_periods of this LeaveApplication.
        :param leave_type_id: The leave_type_id of this LeaveApplication.
        :param start_date: The start_date of this LeaveApplication.
        :param title: The title of this LeaveApplication.
        :param updated_date_utc: The updated_date_utc of this LeaveApplication.
        :param validation_errors: The validation_errors of this LeaveApplication.
        """
        self.openapi_types = {
            'description': str,
            'employee_id': str,
            'end_date': str,
            'leave_application_id': str,
            'leave_periods': List[LeavePeriod],
            'leave_type_id': str,
            'start_date': str,
            'title': str,
            'updated_date_utc': str,
            'validation_errors': List[ValidationError]
        }

        self.attribute_map = {
            'description': 'Description',
            'employee_id': 'EmployeeID',
            'end_date': 'EndDate',
            'leave_application_id': 'LeaveApplicationID',
            'leave_periods': 'LeavePeriods',
            'leave_type_id': 'LeaveTypeID',
            'start_date': 'StartDate',
            'title': 'Title',
            'updated_date_utc': 'UpdatedDateUTC',
            'validation_errors': 'ValidationErrors'
        }

        self._description = description
        self._employee_id = employee_id
        self._end_date = end_date
        self._leave_application_id = leave_application_id
        self._leave_periods = leave_periods
        self._leave_type_id = leave_type_id
        self._start_date = start_date
        self._title = title
        self._updated_date_utc = updated_date_utc
        self._validation_errors = validation_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LeaveApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LeaveApplication of this LeaveApplication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this LeaveApplication.

        The Description of the Leave

        :return: The description of this LeaveApplication.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LeaveApplication.

        The Description of the Leave

        :param description: The description of this LeaveApplication.
        :type description: str
        """

        self._description = description

    @property
    def employee_id(self):
        """Gets the employee_id of this LeaveApplication.

        The Xero identifier for Payroll Employee

        :return: The employee_id of this LeaveApplication.
        :rtype: str
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id):
        """Sets the employee_id of this LeaveApplication.

        The Xero identifier for Payroll Employee

        :param employee_id: The employee_id of this LeaveApplication.
        :type employee_id: str
        """

        self._employee_id = employee_id

    @property
    def end_date(self):
        """Gets the end_date of this LeaveApplication.

        End date of the leave (YYYY-MM-DD)

        :return: The end_date of this LeaveApplication.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this LeaveApplication.

        End date of the leave (YYYY-MM-DD)

        :param end_date: The end_date of this LeaveApplication.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def leave_application_id(self):
        """Gets the leave_application_id of this LeaveApplication.

        The Xero identifier for Payroll Employee

        :return: The leave_application_id of this LeaveApplication.
        :rtype: str
        """
        return self._leave_application_id

    @leave_application_id.setter
    def leave_application_id(self, leave_application_id):
        """Sets the leave_application_id of this LeaveApplication.

        The Xero identifier for Payroll Employee

        :param leave_application_id: The leave_application_id of this LeaveApplication.
        :type leave_application_id: str
        """

        self._leave_application_id = leave_application_id

    @property
    def leave_periods(self):
        """Gets the leave_periods of this LeaveApplication.


        :return: The leave_periods of this LeaveApplication.
        :rtype: List[LeavePeriod]
        """
        return self._leave_periods

    @leave_periods.setter
    def leave_periods(self, leave_periods):
        """Sets the leave_periods of this LeaveApplication.


        :param leave_periods: The leave_periods of this LeaveApplication.
        :type leave_periods: List[LeavePeriod]
        """

        self._leave_periods = leave_periods

    @property
    def leave_type_id(self):
        """Gets the leave_type_id of this LeaveApplication.

        The Xero identifier for Leave Type

        :return: The leave_type_id of this LeaveApplication.
        :rtype: str
        """
        return self._leave_type_id

    @leave_type_id.setter
    def leave_type_id(self, leave_type_id):
        """Sets the leave_type_id of this LeaveApplication.

        The Xero identifier for Leave Type

        :param leave_type_id: The leave_type_id of this LeaveApplication.
        :type leave_type_id: str
        """

        self._leave_type_id = leave_type_id

    @property
    def start_date(self):
        """Gets the start_date of this LeaveApplication.

        Start date of the leave (YYYY-MM-DD)

        :return: The start_date of this LeaveApplication.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this LeaveApplication.

        Start date of the leave (YYYY-MM-DD)

        :param start_date: The start_date of this LeaveApplication.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def title(self):
        """Gets the title of this LeaveApplication.

        The title of the leave

        :return: The title of this LeaveApplication.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this LeaveApplication.

        The title of the leave

        :param title: The title of this LeaveApplication.
        :type title: str
        """

        self._title = title

    @property
    def updated_date_utc(self):
        """Gets the updated_date_utc of this LeaveApplication.

        Last modified timestamp

        :return: The updated_date_utc of this LeaveApplication.
        :rtype: str
        """
        return self._updated_date_utc

    @updated_date_utc.setter
    def updated_date_utc(self, updated_date_utc):
        """Sets the updated_date_utc of this LeaveApplication.

        Last modified timestamp

        :param updated_date_utc: The updated_date_utc of this LeaveApplication.
        :type updated_date_utc: str
        """

        self._updated_date_utc = updated_date_utc

    @property
    def validation_errors(self):
        """Gets the validation_errors of this LeaveApplication.

        Displays array of validation error messages from the API

        :return: The validation_errors of this LeaveApplication.
        :rtype: List[ValidationError]
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this LeaveApplication.

        Displays array of validation error messages from the API

        :param validation_errors: The validation_errors of this LeaveApplication.
        :type validation_errors: List[ValidationError]
        """

        self._validation_errors = validation_errors
