# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SuperFundProduct(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abn: str=None, product_name: str=None, spin: str=None, usi: str=None):
        """SuperFundProduct - a model defined in OpenAPI

        :param abn: The abn of this SuperFundProduct.
        :param product_name: The product_name of this SuperFundProduct.
        :param spin: The spin of this SuperFundProduct.
        :param usi: The usi of this SuperFundProduct.
        """
        self.openapi_types = {
            'abn': str,
            'product_name': str,
            'spin': str,
            'usi': str
        }

        self.attribute_map = {
            'abn': 'ABN',
            'product_name': 'ProductName',
            'spin': 'SPIN',
            'usi': 'USI'
        }

        self._abn = abn
        self._product_name = product_name
        self._spin = spin
        self._usi = usi

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuperFundProduct':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuperFundProduct of this SuperFundProduct.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abn(self):
        """Gets the abn of this SuperFundProduct.

        The ABN of the Regulated SuperFund

        :return: The abn of this SuperFundProduct.
        :rtype: str
        """
        return self._abn

    @abn.setter
    def abn(self, abn):
        """Sets the abn of this SuperFundProduct.

        The ABN of the Regulated SuperFund

        :param abn: The abn of this SuperFundProduct.
        :type abn: str
        """

        self._abn = abn

    @property
    def product_name(self):
        """Gets the product_name of this SuperFundProduct.

        The name of the Regulated SuperFund

        :return: The product_name of this SuperFundProduct.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this SuperFundProduct.

        The name of the Regulated SuperFund

        :param product_name: The product_name of this SuperFundProduct.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def spin(self):
        """Gets the spin of this SuperFundProduct.

        The SPIN of the Regulated SuperFund. This field has been deprecated. New superfunds will not have a SPIN value. The USI field should be used instead of SPIN

        :return: The spin of this SuperFundProduct.
        :rtype: str
        """
        return self._spin

    @spin.setter
    def spin(self, spin):
        """Sets the spin of this SuperFundProduct.

        The SPIN of the Regulated SuperFund. This field has been deprecated. New superfunds will not have a SPIN value. The USI field should be used instead of SPIN

        :param spin: The spin of this SuperFundProduct.
        :type spin: str
        """

        self._spin = spin

    @property
    def usi(self):
        """Gets the usi of this SuperFundProduct.

        The USI of the Regulated SuperFund

        :return: The usi of this SuperFundProduct.
        :rtype: str
        """
        return self._usi

    @usi.setter
    def usi(self, usi):
        """Sets the usi of this SuperFundProduct.

        The USI of the Regulated SuperFund

        :param usi: The usi of this SuperFundProduct.
        :type usi: str
        """

        self._usi = usi
