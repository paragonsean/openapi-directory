# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deduction_line import DeductionLine
from openapi_server.models.earnings_line import EarningsLine
from openapi_server.models.leave_line import LeaveLine
from openapi_server.models.reimbursement_line import ReimbursementLine
from openapi_server.models.super_line import SuperLine
from openapi_server import util


class PayTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deduction_lines: List[DeductionLine]=None, earnings_lines: List[EarningsLine]=None, leave_lines: List[LeaveLine]=None, reimbursement_lines: List[ReimbursementLine]=None, super_lines: List[SuperLine]=None):
        """PayTemplate - a model defined in OpenAPI

        :param deduction_lines: The deduction_lines of this PayTemplate.
        :param earnings_lines: The earnings_lines of this PayTemplate.
        :param leave_lines: The leave_lines of this PayTemplate.
        :param reimbursement_lines: The reimbursement_lines of this PayTemplate.
        :param super_lines: The super_lines of this PayTemplate.
        """
        self.openapi_types = {
            'deduction_lines': List[DeductionLine],
            'earnings_lines': List[EarningsLine],
            'leave_lines': List[LeaveLine],
            'reimbursement_lines': List[ReimbursementLine],
            'super_lines': List[SuperLine]
        }

        self.attribute_map = {
            'deduction_lines': 'DeductionLines',
            'earnings_lines': 'EarningsLines',
            'leave_lines': 'LeaveLines',
            'reimbursement_lines': 'ReimbursementLines',
            'super_lines': 'SuperLines'
        }

        self._deduction_lines = deduction_lines
        self._earnings_lines = earnings_lines
        self._leave_lines = leave_lines
        self._reimbursement_lines = reimbursement_lines
        self._super_lines = super_lines

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PayTemplate of this PayTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deduction_lines(self):
        """Gets the deduction_lines of this PayTemplate.


        :return: The deduction_lines of this PayTemplate.
        :rtype: List[DeductionLine]
        """
        return self._deduction_lines

    @deduction_lines.setter
    def deduction_lines(self, deduction_lines):
        """Sets the deduction_lines of this PayTemplate.


        :param deduction_lines: The deduction_lines of this PayTemplate.
        :type deduction_lines: List[DeductionLine]
        """

        self._deduction_lines = deduction_lines

    @property
    def earnings_lines(self):
        """Gets the earnings_lines of this PayTemplate.


        :return: The earnings_lines of this PayTemplate.
        :rtype: List[EarningsLine]
        """
        return self._earnings_lines

    @earnings_lines.setter
    def earnings_lines(self, earnings_lines):
        """Sets the earnings_lines of this PayTemplate.


        :param earnings_lines: The earnings_lines of this PayTemplate.
        :type earnings_lines: List[EarningsLine]
        """

        self._earnings_lines = earnings_lines

    @property
    def leave_lines(self):
        """Gets the leave_lines of this PayTemplate.


        :return: The leave_lines of this PayTemplate.
        :rtype: List[LeaveLine]
        """
        return self._leave_lines

    @leave_lines.setter
    def leave_lines(self, leave_lines):
        """Sets the leave_lines of this PayTemplate.


        :param leave_lines: The leave_lines of this PayTemplate.
        :type leave_lines: List[LeaveLine]
        """

        self._leave_lines = leave_lines

    @property
    def reimbursement_lines(self):
        """Gets the reimbursement_lines of this PayTemplate.


        :return: The reimbursement_lines of this PayTemplate.
        :rtype: List[ReimbursementLine]
        """
        return self._reimbursement_lines

    @reimbursement_lines.setter
    def reimbursement_lines(self, reimbursement_lines):
        """Sets the reimbursement_lines of this PayTemplate.


        :param reimbursement_lines: The reimbursement_lines of this PayTemplate.
        :type reimbursement_lines: List[ReimbursementLine]
        """

        self._reimbursement_lines = reimbursement_lines

    @property
    def super_lines(self):
        """Gets the super_lines of this PayTemplate.


        :return: The super_lines of this PayTemplate.
        :rtype: List[SuperLine]
        """
        return self._super_lines

    @super_lines.setter
    def super_lines(self, super_lines):
        """Sets the super_lines of this PayTemplate.


        :param super_lines: The super_lines of this PayTemplate.
        :type super_lines: List[SuperLine]
        """

        self._super_lines = super_lines
