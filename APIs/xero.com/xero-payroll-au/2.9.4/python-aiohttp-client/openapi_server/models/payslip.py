# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deduction_line import DeductionLine
from openapi_server.models.earnings_line import EarningsLine
from openapi_server.models.leave_accrual_line import LeaveAccrualLine
from openapi_server.models.leave_earnings_line import LeaveEarningsLine
from openapi_server.models.reimbursement_line import ReimbursementLine
from openapi_server.models.superannuation_line import SuperannuationLine
from openapi_server.models.tax_line import TaxLine
from openapi_server import util


class Payslip(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deduction_lines: List[DeductionLine]=None, deductions: float=None, earnings_lines: List[EarningsLine]=None, employee_id: str=None, first_name: str=None, last_name: str=None, leave_accrual_lines: List[LeaveAccrualLine]=None, leave_earnings_lines: List[LeaveEarningsLine]=None, net_pay: float=None, payslip_id: str=None, reimbursement_lines: List[ReimbursementLine]=None, reimbursements: float=None, super: float=None, superannuation_lines: List[SuperannuationLine]=None, tax: float=None, tax_lines: List[TaxLine]=None, timesheet_earnings_lines: List[EarningsLine]=None, updated_date_utc: str=None, wages: float=None):
        """Payslip - a model defined in OpenAPI

        :param deduction_lines: The deduction_lines of this Payslip.
        :param deductions: The deductions of this Payslip.
        :param earnings_lines: The earnings_lines of this Payslip.
        :param employee_id: The employee_id of this Payslip.
        :param first_name: The first_name of this Payslip.
        :param last_name: The last_name of this Payslip.
        :param leave_accrual_lines: The leave_accrual_lines of this Payslip.
        :param leave_earnings_lines: The leave_earnings_lines of this Payslip.
        :param net_pay: The net_pay of this Payslip.
        :param payslip_id: The payslip_id of this Payslip.
        :param reimbursement_lines: The reimbursement_lines of this Payslip.
        :param reimbursements: The reimbursements of this Payslip.
        :param super: The super of this Payslip.
        :param superannuation_lines: The superannuation_lines of this Payslip.
        :param tax: The tax of this Payslip.
        :param tax_lines: The tax_lines of this Payslip.
        :param timesheet_earnings_lines: The timesheet_earnings_lines of this Payslip.
        :param updated_date_utc: The updated_date_utc of this Payslip.
        :param wages: The wages of this Payslip.
        """
        self.openapi_types = {
            'deduction_lines': List[DeductionLine],
            'deductions': float,
            'earnings_lines': List[EarningsLine],
            'employee_id': str,
            'first_name': str,
            'last_name': str,
            'leave_accrual_lines': List[LeaveAccrualLine],
            'leave_earnings_lines': List[LeaveEarningsLine],
            'net_pay': float,
            'payslip_id': str,
            'reimbursement_lines': List[ReimbursementLine],
            'reimbursements': float,
            'super': float,
            'superannuation_lines': List[SuperannuationLine],
            'tax': float,
            'tax_lines': List[TaxLine],
            'timesheet_earnings_lines': List[EarningsLine],
            'updated_date_utc': str,
            'wages': float
        }

        self.attribute_map = {
            'deduction_lines': 'DeductionLines',
            'deductions': 'Deductions',
            'earnings_lines': 'EarningsLines',
            'employee_id': 'EmployeeID',
            'first_name': 'FirstName',
            'last_name': 'LastName',
            'leave_accrual_lines': 'LeaveAccrualLines',
            'leave_earnings_lines': 'LeaveEarningsLines',
            'net_pay': 'NetPay',
            'payslip_id': 'PayslipID',
            'reimbursement_lines': 'ReimbursementLines',
            'reimbursements': 'Reimbursements',
            'super': 'Super',
            'superannuation_lines': 'SuperannuationLines',
            'tax': 'Tax',
            'tax_lines': 'TaxLines',
            'timesheet_earnings_lines': 'TimesheetEarningsLines',
            'updated_date_utc': 'UpdatedDateUTC',
            'wages': 'Wages'
        }

        self._deduction_lines = deduction_lines
        self._deductions = deductions
        self._earnings_lines = earnings_lines
        self._employee_id = employee_id
        self._first_name = first_name
        self._last_name = last_name
        self._leave_accrual_lines = leave_accrual_lines
        self._leave_earnings_lines = leave_earnings_lines
        self._net_pay = net_pay
        self._payslip_id = payslip_id
        self._reimbursement_lines = reimbursement_lines
        self._reimbursements = reimbursements
        self._super = super
        self._superannuation_lines = superannuation_lines
        self._tax = tax
        self._tax_lines = tax_lines
        self._timesheet_earnings_lines = timesheet_earnings_lines
        self._updated_date_utc = updated_date_utc
        self._wages = wages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Payslip':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Payslip of this Payslip.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deduction_lines(self):
        """Gets the deduction_lines of this Payslip.


        :return: The deduction_lines of this Payslip.
        :rtype: List[DeductionLine]
        """
        return self._deduction_lines

    @deduction_lines.setter
    def deduction_lines(self, deduction_lines):
        """Sets the deduction_lines of this Payslip.


        :param deduction_lines: The deduction_lines of this Payslip.
        :type deduction_lines: List[DeductionLine]
        """

        self._deduction_lines = deduction_lines

    @property
    def deductions(self):
        """Gets the deductions of this Payslip.

        The Deductions for the Payslip

        :return: The deductions of this Payslip.
        :rtype: float
        """
        return self._deductions

    @deductions.setter
    def deductions(self, deductions):
        """Sets the deductions of this Payslip.

        The Deductions for the Payslip

        :param deductions: The deductions of this Payslip.
        :type deductions: float
        """

        self._deductions = deductions

    @property
    def earnings_lines(self):
        """Gets the earnings_lines of this Payslip.


        :return: The earnings_lines of this Payslip.
        :rtype: List[EarningsLine]
        """
        return self._earnings_lines

    @earnings_lines.setter
    def earnings_lines(self, earnings_lines):
        """Sets the earnings_lines of this Payslip.


        :param earnings_lines: The earnings_lines of this Payslip.
        :type earnings_lines: List[EarningsLine]
        """

        self._earnings_lines = earnings_lines

    @property
    def employee_id(self):
        """Gets the employee_id of this Payslip.

        The Xero identifier for an employee

        :return: The employee_id of this Payslip.
        :rtype: str
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id):
        """Sets the employee_id of this Payslip.

        The Xero identifier for an employee

        :param employee_id: The employee_id of this Payslip.
        :type employee_id: str
        """

        self._employee_id = employee_id

    @property
    def first_name(self):
        """Gets the first_name of this Payslip.

        First name of employee

        :return: The first_name of this Payslip.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Payslip.

        First name of employee

        :param first_name: The first_name of this Payslip.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this Payslip.

        Last name of employee

        :return: The last_name of this Payslip.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Payslip.

        Last name of employee

        :param last_name: The last_name of this Payslip.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def leave_accrual_lines(self):
        """Gets the leave_accrual_lines of this Payslip.


        :return: The leave_accrual_lines of this Payslip.
        :rtype: List[LeaveAccrualLine]
        """
        return self._leave_accrual_lines

    @leave_accrual_lines.setter
    def leave_accrual_lines(self, leave_accrual_lines):
        """Sets the leave_accrual_lines of this Payslip.


        :param leave_accrual_lines: The leave_accrual_lines of this Payslip.
        :type leave_accrual_lines: List[LeaveAccrualLine]
        """

        self._leave_accrual_lines = leave_accrual_lines

    @property
    def leave_earnings_lines(self):
        """Gets the leave_earnings_lines of this Payslip.


        :return: The leave_earnings_lines of this Payslip.
        :rtype: List[LeaveEarningsLine]
        """
        return self._leave_earnings_lines

    @leave_earnings_lines.setter
    def leave_earnings_lines(self, leave_earnings_lines):
        """Sets the leave_earnings_lines of this Payslip.


        :param leave_earnings_lines: The leave_earnings_lines of this Payslip.
        :type leave_earnings_lines: List[LeaveEarningsLine]
        """

        self._leave_earnings_lines = leave_earnings_lines

    @property
    def net_pay(self):
        """Gets the net_pay of this Payslip.

        The NetPay for the Payslip

        :return: The net_pay of this Payslip.
        :rtype: float
        """
        return self._net_pay

    @net_pay.setter
    def net_pay(self, net_pay):
        """Sets the net_pay of this Payslip.

        The NetPay for the Payslip

        :param net_pay: The net_pay of this Payslip.
        :type net_pay: float
        """

        self._net_pay = net_pay

    @property
    def payslip_id(self):
        """Gets the payslip_id of this Payslip.

        Xero identifier for the payslip

        :return: The payslip_id of this Payslip.
        :rtype: str
        """
        return self._payslip_id

    @payslip_id.setter
    def payslip_id(self, payslip_id):
        """Sets the payslip_id of this Payslip.

        Xero identifier for the payslip

        :param payslip_id: The payslip_id of this Payslip.
        :type payslip_id: str
        """

        self._payslip_id = payslip_id

    @property
    def reimbursement_lines(self):
        """Gets the reimbursement_lines of this Payslip.


        :return: The reimbursement_lines of this Payslip.
        :rtype: List[ReimbursementLine]
        """
        return self._reimbursement_lines

    @reimbursement_lines.setter
    def reimbursement_lines(self, reimbursement_lines):
        """Sets the reimbursement_lines of this Payslip.


        :param reimbursement_lines: The reimbursement_lines of this Payslip.
        :type reimbursement_lines: List[ReimbursementLine]
        """

        self._reimbursement_lines = reimbursement_lines

    @property
    def reimbursements(self):
        """Gets the reimbursements of this Payslip.

        The Reimbursements for the Payslip

        :return: The reimbursements of this Payslip.
        :rtype: float
        """
        return self._reimbursements

    @reimbursements.setter
    def reimbursements(self, reimbursements):
        """Sets the reimbursements of this Payslip.

        The Reimbursements for the Payslip

        :param reimbursements: The reimbursements of this Payslip.
        :type reimbursements: float
        """

        self._reimbursements = reimbursements

    @property
    def super(self):
        """Gets the super of this Payslip.

        The Super for the Payslip

        :return: The super of this Payslip.
        :rtype: float
        """
        return self._super

    @super.setter
    def super(self, super):
        """Sets the super of this Payslip.

        The Super for the Payslip

        :param super: The super of this Payslip.
        :type super: float
        """

        self._super = super

    @property
    def superannuation_lines(self):
        """Gets the superannuation_lines of this Payslip.


        :return: The superannuation_lines of this Payslip.
        :rtype: List[SuperannuationLine]
        """
        return self._superannuation_lines

    @superannuation_lines.setter
    def superannuation_lines(self, superannuation_lines):
        """Sets the superannuation_lines of this Payslip.


        :param superannuation_lines: The superannuation_lines of this Payslip.
        :type superannuation_lines: List[SuperannuationLine]
        """

        self._superannuation_lines = superannuation_lines

    @property
    def tax(self):
        """Gets the tax of this Payslip.

        The Tax for the Payslip

        :return: The tax of this Payslip.
        :rtype: float
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this Payslip.

        The Tax for the Payslip

        :param tax: The tax of this Payslip.
        :type tax: float
        """

        self._tax = tax

    @property
    def tax_lines(self):
        """Gets the tax_lines of this Payslip.


        :return: The tax_lines of this Payslip.
        :rtype: List[TaxLine]
        """
        return self._tax_lines

    @tax_lines.setter
    def tax_lines(self, tax_lines):
        """Sets the tax_lines of this Payslip.


        :param tax_lines: The tax_lines of this Payslip.
        :type tax_lines: List[TaxLine]
        """

        self._tax_lines = tax_lines

    @property
    def timesheet_earnings_lines(self):
        """Gets the timesheet_earnings_lines of this Payslip.


        :return: The timesheet_earnings_lines of this Payslip.
        :rtype: List[EarningsLine]
        """
        return self._timesheet_earnings_lines

    @timesheet_earnings_lines.setter
    def timesheet_earnings_lines(self, timesheet_earnings_lines):
        """Sets the timesheet_earnings_lines of this Payslip.


        :param timesheet_earnings_lines: The timesheet_earnings_lines of this Payslip.
        :type timesheet_earnings_lines: List[EarningsLine]
        """

        self._timesheet_earnings_lines = timesheet_earnings_lines

    @property
    def updated_date_utc(self):
        """Gets the updated_date_utc of this Payslip.

        Last modified timestamp

        :return: The updated_date_utc of this Payslip.
        :rtype: str
        """
        return self._updated_date_utc

    @updated_date_utc.setter
    def updated_date_utc(self, updated_date_utc):
        """Sets the updated_date_utc of this Payslip.

        Last modified timestamp

        :param updated_date_utc: The updated_date_utc of this Payslip.
        :type updated_date_utc: str
        """

        self._updated_date_utc = updated_date_utc

    @property
    def wages(self):
        """Gets the wages of this Payslip.

        The Wages for the Payslip

        :return: The wages of this Payslip.
        :rtype: float
        """
        return self._wages

    @wages.setter
    def wages(self, wages):
        """Sets the wages of this Payslip.

        The Wages for the Payslip

        :param wages: The wages of this Payslip.
        :type wages: float
        """

        self._wages = wages
