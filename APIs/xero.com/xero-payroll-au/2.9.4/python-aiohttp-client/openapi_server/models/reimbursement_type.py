# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReimbursementType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_code: str=None, current_record: bool=None, name: str=None, reimbursement_type_id: str=None, updated_date_utc: str=None):
        """ReimbursementType - a model defined in OpenAPI

        :param account_code: The account_code of this ReimbursementType.
        :param current_record: The current_record of this ReimbursementType.
        :param name: The name of this ReimbursementType.
        :param reimbursement_type_id: The reimbursement_type_id of this ReimbursementType.
        :param updated_date_utc: The updated_date_utc of this ReimbursementType.
        """
        self.openapi_types = {
            'account_code': str,
            'current_record': bool,
            'name': str,
            'reimbursement_type_id': str,
            'updated_date_utc': str
        }

        self.attribute_map = {
            'account_code': 'AccountCode',
            'current_record': 'CurrentRecord',
            'name': 'Name',
            'reimbursement_type_id': 'ReimbursementTypeID',
            'updated_date_utc': 'UpdatedDateUTC'
        }

        self._account_code = account_code
        self._current_record = current_record
        self._name = name
        self._reimbursement_type_id = reimbursement_type_id
        self._updated_date_utc = updated_date_utc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReimbursementType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReimbursementType of this ReimbursementType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_code(self):
        """Gets the account_code of this ReimbursementType.

        See Accounts

        :return: The account_code of this ReimbursementType.
        :rtype: str
        """
        return self._account_code

    @account_code.setter
    def account_code(self, account_code):
        """Sets the account_code of this ReimbursementType.

        See Accounts

        :param account_code: The account_code of this ReimbursementType.
        :type account_code: str
        """

        self._account_code = account_code

    @property
    def current_record(self):
        """Gets the current_record of this ReimbursementType.

        Is the current record

        :return: The current_record of this ReimbursementType.
        :rtype: bool
        """
        return self._current_record

    @current_record.setter
    def current_record(self, current_record):
        """Sets the current_record of this ReimbursementType.

        Is the current record

        :param current_record: The current_record of this ReimbursementType.
        :type current_record: bool
        """

        self._current_record = current_record

    @property
    def name(self):
        """Gets the name of this ReimbursementType.

        Name of the earnings rate (max length = 100)

        :return: The name of this ReimbursementType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReimbursementType.

        Name of the earnings rate (max length = 100)

        :param name: The name of this ReimbursementType.
        :type name: str
        """
        if name is not None and len(name) > 100:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `100`")

        self._name = name

    @property
    def reimbursement_type_id(self):
        """Gets the reimbursement_type_id of this ReimbursementType.

        Xero identifier

        :return: The reimbursement_type_id of this ReimbursementType.
        :rtype: str
        """
        return self._reimbursement_type_id

    @reimbursement_type_id.setter
    def reimbursement_type_id(self, reimbursement_type_id):
        """Sets the reimbursement_type_id of this ReimbursementType.

        Xero identifier

        :param reimbursement_type_id: The reimbursement_type_id of this ReimbursementType.
        :type reimbursement_type_id: str
        """

        self._reimbursement_type_id = reimbursement_type_id

    @property
    def updated_date_utc(self):
        """Gets the updated_date_utc of this ReimbursementType.

        Last modified timestamp

        :return: The updated_date_utc of this ReimbursementType.
        :rtype: str
        """
        return self._updated_date_utc

    @updated_date_utc.setter
    def updated_date_utc(self, updated_date_utc):
        """Sets the updated_date_utc of this ReimbursementType.

        Last modified timestamp

        :param updated_date_utc: The updated_date_utc of this ReimbursementType.
        :type updated_date_utc: str
        """

        self._updated_date_utc = updated_date_utc
