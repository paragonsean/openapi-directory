# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.calendar_type import CalendarType
from openapi_server.models.validation_error import ValidationError
from openapi_server import util


class PayrollCalendar(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calendar_type: CalendarType=None, name: str=None, payment_date: str=None, payroll_calendar_id: str=None, start_date: str=None, updated_date_utc: str=None, validation_errors: List[ValidationError]=None):
        """PayrollCalendar - a model defined in OpenAPI

        :param calendar_type: The calendar_type of this PayrollCalendar.
        :param name: The name of this PayrollCalendar.
        :param payment_date: The payment_date of this PayrollCalendar.
        :param payroll_calendar_id: The payroll_calendar_id of this PayrollCalendar.
        :param start_date: The start_date of this PayrollCalendar.
        :param updated_date_utc: The updated_date_utc of this PayrollCalendar.
        :param validation_errors: The validation_errors of this PayrollCalendar.
        """
        self.openapi_types = {
            'calendar_type': CalendarType,
            'name': str,
            'payment_date': str,
            'payroll_calendar_id': str,
            'start_date': str,
            'updated_date_utc': str,
            'validation_errors': List[ValidationError]
        }

        self.attribute_map = {
            'calendar_type': 'CalendarType',
            'name': 'Name',
            'payment_date': 'PaymentDate',
            'payroll_calendar_id': 'PayrollCalendarID',
            'start_date': 'StartDate',
            'updated_date_utc': 'UpdatedDateUTC',
            'validation_errors': 'ValidationErrors'
        }

        self._calendar_type = calendar_type
        self._name = name
        self._payment_date = payment_date
        self._payroll_calendar_id = payroll_calendar_id
        self._start_date = start_date
        self._updated_date_utc = updated_date_utc
        self._validation_errors = validation_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayrollCalendar':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PayrollCalendar of this PayrollCalendar.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calendar_type(self):
        """Gets the calendar_type of this PayrollCalendar.


        :return: The calendar_type of this PayrollCalendar.
        :rtype: CalendarType
        """
        return self._calendar_type

    @calendar_type.setter
    def calendar_type(self, calendar_type):
        """Sets the calendar_type of this PayrollCalendar.


        :param calendar_type: The calendar_type of this PayrollCalendar.
        :type calendar_type: CalendarType
        """

        self._calendar_type = calendar_type

    @property
    def name(self):
        """Gets the name of this PayrollCalendar.

        Name of the Payroll Calendar

        :return: The name of this PayrollCalendar.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PayrollCalendar.

        Name of the Payroll Calendar

        :param name: The name of this PayrollCalendar.
        :type name: str
        """

        self._name = name

    @property
    def payment_date(self):
        """Gets the payment_date of this PayrollCalendar.

        The date on which employees will be paid for the upcoming pay period (YYYY-MM-DD)

        :return: The payment_date of this PayrollCalendar.
        :rtype: str
        """
        return self._payment_date

    @payment_date.setter
    def payment_date(self, payment_date):
        """Sets the payment_date of this PayrollCalendar.

        The date on which employees will be paid for the upcoming pay period (YYYY-MM-DD)

        :param payment_date: The payment_date of this PayrollCalendar.
        :type payment_date: str
        """

        self._payment_date = payment_date

    @property
    def payroll_calendar_id(self):
        """Gets the payroll_calendar_id of this PayrollCalendar.

        Xero identifier

        :return: The payroll_calendar_id of this PayrollCalendar.
        :rtype: str
        """
        return self._payroll_calendar_id

    @payroll_calendar_id.setter
    def payroll_calendar_id(self, payroll_calendar_id):
        """Sets the payroll_calendar_id of this PayrollCalendar.

        Xero identifier

        :param payroll_calendar_id: The payroll_calendar_id of this PayrollCalendar.
        :type payroll_calendar_id: str
        """

        self._payroll_calendar_id = payroll_calendar_id

    @property
    def start_date(self):
        """Gets the start_date of this PayrollCalendar.

        The start date of the upcoming pay period. The end date will be calculated based upon this date, and the calendar type selected (YYYY-MM-DD)

        :return: The start_date of this PayrollCalendar.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this PayrollCalendar.

        The start date of the upcoming pay period. The end date will be calculated based upon this date, and the calendar type selected (YYYY-MM-DD)

        :param start_date: The start_date of this PayrollCalendar.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def updated_date_utc(self):
        """Gets the updated_date_utc of this PayrollCalendar.

        Last modified timestamp

        :return: The updated_date_utc of this PayrollCalendar.
        :rtype: str
        """
        return self._updated_date_utc

    @updated_date_utc.setter
    def updated_date_utc(self, updated_date_utc):
        """Sets the updated_date_utc of this PayrollCalendar.

        Last modified timestamp

        :param updated_date_utc: The updated_date_utc of this PayrollCalendar.
        :type updated_date_utc: str
        """

        self._updated_date_utc = updated_date_utc

    @property
    def validation_errors(self):
        """Gets the validation_errors of this PayrollCalendar.

        Displays array of validation error messages from the API

        :return: The validation_errors of this PayrollCalendar.
        :rtype: List[ValidationError]
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this PayrollCalendar.

        Displays array of validation error messages from the API

        :param validation_errors: The validation_errors of this PayrollCalendar.
        :type validation_errors: List[ValidationError]
        """

        self._validation_errors = validation_errors
