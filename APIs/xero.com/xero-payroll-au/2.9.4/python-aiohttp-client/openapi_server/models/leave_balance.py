# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LeaveBalance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, leave_name: str=None, leave_type_id: str=None, number_of_units: float=None, type_of_units: str=None):
        """LeaveBalance - a model defined in OpenAPI

        :param leave_name: The leave_name of this LeaveBalance.
        :param leave_type_id: The leave_type_id of this LeaveBalance.
        :param number_of_units: The number_of_units of this LeaveBalance.
        :param type_of_units: The type_of_units of this LeaveBalance.
        """
        self.openapi_types = {
            'leave_name': str,
            'leave_type_id': str,
            'number_of_units': float,
            'type_of_units': str
        }

        self.attribute_map = {
            'leave_name': 'LeaveName',
            'leave_type_id': 'LeaveTypeID',
            'number_of_units': 'NumberOfUnits',
            'type_of_units': 'TypeOfUnits'
        }

        self._leave_name = leave_name
        self._leave_type_id = leave_type_id
        self._number_of_units = number_of_units
        self._type_of_units = type_of_units

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LeaveBalance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LeaveBalance of this LeaveBalance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def leave_name(self):
        """Gets the leave_name of this LeaveBalance.

        The name of the leave type

        :return: The leave_name of this LeaveBalance.
        :rtype: str
        """
        return self._leave_name

    @leave_name.setter
    def leave_name(self, leave_name):
        """Sets the leave_name of this LeaveBalance.

        The name of the leave type

        :param leave_name: The leave_name of this LeaveBalance.
        :type leave_name: str
        """

        self._leave_name = leave_name

    @property
    def leave_type_id(self):
        """Gets the leave_type_id of this LeaveBalance.

        Identifier of the leave type (see PayItems)

        :return: The leave_type_id of this LeaveBalance.
        :rtype: str
        """
        return self._leave_type_id

    @leave_type_id.setter
    def leave_type_id(self, leave_type_id):
        """Sets the leave_type_id of this LeaveBalance.

        Identifier of the leave type (see PayItems)

        :param leave_type_id: The leave_type_id of this LeaveBalance.
        :type leave_type_id: str
        """

        self._leave_type_id = leave_type_id

    @property
    def number_of_units(self):
        """Gets the number_of_units of this LeaveBalance.

        The balance of the leave available

        :return: The number_of_units of this LeaveBalance.
        :rtype: float
        """
        return self._number_of_units

    @number_of_units.setter
    def number_of_units(self, number_of_units):
        """Sets the number_of_units of this LeaveBalance.

        The balance of the leave available

        :param number_of_units: The number_of_units of this LeaveBalance.
        :type number_of_units: float
        """

        self._number_of_units = number_of_units

    @property
    def type_of_units(self):
        """Gets the type_of_units of this LeaveBalance.

        The type of units as specified by the LeaveType (see PayItems)

        :return: The type_of_units of this LeaveBalance.
        :rtype: str
        """
        return self._type_of_units

    @type_of_units.setter
    def type_of_units(self, type_of_units):
        """Sets the type_of_units of this LeaveBalance.

        The type of units as specified by the LeaveType (see PayItems)

        :param type_of_units: The type_of_units of this LeaveBalance.
        :type type_of_units: str
        """

        self._type_of_units = type_of_units
