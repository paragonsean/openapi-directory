# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class APIException(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error_number: float=None, message: str=None, type: str=None):
        """APIException - a model defined in OpenAPI

        :param error_number: The error_number of this APIException.
        :param message: The message of this APIException.
        :param type: The type of this APIException.
        """
        self.openapi_types = {
            'error_number': float,
            'message': str,
            'type': str
        }

        self.attribute_map = {
            'error_number': 'ErrorNumber',
            'message': 'Message',
            'type': 'Type'
        }

        self._error_number = error_number
        self._message = message
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIException':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIException of this APIException.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_number(self):
        """Gets the error_number of this APIException.

        The error number

        :return: The error_number of this APIException.
        :rtype: float
        """
        return self._error_number

    @error_number.setter
    def error_number(self, error_number):
        """Sets the error_number of this APIException.

        The error number

        :param error_number: The error_number of this APIException.
        :type error_number: float
        """

        self._error_number = error_number

    @property
    def message(self):
        """Gets the message of this APIException.

        The message describing the error

        :return: The message of this APIException.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this APIException.

        The message describing the error

        :param message: The message of this APIException.
        :type message: str
        """

        self._message = message

    @property
    def type(self):
        """Gets the type of this APIException.

        The type of error

        :return: The type of this APIException.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this APIException.

        The type of error

        :param type: The type of this APIException.
        :type type: str
        """

        self._type = type
