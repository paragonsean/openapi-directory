# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.super_fund_type import SuperFundType
from openapi_server.models.validation_error import ValidationError
from openapi_server import util


class SuperFund(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abn: str=None, account_name: str=None, account_number: str=None, bsb: str=None, electronic_service_address: str=None, employer_number: str=None, name: str=None, spin: str=None, super_fund_id: str=None, type: SuperFundType=None, usi: str=None, updated_date_utc: str=None, validation_errors: List[ValidationError]=None):
        """SuperFund - a model defined in OpenAPI

        :param abn: The abn of this SuperFund.
        :param account_name: The account_name of this SuperFund.
        :param account_number: The account_number of this SuperFund.
        :param bsb: The bsb of this SuperFund.
        :param electronic_service_address: The electronic_service_address of this SuperFund.
        :param employer_number: The employer_number of this SuperFund.
        :param name: The name of this SuperFund.
        :param spin: The spin of this SuperFund.
        :param super_fund_id: The super_fund_id of this SuperFund.
        :param type: The type of this SuperFund.
        :param usi: The usi of this SuperFund.
        :param updated_date_utc: The updated_date_utc of this SuperFund.
        :param validation_errors: The validation_errors of this SuperFund.
        """
        self.openapi_types = {
            'abn': str,
            'account_name': str,
            'account_number': str,
            'bsb': str,
            'electronic_service_address': str,
            'employer_number': str,
            'name': str,
            'spin': str,
            'super_fund_id': str,
            'type': SuperFundType,
            'usi': str,
            'updated_date_utc': str,
            'validation_errors': List[ValidationError]
        }

        self.attribute_map = {
            'abn': 'ABN',
            'account_name': 'AccountName',
            'account_number': 'AccountNumber',
            'bsb': 'BSB',
            'electronic_service_address': 'ElectronicServiceAddress',
            'employer_number': 'EmployerNumber',
            'name': 'Name',
            'spin': 'SPIN',
            'super_fund_id': 'SuperFundID',
            'type': 'Type',
            'usi': 'USI',
            'updated_date_utc': 'UpdatedDateUTC',
            'validation_errors': 'ValidationErrors'
        }

        self._abn = abn
        self._account_name = account_name
        self._account_number = account_number
        self._bsb = bsb
        self._electronic_service_address = electronic_service_address
        self._employer_number = employer_number
        self._name = name
        self._spin = spin
        self._super_fund_id = super_fund_id
        self._type = type
        self._usi = usi
        self._updated_date_utc = updated_date_utc
        self._validation_errors = validation_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuperFund':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuperFund of this SuperFund.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abn(self):
        """Gets the abn of this SuperFund.

        ABN of the self managed super fund

        :return: The abn of this SuperFund.
        :rtype: str
        """
        return self._abn

    @abn.setter
    def abn(self, abn):
        """Sets the abn of this SuperFund.

        ABN of the self managed super fund

        :param abn: The abn of this SuperFund.
        :type abn: str
        """

        self._abn = abn

    @property
    def account_name(self):
        """Gets the account_name of this SuperFund.

        The account name for the self managed super fund.

        :return: The account_name of this SuperFund.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this SuperFund.

        The account name for the self managed super fund.

        :param account_name: The account_name of this SuperFund.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def account_number(self):
        """Gets the account_number of this SuperFund.

        The account number for the self managed super fund.

        :return: The account_number of this SuperFund.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this SuperFund.

        The account number for the self managed super fund.

        :param account_number: The account_number of this SuperFund.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def bsb(self):
        """Gets the bsb of this SuperFund.

        BSB of the self managed super fund

        :return: The bsb of this SuperFund.
        :rtype: str
        """
        return self._bsb

    @bsb.setter
    def bsb(self, bsb):
        """Sets the bsb of this SuperFund.

        BSB of the self managed super fund

        :param bsb: The bsb of this SuperFund.
        :type bsb: str
        """

        self._bsb = bsb

    @property
    def electronic_service_address(self):
        """Gets the electronic_service_address of this SuperFund.

        The electronic service address for the self managed super fund.

        :return: The electronic_service_address of this SuperFund.
        :rtype: str
        """
        return self._electronic_service_address

    @electronic_service_address.setter
    def electronic_service_address(self, electronic_service_address):
        """Sets the electronic_service_address of this SuperFund.

        The electronic service address for the self managed super fund.

        :param electronic_service_address: The electronic_service_address of this SuperFund.
        :type electronic_service_address: str
        """

        self._electronic_service_address = electronic_service_address

    @property
    def employer_number(self):
        """Gets the employer_number of this SuperFund.

        Some funds assign a unique number to each employer

        :return: The employer_number of this SuperFund.
        :rtype: str
        """
        return self._employer_number

    @employer_number.setter
    def employer_number(self, employer_number):
        """Sets the employer_number of this SuperFund.

        Some funds assign a unique number to each employer

        :param employer_number: The employer_number of this SuperFund.
        :type employer_number: str
        """

        self._employer_number = employer_number

    @property
    def name(self):
        """Gets the name of this SuperFund.

        Name of the super fund

        :return: The name of this SuperFund.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SuperFund.

        Name of the super fund

        :param name: The name of this SuperFund.
        :type name: str
        """

        self._name = name

    @property
    def spin(self):
        """Gets the spin of this SuperFund.

        The SPIN of the Regulated SuperFund. This field has been deprecated. It will only be present for legacy superfunds. New superfunds will not have a SPIN value. The USI field should be used instead of SPIN.

        :return: The spin of this SuperFund.
        :rtype: str
        """
        return self._spin

    @spin.setter
    def spin(self, spin):
        """Sets the spin of this SuperFund.

        The SPIN of the Regulated SuperFund. This field has been deprecated. It will only be present for legacy superfunds. New superfunds will not have a SPIN value. The USI field should be used instead of SPIN.

        :param spin: The spin of this SuperFund.
        :type spin: str
        """

        self._spin = spin

    @property
    def super_fund_id(self):
        """Gets the super_fund_id of this SuperFund.

        Xero identifier for a super fund

        :return: The super_fund_id of this SuperFund.
        :rtype: str
        """
        return self._super_fund_id

    @super_fund_id.setter
    def super_fund_id(self, super_fund_id):
        """Sets the super_fund_id of this SuperFund.

        Xero identifier for a super fund

        :param super_fund_id: The super_fund_id of this SuperFund.
        :type super_fund_id: str
        """

        self._super_fund_id = super_fund_id

    @property
    def type(self):
        """Gets the type of this SuperFund.


        :return: The type of this SuperFund.
        :rtype: SuperFundType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SuperFund.


        :param type: The type of this SuperFund.
        :type type: SuperFundType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def usi(self):
        """Gets the usi of this SuperFund.

        The USI of the Regulated SuperFund

        :return: The usi of this SuperFund.
        :rtype: str
        """
        return self._usi

    @usi.setter
    def usi(self, usi):
        """Sets the usi of this SuperFund.

        The USI of the Regulated SuperFund

        :param usi: The usi of this SuperFund.
        :type usi: str
        """

        self._usi = usi

    @property
    def updated_date_utc(self):
        """Gets the updated_date_utc of this SuperFund.

        Last modified timestamp

        :return: The updated_date_utc of this SuperFund.
        :rtype: str
        """
        return self._updated_date_utc

    @updated_date_utc.setter
    def updated_date_utc(self, updated_date_utc):
        """Sets the updated_date_utc of this SuperFund.

        Last modified timestamp

        :param updated_date_utc: The updated_date_utc of this SuperFund.
        :type updated_date_utc: str
        """

        self._updated_date_utc = updated_date_utc

    @property
    def validation_errors(self):
        """Gets the validation_errors of this SuperFund.

        Displays array of validation error messages from the API

        :return: The validation_errors of this SuperFund.
        :rtype: List[ValidationError]
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this SuperFund.

        Displays array of validation error messages from the API

        :param validation_errors: The validation_errors of this SuperFund.
        :type validation_errors: List[ValidationError]
        """

        self._validation_errors = validation_errors
