# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PayslipSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deductions: float=None, employee_group: str=None, employee_id: str=None, first_name: str=None, last_name: str=None, net_pay: float=None, payslip_id: str=None, reimbursements: float=None, super: float=None, tax: float=None, updated_date_utc: str=None, wages: float=None):
        """PayslipSummary - a model defined in OpenAPI

        :param deductions: The deductions of this PayslipSummary.
        :param employee_group: The employee_group of this PayslipSummary.
        :param employee_id: The employee_id of this PayslipSummary.
        :param first_name: The first_name of this PayslipSummary.
        :param last_name: The last_name of this PayslipSummary.
        :param net_pay: The net_pay of this PayslipSummary.
        :param payslip_id: The payslip_id of this PayslipSummary.
        :param reimbursements: The reimbursements of this PayslipSummary.
        :param super: The super of this PayslipSummary.
        :param tax: The tax of this PayslipSummary.
        :param updated_date_utc: The updated_date_utc of this PayslipSummary.
        :param wages: The wages of this PayslipSummary.
        """
        self.openapi_types = {
            'deductions': float,
            'employee_group': str,
            'employee_id': str,
            'first_name': str,
            'last_name': str,
            'net_pay': float,
            'payslip_id': str,
            'reimbursements': float,
            'super': float,
            'tax': float,
            'updated_date_utc': str,
            'wages': float
        }

        self.attribute_map = {
            'deductions': 'Deductions',
            'employee_group': 'EmployeeGroup',
            'employee_id': 'EmployeeID',
            'first_name': 'FirstName',
            'last_name': 'LastName',
            'net_pay': 'NetPay',
            'payslip_id': 'PayslipID',
            'reimbursements': 'Reimbursements',
            'super': 'Super',
            'tax': 'Tax',
            'updated_date_utc': 'UpdatedDateUTC',
            'wages': 'Wages'
        }

        self._deductions = deductions
        self._employee_group = employee_group
        self._employee_id = employee_id
        self._first_name = first_name
        self._last_name = last_name
        self._net_pay = net_pay
        self._payslip_id = payslip_id
        self._reimbursements = reimbursements
        self._super = super
        self._tax = tax
        self._updated_date_utc = updated_date_utc
        self._wages = wages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayslipSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PayslipSummary of this PayslipSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deductions(self):
        """Gets the deductions of this PayslipSummary.

        The Deductions for the Payslip

        :return: The deductions of this PayslipSummary.
        :rtype: float
        """
        return self._deductions

    @deductions.setter
    def deductions(self, deductions):
        """Sets the deductions of this PayslipSummary.

        The Deductions for the Payslip

        :param deductions: The deductions of this PayslipSummary.
        :type deductions: float
        """

        self._deductions = deductions

    @property
    def employee_group(self):
        """Gets the employee_group of this PayslipSummary.

        Employee group name

        :return: The employee_group of this PayslipSummary.
        :rtype: str
        """
        return self._employee_group

    @employee_group.setter
    def employee_group(self, employee_group):
        """Sets the employee_group of this PayslipSummary.

        Employee group name

        :param employee_group: The employee_group of this PayslipSummary.
        :type employee_group: str
        """

        self._employee_group = employee_group

    @property
    def employee_id(self):
        """Gets the employee_id of this PayslipSummary.

        The Xero identifier for an employee

        :return: The employee_id of this PayslipSummary.
        :rtype: str
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id):
        """Sets the employee_id of this PayslipSummary.

        The Xero identifier for an employee

        :param employee_id: The employee_id of this PayslipSummary.
        :type employee_id: str
        """

        self._employee_id = employee_id

    @property
    def first_name(self):
        """Gets the first_name of this PayslipSummary.

        First name of employee

        :return: The first_name of this PayslipSummary.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this PayslipSummary.

        First name of employee

        :param first_name: The first_name of this PayslipSummary.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this PayslipSummary.

        Last name of employee

        :return: The last_name of this PayslipSummary.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this PayslipSummary.

        Last name of employee

        :param last_name: The last_name of this PayslipSummary.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def net_pay(self):
        """Gets the net_pay of this PayslipSummary.

        The NetPay for the Payslip

        :return: The net_pay of this PayslipSummary.
        :rtype: float
        """
        return self._net_pay

    @net_pay.setter
    def net_pay(self, net_pay):
        """Sets the net_pay of this PayslipSummary.

        The NetPay for the Payslip

        :param net_pay: The net_pay of this PayslipSummary.
        :type net_pay: float
        """

        self._net_pay = net_pay

    @property
    def payslip_id(self):
        """Gets the payslip_id of this PayslipSummary.

        Xero identifier for the payslip

        :return: The payslip_id of this PayslipSummary.
        :rtype: str
        """
        return self._payslip_id

    @payslip_id.setter
    def payslip_id(self, payslip_id):
        """Sets the payslip_id of this PayslipSummary.

        Xero identifier for the payslip

        :param payslip_id: The payslip_id of this PayslipSummary.
        :type payslip_id: str
        """

        self._payslip_id = payslip_id

    @property
    def reimbursements(self):
        """Gets the reimbursements of this PayslipSummary.

        The Reimbursements for the Payslip

        :return: The reimbursements of this PayslipSummary.
        :rtype: float
        """
        return self._reimbursements

    @reimbursements.setter
    def reimbursements(self, reimbursements):
        """Sets the reimbursements of this PayslipSummary.

        The Reimbursements for the Payslip

        :param reimbursements: The reimbursements of this PayslipSummary.
        :type reimbursements: float
        """

        self._reimbursements = reimbursements

    @property
    def super(self):
        """Gets the super of this PayslipSummary.

        The Super for the Payslip

        :return: The super of this PayslipSummary.
        :rtype: float
        """
        return self._super

    @super.setter
    def super(self, super):
        """Sets the super of this PayslipSummary.

        The Super for the Payslip

        :param super: The super of this PayslipSummary.
        :type super: float
        """

        self._super = super

    @property
    def tax(self):
        """Gets the tax of this PayslipSummary.

        The Tax for the Payslip

        :return: The tax of this PayslipSummary.
        :rtype: float
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this PayslipSummary.

        The Tax for the Payslip

        :param tax: The tax of this PayslipSummary.
        :type tax: float
        """

        self._tax = tax

    @property
    def updated_date_utc(self):
        """Gets the updated_date_utc of this PayslipSummary.

        Last modified timestamp

        :return: The updated_date_utc of this PayslipSummary.
        :rtype: str
        """
        return self._updated_date_utc

    @updated_date_utc.setter
    def updated_date_utc(self, updated_date_utc):
        """Sets the updated_date_utc of this PayslipSummary.

        Last modified timestamp

        :param updated_date_utc: The updated_date_utc of this PayslipSummary.
        :type updated_date_utc: str
        """

        self._updated_date_utc = updated_date_utc

    @property
    def wages(self):
        """Gets the wages of this PayslipSummary.

        The Wages for the Payslip

        :return: The wages of this PayslipSummary.
        :rtype: float
        """
        return self._wages

    @wages.setter
    def wages(self, wages):
        """Sets the wages of this PayslipSummary.

        The Wages for the Payslip

        :param wages: The wages of this PayslipSummary.
        :type wages: float
        """

        self._wages = wages
