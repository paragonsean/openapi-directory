# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.settings_tracking_categories_employee_groups import SettingsTrackingCategoriesEmployeeGroups
from openapi_server.models.settings_tracking_categories_timesheet_categories import SettingsTrackingCategoriesTimesheetCategories
from openapi_server import util


class SettingsTrackingCategories(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, employee_groups: SettingsTrackingCategoriesEmployeeGroups=None, timesheet_categories: SettingsTrackingCategoriesTimesheetCategories=None):
        """SettingsTrackingCategories - a model defined in OpenAPI

        :param employee_groups: The employee_groups of this SettingsTrackingCategories.
        :param timesheet_categories: The timesheet_categories of this SettingsTrackingCategories.
        """
        self.openapi_types = {
            'employee_groups': SettingsTrackingCategoriesEmployeeGroups,
            'timesheet_categories': SettingsTrackingCategoriesTimesheetCategories
        }

        self.attribute_map = {
            'employee_groups': 'EmployeeGroups',
            'timesheet_categories': 'TimesheetCategories'
        }

        self._employee_groups = employee_groups
        self._timesheet_categories = timesheet_categories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SettingsTrackingCategories':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Settings_TrackingCategories of this SettingsTrackingCategories.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def employee_groups(self):
        """Gets the employee_groups of this SettingsTrackingCategories.


        :return: The employee_groups of this SettingsTrackingCategories.
        :rtype: SettingsTrackingCategoriesEmployeeGroups
        """
        return self._employee_groups

    @employee_groups.setter
    def employee_groups(self, employee_groups):
        """Sets the employee_groups of this SettingsTrackingCategories.


        :param employee_groups: The employee_groups of this SettingsTrackingCategories.
        :type employee_groups: SettingsTrackingCategoriesEmployeeGroups
        """

        self._employee_groups = employee_groups

    @property
    def timesheet_categories(self):
        """Gets the timesheet_categories of this SettingsTrackingCategories.


        :return: The timesheet_categories of this SettingsTrackingCategories.
        :rtype: SettingsTrackingCategoriesTimesheetCategories
        """
        return self._timesheet_categories

    @timesheet_categories.setter
    def timesheet_categories(self, timesheet_categories):
        """Sets the timesheet_categories of this SettingsTrackingCategories.


        :param timesheet_categories: The timesheet_categories of this SettingsTrackingCategories.
        :type timesheet_categories: SettingsTrackingCategoriesTimesheetCategories
        """

        self._timesheet_categories = timesheet_categories
