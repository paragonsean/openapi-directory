/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIState::OAIState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIState::OAIState() {
    this->initializeModel();
}

OAIState::~OAIState() {}

void OAIState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIState::ACT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NSW", Qt::CaseInsensitive) == 0) {
        m_value = eOAIState::NSW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIState::NT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QLD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIState::QLD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIState::SA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TAS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIState::TAS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VIC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIState::VIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIState::WA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIState::ACT:
            val = "ACT";
            break;
        case eOAIState::NSW:
            val = "NSW";
            break;
        case eOAIState::NT:
            val = "NT";
            break;
        case eOAIState::QLD:
            val = "QLD";
            break;
        case eOAIState::SA:
            val = "SA";
            break;
        case eOAIState::TAS:
            val = "TAS";
            break;
        case eOAIState::VIC:
            val = "VIC";
            break;
        case eOAIState::WA:
            val = "WA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIState::eOAIState OAIState::getValue() const {
    return m_value;
}

void OAIState::setValue(const OAIState::eOAIState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIState::isSet() const {
    
    return m_value_isSet;
}

bool OAIState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
