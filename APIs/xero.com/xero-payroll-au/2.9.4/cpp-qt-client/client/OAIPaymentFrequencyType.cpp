/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentFrequencyType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentFrequencyType::OAIPaymentFrequencyType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentFrequencyType::OAIPaymentFrequencyType() {
    this->initializeModel();
}

OAIPaymentFrequencyType::~OAIPaymentFrequencyType() {}

void OAIPaymentFrequencyType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPaymentFrequencyType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPaymentFrequencyType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("WEEKLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentFrequencyType::WEEKLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MONTHLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentFrequencyType::MONTHLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FORTNIGHTLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentFrequencyType::FORTNIGHTLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QUARTERLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentFrequencyType::QUARTERLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TWICEMONTHLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentFrequencyType::TWICEMONTHLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FOURWEEKLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentFrequencyType::FOURWEEKLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("YEARLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentFrequencyType::YEARLY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPaymentFrequencyType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPaymentFrequencyType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPaymentFrequencyType::WEEKLY:
            val = "WEEKLY";
            break;
        case eOAIPaymentFrequencyType::MONTHLY:
            val = "MONTHLY";
            break;
        case eOAIPaymentFrequencyType::FORTNIGHTLY:
            val = "FORTNIGHTLY";
            break;
        case eOAIPaymentFrequencyType::QUARTERLY:
            val = "QUARTERLY";
            break;
        case eOAIPaymentFrequencyType::TWICEMONTHLY:
            val = "TWICEMONTHLY";
            break;
        case eOAIPaymentFrequencyType::FOURWEEKLY:
            val = "FOURWEEKLY";
            break;
        case eOAIPaymentFrequencyType::YEARLY:
            val = "YEARLY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPaymentFrequencyType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPaymentFrequencyType::eOAIPaymentFrequencyType OAIPaymentFrequencyType::getValue() const {
    return m_value;
}

void OAIPaymentFrequencyType::setValue(const OAIPaymentFrequencyType::eOAIPaymentFrequencyType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPaymentFrequencyType::isSet() const {
    
    return m_value_isSet;
}

bool OAIPaymentFrequencyType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
