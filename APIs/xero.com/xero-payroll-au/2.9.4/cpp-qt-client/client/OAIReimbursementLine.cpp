/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReimbursementLine.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReimbursementLine::OAIReimbursementLine(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReimbursementLine::OAIReimbursementLine() {
    this->initializeModel();
}

OAIReimbursementLine::~OAIReimbursementLine() {}

void OAIReimbursementLine::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_expense_account_isSet = false;
    m_expense_account_isValid = false;

    m_reimbursement_type_id_isSet = false;
    m_reimbursement_type_id_isValid = false;
}

void OAIReimbursementLine::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReimbursementLine::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("Amount")]);
    m_amount_isSet = !json[QString("Amount")].isNull() && m_amount_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_expense_account_isValid = ::OpenAPI::fromJsonValue(m_expense_account, json[QString("ExpenseAccount")]);
    m_expense_account_isSet = !json[QString("ExpenseAccount")].isNull() && m_expense_account_isValid;

    m_reimbursement_type_id_isValid = ::OpenAPI::fromJsonValue(m_reimbursement_type_id, json[QString("ReimbursementTypeID")]);
    m_reimbursement_type_id_isSet = !json[QString("ReimbursementTypeID")].isNull() && m_reimbursement_type_id_isValid;
}

QString OAIReimbursementLine::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReimbursementLine::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("Amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_expense_account_isSet) {
        obj.insert(QString("ExpenseAccount"), ::OpenAPI::toJsonValue(m_expense_account));
    }
    if (m_reimbursement_type_id_isSet) {
        obj.insert(QString("ReimbursementTypeID"), ::OpenAPI::toJsonValue(m_reimbursement_type_id));
    }
    return obj;
}

double OAIReimbursementLine::getAmount() const {
    return m_amount;
}
void OAIReimbursementLine::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIReimbursementLine::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIReimbursementLine::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIReimbursementLine::getDescription() const {
    return m_description;
}
void OAIReimbursementLine::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIReimbursementLine::is_description_Set() const{
    return m_description_isSet;
}

bool OAIReimbursementLine::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIReimbursementLine::getExpenseAccount() const {
    return m_expense_account;
}
void OAIReimbursementLine::setExpenseAccount(const QString &expense_account) {
    m_expense_account = expense_account;
    m_expense_account_isSet = true;
}

bool OAIReimbursementLine::is_expense_account_Set() const{
    return m_expense_account_isSet;
}

bool OAIReimbursementLine::is_expense_account_Valid() const{
    return m_expense_account_isValid;
}

QString OAIReimbursementLine::getReimbursementTypeId() const {
    return m_reimbursement_type_id;
}
void OAIReimbursementLine::setReimbursementTypeId(const QString &reimbursement_type_id) {
    m_reimbursement_type_id = reimbursement_type_id;
    m_reimbursement_type_id_isSet = true;
}

bool OAIReimbursementLine::is_reimbursement_type_id_Set() const{
    return m_reimbursement_type_id_isSet;
}

bool OAIReimbursementLine::is_reimbursement_type_id_Valid() const{
    return m_reimbursement_type_id_isValid;
}

bool OAIReimbursementLine::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expense_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reimbursement_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReimbursementLine::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
