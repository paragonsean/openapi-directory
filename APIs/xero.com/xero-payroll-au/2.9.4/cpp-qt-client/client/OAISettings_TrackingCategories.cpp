/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISettings_TrackingCategories.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISettings_TrackingCategories::OAISettings_TrackingCategories(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISettings_TrackingCategories::OAISettings_TrackingCategories() {
    this->initializeModel();
}

OAISettings_TrackingCategories::~OAISettings_TrackingCategories() {}

void OAISettings_TrackingCategories::initializeModel() {

    m_employee_groups_isSet = false;
    m_employee_groups_isValid = false;

    m_timesheet_categories_isSet = false;
    m_timesheet_categories_isValid = false;
}

void OAISettings_TrackingCategories::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISettings_TrackingCategories::fromJsonObject(QJsonObject json) {

    m_employee_groups_isValid = ::OpenAPI::fromJsonValue(m_employee_groups, json[QString("EmployeeGroups")]);
    m_employee_groups_isSet = !json[QString("EmployeeGroups")].isNull() && m_employee_groups_isValid;

    m_timesheet_categories_isValid = ::OpenAPI::fromJsonValue(m_timesheet_categories, json[QString("TimesheetCategories")]);
    m_timesheet_categories_isSet = !json[QString("TimesheetCategories")].isNull() && m_timesheet_categories_isValid;
}

QString OAISettings_TrackingCategories::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISettings_TrackingCategories::asJsonObject() const {
    QJsonObject obj;
    if (m_employee_groups.isSet()) {
        obj.insert(QString("EmployeeGroups"), ::OpenAPI::toJsonValue(m_employee_groups));
    }
    if (m_timesheet_categories.isSet()) {
        obj.insert(QString("TimesheetCategories"), ::OpenAPI::toJsonValue(m_timesheet_categories));
    }
    return obj;
}

OAISettings_TrackingCategories_EmployeeGroups OAISettings_TrackingCategories::getEmployeeGroups() const {
    return m_employee_groups;
}
void OAISettings_TrackingCategories::setEmployeeGroups(const OAISettings_TrackingCategories_EmployeeGroups &employee_groups) {
    m_employee_groups = employee_groups;
    m_employee_groups_isSet = true;
}

bool OAISettings_TrackingCategories::is_employee_groups_Set() const{
    return m_employee_groups_isSet;
}

bool OAISettings_TrackingCategories::is_employee_groups_Valid() const{
    return m_employee_groups_isValid;
}

OAISettings_TrackingCategories_TimesheetCategories OAISettings_TrackingCategories::getTimesheetCategories() const {
    return m_timesheet_categories;
}
void OAISettings_TrackingCategories::setTimesheetCategories(const OAISettings_TrackingCategories_TimesheetCategories &timesheet_categories) {
    m_timesheet_categories = timesheet_categories;
    m_timesheet_categories_isSet = true;
}

bool OAISettings_TrackingCategories::is_timesheet_categories_Set() const{
    return m_timesheet_categories_isSet;
}

bool OAISettings_TrackingCategories::is_timesheet_categories_Valid() const{
    return m_timesheet_categories_isValid;
}

bool OAISettings_TrackingCategories::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_employee_groups.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_timesheet_categories.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISettings_TrackingCategories::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
