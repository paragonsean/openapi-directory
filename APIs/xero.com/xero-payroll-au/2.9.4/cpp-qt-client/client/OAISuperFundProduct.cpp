/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISuperFundProduct.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISuperFundProduct::OAISuperFundProduct(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISuperFundProduct::OAISuperFundProduct() {
    this->initializeModel();
}

OAISuperFundProduct::~OAISuperFundProduct() {}

void OAISuperFundProduct::initializeModel() {

    m_abn_isSet = false;
    m_abn_isValid = false;

    m_product_name_isSet = false;
    m_product_name_isValid = false;

    m_spin_isSet = false;
    m_spin_isValid = false;

    m_usi_isSet = false;
    m_usi_isValid = false;
}

void OAISuperFundProduct::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISuperFundProduct::fromJsonObject(QJsonObject json) {

    m_abn_isValid = ::OpenAPI::fromJsonValue(m_abn, json[QString("ABN")]);
    m_abn_isSet = !json[QString("ABN")].isNull() && m_abn_isValid;

    m_product_name_isValid = ::OpenAPI::fromJsonValue(m_product_name, json[QString("ProductName")]);
    m_product_name_isSet = !json[QString("ProductName")].isNull() && m_product_name_isValid;

    m_spin_isValid = ::OpenAPI::fromJsonValue(m_spin, json[QString("SPIN")]);
    m_spin_isSet = !json[QString("SPIN")].isNull() && m_spin_isValid;

    m_usi_isValid = ::OpenAPI::fromJsonValue(m_usi, json[QString("USI")]);
    m_usi_isSet = !json[QString("USI")].isNull() && m_usi_isValid;
}

QString OAISuperFundProduct::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISuperFundProduct::asJsonObject() const {
    QJsonObject obj;
    if (m_abn_isSet) {
        obj.insert(QString("ABN"), ::OpenAPI::toJsonValue(m_abn));
    }
    if (m_product_name_isSet) {
        obj.insert(QString("ProductName"), ::OpenAPI::toJsonValue(m_product_name));
    }
    if (m_spin_isSet) {
        obj.insert(QString("SPIN"), ::OpenAPI::toJsonValue(m_spin));
    }
    if (m_usi_isSet) {
        obj.insert(QString("USI"), ::OpenAPI::toJsonValue(m_usi));
    }
    return obj;
}

QString OAISuperFundProduct::getAbn() const {
    return m_abn;
}
void OAISuperFundProduct::setAbn(const QString &abn) {
    m_abn = abn;
    m_abn_isSet = true;
}

bool OAISuperFundProduct::is_abn_Set() const{
    return m_abn_isSet;
}

bool OAISuperFundProduct::is_abn_Valid() const{
    return m_abn_isValid;
}

QString OAISuperFundProduct::getProductName() const {
    return m_product_name;
}
void OAISuperFundProduct::setProductName(const QString &product_name) {
    m_product_name = product_name;
    m_product_name_isSet = true;
}

bool OAISuperFundProduct::is_product_name_Set() const{
    return m_product_name_isSet;
}

bool OAISuperFundProduct::is_product_name_Valid() const{
    return m_product_name_isValid;
}

QString OAISuperFundProduct::getSpin() const {
    return m_spin;
}
void OAISuperFundProduct::setSpin(const QString &spin) {
    m_spin = spin;
    m_spin_isSet = true;
}

bool OAISuperFundProduct::is_spin_Set() const{
    return m_spin_isSet;
}

bool OAISuperFundProduct::is_spin_Valid() const{
    return m_spin_isValid;
}

QString OAISuperFundProduct::getUsi() const {
    return m_usi;
}
void OAISuperFundProduct::setUsi(const QString &usi) {
    m_usi = usi;
    m_usi_isSet = true;
}

bool OAISuperFundProduct::is_usi_Set() const{
    return m_usi_isSet;
}

bool OAISuperFundProduct::is_usi_Valid() const{
    return m_usi_isValid;
}

bool OAISuperFundProduct::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_abn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usi_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISuperFundProduct::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
