/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOpeningBalances.h
 *
 * 
 */

#ifndef OAIOpeningBalances_H
#define OAIOpeningBalances_H

#include <QJsonObject>

#include "OAIDeductionLine.h"
#include "OAIEarningsLine.h"
#include "OAILeaveLine.h"
#include "OAIReimbursementLine.h"
#include "OAISuperLine.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeductionLine;
class OAIEarningsLine;
class OAILeaveLine;
class OAIReimbursementLine;
class OAISuperLine;

class OAIOpeningBalances : public OAIObject {
public:
    OAIOpeningBalances();
    OAIOpeningBalances(QString json);
    ~OAIOpeningBalances() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDeductionLine> getDeductionLines() const;
    void setDeductionLines(const QList<OAIDeductionLine> &deduction_lines);
    bool is_deduction_lines_Set() const;
    bool is_deduction_lines_Valid() const;

    QList<OAIEarningsLine> getEarningsLines() const;
    void setEarningsLines(const QList<OAIEarningsLine> &earnings_lines);
    bool is_earnings_lines_Set() const;
    bool is_earnings_lines_Valid() const;

    QList<OAILeaveLine> getLeaveLines() const;
    void setLeaveLines(const QList<OAILeaveLine> &leave_lines);
    bool is_leave_lines_Set() const;
    bool is_leave_lines_Valid() const;

    QString getOpeningBalanceDate() const;
    void setOpeningBalanceDate(const QString &opening_balance_date);
    bool is_opening_balance_date_Set() const;
    bool is_opening_balance_date_Valid() const;

    QList<OAIReimbursementLine> getReimbursementLines() const;
    void setReimbursementLines(const QList<OAIReimbursementLine> &reimbursement_lines);
    bool is_reimbursement_lines_Set() const;
    bool is_reimbursement_lines_Valid() const;

    QList<OAISuperLine> getSuperLines() const;
    void setSuperLines(const QList<OAISuperLine> &super_lines);
    bool is_super_lines_Set() const;
    bool is_super_lines_Valid() const;

    QString getTax() const;
    void setTax(const QString &tax);
    bool is_tax_Set() const;
    bool is_tax_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDeductionLine> m_deduction_lines;
    bool m_deduction_lines_isSet;
    bool m_deduction_lines_isValid;

    QList<OAIEarningsLine> m_earnings_lines;
    bool m_earnings_lines_isSet;
    bool m_earnings_lines_isValid;

    QList<OAILeaveLine> m_leave_lines;
    bool m_leave_lines_isSet;
    bool m_leave_lines_isValid;

    QString m_opening_balance_date;
    bool m_opening_balance_date_isSet;
    bool m_opening_balance_date_isValid;

    QList<OAIReimbursementLine> m_reimbursement_lines;
    bool m_reimbursement_lines_isSet;
    bool m_reimbursement_lines_isValid;

    QList<OAISuperLine> m_super_lines;
    bool m_super_lines_isSet;
    bool m_super_lines_isValid;

    QString m_tax;
    bool m_tax_isSet;
    bool m_tax_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOpeningBalances)

#endif // OAIOpeningBalances_H
