/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAllowanceType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAllowanceType::OAIAllowanceType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAllowanceType::OAIAllowanceType() {
    this->initializeModel();
}

OAIAllowanceType::~OAIAllowanceType() {}

void OAIAllowanceType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAllowanceType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAllowanceType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CAR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAllowanceType::CAR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRANSPORT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAllowanceType::TRANSPORT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRAVEL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAllowanceType::TRAVEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LAUNDRY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAllowanceType::LAUNDRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MEALS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAllowanceType::MEALS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JOBKEEPER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAllowanceType::JOBKEEPER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OTHER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAllowanceType::OTHER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAllowanceType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAllowanceType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAllowanceType::CAR:
            val = "CAR";
            break;
        case eOAIAllowanceType::TRANSPORT:
            val = "TRANSPORT";
            break;
        case eOAIAllowanceType::TRAVEL:
            val = "TRAVEL";
            break;
        case eOAIAllowanceType::LAUNDRY:
            val = "LAUNDRY";
            break;
        case eOAIAllowanceType::MEALS:
            val = "MEALS";
            break;
        case eOAIAllowanceType::JOBKEEPER:
            val = "JOBKEEPER";
            break;
        case eOAIAllowanceType::OTHER:
            val = "OTHER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAllowanceType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAllowanceType::eOAIAllowanceType OAIAllowanceType::getValue() const {
    return m_value;
}

void OAIAllowanceType::setValue(const OAIAllowanceType::eOAIAllowanceType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAllowanceType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAllowanceType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
