/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISuperFunds.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISuperFunds::OAISuperFunds(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISuperFunds::OAISuperFunds() {
    this->initializeModel();
}

OAISuperFunds::~OAISuperFunds() {}

void OAISuperFunds::initializeModel() {

    m_super_funds_isSet = false;
    m_super_funds_isValid = false;
}

void OAISuperFunds::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISuperFunds::fromJsonObject(QJsonObject json) {

    m_super_funds_isValid = ::OpenAPI::fromJsonValue(m_super_funds, json[QString("SuperFunds")]);
    m_super_funds_isSet = !json[QString("SuperFunds")].isNull() && m_super_funds_isValid;
}

QString OAISuperFunds::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISuperFunds::asJsonObject() const {
    QJsonObject obj;
    if (m_super_funds.size() > 0) {
        obj.insert(QString("SuperFunds"), ::OpenAPI::toJsonValue(m_super_funds));
    }
    return obj;
}

QList<OAISuperFund> OAISuperFunds::getSuperFunds() const {
    return m_super_funds;
}
void OAISuperFunds::setSuperFunds(const QList<OAISuperFund> &super_funds) {
    m_super_funds = super_funds;
    m_super_funds_isSet = true;
}

bool OAISuperFunds::is_super_funds_Set() const{
    return m_super_funds_isSet;
}

bool OAISuperFunds::is_super_funds_Valid() const{
    return m_super_funds_isValid;
}

bool OAISuperFunds::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_super_funds.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISuperFunds::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
