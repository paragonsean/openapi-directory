/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeductionType.h
 *
 * 
 */

#ifndef OAIDeductionType_H
#define OAIDeductionType_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeductionType : public OAIObject {
public:
    OAIDeductionType();
    OAIDeductionType(QString json);
    ~OAIDeductionType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountCode() const;
    void setAccountCode(const QString &account_code);
    bool is_account_code_Set() const;
    bool is_account_code_Valid() const;

    bool isCurrentRecord() const;
    void setCurrentRecord(const bool &current_record);
    bool is_current_record_Set() const;
    bool is_current_record_Valid() const;

    QString getDeductionCategory() const;
    void setDeductionCategory(const QString &deduction_category);
    bool is_deduction_category_Set() const;
    bool is_deduction_category_Valid() const;

    QString getDeductionTypeId() const;
    void setDeductionTypeId(const QString &deduction_type_id);
    bool is_deduction_type_id_Set() const;
    bool is_deduction_type_id_Valid() const;

    bool isIsExemptFromW1() const;
    void setIsExemptFromW1(const bool &is_exempt_from_w1);
    bool is_is_exempt_from_w1_Set() const;
    bool is_is_exempt_from_w1_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isReducesSuper() const;
    void setReducesSuper(const bool &reduces_super);
    bool is_reduces_super_Set() const;
    bool is_reduces_super_Valid() const;

    bool isReducesTax() const;
    void setReducesTax(const bool &reduces_tax);
    bool is_reduces_tax_Set() const;
    bool is_reduces_tax_Valid() const;

    QString getUpdatedDateUtc() const;
    void setUpdatedDateUtc(const QString &updated_date_utc);
    bool is_updated_date_utc_Set() const;
    bool is_updated_date_utc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_code;
    bool m_account_code_isSet;
    bool m_account_code_isValid;

    bool m_current_record;
    bool m_current_record_isSet;
    bool m_current_record_isValid;

    QString m_deduction_category;
    bool m_deduction_category_isSet;
    bool m_deduction_category_isValid;

    QString m_deduction_type_id;
    bool m_deduction_type_id_isSet;
    bool m_deduction_type_id_isValid;

    bool m_is_exempt_from_w1;
    bool m_is_exempt_from_w1_isSet;
    bool m_is_exempt_from_w1_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_reduces_super;
    bool m_reduces_super_isSet;
    bool m_reduces_super_isValid;

    bool m_reduces_tax;
    bool m_reduces_tax_isSet;
    bool m_reduces_tax_isValid;

    QString m_updated_date_utc;
    bool m_updated_date_utc_isSet;
    bool m_updated_date_utc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeductionType)

#endif // OAIDeductionType_H
