/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILeaveType.h
 *
 * 
 */

#ifndef OAILeaveType_H
#define OAILeaveType_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILeaveType : public OAIObject {
public:
    OAILeaveType();
    OAILeaveType(QString json);
    ~OAILeaveType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCurrentRecord() const;
    void setCurrentRecord(const bool &current_record);
    bool is_current_record_Set() const;
    bool is_current_record_Valid() const;

    bool isIsPaidLeave() const;
    void setIsPaidLeave(const bool &is_paid_leave);
    bool is_is_paid_leave_Set() const;
    bool is_is_paid_leave_Valid() const;

    double getLeaveLoadingRate() const;
    void setLeaveLoadingRate(const double &leave_loading_rate);
    bool is_leave_loading_rate_Set() const;
    bool is_leave_loading_rate_Valid() const;

    QString getLeaveTypeId() const;
    void setLeaveTypeId(const QString &leave_type_id);
    bool is_leave_type_id_Set() const;
    bool is_leave_type_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getNormalEntitlement() const;
    void setNormalEntitlement(const double &normal_entitlement);
    bool is_normal_entitlement_Set() const;
    bool is_normal_entitlement_Valid() const;

    bool isShowOnPayslip() const;
    void setShowOnPayslip(const bool &show_on_payslip);
    bool is_show_on_payslip_Set() const;
    bool is_show_on_payslip_Valid() const;

    QString getTypeOfUnits() const;
    void setTypeOfUnits(const QString &type_of_units);
    bool is_type_of_units_Set() const;
    bool is_type_of_units_Valid() const;

    QString getUpdatedDateUtc() const;
    void setUpdatedDateUtc(const QString &updated_date_utc);
    bool is_updated_date_utc_Set() const;
    bool is_updated_date_utc_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_current_record;
    bool m_current_record_isSet;
    bool m_current_record_isValid;

    bool m_is_paid_leave;
    bool m_is_paid_leave_isSet;
    bool m_is_paid_leave_isValid;

    double m_leave_loading_rate;
    bool m_leave_loading_rate_isSet;
    bool m_leave_loading_rate_isValid;

    QString m_leave_type_id;
    bool m_leave_type_id_isSet;
    bool m_leave_type_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_normal_entitlement;
    bool m_normal_entitlement_isSet;
    bool m_normal_entitlement_isValid;

    bool m_show_on_payslip;
    bool m_show_on_payslip_isSet;
    bool m_show_on_payslip_isValid;

    QString m_type_of_units;
    bool m_type_of_units_isSet;
    bool m_type_of_units_isValid;

    QString m_updated_date_utc;
    bool m_updated_date_utc_isSet;
    bool m_updated_date_utc_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILeaveType)

#endif // OAILeaveType_H
