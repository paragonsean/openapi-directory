/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmploymentBasis.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmploymentBasis::OAIEmploymentBasis(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmploymentBasis::OAIEmploymentBasis() {
    this->initializeModel();
}

OAIEmploymentBasis::~OAIEmploymentBasis() {}

void OAIEmploymentBasis::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEmploymentBasis::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEmploymentBasis::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FULLTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEmploymentBasis::FULLTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PARTTIME", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEmploymentBasis::PARTTIME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CASUAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEmploymentBasis::CASUAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LABOURHIRE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEmploymentBasis::LABOURHIRE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SUPERINCOMESTREAM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEmploymentBasis::SUPERINCOMESTREAM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEmploymentBasis::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEmploymentBasis::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEmploymentBasis::FULLTIME:
            val = "FULLTIME";
            break;
        case eOAIEmploymentBasis::PARTTIME:
            val = "PARTTIME";
            break;
        case eOAIEmploymentBasis::CASUAL:
            val = "CASUAL";
            break;
        case eOAIEmploymentBasis::LABOURHIRE:
            val = "LABOURHIRE";
            break;
        case eOAIEmploymentBasis::SUPERINCOMESTREAM:
            val = "SUPERINCOMESTREAM";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEmploymentBasis::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEmploymentBasis::eOAIEmploymentBasis OAIEmploymentBasis::getValue() const {
    return m_value;
}

void OAIEmploymentBasis::setValue(const OAIEmploymentBasis::eOAIEmploymentBasis& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEmploymentBasis::isSet() const {
    
    return m_value_isSet;
}

bool OAIEmploymentBasis::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
