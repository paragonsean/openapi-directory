/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILeavePeriod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILeavePeriod::OAILeavePeriod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILeavePeriod::OAILeavePeriod() {
    this->initializeModel();
}

OAILeavePeriod::~OAILeavePeriod() {}

void OAILeavePeriod::initializeModel() {

    m_leave_period_status_isSet = false;
    m_leave_period_status_isValid = false;

    m_number_of_units_isSet = false;
    m_number_of_units_isValid = false;

    m_pay_period_end_date_isSet = false;
    m_pay_period_end_date_isValid = false;

    m_pay_period_start_date_isSet = false;
    m_pay_period_start_date_isValid = false;
}

void OAILeavePeriod::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILeavePeriod::fromJsonObject(QJsonObject json) {

    m_leave_period_status_isValid = ::OpenAPI::fromJsonValue(m_leave_period_status, json[QString("LeavePeriodStatus")]);
    m_leave_period_status_isSet = !json[QString("LeavePeriodStatus")].isNull() && m_leave_period_status_isValid;

    m_number_of_units_isValid = ::OpenAPI::fromJsonValue(m_number_of_units, json[QString("NumberOfUnits")]);
    m_number_of_units_isSet = !json[QString("NumberOfUnits")].isNull() && m_number_of_units_isValid;

    m_pay_period_end_date_isValid = ::OpenAPI::fromJsonValue(m_pay_period_end_date, json[QString("PayPeriodEndDate")]);
    m_pay_period_end_date_isSet = !json[QString("PayPeriodEndDate")].isNull() && m_pay_period_end_date_isValid;

    m_pay_period_start_date_isValid = ::OpenAPI::fromJsonValue(m_pay_period_start_date, json[QString("PayPeriodStartDate")]);
    m_pay_period_start_date_isSet = !json[QString("PayPeriodStartDate")].isNull() && m_pay_period_start_date_isValid;
}

QString OAILeavePeriod::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILeavePeriod::asJsonObject() const {
    QJsonObject obj;
    if (m_leave_period_status.isSet()) {
        obj.insert(QString("LeavePeriodStatus"), ::OpenAPI::toJsonValue(m_leave_period_status));
    }
    if (m_number_of_units_isSet) {
        obj.insert(QString("NumberOfUnits"), ::OpenAPI::toJsonValue(m_number_of_units));
    }
    if (m_pay_period_end_date_isSet) {
        obj.insert(QString("PayPeriodEndDate"), ::OpenAPI::toJsonValue(m_pay_period_end_date));
    }
    if (m_pay_period_start_date_isSet) {
        obj.insert(QString("PayPeriodStartDate"), ::OpenAPI::toJsonValue(m_pay_period_start_date));
    }
    return obj;
}

OAILeavePeriodStatus OAILeavePeriod::getLeavePeriodStatus() const {
    return m_leave_period_status;
}
void OAILeavePeriod::setLeavePeriodStatus(const OAILeavePeriodStatus &leave_period_status) {
    m_leave_period_status = leave_period_status;
    m_leave_period_status_isSet = true;
}

bool OAILeavePeriod::is_leave_period_status_Set() const{
    return m_leave_period_status_isSet;
}

bool OAILeavePeriod::is_leave_period_status_Valid() const{
    return m_leave_period_status_isValid;
}

double OAILeavePeriod::getNumberOfUnits() const {
    return m_number_of_units;
}
void OAILeavePeriod::setNumberOfUnits(const double &number_of_units) {
    m_number_of_units = number_of_units;
    m_number_of_units_isSet = true;
}

bool OAILeavePeriod::is_number_of_units_Set() const{
    return m_number_of_units_isSet;
}

bool OAILeavePeriod::is_number_of_units_Valid() const{
    return m_number_of_units_isValid;
}

QString OAILeavePeriod::getPayPeriodEndDate() const {
    return m_pay_period_end_date;
}
void OAILeavePeriod::setPayPeriodEndDate(const QString &pay_period_end_date) {
    m_pay_period_end_date = pay_period_end_date;
    m_pay_period_end_date_isSet = true;
}

bool OAILeavePeriod::is_pay_period_end_date_Set() const{
    return m_pay_period_end_date_isSet;
}

bool OAILeavePeriod::is_pay_period_end_date_Valid() const{
    return m_pay_period_end_date_isValid;
}

QString OAILeavePeriod::getPayPeriodStartDate() const {
    return m_pay_period_start_date;
}
void OAILeavePeriod::setPayPeriodStartDate(const QString &pay_period_start_date) {
    m_pay_period_start_date = pay_period_start_date;
    m_pay_period_start_date_isSet = true;
}

bool OAILeavePeriod::is_pay_period_start_date_Set() const{
    return m_pay_period_start_date_isSet;
}

bool OAILeavePeriod::is_pay_period_start_date_Valid() const{
    return m_pay_period_start_date_isValid;
}

bool OAILeavePeriod::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_leave_period_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_units_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_period_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_period_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILeavePeriod::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
