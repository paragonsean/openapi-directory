/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayItem::OAIPayItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayItem::OAIPayItem() {
    this->initializeModel();
}

OAIPayItem::~OAIPayItem() {}

void OAIPayItem::initializeModel() {

    m_deduction_types_isSet = false;
    m_deduction_types_isValid = false;

    m_earnings_rates_isSet = false;
    m_earnings_rates_isValid = false;

    m_leave_types_isSet = false;
    m_leave_types_isValid = false;

    m_reimbursement_types_isSet = false;
    m_reimbursement_types_isValid = false;
}

void OAIPayItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayItem::fromJsonObject(QJsonObject json) {

    m_deduction_types_isValid = ::OpenAPI::fromJsonValue(m_deduction_types, json[QString("DeductionTypes")]);
    m_deduction_types_isSet = !json[QString("DeductionTypes")].isNull() && m_deduction_types_isValid;

    m_earnings_rates_isValid = ::OpenAPI::fromJsonValue(m_earnings_rates, json[QString("EarningsRates")]);
    m_earnings_rates_isSet = !json[QString("EarningsRates")].isNull() && m_earnings_rates_isValid;

    m_leave_types_isValid = ::OpenAPI::fromJsonValue(m_leave_types, json[QString("LeaveTypes")]);
    m_leave_types_isSet = !json[QString("LeaveTypes")].isNull() && m_leave_types_isValid;

    m_reimbursement_types_isValid = ::OpenAPI::fromJsonValue(m_reimbursement_types, json[QString("ReimbursementTypes")]);
    m_reimbursement_types_isSet = !json[QString("ReimbursementTypes")].isNull() && m_reimbursement_types_isValid;
}

QString OAIPayItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayItem::asJsonObject() const {
    QJsonObject obj;
    if (m_deduction_types.size() > 0) {
        obj.insert(QString("DeductionTypes"), ::OpenAPI::toJsonValue(m_deduction_types));
    }
    if (m_earnings_rates.size() > 0) {
        obj.insert(QString("EarningsRates"), ::OpenAPI::toJsonValue(m_earnings_rates));
    }
    if (m_leave_types.size() > 0) {
        obj.insert(QString("LeaveTypes"), ::OpenAPI::toJsonValue(m_leave_types));
    }
    if (m_reimbursement_types.size() > 0) {
        obj.insert(QString("ReimbursementTypes"), ::OpenAPI::toJsonValue(m_reimbursement_types));
    }
    return obj;
}

QList<OAIDeductionType> OAIPayItem::getDeductionTypes() const {
    return m_deduction_types;
}
void OAIPayItem::setDeductionTypes(const QList<OAIDeductionType> &deduction_types) {
    m_deduction_types = deduction_types;
    m_deduction_types_isSet = true;
}

bool OAIPayItem::is_deduction_types_Set() const{
    return m_deduction_types_isSet;
}

bool OAIPayItem::is_deduction_types_Valid() const{
    return m_deduction_types_isValid;
}

QList<OAIEarningsRate> OAIPayItem::getEarningsRates() const {
    return m_earnings_rates;
}
void OAIPayItem::setEarningsRates(const QList<OAIEarningsRate> &earnings_rates) {
    m_earnings_rates = earnings_rates;
    m_earnings_rates_isSet = true;
}

bool OAIPayItem::is_earnings_rates_Set() const{
    return m_earnings_rates_isSet;
}

bool OAIPayItem::is_earnings_rates_Valid() const{
    return m_earnings_rates_isValid;
}

QList<OAILeaveType> OAIPayItem::getLeaveTypes() const {
    return m_leave_types;
}
void OAIPayItem::setLeaveTypes(const QList<OAILeaveType> &leave_types) {
    m_leave_types = leave_types;
    m_leave_types_isSet = true;
}

bool OAIPayItem::is_leave_types_Set() const{
    return m_leave_types_isSet;
}

bool OAIPayItem::is_leave_types_Valid() const{
    return m_leave_types_isValid;
}

QList<OAIReimbursementType> OAIPayItem::getReimbursementTypes() const {
    return m_reimbursement_types;
}
void OAIPayItem::setReimbursementTypes(const QList<OAIReimbursementType> &reimbursement_types) {
    m_reimbursement_types = reimbursement_types;
    m_reimbursement_types_isSet = true;
}

bool OAIPayItem::is_reimbursement_types_Set() const{
    return m_reimbursement_types_isSet;
}

bool OAIPayItem::is_reimbursement_types_Valid() const{
    return m_reimbursement_types_isValid;
}

bool OAIPayItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deduction_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_earnings_rates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_leave_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_reimbursement_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
