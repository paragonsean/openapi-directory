/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILeaveLine.h
 *
 * 
 */

#ifndef OAILeaveLine_H
#define OAILeaveLine_H

#include <QJsonObject>

#include "OAIEmploymentTerminationPaymentType.h"
#include "OAIEntitlementFinalPayPayoutType.h"
#include "OAILeaveLineCalculationType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILeaveLine : public OAIObject {
public:
    OAILeaveLine();
    OAILeaveLine(QString json);
    ~OAILeaveLine() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAnnualNumberOfUnits() const;
    void setAnnualNumberOfUnits(const double &annual_number_of_units);
    bool is_annual_number_of_units_Set() const;
    bool is_annual_number_of_units_Valid() const;

    OAILeaveLineCalculationType getCalculationType() const;
    void setCalculationType(const OAILeaveLineCalculationType &calculation_type);
    bool is_calculation_type_Set() const;
    bool is_calculation_type_Valid() const;

    OAIEmploymentTerminationPaymentType getEmploymentTerminationPaymentType() const;
    void setEmploymentTerminationPaymentType(const OAIEmploymentTerminationPaymentType &employment_termination_payment_type);
    bool is_employment_termination_payment_type_Set() const;
    bool is_employment_termination_payment_type_Valid() const;

    OAIEntitlementFinalPayPayoutType getEntitlementFinalPayPayoutType() const;
    void setEntitlementFinalPayPayoutType(const OAIEntitlementFinalPayPayoutType &entitlement_final_pay_payout_type);
    bool is_entitlement_final_pay_payout_type_Set() const;
    bool is_entitlement_final_pay_payout_type_Valid() const;

    double getFullTimeNumberOfUnitsPerPeriod() const;
    void setFullTimeNumberOfUnitsPerPeriod(const double &full_time_number_of_units_per_period);
    bool is_full_time_number_of_units_per_period_Set() const;
    bool is_full_time_number_of_units_per_period_Valid() const;

    bool isIncludeSuperannuationGuaranteeContribution() const;
    void setIncludeSuperannuationGuaranteeContribution(const bool &include_superannuation_guarantee_contribution);
    bool is_include_superannuation_guarantee_contribution_Set() const;
    bool is_include_superannuation_guarantee_contribution_Valid() const;

    QString getLeaveTypeId() const;
    void setLeaveTypeId(const QString &leave_type_id);
    bool is_leave_type_id_Set() const;
    bool is_leave_type_id_Valid() const;

    double getNumberOfUnits() const;
    void setNumberOfUnits(const double &number_of_units);
    bool is_number_of_units_Set() const;
    bool is_number_of_units_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_annual_number_of_units;
    bool m_annual_number_of_units_isSet;
    bool m_annual_number_of_units_isValid;

    OAILeaveLineCalculationType m_calculation_type;
    bool m_calculation_type_isSet;
    bool m_calculation_type_isValid;

    OAIEmploymentTerminationPaymentType m_employment_termination_payment_type;
    bool m_employment_termination_payment_type_isSet;
    bool m_employment_termination_payment_type_isValid;

    OAIEntitlementFinalPayPayoutType m_entitlement_final_pay_payout_type;
    bool m_entitlement_final_pay_payout_type_isSet;
    bool m_entitlement_final_pay_payout_type_isValid;

    double m_full_time_number_of_units_per_period;
    bool m_full_time_number_of_units_per_period_isSet;
    bool m_full_time_number_of_units_per_period_isValid;

    bool m_include_superannuation_guarantee_contribution;
    bool m_include_superannuation_guarantee_contribution_isSet;
    bool m_include_superannuation_guarantee_contribution_isValid;

    QString m_leave_type_id;
    bool m_leave_type_id_isSet;
    bool m_leave_type_id_isValid;

    double m_number_of_units;
    bool m_number_of_units_isSet;
    bool m_number_of_units_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILeaveLine)

#endif // OAILeaveLine_H
