/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILeaveLine.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILeaveLine::OAILeaveLine(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILeaveLine::OAILeaveLine() {
    this->initializeModel();
}

OAILeaveLine::~OAILeaveLine() {}

void OAILeaveLine::initializeModel() {

    m_annual_number_of_units_isSet = false;
    m_annual_number_of_units_isValid = false;

    m_calculation_type_isSet = false;
    m_calculation_type_isValid = false;

    m_employment_termination_payment_type_isSet = false;
    m_employment_termination_payment_type_isValid = false;

    m_entitlement_final_pay_payout_type_isSet = false;
    m_entitlement_final_pay_payout_type_isValid = false;

    m_full_time_number_of_units_per_period_isSet = false;
    m_full_time_number_of_units_per_period_isValid = false;

    m_include_superannuation_guarantee_contribution_isSet = false;
    m_include_superannuation_guarantee_contribution_isValid = false;

    m_leave_type_id_isSet = false;
    m_leave_type_id_isValid = false;

    m_number_of_units_isSet = false;
    m_number_of_units_isValid = false;
}

void OAILeaveLine::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILeaveLine::fromJsonObject(QJsonObject json) {

    m_annual_number_of_units_isValid = ::OpenAPI::fromJsonValue(m_annual_number_of_units, json[QString("AnnualNumberOfUnits")]);
    m_annual_number_of_units_isSet = !json[QString("AnnualNumberOfUnits")].isNull() && m_annual_number_of_units_isValid;

    m_calculation_type_isValid = ::OpenAPI::fromJsonValue(m_calculation_type, json[QString("CalculationType")]);
    m_calculation_type_isSet = !json[QString("CalculationType")].isNull() && m_calculation_type_isValid;

    m_employment_termination_payment_type_isValid = ::OpenAPI::fromJsonValue(m_employment_termination_payment_type, json[QString("EmploymentTerminationPaymentType")]);
    m_employment_termination_payment_type_isSet = !json[QString("EmploymentTerminationPaymentType")].isNull() && m_employment_termination_payment_type_isValid;

    m_entitlement_final_pay_payout_type_isValid = ::OpenAPI::fromJsonValue(m_entitlement_final_pay_payout_type, json[QString("EntitlementFinalPayPayoutType")]);
    m_entitlement_final_pay_payout_type_isSet = !json[QString("EntitlementFinalPayPayoutType")].isNull() && m_entitlement_final_pay_payout_type_isValid;

    m_full_time_number_of_units_per_period_isValid = ::OpenAPI::fromJsonValue(m_full_time_number_of_units_per_period, json[QString("FullTimeNumberOfUnitsPerPeriod")]);
    m_full_time_number_of_units_per_period_isSet = !json[QString("FullTimeNumberOfUnitsPerPeriod")].isNull() && m_full_time_number_of_units_per_period_isValid;

    m_include_superannuation_guarantee_contribution_isValid = ::OpenAPI::fromJsonValue(m_include_superannuation_guarantee_contribution, json[QString("IncludeSuperannuationGuaranteeContribution")]);
    m_include_superannuation_guarantee_contribution_isSet = !json[QString("IncludeSuperannuationGuaranteeContribution")].isNull() && m_include_superannuation_guarantee_contribution_isValid;

    m_leave_type_id_isValid = ::OpenAPI::fromJsonValue(m_leave_type_id, json[QString("LeaveTypeID")]);
    m_leave_type_id_isSet = !json[QString("LeaveTypeID")].isNull() && m_leave_type_id_isValid;

    m_number_of_units_isValid = ::OpenAPI::fromJsonValue(m_number_of_units, json[QString("NumberOfUnits")]);
    m_number_of_units_isSet = !json[QString("NumberOfUnits")].isNull() && m_number_of_units_isValid;
}

QString OAILeaveLine::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILeaveLine::asJsonObject() const {
    QJsonObject obj;
    if (m_annual_number_of_units_isSet) {
        obj.insert(QString("AnnualNumberOfUnits"), ::OpenAPI::toJsonValue(m_annual_number_of_units));
    }
    if (m_calculation_type.isSet()) {
        obj.insert(QString("CalculationType"), ::OpenAPI::toJsonValue(m_calculation_type));
    }
    if (m_employment_termination_payment_type.isSet()) {
        obj.insert(QString("EmploymentTerminationPaymentType"), ::OpenAPI::toJsonValue(m_employment_termination_payment_type));
    }
    if (m_entitlement_final_pay_payout_type.isSet()) {
        obj.insert(QString("EntitlementFinalPayPayoutType"), ::OpenAPI::toJsonValue(m_entitlement_final_pay_payout_type));
    }
    if (m_full_time_number_of_units_per_period_isSet) {
        obj.insert(QString("FullTimeNumberOfUnitsPerPeriod"), ::OpenAPI::toJsonValue(m_full_time_number_of_units_per_period));
    }
    if (m_include_superannuation_guarantee_contribution_isSet) {
        obj.insert(QString("IncludeSuperannuationGuaranteeContribution"), ::OpenAPI::toJsonValue(m_include_superannuation_guarantee_contribution));
    }
    if (m_leave_type_id_isSet) {
        obj.insert(QString("LeaveTypeID"), ::OpenAPI::toJsonValue(m_leave_type_id));
    }
    if (m_number_of_units_isSet) {
        obj.insert(QString("NumberOfUnits"), ::OpenAPI::toJsonValue(m_number_of_units));
    }
    return obj;
}

double OAILeaveLine::getAnnualNumberOfUnits() const {
    return m_annual_number_of_units;
}
void OAILeaveLine::setAnnualNumberOfUnits(const double &annual_number_of_units) {
    m_annual_number_of_units = annual_number_of_units;
    m_annual_number_of_units_isSet = true;
}

bool OAILeaveLine::is_annual_number_of_units_Set() const{
    return m_annual_number_of_units_isSet;
}

bool OAILeaveLine::is_annual_number_of_units_Valid() const{
    return m_annual_number_of_units_isValid;
}

OAILeaveLineCalculationType OAILeaveLine::getCalculationType() const {
    return m_calculation_type;
}
void OAILeaveLine::setCalculationType(const OAILeaveLineCalculationType &calculation_type) {
    m_calculation_type = calculation_type;
    m_calculation_type_isSet = true;
}

bool OAILeaveLine::is_calculation_type_Set() const{
    return m_calculation_type_isSet;
}

bool OAILeaveLine::is_calculation_type_Valid() const{
    return m_calculation_type_isValid;
}

OAIEmploymentTerminationPaymentType OAILeaveLine::getEmploymentTerminationPaymentType() const {
    return m_employment_termination_payment_type;
}
void OAILeaveLine::setEmploymentTerminationPaymentType(const OAIEmploymentTerminationPaymentType &employment_termination_payment_type) {
    m_employment_termination_payment_type = employment_termination_payment_type;
    m_employment_termination_payment_type_isSet = true;
}

bool OAILeaveLine::is_employment_termination_payment_type_Set() const{
    return m_employment_termination_payment_type_isSet;
}

bool OAILeaveLine::is_employment_termination_payment_type_Valid() const{
    return m_employment_termination_payment_type_isValid;
}

OAIEntitlementFinalPayPayoutType OAILeaveLine::getEntitlementFinalPayPayoutType() const {
    return m_entitlement_final_pay_payout_type;
}
void OAILeaveLine::setEntitlementFinalPayPayoutType(const OAIEntitlementFinalPayPayoutType &entitlement_final_pay_payout_type) {
    m_entitlement_final_pay_payout_type = entitlement_final_pay_payout_type;
    m_entitlement_final_pay_payout_type_isSet = true;
}

bool OAILeaveLine::is_entitlement_final_pay_payout_type_Set() const{
    return m_entitlement_final_pay_payout_type_isSet;
}

bool OAILeaveLine::is_entitlement_final_pay_payout_type_Valid() const{
    return m_entitlement_final_pay_payout_type_isValid;
}

double OAILeaveLine::getFullTimeNumberOfUnitsPerPeriod() const {
    return m_full_time_number_of_units_per_period;
}
void OAILeaveLine::setFullTimeNumberOfUnitsPerPeriod(const double &full_time_number_of_units_per_period) {
    m_full_time_number_of_units_per_period = full_time_number_of_units_per_period;
    m_full_time_number_of_units_per_period_isSet = true;
}

bool OAILeaveLine::is_full_time_number_of_units_per_period_Set() const{
    return m_full_time_number_of_units_per_period_isSet;
}

bool OAILeaveLine::is_full_time_number_of_units_per_period_Valid() const{
    return m_full_time_number_of_units_per_period_isValid;
}

bool OAILeaveLine::isIncludeSuperannuationGuaranteeContribution() const {
    return m_include_superannuation_guarantee_contribution;
}
void OAILeaveLine::setIncludeSuperannuationGuaranteeContribution(const bool &include_superannuation_guarantee_contribution) {
    m_include_superannuation_guarantee_contribution = include_superannuation_guarantee_contribution;
    m_include_superannuation_guarantee_contribution_isSet = true;
}

bool OAILeaveLine::is_include_superannuation_guarantee_contribution_Set() const{
    return m_include_superannuation_guarantee_contribution_isSet;
}

bool OAILeaveLine::is_include_superannuation_guarantee_contribution_Valid() const{
    return m_include_superannuation_guarantee_contribution_isValid;
}

QString OAILeaveLine::getLeaveTypeId() const {
    return m_leave_type_id;
}
void OAILeaveLine::setLeaveTypeId(const QString &leave_type_id) {
    m_leave_type_id = leave_type_id;
    m_leave_type_id_isSet = true;
}

bool OAILeaveLine::is_leave_type_id_Set() const{
    return m_leave_type_id_isSet;
}

bool OAILeaveLine::is_leave_type_id_Valid() const{
    return m_leave_type_id_isValid;
}

double OAILeaveLine::getNumberOfUnits() const {
    return m_number_of_units;
}
void OAILeaveLine::setNumberOfUnits(const double &number_of_units) {
    m_number_of_units = number_of_units;
    m_number_of_units_isSet = true;
}

bool OAILeaveLine::is_number_of_units_Set() const{
    return m_number_of_units_isSet;
}

bool OAILeaveLine::is_number_of_units_Valid() const{
    return m_number_of_units_isValid;
}

bool OAILeaveLine::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annual_number_of_units_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_calculation_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_employment_termination_payment_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_entitlement_final_pay_payout_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_time_number_of_units_per_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_superannuation_guarantee_contribution_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_leave_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_units_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILeaveLine::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
