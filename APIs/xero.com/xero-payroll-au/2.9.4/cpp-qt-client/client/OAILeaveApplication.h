/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILeaveApplication.h
 *
 * 
 */

#ifndef OAILeaveApplication_H
#define OAILeaveApplication_H

#include <QJsonObject>

#include "OAILeavePeriod.h"
#include "OAIValidationError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILeavePeriod;
class OAIValidationError;

class OAILeaveApplication : public OAIObject {
public:
    OAILeaveApplication();
    OAILeaveApplication(QString json);
    ~OAILeaveApplication() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEmployeeId() const;
    void setEmployeeId(const QString &employee_id);
    bool is_employee_id_Set() const;
    bool is_employee_id_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getLeaveApplicationId() const;
    void setLeaveApplicationId(const QString &leave_application_id);
    bool is_leave_application_id_Set() const;
    bool is_leave_application_id_Valid() const;

    QList<OAILeavePeriod> getLeavePeriods() const;
    void setLeavePeriods(const QList<OAILeavePeriod> &leave_periods);
    bool is_leave_periods_Set() const;
    bool is_leave_periods_Valid() const;

    QString getLeaveTypeId() const;
    void setLeaveTypeId(const QString &leave_type_id);
    bool is_leave_type_id_Set() const;
    bool is_leave_type_id_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUpdatedDateUtc() const;
    void setUpdatedDateUtc(const QString &updated_date_utc);
    bool is_updated_date_utc_Set() const;
    bool is_updated_date_utc_Valid() const;

    QList<OAIValidationError> getValidationErrors() const;
    void setValidationErrors(const QList<OAIValidationError> &validation_errors);
    bool is_validation_errors_Set() const;
    bool is_validation_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_employee_id;
    bool m_employee_id_isSet;
    bool m_employee_id_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_leave_application_id;
    bool m_leave_application_id_isSet;
    bool m_leave_application_id_isValid;

    QList<OAILeavePeriod> m_leave_periods;
    bool m_leave_periods_isSet;
    bool m_leave_periods_isValid;

    QString m_leave_type_id;
    bool m_leave_type_id_isSet;
    bool m_leave_type_id_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_updated_date_utc;
    bool m_updated_date_utc_isSet;
    bool m_updated_date_utc_isValid;

    QList<OAIValidationError> m_validation_errors;
    bool m_validation_errors_isSet;
    bool m_validation_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILeaveApplication)

#endif // OAILeaveApplication_H
