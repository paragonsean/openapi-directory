/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISettings::OAISettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISettings::OAISettings() {
    this->initializeModel();
}

OAISettings::~OAISettings() {}

void OAISettings::initializeModel() {

    m_accounts_isSet = false;
    m_accounts_isValid = false;

    m_days_in_payroll_year_isSet = false;
    m_days_in_payroll_year_isValid = false;

    m_tracking_categories_isSet = false;
    m_tracking_categories_isValid = false;
}

void OAISettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISettings::fromJsonObject(QJsonObject json) {

    m_accounts_isValid = ::OpenAPI::fromJsonValue(m_accounts, json[QString("Accounts")]);
    m_accounts_isSet = !json[QString("Accounts")].isNull() && m_accounts_isValid;

    m_days_in_payroll_year_isValid = ::OpenAPI::fromJsonValue(m_days_in_payroll_year, json[QString("DaysInPayrollYear")]);
    m_days_in_payroll_year_isSet = !json[QString("DaysInPayrollYear")].isNull() && m_days_in_payroll_year_isValid;

    m_tracking_categories_isValid = ::OpenAPI::fromJsonValue(m_tracking_categories, json[QString("TrackingCategories")]);
    m_tracking_categories_isSet = !json[QString("TrackingCategories")].isNull() && m_tracking_categories_isValid;
}

QString OAISettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISettings::asJsonObject() const {
    QJsonObject obj;
    if (m_accounts.size() > 0) {
        obj.insert(QString("Accounts"), ::OpenAPI::toJsonValue(m_accounts));
    }
    if (m_days_in_payroll_year_isSet) {
        obj.insert(QString("DaysInPayrollYear"), ::OpenAPI::toJsonValue(m_days_in_payroll_year));
    }
    if (m_tracking_categories.isSet()) {
        obj.insert(QString("TrackingCategories"), ::OpenAPI::toJsonValue(m_tracking_categories));
    }
    return obj;
}

QList<OAIAccount> OAISettings::getAccounts() const {
    return m_accounts;
}
void OAISettings::setAccounts(const QList<OAIAccount> &accounts) {
    m_accounts = accounts;
    m_accounts_isSet = true;
}

bool OAISettings::is_accounts_Set() const{
    return m_accounts_isSet;
}

bool OAISettings::is_accounts_Valid() const{
    return m_accounts_isValid;
}

qint32 OAISettings::getDaysInPayrollYear() const {
    return m_days_in_payroll_year;
}
void OAISettings::setDaysInPayrollYear(const qint32 &days_in_payroll_year) {
    m_days_in_payroll_year = days_in_payroll_year;
    m_days_in_payroll_year_isSet = true;
}

bool OAISettings::is_days_in_payroll_year_Set() const{
    return m_days_in_payroll_year_isSet;
}

bool OAISettings::is_days_in_payroll_year_Valid() const{
    return m_days_in_payroll_year_isValid;
}

OAISettings_TrackingCategories OAISettings::getTrackingCategories() const {
    return m_tracking_categories;
}
void OAISettings::setTrackingCategories(const OAISettings_TrackingCategories &tracking_categories) {
    m_tracking_categories = tracking_categories;
    m_tracking_categories_isSet = true;
}

bool OAISettings::is_tracking_categories_Set() const{
    return m_tracking_categories_isSet;
}

bool OAISettings::is_tracking_categories_Valid() const{
    return m_tracking_categories_isValid;
}

bool OAISettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_days_in_payroll_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_categories.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
