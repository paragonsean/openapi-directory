/**
 * Xero Payroll AU API
 * This is the Xero Payroll API for orgs in Australia region.
 *
 * The version of the OpenAPI document: 2.9.4
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICalendarType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICalendarType::OAICalendarType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICalendarType::OAICalendarType() {
    this->initializeModel();
}

OAICalendarType::~OAICalendarType() {}

void OAICalendarType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICalendarType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICalendarType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("WEEKLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICalendarType::WEEKLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FORTNIGHTLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICalendarType::FORTNIGHTLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FOURWEEKLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICalendarType::FOURWEEKLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MONTHLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICalendarType::MONTHLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TWICEMONTHLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICalendarType::TWICEMONTHLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("QUARTERLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAICalendarType::QUARTERLY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICalendarType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICalendarType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICalendarType::WEEKLY:
            val = "WEEKLY";
            break;
        case eOAICalendarType::FORTNIGHTLY:
            val = "FORTNIGHTLY";
            break;
        case eOAICalendarType::FOURWEEKLY:
            val = "FOURWEEKLY";
            break;
        case eOAICalendarType::MONTHLY:
            val = "MONTHLY";
            break;
        case eOAICalendarType::TWICEMONTHLY:
            val = "TWICEMONTHLY";
            break;
        case eOAICalendarType::QUARTERLY:
            val = "QUARTERLY";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICalendarType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICalendarType::eOAICalendarType OAICalendarType::getValue() const {
    return m_value;
}

void OAICalendarType::setValue(const OAICalendarType::eOAICalendarType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICalendarType::isSet() const {
    
    return m_value_isSet;
}

bool OAICalendarType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
