# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server import util


class AddressResultsDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, q_time: int=None, message: str=None, num_found: int=None, parsed_address: Address=None, result: List[Address]=None):
        """AddressResultsDto - a model defined in OpenAPI

        :param q_time: The q_time of this AddressResultsDto.
        :param message: The message of this AddressResultsDto.
        :param num_found: The num_found of this AddressResultsDto.
        :param parsed_address: The parsed_address of this AddressResultsDto.
        :param result: The result of this AddressResultsDto.
        """
        self.openapi_types = {
            'q_time': int,
            'message': str,
            'num_found': int,
            'parsed_address': Address,
            'result': List[Address]
        }

        self.attribute_map = {
            'q_time': 'QTime',
            'message': 'message',
            'num_found': 'numFound',
            'parsed_address': 'parsedAddress',
            'result': 'result'
        }

        self._q_time = q_time
        self._message = message
        self._num_found = num_found
        self._parsed_address = parsed_address
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddressResultsDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddressResultsDto of this AddressResultsDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def q_time(self):
        """Gets the q_time of this AddressResultsDto.

        how long the query took

        :return: The q_time of this AddressResultsDto.
        :rtype: int
        """
        return self._q_time

    @q_time.setter
    def q_time(self, q_time):
        """Sets the q_time of this AddressResultsDto.

        how long the query took

        :param q_time: The q_time of this AddressResultsDto.
        :type q_time: int
        """

        self._q_time = q_time

    @property
    def message(self):
        """Gets the message of this AddressResultsDto.

        a message

        :return: The message of this AddressResultsDto.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this AddressResultsDto.

        a message

        :param message: The message of this AddressResultsDto.
        :type message: str
        """

        self._message = message

    @property
    def num_found(self):
        """Gets the num_found of this AddressResultsDto.

        how many result found

        :return: The num_found of this AddressResultsDto.
        :rtype: int
        """
        return self._num_found

    @num_found.setter
    def num_found(self, num_found):
        """Sets the num_found of this AddressResultsDto.

        how many result found

        :param num_found: The num_found of this AddressResultsDto.
        :type num_found: int
        """

        self._num_found = num_found

    @property
    def parsed_address(self):
        """Gets the parsed_address of this AddressResultsDto.


        :return: The parsed_address of this AddressResultsDto.
        :rtype: Address
        """
        return self._parsed_address

    @parsed_address.setter
    def parsed_address(self, parsed_address):
        """Sets the parsed_address of this AddressResultsDto.


        :param parsed_address: The parsed_address of this AddressResultsDto.
        :type parsed_address: Address
        """

        self._parsed_address = parsed_address

    @property
    def result(self):
        """Gets the result of this AddressResultsDto.


        :return: The result of this AddressResultsDto.
        :rtype: List[Address]
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this AddressResultsDto.


        :param result: The result of this AddressResultsDto.
        :type result: List[Address]
        """

        self._result = result
