/**
 * Gisgraphy webservices
 * Since 2006, [Gisgraphy](http://www.gisgraphy.com) is a free, open source framework that offers the possibility to do geolocalisation and geocoding via Java APIs or REST webservices. Because geocoding is nothing without data, it provides an easy to use importer that will automatically download and import the necessary (free) data to your local database ([OpenStreetMap](http://www.openstreetmap.org/), [Geonames](http://www.geonames.org/) and [Quattroshapes](http://www.quattroshapes.com/): more than 100 million entries). You can also add your own data with the Web interface or the importer connectors provided. Gisgraphy is production ready, and has been designed to be scalable(load balanced), performant and used in other languages than just java : results can be output in XML, JSON, PHP, Python, Ruby, YAML, GeoRSS, and Atom. One of the most popular GPS tracking System (OpenGTS) also includes a Gisgraphy client...Gisgraphy is a framework. As a result it's flexible and powerful enough to be used in a lot of different use cases. [read more](http://www.gisgraphy.com)   if you use the premium servers, you can use the api key to test the webservices 
 *
 * The version of the OpenAPI document: 4.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISolrResponseDto.h
 *
 * 
 */

#ifndef OAISolrResponseDto_H
#define OAISolrResponseDto_H

#include <QJsonObject>

#include "OAIHouseNumberDto.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHouseNumberDto;

class OAISolrResponseDto : public OAIObject {
public:
    OAISolrResponseDto();
    OAISolrResponseDto(QString json);
    ~OAISolrResponseDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdm1Code() const;
    void setAdm1Code(const QString &adm1_code);
    bool is_adm1_code_Set() const;
    bool is_adm1_code_Valid() const;

    QString getAdm1Name() const;
    void setAdm1Name(const QString &adm1_name);
    bool is_adm1_name_Set() const;
    bool is_adm1_name_Valid() const;

    QList<QString> getAdm1NamesAlternate() const;
    void setAdm1NamesAlternate(const QList<QString> &adm1_names_alternate);
    bool is_adm1_names_alternate_Set() const;
    bool is_adm1_names_alternate_Valid() const;

    QString getAdm2Code() const;
    void setAdm2Code(const QString &adm2_code);
    bool is_adm2_code_Set() const;
    bool is_adm2_code_Valid() const;

    QString getAdm2Name() const;
    void setAdm2Name(const QString &adm2_name);
    bool is_adm2_name_Set() const;
    bool is_adm2_name_Valid() const;

    QList<QString> getAdm2NamesAlternate() const;
    void setAdm2NamesAlternate(const QList<QString> &adm2_names_alternate);
    bool is_adm2_names_alternate_Set() const;
    bool is_adm2_names_alternate_Valid() const;

    QString getAdm3Code() const;
    void setAdm3Code(const QString &adm3_code);
    bool is_adm3_code_Set() const;
    bool is_adm3_code_Valid() const;

    QString getAdm3Name() const;
    void setAdm3Name(const QString &adm3_name);
    bool is_adm3_name_Set() const;
    bool is_adm3_name_Valid() const;

    QString getAdm4Code() const;
    void setAdm4Code(const QString &adm4_code);
    bool is_adm4_code_Set() const;
    bool is_adm4_code_Valid() const;

    QString getAdm4Name() const;
    void setAdm4Name(const QString &adm4_name);
    bool is_adm4_name_Set() const;
    bool is_adm4_name_Valid() const;

    QString getAmenity() const;
    void setAmenity(const QString &amenity);
    bool is_amenity_Set() const;
    bool is_amenity_Valid() const;

    double getArea() const;
    void setArea(const double &area);
    bool is_area_Set() const;
    bool is_area_Valid() const;

    QString getCapitalName() const;
    void setCapitalName(const QString &capital_name);
    bool is_capital_name_Set() const;
    bool is_capital_name_Valid() const;

    QString getContinent() const;
    void setContinent(const QString &continent);
    bool is_continent_Set() const;
    bool is_continent_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getCountryFlagUrl() const;
    void setCountryFlagUrl(const QString &country_flag_url);
    bool is_country_flag_url_Set() const;
    bool is_country_flag_url_Valid() const;

    QString getCountryName() const;
    void setCountryName(const QString &country_name);
    bool is_country_name_Set() const;
    bool is_country_name_Valid() const;

    QList<QString> getCountryNamesAlternate() const;
    void setCountryNamesAlternate(const QList<QString> &country_names_alternate);
    bool is_country_names_alternate_Set() const;
    bool is_country_names_alternate_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getCurrencyName() const;
    void setCurrencyName(const QString &currency_name);
    bool is_currency_name_Set() const;
    bool is_currency_name_Valid() const;

    qint32 getElevation() const;
    void setElevation(const qint32 &elevation);
    bool is_elevation_Set() const;
    bool is_elevation_Valid() const;

    QString getFeatureClass() const;
    void setFeatureClass(const QString &feature_class);
    bool is_feature_class_Set() const;
    bool is_feature_class_Valid() const;

    QString getFeatureCode() const;
    void setFeatureCode(const QString &feature_code);
    bool is_feature_code_Set() const;
    bool is_feature_code_Valid() const;

    qint64 getFeatureId() const;
    void setFeatureId(const qint64 &feature_id);
    bool is_feature_id_Set() const;
    bool is_feature_id_Valid() const;

    QString getFipsCode() const;
    void setFipsCode(const QString &fips_code);
    bool is_fips_code_Set() const;
    bool is_fips_code_Valid() const;

    QString getFullyQualifiedAddress() const;
    void setFullyQualifiedAddress(const QString &fully_qualified_address);
    bool is_fully_qualified_address_Set() const;
    bool is_fully_qualified_address_Valid() const;

    QString getFullyQualifiedName() const;
    void setFullyQualifiedName(const QString &fully_qualified_name);
    bool is_fully_qualified_name_Set() const;
    bool is_fully_qualified_name_Valid() const;

    QString getGoogleMapUrl() const;
    void setGoogleMapUrl(const QString &google_map_url);
    bool is_google_map_url_Set() const;
    bool is_google_map_url_Valid() const;

    qint32 getGtopo30() const;
    void setGtopo30(const qint32 &gtopo30);
    bool is_gtopo30_Set() const;
    bool is_gtopo30_Valid() const;

    QList<OAIHouseNumberDto> getHouseNumbers() const;
    void setHouseNumbers(const QList<OAIHouseNumberDto> &house_numbers);
    bool is_house_numbers_Set() const;
    bool is_house_numbers_Valid() const;

    QString getIsIn() const;
    void setIsIn(const QString &is_in);
    bool is_is_in_Set() const;
    bool is_is_in_Valid() const;

    QString getIsInAdm() const;
    void setIsInAdm(const QString &is_in_adm);
    bool is_is_in_adm_Set() const;
    bool is_is_in_adm_Valid() const;

    QString getIsInPlace() const;
    void setIsInPlace(const QString &is_in_place);
    bool is_is_in_place_Set() const;
    bool is_is_in_place_Valid() const;

    QList<QString> getIsInZip() const;
    void setIsInZip(const QList<QString> &is_in_zip);
    bool is_is_in_zip_Set() const;
    bool is_is_in_zip_Valid() const;

    QString getIsoalpha2CountryCode() const;
    void setIsoalpha2CountryCode(const QString &isoalpha2_country_code);
    bool is_isoalpha2_country_code_Set() const;
    bool is_isoalpha2_country_code_Valid() const;

    QString getIsoalpha3CountryCode() const;
    void setIsoalpha3CountryCode(const QString &isoalpha3_country_code);
    bool is_isoalpha3_country_code_Set() const;
    bool is_isoalpha3_country_code_Valid() const;

    double getLat() const;
    void setLat(const double &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    double getLength() const;
    void setLength(const double &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    qint32 getLevel() const;
    void setLevel(const qint32 &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    double getLng() const;
    void setLng(const double &lng);
    bool is_lng_Set() const;
    bool is_lng_Valid() const;

    bool isMunicipality() const;
    void setMunicipality(const bool &municipality);
    bool is_municipality_Set() const;
    bool is_municipality_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getNameAlternates() const;
    void setNameAlternates(const QList<QString> &name_alternates);
    bool is_name_alternates_Set() const;
    bool is_name_alternates_Valid() const;

    QString getNameAscii() const;
    void setNameAscii(const QString &name_ascii);
    bool is_name_ascii_Set() const;
    bool is_name_ascii_Valid() const;

    bool isOneWay() const;
    void setOneWay(const bool &one_way);
    bool is_one_way_Set() const;
    bool is_one_way_Valid() const;

    qint64 getOpenstreetmapId() const;
    void setOpenstreetmapId(const qint64 &openstreetmap_id);
    bool is_openstreetmap_id_Set() const;
    bool is_openstreetmap_id_Valid() const;

    QString getOpenstreetmapMapUrl() const;
    void setOpenstreetmapMapUrl(const QString &openstreetmap_map_url);
    bool is_openstreetmap_map_url_Set() const;
    bool is_openstreetmap_map_url_Valid() const;

    QString getPhonePrefix() const;
    void setPhonePrefix(const QString &phone_prefix);
    bool is_phone_prefix_Set() const;
    bool is_phone_prefix_Valid() const;

    QString getPlacetype() const;
    void setPlacetype(const QString &placetype);
    bool is_placetype_Set() const;
    bool is_placetype_Valid() const;

    qint32 getPopulation() const;
    void setPopulation(const qint32 &population);
    bool is_population_Set() const;
    bool is_population_Valid() const;

    QString getPostalCodeMask() const;
    void setPostalCodeMask(const QString &postal_code_mask);
    bool is_postal_code_mask_Set() const;
    bool is_postal_code_mask_Valid() const;

    QString getPostalCodeRegex() const;
    void setPostalCodeRegex(const QString &postal_code_regex);
    bool is_postal_code_regex_Set() const;
    bool is_postal_code_regex_Valid() const;

    float getScore() const;
    void setScore(const float &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QList<QString> getSpokenLanguages() const;
    void setSpokenLanguages(const QList<QString> &spoken_languages);
    bool is_spoken_languages_Set() const;
    bool is_spoken_languages_Valid() const;

    QString getStreetType() const;
    void setStreetType(const QString &street_type);
    bool is_street_type_Set() const;
    bool is_street_type_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getTld() const;
    void setTld(const QString &tld);
    bool is_tld_Set() const;
    bool is_tld_Valid() const;

    QString getYahooMapUrl() const;
    void setYahooMapUrl(const QString &yahoo_map_url);
    bool is_yahoo_map_url_Set() const;
    bool is_yahoo_map_url_Valid() const;

    QList<QString> getZipcodes() const;
    void setZipcodes(const QList<QString> &zipcodes);
    bool is_zipcodes_Set() const;
    bool is_zipcodes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_adm1_code;
    bool m_adm1_code_isSet;
    bool m_adm1_code_isValid;

    QString m_adm1_name;
    bool m_adm1_name_isSet;
    bool m_adm1_name_isValid;

    QList<QString> m_adm1_names_alternate;
    bool m_adm1_names_alternate_isSet;
    bool m_adm1_names_alternate_isValid;

    QString m_adm2_code;
    bool m_adm2_code_isSet;
    bool m_adm2_code_isValid;

    QString m_adm2_name;
    bool m_adm2_name_isSet;
    bool m_adm2_name_isValid;

    QList<QString> m_adm2_names_alternate;
    bool m_adm2_names_alternate_isSet;
    bool m_adm2_names_alternate_isValid;

    QString m_adm3_code;
    bool m_adm3_code_isSet;
    bool m_adm3_code_isValid;

    QString m_adm3_name;
    bool m_adm3_name_isSet;
    bool m_adm3_name_isValid;

    QString m_adm4_code;
    bool m_adm4_code_isSet;
    bool m_adm4_code_isValid;

    QString m_adm4_name;
    bool m_adm4_name_isSet;
    bool m_adm4_name_isValid;

    QString m_amenity;
    bool m_amenity_isSet;
    bool m_amenity_isValid;

    double m_area;
    bool m_area_isSet;
    bool m_area_isValid;

    QString m_capital_name;
    bool m_capital_name_isSet;
    bool m_capital_name_isValid;

    QString m_continent;
    bool m_continent_isSet;
    bool m_continent_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_country_flag_url;
    bool m_country_flag_url_isSet;
    bool m_country_flag_url_isValid;

    QString m_country_name;
    bool m_country_name_isSet;
    bool m_country_name_isValid;

    QList<QString> m_country_names_alternate;
    bool m_country_names_alternate_isSet;
    bool m_country_names_alternate_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_currency_name;
    bool m_currency_name_isSet;
    bool m_currency_name_isValid;

    qint32 m_elevation;
    bool m_elevation_isSet;
    bool m_elevation_isValid;

    QString m_feature_class;
    bool m_feature_class_isSet;
    bool m_feature_class_isValid;

    QString m_feature_code;
    bool m_feature_code_isSet;
    bool m_feature_code_isValid;

    qint64 m_feature_id;
    bool m_feature_id_isSet;
    bool m_feature_id_isValid;

    QString m_fips_code;
    bool m_fips_code_isSet;
    bool m_fips_code_isValid;

    QString m_fully_qualified_address;
    bool m_fully_qualified_address_isSet;
    bool m_fully_qualified_address_isValid;

    QString m_fully_qualified_name;
    bool m_fully_qualified_name_isSet;
    bool m_fully_qualified_name_isValid;

    QString m_google_map_url;
    bool m_google_map_url_isSet;
    bool m_google_map_url_isValid;

    qint32 m_gtopo30;
    bool m_gtopo30_isSet;
    bool m_gtopo30_isValid;

    QList<OAIHouseNumberDto> m_house_numbers;
    bool m_house_numbers_isSet;
    bool m_house_numbers_isValid;

    QString m_is_in;
    bool m_is_in_isSet;
    bool m_is_in_isValid;

    QString m_is_in_adm;
    bool m_is_in_adm_isSet;
    bool m_is_in_adm_isValid;

    QString m_is_in_place;
    bool m_is_in_place_isSet;
    bool m_is_in_place_isValid;

    QList<QString> m_is_in_zip;
    bool m_is_in_zip_isSet;
    bool m_is_in_zip_isValid;

    QString m_isoalpha2_country_code;
    bool m_isoalpha2_country_code_isSet;
    bool m_isoalpha2_country_code_isValid;

    QString m_isoalpha3_country_code;
    bool m_isoalpha3_country_code_isSet;
    bool m_isoalpha3_country_code_isValid;

    double m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    double m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    qint32 m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    double m_lng;
    bool m_lng_isSet;
    bool m_lng_isValid;

    bool m_municipality;
    bool m_municipality_isSet;
    bool m_municipality_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_name_alternates;
    bool m_name_alternates_isSet;
    bool m_name_alternates_isValid;

    QString m_name_ascii;
    bool m_name_ascii_isSet;
    bool m_name_ascii_isValid;

    bool m_one_way;
    bool m_one_way_isSet;
    bool m_one_way_isValid;

    qint64 m_openstreetmap_id;
    bool m_openstreetmap_id_isSet;
    bool m_openstreetmap_id_isValid;

    QString m_openstreetmap_map_url;
    bool m_openstreetmap_map_url_isSet;
    bool m_openstreetmap_map_url_isValid;

    QString m_phone_prefix;
    bool m_phone_prefix_isSet;
    bool m_phone_prefix_isValid;

    QString m_placetype;
    bool m_placetype_isSet;
    bool m_placetype_isValid;

    qint32 m_population;
    bool m_population_isSet;
    bool m_population_isValid;

    QString m_postal_code_mask;
    bool m_postal_code_mask_isSet;
    bool m_postal_code_mask_isValid;

    QString m_postal_code_regex;
    bool m_postal_code_regex_isSet;
    bool m_postal_code_regex_isValid;

    float m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QList<QString> m_spoken_languages;
    bool m_spoken_languages_isSet;
    bool m_spoken_languages_isValid;

    QString m_street_type;
    bool m_street_type_isSet;
    bool m_street_type_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString m_tld;
    bool m_tld_isSet;
    bool m_tld_isValid;

    QString m_yahoo_map_url;
    bool m_yahoo_map_url_isSet;
    bool m_yahoo_map_url_isValid;

    QList<QString> m_zipcodes;
    bool m_zipcodes_isSet;
    bool m_zipcodes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISolrResponseDto)

#endif // OAISolrResponseDto_H
