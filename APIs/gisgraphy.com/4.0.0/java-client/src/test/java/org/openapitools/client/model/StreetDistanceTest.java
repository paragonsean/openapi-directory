/*
 * Gisgraphy webservices
 * Since 2006, [Gisgraphy](http://www.gisgraphy.com) is a free, open source framework that offers the possibility to do geolocalisation and geocoding via Java APIs or REST webservices. Because geocoding is nothing without data, it provides an easy to use importer that will automatically download and import the necessary (free) data to your local database ([OpenStreetMap](http://www.openstreetmap.org/), [Geonames](http://www.geonames.org/) and [Quattroshapes](http://www.quattroshapes.com/): more than 100 million entries). You can also add your own data with the Web interface or the importer connectors provided. Gisgraphy is production ready, and has been designed to be scalable(load balanced), performant and used in other languages than just java : results can be output in XML, JSON, PHP, Python, Ruby, YAML, GeoRSS, and Atom. One of the most popular GPS tracking System (OpenGTS) also includes a Gisgraphy client...Gisgraphy is a framework. As a result it's flexible and powerful enough to be used in a lot of different use cases. [read more](http://www.gisgraphy.com)   if you use the premium servers, you can use the api key to test the webservices 
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for StreetDistance
 */
public class StreetDistanceTest {
    private final StreetDistance model = new StreetDistance();

    /**
     * Model tests for StreetDistance
     */
    @Test
    public void testStreetDistance() {
        // TODO: test StreetDistance
    }

    /**
     * Test the property 'countryCode'
     */
    @Test
    public void countryCodeTest() {
        // TODO: test countryCode
    }

    /**
     * Test the property 'distance'
     */
    @Test
    public void distanceTest() {
        // TODO: test distance
    }

    /**
     * Test the property 'fullyQualifiedAddress'
     */
    @Test
    public void fullyQualifiedAddressTest() {
        // TODO: test fullyQualifiedAddress
    }

    /**
     * Test the property 'gid'
     */
    @Test
    public void gidTest() {
        // TODO: test gid
    }

    /**
     * Test the property 'isIn'
     */
    @Test
    public void isInTest() {
        // TODO: test isIn
    }

    /**
     * Test the property 'isInAdm'
     */
    @Test
    public void isInAdmTest() {
        // TODO: test isInAdm
    }

    /**
     * Test the property 'isInPlace'
     */
    @Test
    public void isInPlaceTest() {
        // TODO: test isInPlace
    }

    /**
     * Test the property 'isInZip'
     */
    @Test
    public void isInZipTest() {
        // TODO: test isInZip
    }

    /**
     * Test the property 'lat'
     */
    @Test
    public void latTest() {
        // TODO: test lat
    }

    /**
     * Test the property 'length'
     */
    @Test
    public void lengthTest() {
        // TODO: test length
    }

    /**
     * Test the property 'lng'
     */
    @Test
    public void lngTest() {
        // TODO: test lng
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'oneWay'
     */
    @Test
    public void oneWayTest() {
        // TODO: test oneWay
    }

    /**
     * Test the property 'openstreetmapId'
     */
    @Test
    public void openstreetmapIdTest() {
        // TODO: test openstreetmapId
    }

    /**
     * Test the property 'streetType'
     */
    @Test
    public void streetTypeTest() {
        // TODO: test streetType
    }

}
