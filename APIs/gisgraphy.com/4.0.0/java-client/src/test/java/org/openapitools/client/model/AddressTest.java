/*
 * Gisgraphy webservices
 * Since 2006, [Gisgraphy](http://www.gisgraphy.com) is a free, open source framework that offers the possibility to do geolocalisation and geocoding via Java APIs or REST webservices. Because geocoding is nothing without data, it provides an easy to use importer that will automatically download and import the necessary (free) data to your local database ([OpenStreetMap](http://www.openstreetmap.org/), [Geonames](http://www.geonames.org/) and [Quattroshapes](http://www.quattroshapes.com/): more than 100 million entries). You can also add your own data with the Web interface or the importer connectors provided. Gisgraphy is production ready, and has been designed to be scalable(load balanced), performant and used in other languages than just java : results can be output in XML, JSON, PHP, Python, Ruby, YAML, GeoRSS, and Atom. One of the most popular GPS tracking System (OpenGTS) also includes a Gisgraphy client...Gisgraphy is a framework. As a result it's flexible and powerful enough to be used in a lot of different use cases. [read more](http://www.gisgraphy.com)   if you use the premium servers, you can use the api key to test the webservices 
 *
 * The version of the OpenAPI document: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Address
 */
public class AddressTest {
    private final Address model = new Address();

    /**
     * Model tests for Address
     */
    @Test
    public void testAddress() {
        // TODO: test Address
    }

    /**
     * Test the property 'poBox'
     */
    @Test
    public void poBoxTest() {
        // TODO: test poBox
    }

    /**
     * Test the property 'poBoxAgency'
     */
    @Test
    public void poBoxAgencyTest() {
        // TODO: test poBoxAgency
    }

    /**
     * Test the property 'poBoxInfo'
     */
    @Test
    public void poBoxInfoTest() {
        // TODO: test poBoxInfo
    }

    /**
     * Test the property 'adm1NameAlternatesLocalized'
     */
    @Test
    public void adm1NameAlternatesLocalizedTest() {
        // TODO: test adm1NameAlternatesLocalized
    }

    /**
     * Test the property 'adm2NameAlternatesLocalized'
     */
    @Test
    public void adm2NameAlternatesLocalizedTest() {
        // TODO: test adm2NameAlternatesLocalized
    }

    /**
     * Test the property 'block'
     */
    @Test
    public void blockTest() {
        // TODO: test block
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'citySubdivision'
     */
    @Test
    public void citySubdivisionTest() {
        // TODO: test citySubdivision
    }

    /**
     * Test the property 'civicNumberSuffix'
     */
    @Test
    public void civicNumberSuffixTest() {
        // TODO: test civicNumberSuffix
    }

    /**
     * Test the property 'confidence'
     */
    @Test
    public void confidenceTest() {
        // TODO: test confidence
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'countryNameAlternatesLocalized'
     */
    @Test
    public void countryNameAlternatesLocalizedTest() {
        // TODO: test countryNameAlternatesLocalized
    }

    /**
     * Test the property 'countrycode'
     */
    @Test
    public void countrycodeTest() {
        // TODO: test countrycode
    }

    /**
     * Test the property 'dependentLocality'
     */
    @Test
    public void dependentLocalityTest() {
        // TODO: test dependentLocality
    }

    /**
     * Test the property 'distance'
     */
    @Test
    public void distanceTest() {
        // TODO: test distance
    }

    /**
     * Test the property 'district'
     */
    @Test
    public void districtTest() {
        // TODO: test district
    }

    /**
     * Test the property 'extraInfo'
     */
    @Test
    public void extraInfoTest() {
        // TODO: test extraInfo
    }

    /**
     * Test the property 'floor'
     */
    @Test
    public void floorTest() {
        // TODO: test floor
    }

    /**
     * Test the property 'geocodinglevel'
     */
    @Test
    public void geocodinglevelTest() {
        // TODO: test geocodinglevel
    }

    /**
     * Test the property 'houseNumber'
     */
    @Test
    public void houseNumberTest() {
        // TODO: test houseNumber
    }

    /**
     * Test the property 'houseNumberInfo'
     */
    @Test
    public void houseNumberInfoTest() {
        // TODO: test houseNumberInfo
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'lat'
     */
    @Test
    public void latTest() {
        // TODO: test lat
    }

    /**
     * Test the property 'lng'
     */
    @Test
    public void lngTest() {
        // TODO: test lng
    }

    /**
     * Test the property 'lote'
     */
    @Test
    public void loteTest() {
        // TODO: test lote
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nameAlternatesLocalized'
     */
    @Test
    public void nameAlternatesLocalizedTest() {
        // TODO: test nameAlternatesLocalized
    }

    /**
     * Test the property 'postDirection'
     */
    @Test
    public void postDirectionTest() {
        // TODO: test postDirection
    }

    /**
     * Test the property 'postDirectionIntersection'
     */
    @Test
    public void postDirectionIntersectionTest() {
        // TODO: test postDirectionIntersection
    }

    /**
     * Test the property 'postTown'
     */
    @Test
    public void postTownTest() {
        // TODO: test postTown
    }

    /**
     * Test the property 'preDirection'
     */
    @Test
    public void preDirectionTest() {
        // TODO: test preDirection
    }

    /**
     * Test the property 'preDirectionIntersection'
     */
    @Test
    public void preDirectionIntersectionTest() {
        // TODO: test preDirectionIntersection
    }

    /**
     * Test the property 'prefecture'
     */
    @Test
    public void prefectureTest() {
        // TODO: test prefecture
    }

    /**
     * Test the property 'quadrant'
     */
    @Test
    public void quadrantTest() {
        // TODO: test quadrant
    }

    /**
     * Test the property 'quarter'
     */
    @Test
    public void quarterTest() {
        // TODO: test quarter
    }

    /**
     * Test the property 'recipientName'
     */
    @Test
    public void recipientNameTest() {
        // TODO: test recipientName
    }

    /**
     * Test the property 'sector'
     */
    @Test
    public void sectorTest() {
        // TODO: test sector
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'streetName'
     */
    @Test
    public void streetNameTest() {
        // TODO: test streetName
    }

    /**
     * Test the property 'streetNameIntersection'
     */
    @Test
    public void streetNameIntersectionTest() {
        // TODO: test streetNameIntersection
    }

    /**
     * Test the property 'streetType'
     */
    @Test
    public void streetTypeTest() {
        // TODO: test streetType
    }

    /**
     * Test the property 'streetTypeIntersection'
     */
    @Test
    public void streetTypeIntersectionTest() {
        // TODO: test streetTypeIntersection
    }

    /**
     * Test the property 'suiteNumber'
     */
    @Test
    public void suiteNumberTest() {
        // TODO: test suiteNumber
    }

    /**
     * Test the property 'suiteType'
     */
    @Test
    public void suiteTypeTest() {
        // TODO: test suiteType
    }

    /**
     * Test the property 'ward'
     */
    @Test
    public void wardTest() {
        // TODO: test ward
    }

    /**
     * Test the property 'zipCode'
     */
    @Test
    public void zipCodeTest() {
        // TODO: test zipCode
    }

}
