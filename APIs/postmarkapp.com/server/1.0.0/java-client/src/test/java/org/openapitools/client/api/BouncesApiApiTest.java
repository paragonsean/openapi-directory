/*
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BounceActivationResponse;
import org.openapitools.client.model.BounceDumpResponse;
import org.openapitools.client.model.BounceInfoResponse;
import org.openapitools.client.model.BounceSearchResponse;
import org.openapitools.client.model.DeliveryStatsResponse;
import java.time.LocalDate;
import org.openapitools.client.model.StandardPostmarkResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BouncesApiApi
 */
@Disabled
public class BouncesApiApiTest {

    private final BouncesApiApi api = new BouncesApiApi();

    /**
     * Activate a bounce
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activateBounceTest() throws ApiException {
        String xPostmarkServerToken = null;
        Long bounceid = null;
        BounceActivationResponse response = api.activateBounce(xPostmarkServerToken, bounceid);
        // TODO: test validations
    }

    /**
     * Get bounce dump
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bouncesBounceidDumpGetTest() throws ApiException {
        String xPostmarkServerToken = null;
        Long bounceid = null;
        BounceDumpResponse response = api.bouncesBounceidDumpGet(xPostmarkServerToken, bounceid);
        // TODO: test validations
    }

    /**
     * Get bounces
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBouncesTest() throws ApiException {
        String xPostmarkServerToken = null;
        Integer count = null;
        Integer offset = null;
        String type = null;
        Boolean inactive = null;
        String emailFilter = null;
        String messageID = null;
        String tag = null;
        LocalDate todate = null;
        LocalDate fromdate = null;
        BounceSearchResponse response = api.getBounces(xPostmarkServerToken, count, offset, type, inactive, emailFilter, messageID, tag, todate, fromdate);
        // TODO: test validations
    }

    /**
     * Get delivery stats
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDeliveryStatsTest() throws ApiException {
        String xPostmarkServerToken = null;
        DeliveryStatsResponse response = api.getDeliveryStats(xPostmarkServerToken);
        // TODO: test validations
    }

    /**
     * Get a single bounce
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleBounceTest() throws ApiException {
        String xPostmarkServerToken = null;
        Long bounceid = null;
        BounceInfoResponse response = api.getSingleBounce(xPostmarkServerToken, bounceid);
        // TODO: test validations
    }

}
