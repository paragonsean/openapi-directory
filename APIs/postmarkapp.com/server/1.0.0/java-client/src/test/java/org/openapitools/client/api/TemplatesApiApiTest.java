/*
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.CreateTemplateRequest;
import org.openapitools.client.model.EditTemplateRequest;
import org.openapitools.client.model.EmailWithTemplateRequest;
import org.openapitools.client.model.SendEmailResponse;
import org.openapitools.client.model.SendEmailTemplatedBatchRequest;
import org.openapitools.client.model.StandardPostmarkResponse;
import org.openapitools.client.model.TemplateDetailResponse;
import org.openapitools.client.model.TemplateListingResponse;
import org.openapitools.client.model.TemplateRecordResponse;
import org.openapitools.client.model.TemplateValidationRequest;
import org.openapitools.client.model.TemplateValidationResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplatesApiApi
 */
@Disabled
public class TemplatesApiApiTest {

    private final TemplatesApiApi api = new TemplatesApiApi();

    /**
     * Delete a Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTemplateTest() throws ApiException {
        String xPostmarkServerToken = null;
        String templateIdOrAlias = null;
        TemplateDetailResponse response = api.deleteTemplate(xPostmarkServerToken, templateIdOrAlias);
        // TODO: test validations
    }

    /**
     * Get a Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleTemplateTest() throws ApiException {
        String xPostmarkServerToken = null;
        String templateIdOrAlias = null;
        TemplateDetailResponse response = api.getSingleTemplate(xPostmarkServerToken, templateIdOrAlias);
        // TODO: test validations
    }

    /**
     * Get the Templates associated with this Server
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTemplatesTest() throws ApiException {
        String xPostmarkServerToken = null;
        BigDecimal count = null;
        BigDecimal offset = null;
        TemplateListingResponse response = api.listTemplates(xPostmarkServerToken, count, offset);
        // TODO: test validations
    }

    /**
     * Send a batch of email using templates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendEmailBatchWithTemplates_0Test() throws ApiException {
        String xPostmarkServerToken = null;
        SendEmailTemplatedBatchRequest body = null;
        List<SendEmailResponse> response = api.sendEmailBatchWithTemplates_0(xPostmarkServerToken, body);
        // TODO: test validations
    }

    /**
     * Send an email using a Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendEmailWithTemplate_0Test() throws ApiException {
        String xPostmarkServerToken = null;
        EmailWithTemplateRequest body = null;
        SendEmailResponse response = api.sendEmailWithTemplate_0(xPostmarkServerToken, body);
        // TODO: test validations
    }

    /**
     * Create a Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void templatesPostTest() throws ApiException {
        String xPostmarkServerToken = null;
        CreateTemplateRequest body = null;
        TemplateRecordResponse response = api.templatesPost(xPostmarkServerToken, body);
        // TODO: test validations
    }

    /**
     * Test Template Content
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testTemplateContentTest() throws ApiException {
        String xPostmarkServerToken = null;
        TemplateValidationRequest body = null;
        TemplateValidationResponse response = api.testTemplateContent(xPostmarkServerToken, body);
        // TODO: test validations
    }

    /**
     * Update a Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTemplateTest() throws ApiException {
        String xPostmarkServerToken = null;
        String templateIdOrAlias = null;
        EditTemplateRequest body = null;
        TemplateRecordResponse response = api.updateTemplate(xPostmarkServerToken, templateIdOrAlias, body);
        // TODO: test validations
    }

}
