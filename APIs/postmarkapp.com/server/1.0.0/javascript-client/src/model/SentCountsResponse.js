/**
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SentCountsResponseDaysInner from './SentCountsResponseDaysInner';

/**
 * The SentCountsResponse model module.
 * @module model/SentCountsResponse
 * @version 1.0.0
 */
class SentCountsResponse {
    /**
     * Constructs a new <code>SentCountsResponse</code>.
     * The result of a get sent counts operation.
     * @alias module:model/SentCountsResponse
     */
    constructor() { 
        
        SentCountsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SentCountsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SentCountsResponse} obj Optional instance to populate.
     * @return {module:model/SentCountsResponse} The populated <code>SentCountsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SentCountsResponse();

            if (data.hasOwnProperty('Days')) {
                obj['Days'] = ApiClient.convertToType(data['Days'], [SentCountsResponseDaysInner]);
            }
            if (data.hasOwnProperty('Sent')) {
                obj['Sent'] = ApiClient.convertToType(data['Sent'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SentCountsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SentCountsResponse</code>.
     */
    static validateJSON(data) {
        if (data['Days']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Days'])) {
                throw new Error("Expected the field `Days` to be an array in the JSON data but got " + data['Days']);
            }
            // validate the optional field `Days` (array)
            for (const item of data['Days']) {
                SentCountsResponseDaysInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/SentCountsResponseDaysInner>} Days
 */
SentCountsResponse.prototype['Days'] = undefined;

/**
 * @member {Number} Sent
 */
SentCountsResponse.prototype['Sent'] = undefined;






export default SentCountsResponse;

