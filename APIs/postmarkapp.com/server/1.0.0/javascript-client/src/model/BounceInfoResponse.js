/**
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BounceInfoResponse model module.
 * @module model/BounceInfoResponse
 * @version 1.0.0
 */
class BounceInfoResponse {
    /**
     * Constructs a new <code>BounceInfoResponse</code>.
     * @alias module:model/BounceInfoResponse
     */
    constructor() { 
        
        BounceInfoResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BounceInfoResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BounceInfoResponse} obj Optional instance to populate.
     * @return {module:model/BounceInfoResponse} The populated <code>BounceInfoResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BounceInfoResponse();

            if (data.hasOwnProperty('BouncedAt')) {
                obj['BouncedAt'] = ApiClient.convertToType(data['BouncedAt'], 'Date');
            }
            if (data.hasOwnProperty('CanActivate')) {
                obj['CanActivate'] = ApiClient.convertToType(data['CanActivate'], 'Boolean');
            }
            if (data.hasOwnProperty('Content')) {
                obj['Content'] = ApiClient.convertToType(data['Content'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Details')) {
                obj['Details'] = ApiClient.convertToType(data['Details'], 'String');
            }
            if (data.hasOwnProperty('DumpAvailable')) {
                obj['DumpAvailable'] = ApiClient.convertToType(data['DumpAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('Inactive')) {
                obj['Inactive'] = ApiClient.convertToType(data['Inactive'], 'Boolean');
            }
            if (data.hasOwnProperty('MessageID')) {
                obj['MessageID'] = ApiClient.convertToType(data['MessageID'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Subject')) {
                obj['Subject'] = ApiClient.convertToType(data['Subject'], 'String');
            }
            if (data.hasOwnProperty('Tag')) {
                obj['Tag'] = ApiClient.convertToType(data['Tag'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
            if (data.hasOwnProperty('TypeCode')) {
                obj['TypeCode'] = ApiClient.convertToType(data['TypeCode'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BounceInfoResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BounceInfoResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Content'] && !(typeof data['Content'] === 'string' || data['Content'] instanceof String)) {
            throw new Error("Expected the field `Content` to be a primitive type in the JSON string but got " + data['Content']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Details'] && !(typeof data['Details'] === 'string' || data['Details'] instanceof String)) {
            throw new Error("Expected the field `Details` to be a primitive type in the JSON string but got " + data['Details']);
        }
        // ensure the json data is a string
        if (data['Email'] && !(typeof data['Email'] === 'string' || data['Email'] instanceof String)) {
            throw new Error("Expected the field `Email` to be a primitive type in the JSON string but got " + data['Email']);
        }
        // ensure the json data is a string
        if (data['ID'] && !(typeof data['ID'] === 'string' || data['ID'] instanceof String)) {
            throw new Error("Expected the field `ID` to be a primitive type in the JSON string but got " + data['ID']);
        }
        // ensure the json data is a string
        if (data['MessageID'] && !(typeof data['MessageID'] === 'string' || data['MessageID'] instanceof String)) {
            throw new Error("Expected the field `MessageID` to be a primitive type in the JSON string but got " + data['MessageID']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Subject'] && !(typeof data['Subject'] === 'string' || data['Subject'] instanceof String)) {
            throw new Error("Expected the field `Subject` to be a primitive type in the JSON string but got " + data['Subject']);
        }
        // ensure the json data is a string
        if (data['Tag'] && !(typeof data['Tag'] === 'string' || data['Tag'] instanceof String)) {
            throw new Error("Expected the field `Tag` to be a primitive type in the JSON string but got " + data['Tag']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}



/**
 * @member {Date} BouncedAt
 */
BounceInfoResponse.prototype['BouncedAt'] = undefined;

/**
 * @member {Boolean} CanActivate
 */
BounceInfoResponse.prototype['CanActivate'] = undefined;

/**
 * @member {String} Content
 */
BounceInfoResponse.prototype['Content'] = undefined;

/**
 * @member {String} Description
 */
BounceInfoResponse.prototype['Description'] = undefined;

/**
 * @member {String} Details
 */
BounceInfoResponse.prototype['Details'] = undefined;

/**
 * @member {Boolean} DumpAvailable
 */
BounceInfoResponse.prototype['DumpAvailable'] = undefined;

/**
 * @member {String} Email
 */
BounceInfoResponse.prototype['Email'] = undefined;

/**
 * @member {String} ID
 */
BounceInfoResponse.prototype['ID'] = undefined;

/**
 * @member {Boolean} Inactive
 */
BounceInfoResponse.prototype['Inactive'] = undefined;

/**
 * @member {String} MessageID
 */
BounceInfoResponse.prototype['MessageID'] = undefined;

/**
 * @member {String} Name
 */
BounceInfoResponse.prototype['Name'] = undefined;

/**
 * @member {String} Subject
 */
BounceInfoResponse.prototype['Subject'] = undefined;

/**
 * @member {String} Tag
 */
BounceInfoResponse.prototype['Tag'] = undefined;

/**
 * @member {String} Type
 */
BounceInfoResponse.prototype['Type'] = undefined;

/**
 * @member {Number} TypeCode
 */
BounceInfoResponse.prototype['TypeCode'] = undefined;






export default BounceInfoResponse;

