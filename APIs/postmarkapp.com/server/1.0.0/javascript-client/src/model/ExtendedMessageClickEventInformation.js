/**
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExtendedMessageClickEventInformationClient from './ExtendedMessageClickEventInformationClient';
import ExtendedMessageClickEventInformationGeo from './ExtendedMessageClickEventInformationGeo';
import ExtendedMessageClickEventInformationOS from './ExtendedMessageClickEventInformationOS';

/**
 * The ExtendedMessageClickEventInformation model module.
 * @module model/ExtendedMessageClickEventInformation
 * @version 1.0.0
 */
class ExtendedMessageClickEventInformation {
    /**
     * Constructs a new <code>ExtendedMessageClickEventInformation</code>.
     * 
     * @alias module:model/ExtendedMessageClickEventInformation
     */
    constructor() { 
        
        ExtendedMessageClickEventInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExtendedMessageClickEventInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExtendedMessageClickEventInformation} obj Optional instance to populate.
     * @return {module:model/ExtendedMessageClickEventInformation} The populated <code>ExtendedMessageClickEventInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtendedMessageClickEventInformation();

            if (data.hasOwnProperty('ClickLocation')) {
                obj['ClickLocation'] = ApiClient.convertToType(data['ClickLocation'], 'String');
            }
            if (data.hasOwnProperty('Client')) {
                obj['Client'] = ExtendedMessageClickEventInformationClient.constructFromObject(data['Client']);
            }
            if (data.hasOwnProperty('Geo')) {
                obj['Geo'] = ExtendedMessageClickEventInformationGeo.constructFromObject(data['Geo']);
            }
            if (data.hasOwnProperty('MessageID')) {
                obj['MessageID'] = ApiClient.convertToType(data['MessageID'], 'String');
            }
            if (data.hasOwnProperty('OS')) {
                obj['OS'] = ExtendedMessageClickEventInformationOS.constructFromObject(data['OS']);
            }
            if (data.hasOwnProperty('OriginalLink')) {
                obj['OriginalLink'] = ApiClient.convertToType(data['OriginalLink'], 'String');
            }
            if (data.hasOwnProperty('Platform')) {
                obj['Platform'] = ApiClient.convertToType(data['Platform'], 'String');
            }
            if (data.hasOwnProperty('ReceivedAt')) {
                obj['ReceivedAt'] = ApiClient.convertToType(data['ReceivedAt'], 'Date');
            }
            if (data.hasOwnProperty('Recipient')) {
                obj['Recipient'] = ApiClient.convertToType(data['Recipient'], 'String');
            }
            if (data.hasOwnProperty('Tag')) {
                obj['Tag'] = ApiClient.convertToType(data['Tag'], 'String');
            }
            if (data.hasOwnProperty('UserAgent')) {
                obj['UserAgent'] = ApiClient.convertToType(data['UserAgent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExtendedMessageClickEventInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExtendedMessageClickEventInformation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ClickLocation'] && !(typeof data['ClickLocation'] === 'string' || data['ClickLocation'] instanceof String)) {
            throw new Error("Expected the field `ClickLocation` to be a primitive type in the JSON string but got " + data['ClickLocation']);
        }
        // validate the optional field `Client`
        if (data['Client']) { // data not null
          ExtendedMessageClickEventInformationClient.validateJSON(data['Client']);
        }
        // validate the optional field `Geo`
        if (data['Geo']) { // data not null
          ExtendedMessageClickEventInformationGeo.validateJSON(data['Geo']);
        }
        // ensure the json data is a string
        if (data['MessageID'] && !(typeof data['MessageID'] === 'string' || data['MessageID'] instanceof String)) {
            throw new Error("Expected the field `MessageID` to be a primitive type in the JSON string but got " + data['MessageID']);
        }
        // validate the optional field `OS`
        if (data['OS']) { // data not null
          ExtendedMessageClickEventInformationOS.validateJSON(data['OS']);
        }
        // ensure the json data is a string
        if (data['OriginalLink'] && !(typeof data['OriginalLink'] === 'string' || data['OriginalLink'] instanceof String)) {
            throw new Error("Expected the field `OriginalLink` to be a primitive type in the JSON string but got " + data['OriginalLink']);
        }
        // ensure the json data is a string
        if (data['Platform'] && !(typeof data['Platform'] === 'string' || data['Platform'] instanceof String)) {
            throw new Error("Expected the field `Platform` to be a primitive type in the JSON string but got " + data['Platform']);
        }
        // ensure the json data is a string
        if (data['Recipient'] && !(typeof data['Recipient'] === 'string' || data['Recipient'] instanceof String)) {
            throw new Error("Expected the field `Recipient` to be a primitive type in the JSON string but got " + data['Recipient']);
        }
        // ensure the json data is a string
        if (data['Tag'] && !(typeof data['Tag'] === 'string' || data['Tag'] instanceof String)) {
            throw new Error("Expected the field `Tag` to be a primitive type in the JSON string but got " + data['Tag']);
        }
        // ensure the json data is a string
        if (data['UserAgent'] && !(typeof data['UserAgent'] === 'string' || data['UserAgent'] instanceof String)) {
            throw new Error("Expected the field `UserAgent` to be a primitive type in the JSON string but got " + data['UserAgent']);
        }

        return true;
    }


}



/**
 * @member {String} ClickLocation
 */
ExtendedMessageClickEventInformation.prototype['ClickLocation'] = undefined;

/**
 * @member {module:model/ExtendedMessageClickEventInformationClient} Client
 */
ExtendedMessageClickEventInformation.prototype['Client'] = undefined;

/**
 * @member {module:model/ExtendedMessageClickEventInformationGeo} Geo
 */
ExtendedMessageClickEventInformation.prototype['Geo'] = undefined;

/**
 * @member {String} MessageID
 */
ExtendedMessageClickEventInformation.prototype['MessageID'] = undefined;

/**
 * @member {module:model/ExtendedMessageClickEventInformationOS} OS
 */
ExtendedMessageClickEventInformation.prototype['OS'] = undefined;

/**
 * @member {String} OriginalLink
 */
ExtendedMessageClickEventInformation.prototype['OriginalLink'] = undefined;

/**
 * @member {String} Platform
 */
ExtendedMessageClickEventInformation.prototype['Platform'] = undefined;

/**
 * @member {Date} ReceivedAt
 */
ExtendedMessageClickEventInformation.prototype['ReceivedAt'] = undefined;

/**
 * @member {String} Recipient
 */
ExtendedMessageClickEventInformation.prototype['Recipient'] = undefined;

/**
 * @member {String} Tag
 */
ExtendedMessageClickEventInformation.prototype['Tag'] = undefined;

/**
 * @member {String} UserAgent
 */
ExtendedMessageClickEventInformation.prototype['UserAgent'] = undefined;






export default ExtendedMessageClickEventInformation;

