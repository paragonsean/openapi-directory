/**
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PostmarkApi);
  }
}(this, function(expect, PostmarkApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PostmarkApi.EditServerConfigurationRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EditServerConfigurationRequest', function() {
    it('should create an instance of EditServerConfigurationRequest', function() {
      // uncomment below and update the code to test EditServerConfigurationRequest
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be.a(PostmarkApi.EditServerConfigurationRequest);
    });

    it('should have the property bounceHookUrl (base name: "BounceHookUrl")', function() {
      // uncomment below and update the code to test the property bounceHookUrl
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property clickHookUrl (base name: "ClickHookUrl")', function() {
      // uncomment below and update the code to test the property clickHookUrl
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "Color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property deliveryHookUrl (base name: "DeliveryHookUrl")', function() {
      // uncomment below and update the code to test the property deliveryHookUrl
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property inboundDomain (base name: "InboundDomain")', function() {
      // uncomment below and update the code to test the property inboundDomain
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property inboundHookUrl (base name: "InboundHookUrl")', function() {
      // uncomment below and update the code to test the property inboundHookUrl
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property inboundSpamThreshold (base name: "InboundSpamThreshold")', function() {
      // uncomment below and update the code to test the property inboundSpamThreshold
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property openHookUrl (base name: "OpenHookUrl")', function() {
      // uncomment below and update the code to test the property openHookUrl
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property postFirstOpenOnly (base name: "PostFirstOpenOnly")', function() {
      // uncomment below and update the code to test the property postFirstOpenOnly
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property rawEmailEnabled (base name: "RawEmailEnabled")', function() {
      // uncomment below and update the code to test the property rawEmailEnabled
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property smtpApiActivated (base name: "SmtpApiActivated")', function() {
      // uncomment below and update the code to test the property smtpApiActivated
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property trackLinks (base name: "TrackLinks")', function() {
      // uncomment below and update the code to test the property trackLinks
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

    it('should have the property trackOpens (base name: "TrackOpens")', function() {
      // uncomment below and update the code to test the property trackOpens
      //var instance = new PostmarkApi.EditServerConfigurationRequest();
      //expect(instance).to.be();
    });

  });

}));
