/**
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendEmailResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendEmailResponse::OAISendEmailResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendEmailResponse::OAISendEmailResponse() {
    this->initializeModel();
}

OAISendEmailResponse::~OAISendEmailResponse() {}

void OAISendEmailResponse::initializeModel() {

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_message_id_isSet = false;
    m_message_id_isValid = false;

    m_submitted_at_isSet = false;
    m_submitted_at_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAISendEmailResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendEmailResponse::fromJsonObject(QJsonObject json) {

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("ErrorCode")]);
    m_error_code_isSet = !json[QString("ErrorCode")].isNull() && m_error_code_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("Message")]);
    m_message_isSet = !json[QString("Message")].isNull() && m_message_isValid;

    m_message_id_isValid = ::OpenAPI::fromJsonValue(m_message_id, json[QString("MessageID")]);
    m_message_id_isSet = !json[QString("MessageID")].isNull() && m_message_id_isValid;

    m_submitted_at_isValid = ::OpenAPI::fromJsonValue(m_submitted_at, json[QString("SubmittedAt")]);
    m_submitted_at_isSet = !json[QString("SubmittedAt")].isNull() && m_submitted_at_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("To")]);
    m_to_isSet = !json[QString("To")].isNull() && m_to_isValid;
}

QString OAISendEmailResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendEmailResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_error_code_isSet) {
        obj.insert(QString("ErrorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_message_isSet) {
        obj.insert(QString("Message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_message_id_isSet) {
        obj.insert(QString("MessageID"), ::OpenAPI::toJsonValue(m_message_id));
    }
    if (m_submitted_at_isSet) {
        obj.insert(QString("SubmittedAt"), ::OpenAPI::toJsonValue(m_submitted_at));
    }
    if (m_to_isSet) {
        obj.insert(QString("To"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

qint32 OAISendEmailResponse::getErrorCode() const {
    return m_error_code;
}
void OAISendEmailResponse::setErrorCode(const qint32 &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAISendEmailResponse::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAISendEmailResponse::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAISendEmailResponse::getMessage() const {
    return m_message;
}
void OAISendEmailResponse::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAISendEmailResponse::is_message_Set() const{
    return m_message_isSet;
}

bool OAISendEmailResponse::is_message_Valid() const{
    return m_message_isValid;
}

QString OAISendEmailResponse::getMessageId() const {
    return m_message_id;
}
void OAISendEmailResponse::setMessageId(const QString &message_id) {
    m_message_id = message_id;
    m_message_id_isSet = true;
}

bool OAISendEmailResponse::is_message_id_Set() const{
    return m_message_id_isSet;
}

bool OAISendEmailResponse::is_message_id_Valid() const{
    return m_message_id_isValid;
}

QDateTime OAISendEmailResponse::getSubmittedAt() const {
    return m_submitted_at;
}
void OAISendEmailResponse::setSubmittedAt(const QDateTime &submitted_at) {
    m_submitted_at = submitted_at;
    m_submitted_at_isSet = true;
}

bool OAISendEmailResponse::is_submitted_at_Set() const{
    return m_submitted_at_isSet;
}

bool OAISendEmailResponse::is_submitted_at_Valid() const{
    return m_submitted_at_isValid;
}

QString OAISendEmailResponse::getTo() const {
    return m_to;
}
void OAISendEmailResponse::setTo(const QString &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAISendEmailResponse::is_to_Set() const{
    return m_to_isSet;
}

bool OAISendEmailResponse::is_to_Valid() const{
    return m_to_isValid;
}

bool OAISendEmailResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submitted_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendEmailResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
