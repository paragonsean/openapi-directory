/**
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtendedMessageClickEventInformation_Client.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtendedMessageClickEventInformation_Client::OAIExtendedMessageClickEventInformation_Client(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtendedMessageClickEventInformation_Client::OAIExtendedMessageClickEventInformation_Client() {
    this->initializeModel();
}

OAIExtendedMessageClickEventInformation_Client::~OAIExtendedMessageClickEventInformation_Client() {}

void OAIExtendedMessageClickEventInformation_Client::initializeModel() {

    m_company_isSet = false;
    m_company_isValid = false;

    m_family_isSet = false;
    m_family_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIExtendedMessageClickEventInformation_Client::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtendedMessageClickEventInformation_Client::fromJsonObject(QJsonObject json) {

    m_company_isValid = ::OpenAPI::fromJsonValue(m_company, json[QString("Company")]);
    m_company_isSet = !json[QString("Company")].isNull() && m_company_isValid;

    m_family_isValid = ::OpenAPI::fromJsonValue(m_family, json[QString("Family")]);
    m_family_isSet = !json[QString("Family")].isNull() && m_family_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIExtendedMessageClickEventInformation_Client::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtendedMessageClickEventInformation_Client::asJsonObject() const {
    QJsonObject obj;
    if (m_company_isSet) {
        obj.insert(QString("Company"), ::OpenAPI::toJsonValue(m_company));
    }
    if (m_family_isSet) {
        obj.insert(QString("Family"), ::OpenAPI::toJsonValue(m_family));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIExtendedMessageClickEventInformation_Client::getCompany() const {
    return m_company;
}
void OAIExtendedMessageClickEventInformation_Client::setCompany(const QString &company) {
    m_company = company;
    m_company_isSet = true;
}

bool OAIExtendedMessageClickEventInformation_Client::is_company_Set() const{
    return m_company_isSet;
}

bool OAIExtendedMessageClickEventInformation_Client::is_company_Valid() const{
    return m_company_isValid;
}

QString OAIExtendedMessageClickEventInformation_Client::getFamily() const {
    return m_family;
}
void OAIExtendedMessageClickEventInformation_Client::setFamily(const QString &family) {
    m_family = family;
    m_family_isSet = true;
}

bool OAIExtendedMessageClickEventInformation_Client::is_family_Set() const{
    return m_family_isSet;
}

bool OAIExtendedMessageClickEventInformation_Client::is_family_Valid() const{
    return m_family_isValid;
}

QString OAIExtendedMessageClickEventInformation_Client::getName() const {
    return m_name;
}
void OAIExtendedMessageClickEventInformation_Client::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIExtendedMessageClickEventInformation_Client::is_name_Set() const{
    return m_name_isSet;
}

bool OAIExtendedMessageClickEventInformation_Client::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIExtendedMessageClickEventInformation_Client::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtendedMessageClickEventInformation_Client::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
