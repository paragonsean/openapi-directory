/**
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetBounceCounts_200_response.h
 *
 * 
 */

#ifndef OAIGetBounceCounts_200_response_H
#define OAIGetBounceCounts_200_response_H

#include <QJsonObject>

#include "OAIGetBounceCounts_200_response_Days_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetBounceCounts_200_response_Days_inner;

class OAIGetBounceCounts_200_response : public OAIObject {
public:
    OAIGetBounceCounts_200_response();
    OAIGetBounceCounts_200_response(QString json);
    ~OAIGetBounceCounts_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGetBounceCounts_200_response_Days_inner> getDays() const;
    void setDays(const QList<OAIGetBounceCounts_200_response_Days_inner> &days);
    bool is_days_Set() const;
    bool is_days_Valid() const;

    qint32 getHardBounce() const;
    void setHardBounce(const qint32 &hard_bounce);
    bool is_hard_bounce_Set() const;
    bool is_hard_bounce_Valid() const;

    qint32 getSmtpApiError() const;
    void setSmtpApiError(const qint32 &smtp_api_error);
    bool is_smtp_api_error_Set() const;
    bool is_smtp_api_error_Valid() const;

    qint32 getSoftBounce() const;
    void setSoftBounce(const qint32 &soft_bounce);
    bool is_soft_bounce_Set() const;
    bool is_soft_bounce_Valid() const;

    qint32 getTransient() const;
    void setTransient(const qint32 &transient);
    bool is_transient_Set() const;
    bool is_transient_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGetBounceCounts_200_response_Days_inner> m_days;
    bool m_days_isSet;
    bool m_days_isValid;

    qint32 m_hard_bounce;
    bool m_hard_bounce_isSet;
    bool m_hard_bounce_isValid;

    qint32 m_smtp_api_error;
    bool m_smtp_api_error_isSet;
    bool m_smtp_api_error_isValid;

    qint32 m_soft_bounce;
    bool m_soft_bounce_isSet;
    bool m_soft_bounce_isValid;

    qint32 m_transient;
    bool m_transient_isSet;
    bool m_transient_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetBounceCounts_200_response)

#endif // OAIGetBounceCounts_200_response_H
