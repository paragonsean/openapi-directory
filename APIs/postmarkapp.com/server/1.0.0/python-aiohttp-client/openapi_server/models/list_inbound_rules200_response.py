# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_inbound_rules200_response_inbound_rules_inner import ListInboundRules200ResponseInboundRulesInner
from openapi_server import util


class ListInboundRules200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inbound_rules: List[ListInboundRules200ResponseInboundRulesInner]=None, total_count: int=None):
        """ListInboundRules200Response - a model defined in OpenAPI

        :param inbound_rules: The inbound_rules of this ListInboundRules200Response.
        :param total_count: The total_count of this ListInboundRules200Response.
        """
        self.openapi_types = {
            'inbound_rules': List[ListInboundRules200ResponseInboundRulesInner],
            'total_count': int
        }

        self.attribute_map = {
            'inbound_rules': 'InboundRules',
            'total_count': 'TotalCount'
        }

        self._inbound_rules = inbound_rules
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListInboundRules200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The listInboundRules_200_response of this ListInboundRules200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inbound_rules(self):
        """Gets the inbound_rules of this ListInboundRules200Response.


        :return: The inbound_rules of this ListInboundRules200Response.
        :rtype: List[ListInboundRules200ResponseInboundRulesInner]
        """
        return self._inbound_rules

    @inbound_rules.setter
    def inbound_rules(self, inbound_rules):
        """Sets the inbound_rules of this ListInboundRules200Response.


        :param inbound_rules: The inbound_rules of this ListInboundRules200Response.
        :type inbound_rules: List[ListInboundRules200ResponseInboundRulesInner]
        """

        self._inbound_rules = inbound_rules

    @property
    def total_count(self):
        """Gets the total_count of this ListInboundRules200Response.


        :return: The total_count of this ListInboundRules200Response.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this ListInboundRules200Response.


        :param total_count: The total_count of this ListInboundRules200Response.
        :type total_count: int
        """

        self._total_count = total_count
