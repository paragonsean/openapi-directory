# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TemplateValidationError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, character_position: int=None, line: int=None, message: str=None):
        """TemplateValidationError - a model defined in OpenAPI

        :param character_position: The character_position of this TemplateValidationError.
        :param line: The line of this TemplateValidationError.
        :param message: The message of this TemplateValidationError.
        """
        self.openapi_types = {
            'character_position': int,
            'line': int,
            'message': str
        }

        self.attribute_map = {
            'character_position': 'CharacterPosition',
            'line': 'Line',
            'message': 'Message'
        }

        self._character_position = character_position
        self._line = line
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateValidationError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateValidationError of this TemplateValidationError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def character_position(self):
        """Gets the character_position of this TemplateValidationError.


        :return: The character_position of this TemplateValidationError.
        :rtype: int
        """
        return self._character_position

    @character_position.setter
    def character_position(self, character_position):
        """Sets the character_position of this TemplateValidationError.


        :param character_position: The character_position of this TemplateValidationError.
        :type character_position: int
        """

        self._character_position = character_position

    @property
    def line(self):
        """Gets the line of this TemplateValidationError.


        :return: The line of this TemplateValidationError.
        :rtype: int
        """
        return self._line

    @line.setter
    def line(self, line):
        """Sets the line of this TemplateValidationError.


        :param line: The line of this TemplateValidationError.
        :type line: int
        """

        self._line = line

    @property
    def message(self):
        """Gets the message of this TemplateValidationError.


        :return: The message of this TemplateValidationError.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this TemplateValidationError.


        :param message: The message of this TemplateValidationError.
        :type message: str
        """

        self._message = message
