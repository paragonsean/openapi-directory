# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_outbound_open_counts200_response_days_inner import GetOutboundOpenCounts200ResponseDaysInner
from openapi_server import util


class GetOutboundOpenCounts200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, days: List[GetOutboundOpenCounts200ResponseDaysInner]=None, opens: int=None, unique: int=None):
        """GetOutboundOpenCounts200Response - a model defined in OpenAPI

        :param days: The days of this GetOutboundOpenCounts200Response.
        :param opens: The opens of this GetOutboundOpenCounts200Response.
        :param unique: The unique of this GetOutboundOpenCounts200Response.
        """
        self.openapi_types = {
            'days': List[GetOutboundOpenCounts200ResponseDaysInner],
            'opens': int,
            'unique': int
        }

        self.attribute_map = {
            'days': 'Days',
            'opens': 'Opens',
            'unique': 'Unique'
        }

        self._days = days
        self._opens = opens
        self._unique = unique

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOutboundOpenCounts200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOutboundOpenCounts_200_response of this GetOutboundOpenCounts200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def days(self):
        """Gets the days of this GetOutboundOpenCounts200Response.


        :return: The days of this GetOutboundOpenCounts200Response.
        :rtype: List[GetOutboundOpenCounts200ResponseDaysInner]
        """
        return self._days

    @days.setter
    def days(self, days):
        """Sets the days of this GetOutboundOpenCounts200Response.


        :param days: The days of this GetOutboundOpenCounts200Response.
        :type days: List[GetOutboundOpenCounts200ResponseDaysInner]
        """

        self._days = days

    @property
    def opens(self):
        """Gets the opens of this GetOutboundOpenCounts200Response.


        :return: The opens of this GetOutboundOpenCounts200Response.
        :rtype: int
        """
        return self._opens

    @opens.setter
    def opens(self, opens):
        """Sets the opens of this GetOutboundOpenCounts200Response.


        :param opens: The opens of this GetOutboundOpenCounts200Response.
        :type opens: int
        """

        self._opens = opens

    @property
    def unique(self):
        """Gets the unique of this GetOutboundOpenCounts200Response.


        :return: The unique of this GetOutboundOpenCounts200Response.
        :rtype: int
        """
        return self._unique

    @unique.setter
    def unique(self, unique):
        """Sets the unique of this GetOutboundOpenCounts200Response.


        :param unique: The unique of this GetOutboundOpenCounts200Response.
        :type unique: int
        """

        self._unique = unique
