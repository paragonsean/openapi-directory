# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.outbound_message_detail import OutboundMessageDetail
from openapi_server import util


class OutboundSearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages: List[OutboundMessageDetail]=None, total_count: int=None):
        """OutboundSearchResponse - a model defined in OpenAPI

        :param messages: The messages of this OutboundSearchResponse.
        :param total_count: The total_count of this OutboundSearchResponse.
        """
        self.openapi_types = {
            'messages': List[OutboundMessageDetail],
            'total_count': int
        }

        self.attribute_map = {
            'messages': 'Messages',
            'total_count': 'TotalCount'
        }

        self._messages = messages
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutboundSearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutboundSearchResponse of this OutboundSearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages(self):
        """Gets the messages of this OutboundSearchResponse.


        :return: The messages of this OutboundSearchResponse.
        :rtype: List[OutboundMessageDetail]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this OutboundSearchResponse.


        :param messages: The messages of this OutboundSearchResponse.
        :type messages: List[OutboundMessageDetail]
        """

        self._messages = messages

    @property
    def total_count(self):
        """Gets the total_count of this OutboundSearchResponse.


        :return: The total_count of this OutboundSearchResponse.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this OutboundSearchResponse.


        :param total_count: The total_count of this OutboundSearchResponse.
        :type total_count: int
        """

        self._total_count = total_count
