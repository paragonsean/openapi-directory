# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OutboundOverviewStatsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bounce_rate: int=None, bounced: int=None, opens: int=None, smtpapi_errors: int=None, sent: int=None, spam_complaints: int=None, spam_complaints_rate: int=None, total_clicks: int=None, total_tracked_links_sent: int=None, tracked: int=None, unique_links_clicked: int=None, unique_opens: int=None, with_client_recorded: int=None, with_link_tracking: int=None, with_open_tracking: int=None, with_platform_recorded: int=None):
        """OutboundOverviewStatsResponse - a model defined in OpenAPI

        :param bounce_rate: The bounce_rate of this OutboundOverviewStatsResponse.
        :param bounced: The bounced of this OutboundOverviewStatsResponse.
        :param opens: The opens of this OutboundOverviewStatsResponse.
        :param smtpapi_errors: The smtpapi_errors of this OutboundOverviewStatsResponse.
        :param sent: The sent of this OutboundOverviewStatsResponse.
        :param spam_complaints: The spam_complaints of this OutboundOverviewStatsResponse.
        :param spam_complaints_rate: The spam_complaints_rate of this OutboundOverviewStatsResponse.
        :param total_clicks: The total_clicks of this OutboundOverviewStatsResponse.
        :param total_tracked_links_sent: The total_tracked_links_sent of this OutboundOverviewStatsResponse.
        :param tracked: The tracked of this OutboundOverviewStatsResponse.
        :param unique_links_clicked: The unique_links_clicked of this OutboundOverviewStatsResponse.
        :param unique_opens: The unique_opens of this OutboundOverviewStatsResponse.
        :param with_client_recorded: The with_client_recorded of this OutboundOverviewStatsResponse.
        :param with_link_tracking: The with_link_tracking of this OutboundOverviewStatsResponse.
        :param with_open_tracking: The with_open_tracking of this OutboundOverviewStatsResponse.
        :param with_platform_recorded: The with_platform_recorded of this OutboundOverviewStatsResponse.
        """
        self.openapi_types = {
            'bounce_rate': int,
            'bounced': int,
            'opens': int,
            'smtpapi_errors': int,
            'sent': int,
            'spam_complaints': int,
            'spam_complaints_rate': int,
            'total_clicks': int,
            'total_tracked_links_sent': int,
            'tracked': int,
            'unique_links_clicked': int,
            'unique_opens': int,
            'with_client_recorded': int,
            'with_link_tracking': int,
            'with_open_tracking': int,
            'with_platform_recorded': int
        }

        self.attribute_map = {
            'bounce_rate': 'BounceRate',
            'bounced': 'Bounced',
            'opens': 'Opens',
            'smtpapi_errors': 'SMTPAPIErrors',
            'sent': 'Sent',
            'spam_complaints': 'SpamComplaints',
            'spam_complaints_rate': 'SpamComplaintsRate',
            'total_clicks': 'TotalClicks',
            'total_tracked_links_sent': 'TotalTrackedLinksSent',
            'tracked': 'Tracked',
            'unique_links_clicked': 'UniqueLinksClicked',
            'unique_opens': 'UniqueOpens',
            'with_client_recorded': 'WithClientRecorded',
            'with_link_tracking': 'WithLinkTracking',
            'with_open_tracking': 'WithOpenTracking',
            'with_platform_recorded': 'WithPlatformRecorded'
        }

        self._bounce_rate = bounce_rate
        self._bounced = bounced
        self._opens = opens
        self._smtpapi_errors = smtpapi_errors
        self._sent = sent
        self._spam_complaints = spam_complaints
        self._spam_complaints_rate = spam_complaints_rate
        self._total_clicks = total_clicks
        self._total_tracked_links_sent = total_tracked_links_sent
        self._tracked = tracked
        self._unique_links_clicked = unique_links_clicked
        self._unique_opens = unique_opens
        self._with_client_recorded = with_client_recorded
        self._with_link_tracking = with_link_tracking
        self._with_open_tracking = with_open_tracking
        self._with_platform_recorded = with_platform_recorded

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutboundOverviewStatsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutboundOverviewStatsResponse of this OutboundOverviewStatsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bounce_rate(self):
        """Gets the bounce_rate of this OutboundOverviewStatsResponse.


        :return: The bounce_rate of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._bounce_rate

    @bounce_rate.setter
    def bounce_rate(self, bounce_rate):
        """Sets the bounce_rate of this OutboundOverviewStatsResponse.


        :param bounce_rate: The bounce_rate of this OutboundOverviewStatsResponse.
        :type bounce_rate: int
        """

        self._bounce_rate = bounce_rate

    @property
    def bounced(self):
        """Gets the bounced of this OutboundOverviewStatsResponse.


        :return: The bounced of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._bounced

    @bounced.setter
    def bounced(self, bounced):
        """Sets the bounced of this OutboundOverviewStatsResponse.


        :param bounced: The bounced of this OutboundOverviewStatsResponse.
        :type bounced: int
        """

        self._bounced = bounced

    @property
    def opens(self):
        """Gets the opens of this OutboundOverviewStatsResponse.


        :return: The opens of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._opens

    @opens.setter
    def opens(self, opens):
        """Sets the opens of this OutboundOverviewStatsResponse.


        :param opens: The opens of this OutboundOverviewStatsResponse.
        :type opens: int
        """

        self._opens = opens

    @property
    def smtpapi_errors(self):
        """Gets the smtpapi_errors of this OutboundOverviewStatsResponse.


        :return: The smtpapi_errors of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._smtpapi_errors

    @smtpapi_errors.setter
    def smtpapi_errors(self, smtpapi_errors):
        """Sets the smtpapi_errors of this OutboundOverviewStatsResponse.


        :param smtpapi_errors: The smtpapi_errors of this OutboundOverviewStatsResponse.
        :type smtpapi_errors: int
        """

        self._smtpapi_errors = smtpapi_errors

    @property
    def sent(self):
        """Gets the sent of this OutboundOverviewStatsResponse.


        :return: The sent of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this OutboundOverviewStatsResponse.


        :param sent: The sent of this OutboundOverviewStatsResponse.
        :type sent: int
        """

        self._sent = sent

    @property
    def spam_complaints(self):
        """Gets the spam_complaints of this OutboundOverviewStatsResponse.


        :return: The spam_complaints of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._spam_complaints

    @spam_complaints.setter
    def spam_complaints(self, spam_complaints):
        """Sets the spam_complaints of this OutboundOverviewStatsResponse.


        :param spam_complaints: The spam_complaints of this OutboundOverviewStatsResponse.
        :type spam_complaints: int
        """

        self._spam_complaints = spam_complaints

    @property
    def spam_complaints_rate(self):
        """Gets the spam_complaints_rate of this OutboundOverviewStatsResponse.


        :return: The spam_complaints_rate of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._spam_complaints_rate

    @spam_complaints_rate.setter
    def spam_complaints_rate(self, spam_complaints_rate):
        """Sets the spam_complaints_rate of this OutboundOverviewStatsResponse.


        :param spam_complaints_rate: The spam_complaints_rate of this OutboundOverviewStatsResponse.
        :type spam_complaints_rate: int
        """

        self._spam_complaints_rate = spam_complaints_rate

    @property
    def total_clicks(self):
        """Gets the total_clicks of this OutboundOverviewStatsResponse.


        :return: The total_clicks of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._total_clicks

    @total_clicks.setter
    def total_clicks(self, total_clicks):
        """Sets the total_clicks of this OutboundOverviewStatsResponse.


        :param total_clicks: The total_clicks of this OutboundOverviewStatsResponse.
        :type total_clicks: int
        """

        self._total_clicks = total_clicks

    @property
    def total_tracked_links_sent(self):
        """Gets the total_tracked_links_sent of this OutboundOverviewStatsResponse.


        :return: The total_tracked_links_sent of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._total_tracked_links_sent

    @total_tracked_links_sent.setter
    def total_tracked_links_sent(self, total_tracked_links_sent):
        """Sets the total_tracked_links_sent of this OutboundOverviewStatsResponse.


        :param total_tracked_links_sent: The total_tracked_links_sent of this OutboundOverviewStatsResponse.
        :type total_tracked_links_sent: int
        """

        self._total_tracked_links_sent = total_tracked_links_sent

    @property
    def tracked(self):
        """Gets the tracked of this OutboundOverviewStatsResponse.


        :return: The tracked of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._tracked

    @tracked.setter
    def tracked(self, tracked):
        """Sets the tracked of this OutboundOverviewStatsResponse.


        :param tracked: The tracked of this OutboundOverviewStatsResponse.
        :type tracked: int
        """

        self._tracked = tracked

    @property
    def unique_links_clicked(self):
        """Gets the unique_links_clicked of this OutboundOverviewStatsResponse.


        :return: The unique_links_clicked of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._unique_links_clicked

    @unique_links_clicked.setter
    def unique_links_clicked(self, unique_links_clicked):
        """Sets the unique_links_clicked of this OutboundOverviewStatsResponse.


        :param unique_links_clicked: The unique_links_clicked of this OutboundOverviewStatsResponse.
        :type unique_links_clicked: int
        """

        self._unique_links_clicked = unique_links_clicked

    @property
    def unique_opens(self):
        """Gets the unique_opens of this OutboundOverviewStatsResponse.


        :return: The unique_opens of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._unique_opens

    @unique_opens.setter
    def unique_opens(self, unique_opens):
        """Sets the unique_opens of this OutboundOverviewStatsResponse.


        :param unique_opens: The unique_opens of this OutboundOverviewStatsResponse.
        :type unique_opens: int
        """

        self._unique_opens = unique_opens

    @property
    def with_client_recorded(self):
        """Gets the with_client_recorded of this OutboundOverviewStatsResponse.


        :return: The with_client_recorded of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._with_client_recorded

    @with_client_recorded.setter
    def with_client_recorded(self, with_client_recorded):
        """Sets the with_client_recorded of this OutboundOverviewStatsResponse.


        :param with_client_recorded: The with_client_recorded of this OutboundOverviewStatsResponse.
        :type with_client_recorded: int
        """

        self._with_client_recorded = with_client_recorded

    @property
    def with_link_tracking(self):
        """Gets the with_link_tracking of this OutboundOverviewStatsResponse.


        :return: The with_link_tracking of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._with_link_tracking

    @with_link_tracking.setter
    def with_link_tracking(self, with_link_tracking):
        """Sets the with_link_tracking of this OutboundOverviewStatsResponse.


        :param with_link_tracking: The with_link_tracking of this OutboundOverviewStatsResponse.
        :type with_link_tracking: int
        """

        self._with_link_tracking = with_link_tracking

    @property
    def with_open_tracking(self):
        """Gets the with_open_tracking of this OutboundOverviewStatsResponse.


        :return: The with_open_tracking of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._with_open_tracking

    @with_open_tracking.setter
    def with_open_tracking(self, with_open_tracking):
        """Sets the with_open_tracking of this OutboundOverviewStatsResponse.


        :param with_open_tracking: The with_open_tracking of this OutboundOverviewStatsResponse.
        :type with_open_tracking: int
        """

        self._with_open_tracking = with_open_tracking

    @property
    def with_platform_recorded(self):
        """Gets the with_platform_recorded of this OutboundOverviewStatsResponse.


        :return: The with_platform_recorded of this OutboundOverviewStatsResponse.
        :rtype: int
        """
        return self._with_platform_recorded

    @with_platform_recorded.setter
    def with_platform_recorded(self, with_platform_recorded):
        """Sets the with_platform_recorded of this OutboundOverviewStatsResponse.


        :param with_platform_recorded: The with_platform_recorded of this OutboundOverviewStatsResponse.
        :type with_platform_recorded: int
        """

        self._with_platform_recorded = with_platform_recorded
