# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inbound_message_detail import InboundMessageDetail
from openapi_server import util


class InboundSearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inbound_messages: List[InboundMessageDetail]=None, total_count: int=None):
        """InboundSearchResponse - a model defined in OpenAPI

        :param inbound_messages: The inbound_messages of this InboundSearchResponse.
        :param total_count: The total_count of this InboundSearchResponse.
        """
        self.openapi_types = {
            'inbound_messages': List[InboundMessageDetail],
            'total_count': int
        }

        self.attribute_map = {
            'inbound_messages': 'InboundMessages',
            'total_count': 'TotalCount'
        }

        self._inbound_messages = inbound_messages
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InboundSearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InboundSearchResponse of this InboundSearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inbound_messages(self):
        """Gets the inbound_messages of this InboundSearchResponse.


        :return: The inbound_messages of this InboundSearchResponse.
        :rtype: List[InboundMessageDetail]
        """
        return self._inbound_messages

    @inbound_messages.setter
    def inbound_messages(self, inbound_messages):
        """Sets the inbound_messages of this InboundSearchResponse.


        :param inbound_messages: The inbound_messages of this InboundSearchResponse.
        :type inbound_messages: List[InboundMessageDetail]
        """

        self._inbound_messages = inbound_messages

    @property
    def total_count(self):
        """Gets the total_count of this InboundSearchResponse.


        :return: The total_count of this InboundSearchResponse.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this InboundSearchResponse.


        :param total_count: The total_count of this InboundSearchResponse.
        :type total_count: int
        """

        self._total_count = total_count
