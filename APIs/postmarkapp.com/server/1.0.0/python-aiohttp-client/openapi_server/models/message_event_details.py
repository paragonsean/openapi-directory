# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_event_details_details import MessageEventDetailsDetails
from openapi_server import util


class MessageEventDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: MessageEventDetailsDetails=None, received_at: datetime=None, recipient: str=None, type: str=None):
        """MessageEventDetails - a model defined in OpenAPI

        :param details: The details of this MessageEventDetails.
        :param received_at: The received_at of this MessageEventDetails.
        :param recipient: The recipient of this MessageEventDetails.
        :param type: The type of this MessageEventDetails.
        """
        self.openapi_types = {
            'details': MessageEventDetailsDetails,
            'received_at': datetime,
            'recipient': str,
            'type': str
        }

        self.attribute_map = {
            'details': 'Details',
            'received_at': 'ReceivedAt',
            'recipient': 'Recipient',
            'type': 'Type'
        }

        self._details = details
        self._received_at = received_at
        self._recipient = recipient
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageEventDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessageEventDetails of this MessageEventDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this MessageEventDetails.


        :return: The details of this MessageEventDetails.
        :rtype: MessageEventDetailsDetails
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this MessageEventDetails.


        :param details: The details of this MessageEventDetails.
        :type details: MessageEventDetailsDetails
        """

        self._details = details

    @property
    def received_at(self):
        """Gets the received_at of this MessageEventDetails.


        :return: The received_at of this MessageEventDetails.
        :rtype: datetime
        """
        return self._received_at

    @received_at.setter
    def received_at(self, received_at):
        """Sets the received_at of this MessageEventDetails.


        :param received_at: The received_at of this MessageEventDetails.
        :type received_at: datetime
        """

        self._received_at = received_at

    @property
    def recipient(self):
        """Gets the recipient of this MessageEventDetails.


        :return: The recipient of this MessageEventDetails.
        :rtype: str
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this MessageEventDetails.


        :param recipient: The recipient of this MessageEventDetails.
        :type recipient: str
        """

        self._recipient = recipient

    @property
    def type(self):
        """Gets the type of this MessageEventDetails.


        :return: The type of this MessageEventDetails.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MessageEventDetails.


        :param type: The type of this MessageEventDetails.
        :type type: str
        """

        self._type = type
