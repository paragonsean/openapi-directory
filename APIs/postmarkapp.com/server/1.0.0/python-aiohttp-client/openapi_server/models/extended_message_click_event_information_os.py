# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExtendedMessageClickEventInformationOS(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company: str=None, family: str=None, name: str=None):
        """ExtendedMessageClickEventInformationOS - a model defined in OpenAPI

        :param company: The company of this ExtendedMessageClickEventInformationOS.
        :param family: The family of this ExtendedMessageClickEventInformationOS.
        :param name: The name of this ExtendedMessageClickEventInformationOS.
        """
        self.openapi_types = {
            'company': str,
            'family': str,
            'name': str
        }

        self.attribute_map = {
            'company': 'Company',
            'family': 'Family',
            'name': 'Name'
        }

        self._company = company
        self._family = family
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtendedMessageClickEventInformationOS':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtendedMessageClickEventInformation_OS of this ExtendedMessageClickEventInformationOS.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company(self):
        """Gets the company of this ExtendedMessageClickEventInformationOS.


        :return: The company of this ExtendedMessageClickEventInformationOS.
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this ExtendedMessageClickEventInformationOS.


        :param company: The company of this ExtendedMessageClickEventInformationOS.
        :type company: str
        """

        self._company = company

    @property
    def family(self):
        """Gets the family of this ExtendedMessageClickEventInformationOS.


        :return: The family of this ExtendedMessageClickEventInformationOS.
        :rtype: str
        """
        return self._family

    @family.setter
    def family(self, family):
        """Sets the family of this ExtendedMessageClickEventInformationOS.


        :param family: The family of this ExtendedMessageClickEventInformationOS.
        :type family: str
        """

        self._family = family

    @property
    def name(self):
        """Gets the name of this ExtendedMessageClickEventInformationOS.


        :return: The name of this ExtendedMessageClickEventInformationOS.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ExtendedMessageClickEventInformationOS.


        :param name: The name of this ExtendedMessageClickEventInformationOS.
        :type name: str
        """

        self._name = name
