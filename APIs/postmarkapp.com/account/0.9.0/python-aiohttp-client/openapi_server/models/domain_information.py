# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DomainInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dkim_verified: bool=None, id: int=None, name: str=None, return_path_domain_verified: bool=None, spf_verified: bool=None, weak_dkim: bool=None):
        """DomainInformation - a model defined in OpenAPI

        :param dkim_verified: The dkim_verified of this DomainInformation.
        :param id: The id of this DomainInformation.
        :param name: The name of this DomainInformation.
        :param return_path_domain_verified: The return_path_domain_verified of this DomainInformation.
        :param spf_verified: The spf_verified of this DomainInformation.
        :param weak_dkim: The weak_dkim of this DomainInformation.
        """
        self.openapi_types = {
            'dkim_verified': bool,
            'id': int,
            'name': str,
            'return_path_domain_verified': bool,
            'spf_verified': bool,
            'weak_dkim': bool
        }

        self.attribute_map = {
            'dkim_verified': 'DKIMVerified',
            'id': 'ID',
            'name': 'Name',
            'return_path_domain_verified': 'ReturnPathDomainVerified',
            'spf_verified': 'SPFVerified',
            'weak_dkim': 'WeakDKIM'
        }

        self._dkim_verified = dkim_verified
        self._id = id
        self._name = name
        self._return_path_domain_verified = return_path_domain_verified
        self._spf_verified = spf_verified
        self._weak_dkim = weak_dkim

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainInformation of this DomainInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dkim_verified(self):
        """Gets the dkim_verified of this DomainInformation.


        :return: The dkim_verified of this DomainInformation.
        :rtype: bool
        """
        return self._dkim_verified

    @dkim_verified.setter
    def dkim_verified(self, dkim_verified):
        """Sets the dkim_verified of this DomainInformation.


        :param dkim_verified: The dkim_verified of this DomainInformation.
        :type dkim_verified: bool
        """

        self._dkim_verified = dkim_verified

    @property
    def id(self):
        """Gets the id of this DomainInformation.


        :return: The id of this DomainInformation.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DomainInformation.


        :param id: The id of this DomainInformation.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this DomainInformation.


        :return: The name of this DomainInformation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DomainInformation.


        :param name: The name of this DomainInformation.
        :type name: str
        """

        self._name = name

    @property
    def return_path_domain_verified(self):
        """Gets the return_path_domain_verified of this DomainInformation.


        :return: The return_path_domain_verified of this DomainInformation.
        :rtype: bool
        """
        return self._return_path_domain_verified

    @return_path_domain_verified.setter
    def return_path_domain_verified(self, return_path_domain_verified):
        """Sets the return_path_domain_verified of this DomainInformation.


        :param return_path_domain_verified: The return_path_domain_verified of this DomainInformation.
        :type return_path_domain_verified: bool
        """

        self._return_path_domain_verified = return_path_domain_verified

    @property
    def spf_verified(self):
        """Gets the spf_verified of this DomainInformation.


        :return: The spf_verified of this DomainInformation.
        :rtype: bool
        """
        return self._spf_verified

    @spf_verified.setter
    def spf_verified(self, spf_verified):
        """Sets the spf_verified of this DomainInformation.


        :param spf_verified: The spf_verified of this DomainInformation.
        :type spf_verified: bool
        """

        self._spf_verified = spf_verified

    @property
    def weak_dkim(self):
        """Gets the weak_dkim of this DomainInformation.


        :return: The weak_dkim of this DomainInformation.
        :rtype: bool
        """
        return self._weak_dkim

    @weak_dkim.setter
    def weak_dkim(self, weak_dkim):
        """Sets the weak_dkim of this DomainInformation.


        :param weak_dkim: The weak_dkim of this DomainInformation.
        :type weak_dkim: bool
        """

        self._weak_dkim = weak_dkim
