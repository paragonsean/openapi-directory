# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SenderSignatureInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confirmed: bool=None, domain: str=None, email_address: str=None, id: int=None, name: str=None, reply_to_email_address: str=None):
        """SenderSignatureInformation - a model defined in OpenAPI

        :param confirmed: The confirmed of this SenderSignatureInformation.
        :param domain: The domain of this SenderSignatureInformation.
        :param email_address: The email_address of this SenderSignatureInformation.
        :param id: The id of this SenderSignatureInformation.
        :param name: The name of this SenderSignatureInformation.
        :param reply_to_email_address: The reply_to_email_address of this SenderSignatureInformation.
        """
        self.openapi_types = {
            'confirmed': bool,
            'domain': str,
            'email_address': str,
            'id': int,
            'name': str,
            'reply_to_email_address': str
        }

        self.attribute_map = {
            'confirmed': 'Confirmed',
            'domain': 'Domain',
            'email_address': 'EmailAddress',
            'id': 'ID',
            'name': 'Name',
            'reply_to_email_address': 'ReplyToEmailAddress'
        }

        self._confirmed = confirmed
        self._domain = domain
        self._email_address = email_address
        self._id = id
        self._name = name
        self._reply_to_email_address = reply_to_email_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SenderSignatureInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SenderSignatureInformation of this SenderSignatureInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confirmed(self):
        """Gets the confirmed of this SenderSignatureInformation.


        :return: The confirmed of this SenderSignatureInformation.
        :rtype: bool
        """
        return self._confirmed

    @confirmed.setter
    def confirmed(self, confirmed):
        """Sets the confirmed of this SenderSignatureInformation.


        :param confirmed: The confirmed of this SenderSignatureInformation.
        :type confirmed: bool
        """

        self._confirmed = confirmed

    @property
    def domain(self):
        """Gets the domain of this SenderSignatureInformation.


        :return: The domain of this SenderSignatureInformation.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this SenderSignatureInformation.


        :param domain: The domain of this SenderSignatureInformation.
        :type domain: str
        """

        self._domain = domain

    @property
    def email_address(self):
        """Gets the email_address of this SenderSignatureInformation.


        :return: The email_address of this SenderSignatureInformation.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this SenderSignatureInformation.


        :param email_address: The email_address of this SenderSignatureInformation.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def id(self):
        """Gets the id of this SenderSignatureInformation.


        :return: The id of this SenderSignatureInformation.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SenderSignatureInformation.


        :param id: The id of this SenderSignatureInformation.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this SenderSignatureInformation.


        :return: The name of this SenderSignatureInformation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SenderSignatureInformation.


        :param name: The name of this SenderSignatureInformation.
        :type name: str
        """

        self._name = name

    @property
    def reply_to_email_address(self):
        """Gets the reply_to_email_address of this SenderSignatureInformation.


        :return: The reply_to_email_address of this SenderSignatureInformation.
        :rtype: str
        """
        return self._reply_to_email_address

    @reply_to_email_address.setter
    def reply_to_email_address(self, reply_to_email_address):
        """Sets the reply_to_email_address of this SenderSignatureInformation.


        :param reply_to_email_address: The reply_to_email_address of this SenderSignatureInformation.
        :type reply_to_email_address: str
        """

        self._reply_to_email_address = reply_to_email_address
