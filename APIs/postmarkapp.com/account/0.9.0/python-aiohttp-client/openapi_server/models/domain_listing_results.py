# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.domain_information import DomainInformation
from openapi_server import util


class DomainListingResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domains: List[DomainInformation]=None, total_count: int=None):
        """DomainListingResults - a model defined in OpenAPI

        :param domains: The domains of this DomainListingResults.
        :param total_count: The total_count of this DomainListingResults.
        """
        self.openapi_types = {
            'domains': List[DomainInformation],
            'total_count': int
        }

        self.attribute_map = {
            'domains': 'Domains',
            'total_count': 'TotalCount'
        }

        self._domains = domains
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainListingResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainListingResults of this DomainListingResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domains(self):
        """Gets the domains of this DomainListingResults.


        :return: The domains of this DomainListingResults.
        :rtype: List[DomainInformation]
        """
        return self._domains

    @domains.setter
    def domains(self, domains):
        """Sets the domains of this DomainListingResults.


        :param domains: The domains of this DomainListingResults.
        :type domains: List[DomainInformation]
        """

        self._domains = domains

    @property
    def total_count(self):
        """Gets the total_count of this DomainListingResults.


        :return: The total_count of this DomainListingResults.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this DomainListingResults.


        :param total_count: The total_count of this DomainListingResults.
        :type total_count: int
        """

        self._total_count = total_count
