/**
 * Postmark Account-level API
 * Postmark makes sending and receiving email incredibly easy. The Account-level API allows users to configure all Servers, Domains, and Sender Signatures associated with an Account. 
 *
 * The version of the OpenAPI document: 0.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDomainInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDomainInformation::OAIDomainInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDomainInformation::OAIDomainInformation() {
    this->initializeModel();
}

OAIDomainInformation::~OAIDomainInformation() {}

void OAIDomainInformation::initializeModel() {

    m_dkim_verified_isSet = false;
    m_dkim_verified_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_return_path_domain_verified_isSet = false;
    m_return_path_domain_verified_isValid = false;

    m_spf_verified_isSet = false;
    m_spf_verified_isValid = false;

    m_weak_dkim_isSet = false;
    m_weak_dkim_isValid = false;
}

void OAIDomainInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDomainInformation::fromJsonObject(QJsonObject json) {

    m_dkim_verified_isValid = ::OpenAPI::fromJsonValue(m_dkim_verified, json[QString("DKIMVerified")]);
    m_dkim_verified_isSet = !json[QString("DKIMVerified")].isNull() && m_dkim_verified_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("ID")]);
    m_id_isSet = !json[QString("ID")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_return_path_domain_verified_isValid = ::OpenAPI::fromJsonValue(m_return_path_domain_verified, json[QString("ReturnPathDomainVerified")]);
    m_return_path_domain_verified_isSet = !json[QString("ReturnPathDomainVerified")].isNull() && m_return_path_domain_verified_isValid;

    m_spf_verified_isValid = ::OpenAPI::fromJsonValue(m_spf_verified, json[QString("SPFVerified")]);
    m_spf_verified_isSet = !json[QString("SPFVerified")].isNull() && m_spf_verified_isValid;

    m_weak_dkim_isValid = ::OpenAPI::fromJsonValue(m_weak_dkim, json[QString("WeakDKIM")]);
    m_weak_dkim_isSet = !json[QString("WeakDKIM")].isNull() && m_weak_dkim_isValid;
}

QString OAIDomainInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDomainInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_dkim_verified_isSet) {
        obj.insert(QString("DKIMVerified"), ::OpenAPI::toJsonValue(m_dkim_verified));
    }
    if (m_id_isSet) {
        obj.insert(QString("ID"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_return_path_domain_verified_isSet) {
        obj.insert(QString("ReturnPathDomainVerified"), ::OpenAPI::toJsonValue(m_return_path_domain_verified));
    }
    if (m_spf_verified_isSet) {
        obj.insert(QString("SPFVerified"), ::OpenAPI::toJsonValue(m_spf_verified));
    }
    if (m_weak_dkim_isSet) {
        obj.insert(QString("WeakDKIM"), ::OpenAPI::toJsonValue(m_weak_dkim));
    }
    return obj;
}

bool OAIDomainInformation::isDkimVerified() const {
    return m_dkim_verified;
}
void OAIDomainInformation::setDkimVerified(const bool &dkim_verified) {
    m_dkim_verified = dkim_verified;
    m_dkim_verified_isSet = true;
}

bool OAIDomainInformation::is_dkim_verified_Set() const{
    return m_dkim_verified_isSet;
}

bool OAIDomainInformation::is_dkim_verified_Valid() const{
    return m_dkim_verified_isValid;
}

qint64 OAIDomainInformation::getId() const {
    return m_id;
}
void OAIDomainInformation::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDomainInformation::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDomainInformation::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIDomainInformation::getName() const {
    return m_name;
}
void OAIDomainInformation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDomainInformation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDomainInformation::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIDomainInformation::isReturnPathDomainVerified() const {
    return m_return_path_domain_verified;
}
void OAIDomainInformation::setReturnPathDomainVerified(const bool &return_path_domain_verified) {
    m_return_path_domain_verified = return_path_domain_verified;
    m_return_path_domain_verified_isSet = true;
}

bool OAIDomainInformation::is_return_path_domain_verified_Set() const{
    return m_return_path_domain_verified_isSet;
}

bool OAIDomainInformation::is_return_path_domain_verified_Valid() const{
    return m_return_path_domain_verified_isValid;
}

bool OAIDomainInformation::isSpfVerified() const {
    return m_spf_verified;
}
void OAIDomainInformation::setSpfVerified(const bool &spf_verified) {
    m_spf_verified = spf_verified;
    m_spf_verified_isSet = true;
}

bool OAIDomainInformation::is_spf_verified_Set() const{
    return m_spf_verified_isSet;
}

bool OAIDomainInformation::is_spf_verified_Valid() const{
    return m_spf_verified_isValid;
}

bool OAIDomainInformation::isWeakDkim() const {
    return m_weak_dkim;
}
void OAIDomainInformation::setWeakDkim(const bool &weak_dkim) {
    m_weak_dkim = weak_dkim;
    m_weak_dkim_isSet = true;
}

bool OAIDomainInformation::is_weak_dkim_Set() const{
    return m_weak_dkim_isSet;
}

bool OAIDomainInformation::is_weak_dkim_Valid() const{
    return m_weak_dkim_isValid;
}

bool OAIDomainInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dkim_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_path_domain_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spf_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weak_dkim_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDomainInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
