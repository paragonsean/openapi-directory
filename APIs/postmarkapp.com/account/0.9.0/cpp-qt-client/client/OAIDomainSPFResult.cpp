/**
 * Postmark Account-level API
 * Postmark makes sending and receiving email incredibly easy. The Account-level API allows users to configure all Servers, Domains, and Sender Signatures associated with an Account. 
 *
 * The version of the OpenAPI document: 0.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDomainSPFResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDomainSPFResult::OAIDomainSPFResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDomainSPFResult::OAIDomainSPFResult() {
    this->initializeModel();
}

OAIDomainSPFResult::~OAIDomainSPFResult() {}

void OAIDomainSPFResult::initializeModel() {

    m_spf_host_isSet = false;
    m_spf_host_isValid = false;

    m_spf_text_value_isSet = false;
    m_spf_text_value_isValid = false;

    m_spf_verified_isSet = false;
    m_spf_verified_isValid = false;
}

void OAIDomainSPFResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDomainSPFResult::fromJsonObject(QJsonObject json) {

    m_spf_host_isValid = ::OpenAPI::fromJsonValue(m_spf_host, json[QString("SPFHost")]);
    m_spf_host_isSet = !json[QString("SPFHost")].isNull() && m_spf_host_isValid;

    m_spf_text_value_isValid = ::OpenAPI::fromJsonValue(m_spf_text_value, json[QString("SPFTextValue")]);
    m_spf_text_value_isSet = !json[QString("SPFTextValue")].isNull() && m_spf_text_value_isValid;

    m_spf_verified_isValid = ::OpenAPI::fromJsonValue(m_spf_verified, json[QString("SPFVerified")]);
    m_spf_verified_isSet = !json[QString("SPFVerified")].isNull() && m_spf_verified_isValid;
}

QString OAIDomainSPFResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDomainSPFResult::asJsonObject() const {
    QJsonObject obj;
    if (m_spf_host_isSet) {
        obj.insert(QString("SPFHost"), ::OpenAPI::toJsonValue(m_spf_host));
    }
    if (m_spf_text_value_isSet) {
        obj.insert(QString("SPFTextValue"), ::OpenAPI::toJsonValue(m_spf_text_value));
    }
    if (m_spf_verified_isSet) {
        obj.insert(QString("SPFVerified"), ::OpenAPI::toJsonValue(m_spf_verified));
    }
    return obj;
}

QString OAIDomainSPFResult::getSpfHost() const {
    return m_spf_host;
}
void OAIDomainSPFResult::setSpfHost(const QString &spf_host) {
    m_spf_host = spf_host;
    m_spf_host_isSet = true;
}

bool OAIDomainSPFResult::is_spf_host_Set() const{
    return m_spf_host_isSet;
}

bool OAIDomainSPFResult::is_spf_host_Valid() const{
    return m_spf_host_isValid;
}

QString OAIDomainSPFResult::getSpfTextValue() const {
    return m_spf_text_value;
}
void OAIDomainSPFResult::setSpfTextValue(const QString &spf_text_value) {
    m_spf_text_value = spf_text_value;
    m_spf_text_value_isSet = true;
}

bool OAIDomainSPFResult::is_spf_text_value_Set() const{
    return m_spf_text_value_isSet;
}

bool OAIDomainSPFResult::is_spf_text_value_Valid() const{
    return m_spf_text_value_isValid;
}

bool OAIDomainSPFResult::isSpfVerified() const {
    return m_spf_verified;
}
void OAIDomainSPFResult::setSpfVerified(const bool &spf_verified) {
    m_spf_verified = spf_verified;
    m_spf_verified_isSet = true;
}

bool OAIDomainSPFResult::is_spf_verified_Set() const{
    return m_spf_verified_isSet;
}

bool OAIDomainSPFResult::is_spf_verified_Valid() const{
    return m_spf_verified_isValid;
}

bool OAIDomainSPFResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_spf_host_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spf_text_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spf_verified_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDomainSPFResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
