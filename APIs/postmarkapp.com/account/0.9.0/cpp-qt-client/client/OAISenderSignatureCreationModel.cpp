/**
 * Postmark Account-level API
 * Postmark makes sending and receiving email incredibly easy. The Account-level API allows users to configure all Servers, Domains, and Sender Signatures associated with an Account. 
 *
 * The version of the OpenAPI document: 0.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISenderSignatureCreationModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISenderSignatureCreationModel::OAISenderSignatureCreationModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISenderSignatureCreationModel::OAISenderSignatureCreationModel() {
    this->initializeModel();
}

OAISenderSignatureCreationModel::~OAISenderSignatureCreationModel() {}

void OAISenderSignatureCreationModel::initializeModel() {

    m_from_email_isSet = false;
    m_from_email_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_reply_to_email_isSet = false;
    m_reply_to_email_isValid = false;

    m_return_path_domain_isSet = false;
    m_return_path_domain_isValid = false;
}

void OAISenderSignatureCreationModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISenderSignatureCreationModel::fromJsonObject(QJsonObject json) {

    m_from_email_isValid = ::OpenAPI::fromJsonValue(m_from_email, json[QString("FromEmail")]);
    m_from_email_isSet = !json[QString("FromEmail")].isNull() && m_from_email_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_reply_to_email_isValid = ::OpenAPI::fromJsonValue(m_reply_to_email, json[QString("ReplyToEmail")]);
    m_reply_to_email_isSet = !json[QString("ReplyToEmail")].isNull() && m_reply_to_email_isValid;

    m_return_path_domain_isValid = ::OpenAPI::fromJsonValue(m_return_path_domain, json[QString("ReturnPathDomain")]);
    m_return_path_domain_isSet = !json[QString("ReturnPathDomain")].isNull() && m_return_path_domain_isValid;
}

QString OAISenderSignatureCreationModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISenderSignatureCreationModel::asJsonObject() const {
    QJsonObject obj;
    if (m_from_email_isSet) {
        obj.insert(QString("FromEmail"), ::OpenAPI::toJsonValue(m_from_email));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_reply_to_email_isSet) {
        obj.insert(QString("ReplyToEmail"), ::OpenAPI::toJsonValue(m_reply_to_email));
    }
    if (m_return_path_domain_isSet) {
        obj.insert(QString("ReturnPathDomain"), ::OpenAPI::toJsonValue(m_return_path_domain));
    }
    return obj;
}

QString OAISenderSignatureCreationModel::getFromEmail() const {
    return m_from_email;
}
void OAISenderSignatureCreationModel::setFromEmail(const QString &from_email) {
    m_from_email = from_email;
    m_from_email_isSet = true;
}

bool OAISenderSignatureCreationModel::is_from_email_Set() const{
    return m_from_email_isSet;
}

bool OAISenderSignatureCreationModel::is_from_email_Valid() const{
    return m_from_email_isValid;
}

QString OAISenderSignatureCreationModel::getName() const {
    return m_name;
}
void OAISenderSignatureCreationModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISenderSignatureCreationModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAISenderSignatureCreationModel::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISenderSignatureCreationModel::getReplyToEmail() const {
    return m_reply_to_email;
}
void OAISenderSignatureCreationModel::setReplyToEmail(const QString &reply_to_email) {
    m_reply_to_email = reply_to_email;
    m_reply_to_email_isSet = true;
}

bool OAISenderSignatureCreationModel::is_reply_to_email_Set() const{
    return m_reply_to_email_isSet;
}

bool OAISenderSignatureCreationModel::is_reply_to_email_Valid() const{
    return m_reply_to_email_isValid;
}

QString OAISenderSignatureCreationModel::getReturnPathDomain() const {
    return m_return_path_domain;
}
void OAISenderSignatureCreationModel::setReturnPathDomain(const QString &return_path_domain) {
    m_return_path_domain = return_path_domain;
    m_return_path_domain_isSet = true;
}

bool OAISenderSignatureCreationModel::is_return_path_domain_Set() const{
    return m_return_path_domain_isSet;
}

bool OAISenderSignatureCreationModel::is_return_path_domain_Valid() const{
    return m_return_path_domain_isValid;
}

bool OAISenderSignatureCreationModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_to_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_path_domain_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISenderSignatureCreationModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
