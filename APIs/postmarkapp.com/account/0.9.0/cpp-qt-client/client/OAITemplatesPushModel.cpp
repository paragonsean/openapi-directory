/**
 * Postmark Account-level API
 * Postmark makes sending and receiving email incredibly easy. The Account-level API allows users to configure all Servers, Domains, and Sender Signatures associated with an Account. 
 *
 * The version of the OpenAPI document: 0.9.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITemplatesPushModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITemplatesPushModel::OAITemplatesPushModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITemplatesPushModel::OAITemplatesPushModel() {
    this->initializeModel();
}

OAITemplatesPushModel::~OAITemplatesPushModel() {}

void OAITemplatesPushModel::initializeModel() {

    m_destination_server_id_isSet = false;
    m_destination_server_id_isValid = false;

    m_perform_changes_isSet = false;
    m_perform_changes_isValid = false;

    m_source_server_id_isSet = false;
    m_source_server_id_isValid = false;
}

void OAITemplatesPushModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITemplatesPushModel::fromJsonObject(QJsonObject json) {

    m_destination_server_id_isValid = ::OpenAPI::fromJsonValue(m_destination_server_id, json[QString("DestinationServerId")]);
    m_destination_server_id_isSet = !json[QString("DestinationServerId")].isNull() && m_destination_server_id_isValid;

    m_perform_changes_isValid = ::OpenAPI::fromJsonValue(m_perform_changes, json[QString("PerformChanges")]);
    m_perform_changes_isSet = !json[QString("PerformChanges")].isNull() && m_perform_changes_isValid;

    m_source_server_id_isValid = ::OpenAPI::fromJsonValue(m_source_server_id, json[QString("SourceServerId")]);
    m_source_server_id_isSet = !json[QString("SourceServerId")].isNull() && m_source_server_id_isValid;
}

QString OAITemplatesPushModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITemplatesPushModel::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_server_id_isSet) {
        obj.insert(QString("DestinationServerId"), ::OpenAPI::toJsonValue(m_destination_server_id));
    }
    if (m_perform_changes_isSet) {
        obj.insert(QString("PerformChanges"), ::OpenAPI::toJsonValue(m_perform_changes));
    }
    if (m_source_server_id_isSet) {
        obj.insert(QString("SourceServerId"), ::OpenAPI::toJsonValue(m_source_server_id));
    }
    return obj;
}

qint32 OAITemplatesPushModel::getDestinationServerId() const {
    return m_destination_server_id;
}
void OAITemplatesPushModel::setDestinationServerId(const qint32 &destination_server_id) {
    m_destination_server_id = destination_server_id;
    m_destination_server_id_isSet = true;
}

bool OAITemplatesPushModel::is_destination_server_id_Set() const{
    return m_destination_server_id_isSet;
}

bool OAITemplatesPushModel::is_destination_server_id_Valid() const{
    return m_destination_server_id_isValid;
}

bool OAITemplatesPushModel::isPerformChanges() const {
    return m_perform_changes;
}
void OAITemplatesPushModel::setPerformChanges(const bool &perform_changes) {
    m_perform_changes = perform_changes;
    m_perform_changes_isSet = true;
}

bool OAITemplatesPushModel::is_perform_changes_Set() const{
    return m_perform_changes_isSet;
}

bool OAITemplatesPushModel::is_perform_changes_Valid() const{
    return m_perform_changes_isValid;
}

qint32 OAITemplatesPushModel::getSourceServerId() const {
    return m_source_server_id;
}
void OAITemplatesPushModel::setSourceServerId(const qint32 &source_server_id) {
    m_source_server_id = source_server_id;
    m_source_server_id_isSet = true;
}

bool OAITemplatesPushModel::is_source_server_id_Set() const{
    return m_source_server_id_isSet;
}

bool OAITemplatesPushModel::is_source_server_id_Valid() const{
    return m_source_server_id_isValid;
}

bool OAITemplatesPushModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_server_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_perform_changes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_server_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITemplatesPushModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
