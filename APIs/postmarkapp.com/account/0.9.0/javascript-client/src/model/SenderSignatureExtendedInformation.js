/**
 * Postmark Account-level API
 * Postmark makes sending and receiving email incredibly easy. The Account-level API allows users to configure all Servers, Domains, and Sender Signatures associated with an Account. 
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SenderSignatureExtendedInformation model module.
 * @module model/SenderSignatureExtendedInformation
 * @version 0.9.0
 */
class SenderSignatureExtendedInformation {
    /**
     * Constructs a new <code>SenderSignatureExtendedInformation</code>.
     * 
     * @alias module:model/SenderSignatureExtendedInformation
     */
    constructor() { 
        
        SenderSignatureExtendedInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SenderSignatureExtendedInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SenderSignatureExtendedInformation} obj Optional instance to populate.
     * @return {module:model/SenderSignatureExtendedInformation} The populated <code>SenderSignatureExtendedInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SenderSignatureExtendedInformation();

            if (data.hasOwnProperty('Confirmed')) {
                obj['Confirmed'] = ApiClient.convertToType(data['Confirmed'], 'Boolean');
            }
            if (data.hasOwnProperty('DKIMHost')) {
                obj['DKIMHost'] = ApiClient.convertToType(data['DKIMHost'], 'String');
            }
            if (data.hasOwnProperty('DKIMPendingHost')) {
                obj['DKIMPendingHost'] = ApiClient.convertToType(data['DKIMPendingHost'], 'String');
            }
            if (data.hasOwnProperty('DKIMPendingTextValue')) {
                obj['DKIMPendingTextValue'] = ApiClient.convertToType(data['DKIMPendingTextValue'], 'String');
            }
            if (data.hasOwnProperty('DKIMRevokedHost')) {
                obj['DKIMRevokedHost'] = ApiClient.convertToType(data['DKIMRevokedHost'], 'String');
            }
            if (data.hasOwnProperty('DKIMRevokedTextValue')) {
                obj['DKIMRevokedTextValue'] = ApiClient.convertToType(data['DKIMRevokedTextValue'], 'String');
            }
            if (data.hasOwnProperty('DKIMTestValue')) {
                obj['DKIMTestValue'] = ApiClient.convertToType(data['DKIMTestValue'], 'String');
            }
            if (data.hasOwnProperty('DKIMUpdateStatus')) {
                obj['DKIMUpdateStatus'] = ApiClient.convertToType(data['DKIMUpdateStatus'], 'String');
            }
            if (data.hasOwnProperty('DKIMVerified')) {
                obj['DKIMVerified'] = ApiClient.convertToType(data['DKIMVerified'], 'Boolean');
            }
            if (data.hasOwnProperty('Domain')) {
                obj['Domain'] = ApiClient.convertToType(data['Domain'], 'String');
            }
            if (data.hasOwnProperty('EmailAddress')) {
                obj['EmailAddress'] = ApiClient.convertToType(data['EmailAddress'], 'String');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ReplyToEmailAddress')) {
                obj['ReplyToEmailAddress'] = ApiClient.convertToType(data['ReplyToEmailAddress'], 'String');
            }
            if (data.hasOwnProperty('ReturnPathDomain')) {
                obj['ReturnPathDomain'] = ApiClient.convertToType(data['ReturnPathDomain'], 'String');
            }
            if (data.hasOwnProperty('ReturnPathDomainCNAMEValue')) {
                obj['ReturnPathDomainCNAMEValue'] = ApiClient.convertToType(data['ReturnPathDomainCNAMEValue'], 'String');
            }
            if (data.hasOwnProperty('ReturnPathDomainVerified')) {
                obj['ReturnPathDomainVerified'] = ApiClient.convertToType(data['ReturnPathDomainVerified'], 'Boolean');
            }
            if (data.hasOwnProperty('SPFHost')) {
                obj['SPFHost'] = ApiClient.convertToType(data['SPFHost'], 'String');
            }
            if (data.hasOwnProperty('SPFTextValue')) {
                obj['SPFTextValue'] = ApiClient.convertToType(data['SPFTextValue'], 'String');
            }
            if (data.hasOwnProperty('SPFVerified')) {
                obj['SPFVerified'] = ApiClient.convertToType(data['SPFVerified'], 'Boolean');
            }
            if (data.hasOwnProperty('SafeToRemoveRevokedKeyFromDNS')) {
                obj['SafeToRemoveRevokedKeyFromDNS'] = ApiClient.convertToType(data['SafeToRemoveRevokedKeyFromDNS'], 'Boolean');
            }
            if (data.hasOwnProperty('WeakDKIM')) {
                obj['WeakDKIM'] = ApiClient.convertToType(data['WeakDKIM'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SenderSignatureExtendedInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SenderSignatureExtendedInformation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['DKIMHost'] && !(typeof data['DKIMHost'] === 'string' || data['DKIMHost'] instanceof String)) {
            throw new Error("Expected the field `DKIMHost` to be a primitive type in the JSON string but got " + data['DKIMHost']);
        }
        // ensure the json data is a string
        if (data['DKIMPendingHost'] && !(typeof data['DKIMPendingHost'] === 'string' || data['DKIMPendingHost'] instanceof String)) {
            throw new Error("Expected the field `DKIMPendingHost` to be a primitive type in the JSON string but got " + data['DKIMPendingHost']);
        }
        // ensure the json data is a string
        if (data['DKIMPendingTextValue'] && !(typeof data['DKIMPendingTextValue'] === 'string' || data['DKIMPendingTextValue'] instanceof String)) {
            throw new Error("Expected the field `DKIMPendingTextValue` to be a primitive type in the JSON string but got " + data['DKIMPendingTextValue']);
        }
        // ensure the json data is a string
        if (data['DKIMRevokedHost'] && !(typeof data['DKIMRevokedHost'] === 'string' || data['DKIMRevokedHost'] instanceof String)) {
            throw new Error("Expected the field `DKIMRevokedHost` to be a primitive type in the JSON string but got " + data['DKIMRevokedHost']);
        }
        // ensure the json data is a string
        if (data['DKIMRevokedTextValue'] && !(typeof data['DKIMRevokedTextValue'] === 'string' || data['DKIMRevokedTextValue'] instanceof String)) {
            throw new Error("Expected the field `DKIMRevokedTextValue` to be a primitive type in the JSON string but got " + data['DKIMRevokedTextValue']);
        }
        // ensure the json data is a string
        if (data['DKIMTestValue'] && !(typeof data['DKIMTestValue'] === 'string' || data['DKIMTestValue'] instanceof String)) {
            throw new Error("Expected the field `DKIMTestValue` to be a primitive type in the JSON string but got " + data['DKIMTestValue']);
        }
        // ensure the json data is a string
        if (data['DKIMUpdateStatus'] && !(typeof data['DKIMUpdateStatus'] === 'string' || data['DKIMUpdateStatus'] instanceof String)) {
            throw new Error("Expected the field `DKIMUpdateStatus` to be a primitive type in the JSON string but got " + data['DKIMUpdateStatus']);
        }
        // ensure the json data is a string
        if (data['Domain'] && !(typeof data['Domain'] === 'string' || data['Domain'] instanceof String)) {
            throw new Error("Expected the field `Domain` to be a primitive type in the JSON string but got " + data['Domain']);
        }
        // ensure the json data is a string
        if (data['EmailAddress'] && !(typeof data['EmailAddress'] === 'string' || data['EmailAddress'] instanceof String)) {
            throw new Error("Expected the field `EmailAddress` to be a primitive type in the JSON string but got " + data['EmailAddress']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['ReplyToEmailAddress'] && !(typeof data['ReplyToEmailAddress'] === 'string' || data['ReplyToEmailAddress'] instanceof String)) {
            throw new Error("Expected the field `ReplyToEmailAddress` to be a primitive type in the JSON string but got " + data['ReplyToEmailAddress']);
        }
        // ensure the json data is a string
        if (data['ReturnPathDomain'] && !(typeof data['ReturnPathDomain'] === 'string' || data['ReturnPathDomain'] instanceof String)) {
            throw new Error("Expected the field `ReturnPathDomain` to be a primitive type in the JSON string but got " + data['ReturnPathDomain']);
        }
        // ensure the json data is a string
        if (data['ReturnPathDomainCNAMEValue'] && !(typeof data['ReturnPathDomainCNAMEValue'] === 'string' || data['ReturnPathDomainCNAMEValue'] instanceof String)) {
            throw new Error("Expected the field `ReturnPathDomainCNAMEValue` to be a primitive type in the JSON string but got " + data['ReturnPathDomainCNAMEValue']);
        }
        // ensure the json data is a string
        if (data['SPFHost'] && !(typeof data['SPFHost'] === 'string' || data['SPFHost'] instanceof String)) {
            throw new Error("Expected the field `SPFHost` to be a primitive type in the JSON string but got " + data['SPFHost']);
        }
        // ensure the json data is a string
        if (data['SPFTextValue'] && !(typeof data['SPFTextValue'] === 'string' || data['SPFTextValue'] instanceof String)) {
            throw new Error("Expected the field `SPFTextValue` to be a primitive type in the JSON string but got " + data['SPFTextValue']);
        }

        return true;
    }


}



/**
 * @member {Boolean} Confirmed
 */
SenderSignatureExtendedInformation.prototype['Confirmed'] = undefined;

/**
 * @member {String} DKIMHost
 */
SenderSignatureExtendedInformation.prototype['DKIMHost'] = undefined;

/**
 * @member {String} DKIMPendingHost
 */
SenderSignatureExtendedInformation.prototype['DKIMPendingHost'] = undefined;

/**
 * @member {String} DKIMPendingTextValue
 */
SenderSignatureExtendedInformation.prototype['DKIMPendingTextValue'] = undefined;

/**
 * @member {String} DKIMRevokedHost
 */
SenderSignatureExtendedInformation.prototype['DKIMRevokedHost'] = undefined;

/**
 * @member {String} DKIMRevokedTextValue
 */
SenderSignatureExtendedInformation.prototype['DKIMRevokedTextValue'] = undefined;

/**
 * @member {String} DKIMTestValue
 */
SenderSignatureExtendedInformation.prototype['DKIMTestValue'] = undefined;

/**
 * @member {String} DKIMUpdateStatus
 */
SenderSignatureExtendedInformation.prototype['DKIMUpdateStatus'] = undefined;

/**
 * @member {Boolean} DKIMVerified
 */
SenderSignatureExtendedInformation.prototype['DKIMVerified'] = undefined;

/**
 * @member {String} Domain
 */
SenderSignatureExtendedInformation.prototype['Domain'] = undefined;

/**
 * @member {String} EmailAddress
 */
SenderSignatureExtendedInformation.prototype['EmailAddress'] = undefined;

/**
 * @member {Number} ID
 */
SenderSignatureExtendedInformation.prototype['ID'] = undefined;

/**
 * @member {String} Name
 */
SenderSignatureExtendedInformation.prototype['Name'] = undefined;

/**
 * @member {String} ReplyToEmailAddress
 */
SenderSignatureExtendedInformation.prototype['ReplyToEmailAddress'] = undefined;

/**
 * @member {String} ReturnPathDomain
 */
SenderSignatureExtendedInformation.prototype['ReturnPathDomain'] = undefined;

/**
 * @member {String} ReturnPathDomainCNAMEValue
 */
SenderSignatureExtendedInformation.prototype['ReturnPathDomainCNAMEValue'] = undefined;

/**
 * @member {Boolean} ReturnPathDomainVerified
 */
SenderSignatureExtendedInformation.prototype['ReturnPathDomainVerified'] = undefined;

/**
 * @member {String} SPFHost
 */
SenderSignatureExtendedInformation.prototype['SPFHost'] = undefined;

/**
 * @member {String} SPFTextValue
 */
SenderSignatureExtendedInformation.prototype['SPFTextValue'] = undefined;

/**
 * @member {Boolean} SPFVerified
 */
SenderSignatureExtendedInformation.prototype['SPFVerified'] = undefined;

/**
 * @member {Boolean} SafeToRemoveRevokedKeyFromDNS
 */
SenderSignatureExtendedInformation.prototype['SafeToRemoveRevokedKeyFromDNS'] = undefined;

/**
 * @member {Boolean} WeakDKIM
 */
SenderSignatureExtendedInformation.prototype['WeakDKIM'] = undefined;






export default SenderSignatureExtendedInformation;

