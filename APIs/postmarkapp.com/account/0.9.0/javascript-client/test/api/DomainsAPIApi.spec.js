/**
 * Postmark Account-level API
 * Postmark makes sending and receiving email incredibly easy. The Account-level API allows users to configure all Servers, Domains, and Sender Signatures associated with an Account. 
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PostmarkAccountLevelApi);
  }
}(this, function(expect, PostmarkAccountLevelApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PostmarkAccountLevelApi.DomainsAPIApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DomainsAPIApi', function() {
    describe('createDomain', function() {
      it('should call createDomain successfully', function(done) {
        //uncomment below and update the code to test createDomain
        //instance.createDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDomain', function() {
      it('should call deleteDomain successfully', function(done) {
        //uncomment below and update the code to test deleteDomain
        //instance.deleteDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editDomain', function() {
      it('should call editDomain successfully', function(done) {
        //uncomment below and update the code to test editDomain
        //instance.editDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDomain', function() {
      it('should call getDomain successfully', function(done) {
        //uncomment below and update the code to test getDomain
        //instance.getDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDomains', function() {
      it('should call listDomains successfully', function(done) {
        //uncomment below and update the code to test listDomains
        //instance.listDomains(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestDkimVerificationForDomain', function() {
      it('should call requestDkimVerificationForDomain successfully', function(done) {
        //uncomment below and update the code to test requestDkimVerificationForDomain
        //instance.requestDkimVerificationForDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestReturnPathVerificationForDomain', function() {
      it('should call requestReturnPathVerificationForDomain successfully', function(done) {
        //uncomment below and update the code to test requestReturnPathVerificationForDomain
        //instance.requestReturnPathVerificationForDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestSPFVerificationForDomain', function() {
      it('should call requestSPFVerificationForDomain successfully', function(done) {
        //uncomment below and update the code to test requestSPFVerificationForDomain
        //instance.requestSPFVerificationForDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rotateDKIMKeyForDomain', function() {
      it('should call rotateDKIMKeyForDomain successfully', function(done) {
        //uncomment below and update the code to test rotateDKIMKeyForDomain
        //instance.rotateDKIMKeyForDomain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
