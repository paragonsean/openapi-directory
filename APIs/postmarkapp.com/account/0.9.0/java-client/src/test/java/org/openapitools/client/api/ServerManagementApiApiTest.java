/*
 * Postmark Account-level API
 * Postmark makes sending and receiving email incredibly easy. The Account-level API allows users to configure all Servers, Domains, and Sender Signatures associated with an Account. 
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateServerPayload;
import org.openapitools.client.model.EditServerPayload;
import org.openapitools.client.model.ExtendedServerInfo;
import org.openapitools.client.model.ServerListingResponse;
import org.openapitools.client.model.StandardPostmarkResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerManagementApiApi
 */
@Disabled
public class ServerManagementApiApiTest {

    private final ServerManagementApiApi api = new ServerManagementApiApi();

    /**
     * Create a Server
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createServerTest() throws ApiException {
        String xPostmarkAccountToken = null;
        CreateServerPayload body = null;
        ExtendedServerInfo response = api.createServer(xPostmarkAccountToken, body);
        // TODO: test validations
    }

    /**
     * Delete a Server
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteServerTest() throws ApiException {
        String xPostmarkAccountToken = null;
        Integer serverid = null;
        api.deleteServer(xPostmarkAccountToken, serverid);
        // TODO: test validations
    }

    /**
     * Edit a Server
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editServerInformationTest() throws ApiException {
        String xPostmarkAccountToken = null;
        Integer serverid = null;
        EditServerPayload body = null;
        ExtendedServerInfo response = api.editServerInformation(xPostmarkAccountToken, serverid, body);
        // TODO: test validations
    }

    /**
     * Get a Server
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getServerInformationTest() throws ApiException {
        String xPostmarkAccountToken = null;
        Integer serverid = null;
        ExtendedServerInfo response = api.getServerInformation(xPostmarkAccountToken, serverid);
        // TODO: test validations
    }

    /**
     * List servers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServersTest() throws ApiException {
        String xPostmarkAccountToken = null;
        Integer count = null;
        Integer offset = null;
        String name = null;
        ServerListingResponse response = api.listServers(xPostmarkAccountToken, count, offset, name);
        // TODO: test validations
    }

}
