/*
 * Postmark Account-level API
 * Postmark makes sending and receiving email incredibly easy. The Account-level API allows users to configure all Servers, Domains, and Sender Signatures associated with an Account. 
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DomainExtendedInformation
 */
public class DomainExtendedInformationTest {
    private final DomainExtendedInformation model = new DomainExtendedInformation();

    /**
     * Model tests for DomainExtendedInformation
     */
    @Test
    public void testDomainExtendedInformation() {
        // TODO: test DomainExtendedInformation
    }

    /**
     * Test the property 'dkIMHost'
     */
    @Test
    public void dkIMHostTest() {
        // TODO: test dkIMHost
    }

    /**
     * Test the property 'dkIMPendingHost'
     */
    @Test
    public void dkIMPendingHostTest() {
        // TODO: test dkIMPendingHost
    }

    /**
     * Test the property 'dkIMPendingTextValue'
     */
    @Test
    public void dkIMPendingTextValueTest() {
        // TODO: test dkIMPendingTextValue
    }

    /**
     * Test the property 'dkIMRevokedHost'
     */
    @Test
    public void dkIMRevokedHostTest() {
        // TODO: test dkIMRevokedHost
    }

    /**
     * Test the property 'dkIMRevokedTextValue'
     */
    @Test
    public void dkIMRevokedTextValueTest() {
        // TODO: test dkIMRevokedTextValue
    }

    /**
     * Test the property 'dkIMTestValue'
     */
    @Test
    public void dkIMTestValueTest() {
        // TODO: test dkIMTestValue
    }

    /**
     * Test the property 'dkIMUpdateStatus'
     */
    @Test
    public void dkIMUpdateStatusTest() {
        // TODO: test dkIMUpdateStatus
    }

    /**
     * Test the property 'dkIMVerified'
     */
    @Test
    public void dkIMVerifiedTest() {
        // TODO: test dkIMVerified
    }

    /**
     * Test the property 'ID'
     */
    @Test
    public void IDTest() {
        // TODO: test ID
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'returnPathDomain'
     */
    @Test
    public void returnPathDomainTest() {
        // TODO: test returnPathDomain
    }

    /**
     * Test the property 'returnPathDomainCNAMEValue'
     */
    @Test
    public void returnPathDomainCNAMEValueTest() {
        // TODO: test returnPathDomainCNAMEValue
    }

    /**
     * Test the property 'returnPathDomainVerified'
     */
    @Test
    public void returnPathDomainVerifiedTest() {
        // TODO: test returnPathDomainVerified
    }

    /**
     * Test the property 'spFHost'
     */
    @Test
    public void spFHostTest() {
        // TODO: test spFHost
    }

    /**
     * Test the property 'spFTextValue'
     */
    @Test
    public void spFTextValueTest() {
        // TODO: test spFTextValue
    }

    /**
     * Test the property 'spFVerified'
     */
    @Test
    public void spFVerifiedTest() {
        // TODO: test spFVerified
    }

    /**
     * Test the property 'safeToRemoveRevokedKeyFromDNS'
     */
    @Test
    public void safeToRemoveRevokedKeyFromDNSTest() {
        // TODO: test safeToRemoveRevokedKeyFromDNS
    }

    /**
     * Test the property 'weakDKIM'
     */
    @Test
    public void weakDKIMTest() {
        // TODO: test weakDKIM
    }

}
