/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActorDefinitionResourceRequirements.h
 *
 * actor definition specific resource requirements. if default is set, these are the requirements that should be set for ALL jobs run for this actor definition. it is overriden by the job type specific configurations. if not set, the platform will use defaults. these values will be overriden by configuration at the connection level.
 */

#ifndef OAIActorDefinitionResourceRequirements_H
#define OAIActorDefinitionResourceRequirements_H

#include <QJsonObject>

#include "OAIJobTypeResourceLimit.h"
#include "OAIResourceRequirements.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceRequirements;
class OAIJobTypeResourceLimit;

class OAIActorDefinitionResourceRequirements : public OAIObject {
public:
    OAIActorDefinitionResourceRequirements();
    OAIActorDefinitionResourceRequirements(QString json);
    ~OAIActorDefinitionResourceRequirements() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResourceRequirements getRDefault() const;
    void setRDefault(const OAIResourceRequirements &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    QList<OAIJobTypeResourceLimit> getJobSpecific() const;
    void setJobSpecific(const QList<OAIJobTypeResourceLimit> &job_specific);
    bool is_job_specific_Set() const;
    bool is_job_specific_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResourceRequirements m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    QList<OAIJobTypeResourceLimit> m_job_specific;
    bool m_job_specific_isSet;
    bool m_job_specific_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActorDefinitionResourceRequirements)

#endif // OAIActorDefinitionResourceRequirements_H
