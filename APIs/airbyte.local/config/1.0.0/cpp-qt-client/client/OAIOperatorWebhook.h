/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOperatorWebhook.h
 *
 * 
 */

#ifndef OAIOperatorWebhook_H
#define OAIOperatorWebhook_H

#include <QJsonObject>

#include "OAIOperatorWebhook_dbtCloud.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOperatorWebhook_dbtCloud;

class OAIOperatorWebhook : public OAIObject {
public:
    OAIOperatorWebhook();
    OAIOperatorWebhook(QString json);
    ~OAIOperatorWebhook() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOperatorWebhook_dbtCloud getDbtCloud() const;
    void setDbtCloud(const OAIOperatorWebhook_dbtCloud &dbt_cloud);
    bool is_dbt_cloud_Set() const;
    bool is_dbt_cloud_Valid() const;

    Q_DECL_DEPRECATED QString getExecutionBody() const;
    Q_DECL_DEPRECATED void setExecutionBody(const QString &execution_body);
    Q_DECL_DEPRECATED bool is_execution_body_Set() const;
    Q_DECL_DEPRECATED bool is_execution_body_Valid() const;

    Q_DECL_DEPRECATED QString getExecutionUrl() const;
    Q_DECL_DEPRECATED void setExecutionUrl(const QString &execution_url);
    Q_DECL_DEPRECATED bool is_execution_url_Set() const;
    Q_DECL_DEPRECATED bool is_execution_url_Valid() const;

    QString getWebhookConfigId() const;
    void setWebhookConfigId(const QString &webhook_config_id);
    bool is_webhook_config_id_Set() const;
    bool is_webhook_config_id_Valid() const;

    QString getWebhookType() const;
    void setWebhookType(const QString &webhook_type);
    bool is_webhook_type_Set() const;
    bool is_webhook_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOperatorWebhook_dbtCloud m_dbt_cloud;
    bool m_dbt_cloud_isSet;
    bool m_dbt_cloud_isValid;

    QString m_execution_body;
    bool m_execution_body_isSet;
    bool m_execution_body_isValid;

    QString m_execution_url;
    bool m_execution_url_isSet;
    bool m_execution_url_isValid;

    QString m_webhook_config_id;
    bool m_webhook_config_id_isSet;
    bool m_webhook_config_id_isValid;

    QString m_webhook_type;
    bool m_webhook_type_isSet;
    bool m_webhook_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOperatorWebhook)

#endif // OAIOperatorWebhook_H
