/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkspaceCreate.h
 *
 * 
 */

#ifndef OAIWorkspaceCreate_H
#define OAIWorkspaceCreate_H

#include <QJsonObject>

#include "OAIGeography.h"
#include "OAINotification.h"
#include "OAIWebhookConfigWrite.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINotification;
class OAIWebhookConfigWrite;

class OAIWorkspaceCreate : public OAIObject {
public:
    OAIWorkspaceCreate();
    OAIWorkspaceCreate(QString json);
    ~OAIWorkspaceCreate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAnonymousDataCollection() const;
    void setAnonymousDataCollection(const bool &anonymous_data_collection);
    bool is_anonymous_data_collection_Set() const;
    bool is_anonymous_data_collection_Valid() const;

    OAIGeography getDefaultGeography() const;
    void setDefaultGeography(const OAIGeography &default_geography);
    bool is_default_geography_Set() const;
    bool is_default_geography_Valid() const;

    bool isDisplaySetupWizard() const;
    void setDisplaySetupWizard(const bool &display_setup_wizard);
    bool is_display_setup_wizard_Set() const;
    bool is_display_setup_wizard_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isNews() const;
    void setNews(const bool &news);
    bool is_news_Set() const;
    bool is_news_Valid() const;

    QList<OAINotification> getNotifications() const;
    void setNotifications(const QList<OAINotification> &notifications);
    bool is_notifications_Set() const;
    bool is_notifications_Valid() const;

    bool isSecurityUpdates() const;
    void setSecurityUpdates(const bool &security_updates);
    bool is_security_updates_Set() const;
    bool is_security_updates_Valid() const;

    QList<OAIWebhookConfigWrite> getWebhookConfigs() const;
    void setWebhookConfigs(const QList<OAIWebhookConfigWrite> &webhook_configs);
    bool is_webhook_configs_Set() const;
    bool is_webhook_configs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_anonymous_data_collection;
    bool m_anonymous_data_collection_isSet;
    bool m_anonymous_data_collection_isValid;

    OAIGeography m_default_geography;
    bool m_default_geography_isSet;
    bool m_default_geography_isValid;

    bool m_display_setup_wizard;
    bool m_display_setup_wizard_isSet;
    bool m_display_setup_wizard_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_news;
    bool m_news_isSet;
    bool m_news_isValid;

    QList<OAINotification> m_notifications;
    bool m_notifications_isSet;
    bool m_notifications_isValid;

    bool m_security_updates;
    bool m_security_updates_isSet;
    bool m_security_updates_isValid;

    QList<OAIWebhookConfigWrite> m_webhook_configs;
    bool m_webhook_configs_isSet;
    bool m_webhook_configs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkspaceCreate)

#endif // OAIWorkspaceCreate_H
