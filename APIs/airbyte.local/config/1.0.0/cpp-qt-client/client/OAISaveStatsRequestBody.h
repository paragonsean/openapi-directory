/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISaveStatsRequestBody.h
 *
 * 
 */

#ifndef OAISaveStatsRequestBody_H
#define OAISaveStatsRequestBody_H

#include <QJsonObject>

#include "OAIAttemptStats.h"
#include "OAIAttemptStreamStats.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttemptStats;
class OAIAttemptStreamStats;

class OAISaveStatsRequestBody : public OAIObject {
public:
    OAISaveStatsRequestBody();
    OAISaveStatsRequestBody(QString json);
    ~OAISaveStatsRequestBody() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAttemptNumber() const;
    void setAttemptNumber(const qint32 &attempt_number);
    bool is_attempt_number_Set() const;
    bool is_attempt_number_Valid() const;

    qint64 getJobId() const;
    void setJobId(const qint64 &job_id);
    bool is_job_id_Set() const;
    bool is_job_id_Valid() const;

    OAIAttemptStats getStats() const;
    void setStats(const OAIAttemptStats &stats);
    bool is_stats_Set() const;
    bool is_stats_Valid() const;

    QList<OAIAttemptStreamStats> getStreamStats() const;
    void setStreamStats(const QList<OAIAttemptStreamStats> &stream_stats);
    bool is_stream_stats_Set() const;
    bool is_stream_stats_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_attempt_number;
    bool m_attempt_number_isSet;
    bool m_attempt_number_isValid;

    qint64 m_job_id;
    bool m_job_id_isSet;
    bool m_job_id_isValid;

    OAIAttemptStats m_stats;
    bool m_stats_isSet;
    bool m_stats_isValid;

    QList<OAIAttemptStreamStats> m_stream_stats;
    bool m_stream_stats_isSet;
    bool m_stream_stats_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISaveStatsRequestBody)

#endif // OAISaveStatsRequestBody_H
