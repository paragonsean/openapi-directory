/*
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AttemptNormalizationStatusReadList;
import org.openapitools.client.model.ConnectionState;
import org.openapitools.client.model.ConnectionStateCreateOrUpdate;
import org.openapitools.client.model.DiscoverCatalogResult;
import org.openapitools.client.model.InternalOperationResult;
import org.openapitools.client.model.InvalidInputExceptionInfo;
import org.openapitools.client.model.JobIdRequestBody;
import org.openapitools.client.model.NotFoundKnownExceptionInfo;
import org.openapitools.client.model.SaveAttemptSyncConfigRequestBody;
import org.openapitools.client.model.SaveStatsRequestBody;
import org.openapitools.client.model.SetWorkflowInAttemptRequestBody;
import org.openapitools.client.model.SourceDiscoverSchemaWriteRequestBody;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InternalApi
 */
@Disabled
public class InternalApiTest {

    private final InternalApi api = new InternalApi();

    /**
     * Create or update the state for a connection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrUpdateState_0Test() throws ApiException {
        ConnectionStateCreateOrUpdate connectionStateCreateOrUpdate = null;
        ConnectionState response = api.createOrUpdateState_0(connectionStateCreateOrUpdate);
        // TODO: test validations
    }

    /**
     * Get normalization status to determine if we can bypass normalization phase
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttemptNormalizationStatusesForJob_0Test() throws ApiException {
        JobIdRequestBody jobIdRequestBody = null;
        AttemptNormalizationStatusReadList response = api.getAttemptNormalizationStatusesForJob_0(jobIdRequestBody);
        // TODO: test validations
    }

    /**
     * For worker to set sync stats of a running attempt.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveStats_0Test() throws ApiException {
        SaveStatsRequestBody saveStatsRequestBody = null;
        InternalOperationResult response = api.saveStats_0(saveStatsRequestBody);
        // TODO: test validations
    }

    /**
     * For worker to save the AttemptSyncConfig for an attempt.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveSyncConfig_0Test() throws ApiException {
        SaveAttemptSyncConfigRequestBody saveAttemptSyncConfigRequestBody = null;
        InternalOperationResult response = api.saveSyncConfig_0(saveAttemptSyncConfigRequestBody);
        // TODO: test validations
    }

    /**
     * For worker to register the workflow id in attempt.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setWorkflowInAttempt_0Test() throws ApiException {
        SetWorkflowInAttemptRequestBody setWorkflowInAttemptRequestBody = null;
        InternalOperationResult response = api.setWorkflowInAttempt_0(setWorkflowInAttemptRequestBody);
        // TODO: test validations
    }

    /**
     * Should only called from worker, to write result from discover activity back to DB.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void writeDiscoverCatalogResult_0Test() throws ApiException {
        SourceDiscoverSchemaWriteRequestBody sourceDiscoverSchemaWriteRequestBody = null;
        DiscoverCatalogResult response = api.writeDiscoverCatalogResult_0(sourceDiscoverSchemaWriteRequestBody);
        // TODO: test validations
    }

}
