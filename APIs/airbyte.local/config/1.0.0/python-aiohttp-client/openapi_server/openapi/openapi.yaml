openapi: 3.0.0
info:
  contact:
    email: contact@airbyte.io
  description: |
    Airbyte Configuration API
    [https://airbyte.io](https://airbyte.io).

    This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.

    Here are some conventions that this API follows:
    * All endpoints are http POST methods.
    * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params.
    * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`.
    * For all `update` methods, the whole object must be passed in, even the fields that did not change.

    Authentication (OSS):
    * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': "Basic YWlyYnl0ZTpwYXNzd29yZA=="`
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Airbyte Configuration API
  version: 1.0.0
  x-apisguru-categories:
  - developer_tools
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/airbytehq/airbyte/master/airbyte-api/src/main/openapi/config.yaml
    version: "3.0"
  x-providerName: airbyte.local
  x-serviceName: config
externalDocs:
  description: Find out more about Airbyte
  url: https://airbyte.io
servers:
- url: http://airbyte.local
- url: http://localhost:8000/api
security:
- {}
tags:
- description: Workspace related resources.
  name: workspace
- description: SourceDefinition related resources.
  name: source_definition
- description: SourceDefinition specification related resources.
  name: source_definition_specification
- description: Source related resources.
  name: source
- description: DestinationDefinition related resources.
  name: destination_definition
- description: DestinationDefinitionSpecification related resources.
  name: destination_definition_specification
- description: Destination related resources.
  name: destination
- description: Connection between sources and destinations.
  name: connection
- description: Source OAuth related resources to delegate access from user.
  name: destination_oauth
- description: Source OAuth related resources to delegate access from user.
  name: source_oauth
- description: |
    Endpoints for the Airbyte web application. Those APIs should not be called outside the web application implementation and are not
    guaranteeing any backwards compatibility.
  name: web_backend
- description: Healthchecks
  name: health
- description: Export/Import Airbyte Configuration and Database resources.
  name: deployment
- description: Interactions with attempt related resources.
  name: attempt
- description: Interactions with state related resources.
  name: state
paths:
  /v1/attempt/save_stats:
    post:
      operationId: save_stats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveStatsRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
          description: Successful Operation
      summary: For worker to set sync stats of a running attempt.
      tags:
      - attempt
      - internal
      x-openapi-router-controller: openapi_server.controllers.attempt_controller
      x-codegen-request-body-name: body
  /v1/attempt/save_sync_config:
    post:
      operationId: save_sync_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveAttemptSyncConfigRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
          description: Successful Operation
      summary: For worker to save the AttemptSyncConfig for an attempt.
      tags:
      - attempt
      - internal
      x-openapi-router-controller: openapi_server.controllers.attempt_controller
      x-codegen-request-body-name: body
  /v1/attempt/set_workflow_in_attempt:
    post:
      operationId: set_workflow_in_attempt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetWorkflowInAttemptRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalOperationResult'
          description: Successful Operation
      summary: For worker to register the workflow id in attempt.
      tags:
      - attempt
      - internal
      x-openapi-router-controller: openapi_server.controllers.attempt_controller
      x-codegen-request-body-name: body
  /v1/connections/create:
    post:
      operationId: create_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionCreate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a connection between a source and a destination
      tags:
      - connection
      x-openapi-router-controller: openapi_server.controllers.connection_controller
      x-codegen-request-body-name: body
  /v1/connections/delete:
    post:
      operationId: delete_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a connection
      tags:
      - connection
      x-openapi-router-controller: openapi_server.controllers.connection_controller
      x-codegen-request-body-name: body
  /v1/connections/get:
    post:
      operationId: get_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a connection
      tags:
      - connection
      x-openapi-router-controller: openapi_server.controllers.connection_controller
      x-codegen-request-body-name: body
  /v1/connections/list:
    post:
      description: List connections for workspace. Does not return deleted connections.
      operationId: list_connections_for_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all connections for a workspace.
      tags:
      - connection
      x-openapi-router-controller: openapi_server.controllers.connection_controller
      x-codegen-request-body-name: body
  /v1/connections/list_all:
    post:
      description: "List connections for workspace, including deleted connections."
      operationId: list_all_connections_for_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "Returns all connections for a workspace, including deleted connections."
      tags:
      - connection
      x-openapi-router-controller: openapi_server.controllers.connection_controller
      x-codegen-request-body-name: body
  /v1/connections/reset:
    post:
      operationId: reset_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Reset the data for the connection. Deletes data generated by the connection
        in the destination. Resets any cursors back to initial state.
      tags:
      - connection
      x-openapi-router-controller: openapi_server.controllers.connection_controller
      x-codegen-request-body-name: body
  /v1/connections/search:
    post:
      operationId: search_connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSearch'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search connections
      tags:
      - connection
      x-openapi-router-controller: openapi_server.controllers.connection_controller
      x-codegen-request-body-name: body
  /v1/connections/sync:
    post:
      operationId: sync_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Trigger a manual sync of the connection
      tags:
      - connection
      x-openapi-router-controller: openapi_server.controllers.connection_controller
      x-codegen-request-body-name: body
  /v1/connections/update:
    post:
      description: |
        Apply a patch-style update to a connection. Only fields present on the update request body will be updated.
        Note that if a catalog is present in the request body, the connection's entire catalog will be replaced
        with the catalog from the request. This means that to modify a single stream, the entire new catalog
        containing the updated stream needs to be sent.
      operationId: update_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a connection
      tags:
      - connection
      x-openapi-router-controller: openapi_server.controllers.connection_controller
      x-codegen-request-body-name: body
  /v1/destination_definition_specifications/get:
    post:
      operationId: get_destination_definition_specification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionSpecificationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get specification for a destinationDefinition
      tags:
      - destination_definition_specification
      x-openapi-router-controller: openapi_server.controllers.destination_definition_specification_controller
      x-codegen-request-body-name: body
  /v1/destination_definitions/create_custom:
    post:
      operationId: create_custom_destination_definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDestinationDefinitionCreate'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Creates a custom destinationDefinition for the given workspace
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
      x-codegen-request-body-name: body
  /v1/destination_definitions/delete:
    post:
      operationId: delete_destination_definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a destination definition
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
      x-codegen-request-body-name: body
  /v1/destination_definitions/get:
    post:
      operationId: get_destination_definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get destinationDefinition
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
      x-codegen-request-body-name: body
  /v1/destination_definitions/get_for_workspace:
    post:
      operationId: get_destination_definition_for_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a destinationDefinition that is configured for the given workspace
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
      x-codegen-request-body-name: body
  /v1/destination_definitions/grant_definition:
    post:
      operationId: grant_destination_definition_to_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "grant a private, non-custom destinationDefinition to a given workspace"
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
      x-codegen-request-body-name: body
  /v1/destination_definitions/list:
    post:
      operationId: list_destination_definitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
          description: Successful operation
      summary: List all the destinationDefinitions the current Airbyte deployment
        is configured to use
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
  /v1/destination_definitions/list_for_workspace:
    post:
      operationId: list_destination_definitions_for_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
          description: Successful operation
      summary: List all the destinationDefinitions the given workspace is configured
        to use
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
      x-codegen-request-body-name: body
  /v1/destination_definitions/list_latest:
    post:
      description: Guaranteed to retrieve the latest information on supported destinations.
      operationId: list_latest_destination_definitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionReadList'
          description: Successful operation
      summary: List the latest destinationDefinitions Airbyte supports
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
  /v1/destination_definitions/list_private:
    post:
      operationId: list_private_destination_definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDestinationDefinitionReadList'
          description: Successful operation
      summary: "List all private, non-custom destinationDefinitions, and for each\
        \ indicate whether the given workspace has a grant for using the definition.\
        \ Used by admins to view and modify a given workspace's grants."
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
      x-codegen-request-body-name: body
  /v1/destination_definitions/revoke_definition:
    post:
      operationId: revoke_destination_definition_from_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionIdWithWorkspaceId'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "revoke a grant to a private, non-custom destinationDefinition from\
        \ a given workspace"
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
      x-codegen-request-body-name: body
  /v1/destination_definitions/update:
    post:
      operationId: update_destination_definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDefinitionUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update destinationDefinition
      tags:
      - destination_definition
      x-openapi-router-controller: openapi_server.controllers.destination_definition_controller
      x-codegen-request-body-name: body
  /v1/destination_oauths/complete_oauth:
    post:
      operationId: complete_destination_o_auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteDestinationOAuthRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOAuthResponse'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Given a destination def ID generate an access/refresh token etc.
      tags:
      - destination_oauth
      x-openapi-router-controller: openapi_server.controllers.destination_oauth_controller
      x-codegen-request-body-name: body
  /v1/destination_oauths/get_consent_url:
    post:
      operationId: get_destination_o_auth_consent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationOauthConsentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthConsentRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "Given a destination connector definition ID, return the URL to the\
        \ consent screen where to redirect the user to."
      tags:
      - destination_oauth
      x-openapi-router-controller: openapi_server.controllers.destination_oauth_controller
      x-codegen-request-body-name: body
  /v1/destination_oauths/oauth_params/create:
    post:
      operationId: set_instancewide_destination_oauth_params
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstancewideDestinationOauthParamsRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnownExceptionInfo'
          description: Exception occurred; see message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: |
        Sets instancewide variables to be used for the oauth flow when creating this destination. When set, these variables will be injected into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know about these variables.
      tags:
      - destination_oauth
      x-openapi-router-controller: openapi_server.controllers.destination_oauth_controller
      x-codegen-request-body-name: body
  /v1/destinations/check_connection:
    post:
      operationId: check_connection_to_destination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection to the destination
      tags:
      - destination
      x-openapi-router-controller: openapi_server.controllers.destination_controller
      x-codegen-request-body-name: body
  /v1/destinations/check_connection_for_update:
    post:
      operationId: check_connection_to_destination_for_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection for a proposed update to a destination
      tags:
      - destination
      x-openapi-router-controller: openapi_server.controllers.destination_controller
      x-codegen-request-body-name: body
  /v1/destinations/clone:
    post:
      operationId: clone_destination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCloneRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Clone destination
      tags:
      - destination
      x-openapi-router-controller: openapi_server.controllers.destination_controller
      x-codegen-request-body-name: body
  /v1/destinations/create:
    post:
      operationId: create_destination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCreate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a destination
      tags:
      - destination
      x-openapi-router-controller: openapi_server.controllers.destination_controller
      x-codegen-request-body-name: body
  /v1/destinations/delete:
    post:
      operationId: delete_destination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete the destination
      tags:
      - destination
      x-openapi-router-controller: openapi_server.controllers.destination_controller
      x-codegen-request-body-name: body
  /v1/destinations/get:
    post:
      operationId: get_destination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get configured destination
      tags:
      - destination
      x-openapi-router-controller: openapi_server.controllers.destination_controller
      x-codegen-request-body-name: body
  /v1/destinations/list:
    post:
      operationId: list_destinations_for_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: List configured destinations for a workspace
      tags:
      - destination
      x-openapi-router-controller: openapi_server.controllers.destination_controller
      x-codegen-request-body-name: body
  /v1/destinations/search:
    post:
      operationId: search_destinations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationSearch'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search destinations
      tags:
      - destination
      x-openapi-router-controller: openapi_server.controllers.destination_controller
      x-codegen-request-body-name: body
  /v1/destinations/update:
    post:
      operationId: update_destination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a destination
      tags:
      - destination
      x-openapi-router-controller: openapi_server.controllers.destination_controller
      x-codegen-request-body-name: body
  /v1/health:
    get:
      operationId: get_health_check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckRead'
          description: Successful operation
      security: []
      summary: Health Check
      tags:
      - health
      x-openapi-router-controller: openapi_server.controllers.health_controller
  /v1/jobs/cancel:
    post:
      operationId: cancel_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Cancels a job
      tags:
      - jobs
      x-openapi-router-controller: openapi_server.controllers.jobs_controller
      x-codegen-request-body-name: body
  /v1/jobs/get:
    post:
      operationId: get_job_info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get information about a job
      tags:
      - jobs
      x-openapi-router-controller: openapi_server.controllers.jobs_controller
      x-codegen-request-body-name: body
  /v1/jobs/get_debug_info:
    post:
      operationId: get_job_debug_info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDebugInfoRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Gets all information needed to debug this job
      tags:
      - jobs
      x-openapi-router-controller: openapi_server.controllers.jobs_controller
      x-codegen-request-body-name: body
  /v1/jobs/get_last_replication_job:
    post:
      operationId: get_last_replication_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOptionalRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      tags:
      - jobs
      x-openapi-router-controller: openapi_server.controllers.jobs_controller
      x-codegen-request-body-name: body
  /v1/jobs/get_light:
    post:
      operationId: get_job_info_light
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoLightRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get information about a job excluding attempt info and logs
      tags:
      - jobs
      x-openapi-router-controller: openapi_server.controllers.jobs_controller
      x-codegen-request-body-name: body
  /v1/jobs/get_normalization_status:
    post:
      operationId: get_attempt_normalization_statuses_for_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobIdRequestBody'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptNormalizationStatusReadList'
          description: Successful operation
      summary: Get normalization status to determine if we can bypass normalization
        phase
      tags:
      - jobs
      - internal
      x-openapi-router-controller: openapi_server.controllers.jobs_controller
      x-codegen-request-body-name: body
  /v1/jobs/list:
    post:
      operationId: list_jobs_for
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobListRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns recent jobs for a connection. Jobs are returned in descending
        order by createdAt.
      tags:
      - jobs
      x-openapi-router-controller: openapi_server.controllers.jobs_controller
      x-codegen-request-body-name: body
  /v1/logs/get:
    post:
      operationId: get_logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Returns the log file
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get logs
      tags:
      - logs
      x-openapi-router-controller: openapi_server.controllers.logs_controller
      x-codegen-request-body-name: body
  /v1/notifications/try:
    post:
      operationId: try_notification_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Try sending a notifications
      tags:
      - notifications
      x-openapi-router-controller: openapi_server.controllers.notifications_controller
      x-codegen-request-body-name: body
  /v1/openapi:
    get:
      operationId: get_open_api_spec
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Returns the openapi specification file
      summary: Returns the openapi specification
      tags:
      - openapi
      x-openapi-router-controller: openapi_server.controllers.openapi_controller
  /v1/operations/check:
    post:
      operationId: check_operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorConfiguration'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckOperationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check if an operation to be created is valid
      tags:
      - operation
      x-openapi-router-controller: openapi_server.controllers.operation_controller
      x-codegen-request-body-name: body
  /v1/operations/create:
    post:
      operationId: create_operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCreate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create an operation to be applied as part of a connection pipeline
      tags:
      - operation
      x-openapi-router-controller: openapi_server.controllers.operation_controller
      x-codegen-request-body-name: body
  /v1/operations/delete:
    post:
      operationId: delete_operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete an operation
      tags:
      - operation
      x-openapi-router-controller: openapi_server.controllers.operation_controller
      x-codegen-request-body-name: body
  /v1/operations/get:
    post:
      operationId: get_operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns an operation
      tags:
      - operation
      x-openapi-router-controller: openapi_server.controllers.operation_controller
      x-codegen-request-body-name: body
  /v1/operations/list:
    post:
      description: List operations for connection.
      operationId: list_operations_for_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all operations for a connection.
      tags:
      - operation
      x-openapi-router-controller: openapi_server.controllers.operation_controller
      x-codegen-request-body-name: body
  /v1/operations/update:
    post:
      operationId: update_operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update an operation
      tags:
      - operation
      x-openapi-router-controller: openapi_server.controllers.operation_controller
      x-codegen-request-body-name: body
  /v1/scheduler/destinations/check_connection:
    post:
      operationId: execute_destination_check_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationCoreConfig'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Run check connection for a given destination configuration
      tags:
      - scheduler
      x-openapi-router-controller: openapi_server.controllers.scheduler_controller
      x-codegen-request-body-name: body
  /v1/scheduler/sources/check_connection:
    post:
      operationId: execute_source_check_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCoreConfig'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Run check connection for a given source configuration
      tags:
      - scheduler
      x-openapi-router-controller: openapi_server.controllers.scheduler_controller
      x-codegen-request-body-name: body
  /v1/scheduler/sources/discover_schema:
    post:
      operationId: execute_source_discover_schema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCoreConfig'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDiscoverSchemaRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Run discover schema for a given source a source configuration
      tags:
      - scheduler
      x-openapi-router-controller: openapi_server.controllers.scheduler_controller
      x-codegen-request-body-name: body
  /v1/source_definition_specifications/get:
    post:
      operationId: get_source_definition_specification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionSpecificationRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get specification for a SourceDefinition.
      tags:
      - source_definition_specification
      x-openapi-router-controller: openapi_server.controllers.source_definition_specification_controller
      x-codegen-request-body-name: body
  /v1/source_definitions/create_custom:
    post:
      operationId: create_custom_source_definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomSourceDefinitionCreate'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Creates a custom sourceDefinition for the given workspace
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
      x-codegen-request-body-name: body
  /v1/source_definitions/delete:
    post:
      operationId: delete_source_definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a source definition
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
      x-codegen-request-body-name: body
  /v1/source_definitions/get:
    post:
      operationId: get_source_definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get source
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
      x-codegen-request-body-name: body
  /v1/source_definitions/get_for_workspace:
    post:
      operationId: get_source_definition_for_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a sourceDefinition that is configured for the given workspace
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
      x-codegen-request-body-name: body
  /v1/source_definitions/grant_definition:
    post:
      operationId: grant_source_definition_to_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateSourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "grant a private, non-custom sourceDefinition to a given workspace"
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
      x-codegen-request-body-name: body
  /v1/source_definitions/list:
    post:
      operationId: list_source_definitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
          description: Successful operation
      summary: List all the sourceDefinitions the current Airbyte deployment is configured
        to use
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
  /v1/source_definitions/list_for_workspace:
    post:
      operationId: list_source_definitions_for_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
          description: Successful operation
      summary: List all the sourceDefinitions the given workspace is configured to
        use
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
      x-codegen-request-body-name: body
  /v1/source_definitions/list_latest:
    post:
      description: Guaranteed to retrieve the latest information on supported sources.
      operationId: list_latest_source_definitions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionReadList'
          description: Successful operation
      summary: List the latest sourceDefinitions Airbyte supports
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
  /v1/source_definitions/list_private:
    post:
      operationId: list_private_source_definitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateSourceDefinitionReadList'
          description: Successful operation
      summary: "List all private, non-custom sourceDefinitions, and for each indicate\
        \ whether the given workspace has a grant for using the definition. Used by\
        \ admins to view and modify a given workspace's grants."
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
      x-codegen-request-body-name: body
  /v1/source_definitions/revoke_definition:
    post:
      operationId: revoke_source_definition_from_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionIdWithWorkspaceId'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "revoke a grant to a private, non-custom sourceDefinition from a given\
        \ workspace"
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
      x-codegen-request-body-name: body
  /v1/source_definitions/update:
    post:
      operationId: update_source_definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDefinitionUpdate'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDefinitionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a sourceDefinition
      tags:
      - source_definition
      x-openapi-router-controller: openapi_server.controllers.source_definition_controller
      x-codegen-request-body-name: body
  /v1/source_oauths/complete_oauth:
    post:
      operationId: complete_source_o_auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteSourceOauthRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteOAuthResponse'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Given a source def ID generate an access/refresh token etc.
      tags:
      - source_oauth
      x-openapi-router-controller: openapi_server.controllers.source_oauth_controller
      x-codegen-request-body-name: body
  /v1/source_oauths/get_consent_url:
    post:
      operationId: get_source_o_auth_consent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceOauthConsentRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthConsentRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: "Given a source connector definition ID, return the URL to the consent\
        \ screen where to redirect the user to."
      tags:
      - source_oauth
      x-openapi-router-controller: openapi_server.controllers.source_oauth_controller
      x-codegen-request-body-name: body
  /v1/source_oauths/oauth_params/create:
    post:
      operationId: set_instancewide_source_oauth_params
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstancewideSourceOauthParamsRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnownExceptionInfo'
          description: Exception occurred; see message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: |
        Sets instancewide variables to be used for the oauth flow when creating this source. When set, these variables will be injected into a connector's configuration before any interaction with the connector image itself. This enables running oauth flows with consistent variables e.g: the company's Google Ads developer_token, client_id, and client_secret without the user having to know about these variables.
      tags:
      - source_oauth
      x-openapi-router-controller: openapi_server.controllers.source_oauth_controller
      x-codegen-request-body-name: body
  /v1/sources/check_connection:
    post:
      operationId: check_connection_to_source
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection to the source
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/check_connection_for_update:
    post:
      operationId: check_connection_to_source_for_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Check connection for a proposed update to a source
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/clone:
    post:
      operationId: clone_source
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCloneRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Clone source
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/create:
    post:
      operationId: create_source
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCreate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a source
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/delete:
    post:
      operationId: delete_source
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Delete a source
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/discover_schema:
    post:
      operationId: discover_schema_for_source
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDiscoverSchemaRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDiscoverSchemaRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Discover the schema catalog of the source
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/get:
    post:
      operationId: get_source
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get source
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/list:
    post:
      description: List sources for workspace. Does not return deleted sources.
      operationId: list_sources_for_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: List sources for workspace
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/most_recent_source_actor_catalog:
    post:
      operationId: get_most_recent_source_actor_catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorCatalogWithUpdatedAt'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get most recent ActorCatalog for source
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/search:
    post:
      operationId: search_sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceSearch'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceReadList'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Search sources
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/update:
    post:
      operationId: update_source
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a source
      tags:
      - source
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/sources/write_discover_catalog_result:
    post:
      operationId: write_discover_catalog_result
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceDiscoverSchemaWriteRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverCatalogResult'
          description: Successful Operation
      summary: "Should only called from worker, to write result from discover activity\
        \ back to DB."
      tags:
      - source
      - internal
      x-openapi-router-controller: openapi_server.controllers.source_controller
      x-codegen-request-body-name: body
  /v1/state/create_or_update:
    post:
      operationId: create_or_update_state
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStateCreateOrUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionState'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create or update the state for a connection.
      tags:
      - state
      - internal
      x-openapi-router-controller: openapi_server.controllers.state_controller
      x-codegen-request-body-name: body
  /v1/state/get:
    post:
      operationId: get_state
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionState'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Fetch the current state for a connection.
      tags:
      - state
      x-openapi-router-controller: openapi_server.controllers.state_controller
      x-codegen-request-body-name: body
  /v1/web_backend/check_updates:
    post:
      operationId: web_backend_check_updates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendCheckUpdatesRead'
          description: Successful operation
      summary: Returns a summary of source and destination definitions that could
        be updated.
      tags:
      - web_backend
      x-openapi-router-controller: openapi_server.controllers.web_backend_controller
  /v1/web_backend/connections/create:
    post:
      operationId: web_backend_create_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionCreate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Create a connection
      tags:
      - web_backend
      x-openapi-router-controller: openapi_server.controllers.web_backend_controller
      x-codegen-request-body-name: body
  /v1/web_backend/connections/get:
    post:
      operationId: web_backend_get_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Get a connection
      tags:
      - web_backend
      x-openapi-router-controller: openapi_server.controllers.web_backend_controller
      x-codegen-request-body-name: body
  /v1/web_backend/connections/list:
    post:
      operationId: web_backend_list_connections_for_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionListRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionReadList'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns all non-deleted connections for a workspace.
      tags:
      - web_backend
      x-openapi-router-controller: openapi_server.controllers.web_backend_controller
      x-codegen-request-body-name: body
  /v1/web_backend/connections/update:
    post:
      description: |
        Apply a patch-style update to a connection. Only fields present on the update request body will be updated.
        Any operations that lack an ID will be created. Then, the newly created operationId will be applied to the
        connection along with the rest of the operationIds in the request body.
        Apply a patch-style update to a connection. Only fields present on the update request body will be updated.
        Note that if a catalog is present in the request body, the connection's entire catalog will be replaced
        with the catalog from the request. This means that to modify a single stream, the entire new catalog
        containing the updated stream needs to be sent.
      operationId: web_backend_update_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendConnectionUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendConnectionRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update a connection
      tags:
      - web_backend
      x-openapi-router-controller: openapi_server.controllers.web_backend_controller
      x-codegen-request-body-name: body
  /v1/web_backend/geographies/list:
    post:
      description: Returns all available geographies in which a data sync can run.
      operationId: web_backend_list_geographies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendGeographiesListResult'
          description: Successful operation
      summary: |
        Returns available geographies can be selected to run data syncs in a particular geography.
        The 'auto' entry indicates that the sync will be automatically assigned to a geography according
        to the platform default behavior. Entries other than 'auto' are two-letter country codes that
        follow the ISO 3166-1 alpha-2 standard.
      tags:
      - web_backend
      x-openapi-router-controller: openapi_server.controllers.web_backend_controller
  /v1/web_backend/state/get_type:
    post:
      operationId: get_state_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStateType'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Fetch the current state type for a connection.
      tags:
      - web_backend
      x-openapi-router-controller: openapi_server.controllers.web_backend_controller
      x-codegen-request-body-name: body
  /v1/web_backend/workspace/state:
    post:
      operationId: web_backend_get_workspace_state
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebBackendWorkspaceState'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebBackendWorkspaceStateResult'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Returns the current state of a workspace
      tags:
      - web_backend
      x-openapi-router-controller: openapi_server.controllers.web_backend_controller
      x-codegen-request-body-name: body
  /v1/workspaces/create:
    post:
      operationId: create_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Creates a workspace
      tags:
      - workspace
      x-openapi-router-controller: openapi_server.controllers.workspace_controller
      x-codegen-request-body-name: body
  /v1/workspaces/delete:
    post:
      operationId: delete_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The resource was deleted successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Deletes a workspace
      tags:
      - workspace
      x-openapi-router-controller: openapi_server.controllers.workspace_controller
      x-codegen-request-body-name: body
  /v1/workspaces/get:
    post:
      operationId: get_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Find workspace by ID
      tags:
      - workspace
      x-openapi-router-controller: openapi_server.controllers.workspace_controller
      x-codegen-request-body-name: body
  /v1/workspaces/get_by_connection_id:
    post:
      operationId: get_workspace_by_connection_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionIdRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Find workspace by connection id
      tags:
      - workspace
      x-openapi-router-controller: openapi_server.controllers.workspace_controller
      x-codegen-request-body-name: body
  /v1/workspaces/get_by_slug:
    post:
      operationId: get_workspace_by_slug
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlugRequestBody'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Find workspace by slug
      tags:
      - workspace
      x-openapi-router-controller: openapi_server.controllers.workspace_controller
      x-codegen-request-body-name: body
  /v1/workspaces/list:
    post:
      operationId: list_workspaces
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceReadList'
          description: Successful operation
      summary: List all workspaces registered in the current Airbyte deployment
      tags:
      - workspace
      x-openapi-router-controller: openapi_server.controllers.workspace_controller
  /v1/workspaces/tag_feedback_status_as_done:
    post:
      operationId: update_workspace_feedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceGiveFeedback'
        required: true
        x-body-name: body
      responses:
        "204":
          description: The feedback state has been properly updated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
      summary: Update workspace feedback state
      tags:
      - workspace
      x-openapi-router-controller: openapi_server.controllers.workspace_controller
      x-codegen-request-body-name: body
  /v1/workspaces/update:
    post:
      operationId: update_workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdate'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update workspace state
      tags:
      - workspace
      x-openapi-router-controller: openapi_server.controllers.workspace_controller
      x-codegen-request-body-name: body
  /v1/workspaces/update_name:
    post:
      operationId: update_workspace_name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateName'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceRead'
          description: Successful operation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
          description: Object with given id was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputExceptionInfo'
          description: Input failed validation
      summary: Update workspace name
      tags:
      - workspace
      x-openapi-router-controller: openapi_server.controllers.workspace_controller
      x-codegen-request-body-name: body
components:
  responses:
    ExceptionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KnownExceptionInfo'
      description: Exception occurred; see message for details.
    InvalidInputResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidInputExceptionInfo'
      description: Input failed validation
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundKnownExceptionInfo'
      description: Object with given id was not found.
  schemas:
    ActorCatalogWithUpdatedAt:
      description: A source actor catalog with the timestamp it was mostly recently
        updated
      example:
        catalog: "{}"
        updatedAt: 0
      properties:
        catalog:
          title: catalog
          type: object
        updatedAt:
          format: int64
          title: updatedAt
          type: integer
      title: ActorCatalogWithUpdatedAt
      type: object
    ActorDefinitionResourceRequirements:
      additionalProperties: false
      description: "actor definition specific resource requirements. if default is\
        \ set, these are the requirements that should be set for ALL jobs run for\
        \ this actor definition. it is overriden by the job type specific configurations.\
        \ if not set, the platform will use defaults. these values will be overriden\
        \ by configuration at the connection level."
      example:
        default:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        jobSpecific:
        - resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobType: get_spec
        - resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobType: get_spec
      properties:
        default:
          $ref: '#/components/schemas/ResourceRequirements'
        jobSpecific:
          items:
            $ref: '#/components/schemas/JobTypeResourceLimit'
          title: jobSpecific
          type: array
      title: ActorDefinitionResourceRequirements
      type: object
    AdvancedAuth:
      example:
        predicateValue: predicateValue
        oauthConfigSpecification:
          completeOAuthServerOutputSpecification: ""
          completeOAuthServerInputSpecification: ""
          completeOAuthOutputSpecification: ""
          oauthUserInputFromConnectorConfigSpecification: ""
        predicateKey:
        - predicateKey
        - predicateKey
        authFlowType: oauth2.0
      properties:
        authFlowType:
          enum:
          - oauth2.0
          - oauth1.0
          title: authFlowType
          type: string
        oauthConfigSpecification:
          $ref: '#/components/schemas/OAuthConfigSpecification'
        predicateKey:
          description: Json Path to a field in the connectorSpecification that should
            exist for the advanced auth to be applicable.
          items:
            type: string
          title: predicateKey
          type: array
        predicateValue:
          description: Value of the predicate_key fields for the advanced auth to
            be applicable.
          title: predicateValue
          type: string
      title: AdvancedAuth
      type: object
    AirbyteArchive:
      description: Tarball Archive (.tar.gz) of Airbyte Configuration and Database
      format: binary
      type: string
    AirbyteCatalog:
      description: describes the available schema (catalog).
      example:
        streams:
        - stream:
            sourceDefinedPrimaryKey:
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            sourceDefinedCursor: true
            supportedSyncModes:
            - null
            - null
            jsonSchema: "{}"
            name: name
            namespace: namespace
            defaultCursorField:
            - defaultCursorField
            - defaultCursorField
          config:
            aliasName: aliasName
            suggested: true
            fieldSelectionEnabled: true
            syncMode: full_refresh
            destinationSyncMode: append
            selectedFields:
            - fieldPath:
              - fieldPath
              - fieldPath
            - fieldPath:
              - fieldPath
              - fieldPath
            cursorField:
            - cursorField
            - cursorField
            selected: true
            primaryKey:
            - - primaryKey
              - primaryKey
            - - primaryKey
              - primaryKey
        - stream:
            sourceDefinedPrimaryKey:
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            - - sourceDefinedPrimaryKey
              - sourceDefinedPrimaryKey
            sourceDefinedCursor: true
            supportedSyncModes:
            - null
            - null
            jsonSchema: "{}"
            name: name
            namespace: namespace
            defaultCursorField:
            - defaultCursorField
            - defaultCursorField
          config:
            aliasName: aliasName
            suggested: true
            fieldSelectionEnabled: true
            syncMode: full_refresh
            destinationSyncMode: append
            selectedFields:
            - fieldPath:
              - fieldPath
              - fieldPath
            - fieldPath:
              - fieldPath
              - fieldPath
            cursorField:
            - cursorField
            - cursorField
            selected: true
            primaryKey:
            - - primaryKey
              - primaryKey
            - - primaryKey
              - primaryKey
      properties:
        streams:
          items:
            $ref: '#/components/schemas/AirbyteStreamAndConfiguration'
          title: streams
          type: array
      required:
      - streams
      title: AirbyteCatalog
      type: object
    AirbyteStream:
      additionalProperties: false
      description: the immutable schema defined by the source
      example:
        sourceDefinedPrimaryKey:
        - - sourceDefinedPrimaryKey
          - sourceDefinedPrimaryKey
        - - sourceDefinedPrimaryKey
          - sourceDefinedPrimaryKey
        sourceDefinedCursor: true
        supportedSyncModes:
        - null
        - null
        jsonSchema: "{}"
        name: name
        namespace: namespace
        defaultCursorField:
        - defaultCursorField
        - defaultCursorField
      properties:
        defaultCursorField:
          description: "Path to the field that will be used to determine if a record\
            \ is new or modified since the last sync. If not provided by the source,\
            \ the end user will have to specify the comparable themselves."
          items:
            type: string
          title: defaultCursorField
          type: array
        jsonSchema:
          description: Stream schema using Json Schema specs.
          title: StreamJsonSchema
          type: object
        name:
          description: Stream's name.
          title: name
          type: string
        namespace:
          description: Optional Source-defined namespace. Airbyte streams from the
            same sources should have the same namespace. Currently only used by JDBC
            destinations to determine what schema to write to.
          title: namespace
          type: string
        sourceDefinedCursor:
          description: "If the source defines the cursor field, then any other cursor\
            \ field inputs will be ignored. If it does not, either the user_provided\
            \ one is used, or the default one is used as a backup."
          title: sourceDefinedCursor
          type: boolean
        sourceDefinedPrimaryKey:
          description: "If the source defines the primary key, paths to the fields\
            \ that will be used as a primary key. If not provided by the source, the\
            \ end user will have to specify the primary key themselves."
          items:
            items:
              type: string
            type: array
          title: sourceDefinedPrimaryKey
          type: array
        supportedSyncModes:
          items:
            $ref: '#/components/schemas/SyncMode'
          title: supportedSyncModes
          type: array
      required:
      - json_schema
      - name
      title: AirbyteStream
      type: object
    AirbyteStreamAndConfiguration:
      additionalProperties: false
      description: each stream is split in two parts; the immutable schema from source
        and mutable configuration for destination
      example:
        stream:
          sourceDefinedPrimaryKey:
          - - sourceDefinedPrimaryKey
            - sourceDefinedPrimaryKey
          - - sourceDefinedPrimaryKey
            - sourceDefinedPrimaryKey
          sourceDefinedCursor: true
          supportedSyncModes:
          - null
          - null
          jsonSchema: "{}"
          name: name
          namespace: namespace
          defaultCursorField:
          - defaultCursorField
          - defaultCursorField
        config:
          aliasName: aliasName
          suggested: true
          fieldSelectionEnabled: true
          syncMode: full_refresh
          destinationSyncMode: append
          selectedFields:
          - fieldPath:
            - fieldPath
            - fieldPath
          - fieldPath:
            - fieldPath
            - fieldPath
          cursorField:
          - cursorField
          - cursorField
          selected: true
          primaryKey:
          - - primaryKey
            - primaryKey
          - - primaryKey
            - primaryKey
      properties:
        config:
          $ref: '#/components/schemas/AirbyteStreamConfiguration'
        stream:
          $ref: '#/components/schemas/AirbyteStream'
      title: AirbyteStreamAndConfiguration
      type: object
    AirbyteStreamConfiguration:
      additionalProperties: false
      description: the mutable part of the stream to configure the destination
      example:
        aliasName: aliasName
        suggested: true
        fieldSelectionEnabled: true
        syncMode: full_refresh
        destinationSyncMode: append
        selectedFields:
        - fieldPath:
          - fieldPath
          - fieldPath
        - fieldPath:
          - fieldPath
          - fieldPath
        cursorField:
        - cursorField
        - cursorField
        selected: true
        primaryKey:
        - - primaryKey
          - primaryKey
        - - primaryKey
          - primaryKey
      properties:
        aliasName:
          description: Alias name to the stream to be used in the destination
          title: aliasName
          type: string
        cursorField:
          description: Path to the field that will be used to determine if a record
            is new or modified since the last sync. This field is REQUIRED if `sync_mode`
            is `incremental`. Otherwise it is ignored.
          items:
            type: string
          title: cursorField
          type: array
        destinationSyncMode:
          $ref: '#/components/schemas/DestinationSyncMode'
        fieldSelectionEnabled:
          description: "Whether field selection should be enabled. If this is true,\
            \ only the properties in `selectedFields` will be included."
          title: fieldSelectionEnabled
          type: boolean
        primaryKey:
          description: Paths to the fields that will be used as primary key. This
            field is REQUIRED if `destination_sync_mode` is `*_dedup`. Otherwise it
            is ignored.
          items:
            items:
              type: string
            type: array
          title: primaryKey
          type: array
        selected:
          description: "If this is true, the stream is selected with all of its properties.\
            \ For new connections, this considers if the stream is suggested or not"
          title: selected
          type: boolean
        selectedFields:
          description: Paths to the fields that will be included in the configured
            catalog. This must be set if `fieldSelectedEnabled` is set. An empty list
            indicates that no properties will be included.
          items:
            $ref: '#/components/schemas/SelectedFieldInfo'
          title: selectedFields
          type: array
        suggested:
          description: Does the connector suggest that this stream be enabled by default?
          title: suggested
          type: boolean
        syncMode:
          $ref: '#/components/schemas/SyncMode'
      required:
      - destinationSyncMode
      - syncMode
      title: AirbyteStreamConfiguration
      type: object
    AttemptFailureOrigin:
      description: "Indicates where the error originated. If not set, the origin of\
        \ error is not well known."
      enum:
      - source
      - destination
      - replication
      - persistence
      - normalization
      - dbt
      - airbyte_platform
      - unknown
      title: AttemptFailureOrigin
      type: string
    AttemptFailureReason:
      example:
        retryable: true
        stacktrace: stacktrace
        failureOrigin: source
        failureType: config_error
        internalMessage: internalMessage
        externalMessage: externalMessage
        timestamp: 5
      properties:
        externalMessage:
          title: externalMessage
          type: string
        failureOrigin:
          $ref: '#/components/schemas/AttemptFailureOrigin'
        failureType:
          $ref: '#/components/schemas/AttemptFailureType'
        internalMessage:
          title: internalMessage
          type: string
        retryable:
          description: "True if it is known that retrying may succeed, e.g. for a\
            \ transient failure. False if it is known that a retry will not succeed,\
            \ e.g. for a configuration issue. If not set, retryable status is not\
            \ well known."
          title: retryable
          type: boolean
        stacktrace:
          title: stacktrace
          type: string
        timestamp:
          format: int64
          title: timestamp
          type: integer
      required:
      - timestamp
      title: AttemptFailureReason
      type: object
    AttemptFailureSummary:
      example:
        failures:
        - retryable: true
          stacktrace: stacktrace
          failureOrigin: source
          failureType: config_error
          internalMessage: internalMessage
          externalMessage: externalMessage
          timestamp: 5
        - retryable: true
          stacktrace: stacktrace
          failureOrigin: source
          failureType: config_error
          internalMessage: internalMessage
          externalMessage: externalMessage
          timestamp: 5
        partialSuccess: true
      properties:
        failures:
          items:
            $ref: '#/components/schemas/AttemptFailureReason'
          title: failures
          type: array
        partialSuccess:
          description: "True if the number of committed records for this attempt was\
            \ greater than 0. False if 0 records were committed. If not set, the number\
            \ of committed records is unknown."
          title: partialSuccess
          type: boolean
      required:
      - failures
      title: AttemptFailureSummary
      type: object
    AttemptFailureType:
      description: "Categorizes well known errors into types for programmatic handling.\
        \ If not set, the type of error is not well known."
      enum:
      - config_error
      - system_error
      - manual_cancellation
      - refresh_schema
      title: AttemptFailureType
      type: string
    AttemptInfoRead:
      example:
        attempt:
          failureSummary:
            failures:
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: source
              failureType: config_error
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 5
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: source
              failureType: config_error
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 5
            partialSuccess: true
          totalStats:
            recordsCommitted: 2
            stateMessagesEmitted: 9
            bytesEmitted: 1
            estimatedBytes: 5
            estimatedRecords: 5
            recordsEmitted: 7
          createdAt: 6
          bytesSynced: 0
          endedAt: 1
          streamStats:
          - stats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            streamNamespace: streamNamespace
            streamName: streamName
          - stats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            streamNamespace: streamNamespace
            streamName: streamName
          id: 5
          recordsSynced: 2
          status: running
          updatedAt: 7
        logs:
          logLines:
          - logLines
          - logLines
      properties:
        attempt:
          $ref: '#/components/schemas/AttemptRead'
        logs:
          $ref: '#/components/schemas/LogRead'
      required:
      - attempt
      - logs
      title: AttemptInfoRead
      type: object
    AttemptNormalizationStatusRead:
      example:
        attemptNumber: 0
        recordsCommitted: 6
        hasRecordsCommitted: true
        hasNormalizationFailed: true
      properties:
        attemptNumber:
          format: int32
          title: attemptNumber
          type: integer
        hasNormalizationFailed:
          title: hasNormalizationFailed
          type: boolean
        hasRecordsCommitted:
          title: hasRecordsCommitted
          type: boolean
        recordsCommitted:
          format: int64
          title: recordsCommitted
          type: integer
      title: AttemptNormalizationStatusRead
      type: object
    AttemptNormalizationStatusReadList:
      example:
        attemptNormalizationStatuses:
        - attemptNumber: 0
          recordsCommitted: 6
          hasRecordsCommitted: true
          hasNormalizationFailed: true
        - attemptNumber: 0
          recordsCommitted: 6
          hasRecordsCommitted: true
          hasNormalizationFailed: true
      properties:
        attemptNormalizationStatuses:
          items:
            $ref: '#/components/schemas/AttemptNormalizationStatusRead'
          title: attemptNormalizationStatuses
          type: array
      title: AttemptNormalizationStatusReadList
      type: object
    AttemptNumber:
      format: int32
      title: attemptNumber
      type: integer
    AttemptRead:
      example:
        failureSummary:
          failures:
          - retryable: true
            stacktrace: stacktrace
            failureOrigin: source
            failureType: config_error
            internalMessage: internalMessage
            externalMessage: externalMessage
            timestamp: 5
          - retryable: true
            stacktrace: stacktrace
            failureOrigin: source
            failureType: config_error
            internalMessage: internalMessage
            externalMessage: externalMessage
            timestamp: 5
          partialSuccess: true
        totalStats:
          recordsCommitted: 2
          stateMessagesEmitted: 9
          bytesEmitted: 1
          estimatedBytes: 5
          estimatedRecords: 5
          recordsEmitted: 7
        createdAt: 6
        bytesSynced: 0
        endedAt: 1
        streamStats:
        - stats:
            recordsCommitted: 2
            stateMessagesEmitted: 9
            bytesEmitted: 1
            estimatedBytes: 5
            estimatedRecords: 5
            recordsEmitted: 7
          streamNamespace: streamNamespace
          streamName: streamName
        - stats:
            recordsCommitted: 2
            stateMessagesEmitted: 9
            bytesEmitted: 1
            estimatedBytes: 5
            estimatedRecords: 5
            recordsEmitted: 7
          streamNamespace: streamNamespace
          streamName: streamName
        id: 5
        recordsSynced: 2
        status: running
        updatedAt: 7
      properties:
        bytesSynced:
          format: int64
          title: bytesSynced
          type: integer
        createdAt:
          format: int64
          title: createdAt
          type: integer
        endedAt:
          format: int64
          title: endedAt
          type: integer
        failureSummary:
          $ref: '#/components/schemas/AttemptFailureSummary'
        id:
          format: int64
          title: id
          type: integer
        recordsSynced:
          format: int64
          title: recordsSynced
          type: integer
        status:
          $ref: '#/components/schemas/AttemptStatus'
        streamStats:
          items:
            $ref: '#/components/schemas/AttemptStreamStats'
          title: streamStats
          type: array
        totalStats:
          $ref: '#/components/schemas/AttemptStats'
        updatedAt:
          format: int64
          title: updatedAt
          type: integer
      required:
      - createdAt
      - id
      - status
      - updatedAt
      title: AttemptRead
      type: object
    AttemptStats:
      example:
        recordsCommitted: 2
        stateMessagesEmitted: 9
        bytesEmitted: 1
        estimatedBytes: 5
        estimatedRecords: 5
        recordsEmitted: 7
      properties:
        bytesEmitted:
          format: int64
          title: bytesEmitted
          type: integer
        estimatedBytes:
          format: int64
          title: estimatedBytes
          type: integer
        estimatedRecords:
          format: int64
          title: estimatedRecords
          type: integer
        recordsCommitted:
          format: int64
          title: recordsCommitted
          type: integer
        recordsEmitted:
          format: int64
          title: recordsEmitted
          type: integer
        stateMessagesEmitted:
          format: int64
          title: stateMessagesEmitted
          type: integer
      title: AttemptStats
      type: object
    AttemptStatus:
      enum:
      - running
      - failed
      - succeeded
      title: AttemptStatus
      type: string
    AttemptStreamStats:
      example:
        stats:
          recordsCommitted: 2
          stateMessagesEmitted: 9
          bytesEmitted: 1
          estimatedBytes: 5
          estimatedRecords: 5
          recordsEmitted: 7
        streamNamespace: streamNamespace
        streamName: streamName
      properties:
        stats:
          $ref: '#/components/schemas/AttemptStats'
        streamName:
          title: streamName
          type: string
        streamNamespace:
          title: streamNamespace
          type: string
      required:
      - stats
      - streamName
      title: AttemptStreamStats
      type: object
    AttemptSyncConfig:
      example:
        destinationConfiguration:
          user: charles
        sourceConfiguration:
          user: charles
        state:
          globalState:
            shared_state: "{}"
            streamStates:
            - streamDescriptor:
                name: name
                namespace: namespace
              streamState: "{}"
            - streamDescriptor:
                name: name
                namespace: namespace
              streamState: "{}"
          stateType: global
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          streamState:
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: "{}"
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: "{}"
          state: "{}"
      properties:
        destinationConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
          title: DestinationConfiguration
        sourceConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
          title: SourceConfiguration
        state:
          $ref: '#/components/schemas/ConnectionState'
      required:
      - destinationConfiguration
      - sourceConfiguration
      title: AttemptSyncConfig
      type: object
    AuthSpecification:
      example:
        auth_type: oauth2.0
        oauth2Specification:
          oauthFlowOutputParameters:
          - - oauthFlowOutputParameters
            - oauthFlowOutputParameters
          - - oauthFlowOutputParameters
            - oauthFlowOutputParameters
          rootObject:
          - path
          - 1
          oauthFlowInitParameters:
          - - oauthFlowInitParameters
            - oauthFlowInitParameters
          - - oauthFlowInitParameters
            - oauthFlowInitParameters
      properties:
        auth_type:
          enum:
          - oauth2.0
          title: auth_type
          type: string
        oauth2Specification:
          $ref: '#/components/schemas/OAuth2Specification'
      title: AuthSpecification
      type: object
    CatalogDiff:
      description: Describes the difference between two Airbyte catalogs.
      example:
        transforms:
        - streamDescriptor:
            name: name
            namespace: namespace
          transformType: add_stream
          updateStream:
          - updateFieldSchema:
              oldSchema: "{}"
              newSchema: "{}"
            fieldName:
            - fieldName
            - fieldName
            addField:
              schema: "{}"
            transformType: add_field
            removeField:
              schema: "{}"
            breaking: true
          - updateFieldSchema:
              oldSchema: "{}"
              newSchema: "{}"
            fieldName:
            - fieldName
            - fieldName
            addField:
              schema: "{}"
            transformType: add_field
            removeField:
              schema: "{}"
            breaking: true
        - streamDescriptor:
            name: name
            namespace: namespace
          transformType: add_stream
          updateStream:
          - updateFieldSchema:
              oldSchema: "{}"
              newSchema: "{}"
            fieldName:
            - fieldName
            - fieldName
            addField:
              schema: "{}"
            transformType: add_field
            removeField:
              schema: "{}"
            breaking: true
          - updateFieldSchema:
              oldSchema: "{}"
              newSchema: "{}"
            fieldName:
            - fieldName
            - fieldName
            addField:
              schema: "{}"
            transformType: add_field
            removeField:
              schema: "{}"
            breaking: true
      properties:
        transforms:
          description: list of stream transformations. order does not matter.
          items:
            $ref: '#/components/schemas/StreamTransform'
          title: transforms
          type: array
      required:
      - transforms
      title: CatalogDiff
      type: object
    CheckConnectionRead:
      example:
        message: message
        jobInfo:
          createdAt: 0
          connectorConfigurationUpdated: false
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configType: check_connection_source
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
        status: succeeded
      properties:
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
        message:
          title: message
          type: string
        status:
          enum:
          - succeeded
          - failed
          title: status
          type: string
      required:
      - jobInfo
      - status
      title: CheckConnectionRead
      type: object
    CheckOperationRead:
      example:
        message: message
        status: succeeded
      properties:
        message:
          title: message
          type: string
        status:
          enum:
          - succeeded
          - failed
          title: status
          type: string
      required:
      - status
      title: CheckOperationRead
      type: object
    CompleteDestinationOAuthRequest:
      example:
        redirectUrl: redirectUrl
        queryParams:
          key: ""
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: ""
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        destinationId:
          format: uuid
          title: destinationId
          type: string
        oAuthInputConfiguration:
          description: The values required to configure OAuth flows. The schema for
            this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
            schema.
          title: OAuthConfiguration
        queryParams:
          additionalProperties: true
          description: The query parameters present in the redirect URL after a user
            granted consent e.g auth code
          title: queryParams
          type: object
        redirectUrl:
          description: "When completing OAuth flow to gain an access token, some API\
            \ sometimes requires to verify that the app re-send the redirectUrl that\
            \ was used when consent was given."
          title: redirectUrl
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - destinationDefinitionId
      - workspaceId
      title: CompleteDestinationOAuthRequest
      type: object
    CompleteOAuthResponse:
      additionalProperties: true
      type: object
    CompleteSourceOauthRequest:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        redirectUrl: redirectUrl
        queryParams:
          key: ""
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: ""
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        oAuthInputConfiguration:
          description: The values required to configure OAuth flows. The schema for
            this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
            schema.
          title: OAuthConfiguration
        queryParams:
          additionalProperties: true
          description: The query parameters present in the redirect URL after a user
            granted consent e.g auth code
          title: queryParams
          type: object
        redirectUrl:
          description: "When completing OAuth flow to gain an access token, some API\
            \ sometimes requires to verify that the app re-send the redirectUrl that\
            \ was used when consent was given."
          title: redirectUrl
          type: string
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - sourceDefinitionId
      - workspaceId
      title: CompleteSourceOauthRequest
      type: object
    ConnectionCreate:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceDefinition: source
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        notifySchemaChanges: true
        scheduleType: manual
        geography: auto
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        namespaceFormat: "${SOURCE_NAMESPACE}"
        operationIds:
        - null
        - null
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: ignore
        status: active
      properties:
        destinationId:
          format: uuid
          title: destinationId
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        name:
          description: Optional name of the connection
          title: name
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          title: namespaceFormat
          type: string
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        notifySchemaChanges:
          title: notifySchemaChanges
          type: boolean
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          title: operationIds
          type: array
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          title: prefix
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        sourceCatalogId:
          format: uuid
          title: sourceCatalogId
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
      required:
      - destinationId
      - sourceId
      - status
      title: ConnectionCreate
      type: object
    ConnectionId:
      format: uuid
      title: ConnectionId
      type: string
    ConnectionIdRequestBody:
      example:
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
      required:
      - connectionId
      title: ConnectionIdRequestBody
      type: object
    ConnectionRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceDefinition: source
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        breakingChange: true
        notifySchemaChanges: true
        scheduleType: manual
        geography: auto
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: "${SOURCE_NAMESPACE}"
        operationIds:
        - null
        - null
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: ignore
        status: active
      properties:
        breakingChange:
          title: breakingChange
          type: boolean
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
        destinationId:
          format: uuid
          title: destinationId
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        name:
          title: name
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          title: namespaceFormat
          type: string
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        notifySchemaChanges:
          title: notifySchemaChanges
          type: boolean
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          title: operationIds
          type: array
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          title: prefix
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        sourceCatalogId:
          format: uuid
          title: sourceCatalogId
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
      required:
      - breakingChange
      - connectionId
      - destinationId
      - name
      - sourceId
      - status
      - syncCatalog
      title: ConnectionRead
      type: object
    ConnectionReadList:
      example:
        connections:
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          prefix: prefix
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceDefinition: source
          resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          schedule:
            units: 0
            timeUnit: minutes
          breakingChange: true
          notifySchemaChanges: true
          scheduleType: manual
          geography: auto
          name: name
          syncCatalog:
            streams:
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                sourceDefinedCursor: true
                supportedSyncModes:
                - null
                - null
                jsonSchema: "{}"
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                suggested: true
                fieldSelectionEnabled: true
                syncMode: full_refresh
                destinationSyncMode: append
                selectedFields:
                - fieldPath:
                  - fieldPath
                  - fieldPath
                - fieldPath:
                  - fieldPath
                  - fieldPath
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                sourceDefinedCursor: true
                supportedSyncModes:
                - null
                - null
                jsonSchema: "{}"
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                suggested: true
                fieldSelectionEnabled: true
                syncMode: full_refresh
                destinationSyncMode: append
                selectedFields:
                - fieldPath:
                  - fieldPath
                  - fieldPath
                - fieldPath:
                  - fieldPath
                  - fieldPath
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceFormat: "${SOURCE_NAMESPACE}"
          operationIds:
          - null
          - null
          scheduleData:
            cron:
              cronExpression: cronExpression
              cronTimeZone: cronTimeZone
            basicSchedule:
              units: 6
              timeUnit: minutes
          nonBreakingChangesPreference: ignore
          status: active
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          prefix: prefix
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceDefinition: source
          resourceRequirements:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          schedule:
            units: 0
            timeUnit: minutes
          breakingChange: true
          notifySchemaChanges: true
          scheduleType: manual
          geography: auto
          name: name
          syncCatalog:
            streams:
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                sourceDefinedCursor: true
                supportedSyncModes:
                - null
                - null
                jsonSchema: "{}"
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                suggested: true
                fieldSelectionEnabled: true
                syncMode: full_refresh
                destinationSyncMode: append
                selectedFields:
                - fieldPath:
                  - fieldPath
                  - fieldPath
                - fieldPath:
                  - fieldPath
                  - fieldPath
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
            - stream:
                sourceDefinedPrimaryKey:
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                - - sourceDefinedPrimaryKey
                  - sourceDefinedPrimaryKey
                sourceDefinedCursor: true
                supportedSyncModes:
                - null
                - null
                jsonSchema: "{}"
                name: name
                namespace: namespace
                defaultCursorField:
                - defaultCursorField
                - defaultCursorField
              config:
                aliasName: aliasName
                suggested: true
                fieldSelectionEnabled: true
                syncMode: full_refresh
                destinationSyncMode: append
                selectedFields:
                - fieldPath:
                  - fieldPath
                  - fieldPath
                - fieldPath:
                  - fieldPath
                  - fieldPath
                cursorField:
                - cursorField
                - cursorField
                selected: true
                primaryKey:
                - - primaryKey
                  - primaryKey
                - - primaryKey
                  - primaryKey
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          namespaceFormat: "${SOURCE_NAMESPACE}"
          operationIds:
          - null
          - null
          scheduleData:
            cron:
              cronExpression: cronExpression
              cronTimeZone: cronTimeZone
            basicSchedule:
              units: 6
              timeUnit: minutes
          nonBreakingChangesPreference: ignore
          status: active
      properties:
        connections:
          items:
            $ref: '#/components/schemas/ConnectionRead'
          title: connections
          type: array
      required:
      - connections
      title: ConnectionReadList
      type: object
    ConnectionSchedule:
      description: "if null, then no schedule is set."
      example:
        units: 0
        timeUnit: minutes
      properties:
        timeUnit:
          enum:
          - minutes
          - hours
          - days
          - weeks
          - months
          title: timeUnit
          type: string
        units:
          format: int64
          title: units
          type: integer
      required:
      - timeUnit
      - units
      title: ConnectionSchedule
      type: object
    ConnectionScheduleData:
      description: "schedule for when the the connection should run, per the schedule\
        \ type"
      example:
        cron:
          cronExpression: cronExpression
          cronTimeZone: cronTimeZone
        basicSchedule:
          units: 6
          timeUnit: minutes
      properties:
        basicSchedule:
          $ref: '#/components/schemas/ConnectionScheduleData_basicSchedule'
        cron:
          $ref: '#/components/schemas/ConnectionScheduleData_cron'
      title: ConnectionScheduleData
      type: object
    ConnectionScheduleType:
      description: determine how the schedule data should be interpreted
      enum:
      - manual
      - basic
      - cron
      title: ConnectionScheduleType
      type: string
    ConnectionSearch:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        destination:
          connectionConfiguration:
            user: charles
          destinationName: destinationName
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source:
          sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceDefinition: source
        schedule:
          units: 0
          timeUnit: minutes
        scheduleType: manual
        name: name
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: "${SOURCE_NAMESPACE}"
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        status: active
      properties:
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
        destination:
          $ref: '#/components/schemas/DestinationSearch'
        destinationId:
          format: uuid
          title: destinationId
          type: string
        name:
          title: name
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          title: namespaceFormat
          type: string
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          title: prefix
          type: string
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        source:
          $ref: '#/components/schemas/SourceSearch'
        sourceId:
          format: uuid
          title: sourceId
          type: string
        status:
          $ref: '#/components/schemas/ConnectionStatus'
      title: ConnectionSearch
      type: object
    ConnectionState:
      description: "Contains the state for a connection. The stateType field identifies\
        \ what type of state it is. Only the field corresponding to that type will\
        \ be set, the rest will be null. If stateType=not_set, then none of the fields\
        \ will be set."
      example:
        globalState:
          shared_state: "{}"
          streamStates:
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: "{}"
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: "{}"
        stateType: global
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        streamState:
        - streamDescriptor:
            name: name
            namespace: namespace
          streamState: "{}"
        - streamDescriptor:
            name: name
            namespace: namespace
          streamState: "{}"
        state: "{}"
      properties:
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
        globalState:
          $ref: '#/components/schemas/GlobalState'
        state:
          title: StateBlob
          type: object
        stateType:
          $ref: '#/components/schemas/ConnectionStateType'
        streamState:
          items:
            $ref: '#/components/schemas/StreamState'
          title: streamState
          type: array
      required:
      - connectionId
      - stateType
      title: ConnectionState
      type: object
    ConnectionStateCreateOrUpdate:
      example:
        connectionState:
          globalState:
            shared_state: "{}"
            streamStates:
            - streamDescriptor:
                name: name
                namespace: namespace
              streamState: "{}"
            - streamDescriptor:
                name: name
                namespace: namespace
              streamState: "{}"
          stateType: global
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          streamState:
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: "{}"
          - streamDescriptor:
              name: name
              namespace: namespace
            streamState: "{}"
          state: "{}"
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
        connectionState:
          $ref: '#/components/schemas/ConnectionState'
      required:
      - connectionId
      - connectionState
      title: ConnectionStateCreateOrUpdate
      type: object
    ConnectionStateType:
      enum:
      - global
      - stream
      - legacy
      - not_set
      title: ConnectionStateType
      type: string
    ConnectionStatus:
      description: Active means that data is flowing through the connection. Inactive
        means it is not. Deprecated means the connection is off and cannot be re-activated.
        the schema field describes the elements of the schema that will be synced.
      enum:
      - active
      - inactive
      - deprecated
      title: ConnectionStatus
      type: string
    ConnectionUpdate:
      description: "Used to apply a patch-style update to a connection, which means\
        \ that null properties remain unchanged"
      example:
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        namespaceDefinition: source
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        breakingChange: true
        notifySchemaChanges: true
        scheduleType: manual
        geography: auto
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: "${SOURCE_NAMESPACE}"
        operationIds:
        - null
        - null
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: ignore
        status: active
      properties:
        breakingChange:
          title: breakingChange
          type: boolean
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        name:
          description: Name that will be set to this connection
          title: name
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          title: namespaceFormat
          type: string
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        notifySchemaChanges:
          title: notifySchemaChanges
          type: boolean
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          title: operationIds
          type: array
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          title: prefix
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        sourceCatalogId:
          format: uuid
          title: sourceCatalogId
          type: string
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
      required:
      - connectionId
      title: ConnectionUpdate
      type: object
    CustomDestinationDefinitionCreate:
      example:
        destinationDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          dockerRepository: dockerRepository
          icon: icon
          name: name
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionCreate'
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - destinationDefinition
      - workspaceId
      title: CustomDestinationDefinitionCreate
      type: object
    CustomSourceDefinitionCreate:
      example:
        sourceDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          dockerRepository: dockerRepository
          icon: icon
          name: name
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionCreate'
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - sourceDefinition
      - workspaceId
      title: CustomSourceDefinitionCreate
      type: object
    CustomerId:
      format: uuid
      title: customerId
      type: string
    CustomerioNotificationConfiguration:
      title: customerioConfiguration
      type: object
    DataType:
      enum:
      - string
      - number
      - boolean
      - object
      - array
      type: string
    DbMigrationExecutionRead:
      properties:
        executedMigrations:
          items:
            $ref: '#/components/schemas/DbMigrationRead'
          type: array
        initialVersion:
          type: string
        targetVersion:
          type: string
      type: object
    DbMigrationRead:
      properties:
        migratedAt:
          format: int64
          title: migratedAt
          type: integer
        migratedBy:
          title: migratedBy
          type: string
        migrationDescription:
          title: migrationDescription
          type: string
        migrationScript:
          title: migrationScript
          type: string
        migrationState:
          $ref: '#/components/schemas/DbMigrationState'
        migrationType:
          title: migrationType
          type: string
        migrationVersion:
          title: migrationVersion
          type: string
      required:
      - migrationDescription
      - migrationType
      - migrationVersion
      title: DbMigrationRead
      type: object
    DbMigrationReadList:
      properties:
        migrations:
          items:
            $ref: '#/components/schemas/DbMigrationRead'
          type: array
      type: object
    DbMigrationRequestBody:
      properties:
        database:
          type: string
      required:
      - database
      type: object
    DbMigrationState:
      enum:
      - pending
      - above_target
      - below_baseline
      - baseline
      - ignored
      - missing_success
      - missing_failed
      - success
      - undone
      - available
      - failed
      - out_of_order
      - future_success
      - future_failed
      - outdated
      - superseded
      - deleted
      title: DbMigrationState
      type: string
    DestinationAuthSpecification:
      $ref: '#/components/schemas/AuthSpecification'
    DestinationCloneConfiguration:
      example:
        connectionConfiguration:
          user: charles
        name: name
      properties:
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
          title: DestinationConfiguration
        name:
          title: name
          type: string
      title: DestinationCloneConfiguration
      type: object
    DestinationCloneRequestBody:
      description: The values required to configure the destination. The schema for
        this should have an id of the existing destination along with the configuration
        you want to change in case.
      example:
        destinationConfiguration:
          connectionConfiguration:
            user: charles
          name: name
        destinationCloneId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationCloneId:
          format: uuid
          title: destinationId
          type: string
        destinationConfiguration:
          $ref: '#/components/schemas/DestinationCloneConfiguration'
      required:
      - destinationCloneId
      title: DestinationCloneRequestBody
      type: object
    DestinationConfiguration:
      description: The values required to configure the destination. The schema for
        this must match the schema return by destination_definition_specifications/get
        for the destinationDefinition.
      example:
        user: charles
      title: DestinationConfiguration
    DestinationCoreConfig:
      example:
        connectionConfiguration:
          user: charles
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
          title: DestinationConfiguration
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        destinationId:
          format: uuid
          title: destinationId
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - connectionConfiguration
      - destinationDefinitionId
      - workspaceId
      title: DestinationCoreConfig
      type: object
    DestinationCreate:
      example:
        connectionConfiguration:
          user: charles
        name: name
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
          title: DestinationConfiguration
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        name:
          title: name
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - connectionConfiguration
      - destinationDefinitionId
      - name
      - workspaceId
      title: DestinationCreate
      type: object
    DestinationDefinitionCreate:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        dockerRepository: dockerRepository
        icon: icon
        name: name
      properties:
        dockerImageTag:
          title: dockerImageTag
          type: string
        dockerRepository:
          title: dockerRepository
          type: string
        documentationUrl:
          format: uri
          title: documentationUrl
          type: string
        icon:
          title: icon
          type: string
        name:
          title: name
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
      required:
      - dockerImageTag
      - dockerRepository
      - documentationUrl
      - name
      title: DestinationDefinitionCreate
      type: object
    DestinationDefinitionId:
      format: uuid
      title: DestinationDefinitionId
      type: string
    DestinationDefinitionIdRequestBody:
      example:
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
      required:
      - destinationDefinitionId
      title: DestinationDefinitionIdRequestBody
      type: object
    DestinationDefinitionIdWithWorkspaceId:
      example:
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - destinationDefinitionId
      - workspaceId
      title: DestinationDefinitionIdWithWorkspaceId
      type: object
    DestinationDefinitionRead:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        releaseDate: 2000-01-23
        dockerRepository: dockerRepository
        releaseStage: alpha
        supportsDbt: true
        icon: icon
        name: name
        normalizationConfig:
          normalizationIntegrationType: normalizationIntegrationType
          normalizationRepository: normalizationRepository
          normalizationTag: normalizationTag
          supported: false
        protocolVersion: protocolVersion
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        dockerImageTag:
          title: dockerImageTag
          type: string
        dockerRepository:
          title: dockerRepository
          type: string
        documentationUrl:
          format: uri
          title: documentationUrl
          type: string
        icon:
          title: icon
          type: string
        name:
          title: name
          type: string
        normalizationConfig:
          $ref: '#/components/schemas/NormalizationDestinationDefinitionConfig'
        protocolVersion:
          description: The Airbyte Protocol version supported by the connector
          title: protocolVersion
          type: string
        releaseDate:
          description: "The date when this connector was first released, in yyyy-mm-dd\
            \ format."
          format: date
          title: releaseDate
          type: string
        releaseStage:
          $ref: '#/components/schemas/ReleaseStage'
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
        supportsDbt:
          description: an optional flag indicating whether DBT is used in the normalization.
            If the flag value is NULL - DBT is not used.
          title: supportsDbt
          type: boolean
      required:
      - destinationDefinitionId
      - dockerImageTag
      - dockerRepository
      - documentationUrl
      - name
      - normalizationConfig
      - supportsDbt
      title: DestinationDefinitionRead
      type: object
    DestinationDefinitionReadList:
      example:
        destinationDefinitions:
        - resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          releaseStage: alpha
          supportsDbt: true
          icon: icon
          name: name
          normalizationConfig:
            normalizationIntegrationType: normalizationIntegrationType
            normalizationRepository: normalizationRepository
            normalizationTag: normalizationTag
            supported: false
          protocolVersion: protocolVersion
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          releaseStage: alpha
          supportsDbt: true
          icon: icon
          name: name
          normalizationConfig:
            normalizationIntegrationType: normalizationIntegrationType
            normalizationRepository: normalizationRepository
            normalizationTag: normalizationTag
            supported: false
          protocolVersion: protocolVersion
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitions:
          items:
            $ref: '#/components/schemas/DestinationDefinitionRead'
          title: destinationDefinitions
          type: array
      required:
      - destinationDefinitions
      title: DestinationDefinitionReadList
      type: object
    DestinationDefinitionSpecification:
      description: The specification for what values are required to configure the
        destinationDefinition.
      example:
        user:
          type: string
      title: connectionSpecification
    DestinationDefinitionSpecificationRead:
      example:
        documentationUrl: documentationUrl
        connectionSpecification:
          user:
            type: string
        supportedDestinationSyncModes:
        - append
        - append
        advancedAuth:
          predicateValue: predicateValue
          oauthConfigSpecification:
            completeOAuthServerOutputSpecification: ""
            completeOAuthServerInputSpecification: ""
            completeOAuthOutputSpecification: ""
            oauthUserInputFromConnectorConfigSpecification: ""
          predicateKey:
          - predicateKey
          - predicateKey
          authFlowType: oauth2.0
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authSpecification:
          auth_type: oauth2.0
          oauth2Specification:
            oauthFlowOutputParameters:
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            rootObject:
            - path
            - 1
            oauthFlowInitParameters:
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
        jobInfo:
          createdAt: 0
          connectorConfigurationUpdated: false
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configType: check_connection_source
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
      properties:
        advancedAuth:
          $ref: '#/components/schemas/AdvancedAuth'
        authSpecification:
          $ref: '#/components/schemas/AuthSpecification'
        connectionSpecification:
          description: The specification for what values are required to configure
            the destinationDefinition.
          example:
            user:
              type: string
          title: connectionSpecification
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        documentationUrl:
          title: documentationUrl
          type: string
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
        supportedDestinationSyncModes:
          items:
            $ref: '#/components/schemas/DestinationSyncMode'
          title: supportedDestinationSyncModes
          type: array
      required:
      - destinationDefinitionId
      - jobInfo
      title: DestinationDefinitionSpecificationRead
      type: object
    DestinationDefinitionUpdate:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
        dockerImageTag: dockerImageTag
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        dockerImageTag:
          title: dockerImageTag
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
      required:
      - destinationDefinitionId
      - dockerImageag
      title: DestinationDefinitionUpdate
      type: object
    DestinationId:
      format: uuid
      title: destinationId
      type: string
    DestinationIdRequestBody:
      example:
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationId:
          format: uuid
          title: destinationId
          type: string
      required:
      - destinationId
      title: DestinationIdRequestBody
      type: object
    DestinationOauthConsentRequest:
      example:
        redirectUrl: redirectUrl
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: ""
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        destinationId:
          format: uuid
          title: destinationId
          type: string
        oAuthInputConfiguration:
          description: The values required to configure OAuth flows. The schema for
            this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
            schema.
          title: OAuthConfiguration
        redirectUrl:
          description: The url to redirect to after getting the user consent
          title: redirectUrl
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - destinationDefinitionId
      - redirectUrl
      - workspaceId
      title: DestinationOauthConsentRequest
      type: object
    DestinationRead:
      example:
        connectionConfiguration:
          user: charles
        destinationName: destinationName
        icon: icon
        name: name
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
          title: DestinationConfiguration
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        destinationId:
          format: uuid
          title: destinationId
          type: string
        destinationName:
          title: destinationName
          type: string
        icon:
          title: icon
          type: string
        name:
          title: name
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - connectionConfiguration
      - destinationDefinitionId
      - destinationId
      - destinationName
      - name
      - workspaceId
      title: DestinationRead
      type: object
    DestinationReadList:
      example:
        destinations:
        - connectionConfiguration:
            user: charles
          destinationName: destinationName
          icon: icon
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - connectionConfiguration:
            user: charles
          destinationName: destinationName
          icon: icon
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinations:
          items:
            $ref: '#/components/schemas/DestinationRead'
          title: destinations
          type: array
      required:
      - destinations
      title: DestinationReadList
      type: object
    DestinationSearch:
      example:
        connectionConfiguration:
          user: charles
        destinationName: destinationName
        name: name
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
          title: DestinationConfiguration
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        destinationId:
          format: uuid
          title: destinationId
          type: string
        destinationName:
          title: destinationName
          type: string
        name:
          title: name
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      title: DestinationSearch
      type: object
    DestinationSnippetRead:
      example:
        destinationName: destinationName
        icon: icon
        name: name
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        destinationId:
          format: uuid
          title: destinationId
          type: string
        destinationName:
          title: destinationName
          type: string
        icon:
          title: icon
          type: string
        name:
          title: name
          type: string
      required:
      - destinationDefinitionId
      - destinationId
      - destinationName
      - name
      title: DestinationSnippetRead
      type: object
    DestinationSyncMode:
      enum:
      - append
      - overwrite
      - append_dedup
      title: DestinationSyncMode
      type: string
    DestinationUpdate:
      example:
        connectionConfiguration:
          user: charles
        name: name
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionConfiguration:
          description: The values required to configure the destination. The schema
            for this must match the schema return by destination_definition_specifications/get
            for the destinationDefinition.
          example:
            user: charles
          title: DestinationConfiguration
        destinationId:
          format: uuid
          title: destinationId
          type: string
        name:
          title: name
          type: string
      required:
      - connectionConfiguration
      - destinationId
      - name
      title: DestinationUpdate
      type: object
    DiscoverCatalogResult:
      example:
        catalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        catalogId:
          format: uuid
          title: catalogId
          type: string
      required:
      - catalogId
      title: DiscoverCatalogResult
      type: object
    FieldAdd:
      example:
        schema: "{}"
      properties:
        schema:
          description: JSONSchema representation of the field
          title: FieldSchema
          type: object
      title: FieldAdd
      type: object
    FieldName:
      description: A field name is a list of strings that form the path to the field.
      items:
        type: string
      title: FieldName
      type: array
    FieldRemove:
      example:
        schema: "{}"
      properties:
        schema:
          description: JSONSchema representation of the field
          title: FieldSchema
          type: object
      title: FieldRemove
      type: object
    FieldSchema:
      description: JSONSchema representation of the field
      title: FieldSchema
      type: object
    FieldSchemaUpdate:
      example:
        oldSchema: "{}"
        newSchema: "{}"
      properties:
        newSchema:
          description: JSONSchema representation of the field
          title: FieldSchema
          type: object
        oldSchema:
          description: JSONSchema representation of the field
          title: FieldSchema
          type: object
      required:
      - newSchema
      - oldSchema
      title: FieldSchemaUpdate
      type: object
    FieldTransform:
      description: Describes the difference between two Streams.
      example:
        updateFieldSchema:
          oldSchema: "{}"
          newSchema: "{}"
        fieldName:
        - fieldName
        - fieldName
        addField:
          schema: "{}"
        transformType: add_field
        removeField:
          schema: "{}"
        breaking: true
      properties:
        addField:
          $ref: '#/components/schemas/FieldAdd'
        breaking:
          title: breaking
          type: boolean
        fieldName:
          description: A field name is a list of strings that form the path to the
            field.
          items:
            type: string
          title: FieldName
          type: array
        removeField:
          $ref: '#/components/schemas/FieldRemove'
        transformType:
          enum:
          - add_field
          - remove_field
          - update_field_schema
          title: transformType
          type: string
        updateFieldSchema:
          $ref: '#/components/schemas/FieldSchemaUpdate'
      required:
      - breaking
      - fieldName
      - transformType
      title: FieldTransform
      type: object
    Geography:
      enum:
      - auto
      - us
      - eu
      title: Geography
      type: string
    GlobalState:
      example:
        shared_state: "{}"
        streamStates:
        - streamDescriptor:
            name: name
            namespace: namespace
          streamState: "{}"
        - streamDescriptor:
            name: name
            namespace: namespace
          streamState: "{}"
      properties:
        shared_state:
          title: StateBlob
          type: object
        streamStates:
          items:
            $ref: '#/components/schemas/StreamState'
          title: streamStates
          type: array
      required:
      - streamStates
      title: GlobalState
      type: object
    HealthCheckRead:
      example:
        available: true
      properties:
        available:
          title: available
          type: boolean
      required:
      - available
      title: HealthCheckRead
      type: object
    ImportRead:
      properties:
        reason:
          type: string
        status:
          enum:
          - succeeded
          - failed
          type: string
      required:
      - status
      type: object
    ImportRequestBody:
      properties:
        resourceId:
          format: uuid
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - resourceId
      - workspaceId
      type: object
    InternalOperationResult:
      example:
        succeeded: true
      properties:
        succeeded:
          title: succeeded
          type: boolean
      required:
      - succeeded
      title: InternalOperationResult
      type: object
    InvalidInputExceptionInfo:
      example:
        exceptionStack:
        - exceptionStack
        - exceptionStack
        validationErrors:
        - message: message
          propertyPath: propertyPath
          invalidValue: invalidValue
        - message: message
          propertyPath: propertyPath
          invalidValue: invalidValue
        exceptionClassName: exceptionClassName
        message: message
      properties:
        exceptionClassName:
          title: exceptionClassName
          type: string
        exceptionStack:
          items:
            type: string
          title: exceptionStack
          type: array
        message:
          title: message
          type: string
        validationErrors:
          items:
            $ref: '#/components/schemas/InvalidInputProperty'
          title: validationErrors
          type: array
      required:
      - message
      - validationErrors
      title: InvalidInputExceptionInfo
      type: object
    InvalidInputProperty:
      example:
        message: message
        propertyPath: propertyPath
        invalidValue: invalidValue
      properties:
        invalidValue:
          title: invalidValue
          type: string
        message:
          title: message
          type: string
        propertyPath:
          title: propertyPath
          type: string
      required:
      - propertyPath
      title: InvalidInputProperty
      type: object
    JobConfigType:
      enum:
      - check_connection_source
      - check_connection_destination
      - discover_schema
      - get_spec
      - sync
      - reset_connection
      title: JobConfigType
      type: string
    JobCreatedAt:
      description: epoch time of the latest sync job. null if no sync job has taken
        place.
      format: int64
      title: latestSyncJobCreatedAt
      type: integer
    JobDebugInfoRead:
      example:
        workflowState:
          running: true
        job:
          configId: configId
          sourceDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            sourceType: api
            dockerRepository: dockerRepository
            releaseStage: alpha
            icon: icon
            name: name
            protocolVersion: protocolVersion
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          airbyteVersion: airbyteVersion
          id: 0
          configType: check_connection_source
          destinationDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            dockerRepository: dockerRepository
            releaseStage: alpha
            supportsDbt: true
            icon: icon
            name: name
            normalizationConfig:
              normalizationIntegrationType: normalizationIntegrationType
              normalizationRepository: normalizationRepository
              normalizationTag: normalizationTag
              supported: false
            protocolVersion: protocolVersion
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: pending
        attempts:
        - attempt:
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              partialSuccess: true
            totalStats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            createdAt: 6
            bytesSynced: 0
            endedAt: 1
            streamStats:
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: running
            updatedAt: 7
          logs:
            logLines:
            - logLines
            - logLines
        - attempt:
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              partialSuccess: true
            totalStats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            createdAt: 6
            bytesSynced: 0
            endedAt: 1
            streamStats:
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: running
            updatedAt: 7
          logs:
            logLines:
            - logLines
            - logLines
      properties:
        attempts:
          items:
            $ref: '#/components/schemas/AttemptInfoRead'
          title: attempts
          type: array
        job:
          $ref: '#/components/schemas/JobDebugRead'
        workflowState:
          $ref: '#/components/schemas/WorkflowStateRead'
      required:
      - attempts
      - job
      title: JobDebugInfoRead
      type: object
    JobDebugRead:
      example:
        configId: configId
        sourceDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          sourceType: api
          dockerRepository: dockerRepository
          releaseStage: alpha
          icon: icon
          name: name
          protocolVersion: protocolVersion
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        airbyteVersion: airbyteVersion
        id: 0
        configType: check_connection_source
        destinationDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          releaseStage: alpha
          supportsDbt: true
          icon: icon
          name: name
          normalizationConfig:
            normalizationIntegrationType: normalizationIntegrationType
            normalizationRepository: normalizationRepository
            normalizationTag: normalizationTag
            supported: false
          protocolVersion: protocolVersion
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: pending
      properties:
        airbyteVersion:
          title: airbyteVersion
          type: string
        configId:
          title: configId
          type: string
        configType:
          $ref: '#/components/schemas/JobConfigType'
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionRead'
        id:
          format: int64
          title: JobId
          type: integer
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionRead'
        status:
          $ref: '#/components/schemas/JobStatus'
      required:
      - airbyteVersion
      - configId
      - configType
      - destinationDefinition
      - id
      - sourceDefinition
      - status
      title: JobDebugRead
      type: object
    JobId:
      format: int64
      title: JobId
      type: integer
    JobIdRequestBody:
      example:
        id: 0
      properties:
        id:
          format: int64
          title: JobId
          type: integer
      required:
      - id
      title: JobIdRequestBody
      type: object
    JobInfoLightRead:
      example:
        job:
          createdAt: 9
          configId: configId
          startedAt: 2
          id: 3
          configType: check_connection_source
          resetConfig:
            streamsToReset:
            - name: name
              namespace: namespace
            - name: name
              namespace: namespace
          status: pending
          updatedAt: 4
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
      required:
      - job
      title: JobInfoLightRead
      type: object
    JobInfoRead:
      example:
        job:
          createdAt: 9
          configId: configId
          startedAt: 2
          id: 3
          configType: check_connection_source
          resetConfig:
            streamsToReset:
            - name: name
              namespace: namespace
            - name: name
              namespace: namespace
          status: pending
          updatedAt: 4
        attempts:
        - attempt:
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              partialSuccess: true
            totalStats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            createdAt: 6
            bytesSynced: 0
            endedAt: 1
            streamStats:
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: running
            updatedAt: 7
          logs:
            logLines:
            - logLines
            - logLines
        - attempt:
            failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              partialSuccess: true
            totalStats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            createdAt: 6
            bytesSynced: 0
            endedAt: 1
            streamStats:
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: running
            updatedAt: 7
          logs:
            logLines:
            - logLines
            - logLines
      properties:
        attempts:
          items:
            $ref: '#/components/schemas/AttemptInfoRead'
          title: attempts
          type: array
        job:
          $ref: '#/components/schemas/JobRead'
      required:
      - attempts
      - job
      title: JobInfoRead
      type: object
    JobListRequestBody:
      example:
        includingJobId: 0
        pagination:
          rowOffset: 1
          pageSize: 6
        configTypes:
        - check_connection_source
        - check_connection_source
        configId: configId
      properties:
        configId:
          title: configId
          type: string
        configTypes:
          items:
            $ref: '#/components/schemas/JobConfigType'
          title: configTypes
          type: array
        includingJobId:
          format: int64
          title: JobId
          type: integer
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - configId
      - configTypes
      title: JobListRequestBody
      type: object
    JobOptionalRead:
      example:
        job:
          createdAt: 9
          configId: configId
          startedAt: 2
          id: 3
          configType: check_connection_source
          resetConfig:
            streamsToReset:
            - name: name
              namespace: namespace
            - name: name
              namespace: namespace
          status: pending
          updatedAt: 4
      properties:
        job:
          $ref: '#/components/schemas/JobRead'
      title: JobOptionalRead
      type: object
    JobRead:
      example:
        createdAt: 9
        configId: configId
        startedAt: 2
        id: 3
        configType: check_connection_source
        resetConfig:
          streamsToReset:
          - name: name
            namespace: namespace
          - name: name
            namespace: namespace
        status: pending
        updatedAt: 4
      properties:
        configId:
          title: configId
          type: string
        configType:
          $ref: '#/components/schemas/JobConfigType'
        createdAt:
          format: int64
          title: createdAt
          type: integer
        id:
          format: int64
          title: JobId
          type: integer
        resetConfig:
          $ref: '#/components/schemas/ResetConfig'
        startedAt:
          format: int64
          title: startedAt
          type: integer
        status:
          $ref: '#/components/schemas/JobStatus'
        updatedAt:
          format: int64
          title: updatedAt
          type: integer
      required:
      - configId
      - configType
      - createdAt
      - id
      - status
      - updatedAt
      title: JobRead
      type: object
    JobReadList:
      example:
        totalJobCount: 0
        jobs:
        - job:
            createdAt: 9
            configId: configId
            startedAt: 2
            id: 3
            configType: check_connection_source
            resetConfig:
              streamsToReset:
              - name: name
                namespace: namespace
              - name: name
                namespace: namespace
            status: pending
            updatedAt: 4
          attempts:
          - failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              partialSuccess: true
            totalStats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            createdAt: 6
            bytesSynced: 0
            endedAt: 1
            streamStats:
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: running
            updatedAt: 7
          - failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              partialSuccess: true
            totalStats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            createdAt: 6
            bytesSynced: 0
            endedAt: 1
            streamStats:
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: running
            updatedAt: 7
        - job:
            createdAt: 9
            configId: configId
            startedAt: 2
            id: 3
            configType: check_connection_source
            resetConfig:
              streamsToReset:
              - name: name
                namespace: namespace
              - name: name
                namespace: namespace
            status: pending
            updatedAt: 4
          attempts:
          - failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              partialSuccess: true
            totalStats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            createdAt: 6
            bytesSynced: 0
            endedAt: 1
            streamStats:
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: running
            updatedAt: 7
          - failureSummary:
              failures:
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              - retryable: true
                stacktrace: stacktrace
                failureOrigin: source
                failureType: config_error
                internalMessage: internalMessage
                externalMessage: externalMessage
                timestamp: 5
              partialSuccess: true
            totalStats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            createdAt: 6
            bytesSynced: 0
            endedAt: 1
            streamStats:
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            - stats:
                recordsCommitted: 2
                stateMessagesEmitted: 9
                bytesEmitted: 1
                estimatedBytes: 5
                estimatedRecords: 5
                recordsEmitted: 7
              streamNamespace: streamNamespace
              streamName: streamName
            id: 5
            recordsSynced: 2
            status: running
            updatedAt: 7
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/JobWithAttemptsRead'
          title: jobs
          type: array
        totalJobCount:
          description: the total count of jobs for the specified connection
          format: int64
          title: totalJobCount
          type: integer
      required:
      - jobs
      - totalJobCount
      title: JobReadList
      type: object
    JobStatus:
      enum:
      - pending
      - running
      - incomplete
      - failed
      - succeeded
      - cancelled
      title: JobStatus
      type: string
    JobType:
      description: enum that describes the different types of jobs that the platform
        runs.
      enum:
      - get_spec
      - check_connection
      - discover_schema
      - sync
      - reset_connection
      - connection_updater
      - replicate
      title: JobType
      type: string
    JobTypeResourceLimit:
      additionalProperties: false
      description: "sets resource requirements for a specific job type for an actor\
        \ definition. these values override the default, if both are set."
      example:
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        jobType: get_spec
      properties:
        jobType:
          $ref: '#/components/schemas/JobType'
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
      required:
      - jobType
      - resourceRequirements
      title: JobTypeResourceLimit
      type: object
    JobWithAttemptsRead:
      example:
        job:
          createdAt: 9
          configId: configId
          startedAt: 2
          id: 3
          configType: check_connection_source
          resetConfig:
            streamsToReset:
            - name: name
              namespace: namespace
            - name: name
              namespace: namespace
          status: pending
          updatedAt: 4
        attempts:
        - failureSummary:
            failures:
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: source
              failureType: config_error
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 5
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: source
              failureType: config_error
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 5
            partialSuccess: true
          totalStats:
            recordsCommitted: 2
            stateMessagesEmitted: 9
            bytesEmitted: 1
            estimatedBytes: 5
            estimatedRecords: 5
            recordsEmitted: 7
          createdAt: 6
          bytesSynced: 0
          endedAt: 1
          streamStats:
          - stats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            streamNamespace: streamNamespace
            streamName: streamName
          - stats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            streamNamespace: streamNamespace
            streamName: streamName
          id: 5
          recordsSynced: 2
          status: running
          updatedAt: 7
        - failureSummary:
            failures:
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: source
              failureType: config_error
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 5
            - retryable: true
              stacktrace: stacktrace
              failureOrigin: source
              failureType: config_error
              internalMessage: internalMessage
              externalMessage: externalMessage
              timestamp: 5
            partialSuccess: true
          totalStats:
            recordsCommitted: 2
            stateMessagesEmitted: 9
            bytesEmitted: 1
            estimatedBytes: 5
            estimatedRecords: 5
            recordsEmitted: 7
          createdAt: 6
          bytesSynced: 0
          endedAt: 1
          streamStats:
          - stats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            streamNamespace: streamNamespace
            streamName: streamName
          - stats:
              recordsCommitted: 2
              stateMessagesEmitted: 9
              bytesEmitted: 1
              estimatedBytes: 5
              estimatedRecords: 5
              recordsEmitted: 7
            streamNamespace: streamNamespace
            streamName: streamName
          id: 5
          recordsSynced: 2
          status: running
          updatedAt: 7
      properties:
        attempts:
          items:
            $ref: '#/components/schemas/AttemptRead'
          title: attempts
          type: array
        job:
          $ref: '#/components/schemas/JobRead'
      title: JobWithAttemptsRead
      type: object
    KnownExceptionInfo:
      example:
        exceptionStack:
        - exceptionStack
        - exceptionStack
        rootCauseExceptionStack:
        - rootCauseExceptionStack
        - rootCauseExceptionStack
        rootCauseExceptionClassName: rootCauseExceptionClassName
        exceptionClassName: exceptionClassName
        message: message
      properties:
        exceptionClassName:
          title: exceptionClassName
          type: string
        exceptionStack:
          items:
            type: string
          title: exceptionStack
          type: array
        message:
          title: message
          type: string
        rootCauseExceptionClassName:
          title: rootCauseExceptionClassName
          type: string
        rootCauseExceptionStack:
          items:
            type: string
          title: rootCauseExceptionStack
          type: array
      required:
      - message
      title: KnownExceptionInfo
      type: object
    LogRead:
      example:
        logLines:
        - logLines
        - logLines
      properties:
        logLines:
          items:
            type: string
          title: logLines
          type: array
      required:
      - logLines
      title: LogRead
      type: object
    LogType:
      description: type/source of logs produced
      enum:
      - server
      - scheduler
      title: LogType
      type: string
    LogsRequestBody:
      example:
        logType: server
      properties:
        logType:
          $ref: '#/components/schemas/LogType'
      required:
      - logType
      title: LogsRequestBody
      type: object
    NamespaceDefinitionType:
      description: Method used for computing final namespace in destination
      enum:
      - source
      - destination
      - customformat
      title: NamespaceDefinitionType
      type: string
    NonBreakingChangesPreference:
      enum:
      - ignore
      - disable
      title: NonBreakingChangesPreference
      type: string
    NormalizationDestinationDefinitionConfig:
      additionalProperties: false
      description: describes a normalization config for destination definition
      example:
        normalizationIntegrationType: normalizationIntegrationType
        normalizationRepository: normalizationRepository
        normalizationTag: normalizationTag
        supported: false
      properties:
        normalizationIntegrationType:
          description: a field indicating the type of integration dialect to use for
            normalization.
          title: normalizationIntegrationType
          type: string
        normalizationRepository:
          description: a field indicating the name of the repository to be used for
            normalization. If the value of the flag is NULL - normalization is not
            used.
          title: normalizationRepository
          type: string
        normalizationTag:
          description: a field indicating the tag of the docker repository to be used
            for normalization.
          title: normalizationTag
          type: string
        supported:
          default: false
          description: whether the destination definition supports normalization.
          title: supported
          type: boolean
      required:
      - supported
      title: NormalizationDestinationDefinitionConfig
      type: object
    NotFoundKnownExceptionInfo:
      example:
        exceptionStack:
        - exceptionStack
        - exceptionStack
        rootCauseExceptionStack:
        - rootCauseExceptionStack
        - rootCauseExceptionStack
        rootCauseExceptionClassName: rootCauseExceptionClassName
        exceptionClassName: exceptionClassName
        id: id
        message: message
      properties:
        exceptionClassName:
          title: exceptionClassName
          type: string
        exceptionStack:
          items:
            type: string
          title: exceptionStack
          type: array
        id:
          title: id
          type: string
        message:
          title: message
          type: string
        rootCauseExceptionClassName:
          title: rootCauseExceptionClassName
          type: string
        rootCauseExceptionStack:
          items:
            type: string
          title: rootCauseExceptionStack
          type: array
      required:
      - message
      title: NotFoundKnownExceptionInfo
      type: object
    Notification:
      example:
        slackConfiguration:
          webhook: webhook
        customerioConfiguration: "{}"
        sendOnFailure: true
        sendOnSuccess: false
        notificationType: slack
      properties:
        customerioConfiguration:
          title: customerioConfiguration
          type: object
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        sendOnFailure:
          default: true
          title: sendOnFailure
          type: boolean
        sendOnSuccess:
          default: false
          title: sendOnSuccess
          type: boolean
        slackConfiguration:
          $ref: '#/components/schemas/SlackNotificationConfiguration'
      required:
      - notificationType
      - sendOnFailure
      - sendOnSuccess
      title: Notification
      type: object
    NotificationRead:
      example:
        message: message
        status: succeeded
      properties:
        message:
          title: message
          type: string
        status:
          enum:
          - succeeded
          - failed
          title: status
          type: string
      required:
      - status
      title: NotificationRead
      type: object
    NotificationType:
      enum:
      - slack
      - customerio
      title: NotificationType
      type: string
    OAuth2Specification:
      description: An object containing any metadata needed to describe this connector's
        Oauth flow
      example:
        oauthFlowOutputParameters:
        - - oauthFlowOutputParameters
          - oauthFlowOutputParameters
        - - oauthFlowOutputParameters
          - oauthFlowOutputParameters
        rootObject:
        - path
        - 1
        oauthFlowInitParameters:
        - - oauthFlowInitParameters
          - oauthFlowInitParameters
        - - oauthFlowInitParameters
          - oauthFlowInitParameters
      properties:
        oauthFlowInitParameters:
          description: "Pointers to the fields in the rootObject needed to obtain\
            \ the initial refresh/access tokens for the OAuth flow. Each inner array\
            \ represents the path in the rootObject of the referenced field. For example.\
            \ Assume the rootObject contains params 'app_secret', 'app_id' which are\
            \ needed to get the initial refresh token. If they are not nested in the\
            \ rootObject, then the array would look like this [['app_secret'], ['app_id']]\
            \ If they are nested inside an object called 'auth_params' then this array\
            \ would be [['auth_params', 'app_secret'], ['auth_params', 'app_id']]"
          items:
            description: A list of strings denoting a pointer into the rootObject
              for where to find this property
            items:
              type: string
            type: array
          title: oauthFlowInitParameters
          type: array
        oauthFlowOutputParameters:
          description: Pointers to the fields in the rootObject which can be populated
            from successfully completing the oauth flow using the init parameters.
            This is typically a refresh/access token. Each inner array represents
            the path in the rootObject of the referenced field.
          items:
            description: A list of strings denoting a pointer into the rootObject
              for where to find this property
            items:
              type: string
            type: array
          title: oauthFlowOutputParameters
          type: array
        rootObject:
          description: "A list of strings representing a pointer to the root object\
            \ which contains any oauth parameters in the ConnectorSpecification.\n\
            Examples:\nif oauth parameters were contained inside the top level, rootObject=[]\
            \ If they were nested inside another object {'credentials': {'app_id'\
            \ etc...}, rootObject=['credentials'] If they were inside a oneOf {'switch':\
            \ {oneOf: [{client_id...}, {non_oauth_param]}},  rootObject=['switch',\
            \ 0] "
          example:
          - path
          - 1
          items: {}
          title: rootObject
          type: array
      required:
      - oauthFlowInitParameters
      - oauthFlowOutputParameters
      - rootObject
      title: OAuth2Specification
      type: object
    OAuthConfigSpecification:
      example:
        completeOAuthServerOutputSpecification: ""
        completeOAuthServerInputSpecification: ""
        completeOAuthOutputSpecification: ""
        oauthUserInputFromConnectorConfigSpecification: ""
      properties:
        completeOAuthOutputSpecification:
          description: The values required to configure OAuth flows. The schema for
            this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
            schema.
          title: OAuthConfiguration
        completeOAuthServerInputSpecification:
          description: The values required to configure OAuth flows. The schema for
            this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
            schema.
          title: OAuthConfiguration
        completeOAuthServerOutputSpecification:
          description: The values required to configure OAuth flows. The schema for
            this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
            schema.
          title: OAuthConfiguration
        oauthUserInputFromConnectorConfigSpecification:
          description: The values required to configure OAuth flows. The schema for
            this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
            schema.
          title: OAuthConfiguration
      title: OAuthConfigSpecification
      type: object
    OAuthConfiguration:
      description: The values required to configure OAuth flows. The schema for this
        must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
        schema.
      title: OAuthConfiguration
    OAuthConsentRead:
      example:
        consentUrl: consentUrl
      properties:
        consentUrl:
          title: consentUrl
          type: string
      required:
      - consentUrl
      title: OAuthConsentRead
      type: object
    OAuthInputConfiguration:
      $ref: '#/components/schemas/OAuthConfiguration'
    OperationCreate:
      example:
        name: name
        operatorConfiguration:
          webhook:
            webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            dbtCloud:
              accountId: 0
              jobId: 6
            executionUrl: executionUrl
            executionBody: executionBody
            webhookType: dbtCloud
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
          operatorType: normalization
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          title: name
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - name
      - operatorConfiguration
      - workspaceId
      title: OperationCreate
      type: object
    OperationId:
      format: uuid
      title: OperationId
      type: string
    OperationIdRequestBody:
      example:
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        operationId:
          format: uuid
          title: OperationId
          type: string
      required:
      - operationId
      title: OperationIdRequestBody
      type: object
    OperationRead:
      example:
        name: name
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operatorConfiguration:
          webhook:
            webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            dbtCloud:
              accountId: 0
              jobId: 6
            executionUrl: executionUrl
            executionBody: executionBody
            webhookType: dbtCloud
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
          operatorType: normalization
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          title: name
          type: string
        operationId:
          format: uuid
          title: OperationId
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - name
      - operationId
      - operatorConfiguration
      - workspaceId
      title: OperationRead
      type: object
    OperationReadList:
      example:
        operations:
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: normalization
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: normalization
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        operations:
          items:
            $ref: '#/components/schemas/OperationRead'
          title: operations
          type: array
      required:
      - operations
      title: OperationReadList
      type: object
    OperationUpdate:
      example:
        name: name
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operatorConfiguration:
          webhook:
            webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            dbtCloud:
              accountId: 0
              jobId: 6
            executionUrl: executionUrl
            executionBody: executionBody
            webhookType: dbtCloud
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
          operatorType: normalization
      properties:
        name:
          title: name
          type: string
        operationId:
          format: uuid
          title: OperationId
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
      required:
      - name
      - operationId
      - operatorConfiguration
      title: OperationUpdate
      type: object
    OperatorConfiguration:
      example:
        webhook:
          webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          dbtCloud:
            accountId: 0
            jobId: 6
          executionUrl: executionUrl
          executionBody: executionBody
          webhookType: dbtCloud
        normalization:
          option: basic
        dbt:
          gitRepoBranch: gitRepoBranch
          dockerImage: dockerImage
          dbtArguments: dbtArguments
          gitRepoUrl: gitRepoUrl
        operatorType: normalization
      properties:
        dbt:
          $ref: '#/components/schemas/OperatorDbt'
        normalization:
          $ref: '#/components/schemas/OperatorNormalization'
        operatorType:
          $ref: '#/components/schemas/OperatorType'
        webhook:
          $ref: '#/components/schemas/OperatorWebhook'
      required:
      - operatorType
      title: OperatorConfiguration
      type: object
    OperatorDbt:
      example:
        gitRepoBranch: gitRepoBranch
        dockerImage: dockerImage
        dbtArguments: dbtArguments
        gitRepoUrl: gitRepoUrl
      properties:
        dbtArguments:
          title: dbtArguments
          type: string
        dockerImage:
          title: dockerImage
          type: string
        gitRepoBranch:
          title: gitRepoBranch
          type: string
        gitRepoUrl:
          title: gitRepoUrl
          type: string
      required:
      - gitRepoUrl
      title: OperatorDbt
      type: object
    OperatorNormalization:
      example:
        option: basic
      properties:
        option:
          enum:
          - basic
          title: option
          type: string
      title: OperatorNormalization
      type: object
    OperatorType:
      enum:
      - normalization
      - dbt
      - webhook
      title: OperatorType
      type: string
    OperatorWebhook:
      example:
        webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        dbtCloud:
          accountId: 0
          jobId: 6
        executionUrl: executionUrl
        executionBody: executionBody
        webhookType: dbtCloud
      properties:
        dbtCloud:
          $ref: '#/components/schemas/OperatorWebhook_dbtCloud'
        executionBody:
          deprecated: true
          description: DEPRECATED. Populate dbtCloud instead.
          title: executionBody
          type: string
        executionUrl:
          deprecated: true
          description: DEPRECATED. Populate dbtCloud instead.
          title: executionUrl
          type: string
        webhookConfigId:
          description: The id of the webhook configs to use from the workspace.
          format: uuid
          title: webhookConfigId
          type: string
        webhookType:
          enum:
          - dbtCloud
          title: webhookType
          type: string
      title: OperatorWebhook
      type: object
    Pagination:
      example:
        rowOffset: 1
        pageSize: 6
      properties:
        pageSize:
          title: pageSize
          type: integer
        rowOffset:
          title: rowOffset
          type: integer
      title: Pagination
      type: object
    PrivateDestinationDefinitionRead:
      example:
        destinationDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          dockerRepository: dockerRepository
          releaseStage: alpha
          supportsDbt: true
          icon: icon
          name: name
          normalizationConfig:
            normalizationIntegrationType: normalizationIntegrationType
            normalizationRepository: normalizationRepository
            normalizationTag: normalizationTag
            supported: false
          protocolVersion: protocolVersion
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        granted: true
      properties:
        destinationDefinition:
          $ref: '#/components/schemas/DestinationDefinitionRead'
        granted:
          title: granted
          type: boolean
      required:
      - destinationDefinition
      - granted
      title: PrivateDestinationDefinitionRead
      type: object
    PrivateDestinationDefinitionReadList:
      example:
        destinationDefinitions:
        - destinationDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            dockerRepository: dockerRepository
            releaseStage: alpha
            supportsDbt: true
            icon: icon
            name: name
            normalizationConfig:
              normalizationIntegrationType: normalizationIntegrationType
              normalizationRepository: normalizationRepository
              normalizationTag: normalizationTag
              supported: false
            protocolVersion: protocolVersion
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          granted: true
        - destinationDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            dockerRepository: dockerRepository
            releaseStage: alpha
            supportsDbt: true
            icon: icon
            name: name
            normalizationConfig:
              normalizationIntegrationType: normalizationIntegrationType
              normalizationRepository: normalizationRepository
              normalizationTag: normalizationTag
              supported: false
            protocolVersion: protocolVersion
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          granted: true
      properties:
        destinationDefinitions:
          items:
            $ref: '#/components/schemas/PrivateDestinationDefinitionRead'
          title: destinationDefinitions
          type: array
      required:
      - destinationDefinitions
      title: PrivateDestinationDefinitionReadList
      type: object
    PrivateSourceDefinitionRead:
      example:
        sourceDefinition:
          resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          sourceType: api
          dockerRepository: dockerRepository
          releaseStage: alpha
          icon: icon
          name: name
          protocolVersion: protocolVersion
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        granted: true
      properties:
        granted:
          title: granted
          type: boolean
        sourceDefinition:
          $ref: '#/components/schemas/SourceDefinitionRead'
      required:
      - granted
      - sourceDefinition
      title: PrivateSourceDefinitionRead
      type: object
    PrivateSourceDefinitionReadList:
      example:
        sourceDefinitions:
        - sourceDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            sourceType: api
            dockerRepository: dockerRepository
            releaseStage: alpha
            icon: icon
            name: name
            protocolVersion: protocolVersion
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          granted: true
        - sourceDefinition:
            resourceRequirements:
              default:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobSpecific:
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
              - resourceRequirements:
                  cpu_limit: cpu_limit
                  memory_request: memory_request
                  memory_limit: memory_limit
                  cpu_request: cpu_request
                jobType: get_spec
            documentationUrl: https://openapi-generator.tech
            dockerImageTag: dockerImageTag
            releaseDate: 2000-01-23
            sourceType: api
            dockerRepository: dockerRepository
            releaseStage: alpha
            icon: icon
            name: name
            protocolVersion: protocolVersion
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          granted: true
      properties:
        sourceDefinitions:
          items:
            $ref: '#/components/schemas/PrivateSourceDefinitionRead'
          title: sourceDefinitions
          type: array
      required:
      - sourceDefinitions
      title: PrivateSourceDefinitionReadList
      type: object
    ReleaseStage:
      enum:
      - alpha
      - beta
      - generally_available
      - custom
      title: ReleaseStage
      type: string
    ResetConfig:
      description: contains information about how a reset was configured. only populated
        if the job was a reset.
      example:
        streamsToReset:
        - name: name
          namespace: namespace
        - name: name
          namespace: namespace
      properties:
        streamsToReset:
          items:
            $ref: '#/components/schemas/StreamDescriptor'
          title: streamsToReset
          type: array
      title: ResetConfig
      type: object
    ResourceId:
      format: uuid
      type: string
    ResourceRequirements:
      description: optional resource requirements to run workers (blank for unbounded
        allocations)
      example:
        cpu_limit: cpu_limit
        memory_request: memory_request
        memory_limit: memory_limit
        cpu_request: cpu_request
      properties:
        cpu_limit:
          title: cpu_limit
          type: string
        cpu_request:
          title: cpu_request
          type: string
        memory_limit:
          title: memory_limit
          type: string
        memory_request:
          title: memory_request
          type: string
      title: ResourceRequirements
      type: object
    SaveAttemptSyncConfigRequestBody:
      example:
        attemptNumber: 0
        jobId: 6
        syncConfig:
          destinationConfiguration:
            user: charles
          sourceConfiguration:
            user: charles
          state:
            globalState:
              shared_state: "{}"
              streamStates:
              - streamDescriptor:
                  name: name
                  namespace: namespace
                streamState: "{}"
              - streamDescriptor:
                  name: name
                  namespace: namespace
                streamState: "{}"
            stateType: global
            connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            streamState:
            - streamDescriptor:
                name: name
                namespace: namespace
              streamState: "{}"
            - streamDescriptor:
                name: name
                namespace: namespace
              streamState: "{}"
            state: "{}"
      properties:
        attemptNumber:
          format: int32
          title: attemptNumber
          type: integer
        jobId:
          format: int64
          title: JobId
          type: integer
        syncConfig:
          $ref: '#/components/schemas/AttemptSyncConfig'
      required:
      - attemptNumber
      - jobId
      - syncConfig
      title: SaveAttemptSyncConfigRequestBody
      type: object
    SaveStatsRequestBody:
      example:
        attemptNumber: 0
        jobId: 6
        stats:
          recordsCommitted: 2
          stateMessagesEmitted: 9
          bytesEmitted: 1
          estimatedBytes: 5
          estimatedRecords: 5
          recordsEmitted: 7
        streamStats:
        - stats:
            recordsCommitted: 2
            stateMessagesEmitted: 9
            bytesEmitted: 1
            estimatedBytes: 5
            estimatedRecords: 5
            recordsEmitted: 7
          streamNamespace: streamNamespace
          streamName: streamName
        - stats:
            recordsCommitted: 2
            stateMessagesEmitted: 9
            bytesEmitted: 1
            estimatedBytes: 5
            estimatedRecords: 5
            recordsEmitted: 7
          streamNamespace: streamNamespace
          streamName: streamName
      properties:
        attemptNumber:
          format: int32
          title: attemptNumber
          type: integer
        jobId:
          format: int64
          title: JobId
          type: integer
        stats:
          $ref: '#/components/schemas/AttemptStats'
        streamStats:
          items:
            $ref: '#/components/schemas/AttemptStreamStats'
          title: streamStats
          type: array
      required:
      - attemptNumber
      - jobId
      - stats
      title: SaveStatsRequestBody
      type: object
    SchemaChange:
      enum:
      - no_change
      - non_breaking
      - breaking
      title: SchemaChange
      type: string
    SelectedFieldInfo:
      description: "Path to a field/column/property in a stream to be selected. For\
        \ example, if the field to be selected is a database column called \"foo\"\
        , this will be [\"foo\"]. Use multiple path elements for nested schemas."
      example:
        fieldPath:
        - fieldPath
        - fieldPath
      properties:
        fieldPath:
          items:
            type: string
          title: fieldPath
          type: array
      title: SelectedFieldInfo
      type: object
    SetInstancewideDestinationOauthParamsRequestBody:
      example:
        destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        params:
          key: ""
      properties:
        destinationDefinitionId:
          format: uuid
          title: DestinationDefinitionId
          type: string
        params:
          additionalProperties: true
          title: params
          type: object
      required:
      - destinationDefinitionId
      - params
      title: SetInstancewideDestinationOauthParamsRequestBody
      type: object
    SetInstancewideSourceOauthParamsRequestBody:
      example:
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        params:
          key: ""
      properties:
        params:
          additionalProperties: true
          title: params
          type: object
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
      required:
      - params
      - sourceDefinitionId
      title: SetInstancewideSourceOauthParamsRequestBody
      type: object
    SetWorkflowInAttemptRequestBody:
      example:
        attemptNumber: 0
        jobId: 6
        processingTaskQueue: ""
        workflowId: workflowId
      properties:
        attemptNumber:
          format: int32
          title: attemptNumber
          type: integer
        jobId:
          format: int64
          title: JobId
          type: integer
        processingTaskQueue:
          default: ""
          title: processingTaskQueue
          type: string
        workflowId:
          title: workflowId
          type: string
      required:
      - attemptNumber
      - jobId
      - workflowId
      title: SetWorkflowInAttemptRequestBody
      type: object
    SlackNotificationConfiguration:
      example:
        webhook: webhook
      properties:
        webhook:
          title: webhook
          type: string
      required:
      - webhook
      title: SlackNotificationConfiguration
      type: object
    SlugRequestBody:
      example:
        slug: slug
      properties:
        slug:
          title: slug
          type: string
      required:
      - slug
      title: SlugRequestBody
      type: object
    SourceAuthSpecification:
      $ref: '#/components/schemas/AuthSpecification'
    SourceCloneConfiguration:
      example:
        connectionConfiguration:
          user: charles
        name: name
      properties:
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
          title: SourceConfiguration
        name:
          title: name
          type: string
      title: SourceCloneConfiguration
      type: object
    SourceCloneRequestBody:
      description: The values required to configure the source. The schema for this
        should have an id of the existing source along with the configuration you
        want to change in case.
      example:
        sourceConfiguration:
          connectionConfiguration:
            user: charles
          name: name
        sourceCloneId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceCloneId:
          format: uuid
          title: sourceId
          type: string
        sourceConfiguration:
          $ref: '#/components/schemas/SourceCloneConfiguration'
      required:
      - sourceCloneId
      title: SourceCloneRequestBody
      type: object
    SourceConfiguration:
      description: The values required to configure the source. The schema for this
        must match the schema return by source_definition_specifications/get for the
        source.
      example:
        user: charles
      title: SourceConfiguration
    SourceCoreConfig:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
          title: SourceConfiguration
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - connectionConfiguration
      - sourceDefinitionId
      - workspaceId
      title: SourceCoreConfig
      type: object
    SourceCreate:
      example:
        connectionConfiguration:
          user: charles
        name: name
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
          title: SourceConfiguration
        name:
          title: name
          type: string
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - connectionConfiguration
      - name
      - sourceDefinitionId
      - workspaceId
      title: SourceCreate
      type: object
    SourceDefinitionCreate:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        dockerRepository: dockerRepository
        icon: icon
        name: name
      properties:
        dockerImageTag:
          title: dockerImageTag
          type: string
        dockerRepository:
          title: dockerRepository
          type: string
        documentationUrl:
          format: uri
          title: documentationUrl
          type: string
        icon:
          title: icon
          type: string
        name:
          title: name
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
      required:
      - dockerImageTag
      - dockerRepository
      - documentationUrl
      - name
      title: SourceDefinitionCreate
      type: object
    SourceDefinitionId:
      format: uuid
      title: SourceDefinitionId
      type: string
    SourceDefinitionIdRequestBody:
      example:
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
      required:
      - sourceDefinitionId
      title: SourceDefinitionIdRequestBody
      type: object
    SourceDefinitionIdWithWorkspaceId:
      example:
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - sourceDefinitionId
      - workspaceId
      title: SourceDefinitionIdWithWorkspaceId
      type: object
    SourceDefinitionRead:
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
        documentationUrl: https://openapi-generator.tech
        dockerImageTag: dockerImageTag
        releaseDate: 2000-01-23
        sourceType: api
        dockerRepository: dockerRepository
        releaseStage: alpha
        icon: icon
        name: name
        protocolVersion: protocolVersion
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        dockerImageTag:
          title: dockerImageTag
          type: string
        dockerRepository:
          title: dockerRepository
          type: string
        documentationUrl:
          format: uri
          title: documentationUrl
          type: string
        icon:
          title: icon
          type: string
        name:
          title: name
          type: string
        protocolVersion:
          description: The Airbyte Protocol version supported by the connector
          title: protocolVersion
          type: string
        releaseDate:
          description: "The date when this connector was first released, in yyyy-mm-dd\
            \ format."
          format: date
          title: releaseDate
          type: string
        releaseStage:
          $ref: '#/components/schemas/ReleaseStage'
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
        sourceType:
          enum:
          - api
          - file
          - database
          - custom
          title: sourceType
          type: string
      required:
      - dockerImageTag
      - dockerRepository
      - name
      - sourceDefinitionId
      title: SourceDefinitionRead
      type: object
    SourceDefinitionReadList:
      example:
        sourceDefinitions:
        - resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          sourceType: api
          dockerRepository: dockerRepository
          releaseStage: alpha
          icon: icon
          name: name
          protocolVersion: protocolVersion
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - resourceRequirements:
            default:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobSpecific:
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
            - resourceRequirements:
                cpu_limit: cpu_limit
                memory_request: memory_request
                memory_limit: memory_limit
                cpu_request: cpu_request
              jobType: get_spec
          documentationUrl: https://openapi-generator.tech
          dockerImageTag: dockerImageTag
          releaseDate: 2000-01-23
          sourceType: api
          dockerRepository: dockerRepository
          releaseStage: alpha
          icon: icon
          name: name
          protocolVersion: protocolVersion
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceDefinitions:
          items:
            $ref: '#/components/schemas/SourceDefinitionRead'
          title: sourceDefinitions
          type: array
      required:
      - sourceDefinitions
      title: SourceDefinitionReadList
      type: object
    SourceDefinitionSpecification:
      description: The specification for what values are required to configure the
        sourceDefinition.
      example:
        user:
          type: string
      title: connectionSpecification
      type: object
    SourceDefinitionSpecificationRead:
      example:
        documentationUrl: documentationUrl
        connectionSpecification:
          user:
            type: string
        advancedAuth:
          predicateValue: predicateValue
          oauthConfigSpecification:
            completeOAuthServerOutputSpecification: ""
            completeOAuthServerInputSpecification: ""
            completeOAuthOutputSpecification: ""
            oauthUserInputFromConnectorConfigSpecification: ""
          predicateKey:
          - predicateKey
          - predicateKey
          authFlowType: oauth2.0
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authSpecification:
          auth_type: oauth2.0
          oauth2Specification:
            oauthFlowOutputParameters:
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            - - oauthFlowOutputParameters
              - oauthFlowOutputParameters
            rootObject:
            - path
            - 1
            oauthFlowInitParameters:
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
            - - oauthFlowInitParameters
              - oauthFlowInitParameters
        jobInfo:
          createdAt: 0
          connectorConfigurationUpdated: false
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configType: check_connection_source
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
      properties:
        advancedAuth:
          $ref: '#/components/schemas/AdvancedAuth'
        authSpecification:
          $ref: '#/components/schemas/AuthSpecification'
        connectionSpecification:
          description: The specification for what values are required to configure
            the sourceDefinition.
          example:
            user:
              type: string
          title: connectionSpecification
          type: object
        documentationUrl:
          title: documentationUrl
          type: string
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
      required:
      - jobInfo
      - sourceDefinitionId
      title: SourceDefinitionSpecificationRead
      type: object
    SourceDefinitionUpdate:
      description: "Update the SourceDefinition. Currently, the only allowed attribute\
        \ to update is the default docker image version."
      example:
        resourceRequirements:
          default:
            cpu_limit: cpu_limit
            memory_request: memory_request
            memory_limit: memory_limit
            cpu_request: cpu_request
          jobSpecific:
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
          - resourceRequirements:
              cpu_limit: cpu_limit
              memory_request: memory_request
              memory_limit: memory_limit
              cpu_request: cpu_request
            jobType: get_spec
        dockerImageTag: dockerImageTag
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        dockerImageTag:
          title: dockerImageTag
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ActorDefinitionResourceRequirements'
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
      required:
      - dockerImageTag
      - sourceDefinitionId
      title: SourceDefinitionUpdate
      type: object
    SourceDiscoverSchemaRead:
      description: "Returns the results of a discover catalog job. If the job was\
        \ not successful, the catalog field will not be present. jobInfo will aways\
        \ be present and its status be used to determine if the job was successful\
        \ or not."
      example:
        breakingChange: true
        catalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        catalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionStatus: active
        jobInfo:
          createdAt: 0
          connectorConfigurationUpdated: false
          configId: configId
          endedAt: 6
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          configType: check_connection_source
          logs:
            logLines:
            - logLines
            - logLines
          succeeded: true
        catalogDiff:
          transforms:
          - streamDescriptor:
              name: name
              namespace: namespace
            transformType: add_stream
            updateStream:
            - updateFieldSchema:
                oldSchema: "{}"
                newSchema: "{}"
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: "{}"
              transformType: add_field
              removeField:
                schema: "{}"
              breaking: true
            - updateFieldSchema:
                oldSchema: "{}"
                newSchema: "{}"
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: "{}"
              transformType: add_field
              removeField:
                schema: "{}"
              breaking: true
          - streamDescriptor:
              name: name
              namespace: namespace
            transformType: add_stream
            updateStream:
            - updateFieldSchema:
                oldSchema: "{}"
                newSchema: "{}"
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: "{}"
              transformType: add_field
              removeField:
                schema: "{}"
              breaking: true
            - updateFieldSchema:
                oldSchema: "{}"
                newSchema: "{}"
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: "{}"
              transformType: add_field
              removeField:
                schema: "{}"
              breaking: true
      properties:
        breakingChange:
          title: breakingChange
          type: boolean
        catalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        catalogDiff:
          $ref: '#/components/schemas/CatalogDiff'
        catalogId:
          format: uuid
          title: catalogId
          type: string
        connectionStatus:
          $ref: '#/components/schemas/ConnectionStatus'
        jobInfo:
          $ref: '#/components/schemas/SynchronousJobRead'
      required:
      - jobInfo
      title: SourceDiscoverSchemaRead
      type: object
    SourceDiscoverSchemaRequestBody:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        disable_cache: true
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notifySchemaChange: true
      properties:
        connectionId:
          format: uuid
          title: connectionId
          type: string
        disable_cache:
          title: disable_cache
          type: boolean
        notifySchemaChange:
          title: notifySchemaChange
          type: boolean
        sourceId:
          format: uuid
          title: sourceId
          type: string
      required:
      - sourceId
      title: SourceDiscoverSchemaRequestBody
      type: object
    SourceDiscoverSchemaWriteRequestBody:
      description: to write this requested object to database.
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        configurationHash: configurationHash
        catalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectorVersion: connectorVersion
      properties:
        catalog:
          $ref: '#/components/schemas/AirbyteCatalog'
        configurationHash:
          title: configurationHash
          type: string
        connectorVersion:
          title: connectorVersion
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
      required:
      - catalog
      title: SourceDiscoverSchemaWriteRequestBody
      type: object
    SourceId:
      format: uuid
      title: sourceId
      type: string
    SourceIdRequestBody:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sourceId:
          format: uuid
          title: sourceId
          type: string
      required:
      - sourceId
      title: SourceIdRequestBody
      type: object
    SourceOauthConsentRequest:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        redirectUrl: redirectUrl
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        oAuthInputConfiguration: ""
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        oAuthInputConfiguration:
          description: The values required to configure OAuth flows. The schema for
            this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification`
            schema.
          title: OAuthConfiguration
        redirectUrl:
          description: The url to redirect to after getting the user consent
          title: redirectUrl
          type: string
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - redirectUrl
      - sourceDefinitionId
      - workspaceId
      title: SourceOauthConsentRequest
      type: object
    SourceRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        icon: icon
        name: name
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceName: sourceName
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
          title: SourceConfiguration
        icon:
          title: icon
          type: string
        name:
          title: name
          type: string
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
        sourceName:
          title: sourceName
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - connectionConfiguration
      - name
      - sourceDefinitionId
      - sourceId
      - sourceName
      - workspaceId
      title: SourceRead
      type: object
    SourceReadList:
      example:
        sources:
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          icon: icon
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          icon: icon
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        sources:
          items:
            $ref: '#/components/schemas/SourceRead'
          title: sources
          type: array
      required:
      - sources
      title: SourceReadList
      type: object
    SourceSearch:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        name: name
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceName: sourceName
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
          title: SourceConfiguration
        name:
          title: name
          type: string
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
        sourceName:
          title: sourceName
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      title: SourceSearch
      type: object
    SourceSnippetRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        icon: icon
        name: name
        sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceName: sourceName
      properties:
        icon:
          title: icon
          type: string
        name:
          title: name
          type: string
        sourceDefinitionId:
          format: uuid
          title: SourceDefinitionId
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
        sourceName:
          title: sourceName
          type: string
      required:
      - name
      - sourceDefinitionId
      - sourceId
      - sourceName
      title: SourceSnippetRead
      type: object
    SourceUpdate:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        connectionConfiguration:
          user: charles
        name: name
      properties:
        connectionConfiguration:
          description: The values required to configure the source. The schema for
            this must match the schema return by source_definition_specifications/get
            for the source.
          example:
            user: charles
          title: SourceConfiguration
        name:
          title: name
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
      required:
      - connectionConfiguration
      - name
      - sourceId
      title: SourceUpdate
      type: object
    StateBlob:
      title: StateBlob
      type: object
    StreamDescriptor:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          title: name
          type: string
        namespace:
          title: namespace
          type: string
      required:
      - name
      title: StreamDescriptor
      type: object
    StreamJsonSchema:
      description: Stream schema using Json Schema specs.
      title: StreamJsonSchema
      type: object
    StreamState:
      example:
        streamDescriptor:
          name: name
          namespace: namespace
        streamState: "{}"
      properties:
        streamDescriptor:
          $ref: '#/components/schemas/StreamDescriptor'
        streamState:
          title: StateBlob
          type: object
      required:
      - streamDescriptor
      title: StreamState
      type: object
    StreamTransform:
      example:
        streamDescriptor:
          name: name
          namespace: namespace
        transformType: add_stream
        updateStream:
        - updateFieldSchema:
            oldSchema: "{}"
            newSchema: "{}"
          fieldName:
          - fieldName
          - fieldName
          addField:
            schema: "{}"
          transformType: add_field
          removeField:
            schema: "{}"
          breaking: true
        - updateFieldSchema:
            oldSchema: "{}"
            newSchema: "{}"
          fieldName:
          - fieldName
          - fieldName
          addField:
            schema: "{}"
          transformType: add_field
          removeField:
            schema: "{}"
          breaking: true
      properties:
        streamDescriptor:
          $ref: '#/components/schemas/StreamDescriptor'
        transformType:
          enum:
          - add_stream
          - remove_stream
          - update_stream
          title: transformType
          type: string
        updateStream:
          description: list of field transformations. order does not matter.
          items:
            $ref: '#/components/schemas/FieldTransform'
          title: updateStream
          type: array
      required:
      - streamDescriptor
      - transformType
      title: StreamTransform
      type: object
    SyncMode:
      enum:
      - full_refresh
      - incremental
      title: SyncMode
      type: string
    SynchronousJobRead:
      example:
        createdAt: 0
        connectorConfigurationUpdated: false
        configId: configId
        endedAt: 6
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        configType: check_connection_source
        logs:
          logLines:
          - logLines
          - logLines
        succeeded: true
      properties:
        configId:
          description: only present if a config id was provided.
          title: configId
          type: string
        configType:
          $ref: '#/components/schemas/JobConfigType'
        connectorConfigurationUpdated:
          default: false
          title: connectorConfigurationUpdated
          type: boolean
        createdAt:
          format: int64
          title: createdAt
          type: integer
        endedAt:
          format: int64
          title: endedAt
          type: integer
        id:
          format: uuid
          title: id
          type: string
        logs:
          $ref: '#/components/schemas/LogRead'
        succeeded:
          title: succeeded
          type: boolean
      required:
      - configType
      - createdAt
      - endedAt
      - id
      - succeeded
      title: SynchronousJobRead
      type: object
    UploadRead:
      properties:
        resourceId:
          format: uuid
          type: string
        status:
          enum:
          - succeeded
          - failed
          type: string
      required:
      - status
      type: object
    WebBackendCheckUpdatesRead:
      description: Summary of source and destination definitions that could be updated
      example:
        destinationDefinitions: 0
        sourceDefinitions: 6
      properties:
        destinationDefinitions:
          title: destinationDefinitions
          type: integer
        sourceDefinitions:
          title: sourceDefinitions
          type: integer
      required:
      - destinationDefinitions
      - sourceDefinitions
      title: WebBackendCheckUpdatesRead
      type: object
    WebBackendConnectionCreate:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceDefinition: source
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        operations:
        - name: name
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: normalization
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: normalization
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        scheduleType: manual
        geography: auto
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        namespaceFormat: "${SOURCE_NAMESPACE}"
        operationIds:
        - null
        - null
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: ignore
        status: active
      properties:
        destinationId:
          format: uuid
          title: destinationId
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        name:
          description: Optional name of the connection
          title: name
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          title: namespaceFormat
          type: string
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          title: operationIds
          type: array
        operations:
          items:
            $ref: '#/components/schemas/OperationCreate'
          title: operations
          type: array
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          title: prefix
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        sourceCatalogId:
          format: uuid
          title: sourceCatalogId
          type: string
        sourceId:
          format: uuid
          title: sourceId
          type: string
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
      required:
      - destinationId
      - sourceId
      - status
      title: WebBackendConnectionCreate
      type: object
    WebBackendConnectionListItem:
      description: Information about a connection that shows up in the connection
        list view.
      example:
        latestSyncJobCreatedAt: 0
        scheduleType: manual
        latestSyncJobStatus: pending
        destination:
          destinationName: destinationName
          icon: icon
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isSyncing: true
        source:
          sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          icon: icon
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        schemaChange: no_change
        status: active
      properties:
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
        destination:
          $ref: '#/components/schemas/DestinationSnippetRead'
        isSyncing:
          title: isSyncing
          type: boolean
        latestSyncJobCreatedAt:
          description: epoch time of the latest sync job. null if no sync job has
            taken place.
          format: int64
          title: latestSyncJobCreatedAt
          type: integer
        latestSyncJobStatus:
          $ref: '#/components/schemas/JobStatus'
        name:
          title: name
          type: string
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        schemaChange:
          $ref: '#/components/schemas/SchemaChange'
        source:
          $ref: '#/components/schemas/SourceSnippetRead'
        status:
          $ref: '#/components/schemas/ConnectionStatus'
      required:
      - connectionId
      - destination
      - isSyncing
      - name
      - schemaChange
      - source
      - status
      title: WebBackendConnectionListItem
      type: object
    WebBackendConnectionListRequestBody:
      example:
        sourceId:
        - null
        - null
        destinationId:
        - null
        - null
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        destinationId:
          items:
            $ref: '#/components/schemas/DestinationId'
          title: destinationId
          type: array
        sourceId:
          items:
            $ref: '#/components/schemas/SourceId'
          title: sourceId
          type: array
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - workspaceId
      title: WebBackendConnectionListRequestBody
      type: object
    WebBackendConnectionRead:
      example:
        sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        latestSyncJobCreatedAt: 0
        prefix: prefix
        destination:
          connectionConfiguration:
            user: charles
          destinationName: destinationName
          icon: icon
          name: name
          destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isSyncing: true
        source:
          sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          connectionConfiguration:
            user: charles
          icon: icon
          name: name
          sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sourceName: sourceName
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        catalogDiff:
          transforms:
          - streamDescriptor:
              name: name
              namespace: namespace
            transformType: add_stream
            updateStream:
            - updateFieldSchema:
                oldSchema: "{}"
                newSchema: "{}"
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: "{}"
              transformType: add_field
              removeField:
                schema: "{}"
              breaking: true
            - updateFieldSchema:
                oldSchema: "{}"
                newSchema: "{}"
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: "{}"
              transformType: add_field
              removeField:
                schema: "{}"
              breaking: true
          - streamDescriptor:
              name: name
              namespace: namespace
            transformType: add_stream
            updateStream:
            - updateFieldSchema:
                oldSchema: "{}"
                newSchema: "{}"
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: "{}"
              transformType: add_field
              removeField:
                schema: "{}"
              breaking: true
            - updateFieldSchema:
                oldSchema: "{}"
                newSchema: "{}"
              fieldName:
              - fieldName
              - fieldName
              addField:
                schema: "{}"
              transformType: add_field
              removeField:
                schema: "{}"
              breaking: true
        catalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operations:
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: normalization
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: normalization
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notifySchemaChanges: true
        geography: auto
        namespaceFormat: "${SOURCE_NAMESPACE}"
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: ignore
        schemaChange: no_change
        namespaceDefinition: source
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        scheduleType: manual
        latestSyncJobStatus: pending
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operationIds:
        - null
        - null
        status: active
      properties:
        catalogDiff:
          $ref: '#/components/schemas/CatalogDiff'
        catalogId:
          format: uuid
          title: catalogId
          type: string
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
        destination:
          $ref: '#/components/schemas/DestinationRead'
        destinationId:
          format: uuid
          title: destinationId
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        isSyncing:
          title: isSyncing
          type: boolean
        latestSyncJobCreatedAt:
          description: epoch time of the latest sync job. null if no sync job has
            taken place.
          format: int64
          title: latestSyncJobCreatedAt
          type: integer
        latestSyncJobStatus:
          $ref: '#/components/schemas/JobStatus'
        name:
          title: name
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          title: namespaceFormat
          type: string
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        notifySchemaChanges:
          title: notifySchemaChanges
          type: boolean
        operationIds:
          items:
            $ref: '#/components/schemas/OperationId'
          title: operationIds
          type: array
        operations:
          items:
            $ref: '#/components/schemas/OperationRead'
          title: operations
          type: array
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          title: prefix
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        schemaChange:
          $ref: '#/components/schemas/SchemaChange'
        source:
          $ref: '#/components/schemas/SourceRead'
        sourceId:
          format: uuid
          title: sourceId
          type: string
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
      required:
      - connectionId
      - destination
      - destinationId
      - isSyncing
      - name
      - nonBreakingChangesPreference
      - notifySchemaChanges
      - schemaChange
      - source
      - sourceId
      - status
      - syncCatalog
      title: WebBackendConnectionRead
      type: object
    WebBackendConnectionReadList:
      example:
        connections:
        - latestSyncJobCreatedAt: 0
          scheduleType: manual
          latestSyncJobStatus: pending
          destination:
            destinationName: destinationName
            icon: icon
            name: name
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isSyncing: true
          source:
            sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            icon: icon
            name: name
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sourceName: sourceName
          scheduleData:
            cron:
              cronExpression: cronExpression
              cronTimeZone: cronTimeZone
            basicSchedule:
              units: 6
              timeUnit: minutes
          schemaChange: no_change
          status: active
        - latestSyncJobCreatedAt: 0
          scheduleType: manual
          latestSyncJobStatus: pending
          destination:
            destinationName: destinationName
            icon: icon
            name: name
            destinationDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            destinationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isSyncing: true
          source:
            sourceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            icon: icon
            name: name
            sourceDefinitionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sourceName: sourceName
          scheduleData:
            cron:
              cronExpression: cronExpression
              cronTimeZone: cronTimeZone
            basicSchedule:
              units: 6
              timeUnit: minutes
          schemaChange: no_change
          status: active
      properties:
        connections:
          items:
            $ref: '#/components/schemas/WebBackendConnectionListItem'
          title: connections
          type: array
      required:
      - connections
      title: WebBackendConnectionReadList
      type: object
    WebBackendConnectionRequestBody:
      example:
        withRefreshedCatalog: true
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
        withRefreshedCatalog:
          title: withRefreshedCatalog
          type: boolean
      required:
      - connectionId
      title: WebBackendConnectionRequestBody
      type: object
    WebBackendConnectionUpdate:
      description: "Used to apply a patch-style update to a connection, which means\
        \ that null properties remain unchanged"
      example:
        sourceCatalogId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        prefix: prefix
        skipReset: true
        namespaceDefinition: source
        resourceRequirements:
          cpu_limit: cpu_limit
          memory_request: memory_request
          memory_limit: memory_limit
          cpu_request: cpu_request
        schedule:
          units: 0
          timeUnit: minutes
        operations:
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: normalization
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          operatorConfiguration:
            webhook:
              webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              dbtCloud:
                accountId: 0
                jobId: 6
              executionUrl: executionUrl
              executionBody: executionBody
              webhookType: dbtCloud
            normalization:
              option: basic
            dbt:
              gitRepoBranch: gitRepoBranch
              dockerImage: dockerImage
              dbtArguments: dbtArguments
              gitRepoUrl: gitRepoUrl
            operatorType: normalization
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notifySchemaChanges: true
        scheduleType: manual
        geography: auto
        name: name
        syncCatalog:
          streams:
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
          - stream:
              sourceDefinedPrimaryKey:
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              - - sourceDefinedPrimaryKey
                - sourceDefinedPrimaryKey
              sourceDefinedCursor: true
              supportedSyncModes:
              - null
              - null
              jsonSchema: "{}"
              name: name
              namespace: namespace
              defaultCursorField:
              - defaultCursorField
              - defaultCursorField
            config:
              aliasName: aliasName
              suggested: true
              fieldSelectionEnabled: true
              syncMode: full_refresh
              destinationSyncMode: append
              selectedFields:
              - fieldPath:
                - fieldPath
                - fieldPath
              - fieldPath:
                - fieldPath
                - fieldPath
              cursorField:
              - cursorField
              - cursorField
              selected: true
              primaryKey:
              - - primaryKey
                - primaryKey
              - - primaryKey
                - primaryKey
        connectionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        namespaceFormat: "${SOURCE_NAMESPACE}"
        scheduleData:
          cron:
            cronExpression: cronExpression
            cronTimeZone: cronTimeZone
          basicSchedule:
            units: 6
            timeUnit: minutes
        nonBreakingChangesPreference: ignore
        status: active
      properties:
        connectionId:
          format: uuid
          title: ConnectionId
          type: string
        geography:
          $ref: '#/components/schemas/Geography'
        name:
          description: Name that will be set to the connection
          title: name
          type: string
        namespaceDefinition:
          $ref: '#/components/schemas/NamespaceDefinitionType'
        namespaceFormat:
          description: "Used when namespaceDefinition is 'customformat'. If blank\
            \ then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\"\
            \ then behaves like namespaceDefinition = 'source'."
          example: "${SOURCE_NAMESPACE}"
          title: namespaceFormat
          type: string
        nonBreakingChangesPreference:
          $ref: '#/components/schemas/NonBreakingChangesPreference'
        notifySchemaChanges:
          title: notifySchemaChanges
          type: boolean
        operations:
          items:
            $ref: '#/components/schemas/WebBackendOperationCreateOrUpdate'
          title: operations
          type: array
        prefix:
          description: Prefix that will be prepended to the name of each stream when
            it is written to the destination.
          title: prefix
          type: string
        resourceRequirements:
          $ref: '#/components/schemas/ResourceRequirements'
        schedule:
          $ref: '#/components/schemas/ConnectionSchedule'
        scheduleData:
          $ref: '#/components/schemas/ConnectionScheduleData'
        scheduleType:
          $ref: '#/components/schemas/ConnectionScheduleType'
        skipReset:
          title: skipReset
          type: boolean
        sourceCatalogId:
          format: uuid
          title: sourceCatalogId
          type: string
        status:
          $ref: '#/components/schemas/ConnectionStatus'
        syncCatalog:
          $ref: '#/components/schemas/AirbyteCatalog'
      required:
      - connectionId
      title: WebBackendConnectionUpdate
      type: object
    WebBackendGeographiesListResult:
      example:
        geographies:
        - auto
        - auto
      properties:
        geographies:
          items:
            $ref: '#/components/schemas/Geography'
          title: geographies
          type: array
      required:
      - geographies
      title: WebBackendGeographiesListResult
      type: object
    WebBackendOperationCreateOrUpdate:
      example:
        name: name
        operationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        operatorConfiguration:
          webhook:
            webhookConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            dbtCloud:
              accountId: 0
              jobId: 6
            executionUrl: executionUrl
            executionBody: executionBody
            webhookType: dbtCloud
          normalization:
            option: basic
          dbt:
            gitRepoBranch: gitRepoBranch
            dockerImage: dockerImage
            dbtArguments: dbtArguments
            gitRepoUrl: gitRepoUrl
          operatorType: normalization
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          title: name
          type: string
        operationId:
          format: uuid
          title: OperationId
          type: string
        operatorConfiguration:
          $ref: '#/components/schemas/OperatorConfiguration'
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - name
      - operatorConfiguration
      - workspaceId
      title: WebBackendOperationCreateOrUpdate
      type: object
    WebBackendWorkspaceState:
      example:
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - workspaceId
      title: WebBackendWorkspaceState
      type: object
    WebBackendWorkspaceStateResult:
      example:
        hasDestinations: true
        hasConnections: true
        hasSources: true
      properties:
        hasConnections:
          title: hasConnections
          type: boolean
        hasDestinations:
          title: hasDestinations
          type: boolean
        hasSources:
          title: hasSources
          type: boolean
      required:
      - hasConnections
      - hasDestinations
      - hasSources
      title: WebBackendWorkspaceStateResult
      type: object
    WebhookConfigRead:
      description: the readable info for a webhook config; omits sensitive info e.g.
        auth token
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          title: id
          type: string
        name:
          description: human-readable name e.g. for display in UI
          title: name
          type: string
      required:
      - id
      title: WebhookConfigRead
      type: object
    WebhookConfigWrite:
      example:
        authToken: authToken
        name: name
        validationUrl: validationUrl
      properties:
        authToken:
          description: "an auth token, to be passed as the value for an HTTP Authorization\
            \ header."
          title: authToken
          type: string
        name:
          description: human readable name for this webhook e.g. for UI display.
          title: name
          type: string
        validationUrl:
          description: "if supplied, the webhook config will be validated by checking\
            \ that this URL returns a 2xx response."
          title: validationUrl
          type: string
      title: WebhookConfigWrite
      type: object
    WorkflowId:
      title: workflowId
      type: string
    WorkflowStateRead:
      example:
        running: true
      properties:
        running:
          title: running
          type: boolean
      required:
      - running
      title: WorkflowStateRead
      type: object
    WorkspaceCreate:
      example:
        displaySetupWizard: true
        news: true
        defaultGeography: auto
        webhookConfigs:
        - authToken: authToken
          name: name
          validationUrl: validationUrl
        - authToken: authToken
          name: name
          validationUrl: validationUrl
        anonymousDataCollection: true
        name: name
        email: email
        notifications:
        - slackConfiguration:
            webhook: webhook
          customerioConfiguration: "{}"
          sendOnFailure: true
          sendOnSuccess: false
          notificationType: slack
        - slackConfiguration:
            webhook: webhook
          customerioConfiguration: "{}"
          sendOnFailure: true
          sendOnSuccess: false
          notificationType: slack
        securityUpdates: true
      properties:
        anonymousDataCollection:
          title: anonymousDataCollection
          type: boolean
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        displaySetupWizard:
          title: displaySetupWizard
          type: boolean
        email:
          format: email
          title: email
          type: string
        name:
          title: name
          type: string
        news:
          title: news
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          title: notifications
          type: array
        securityUpdates:
          title: securityUpdates
          type: boolean
        webhookConfigs:
          items:
            $ref: '#/components/schemas/WebhookConfigWrite'
          title: webhookConfigs
          type: array
      required:
      - name
      title: WorkspaceCreate
      type: object
    WorkspaceGiveFeedback:
      example:
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - workspaceId
      title: WorkspaceGiveFeedback
      type: object
    WorkspaceId:
      format: uuid
      title: WorkspaceId
      type: string
    WorkspaceIdRequestBody:
      example:
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - workspaceId
      title: WorkspaceIdRequestBody
      type: object
    WorkspaceRead:
      example:
        news: true
        defaultGeography: auto
        webhookConfigs:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        displaySetupWizard: true
        initialSetupComplete: true
        anonymousDataCollection: true
        customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        firstCompletedSync: true
        name: name
        feedbackDone: true
        email: email
        notifications:
        - slackConfiguration:
            webhook: webhook
          customerioConfiguration: "{}"
          sendOnFailure: true
          sendOnSuccess: false
          notificationType: slack
        - slackConfiguration:
            webhook: webhook
          customerioConfiguration: "{}"
          sendOnFailure: true
          sendOnSuccess: false
          notificationType: slack
        securityUpdates: true
        slug: slug
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        anonymousDataCollection:
          title: anonymousDataCollection
          type: boolean
        customerId:
          format: uuid
          title: customerId
          type: string
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        displaySetupWizard:
          title: displaySetupWizard
          type: boolean
        email:
          format: email
          title: email
          type: string
        feedbackDone:
          title: feedbackDone
          type: boolean
        firstCompletedSync:
          title: firstCompletedSync
          type: boolean
        initialSetupComplete:
          title: initialSetupComplete
          type: boolean
        name:
          title: name
          type: string
        news:
          title: news
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          title: notifications
          type: array
        securityUpdates:
          title: securityUpdates
          type: boolean
        slug:
          title: slug
          type: string
        webhookConfigs:
          items:
            $ref: '#/components/schemas/WebhookConfigRead'
          title: webhookConfigs
          type: array
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - customerId
      - initialSetupComplete
      - name
      - slug
      - workspaceId
      title: WorkspaceRead
      type: object
    WorkspaceReadList:
      example:
        workspaces:
        - news: true
          defaultGeography: auto
          webhookConfigs:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          displaySetupWizard: true
          initialSetupComplete: true
          anonymousDataCollection: true
          customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          firstCompletedSync: true
          name: name
          feedbackDone: true
          email: email
          notifications:
          - slackConfiguration:
              webhook: webhook
            customerioConfiguration: "{}"
            sendOnFailure: true
            sendOnSuccess: false
            notificationType: slack
          - slackConfiguration:
              webhook: webhook
            customerioConfiguration: "{}"
            sendOnFailure: true
            sendOnSuccess: false
            notificationType: slack
          securityUpdates: true
          slug: slug
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - news: true
          defaultGeography: auto
          webhookConfigs:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          displaySetupWizard: true
          initialSetupComplete: true
          anonymousDataCollection: true
          customerId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          firstCompletedSync: true
          name: name
          feedbackDone: true
          email: email
          notifications:
          - slackConfiguration:
              webhook: webhook
            customerioConfiguration: "{}"
            sendOnFailure: true
            sendOnSuccess: false
            notificationType: slack
          - slackConfiguration:
              webhook: webhook
            customerioConfiguration: "{}"
            sendOnFailure: true
            sendOnSuccess: false
            notificationType: slack
          securityUpdates: true
          slug: slug
          workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        workspaces:
          items:
            $ref: '#/components/schemas/WorkspaceRead'
          title: workspaces
          type: array
      required:
      - workspaces
      title: WorkspaceReadList
      type: object
    WorkspaceUpdate:
      description: "Used to apply a patch-style update to a workspace, which means\
        \ that null properties remain unchanged"
      example:
        displaySetupWizard: true
        news: true
        initialSetupComplete: true
        defaultGeography: auto
        webhookConfigs:
        - authToken: authToken
          name: name
          validationUrl: validationUrl
        - authToken: authToken
          name: name
          validationUrl: validationUrl
        anonymousDataCollection: true
        email: email
        notifications:
        - slackConfiguration:
            webhook: webhook
          customerioConfiguration: "{}"
          sendOnFailure: true
          sendOnSuccess: false
          notificationType: slack
        - slackConfiguration:
            webhook: webhook
          customerioConfiguration: "{}"
          sendOnFailure: true
          sendOnSuccess: false
          notificationType: slack
        securityUpdates: true
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        anonymousDataCollection:
          title: anonymousDataCollection
          type: boolean
        defaultGeography:
          $ref: '#/components/schemas/Geography'
        displaySetupWizard:
          title: displaySetupWizard
          type: boolean
        email:
          format: email
          title: email
          type: string
        initialSetupComplete:
          title: initialSetupComplete
          type: boolean
        news:
          title: news
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          title: notifications
          type: array
        securityUpdates:
          title: securityUpdates
          type: boolean
        webhookConfigs:
          items:
            $ref: '#/components/schemas/WebhookConfigWrite'
          title: webhookConfigs
          type: array
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - workspaceId
      title: WorkspaceUpdate
      type: object
    WorkspaceUpdateName:
      example:
        name: name
        workspaceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          title: name
          type: string
        workspaceId:
          format: uuid
          title: WorkspaceId
          type: string
      required:
      - name
      - workspaceId
      title: WorkspaceUpdateName
      type: object
    ConnectionScheduleData_basicSchedule:
      example:
        units: 6
        timeUnit: minutes
      properties:
        timeUnit:
          enum:
          - minutes
          - hours
          - days
          - weeks
          - months
          title: timeUnit
          type: string
        units:
          format: int64
          title: units
          type: integer
      required:
      - timeUnit
      - units
      title: ConnectionScheduleData_basicSchedule
      type: object
    ConnectionScheduleData_cron:
      example:
        cronExpression: cronExpression
        cronTimeZone: cronTimeZone
      properties:
        cronExpression:
          title: cronExpression
          type: string
        cronTimeZone:
          title: cronTimeZone
          type: string
      required:
      - cronExpression
      - cronTimeZone
      title: ConnectionScheduleData_cron
      type: object
    OperatorWebhook_dbtCloud:
      example:
        accountId: 0
        jobId: 6
      properties:
        accountId:
          description: The account id associated with the job
          title: accountId
          type: integer
        jobId:
          description: The job id associated with the job
          title: jobId
          type: integer
      required:
      - accountId
      - jobId
      title: OperatorWebhook_dbtCloud
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_bearerAuth
