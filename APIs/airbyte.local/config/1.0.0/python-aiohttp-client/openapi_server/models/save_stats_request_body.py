# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attempt_stats import AttemptStats
from openapi_server.models.attempt_stream_stats import AttemptStreamStats
from openapi_server import util


class SaveStatsRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attempt_number: int=None, job_id: int=None, stats: AttemptStats=None, stream_stats: List[AttemptStreamStats]=None):
        """SaveStatsRequestBody - a model defined in OpenAPI

        :param attempt_number: The attempt_number of this SaveStatsRequestBody.
        :param job_id: The job_id of this SaveStatsRequestBody.
        :param stats: The stats of this SaveStatsRequestBody.
        :param stream_stats: The stream_stats of this SaveStatsRequestBody.
        """
        self.openapi_types = {
            'attempt_number': int,
            'job_id': int,
            'stats': AttemptStats,
            'stream_stats': List[AttemptStreamStats]
        }

        self.attribute_map = {
            'attempt_number': 'attemptNumber',
            'job_id': 'jobId',
            'stats': 'stats',
            'stream_stats': 'streamStats'
        }

        self._attempt_number = attempt_number
        self._job_id = job_id
        self._stats = stats
        self._stream_stats = stream_stats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SaveStatsRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SaveStatsRequestBody of this SaveStatsRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attempt_number(self):
        """Gets the attempt_number of this SaveStatsRequestBody.


        :return: The attempt_number of this SaveStatsRequestBody.
        :rtype: int
        """
        return self._attempt_number

    @attempt_number.setter
    def attempt_number(self, attempt_number):
        """Sets the attempt_number of this SaveStatsRequestBody.


        :param attempt_number: The attempt_number of this SaveStatsRequestBody.
        :type attempt_number: int
        """
        if attempt_number is None:
            raise ValueError("Invalid value for `attempt_number`, must not be `None`")

        self._attempt_number = attempt_number

    @property
    def job_id(self):
        """Gets the job_id of this SaveStatsRequestBody.


        :return: The job_id of this SaveStatsRequestBody.
        :rtype: int
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this SaveStatsRequestBody.


        :param job_id: The job_id of this SaveStatsRequestBody.
        :type job_id: int
        """
        if job_id is None:
            raise ValueError("Invalid value for `job_id`, must not be `None`")

        self._job_id = job_id

    @property
    def stats(self):
        """Gets the stats of this SaveStatsRequestBody.


        :return: The stats of this SaveStatsRequestBody.
        :rtype: AttemptStats
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this SaveStatsRequestBody.


        :param stats: The stats of this SaveStatsRequestBody.
        :type stats: AttemptStats
        """
        if stats is None:
            raise ValueError("Invalid value for `stats`, must not be `None`")

        self._stats = stats

    @property
    def stream_stats(self):
        """Gets the stream_stats of this SaveStatsRequestBody.


        :return: The stream_stats of this SaveStatsRequestBody.
        :rtype: List[AttemptStreamStats]
        """
        return self._stream_stats

    @stream_stats.setter
    def stream_stats(self, stream_stats):
        """Sets the stream_stats of this SaveStatsRequestBody.


        :param stream_stats: The stream_stats of this SaveStatsRequestBody.
        :type stream_stats: List[AttemptStreamStats]
        """

        self._stream_stats = stream_stats
