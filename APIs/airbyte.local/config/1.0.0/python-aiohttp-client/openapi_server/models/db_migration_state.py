# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DbMigrationState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    PENDING = 'pending'
    ABOVE_TARGET = 'above_target'
    BELOW_BASELINE = 'below_baseline'
    BASELINE = 'baseline'
    IGNORED = 'ignored'
    MISSING_SUCCESS = 'missing_success'
    MISSING_FAILED = 'missing_failed'
    SUCCESS = 'success'
    UNDONE = 'undone'
    AVAILABLE = 'available'
    FAILED = 'failed'
    OUT_OF_ORDER = 'out_of_order'
    FUTURE_SUCCESS = 'future_success'
    FUTURE_FAILED = 'future_failed'
    OUTDATED = 'outdated'
    SUPERSEDED = 'superseded'
    DELETED = 'deleted'

    def __init__(self):
        """DbMigrationState - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DbMigrationState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DbMigrationState of this DbMigrationState.
        """
        return util.deserialize_model(dikt, cls)
