# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destination_definition_read import DestinationDefinitionRead
from openapi_server import util


class PrivateDestinationDefinitionRead(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_definition: DestinationDefinitionRead=None, granted: bool=None):
        """PrivateDestinationDefinitionRead - a model defined in OpenAPI

        :param destination_definition: The destination_definition of this PrivateDestinationDefinitionRead.
        :param granted: The granted of this PrivateDestinationDefinitionRead.
        """
        self.openapi_types = {
            'destination_definition': DestinationDefinitionRead,
            'granted': bool
        }

        self.attribute_map = {
            'destination_definition': 'destinationDefinition',
            'granted': 'granted'
        }

        self._destination_definition = destination_definition
        self._granted = granted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateDestinationDefinitionRead':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateDestinationDefinitionRead of this PrivateDestinationDefinitionRead.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_definition(self):
        """Gets the destination_definition of this PrivateDestinationDefinitionRead.


        :return: The destination_definition of this PrivateDestinationDefinitionRead.
        :rtype: DestinationDefinitionRead
        """
        return self._destination_definition

    @destination_definition.setter
    def destination_definition(self, destination_definition):
        """Sets the destination_definition of this PrivateDestinationDefinitionRead.


        :param destination_definition: The destination_definition of this PrivateDestinationDefinitionRead.
        :type destination_definition: DestinationDefinitionRead
        """
        if destination_definition is None:
            raise ValueError("Invalid value for `destination_definition`, must not be `None`")

        self._destination_definition = destination_definition

    @property
    def granted(self):
        """Gets the granted of this PrivateDestinationDefinitionRead.


        :return: The granted of this PrivateDestinationDefinitionRead.
        :rtype: bool
        """
        return self._granted

    @granted.setter
    def granted(self, granted):
        """Sets the granted of this PrivateDestinationDefinitionRead.


        :param granted: The granted of this PrivateDestinationDefinitionRead.
        :type granted: bool
        """
        if granted is None:
            raise ValueError("Invalid value for `granted`, must not be `None`")

        self._granted = granted
