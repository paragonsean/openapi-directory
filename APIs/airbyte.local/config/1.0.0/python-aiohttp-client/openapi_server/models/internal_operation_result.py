# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InternalOperationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, succeeded: bool=None):
        """InternalOperationResult - a model defined in OpenAPI

        :param succeeded: The succeeded of this InternalOperationResult.
        """
        self.openapi_types = {
            'succeeded': bool
        }

        self.attribute_map = {
            'succeeded': 'succeeded'
        }

        self._succeeded = succeeded

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InternalOperationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InternalOperationResult of this InternalOperationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def succeeded(self):
        """Gets the succeeded of this InternalOperationResult.


        :return: The succeeded of this InternalOperationResult.
        :rtype: bool
        """
        return self._succeeded

    @succeeded.setter
    def succeeded(self, succeeded):
        """Sets the succeeded of this InternalOperationResult.


        :param succeeded: The succeeded of this InternalOperationResult.
        :type succeeded: bool
        """
        if succeeded is None:
            raise ValueError("Invalid value for `succeeded`, must not be `None`")

        self._succeeded = succeeded
