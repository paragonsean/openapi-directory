# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.db_migration_state import DbMigrationState
from openapi_server import util


class DbMigrationRead(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, migrated_at: int=None, migrated_by: str=None, migration_description: str=None, migration_script: str=None, migration_state: DbMigrationState=None, migration_type: str=None, migration_version: str=None):
        """DbMigrationRead - a model defined in OpenAPI

        :param migrated_at: The migrated_at of this DbMigrationRead.
        :param migrated_by: The migrated_by of this DbMigrationRead.
        :param migration_description: The migration_description of this DbMigrationRead.
        :param migration_script: The migration_script of this DbMigrationRead.
        :param migration_state: The migration_state of this DbMigrationRead.
        :param migration_type: The migration_type of this DbMigrationRead.
        :param migration_version: The migration_version of this DbMigrationRead.
        """
        self.openapi_types = {
            'migrated_at': int,
            'migrated_by': str,
            'migration_description': str,
            'migration_script': str,
            'migration_state': DbMigrationState,
            'migration_type': str,
            'migration_version': str
        }

        self.attribute_map = {
            'migrated_at': 'migratedAt',
            'migrated_by': 'migratedBy',
            'migration_description': 'migrationDescription',
            'migration_script': 'migrationScript',
            'migration_state': 'migrationState',
            'migration_type': 'migrationType',
            'migration_version': 'migrationVersion'
        }

        self._migrated_at = migrated_at
        self._migrated_by = migrated_by
        self._migration_description = migration_description
        self._migration_script = migration_script
        self._migration_state = migration_state
        self._migration_type = migration_type
        self._migration_version = migration_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DbMigrationRead':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DbMigrationRead of this DbMigrationRead.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def migrated_at(self):
        """Gets the migrated_at of this DbMigrationRead.


        :return: The migrated_at of this DbMigrationRead.
        :rtype: int
        """
        return self._migrated_at

    @migrated_at.setter
    def migrated_at(self, migrated_at):
        """Sets the migrated_at of this DbMigrationRead.


        :param migrated_at: The migrated_at of this DbMigrationRead.
        :type migrated_at: int
        """

        self._migrated_at = migrated_at

    @property
    def migrated_by(self):
        """Gets the migrated_by of this DbMigrationRead.


        :return: The migrated_by of this DbMigrationRead.
        :rtype: str
        """
        return self._migrated_by

    @migrated_by.setter
    def migrated_by(self, migrated_by):
        """Sets the migrated_by of this DbMigrationRead.


        :param migrated_by: The migrated_by of this DbMigrationRead.
        :type migrated_by: str
        """

        self._migrated_by = migrated_by

    @property
    def migration_description(self):
        """Gets the migration_description of this DbMigrationRead.


        :return: The migration_description of this DbMigrationRead.
        :rtype: str
        """
        return self._migration_description

    @migration_description.setter
    def migration_description(self, migration_description):
        """Sets the migration_description of this DbMigrationRead.


        :param migration_description: The migration_description of this DbMigrationRead.
        :type migration_description: str
        """
        if migration_description is None:
            raise ValueError("Invalid value for `migration_description`, must not be `None`")

        self._migration_description = migration_description

    @property
    def migration_script(self):
        """Gets the migration_script of this DbMigrationRead.


        :return: The migration_script of this DbMigrationRead.
        :rtype: str
        """
        return self._migration_script

    @migration_script.setter
    def migration_script(self, migration_script):
        """Sets the migration_script of this DbMigrationRead.


        :param migration_script: The migration_script of this DbMigrationRead.
        :type migration_script: str
        """

        self._migration_script = migration_script

    @property
    def migration_state(self):
        """Gets the migration_state of this DbMigrationRead.


        :return: The migration_state of this DbMigrationRead.
        :rtype: DbMigrationState
        """
        return self._migration_state

    @migration_state.setter
    def migration_state(self, migration_state):
        """Sets the migration_state of this DbMigrationRead.


        :param migration_state: The migration_state of this DbMigrationRead.
        :type migration_state: DbMigrationState
        """

        self._migration_state = migration_state

    @property
    def migration_type(self):
        """Gets the migration_type of this DbMigrationRead.


        :return: The migration_type of this DbMigrationRead.
        :rtype: str
        """
        return self._migration_type

    @migration_type.setter
    def migration_type(self, migration_type):
        """Sets the migration_type of this DbMigrationRead.


        :param migration_type: The migration_type of this DbMigrationRead.
        :type migration_type: str
        """
        if migration_type is None:
            raise ValueError("Invalid value for `migration_type`, must not be `None`")

        self._migration_type = migration_type

    @property
    def migration_version(self):
        """Gets the migration_version of this DbMigrationRead.


        :return: The migration_version of this DbMigrationRead.
        :rtype: str
        """
        return self._migration_version

    @migration_version.setter
    def migration_version(self, migration_version):
        """Sets the migration_version of this DbMigrationRead.


        :param migration_version: The migration_version of this DbMigrationRead.
        :type migration_version: str
        """
        if migration_version is None:
            raise ValueError("Invalid value for `migration_version`, must not be `None`")

        self._migration_version = migration_version
