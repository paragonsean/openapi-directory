# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operator_webhook_dbt_cloud import OperatorWebhookDbtCloud
from openapi_server import util


class OperatorWebhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dbt_cloud: OperatorWebhookDbtCloud=None, execution_body: str=None, execution_url: str=None, webhook_config_id: str=None, webhook_type: str=None):
        """OperatorWebhook - a model defined in OpenAPI

        :param dbt_cloud: The dbt_cloud of this OperatorWebhook.
        :param execution_body: The execution_body of this OperatorWebhook.
        :param execution_url: The execution_url of this OperatorWebhook.
        :param webhook_config_id: The webhook_config_id of this OperatorWebhook.
        :param webhook_type: The webhook_type of this OperatorWebhook.
        """
        self.openapi_types = {
            'dbt_cloud': OperatorWebhookDbtCloud,
            'execution_body': str,
            'execution_url': str,
            'webhook_config_id': str,
            'webhook_type': str
        }

        self.attribute_map = {
            'dbt_cloud': 'dbtCloud',
            'execution_body': 'executionBody',
            'execution_url': 'executionUrl',
            'webhook_config_id': 'webhookConfigId',
            'webhook_type': 'webhookType'
        }

        self._dbt_cloud = dbt_cloud
        self._execution_body = execution_body
        self._execution_url = execution_url
        self._webhook_config_id = webhook_config_id
        self._webhook_type = webhook_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperatorWebhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperatorWebhook of this OperatorWebhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dbt_cloud(self):
        """Gets the dbt_cloud of this OperatorWebhook.


        :return: The dbt_cloud of this OperatorWebhook.
        :rtype: OperatorWebhookDbtCloud
        """
        return self._dbt_cloud

    @dbt_cloud.setter
    def dbt_cloud(self, dbt_cloud):
        """Sets the dbt_cloud of this OperatorWebhook.


        :param dbt_cloud: The dbt_cloud of this OperatorWebhook.
        :type dbt_cloud: OperatorWebhookDbtCloud
        """

        self._dbt_cloud = dbt_cloud

    @property
    def execution_body(self):
        """Gets the execution_body of this OperatorWebhook.

        DEPRECATED. Populate dbtCloud instead.

        :return: The execution_body of this OperatorWebhook.
        :rtype: str
        """
        return self._execution_body

    @execution_body.setter
    def execution_body(self, execution_body):
        """Sets the execution_body of this OperatorWebhook.

        DEPRECATED. Populate dbtCloud instead.

        :param execution_body: The execution_body of this OperatorWebhook.
        :type execution_body: str
        """

        self._execution_body = execution_body

    @property
    def execution_url(self):
        """Gets the execution_url of this OperatorWebhook.

        DEPRECATED. Populate dbtCloud instead.

        :return: The execution_url of this OperatorWebhook.
        :rtype: str
        """
        return self._execution_url

    @execution_url.setter
    def execution_url(self, execution_url):
        """Sets the execution_url of this OperatorWebhook.

        DEPRECATED. Populate dbtCloud instead.

        :param execution_url: The execution_url of this OperatorWebhook.
        :type execution_url: str
        """

        self._execution_url = execution_url

    @property
    def webhook_config_id(self):
        """Gets the webhook_config_id of this OperatorWebhook.

        The id of the webhook configs to use from the workspace.

        :return: The webhook_config_id of this OperatorWebhook.
        :rtype: str
        """
        return self._webhook_config_id

    @webhook_config_id.setter
    def webhook_config_id(self, webhook_config_id):
        """Sets the webhook_config_id of this OperatorWebhook.

        The id of the webhook configs to use from the workspace.

        :param webhook_config_id: The webhook_config_id of this OperatorWebhook.
        :type webhook_config_id: str
        """

        self._webhook_config_id = webhook_config_id

    @property
    def webhook_type(self):
        """Gets the webhook_type of this OperatorWebhook.


        :return: The webhook_type of this OperatorWebhook.
        :rtype: str
        """
        return self._webhook_type

    @webhook_type.setter
    def webhook_type(self, webhook_type):
        """Sets the webhook_type of this OperatorWebhook.


        :param webhook_type: The webhook_type of this OperatorWebhook.
        :type webhook_type: str
        """
        allowed_values = ["dbtCloud"]  # noqa: E501
        if webhook_type not in allowed_values:
            raise ValueError(
                "Invalid value for `webhook_type` ({0}), must be one of {1}"
                .format(webhook_type, allowed_values)
            )

        self._webhook_type = webhook_type
