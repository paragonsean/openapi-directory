# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SetInstancewideDestinationOauthParamsRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_definition_id: str=None, params: Dict[str, object]=None):
        """SetInstancewideDestinationOauthParamsRequestBody - a model defined in OpenAPI

        :param destination_definition_id: The destination_definition_id of this SetInstancewideDestinationOauthParamsRequestBody.
        :param params: The params of this SetInstancewideDestinationOauthParamsRequestBody.
        """
        self.openapi_types = {
            'destination_definition_id': str,
            'params': Dict[str, object]
        }

        self.attribute_map = {
            'destination_definition_id': 'destinationDefinitionId',
            'params': 'params'
        }

        self._destination_definition_id = destination_definition_id
        self._params = params

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetInstancewideDestinationOauthParamsRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SetInstancewideDestinationOauthParamsRequestBody of this SetInstancewideDestinationOauthParamsRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_definition_id(self):
        """Gets the destination_definition_id of this SetInstancewideDestinationOauthParamsRequestBody.


        :return: The destination_definition_id of this SetInstancewideDestinationOauthParamsRequestBody.
        :rtype: str
        """
        return self._destination_definition_id

    @destination_definition_id.setter
    def destination_definition_id(self, destination_definition_id):
        """Sets the destination_definition_id of this SetInstancewideDestinationOauthParamsRequestBody.


        :param destination_definition_id: The destination_definition_id of this SetInstancewideDestinationOauthParamsRequestBody.
        :type destination_definition_id: str
        """
        if destination_definition_id is None:
            raise ValueError("Invalid value for `destination_definition_id`, must not be `None`")

        self._destination_definition_id = destination_definition_id

    @property
    def params(self):
        """Gets the params of this SetInstancewideDestinationOauthParamsRequestBody.


        :return: The params of this SetInstancewideDestinationOauthParamsRequestBody.
        :rtype: Dict[str, object]
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this SetInstancewideDestinationOauthParamsRequestBody.


        :param params: The params of this SetInstancewideDestinationOauthParamsRequestBody.
        :type params: Dict[str, object]
        """
        if params is None:
            raise ValueError("Invalid value for `params`, must not be `None`")

        self._params = params
