# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceDiscoverSchemaRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_id: str=None, disable_cache: bool=None, notify_schema_change: bool=None, source_id: str=None):
        """SourceDiscoverSchemaRequestBody - a model defined in OpenAPI

        :param connection_id: The connection_id of this SourceDiscoverSchemaRequestBody.
        :param disable_cache: The disable_cache of this SourceDiscoverSchemaRequestBody.
        :param notify_schema_change: The notify_schema_change of this SourceDiscoverSchemaRequestBody.
        :param source_id: The source_id of this SourceDiscoverSchemaRequestBody.
        """
        self.openapi_types = {
            'connection_id': str,
            'disable_cache': bool,
            'notify_schema_change': bool,
            'source_id': str
        }

        self.attribute_map = {
            'connection_id': 'connectionId',
            'disable_cache': 'disable_cache',
            'notify_schema_change': 'notifySchemaChange',
            'source_id': 'sourceId'
        }

        self._connection_id = connection_id
        self._disable_cache = disable_cache
        self._notify_schema_change = notify_schema_change
        self._source_id = source_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceDiscoverSchemaRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceDiscoverSchemaRequestBody of this SourceDiscoverSchemaRequestBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_id(self):
        """Gets the connection_id of this SourceDiscoverSchemaRequestBody.


        :return: The connection_id of this SourceDiscoverSchemaRequestBody.
        :rtype: str
        """
        return self._connection_id

    @connection_id.setter
    def connection_id(self, connection_id):
        """Sets the connection_id of this SourceDiscoverSchemaRequestBody.


        :param connection_id: The connection_id of this SourceDiscoverSchemaRequestBody.
        :type connection_id: str
        """

        self._connection_id = connection_id

    @property
    def disable_cache(self):
        """Gets the disable_cache of this SourceDiscoverSchemaRequestBody.


        :return: The disable_cache of this SourceDiscoverSchemaRequestBody.
        :rtype: bool
        """
        return self._disable_cache

    @disable_cache.setter
    def disable_cache(self, disable_cache):
        """Sets the disable_cache of this SourceDiscoverSchemaRequestBody.


        :param disable_cache: The disable_cache of this SourceDiscoverSchemaRequestBody.
        :type disable_cache: bool
        """

        self._disable_cache = disable_cache

    @property
    def notify_schema_change(self):
        """Gets the notify_schema_change of this SourceDiscoverSchemaRequestBody.


        :return: The notify_schema_change of this SourceDiscoverSchemaRequestBody.
        :rtype: bool
        """
        return self._notify_schema_change

    @notify_schema_change.setter
    def notify_schema_change(self, notify_schema_change):
        """Sets the notify_schema_change of this SourceDiscoverSchemaRequestBody.


        :param notify_schema_change: The notify_schema_change of this SourceDiscoverSchemaRequestBody.
        :type notify_schema_change: bool
        """

        self._notify_schema_change = notify_schema_change

    @property
    def source_id(self):
        """Gets the source_id of this SourceDiscoverSchemaRequestBody.


        :return: The source_id of this SourceDiscoverSchemaRequestBody.
        :rtype: str
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this SourceDiscoverSchemaRequestBody.


        :param source_id: The source_id of this SourceDiscoverSchemaRequestBody.
        :type source_id: str
        """
        if source_id is None:
            raise ValueError("Invalid value for `source_id`, must not be `None`")

        self._source_id = source_id
