# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.airbyte_stream import AirbyteStream
from openapi_server.models.airbyte_stream_configuration import AirbyteStreamConfiguration
from openapi_server import util


class AirbyteStreamAndConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: AirbyteStreamConfiguration=None, stream: AirbyteStream=None):
        """AirbyteStreamAndConfiguration - a model defined in OpenAPI

        :param config: The config of this AirbyteStreamAndConfiguration.
        :param stream: The stream of this AirbyteStreamAndConfiguration.
        """
        self.openapi_types = {
            'config': AirbyteStreamConfiguration,
            'stream': AirbyteStream
        }

        self.attribute_map = {
            'config': 'config',
            'stream': 'stream'
        }

        self._config = config
        self._stream = stream

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AirbyteStreamAndConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AirbyteStreamAndConfiguration of this AirbyteStreamAndConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this AirbyteStreamAndConfiguration.


        :return: The config of this AirbyteStreamAndConfiguration.
        :rtype: AirbyteStreamConfiguration
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this AirbyteStreamAndConfiguration.


        :param config: The config of this AirbyteStreamAndConfiguration.
        :type config: AirbyteStreamConfiguration
        """

        self._config = config

    @property
    def stream(self):
        """Gets the stream of this AirbyteStreamAndConfiguration.


        :return: The stream of this AirbyteStreamAndConfiguration.
        :rtype: AirbyteStream
        """
        return self._stream

    @stream.setter
    def stream(self, stream):
        """Sets the stream of this AirbyteStreamAndConfiguration.


        :param stream: The stream of this AirbyteStreamAndConfiguration.
        :type stream: AirbyteStream
        """

        self._stream = stream
