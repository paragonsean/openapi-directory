# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connection_schedule_data_basic_schedule import ConnectionScheduleDataBasicSchedule
from openapi_server.models.connection_schedule_data_cron import ConnectionScheduleDataCron
from openapi_server import util


class ConnectionScheduleData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basic_schedule: ConnectionScheduleDataBasicSchedule=None, cron: ConnectionScheduleDataCron=None):
        """ConnectionScheduleData - a model defined in OpenAPI

        :param basic_schedule: The basic_schedule of this ConnectionScheduleData.
        :param cron: The cron of this ConnectionScheduleData.
        """
        self.openapi_types = {
            'basic_schedule': ConnectionScheduleDataBasicSchedule,
            'cron': ConnectionScheduleDataCron
        }

        self.attribute_map = {
            'basic_schedule': 'basicSchedule',
            'cron': 'cron'
        }

        self._basic_schedule = basic_schedule
        self._cron = cron

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectionScheduleData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectionScheduleData of this ConnectionScheduleData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basic_schedule(self):
        """Gets the basic_schedule of this ConnectionScheduleData.


        :return: The basic_schedule of this ConnectionScheduleData.
        :rtype: ConnectionScheduleDataBasicSchedule
        """
        return self._basic_schedule

    @basic_schedule.setter
    def basic_schedule(self, basic_schedule):
        """Sets the basic_schedule of this ConnectionScheduleData.


        :param basic_schedule: The basic_schedule of this ConnectionScheduleData.
        :type basic_schedule: ConnectionScheduleDataBasicSchedule
        """

        self._basic_schedule = basic_schedule

    @property
    def cron(self):
        """Gets the cron of this ConnectionScheduleData.


        :return: The cron of this ConnectionScheduleData.
        :rtype: ConnectionScheduleDataCron
        """
        return self._cron

    @cron.setter
    def cron(self, cron):
        """Sets the cron of this ConnectionScheduleData.


        :param cron: The cron of this ConnectionScheduleData.
        :type cron: ConnectionScheduleDataCron
        """

        self._cron = cron
