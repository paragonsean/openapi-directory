# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.private_source_definition_read import PrivateSourceDefinitionRead
from openapi_server import util


class PrivateSourceDefinitionReadList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_definitions: List[PrivateSourceDefinitionRead]=None):
        """PrivateSourceDefinitionReadList - a model defined in OpenAPI

        :param source_definitions: The source_definitions of this PrivateSourceDefinitionReadList.
        """
        self.openapi_types = {
            'source_definitions': List[PrivateSourceDefinitionRead]
        }

        self.attribute_map = {
            'source_definitions': 'sourceDefinitions'
        }

        self._source_definitions = source_definitions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrivateSourceDefinitionReadList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrivateSourceDefinitionReadList of this PrivateSourceDefinitionReadList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_definitions(self):
        """Gets the source_definitions of this PrivateSourceDefinitionReadList.


        :return: The source_definitions of this PrivateSourceDefinitionReadList.
        :rtype: List[PrivateSourceDefinitionRead]
        """
        return self._source_definitions

    @source_definitions.setter
    def source_definitions(self, source_definitions):
        """Sets the source_definitions of this PrivateSourceDefinitionReadList.


        :param source_definitions: The source_definitions of this PrivateSourceDefinitionReadList.
        :type source_definitions: List[PrivateSourceDefinitionRead]
        """
        if source_definitions is None:
            raise ValueError("Invalid value for `source_definitions`, must not be `None`")

        self._source_definitions = source_definitions
