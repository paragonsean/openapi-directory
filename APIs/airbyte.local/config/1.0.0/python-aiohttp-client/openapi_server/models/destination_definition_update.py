# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.actor_definition_resource_requirements import ActorDefinitionResourceRequirements
from openapi_server import util


class DestinationDefinitionUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_definition_id: str=None, docker_image_tag: str=None, resource_requirements: ActorDefinitionResourceRequirements=None):
        """DestinationDefinitionUpdate - a model defined in OpenAPI

        :param destination_definition_id: The destination_definition_id of this DestinationDefinitionUpdate.
        :param docker_image_tag: The docker_image_tag of this DestinationDefinitionUpdate.
        :param resource_requirements: The resource_requirements of this DestinationDefinitionUpdate.
        """
        self.openapi_types = {
            'destination_definition_id': str,
            'docker_image_tag': str,
            'resource_requirements': ActorDefinitionResourceRequirements
        }

        self.attribute_map = {
            'destination_definition_id': 'destinationDefinitionId',
            'docker_image_tag': 'dockerImageTag',
            'resource_requirements': 'resourceRequirements'
        }

        self._destination_definition_id = destination_definition_id
        self._docker_image_tag = docker_image_tag
        self._resource_requirements = resource_requirements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DestinationDefinitionUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DestinationDefinitionUpdate of this DestinationDefinitionUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_definition_id(self):
        """Gets the destination_definition_id of this DestinationDefinitionUpdate.


        :return: The destination_definition_id of this DestinationDefinitionUpdate.
        :rtype: str
        """
        return self._destination_definition_id

    @destination_definition_id.setter
    def destination_definition_id(self, destination_definition_id):
        """Sets the destination_definition_id of this DestinationDefinitionUpdate.


        :param destination_definition_id: The destination_definition_id of this DestinationDefinitionUpdate.
        :type destination_definition_id: str
        """
        if destination_definition_id is None:
            raise ValueError("Invalid value for `destination_definition_id`, must not be `None`")

        self._destination_definition_id = destination_definition_id

    @property
    def docker_image_tag(self):
        """Gets the docker_image_tag of this DestinationDefinitionUpdate.


        :return: The docker_image_tag of this DestinationDefinitionUpdate.
        :rtype: str
        """
        return self._docker_image_tag

    @docker_image_tag.setter
    def docker_image_tag(self, docker_image_tag):
        """Sets the docker_image_tag of this DestinationDefinitionUpdate.


        :param docker_image_tag: The docker_image_tag of this DestinationDefinitionUpdate.
        :type docker_image_tag: str
        """

        self._docker_image_tag = docker_image_tag

    @property
    def resource_requirements(self):
        """Gets the resource_requirements of this DestinationDefinitionUpdate.


        :return: The resource_requirements of this DestinationDefinitionUpdate.
        :rtype: ActorDefinitionResourceRequirements
        """
        return self._resource_requirements

    @resource_requirements.setter
    def resource_requirements(self, resource_requirements):
        """Sets the resource_requirements of this DestinationDefinitionUpdate.


        :param resource_requirements: The resource_requirements of this DestinationDefinitionUpdate.
        :type resource_requirements: ActorDefinitionResourceRequirements
        """

        self._resource_requirements = resource_requirements
