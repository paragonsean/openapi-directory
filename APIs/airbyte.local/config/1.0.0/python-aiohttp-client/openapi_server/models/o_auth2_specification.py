# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OAuth2Specification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, oauth_flow_init_parameters: List[List[str]]=None, oauth_flow_output_parameters: List[List[str]]=None, root_object: List[object]=None):
        """OAuth2Specification - a model defined in OpenAPI

        :param oauth_flow_init_parameters: The oauth_flow_init_parameters of this OAuth2Specification.
        :param oauth_flow_output_parameters: The oauth_flow_output_parameters of this OAuth2Specification.
        :param root_object: The root_object of this OAuth2Specification.
        """
        self.openapi_types = {
            'oauth_flow_init_parameters': List[List[str]],
            'oauth_flow_output_parameters': List[List[str]],
            'root_object': List[object]
        }

        self.attribute_map = {
            'oauth_flow_init_parameters': 'oauthFlowInitParameters',
            'oauth_flow_output_parameters': 'oauthFlowOutputParameters',
            'root_object': 'rootObject'
        }

        self._oauth_flow_init_parameters = oauth_flow_init_parameters
        self._oauth_flow_output_parameters = oauth_flow_output_parameters
        self._root_object = root_object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OAuth2Specification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OAuth2Specification of this OAuth2Specification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def oauth_flow_init_parameters(self):
        """Gets the oauth_flow_init_parameters of this OAuth2Specification.

        Pointers to the fields in the rootObject needed to obtain the initial refresh/access tokens for the OAuth flow. Each inner array represents the path in the rootObject of the referenced field. For example. Assume the rootObject contains params 'app_secret', 'app_id' which are needed to get the initial refresh token. If they are not nested in the rootObject, then the array would look like this [['app_secret'], ['app_id']] If they are nested inside an object called 'auth_params' then this array would be [['auth_params', 'app_secret'], ['auth_params', 'app_id']]

        :return: The oauth_flow_init_parameters of this OAuth2Specification.
        :rtype: List[List[str]]
        """
        return self._oauth_flow_init_parameters

    @oauth_flow_init_parameters.setter
    def oauth_flow_init_parameters(self, oauth_flow_init_parameters):
        """Sets the oauth_flow_init_parameters of this OAuth2Specification.

        Pointers to the fields in the rootObject needed to obtain the initial refresh/access tokens for the OAuth flow. Each inner array represents the path in the rootObject of the referenced field. For example. Assume the rootObject contains params 'app_secret', 'app_id' which are needed to get the initial refresh token. If they are not nested in the rootObject, then the array would look like this [['app_secret'], ['app_id']] If they are nested inside an object called 'auth_params' then this array would be [['auth_params', 'app_secret'], ['auth_params', 'app_id']]

        :param oauth_flow_init_parameters: The oauth_flow_init_parameters of this OAuth2Specification.
        :type oauth_flow_init_parameters: List[List[str]]
        """
        if oauth_flow_init_parameters is None:
            raise ValueError("Invalid value for `oauth_flow_init_parameters`, must not be `None`")

        self._oauth_flow_init_parameters = oauth_flow_init_parameters

    @property
    def oauth_flow_output_parameters(self):
        """Gets the oauth_flow_output_parameters of this OAuth2Specification.

        Pointers to the fields in the rootObject which can be populated from successfully completing the oauth flow using the init parameters. This is typically a refresh/access token. Each inner array represents the path in the rootObject of the referenced field.

        :return: The oauth_flow_output_parameters of this OAuth2Specification.
        :rtype: List[List[str]]
        """
        return self._oauth_flow_output_parameters

    @oauth_flow_output_parameters.setter
    def oauth_flow_output_parameters(self, oauth_flow_output_parameters):
        """Sets the oauth_flow_output_parameters of this OAuth2Specification.

        Pointers to the fields in the rootObject which can be populated from successfully completing the oauth flow using the init parameters. This is typically a refresh/access token. Each inner array represents the path in the rootObject of the referenced field.

        :param oauth_flow_output_parameters: The oauth_flow_output_parameters of this OAuth2Specification.
        :type oauth_flow_output_parameters: List[List[str]]
        """
        if oauth_flow_output_parameters is None:
            raise ValueError("Invalid value for `oauth_flow_output_parameters`, must not be `None`")

        self._oauth_flow_output_parameters = oauth_flow_output_parameters

    @property
    def root_object(self):
        """Gets the root_object of this OAuth2Specification.

        A list of strings representing a pointer to the root object which contains any oauth parameters in the ConnectorSpecification. Examples: if oauth parameters were contained inside the top level, rootObject=[] If they were nested inside another object {'credentials': {'app_id' etc...}, rootObject=['credentials'] If they were inside a oneOf {'switch': {oneOf: [{client_id...}, {non_oauth_param]}},  rootObject=['switch', 0] 

        :return: The root_object of this OAuth2Specification.
        :rtype: List[object]
        """
        return self._root_object

    @root_object.setter
    def root_object(self, root_object):
        """Sets the root_object of this OAuth2Specification.

        A list of strings representing a pointer to the root object which contains any oauth parameters in the ConnectorSpecification. Examples: if oauth parameters were contained inside the top level, rootObject=[] If they were nested inside another object {'credentials': {'app_id' etc...}, rootObject=['credentials'] If they were inside a oneOf {'switch': {oneOf: [{client_id...}, {non_oauth_param]}},  rootObject=['switch', 0] 

        :param root_object: The root_object of this OAuth2Specification.
        :type root_object: List[object]
        """
        if root_object is None:
            raise ValueError("Invalid value for `root_object`, must not be `None`")

        self._root_object = root_object
