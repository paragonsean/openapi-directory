# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceCloneConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_configuration: object=None, name: str=None):
        """SourceCloneConfiguration - a model defined in OpenAPI

        :param connection_configuration: The connection_configuration of this SourceCloneConfiguration.
        :param name: The name of this SourceCloneConfiguration.
        """
        self.openapi_types = {
            'connection_configuration': object,
            'name': str
        }

        self.attribute_map = {
            'connection_configuration': 'connectionConfiguration',
            'name': 'name'
        }

        self._connection_configuration = connection_configuration
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceCloneConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceCloneConfiguration of this SourceCloneConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_configuration(self):
        """Gets the connection_configuration of this SourceCloneConfiguration.

        The values required to configure the source. The schema for this must match the schema return by source_definition_specifications/get for the source.

        :return: The connection_configuration of this SourceCloneConfiguration.
        :rtype: object
        """
        return self._connection_configuration

    @connection_configuration.setter
    def connection_configuration(self, connection_configuration):
        """Sets the connection_configuration of this SourceCloneConfiguration.

        The values required to configure the source. The schema for this must match the schema return by source_definition_specifications/get for the source.

        :param connection_configuration: The connection_configuration of this SourceCloneConfiguration.
        :type connection_configuration: object
        """

        self._connection_configuration = connection_configuration

    @property
    def name(self):
        """Gets the name of this SourceCloneConfiguration.


        :return: The name of this SourceCloneConfiguration.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SourceCloneConfiguration.


        :param name: The name of this SourceCloneConfiguration.
        :type name: str
        """

        self._name = name
