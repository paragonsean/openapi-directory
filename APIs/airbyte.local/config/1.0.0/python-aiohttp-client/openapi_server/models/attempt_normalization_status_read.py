# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AttemptNormalizationStatusRead(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attempt_number: int=None, has_normalization_failed: bool=None, has_records_committed: bool=None, records_committed: int=None):
        """AttemptNormalizationStatusRead - a model defined in OpenAPI

        :param attempt_number: The attempt_number of this AttemptNormalizationStatusRead.
        :param has_normalization_failed: The has_normalization_failed of this AttemptNormalizationStatusRead.
        :param has_records_committed: The has_records_committed of this AttemptNormalizationStatusRead.
        :param records_committed: The records_committed of this AttemptNormalizationStatusRead.
        """
        self.openapi_types = {
            'attempt_number': int,
            'has_normalization_failed': bool,
            'has_records_committed': bool,
            'records_committed': int
        }

        self.attribute_map = {
            'attempt_number': 'attemptNumber',
            'has_normalization_failed': 'hasNormalizationFailed',
            'has_records_committed': 'hasRecordsCommitted',
            'records_committed': 'recordsCommitted'
        }

        self._attempt_number = attempt_number
        self._has_normalization_failed = has_normalization_failed
        self._has_records_committed = has_records_committed
        self._records_committed = records_committed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttemptNormalizationStatusRead':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttemptNormalizationStatusRead of this AttemptNormalizationStatusRead.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attempt_number(self):
        """Gets the attempt_number of this AttemptNormalizationStatusRead.


        :return: The attempt_number of this AttemptNormalizationStatusRead.
        :rtype: int
        """
        return self._attempt_number

    @attempt_number.setter
    def attempt_number(self, attempt_number):
        """Sets the attempt_number of this AttemptNormalizationStatusRead.


        :param attempt_number: The attempt_number of this AttemptNormalizationStatusRead.
        :type attempt_number: int
        """

        self._attempt_number = attempt_number

    @property
    def has_normalization_failed(self):
        """Gets the has_normalization_failed of this AttemptNormalizationStatusRead.


        :return: The has_normalization_failed of this AttemptNormalizationStatusRead.
        :rtype: bool
        """
        return self._has_normalization_failed

    @has_normalization_failed.setter
    def has_normalization_failed(self, has_normalization_failed):
        """Sets the has_normalization_failed of this AttemptNormalizationStatusRead.


        :param has_normalization_failed: The has_normalization_failed of this AttemptNormalizationStatusRead.
        :type has_normalization_failed: bool
        """

        self._has_normalization_failed = has_normalization_failed

    @property
    def has_records_committed(self):
        """Gets the has_records_committed of this AttemptNormalizationStatusRead.


        :return: The has_records_committed of this AttemptNormalizationStatusRead.
        :rtype: bool
        """
        return self._has_records_committed

    @has_records_committed.setter
    def has_records_committed(self, has_records_committed):
        """Sets the has_records_committed of this AttemptNormalizationStatusRead.


        :param has_records_committed: The has_records_committed of this AttemptNormalizationStatusRead.
        :type has_records_committed: bool
        """

        self._has_records_committed = has_records_committed

    @property
    def records_committed(self):
        """Gets the records_committed of this AttemptNormalizationStatusRead.


        :return: The records_committed of this AttemptNormalizationStatusRead.
        :rtype: int
        """
        return self._records_committed

    @records_committed.setter
    def records_committed(self, records_committed):
        """Sets the records_committed of this AttemptNormalizationStatusRead.


        :param records_committed: The records_committed of this AttemptNormalizationStatusRead.
        :type records_committed: int
        """

        self._records_committed = records_committed
