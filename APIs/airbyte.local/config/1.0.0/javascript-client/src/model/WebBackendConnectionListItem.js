/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConnectionScheduleData from './ConnectionScheduleData';
import ConnectionScheduleType from './ConnectionScheduleType';
import ConnectionStatus from './ConnectionStatus';
import DestinationSnippetRead from './DestinationSnippetRead';
import JobStatus from './JobStatus';
import SchemaChange from './SchemaChange';
import SourceSnippetRead from './SourceSnippetRead';

/**
 * The WebBackendConnectionListItem model module.
 * @module model/WebBackendConnectionListItem
 * @version 1.0.0
 */
class WebBackendConnectionListItem {
    /**
     * Constructs a new <code>WebBackendConnectionListItem</code>.
     * Information about a connection that shows up in the connection list view.
     * @alias module:model/WebBackendConnectionListItem
     * @param connectionId {String} 
     * @param destination {module:model/DestinationSnippetRead} 
     * @param isSyncing {Boolean} 
     * @param name {String} 
     * @param schemaChange {module:model/SchemaChange} 
     * @param source {module:model/SourceSnippetRead} 
     * @param status {module:model/ConnectionStatus} 
     */
    constructor(connectionId, destination, isSyncing, name, schemaChange, source, status) { 
        
        WebBackendConnectionListItem.initialize(this, connectionId, destination, isSyncing, name, schemaChange, source, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, connectionId, destination, isSyncing, name, schemaChange, source, status) { 
        obj['connectionId'] = connectionId;
        obj['destination'] = destination;
        obj['isSyncing'] = isSyncing;
        obj['name'] = name;
        obj['schemaChange'] = schemaChange;
        obj['source'] = source;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>WebBackendConnectionListItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebBackendConnectionListItem} obj Optional instance to populate.
     * @return {module:model/WebBackendConnectionListItem} The populated <code>WebBackendConnectionListItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebBackendConnectionListItem();

            if (data.hasOwnProperty('connectionId')) {
                obj['connectionId'] = ApiClient.convertToType(data['connectionId'], 'String');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = DestinationSnippetRead.constructFromObject(data['destination']);
            }
            if (data.hasOwnProperty('isSyncing')) {
                obj['isSyncing'] = ApiClient.convertToType(data['isSyncing'], 'Boolean');
            }
            if (data.hasOwnProperty('latestSyncJobCreatedAt')) {
                obj['latestSyncJobCreatedAt'] = ApiClient.convertToType(data['latestSyncJobCreatedAt'], 'Number');
            }
            if (data.hasOwnProperty('latestSyncJobStatus')) {
                obj['latestSyncJobStatus'] = JobStatus.constructFromObject(data['latestSyncJobStatus']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('scheduleData')) {
                obj['scheduleData'] = ConnectionScheduleData.constructFromObject(data['scheduleData']);
            }
            if (data.hasOwnProperty('scheduleType')) {
                obj['scheduleType'] = ConnectionScheduleType.constructFromObject(data['scheduleType']);
            }
            if (data.hasOwnProperty('schemaChange')) {
                obj['schemaChange'] = SchemaChange.constructFromObject(data['schemaChange']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = SourceSnippetRead.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ConnectionStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebBackendConnectionListItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebBackendConnectionListItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebBackendConnectionListItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['connectionId'] && !(typeof data['connectionId'] === 'string' || data['connectionId'] instanceof String)) {
            throw new Error("Expected the field `connectionId` to be a primitive type in the JSON string but got " + data['connectionId']);
        }
        // validate the optional field `destination`
        if (data['destination']) { // data not null
          DestinationSnippetRead.validateJSON(data['destination']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `scheduleData`
        if (data['scheduleData']) { // data not null
          ConnectionScheduleData.validateJSON(data['scheduleData']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          SourceSnippetRead.validateJSON(data['source']);
        }

        return true;
    }


}

WebBackendConnectionListItem.RequiredProperties = ["connectionId", "destination", "isSyncing", "name", "schemaChange", "source", "status"];

/**
 * @member {String} connectionId
 */
WebBackendConnectionListItem.prototype['connectionId'] = undefined;

/**
 * @member {module:model/DestinationSnippetRead} destination
 */
WebBackendConnectionListItem.prototype['destination'] = undefined;

/**
 * @member {Boolean} isSyncing
 */
WebBackendConnectionListItem.prototype['isSyncing'] = undefined;

/**
 * epoch time of the latest sync job. null if no sync job has taken place.
 * @member {Number} latestSyncJobCreatedAt
 */
WebBackendConnectionListItem.prototype['latestSyncJobCreatedAt'] = undefined;

/**
 * @member {module:model/JobStatus} latestSyncJobStatus
 */
WebBackendConnectionListItem.prototype['latestSyncJobStatus'] = undefined;

/**
 * @member {String} name
 */
WebBackendConnectionListItem.prototype['name'] = undefined;

/**
 * @member {module:model/ConnectionScheduleData} scheduleData
 */
WebBackendConnectionListItem.prototype['scheduleData'] = undefined;

/**
 * @member {module:model/ConnectionScheduleType} scheduleType
 */
WebBackendConnectionListItem.prototype['scheduleType'] = undefined;

/**
 * @member {module:model/SchemaChange} schemaChange
 */
WebBackendConnectionListItem.prototype['schemaChange'] = undefined;

/**
 * @member {module:model/SourceSnippetRead} source
 */
WebBackendConnectionListItem.prototype['source'] = undefined;

/**
 * @member {module:model/ConnectionStatus} status
 */
WebBackendConnectionListItem.prototype['status'] = undefined;






export default WebBackendConnectionListItem;

