/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobTypeResourceLimit from './JobTypeResourceLimit';
import ResourceRequirements from './ResourceRequirements';

/**
 * The ActorDefinitionResourceRequirements model module.
 * @module model/ActorDefinitionResourceRequirements
 * @version 1.0.0
 */
class ActorDefinitionResourceRequirements {
    /**
     * Constructs a new <code>ActorDefinitionResourceRequirements</code>.
     * actor definition specific resource requirements. if default is set, these are the requirements that should be set for ALL jobs run for this actor definition. it is overriden by the job type specific configurations. if not set, the platform will use defaults. these values will be overriden by configuration at the connection level.
     * @alias module:model/ActorDefinitionResourceRequirements
     */
    constructor() { 
        
        ActorDefinitionResourceRequirements.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActorDefinitionResourceRequirements</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActorDefinitionResourceRequirements} obj Optional instance to populate.
     * @return {module:model/ActorDefinitionResourceRequirements} The populated <code>ActorDefinitionResourceRequirements</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActorDefinitionResourceRequirements();

            if (data.hasOwnProperty('default')) {
                obj['default'] = ResourceRequirements.constructFromObject(data['default']);
            }
            if (data.hasOwnProperty('jobSpecific')) {
                obj['jobSpecific'] = ApiClient.convertToType(data['jobSpecific'], [JobTypeResourceLimit]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActorDefinitionResourceRequirements</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActorDefinitionResourceRequirements</code>.
     */
    static validateJSON(data) {
        // validate the optional field `default`
        if (data['default']) { // data not null
          ResourceRequirements.validateJSON(data['default']);
        }
        if (data['jobSpecific']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jobSpecific'])) {
                throw new Error("Expected the field `jobSpecific` to be an array in the JSON data but got " + data['jobSpecific']);
            }
            // validate the optional field `jobSpecific` (array)
            for (const item of data['jobSpecific']) {
                JobTypeResourceLimit.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/ResourceRequirements} default
 */
ActorDefinitionResourceRequirements.prototype['default'] = undefined;

/**
 * @member {Array.<module:model/JobTypeResourceLimit>} jobSpecific
 */
ActorDefinitionResourceRequirements.prototype['jobSpecific'] = undefined;






export default ActorDefinitionResourceRequirements;

