/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class DbMigrationState.
* @enum {}
* @readonly
*/
export default class DbMigrationState {
    
        /**
         * value: "pending"
         * @const
         */
        "pending" = "pending";

    
        /**
         * value: "above_target"
         * @const
         */
        "above_target" = "above_target";

    
        /**
         * value: "below_baseline"
         * @const
         */
        "below_baseline" = "below_baseline";

    
        /**
         * value: "baseline"
         * @const
         */
        "baseline" = "baseline";

    
        /**
         * value: "ignored"
         * @const
         */
        "ignored" = "ignored";

    
        /**
         * value: "missing_success"
         * @const
         */
        "missing_success" = "missing_success";

    
        /**
         * value: "missing_failed"
         * @const
         */
        "missing_failed" = "missing_failed";

    
        /**
         * value: "success"
         * @const
         */
        "success" = "success";

    
        /**
         * value: "undone"
         * @const
         */
        "undone" = "undone";

    
        /**
         * value: "available"
         * @const
         */
        "available" = "available";

    
        /**
         * value: "failed"
         * @const
         */
        "failed" = "failed";

    
        /**
         * value: "out_of_order"
         * @const
         */
        "out_of_order" = "out_of_order";

    
        /**
         * value: "future_success"
         * @const
         */
        "future_success" = "future_success";

    
        /**
         * value: "future_failed"
         * @const
         */
        "future_failed" = "future_failed";

    
        /**
         * value: "outdated"
         * @const
         */
        "outdated" = "outdated";

    
        /**
         * value: "superseded"
         * @const
         */
        "superseded" = "superseded";

    
        /**
         * value: "deleted"
         * @const
         */
        "deleted" = "deleted";

    

    /**
    * Returns a <code>DbMigrationState</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/DbMigrationState} The enum <code>DbMigrationState</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

