/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AttemptNormalizationStatusReadList from '../model/AttemptNormalizationStatusReadList';
import ConnectionState from '../model/ConnectionState';
import ConnectionStateCreateOrUpdate from '../model/ConnectionStateCreateOrUpdate';
import DiscoverCatalogResult from '../model/DiscoverCatalogResult';
import InternalOperationResult from '../model/InternalOperationResult';
import InvalidInputExceptionInfo from '../model/InvalidInputExceptionInfo';
import JobIdRequestBody from '../model/JobIdRequestBody';
import NotFoundKnownExceptionInfo from '../model/NotFoundKnownExceptionInfo';
import SaveAttemptSyncConfigRequestBody from '../model/SaveAttemptSyncConfigRequestBody';
import SaveStatsRequestBody from '../model/SaveStatsRequestBody';
import SetWorkflowInAttemptRequestBody from '../model/SetWorkflowInAttemptRequestBody';
import SourceDiscoverSchemaWriteRequestBody from '../model/SourceDiscoverSchemaWriteRequestBody';

/**
* Internal service.
* @module api/InternalApi
* @version 1.0.0
*/
export default class InternalApi {

    /**
    * Constructs a new InternalApi. 
    * @alias module:api/InternalApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOrUpdateState_0 operation.
     * @callback module:api/InternalApi~createOrUpdateState_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectionState} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update the state for a connection.
     * @param {module:model/ConnectionStateCreateOrUpdate} connectionStateCreateOrUpdate 
     * @param {module:api/InternalApi~createOrUpdateState_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectionState}
     */
    createOrUpdateState_0(connectionStateCreateOrUpdate, callback) {
      let postBody = connectionStateCreateOrUpdate;
      // verify the required parameter 'connectionStateCreateOrUpdate' is set
      if (connectionStateCreateOrUpdate === undefined || connectionStateCreateOrUpdate === null) {
        throw new Error("Missing the required parameter 'connectionStateCreateOrUpdate' when calling createOrUpdateState_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConnectionState;
      return this.apiClient.callApi(
        '/v1/state/create_or_update', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAttemptNormalizationStatusesForJob_0 operation.
     * @callback module:api/InternalApi~getAttemptNormalizationStatusesForJob_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/AttemptNormalizationStatusReadList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get normalization status to determine if we can bypass normalization phase
     * @param {Object} opts Optional parameters
     * @param {module:model/JobIdRequestBody} [jobIdRequestBody] 
     * @param {module:api/InternalApi~getAttemptNormalizationStatusesForJob_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttemptNormalizationStatusReadList}
     */
    getAttemptNormalizationStatusesForJob_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['jobIdRequestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AttemptNormalizationStatusReadList;
      return this.apiClient.callApi(
        '/v1/jobs/get_normalization_status', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the saveStats_0 operation.
     * @callback module:api/InternalApi~saveStats_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/InternalOperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * For worker to set sync stats of a running attempt.
     * @param {module:model/SaveStatsRequestBody} saveStatsRequestBody 
     * @param {module:api/InternalApi~saveStats_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InternalOperationResult}
     */
    saveStats_0(saveStatsRequestBody, callback) {
      let postBody = saveStatsRequestBody;
      // verify the required parameter 'saveStatsRequestBody' is set
      if (saveStatsRequestBody === undefined || saveStatsRequestBody === null) {
        throw new Error("Missing the required parameter 'saveStatsRequestBody' when calling saveStats_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InternalOperationResult;
      return this.apiClient.callApi(
        '/v1/attempt/save_stats', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the saveSyncConfig_0 operation.
     * @callback module:api/InternalApi~saveSyncConfig_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/InternalOperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * For worker to save the AttemptSyncConfig for an attempt.
     * @param {module:model/SaveAttemptSyncConfigRequestBody} saveAttemptSyncConfigRequestBody 
     * @param {module:api/InternalApi~saveSyncConfig_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InternalOperationResult}
     */
    saveSyncConfig_0(saveAttemptSyncConfigRequestBody, callback) {
      let postBody = saveAttemptSyncConfigRequestBody;
      // verify the required parameter 'saveAttemptSyncConfigRequestBody' is set
      if (saveAttemptSyncConfigRequestBody === undefined || saveAttemptSyncConfigRequestBody === null) {
        throw new Error("Missing the required parameter 'saveAttemptSyncConfigRequestBody' when calling saveSyncConfig_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InternalOperationResult;
      return this.apiClient.callApi(
        '/v1/attempt/save_sync_config', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setWorkflowInAttempt_0 operation.
     * @callback module:api/InternalApi~setWorkflowInAttempt_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/InternalOperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * For worker to register the workflow id in attempt.
     * @param {module:model/SetWorkflowInAttemptRequestBody} setWorkflowInAttemptRequestBody 
     * @param {module:api/InternalApi~setWorkflowInAttempt_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InternalOperationResult}
     */
    setWorkflowInAttempt_0(setWorkflowInAttemptRequestBody, callback) {
      let postBody = setWorkflowInAttemptRequestBody;
      // verify the required parameter 'setWorkflowInAttemptRequestBody' is set
      if (setWorkflowInAttemptRequestBody === undefined || setWorkflowInAttemptRequestBody === null) {
        throw new Error("Missing the required parameter 'setWorkflowInAttemptRequestBody' when calling setWorkflowInAttempt_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InternalOperationResult;
      return this.apiClient.callApi(
        '/v1/attempt/set_workflow_in_attempt', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the writeDiscoverCatalogResult_0 operation.
     * @callback module:api/InternalApi~writeDiscoverCatalogResult_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/DiscoverCatalogResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Should only called from worker, to write result from discover activity back to DB.
     * @param {module:model/SourceDiscoverSchemaWriteRequestBody} sourceDiscoverSchemaWriteRequestBody 
     * @param {module:api/InternalApi~writeDiscoverCatalogResult_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DiscoverCatalogResult}
     */
    writeDiscoverCatalogResult_0(sourceDiscoverSchemaWriteRequestBody, callback) {
      let postBody = sourceDiscoverSchemaWriteRequestBody;
      // verify the required parameter 'sourceDiscoverSchemaWriteRequestBody' is set
      if (sourceDiscoverSchemaWriteRequestBody === undefined || sourceDiscoverSchemaWriteRequestBody === null) {
        throw new Error("Missing the required parameter 'sourceDiscoverSchemaWriteRequestBody' when calling writeDiscoverCatalogResult_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DiscoverCatalogResult;
      return this.apiClient.callApi(
        '/v1/sources/write_discover_catalog_result', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
