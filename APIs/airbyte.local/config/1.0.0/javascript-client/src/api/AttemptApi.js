/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InternalOperationResult from '../model/InternalOperationResult';
import SaveAttemptSyncConfigRequestBody from '../model/SaveAttemptSyncConfigRequestBody';
import SaveStatsRequestBody from '../model/SaveStatsRequestBody';
import SetWorkflowInAttemptRequestBody from '../model/SetWorkflowInAttemptRequestBody';

/**
* Attempt service.
* @module api/AttemptApi
* @version 1.0.0
*/
export default class AttemptApi {

    /**
    * Constructs a new AttemptApi. 
    * @alias module:api/AttemptApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the saveStats operation.
     * @callback module:api/AttemptApi~saveStatsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InternalOperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * For worker to set sync stats of a running attempt.
     * @param {module:model/SaveStatsRequestBody} saveStatsRequestBody 
     * @param {module:api/AttemptApi~saveStatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InternalOperationResult}
     */
    saveStats(saveStatsRequestBody, callback) {
      let postBody = saveStatsRequestBody;
      // verify the required parameter 'saveStatsRequestBody' is set
      if (saveStatsRequestBody === undefined || saveStatsRequestBody === null) {
        throw new Error("Missing the required parameter 'saveStatsRequestBody' when calling saveStats");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InternalOperationResult;
      return this.apiClient.callApi(
        '/v1/attempt/save_stats', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the saveSyncConfig operation.
     * @callback module:api/AttemptApi~saveSyncConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InternalOperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * For worker to save the AttemptSyncConfig for an attempt.
     * @param {module:model/SaveAttemptSyncConfigRequestBody} saveAttemptSyncConfigRequestBody 
     * @param {module:api/AttemptApi~saveSyncConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InternalOperationResult}
     */
    saveSyncConfig(saveAttemptSyncConfigRequestBody, callback) {
      let postBody = saveAttemptSyncConfigRequestBody;
      // verify the required parameter 'saveAttemptSyncConfigRequestBody' is set
      if (saveAttemptSyncConfigRequestBody === undefined || saveAttemptSyncConfigRequestBody === null) {
        throw new Error("Missing the required parameter 'saveAttemptSyncConfigRequestBody' when calling saveSyncConfig");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InternalOperationResult;
      return this.apiClient.callApi(
        '/v1/attempt/save_sync_config', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setWorkflowInAttempt operation.
     * @callback module:api/AttemptApi~setWorkflowInAttemptCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InternalOperationResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * For worker to register the workflow id in attempt.
     * @param {module:model/SetWorkflowInAttemptRequestBody} setWorkflowInAttemptRequestBody 
     * @param {module:api/AttemptApi~setWorkflowInAttemptCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InternalOperationResult}
     */
    setWorkflowInAttempt(setWorkflowInAttemptRequestBody, callback) {
      let postBody = setWorkflowInAttemptRequestBody;
      // verify the required parameter 'setWorkflowInAttemptRequestBody' is set
      if (setWorkflowInAttemptRequestBody === undefined || setWorkflowInAttemptRequestBody === null) {
        throw new Error("Missing the required parameter 'setWorkflowInAttemptRequestBody' when calling setWorkflowInAttempt");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InternalOperationResult;
      return this.apiClient.callApi(
        '/v1/attempt/set_workflow_in_attempt', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
