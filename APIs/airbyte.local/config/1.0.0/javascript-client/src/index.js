/**
 * Airbyte Configuration API
 * Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@airbyte.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ActorCatalogWithUpdatedAt from './model/ActorCatalogWithUpdatedAt';
import ActorDefinitionResourceRequirements from './model/ActorDefinitionResourceRequirements';
import AdvancedAuth from './model/AdvancedAuth';
import AirbyteCatalog from './model/AirbyteCatalog';
import AirbyteStream from './model/AirbyteStream';
import AirbyteStreamAndConfiguration from './model/AirbyteStreamAndConfiguration';
import AirbyteStreamConfiguration from './model/AirbyteStreamConfiguration';
import AttemptFailureOrigin from './model/AttemptFailureOrigin';
import AttemptFailureReason from './model/AttemptFailureReason';
import AttemptFailureSummary from './model/AttemptFailureSummary';
import AttemptFailureType from './model/AttemptFailureType';
import AttemptInfoRead from './model/AttemptInfoRead';
import AttemptNormalizationStatusRead from './model/AttemptNormalizationStatusRead';
import AttemptNormalizationStatusReadList from './model/AttemptNormalizationStatusReadList';
import AttemptRead from './model/AttemptRead';
import AttemptStats from './model/AttemptStats';
import AttemptStatus from './model/AttemptStatus';
import AttemptStreamStats from './model/AttemptStreamStats';
import AttemptSyncConfig from './model/AttemptSyncConfig';
import AuthSpecification from './model/AuthSpecification';
import CatalogDiff from './model/CatalogDiff';
import CheckConnectionRead from './model/CheckConnectionRead';
import CheckOperationRead from './model/CheckOperationRead';
import CompleteDestinationOAuthRequest from './model/CompleteDestinationOAuthRequest';
import CompleteSourceOauthRequest from './model/CompleteSourceOauthRequest';
import ConnectionCreate from './model/ConnectionCreate';
import ConnectionIdRequestBody from './model/ConnectionIdRequestBody';
import ConnectionRead from './model/ConnectionRead';
import ConnectionReadList from './model/ConnectionReadList';
import ConnectionSchedule from './model/ConnectionSchedule';
import ConnectionScheduleData from './model/ConnectionScheduleData';
import ConnectionScheduleDataBasicSchedule from './model/ConnectionScheduleDataBasicSchedule';
import ConnectionScheduleDataCron from './model/ConnectionScheduleDataCron';
import ConnectionScheduleType from './model/ConnectionScheduleType';
import ConnectionSearch from './model/ConnectionSearch';
import ConnectionState from './model/ConnectionState';
import ConnectionStateCreateOrUpdate from './model/ConnectionStateCreateOrUpdate';
import ConnectionStateType from './model/ConnectionStateType';
import ConnectionStatus from './model/ConnectionStatus';
import ConnectionUpdate from './model/ConnectionUpdate';
import CustomDestinationDefinitionCreate from './model/CustomDestinationDefinitionCreate';
import CustomSourceDefinitionCreate from './model/CustomSourceDefinitionCreate';
import DataType from './model/DataType';
import DbMigrationExecutionRead from './model/DbMigrationExecutionRead';
import DbMigrationRead from './model/DbMigrationRead';
import DbMigrationReadList from './model/DbMigrationReadList';
import DbMigrationRequestBody from './model/DbMigrationRequestBody';
import DbMigrationState from './model/DbMigrationState';
import DestinationCloneConfiguration from './model/DestinationCloneConfiguration';
import DestinationCloneRequestBody from './model/DestinationCloneRequestBody';
import DestinationCoreConfig from './model/DestinationCoreConfig';
import DestinationCreate from './model/DestinationCreate';
import DestinationDefinitionCreate from './model/DestinationDefinitionCreate';
import DestinationDefinitionIdRequestBody from './model/DestinationDefinitionIdRequestBody';
import DestinationDefinitionIdWithWorkspaceId from './model/DestinationDefinitionIdWithWorkspaceId';
import DestinationDefinitionRead from './model/DestinationDefinitionRead';
import DestinationDefinitionReadList from './model/DestinationDefinitionReadList';
import DestinationDefinitionSpecificationRead from './model/DestinationDefinitionSpecificationRead';
import DestinationDefinitionUpdate from './model/DestinationDefinitionUpdate';
import DestinationIdRequestBody from './model/DestinationIdRequestBody';
import DestinationOauthConsentRequest from './model/DestinationOauthConsentRequest';
import DestinationRead from './model/DestinationRead';
import DestinationReadList from './model/DestinationReadList';
import DestinationSearch from './model/DestinationSearch';
import DestinationSnippetRead from './model/DestinationSnippetRead';
import DestinationSyncMode from './model/DestinationSyncMode';
import DestinationUpdate from './model/DestinationUpdate';
import DiscoverCatalogResult from './model/DiscoverCatalogResult';
import FieldAdd from './model/FieldAdd';
import FieldRemove from './model/FieldRemove';
import FieldSchemaUpdate from './model/FieldSchemaUpdate';
import FieldTransform from './model/FieldTransform';
import Geography from './model/Geography';
import GlobalState from './model/GlobalState';
import HealthCheckRead from './model/HealthCheckRead';
import ImportRead from './model/ImportRead';
import ImportRequestBody from './model/ImportRequestBody';
import InternalOperationResult from './model/InternalOperationResult';
import InvalidInputExceptionInfo from './model/InvalidInputExceptionInfo';
import InvalidInputProperty from './model/InvalidInputProperty';
import JobConfigType from './model/JobConfigType';
import JobDebugInfoRead from './model/JobDebugInfoRead';
import JobDebugRead from './model/JobDebugRead';
import JobIdRequestBody from './model/JobIdRequestBody';
import JobInfoLightRead from './model/JobInfoLightRead';
import JobInfoRead from './model/JobInfoRead';
import JobListRequestBody from './model/JobListRequestBody';
import JobOptionalRead from './model/JobOptionalRead';
import JobRead from './model/JobRead';
import JobReadList from './model/JobReadList';
import JobStatus from './model/JobStatus';
import JobType from './model/JobType';
import JobTypeResourceLimit from './model/JobTypeResourceLimit';
import JobWithAttemptsRead from './model/JobWithAttemptsRead';
import KnownExceptionInfo from './model/KnownExceptionInfo';
import LogRead from './model/LogRead';
import LogType from './model/LogType';
import LogsRequestBody from './model/LogsRequestBody';
import NamespaceDefinitionType from './model/NamespaceDefinitionType';
import NonBreakingChangesPreference from './model/NonBreakingChangesPreference';
import NormalizationDestinationDefinitionConfig from './model/NormalizationDestinationDefinitionConfig';
import NotFoundKnownExceptionInfo from './model/NotFoundKnownExceptionInfo';
import Notification from './model/Notification';
import NotificationRead from './model/NotificationRead';
import NotificationType from './model/NotificationType';
import OAuth2Specification from './model/OAuth2Specification';
import OAuthConfigSpecification from './model/OAuthConfigSpecification';
import OAuthConsentRead from './model/OAuthConsentRead';
import OperationCreate from './model/OperationCreate';
import OperationIdRequestBody from './model/OperationIdRequestBody';
import OperationRead from './model/OperationRead';
import OperationReadList from './model/OperationReadList';
import OperationUpdate from './model/OperationUpdate';
import OperatorConfiguration from './model/OperatorConfiguration';
import OperatorDbt from './model/OperatorDbt';
import OperatorNormalization from './model/OperatorNormalization';
import OperatorType from './model/OperatorType';
import OperatorWebhook from './model/OperatorWebhook';
import OperatorWebhookDbtCloud from './model/OperatorWebhookDbtCloud';
import Pagination from './model/Pagination';
import PrivateDestinationDefinitionRead from './model/PrivateDestinationDefinitionRead';
import PrivateDestinationDefinitionReadList from './model/PrivateDestinationDefinitionReadList';
import PrivateSourceDefinitionRead from './model/PrivateSourceDefinitionRead';
import PrivateSourceDefinitionReadList from './model/PrivateSourceDefinitionReadList';
import ReleaseStage from './model/ReleaseStage';
import ResetConfig from './model/ResetConfig';
import ResourceRequirements from './model/ResourceRequirements';
import SaveAttemptSyncConfigRequestBody from './model/SaveAttemptSyncConfigRequestBody';
import SaveStatsRequestBody from './model/SaveStatsRequestBody';
import SchemaChange from './model/SchemaChange';
import SelectedFieldInfo from './model/SelectedFieldInfo';
import SetInstancewideDestinationOauthParamsRequestBody from './model/SetInstancewideDestinationOauthParamsRequestBody';
import SetInstancewideSourceOauthParamsRequestBody from './model/SetInstancewideSourceOauthParamsRequestBody';
import SetWorkflowInAttemptRequestBody from './model/SetWorkflowInAttemptRequestBody';
import SlackNotificationConfiguration from './model/SlackNotificationConfiguration';
import SlugRequestBody from './model/SlugRequestBody';
import SourceCloneConfiguration from './model/SourceCloneConfiguration';
import SourceCloneRequestBody from './model/SourceCloneRequestBody';
import SourceCoreConfig from './model/SourceCoreConfig';
import SourceCreate from './model/SourceCreate';
import SourceDefinitionCreate from './model/SourceDefinitionCreate';
import SourceDefinitionIdRequestBody from './model/SourceDefinitionIdRequestBody';
import SourceDefinitionIdWithWorkspaceId from './model/SourceDefinitionIdWithWorkspaceId';
import SourceDefinitionRead from './model/SourceDefinitionRead';
import SourceDefinitionReadList from './model/SourceDefinitionReadList';
import SourceDefinitionSpecificationRead from './model/SourceDefinitionSpecificationRead';
import SourceDefinitionUpdate from './model/SourceDefinitionUpdate';
import SourceDiscoverSchemaRead from './model/SourceDiscoverSchemaRead';
import SourceDiscoverSchemaRequestBody from './model/SourceDiscoverSchemaRequestBody';
import SourceDiscoverSchemaWriteRequestBody from './model/SourceDiscoverSchemaWriteRequestBody';
import SourceIdRequestBody from './model/SourceIdRequestBody';
import SourceOauthConsentRequest from './model/SourceOauthConsentRequest';
import SourceRead from './model/SourceRead';
import SourceReadList from './model/SourceReadList';
import SourceSearch from './model/SourceSearch';
import SourceSnippetRead from './model/SourceSnippetRead';
import SourceUpdate from './model/SourceUpdate';
import StreamDescriptor from './model/StreamDescriptor';
import StreamState from './model/StreamState';
import StreamTransform from './model/StreamTransform';
import SyncMode from './model/SyncMode';
import SynchronousJobRead from './model/SynchronousJobRead';
import UploadRead from './model/UploadRead';
import WebBackendCheckUpdatesRead from './model/WebBackendCheckUpdatesRead';
import WebBackendConnectionCreate from './model/WebBackendConnectionCreate';
import WebBackendConnectionListItem from './model/WebBackendConnectionListItem';
import WebBackendConnectionListRequestBody from './model/WebBackendConnectionListRequestBody';
import WebBackendConnectionRead from './model/WebBackendConnectionRead';
import WebBackendConnectionReadList from './model/WebBackendConnectionReadList';
import WebBackendConnectionRequestBody from './model/WebBackendConnectionRequestBody';
import WebBackendConnectionUpdate from './model/WebBackendConnectionUpdate';
import WebBackendGeographiesListResult from './model/WebBackendGeographiesListResult';
import WebBackendOperationCreateOrUpdate from './model/WebBackendOperationCreateOrUpdate';
import WebBackendWorkspaceState from './model/WebBackendWorkspaceState';
import WebBackendWorkspaceStateResult from './model/WebBackendWorkspaceStateResult';
import WebhookConfigRead from './model/WebhookConfigRead';
import WebhookConfigWrite from './model/WebhookConfigWrite';
import WorkflowStateRead from './model/WorkflowStateRead';
import WorkspaceCreate from './model/WorkspaceCreate';
import WorkspaceGiveFeedback from './model/WorkspaceGiveFeedback';
import WorkspaceIdRequestBody from './model/WorkspaceIdRequestBody';
import WorkspaceRead from './model/WorkspaceRead';
import WorkspaceReadList from './model/WorkspaceReadList';
import WorkspaceUpdate from './model/WorkspaceUpdate';
import WorkspaceUpdateName from './model/WorkspaceUpdateName';
import AttemptApi from './api/AttemptApi';
import ConnectionApi from './api/ConnectionApi';
import DestinationApi from './api/DestinationApi';
import DestinationDefinitionApi from './api/DestinationDefinitionApi';
import DestinationDefinitionSpecificationApi from './api/DestinationDefinitionSpecificationApi';
import DestinationOauthApi from './api/DestinationOauthApi';
import HealthApi from './api/HealthApi';
import InternalApi from './api/InternalApi';
import JobsApi from './api/JobsApi';
import LogsApi from './api/LogsApi';
import NotificationsApi from './api/NotificationsApi';
import OpenapiApi from './api/OpenapiApi';
import OperationApi from './api/OperationApi';
import SchedulerApi from './api/SchedulerApi';
import SourceApi from './api/SourceApi';
import SourceDefinitionApi from './api/SourceDefinitionApi';
import SourceDefinitionSpecificationApi from './api/SourceDefinitionSpecificationApi';
import SourceOauthApi from './api/SourceOauthApi';
import StateApi from './api/StateApi';
import WebBackendApi from './api/WebBackendApi';
import WorkspaceApi from './api/WorkspaceApi';


/**
* Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via &#x60;application/json&#x60; request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. &#x60;localhost:8000/v1/connections/create&#x60;. * For all &#x60;update&#x60; methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are &#x60;airbyte&#x60; and &#x60;password&#x60; by default - so base64 encoding &#x60;airbyte:password&#x60; results in &#x60;YWlyYnl0ZTpwYXNzd29yZA&#x3D;&#x3D;&#x60;). So the full header reads &#x60;&#39;Authorization&#39;: \&quot;Basic YWlyYnl0ZTpwYXNzd29yZA&#x3D;&#x3D;\&quot;&#x60; .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AirbyteConfigurationApi = require('index'); // See note below*.
* var xxxSvc = new AirbyteConfigurationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AirbyteConfigurationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AirbyteConfigurationApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AirbyteConfigurationApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ActorCatalogWithUpdatedAt model constructor.
     * @property {module:model/ActorCatalogWithUpdatedAt}
     */
    ActorCatalogWithUpdatedAt,

    /**
     * The ActorDefinitionResourceRequirements model constructor.
     * @property {module:model/ActorDefinitionResourceRequirements}
     */
    ActorDefinitionResourceRequirements,

    /**
     * The AdvancedAuth model constructor.
     * @property {module:model/AdvancedAuth}
     */
    AdvancedAuth,

    /**
     * The AirbyteCatalog model constructor.
     * @property {module:model/AirbyteCatalog}
     */
    AirbyteCatalog,

    /**
     * The AirbyteStream model constructor.
     * @property {module:model/AirbyteStream}
     */
    AirbyteStream,

    /**
     * The AirbyteStreamAndConfiguration model constructor.
     * @property {module:model/AirbyteStreamAndConfiguration}
     */
    AirbyteStreamAndConfiguration,

    /**
     * The AirbyteStreamConfiguration model constructor.
     * @property {module:model/AirbyteStreamConfiguration}
     */
    AirbyteStreamConfiguration,

    /**
     * The AttemptFailureOrigin model constructor.
     * @property {module:model/AttemptFailureOrigin}
     */
    AttemptFailureOrigin,

    /**
     * The AttemptFailureReason model constructor.
     * @property {module:model/AttemptFailureReason}
     */
    AttemptFailureReason,

    /**
     * The AttemptFailureSummary model constructor.
     * @property {module:model/AttemptFailureSummary}
     */
    AttemptFailureSummary,

    /**
     * The AttemptFailureType model constructor.
     * @property {module:model/AttemptFailureType}
     */
    AttemptFailureType,

    /**
     * The AttemptInfoRead model constructor.
     * @property {module:model/AttemptInfoRead}
     */
    AttemptInfoRead,

    /**
     * The AttemptNormalizationStatusRead model constructor.
     * @property {module:model/AttemptNormalizationStatusRead}
     */
    AttemptNormalizationStatusRead,

    /**
     * The AttemptNormalizationStatusReadList model constructor.
     * @property {module:model/AttemptNormalizationStatusReadList}
     */
    AttemptNormalizationStatusReadList,

    /**
     * The AttemptRead model constructor.
     * @property {module:model/AttemptRead}
     */
    AttemptRead,

    /**
     * The AttemptStats model constructor.
     * @property {module:model/AttemptStats}
     */
    AttemptStats,

    /**
     * The AttemptStatus model constructor.
     * @property {module:model/AttemptStatus}
     */
    AttemptStatus,

    /**
     * The AttemptStreamStats model constructor.
     * @property {module:model/AttemptStreamStats}
     */
    AttemptStreamStats,

    /**
     * The AttemptSyncConfig model constructor.
     * @property {module:model/AttemptSyncConfig}
     */
    AttemptSyncConfig,

    /**
     * The AuthSpecification model constructor.
     * @property {module:model/AuthSpecification}
     */
    AuthSpecification,

    /**
     * The CatalogDiff model constructor.
     * @property {module:model/CatalogDiff}
     */
    CatalogDiff,

    /**
     * The CheckConnectionRead model constructor.
     * @property {module:model/CheckConnectionRead}
     */
    CheckConnectionRead,

    /**
     * The CheckOperationRead model constructor.
     * @property {module:model/CheckOperationRead}
     */
    CheckOperationRead,

    /**
     * The CompleteDestinationOAuthRequest model constructor.
     * @property {module:model/CompleteDestinationOAuthRequest}
     */
    CompleteDestinationOAuthRequest,

    /**
     * The CompleteSourceOauthRequest model constructor.
     * @property {module:model/CompleteSourceOauthRequest}
     */
    CompleteSourceOauthRequest,

    /**
     * The ConnectionCreate model constructor.
     * @property {module:model/ConnectionCreate}
     */
    ConnectionCreate,

    /**
     * The ConnectionIdRequestBody model constructor.
     * @property {module:model/ConnectionIdRequestBody}
     */
    ConnectionIdRequestBody,

    /**
     * The ConnectionRead model constructor.
     * @property {module:model/ConnectionRead}
     */
    ConnectionRead,

    /**
     * The ConnectionReadList model constructor.
     * @property {module:model/ConnectionReadList}
     */
    ConnectionReadList,

    /**
     * The ConnectionSchedule model constructor.
     * @property {module:model/ConnectionSchedule}
     */
    ConnectionSchedule,

    /**
     * The ConnectionScheduleData model constructor.
     * @property {module:model/ConnectionScheduleData}
     */
    ConnectionScheduleData,

    /**
     * The ConnectionScheduleDataBasicSchedule model constructor.
     * @property {module:model/ConnectionScheduleDataBasicSchedule}
     */
    ConnectionScheduleDataBasicSchedule,

    /**
     * The ConnectionScheduleDataCron model constructor.
     * @property {module:model/ConnectionScheduleDataCron}
     */
    ConnectionScheduleDataCron,

    /**
     * The ConnectionScheduleType model constructor.
     * @property {module:model/ConnectionScheduleType}
     */
    ConnectionScheduleType,

    /**
     * The ConnectionSearch model constructor.
     * @property {module:model/ConnectionSearch}
     */
    ConnectionSearch,

    /**
     * The ConnectionState model constructor.
     * @property {module:model/ConnectionState}
     */
    ConnectionState,

    /**
     * The ConnectionStateCreateOrUpdate model constructor.
     * @property {module:model/ConnectionStateCreateOrUpdate}
     */
    ConnectionStateCreateOrUpdate,

    /**
     * The ConnectionStateType model constructor.
     * @property {module:model/ConnectionStateType}
     */
    ConnectionStateType,

    /**
     * The ConnectionStatus model constructor.
     * @property {module:model/ConnectionStatus}
     */
    ConnectionStatus,

    /**
     * The ConnectionUpdate model constructor.
     * @property {module:model/ConnectionUpdate}
     */
    ConnectionUpdate,

    /**
     * The CustomDestinationDefinitionCreate model constructor.
     * @property {module:model/CustomDestinationDefinitionCreate}
     */
    CustomDestinationDefinitionCreate,

    /**
     * The CustomSourceDefinitionCreate model constructor.
     * @property {module:model/CustomSourceDefinitionCreate}
     */
    CustomSourceDefinitionCreate,

    /**
     * The DataType model constructor.
     * @property {module:model/DataType}
     */
    DataType,

    /**
     * The DbMigrationExecutionRead model constructor.
     * @property {module:model/DbMigrationExecutionRead}
     */
    DbMigrationExecutionRead,

    /**
     * The DbMigrationRead model constructor.
     * @property {module:model/DbMigrationRead}
     */
    DbMigrationRead,

    /**
     * The DbMigrationReadList model constructor.
     * @property {module:model/DbMigrationReadList}
     */
    DbMigrationReadList,

    /**
     * The DbMigrationRequestBody model constructor.
     * @property {module:model/DbMigrationRequestBody}
     */
    DbMigrationRequestBody,

    /**
     * The DbMigrationState model constructor.
     * @property {module:model/DbMigrationState}
     */
    DbMigrationState,

    /**
     * The DestinationCloneConfiguration model constructor.
     * @property {module:model/DestinationCloneConfiguration}
     */
    DestinationCloneConfiguration,

    /**
     * The DestinationCloneRequestBody model constructor.
     * @property {module:model/DestinationCloneRequestBody}
     */
    DestinationCloneRequestBody,

    /**
     * The DestinationCoreConfig model constructor.
     * @property {module:model/DestinationCoreConfig}
     */
    DestinationCoreConfig,

    /**
     * The DestinationCreate model constructor.
     * @property {module:model/DestinationCreate}
     */
    DestinationCreate,

    /**
     * The DestinationDefinitionCreate model constructor.
     * @property {module:model/DestinationDefinitionCreate}
     */
    DestinationDefinitionCreate,

    /**
     * The DestinationDefinitionIdRequestBody model constructor.
     * @property {module:model/DestinationDefinitionIdRequestBody}
     */
    DestinationDefinitionIdRequestBody,

    /**
     * The DestinationDefinitionIdWithWorkspaceId model constructor.
     * @property {module:model/DestinationDefinitionIdWithWorkspaceId}
     */
    DestinationDefinitionIdWithWorkspaceId,

    /**
     * The DestinationDefinitionRead model constructor.
     * @property {module:model/DestinationDefinitionRead}
     */
    DestinationDefinitionRead,

    /**
     * The DestinationDefinitionReadList model constructor.
     * @property {module:model/DestinationDefinitionReadList}
     */
    DestinationDefinitionReadList,

    /**
     * The DestinationDefinitionSpecificationRead model constructor.
     * @property {module:model/DestinationDefinitionSpecificationRead}
     */
    DestinationDefinitionSpecificationRead,

    /**
     * The DestinationDefinitionUpdate model constructor.
     * @property {module:model/DestinationDefinitionUpdate}
     */
    DestinationDefinitionUpdate,

    /**
     * The DestinationIdRequestBody model constructor.
     * @property {module:model/DestinationIdRequestBody}
     */
    DestinationIdRequestBody,

    /**
     * The DestinationOauthConsentRequest model constructor.
     * @property {module:model/DestinationOauthConsentRequest}
     */
    DestinationOauthConsentRequest,

    /**
     * The DestinationRead model constructor.
     * @property {module:model/DestinationRead}
     */
    DestinationRead,

    /**
     * The DestinationReadList model constructor.
     * @property {module:model/DestinationReadList}
     */
    DestinationReadList,

    /**
     * The DestinationSearch model constructor.
     * @property {module:model/DestinationSearch}
     */
    DestinationSearch,

    /**
     * The DestinationSnippetRead model constructor.
     * @property {module:model/DestinationSnippetRead}
     */
    DestinationSnippetRead,

    /**
     * The DestinationSyncMode model constructor.
     * @property {module:model/DestinationSyncMode}
     */
    DestinationSyncMode,

    /**
     * The DestinationUpdate model constructor.
     * @property {module:model/DestinationUpdate}
     */
    DestinationUpdate,

    /**
     * The DiscoverCatalogResult model constructor.
     * @property {module:model/DiscoverCatalogResult}
     */
    DiscoverCatalogResult,

    /**
     * The FieldAdd model constructor.
     * @property {module:model/FieldAdd}
     */
    FieldAdd,

    /**
     * The FieldRemove model constructor.
     * @property {module:model/FieldRemove}
     */
    FieldRemove,

    /**
     * The FieldSchemaUpdate model constructor.
     * @property {module:model/FieldSchemaUpdate}
     */
    FieldSchemaUpdate,

    /**
     * The FieldTransform model constructor.
     * @property {module:model/FieldTransform}
     */
    FieldTransform,

    /**
     * The Geography model constructor.
     * @property {module:model/Geography}
     */
    Geography,

    /**
     * The GlobalState model constructor.
     * @property {module:model/GlobalState}
     */
    GlobalState,

    /**
     * The HealthCheckRead model constructor.
     * @property {module:model/HealthCheckRead}
     */
    HealthCheckRead,

    /**
     * The ImportRead model constructor.
     * @property {module:model/ImportRead}
     */
    ImportRead,

    /**
     * The ImportRequestBody model constructor.
     * @property {module:model/ImportRequestBody}
     */
    ImportRequestBody,

    /**
     * The InternalOperationResult model constructor.
     * @property {module:model/InternalOperationResult}
     */
    InternalOperationResult,

    /**
     * The InvalidInputExceptionInfo model constructor.
     * @property {module:model/InvalidInputExceptionInfo}
     */
    InvalidInputExceptionInfo,

    /**
     * The InvalidInputProperty model constructor.
     * @property {module:model/InvalidInputProperty}
     */
    InvalidInputProperty,

    /**
     * The JobConfigType model constructor.
     * @property {module:model/JobConfigType}
     */
    JobConfigType,

    /**
     * The JobDebugInfoRead model constructor.
     * @property {module:model/JobDebugInfoRead}
     */
    JobDebugInfoRead,

    /**
     * The JobDebugRead model constructor.
     * @property {module:model/JobDebugRead}
     */
    JobDebugRead,

    /**
     * The JobIdRequestBody model constructor.
     * @property {module:model/JobIdRequestBody}
     */
    JobIdRequestBody,

    /**
     * The JobInfoLightRead model constructor.
     * @property {module:model/JobInfoLightRead}
     */
    JobInfoLightRead,

    /**
     * The JobInfoRead model constructor.
     * @property {module:model/JobInfoRead}
     */
    JobInfoRead,

    /**
     * The JobListRequestBody model constructor.
     * @property {module:model/JobListRequestBody}
     */
    JobListRequestBody,

    /**
     * The JobOptionalRead model constructor.
     * @property {module:model/JobOptionalRead}
     */
    JobOptionalRead,

    /**
     * The JobRead model constructor.
     * @property {module:model/JobRead}
     */
    JobRead,

    /**
     * The JobReadList model constructor.
     * @property {module:model/JobReadList}
     */
    JobReadList,

    /**
     * The JobStatus model constructor.
     * @property {module:model/JobStatus}
     */
    JobStatus,

    /**
     * The JobType model constructor.
     * @property {module:model/JobType}
     */
    JobType,

    /**
     * The JobTypeResourceLimit model constructor.
     * @property {module:model/JobTypeResourceLimit}
     */
    JobTypeResourceLimit,

    /**
     * The JobWithAttemptsRead model constructor.
     * @property {module:model/JobWithAttemptsRead}
     */
    JobWithAttemptsRead,

    /**
     * The KnownExceptionInfo model constructor.
     * @property {module:model/KnownExceptionInfo}
     */
    KnownExceptionInfo,

    /**
     * The LogRead model constructor.
     * @property {module:model/LogRead}
     */
    LogRead,

    /**
     * The LogType model constructor.
     * @property {module:model/LogType}
     */
    LogType,

    /**
     * The LogsRequestBody model constructor.
     * @property {module:model/LogsRequestBody}
     */
    LogsRequestBody,

    /**
     * The NamespaceDefinitionType model constructor.
     * @property {module:model/NamespaceDefinitionType}
     */
    NamespaceDefinitionType,

    /**
     * The NonBreakingChangesPreference model constructor.
     * @property {module:model/NonBreakingChangesPreference}
     */
    NonBreakingChangesPreference,

    /**
     * The NormalizationDestinationDefinitionConfig model constructor.
     * @property {module:model/NormalizationDestinationDefinitionConfig}
     */
    NormalizationDestinationDefinitionConfig,

    /**
     * The NotFoundKnownExceptionInfo model constructor.
     * @property {module:model/NotFoundKnownExceptionInfo}
     */
    NotFoundKnownExceptionInfo,

    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification,

    /**
     * The NotificationRead model constructor.
     * @property {module:model/NotificationRead}
     */
    NotificationRead,

    /**
     * The NotificationType model constructor.
     * @property {module:model/NotificationType}
     */
    NotificationType,

    /**
     * The OAuth2Specification model constructor.
     * @property {module:model/OAuth2Specification}
     */
    OAuth2Specification,

    /**
     * The OAuthConfigSpecification model constructor.
     * @property {module:model/OAuthConfigSpecification}
     */
    OAuthConfigSpecification,

    /**
     * The OAuthConsentRead model constructor.
     * @property {module:model/OAuthConsentRead}
     */
    OAuthConsentRead,

    /**
     * The OperationCreate model constructor.
     * @property {module:model/OperationCreate}
     */
    OperationCreate,

    /**
     * The OperationIdRequestBody model constructor.
     * @property {module:model/OperationIdRequestBody}
     */
    OperationIdRequestBody,

    /**
     * The OperationRead model constructor.
     * @property {module:model/OperationRead}
     */
    OperationRead,

    /**
     * The OperationReadList model constructor.
     * @property {module:model/OperationReadList}
     */
    OperationReadList,

    /**
     * The OperationUpdate model constructor.
     * @property {module:model/OperationUpdate}
     */
    OperationUpdate,

    /**
     * The OperatorConfiguration model constructor.
     * @property {module:model/OperatorConfiguration}
     */
    OperatorConfiguration,

    /**
     * The OperatorDbt model constructor.
     * @property {module:model/OperatorDbt}
     */
    OperatorDbt,

    /**
     * The OperatorNormalization model constructor.
     * @property {module:model/OperatorNormalization}
     */
    OperatorNormalization,

    /**
     * The OperatorType model constructor.
     * @property {module:model/OperatorType}
     */
    OperatorType,

    /**
     * The OperatorWebhook model constructor.
     * @property {module:model/OperatorWebhook}
     */
    OperatorWebhook,

    /**
     * The OperatorWebhookDbtCloud model constructor.
     * @property {module:model/OperatorWebhookDbtCloud}
     */
    OperatorWebhookDbtCloud,

    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination,

    /**
     * The PrivateDestinationDefinitionRead model constructor.
     * @property {module:model/PrivateDestinationDefinitionRead}
     */
    PrivateDestinationDefinitionRead,

    /**
     * The PrivateDestinationDefinitionReadList model constructor.
     * @property {module:model/PrivateDestinationDefinitionReadList}
     */
    PrivateDestinationDefinitionReadList,

    /**
     * The PrivateSourceDefinitionRead model constructor.
     * @property {module:model/PrivateSourceDefinitionRead}
     */
    PrivateSourceDefinitionRead,

    /**
     * The PrivateSourceDefinitionReadList model constructor.
     * @property {module:model/PrivateSourceDefinitionReadList}
     */
    PrivateSourceDefinitionReadList,

    /**
     * The ReleaseStage model constructor.
     * @property {module:model/ReleaseStage}
     */
    ReleaseStage,

    /**
     * The ResetConfig model constructor.
     * @property {module:model/ResetConfig}
     */
    ResetConfig,

    /**
     * The ResourceRequirements model constructor.
     * @property {module:model/ResourceRequirements}
     */
    ResourceRequirements,

    /**
     * The SaveAttemptSyncConfigRequestBody model constructor.
     * @property {module:model/SaveAttemptSyncConfigRequestBody}
     */
    SaveAttemptSyncConfigRequestBody,

    /**
     * The SaveStatsRequestBody model constructor.
     * @property {module:model/SaveStatsRequestBody}
     */
    SaveStatsRequestBody,

    /**
     * The SchemaChange model constructor.
     * @property {module:model/SchemaChange}
     */
    SchemaChange,

    /**
     * The SelectedFieldInfo model constructor.
     * @property {module:model/SelectedFieldInfo}
     */
    SelectedFieldInfo,

    /**
     * The SetInstancewideDestinationOauthParamsRequestBody model constructor.
     * @property {module:model/SetInstancewideDestinationOauthParamsRequestBody}
     */
    SetInstancewideDestinationOauthParamsRequestBody,

    /**
     * The SetInstancewideSourceOauthParamsRequestBody model constructor.
     * @property {module:model/SetInstancewideSourceOauthParamsRequestBody}
     */
    SetInstancewideSourceOauthParamsRequestBody,

    /**
     * The SetWorkflowInAttemptRequestBody model constructor.
     * @property {module:model/SetWorkflowInAttemptRequestBody}
     */
    SetWorkflowInAttemptRequestBody,

    /**
     * The SlackNotificationConfiguration model constructor.
     * @property {module:model/SlackNotificationConfiguration}
     */
    SlackNotificationConfiguration,

    /**
     * The SlugRequestBody model constructor.
     * @property {module:model/SlugRequestBody}
     */
    SlugRequestBody,

    /**
     * The SourceCloneConfiguration model constructor.
     * @property {module:model/SourceCloneConfiguration}
     */
    SourceCloneConfiguration,

    /**
     * The SourceCloneRequestBody model constructor.
     * @property {module:model/SourceCloneRequestBody}
     */
    SourceCloneRequestBody,

    /**
     * The SourceCoreConfig model constructor.
     * @property {module:model/SourceCoreConfig}
     */
    SourceCoreConfig,

    /**
     * The SourceCreate model constructor.
     * @property {module:model/SourceCreate}
     */
    SourceCreate,

    /**
     * The SourceDefinitionCreate model constructor.
     * @property {module:model/SourceDefinitionCreate}
     */
    SourceDefinitionCreate,

    /**
     * The SourceDefinitionIdRequestBody model constructor.
     * @property {module:model/SourceDefinitionIdRequestBody}
     */
    SourceDefinitionIdRequestBody,

    /**
     * The SourceDefinitionIdWithWorkspaceId model constructor.
     * @property {module:model/SourceDefinitionIdWithWorkspaceId}
     */
    SourceDefinitionIdWithWorkspaceId,

    /**
     * The SourceDefinitionRead model constructor.
     * @property {module:model/SourceDefinitionRead}
     */
    SourceDefinitionRead,

    /**
     * The SourceDefinitionReadList model constructor.
     * @property {module:model/SourceDefinitionReadList}
     */
    SourceDefinitionReadList,

    /**
     * The SourceDefinitionSpecificationRead model constructor.
     * @property {module:model/SourceDefinitionSpecificationRead}
     */
    SourceDefinitionSpecificationRead,

    /**
     * The SourceDefinitionUpdate model constructor.
     * @property {module:model/SourceDefinitionUpdate}
     */
    SourceDefinitionUpdate,

    /**
     * The SourceDiscoverSchemaRead model constructor.
     * @property {module:model/SourceDiscoverSchemaRead}
     */
    SourceDiscoverSchemaRead,

    /**
     * The SourceDiscoverSchemaRequestBody model constructor.
     * @property {module:model/SourceDiscoverSchemaRequestBody}
     */
    SourceDiscoverSchemaRequestBody,

    /**
     * The SourceDiscoverSchemaWriteRequestBody model constructor.
     * @property {module:model/SourceDiscoverSchemaWriteRequestBody}
     */
    SourceDiscoverSchemaWriteRequestBody,

    /**
     * The SourceIdRequestBody model constructor.
     * @property {module:model/SourceIdRequestBody}
     */
    SourceIdRequestBody,

    /**
     * The SourceOauthConsentRequest model constructor.
     * @property {module:model/SourceOauthConsentRequest}
     */
    SourceOauthConsentRequest,

    /**
     * The SourceRead model constructor.
     * @property {module:model/SourceRead}
     */
    SourceRead,

    /**
     * The SourceReadList model constructor.
     * @property {module:model/SourceReadList}
     */
    SourceReadList,

    /**
     * The SourceSearch model constructor.
     * @property {module:model/SourceSearch}
     */
    SourceSearch,

    /**
     * The SourceSnippetRead model constructor.
     * @property {module:model/SourceSnippetRead}
     */
    SourceSnippetRead,

    /**
     * The SourceUpdate model constructor.
     * @property {module:model/SourceUpdate}
     */
    SourceUpdate,

    /**
     * The StreamDescriptor model constructor.
     * @property {module:model/StreamDescriptor}
     */
    StreamDescriptor,

    /**
     * The StreamState model constructor.
     * @property {module:model/StreamState}
     */
    StreamState,

    /**
     * The StreamTransform model constructor.
     * @property {module:model/StreamTransform}
     */
    StreamTransform,

    /**
     * The SyncMode model constructor.
     * @property {module:model/SyncMode}
     */
    SyncMode,

    /**
     * The SynchronousJobRead model constructor.
     * @property {module:model/SynchronousJobRead}
     */
    SynchronousJobRead,

    /**
     * The UploadRead model constructor.
     * @property {module:model/UploadRead}
     */
    UploadRead,

    /**
     * The WebBackendCheckUpdatesRead model constructor.
     * @property {module:model/WebBackendCheckUpdatesRead}
     */
    WebBackendCheckUpdatesRead,

    /**
     * The WebBackendConnectionCreate model constructor.
     * @property {module:model/WebBackendConnectionCreate}
     */
    WebBackendConnectionCreate,

    /**
     * The WebBackendConnectionListItem model constructor.
     * @property {module:model/WebBackendConnectionListItem}
     */
    WebBackendConnectionListItem,

    /**
     * The WebBackendConnectionListRequestBody model constructor.
     * @property {module:model/WebBackendConnectionListRequestBody}
     */
    WebBackendConnectionListRequestBody,

    /**
     * The WebBackendConnectionRead model constructor.
     * @property {module:model/WebBackendConnectionRead}
     */
    WebBackendConnectionRead,

    /**
     * The WebBackendConnectionReadList model constructor.
     * @property {module:model/WebBackendConnectionReadList}
     */
    WebBackendConnectionReadList,

    /**
     * The WebBackendConnectionRequestBody model constructor.
     * @property {module:model/WebBackendConnectionRequestBody}
     */
    WebBackendConnectionRequestBody,

    /**
     * The WebBackendConnectionUpdate model constructor.
     * @property {module:model/WebBackendConnectionUpdate}
     */
    WebBackendConnectionUpdate,

    /**
     * The WebBackendGeographiesListResult model constructor.
     * @property {module:model/WebBackendGeographiesListResult}
     */
    WebBackendGeographiesListResult,

    /**
     * The WebBackendOperationCreateOrUpdate model constructor.
     * @property {module:model/WebBackendOperationCreateOrUpdate}
     */
    WebBackendOperationCreateOrUpdate,

    /**
     * The WebBackendWorkspaceState model constructor.
     * @property {module:model/WebBackendWorkspaceState}
     */
    WebBackendWorkspaceState,

    /**
     * The WebBackendWorkspaceStateResult model constructor.
     * @property {module:model/WebBackendWorkspaceStateResult}
     */
    WebBackendWorkspaceStateResult,

    /**
     * The WebhookConfigRead model constructor.
     * @property {module:model/WebhookConfigRead}
     */
    WebhookConfigRead,

    /**
     * The WebhookConfigWrite model constructor.
     * @property {module:model/WebhookConfigWrite}
     */
    WebhookConfigWrite,

    /**
     * The WorkflowStateRead model constructor.
     * @property {module:model/WorkflowStateRead}
     */
    WorkflowStateRead,

    /**
     * The WorkspaceCreate model constructor.
     * @property {module:model/WorkspaceCreate}
     */
    WorkspaceCreate,

    /**
     * The WorkspaceGiveFeedback model constructor.
     * @property {module:model/WorkspaceGiveFeedback}
     */
    WorkspaceGiveFeedback,

    /**
     * The WorkspaceIdRequestBody model constructor.
     * @property {module:model/WorkspaceIdRequestBody}
     */
    WorkspaceIdRequestBody,

    /**
     * The WorkspaceRead model constructor.
     * @property {module:model/WorkspaceRead}
     */
    WorkspaceRead,

    /**
     * The WorkspaceReadList model constructor.
     * @property {module:model/WorkspaceReadList}
     */
    WorkspaceReadList,

    /**
     * The WorkspaceUpdate model constructor.
     * @property {module:model/WorkspaceUpdate}
     */
    WorkspaceUpdate,

    /**
     * The WorkspaceUpdateName model constructor.
     * @property {module:model/WorkspaceUpdateName}
     */
    WorkspaceUpdateName,

    /**
    * The AttemptApi service constructor.
    * @property {module:api/AttemptApi}
    */
    AttemptApi,

    /**
    * The ConnectionApi service constructor.
    * @property {module:api/ConnectionApi}
    */
    ConnectionApi,

    /**
    * The DestinationApi service constructor.
    * @property {module:api/DestinationApi}
    */
    DestinationApi,

    /**
    * The DestinationDefinitionApi service constructor.
    * @property {module:api/DestinationDefinitionApi}
    */
    DestinationDefinitionApi,

    /**
    * The DestinationDefinitionSpecificationApi service constructor.
    * @property {module:api/DestinationDefinitionSpecificationApi}
    */
    DestinationDefinitionSpecificationApi,

    /**
    * The DestinationOauthApi service constructor.
    * @property {module:api/DestinationOauthApi}
    */
    DestinationOauthApi,

    /**
    * The HealthApi service constructor.
    * @property {module:api/HealthApi}
    */
    HealthApi,

    /**
    * The InternalApi service constructor.
    * @property {module:api/InternalApi}
    */
    InternalApi,

    /**
    * The JobsApi service constructor.
    * @property {module:api/JobsApi}
    */
    JobsApi,

    /**
    * The LogsApi service constructor.
    * @property {module:api/LogsApi}
    */
    LogsApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The OpenapiApi service constructor.
    * @property {module:api/OpenapiApi}
    */
    OpenapiApi,

    /**
    * The OperationApi service constructor.
    * @property {module:api/OperationApi}
    */
    OperationApi,

    /**
    * The SchedulerApi service constructor.
    * @property {module:api/SchedulerApi}
    */
    SchedulerApi,

    /**
    * The SourceApi service constructor.
    * @property {module:api/SourceApi}
    */
    SourceApi,

    /**
    * The SourceDefinitionApi service constructor.
    * @property {module:api/SourceDefinitionApi}
    */
    SourceDefinitionApi,

    /**
    * The SourceDefinitionSpecificationApi service constructor.
    * @property {module:api/SourceDefinitionSpecificationApi}
    */
    SourceDefinitionSpecificationApi,

    /**
    * The SourceOauthApi service constructor.
    * @property {module:api/SourceOauthApi}
    */
    SourceOauthApi,

    /**
    * The StateApi service constructor.
    * @property {module:api/StateApi}
    */
    StateApi,

    /**
    * The WebBackendApi service constructor.
    * @property {module:api/WebBackendApi}
    */
    WebBackendApi,

    /**
    * The WorkspaceApi service constructor.
    * @property {module:api/WorkspaceApi}
    */
    WorkspaceApi
};
