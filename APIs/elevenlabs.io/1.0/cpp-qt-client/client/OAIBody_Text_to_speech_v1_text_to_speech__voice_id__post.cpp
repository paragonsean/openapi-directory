/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post() {
    this->initializeModel();
}

OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::~OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post() {}

void OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::initializeModel() {

    m_text_isSet = false;
    m_text_isValid = false;

    m_voice_settings_isSet = false;
    m_voice_settings_isValid = false;
}

void OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::fromJsonObject(QJsonObject json) {

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_voice_settings_isValid = ::OpenAPI::fromJsonValue(m_voice_settings, json[QString("voice_settings")]);
    m_voice_settings_isSet = !json[QString("voice_settings")].isNull() && m_voice_settings_isValid;
}

QString OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::asJsonObject() const {
    QJsonObject obj;
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_voice_settings.isSet()) {
        obj.insert(QString("voice_settings"), ::OpenAPI::toJsonValue(m_voice_settings));
    }
    return obj;
}

QString OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::getText() const {
    return m_text;
}
void OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::is_text_Set() const{
    return m_text_isSet;
}

bool OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::is_text_Valid() const{
    return m_text_isValid;
}

OAIVoiceSettingsResponseModel OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::getVoiceSettings() const {
    return m_voice_settings;
}
void OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::setVoiceSettings(const OAIVoiceSettingsResponseModel &voice_settings) {
    m_voice_settings = voice_settings;
    m_voice_settings_isSet = true;
}

bool OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::is_voice_settings_Set() const{
    return m_voice_settings_isSet;
}

bool OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::is_voice_settings_Valid() const{
    return m_voice_settings_isValid;
}

bool OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBody_Text_to_speech_v1_text_to_speech__voice_id__post::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_text_isValid && true;
}

} // namespace OpenAPI
