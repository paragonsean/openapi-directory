/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerificationAttemptResponseModel.h
 *
 * 
 */

#ifndef OAIVerificationAttemptResponseModel_H
#define OAIVerificationAttemptResponseModel_H

#include <QJsonObject>

#include "OAIRecordingResponseModel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecordingResponseModel;

class OAIVerificationAttemptResponseModel : public OAIObject {
public:
    OAIVerificationAttemptResponseModel();
    OAIVerificationAttemptResponseModel(QString json);
    ~OAIVerificationAttemptResponseModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAccepted() const;
    void setAccepted(const bool &accepted);
    bool is_accepted_Set() const;
    bool is_accepted_Valid() const;

    qint32 getDateUnix() const;
    void setDateUnix(const qint32 &date_unix);
    bool is_date_unix_Set() const;
    bool is_date_unix_Valid() const;

    double getLevenshteinDistance() const;
    void setLevenshteinDistance(const double &levenshtein_distance);
    bool is_levenshtein_distance_Set() const;
    bool is_levenshtein_distance_Valid() const;

    OAIRecordingResponseModel getRecording() const;
    void setRecording(const OAIRecordingResponseModel &recording);
    bool is_recording_Set() const;
    bool is_recording_Valid() const;

    double getSimilarity() const;
    void setSimilarity(const double &similarity);
    bool is_similarity_Set() const;
    bool is_similarity_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_accepted;
    bool m_accepted_isSet;
    bool m_accepted_isValid;

    qint32 m_date_unix;
    bool m_date_unix_isSet;
    bool m_date_unix_isValid;

    double m_levenshtein_distance;
    bool m_levenshtein_distance_isSet;
    bool m_levenshtein_distance_isValid;

    OAIRecordingResponseModel m_recording;
    bool m_recording_isSet;
    bool m_recording_isValid;

    double m_similarity;
    bool m_similarity_isSet;
    bool m_similarity_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerificationAttemptResponseModel)

#endif // OAIVerificationAttemptResponseModel_H
