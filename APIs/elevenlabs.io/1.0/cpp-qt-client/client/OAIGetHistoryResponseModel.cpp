/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetHistoryResponseModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetHistoryResponseModel::OAIGetHistoryResponseModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetHistoryResponseModel::OAIGetHistoryResponseModel() {
    this->initializeModel();
}

OAIGetHistoryResponseModel::~OAIGetHistoryResponseModel() {}

void OAIGetHistoryResponseModel::initializeModel() {

    m_history_isSet = false;
    m_history_isValid = false;
}

void OAIGetHistoryResponseModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetHistoryResponseModel::fromJsonObject(QJsonObject json) {

    m_history_isValid = ::OpenAPI::fromJsonValue(m_history, json[QString("history")]);
    m_history_isSet = !json[QString("history")].isNull() && m_history_isValid;
}

QString OAIGetHistoryResponseModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetHistoryResponseModel::asJsonObject() const {
    QJsonObject obj;
    if (m_history.size() > 0) {
        obj.insert(QString("history"), ::OpenAPI::toJsonValue(m_history));
    }
    return obj;
}

QList<OAIHistoryItemResponseModel> OAIGetHistoryResponseModel::getHistory() const {
    return m_history;
}
void OAIGetHistoryResponseModel::setHistory(const QList<OAIHistoryItemResponseModel> &history) {
    m_history = history;
    m_history_isSet = true;
}

bool OAIGetHistoryResponseModel::is_history_Set() const{
    return m_history_isSet;
}

bool OAIGetHistoryResponseModel::is_history_Valid() const{
    return m_history_isValid;
}

bool OAIGetHistoryResponseModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_history.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetHistoryResponseModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_history_isValid && true;
}

} // namespace OpenAPI
