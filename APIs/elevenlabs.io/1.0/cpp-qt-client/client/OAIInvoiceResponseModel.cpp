/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceResponseModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceResponseModel::OAIInvoiceResponseModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceResponseModel::OAIInvoiceResponseModel() {
    this->initializeModel();
}

OAIInvoiceResponseModel::~OAIInvoiceResponseModel() {}

void OAIInvoiceResponseModel::initializeModel() {

    m_amount_due_cents_isSet = false;
    m_amount_due_cents_isValid = false;

    m_next_payment_attempt_unix_isSet = false;
    m_next_payment_attempt_unix_isValid = false;
}

void OAIInvoiceResponseModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceResponseModel::fromJsonObject(QJsonObject json) {

    m_amount_due_cents_isValid = ::OpenAPI::fromJsonValue(m_amount_due_cents, json[QString("amount_due_cents")]);
    m_amount_due_cents_isSet = !json[QString("amount_due_cents")].isNull() && m_amount_due_cents_isValid;

    m_next_payment_attempt_unix_isValid = ::OpenAPI::fromJsonValue(m_next_payment_attempt_unix, json[QString("next_payment_attempt_unix")]);
    m_next_payment_attempt_unix_isSet = !json[QString("next_payment_attempt_unix")].isNull() && m_next_payment_attempt_unix_isValid;
}

QString OAIInvoiceResponseModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceResponseModel::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_due_cents_isSet) {
        obj.insert(QString("amount_due_cents"), ::OpenAPI::toJsonValue(m_amount_due_cents));
    }
    if (m_next_payment_attempt_unix_isSet) {
        obj.insert(QString("next_payment_attempt_unix"), ::OpenAPI::toJsonValue(m_next_payment_attempt_unix));
    }
    return obj;
}

qint32 OAIInvoiceResponseModel::getAmountDueCents() const {
    return m_amount_due_cents;
}
void OAIInvoiceResponseModel::setAmountDueCents(const qint32 &amount_due_cents) {
    m_amount_due_cents = amount_due_cents;
    m_amount_due_cents_isSet = true;
}

bool OAIInvoiceResponseModel::is_amount_due_cents_Set() const{
    return m_amount_due_cents_isSet;
}

bool OAIInvoiceResponseModel::is_amount_due_cents_Valid() const{
    return m_amount_due_cents_isValid;
}

qint32 OAIInvoiceResponseModel::getNextPaymentAttemptUnix() const {
    return m_next_payment_attempt_unix;
}
void OAIInvoiceResponseModel::setNextPaymentAttemptUnix(const qint32 &next_payment_attempt_unix) {
    m_next_payment_attempt_unix = next_payment_attempt_unix;
    m_next_payment_attempt_unix_isSet = true;
}

bool OAIInvoiceResponseModel::is_next_payment_attempt_unix_Set() const{
    return m_next_payment_attempt_unix_isSet;
}

bool OAIInvoiceResponseModel::is_next_payment_attempt_unix_Valid() const{
    return m_next_payment_attempt_unix_isValid;
}

bool OAIInvoiceResponseModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_due_cents_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_payment_attempt_unix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceResponseModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_due_cents_isValid && m_next_payment_attempt_unix_isValid && true;
}

} // namespace OpenAPI
