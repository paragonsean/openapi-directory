/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILanguageResponseModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILanguageResponseModel::OAILanguageResponseModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILanguageResponseModel::OAILanguageResponseModel() {
    this->initializeModel();
}

OAILanguageResponseModel::~OAILanguageResponseModel() {}

void OAILanguageResponseModel::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_iso_code_isSet = false;
    m_iso_code_isValid = false;
}

void OAILanguageResponseModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILanguageResponseModel::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_iso_code_isValid = ::OpenAPI::fromJsonValue(m_iso_code, json[QString("iso_code")]);
    m_iso_code_isSet = !json[QString("iso_code")].isNull() && m_iso_code_isValid;
}

QString OAILanguageResponseModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILanguageResponseModel::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_iso_code_isSet) {
        obj.insert(QString("iso_code"), ::OpenAPI::toJsonValue(m_iso_code));
    }
    return obj;
}

QString OAILanguageResponseModel::getDisplayName() const {
    return m_display_name;
}
void OAILanguageResponseModel::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAILanguageResponseModel::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAILanguageResponseModel::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAILanguageResponseModel::getIsoCode() const {
    return m_iso_code;
}
void OAILanguageResponseModel::setIsoCode(const QString &iso_code) {
    m_iso_code = iso_code;
    m_iso_code_isSet = true;
}

bool OAILanguageResponseModel::is_iso_code_Set() const{
    return m_iso_code_isSet;
}

bool OAILanguageResponseModel::is_iso_code_Valid() const{
    return m_iso_code_isValid;
}

bool OAILanguageResponseModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILanguageResponseModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_display_name_isValid && m_iso_code_isValid && true;
}

} // namespace OpenAPI
