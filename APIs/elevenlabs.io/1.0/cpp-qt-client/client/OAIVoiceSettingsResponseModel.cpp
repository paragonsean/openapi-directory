/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoiceSettingsResponseModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoiceSettingsResponseModel::OAIVoiceSettingsResponseModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoiceSettingsResponseModel::OAIVoiceSettingsResponseModel() {
    this->initializeModel();
}

OAIVoiceSettingsResponseModel::~OAIVoiceSettingsResponseModel() {}

void OAIVoiceSettingsResponseModel::initializeModel() {

    m_similarity_boost_isSet = false;
    m_similarity_boost_isValid = false;

    m_stability_isSet = false;
    m_stability_isValid = false;
}

void OAIVoiceSettingsResponseModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVoiceSettingsResponseModel::fromJsonObject(QJsonObject json) {

    m_similarity_boost_isValid = ::OpenAPI::fromJsonValue(m_similarity_boost, json[QString("similarity_boost")]);
    m_similarity_boost_isSet = !json[QString("similarity_boost")].isNull() && m_similarity_boost_isValid;

    m_stability_isValid = ::OpenAPI::fromJsonValue(m_stability, json[QString("stability")]);
    m_stability_isSet = !json[QString("stability")].isNull() && m_stability_isValid;
}

QString OAIVoiceSettingsResponseModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVoiceSettingsResponseModel::asJsonObject() const {
    QJsonObject obj;
    if (m_similarity_boost_isSet) {
        obj.insert(QString("similarity_boost"), ::OpenAPI::toJsonValue(m_similarity_boost));
    }
    if (m_stability_isSet) {
        obj.insert(QString("stability"), ::OpenAPI::toJsonValue(m_stability));
    }
    return obj;
}

double OAIVoiceSettingsResponseModel::getSimilarityBoost() const {
    return m_similarity_boost;
}
void OAIVoiceSettingsResponseModel::setSimilarityBoost(const double &similarity_boost) {
    m_similarity_boost = similarity_boost;
    m_similarity_boost_isSet = true;
}

bool OAIVoiceSettingsResponseModel::is_similarity_boost_Set() const{
    return m_similarity_boost_isSet;
}

bool OAIVoiceSettingsResponseModel::is_similarity_boost_Valid() const{
    return m_similarity_boost_isValid;
}

double OAIVoiceSettingsResponseModel::getStability() const {
    return m_stability;
}
void OAIVoiceSettingsResponseModel::setStability(const double &stability) {
    m_stability = stability;
    m_stability_isSet = true;
}

bool OAIVoiceSettingsResponseModel::is_stability_Set() const{
    return m_stability_isSet;
}

bool OAIVoiceSettingsResponseModel::is_stability_Valid() const{
    return m_stability_isValid;
}

bool OAIVoiceSettingsResponseModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_similarity_boost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stability_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVoiceSettingsResponseModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_similarity_boost_isValid && m_stability_isValid && true;
}

} // namespace OpenAPI
