/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BodyDeleteHistoryItemsV1HistoryDeletePost from '../model/BodyDeleteHistoryItemsV1HistoryDeletePost';
import BodyDownloadHistoryItemsV1HistoryDownloadPost from '../model/BodyDownloadHistoryItemsV1HistoryDownloadPost';
import GetHistoryResponseModel from '../model/GetHistoryResponseModel';
import HTTPValidationError from '../model/HTTPValidationError';

/**
* History service.
* @module api/HistoryApi
* @version 1.0
*/
export default class HistoryApi {

    /**
    * Constructs a new HistoryApi. 
    * @alias module:api/HistoryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteHistoryItemV1HistoryHistoryItemIdDelete operation.
     * @callback module:api/HistoryApi~deleteHistoryItemV1HistoryHistoryItemIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete History Item
     * Delete a history item by its ID
     * @param {String} historyItemId History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/HistoryApi~deleteHistoryItemV1HistoryHistoryItemIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteHistoryItemV1HistoryHistoryItemIdDelete(historyItemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'historyItemId' is set
      if (historyItemId === undefined || historyItemId === null) {
        throw new Error("Missing the required parameter 'historyItemId' when calling deleteHistoryItemV1HistoryHistoryItemIdDelete");
      }

      let pathParams = {
        'history_item_id': historyItemId
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/history/{history_item_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteHistoryItemsV1HistoryDeletePost operation.
     * @callback module:api/HistoryApi~deleteHistoryItemsV1HistoryDeletePostCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete History Items
     * Delete a number of history items by their IDs.
     * @param {module:model/BodyDeleteHistoryItemsV1HistoryDeletePost} bodyDeleteHistoryItemsV1HistoryDeletePost 
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/HistoryApi~deleteHistoryItemsV1HistoryDeletePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteHistoryItemsV1HistoryDeletePost(bodyDeleteHistoryItemsV1HistoryDeletePost, opts, callback) {
      opts = opts || {};
      let postBody = bodyDeleteHistoryItemsV1HistoryDeletePost;
      // verify the required parameter 'bodyDeleteHistoryItemsV1HistoryDeletePost' is set
      if (bodyDeleteHistoryItemsV1HistoryDeletePost === undefined || bodyDeleteHistoryItemsV1HistoryDeletePost === null) {
        throw new Error("Missing the required parameter 'bodyDeleteHistoryItemsV1HistoryDeletePost' when calling deleteHistoryItemsV1HistoryDeletePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/history/delete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the downloadHistoryItemsV1HistoryDownloadPost operation.
     * @callback module:api/HistoryApi~downloadHistoryItemsV1HistoryDownloadPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download History Items
     * Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.
     * @param {module:model/BodyDownloadHistoryItemsV1HistoryDownloadPost} bodyDownloadHistoryItemsV1HistoryDownloadPost 
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/HistoryApi~downloadHistoryItemsV1HistoryDownloadPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    downloadHistoryItemsV1HistoryDownloadPost(bodyDownloadHistoryItemsV1HistoryDownloadPost, opts, callback) {
      opts = opts || {};
      let postBody = bodyDownloadHistoryItemsV1HistoryDownloadPost;
      // verify the required parameter 'bodyDownloadHistoryItemsV1HistoryDownloadPost' is set
      if (bodyDownloadHistoryItemsV1HistoryDownloadPost === undefined || bodyDownloadHistoryItemsV1HistoryDownloadPost === null) {
        throw new Error("Missing the required parameter 'bodyDownloadHistoryItemsV1HistoryDownloadPost' when calling downloadHistoryItemsV1HistoryDownloadPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/history/download', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAudioFromHistoryItemV1HistoryHistoryItemIdAudioGet operation.
     * @callback module:api/HistoryApi~getAudioFromHistoryItemV1HistoryHistoryItemIdAudioGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Audio From History Item
     * Returns the audio of an history item.
     * @param {String} historyItemId History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/HistoryApi~getAudioFromHistoryItemV1HistoryHistoryItemIdAudioGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getAudioFromHistoryItemV1HistoryHistoryItemIdAudioGet(historyItemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'historyItemId' is set
      if (historyItemId === undefined || historyItemId === null) {
        throw new Error("Missing the required parameter 'historyItemId' when calling getAudioFromHistoryItemV1HistoryHistoryItemIdAudioGet");
      }

      let pathParams = {
        'history_item_id': historyItemId
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['audio/mpeg', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/history/{history_item_id}/audio', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getGeneratedItemsV1HistoryGet operation.
     * @callback module:api/HistoryApi~getGeneratedItemsV1HistoryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetHistoryResponseModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Generated Items
     * Returns metadata about all your generated audio.
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/HistoryApi~getGeneratedItemsV1HistoryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetHistoryResponseModel}
     */
    getGeneratedItemsV1HistoryGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetHistoryResponseModel;
      return this.apiClient.callApi(
        '/v1/history', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
