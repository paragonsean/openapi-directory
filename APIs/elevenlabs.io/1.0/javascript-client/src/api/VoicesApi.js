/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddVoiceResponseModel from '../model/AddVoiceResponseModel';
import GetVoicesResponseModel from '../model/GetVoicesResponseModel';
import HTTPValidationError from '../model/HTTPValidationError';
import VoiceResponseModel from '../model/VoiceResponseModel';
import VoiceSettingsResponseModel from '../model/VoiceSettingsResponseModel';

/**
* Voices service.
* @module api/VoicesApi
* @version 1.0
*/
export default class VoicesApi {

    /**
    * Constructs a new VoicesApi. 
    * @alias module:api/VoicesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addVoiceV1VoicesAddPost operation.
     * @callback module:api/VoicesApi~addVoiceV1VoicesAddPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AddVoiceResponseModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add Voice
     * Add a new voice to your collection of voices in VoiceLab.
     * @param {Array.<File>} files One or more audio files to clone the voice from
     * @param {String} name The name that identifies this voice. This will be displayed in the dropdown of the website.
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {String} [description] How would you describe the voice?
     * @param {String} [labels] Serialized labels dictionary for the voice.
     * @param {module:api/VoicesApi~addVoiceV1VoicesAddPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AddVoiceResponseModel}
     */
    addVoiceV1VoicesAddPost(files, name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'files' is set
      if (files === undefined || files === null) {
        throw new Error("Missing the required parameter 'files' when calling addVoiceV1VoicesAddPost");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling addVoiceV1VoicesAddPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
        'description': opts['description'],
        'files': this.apiClient.buildCollectionParam(files, 'passthrough'),
        'labels': opts['labels'],
        'name': name
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = AddVoiceResponseModel;
      return this.apiClient.callApi(
        '/v1/voices/add', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoiceV1VoicesVoiceIdDelete operation.
     * @callback module:api/VoicesApi~deleteVoiceV1VoicesVoiceIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Voice
     * Deletes a voice by its ID.
     * @param {String} voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/VoicesApi~deleteVoiceV1VoicesVoiceIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteVoiceV1VoicesVoiceIdDelete(voiceId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceId' is set
      if (voiceId === undefined || voiceId === null) {
        throw new Error("Missing the required parameter 'voiceId' when calling deleteVoiceV1VoicesVoiceIdDelete");
      }

      let pathParams = {
        'voice_id': voiceId
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/voices/{voice_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the editVoiceSettingsV1VoicesVoiceIdSettingsEditPost operation.
     * @callback module:api/VoicesApi~editVoiceSettingsV1VoicesVoiceIdSettingsEditPostCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit Voice Settings
     * Edit your settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.
     * @param {String} voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {module:model/VoiceSettingsResponseModel} voiceSettingsResponseModel 
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/VoicesApi~editVoiceSettingsV1VoicesVoiceIdSettingsEditPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    editVoiceSettingsV1VoicesVoiceIdSettingsEditPost(voiceId, voiceSettingsResponseModel, opts, callback) {
      opts = opts || {};
      let postBody = voiceSettingsResponseModel;
      // verify the required parameter 'voiceId' is set
      if (voiceId === undefined || voiceId === null) {
        throw new Error("Missing the required parameter 'voiceId' when calling editVoiceSettingsV1VoicesVoiceIdSettingsEditPost");
      }
      // verify the required parameter 'voiceSettingsResponseModel' is set
      if (voiceSettingsResponseModel === undefined || voiceSettingsResponseModel === null) {
        throw new Error("Missing the required parameter 'voiceSettingsResponseModel' when calling editVoiceSettingsV1VoicesVoiceIdSettingsEditPost");
      }

      let pathParams = {
        'voice_id': voiceId
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/voices/{voice_id}/settings/edit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the editVoiceV1VoicesVoiceIdEditPost operation.
     * @callback module:api/VoicesApi~editVoiceV1VoicesVoiceIdEditPostCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit Voice
     * Edit a voice created by you.
     * @param {String} voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {String} name The name that identifies this voice. This will be displayed in the dropdown of the website.
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {String} [description] How would you describe the voice?
     * @param {Array.<File>} [files] Audio files to add to the voice
     * @param {String} [labels] Serialized labels dictionary for the voice.
     * @param {module:api/VoicesApi~editVoiceV1VoicesVoiceIdEditPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    editVoiceV1VoicesVoiceIdEditPost(voiceId, name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceId' is set
      if (voiceId === undefined || voiceId === null) {
        throw new Error("Missing the required parameter 'voiceId' when calling editVoiceV1VoicesVoiceIdEditPost");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling editVoiceV1VoicesVoiceIdEditPost");
      }

      let pathParams = {
        'voice_id': voiceId
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
        'description': opts['description'],
        'files': this.apiClient.buildCollectionParam(opts['files'], 'passthrough'),
        'labels': opts['labels'],
        'name': name
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/voices/{voice_id}/edit', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDefaultVoiceSettingsV1VoicesSettingsDefaultGet operation.
     * @callback module:api/VoicesApi~getDefaultVoiceSettingsV1VoicesSettingsDefaultGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VoiceSettingsResponseModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Default Voice Settings.
     * Gets the default settings for voices. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.
     * @param {module:api/VoicesApi~getDefaultVoiceSettingsV1VoicesSettingsDefaultGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VoiceSettingsResponseModel}
     */
    getDefaultVoiceSettingsV1VoicesSettingsDefaultGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VoiceSettingsResponseModel;
      return this.apiClient.callApi(
        '/v1/voices/settings/default', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceSettingsV1VoicesVoiceIdSettingsGet operation.
     * @callback module:api/VoicesApi~getVoiceSettingsV1VoicesVoiceIdSettingsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VoiceSettingsResponseModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Voice Settings
     * Returns the settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.
     * @param {String} voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/VoicesApi~getVoiceSettingsV1VoicesVoiceIdSettingsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VoiceSettingsResponseModel}
     */
    getVoiceSettingsV1VoicesVoiceIdSettingsGet(voiceId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceId' is set
      if (voiceId === undefined || voiceId === null) {
        throw new Error("Missing the required parameter 'voiceId' when calling getVoiceSettingsV1VoicesVoiceIdSettingsGet");
      }

      let pathParams = {
        'voice_id': voiceId
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VoiceSettingsResponseModel;
      return this.apiClient.callApi(
        '/v1/voices/{voice_id}/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoiceV1VoicesVoiceIdGet operation.
     * @callback module:api/VoicesApi~getVoiceV1VoicesVoiceIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VoiceResponseModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Voice
     * Returns metadata about a specific voice.
     * @param {String} voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [withSettings = false)] If set will return settings information corresponding to the voice, requires authorization.
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/VoicesApi~getVoiceV1VoicesVoiceIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VoiceResponseModel}
     */
    getVoiceV1VoicesVoiceIdGet(voiceId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'voiceId' is set
      if (voiceId === undefined || voiceId === null) {
        throw new Error("Missing the required parameter 'voiceId' when calling getVoiceV1VoicesVoiceIdGet");
      }

      let pathParams = {
        'voice_id': voiceId
      };
      let queryParams = {
        'with_settings': opts['withSettings']
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VoiceResponseModel;
      return this.apiClient.callApi(
        '/v1/voices/{voice_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoicesV1VoicesGet operation.
     * @callback module:api/VoicesApi~getVoicesV1VoicesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetVoicesResponseModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Voices
     * Gets a list of all available voices for a user.
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/VoicesApi~getVoicesV1VoicesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetVoicesResponseModel}
     */
    getVoicesV1VoicesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetVoicesResponseModel;
      return this.apiClient.callApi(
        '/v1/voices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
