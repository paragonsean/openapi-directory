/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BodyTextToSpeechV1TextToSpeechVoiceIdPost from '../model/BodyTextToSpeechV1TextToSpeechVoiceIdPost';
import BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost from '../model/BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost';
import HTTPValidationError from '../model/HTTPValidationError';

/**
* TextToSpeech service.
* @module api/TextToSpeechApi
* @version 1.0
*/
export default class TextToSpeechApi {

    /**
    * Constructs a new TextToSpeechApi. 
    * @alias module:api/TextToSpeechApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the textToSpeechV1TextToSpeechVoiceIdPost operation.
     * @callback module:api/TextToSpeechApi~textToSpeechV1TextToSpeechVoiceIdPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Text To Speech
     * Converts text into speech using a voice of your choice and returns audio.
     * @param {String} voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {module:model/BodyTextToSpeechV1TextToSpeechVoiceIdPost} bodyTextToSpeechV1TextToSpeechVoiceIdPost 
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/TextToSpeechApi~textToSpeechV1TextToSpeechVoiceIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    textToSpeechV1TextToSpeechVoiceIdPost(voiceId, bodyTextToSpeechV1TextToSpeechVoiceIdPost, opts, callback) {
      opts = opts || {};
      let postBody = bodyTextToSpeechV1TextToSpeechVoiceIdPost;
      // verify the required parameter 'voiceId' is set
      if (voiceId === undefined || voiceId === null) {
        throw new Error("Missing the required parameter 'voiceId' when calling textToSpeechV1TextToSpeechVoiceIdPost");
      }
      // verify the required parameter 'bodyTextToSpeechV1TextToSpeechVoiceIdPost' is set
      if (bodyTextToSpeechV1TextToSpeechVoiceIdPost === undefined || bodyTextToSpeechV1TextToSpeechVoiceIdPost === null) {
        throw new Error("Missing the required parameter 'bodyTextToSpeechV1TextToSpeechVoiceIdPost' when calling textToSpeechV1TextToSpeechVoiceIdPost");
      }

      let pathParams = {
        'voice_id': voiceId
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['audio/mpeg', 'application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/text-to-speech/{voice_id}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the textToSpeechV1TextToSpeechVoiceIdStreamPost operation.
     * @callback module:api/TextToSpeechApi~textToSpeechV1TextToSpeechVoiceIdStreamPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Text To Speech
     * Converts text into speech using a voice of your choice and returns audio as an audio stream.
     * @param {String} voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {module:model/BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost} bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost 
     * @param {Object} opts Optional parameters
     * @param {String} [xiApiKey] Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
     * @param {module:api/TextToSpeechApi~textToSpeechV1TextToSpeechVoiceIdStreamPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    textToSpeechV1TextToSpeechVoiceIdStreamPost(voiceId, bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost, opts, callback) {
      opts = opts || {};
      let postBody = bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost;
      // verify the required parameter 'voiceId' is set
      if (voiceId === undefined || voiceId === null) {
        throw new Error("Missing the required parameter 'voiceId' when calling textToSpeechV1TextToSpeechVoiceIdStreamPost");
      }
      // verify the required parameter 'bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost' is set
      if (bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost === undefined || bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost === null) {
        throw new Error("Missing the required parameter 'bodyTextToSpeechV1TextToSpeechVoiceIdStreamPost' when calling textToSpeechV1TextToSpeechVoiceIdStreamPost");
      }

      let pathParams = {
        'voice_id': voiceId
      };
      let queryParams = {
      };
      let headerParams = {
        'xi-api-key': opts['xiApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/text-to-speech/{voice_id}/stream', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
