/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VerificationAttemptResponseModel from './VerificationAttemptResponseModel';

/**
 * The FineTuningResponseModel model module.
 * @module model/FineTuningResponseModel
 * @version 1.0
 */
class FineTuningResponseModel {
    /**
     * Constructs a new <code>FineTuningResponseModel</code>.
     * @alias module:model/FineTuningResponseModel
     * @param fineTuningRequested {Boolean} 
     * @param finetuningState {module:model/FineTuningResponseModel.FinetuningStateEnum} 
     * @param isAllowedToFineTune {Boolean} 
     * @param modelId {String} 
     * @param sliceIds {Array.<String>} 
     * @param verificationAttempts {Array.<module:model/VerificationAttemptResponseModel>} 
     * @param verificationAttemptsCount {Number} 
     * @param verificationFailures {Array.<String>} 
     */
    constructor(fineTuningRequested, finetuningState, isAllowedToFineTune, modelId, sliceIds, verificationAttempts, verificationAttemptsCount, verificationFailures) { 
        
        FineTuningResponseModel.initialize(this, fineTuningRequested, finetuningState, isAllowedToFineTune, modelId, sliceIds, verificationAttempts, verificationAttemptsCount, verificationFailures);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fineTuningRequested, finetuningState, isAllowedToFineTune, modelId, sliceIds, verificationAttempts, verificationAttemptsCount, verificationFailures) { 
        obj['fine_tuning_requested'] = fineTuningRequested;
        obj['finetuning_state'] = finetuningState;
        obj['is_allowed_to_fine_tune'] = isAllowedToFineTune;
        obj['model_id'] = modelId;
        obj['slice_ids'] = sliceIds;
        obj['verification_attempts'] = verificationAttempts;
        obj['verification_attempts_count'] = verificationAttemptsCount;
        obj['verification_failures'] = verificationFailures;
    }

    /**
     * Constructs a <code>FineTuningResponseModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FineTuningResponseModel} obj Optional instance to populate.
     * @return {module:model/FineTuningResponseModel} The populated <code>FineTuningResponseModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FineTuningResponseModel();

            if (data.hasOwnProperty('fine_tuning_requested')) {
                obj['fine_tuning_requested'] = ApiClient.convertToType(data['fine_tuning_requested'], 'Boolean');
            }
            if (data.hasOwnProperty('finetuning_state')) {
                obj['finetuning_state'] = ApiClient.convertToType(data['finetuning_state'], 'String');
            }
            if (data.hasOwnProperty('is_allowed_to_fine_tune')) {
                obj['is_allowed_to_fine_tune'] = ApiClient.convertToType(data['is_allowed_to_fine_tune'], 'Boolean');
            }
            if (data.hasOwnProperty('model_id')) {
                obj['model_id'] = ApiClient.convertToType(data['model_id'], 'String');
            }
            if (data.hasOwnProperty('slice_ids')) {
                obj['slice_ids'] = ApiClient.convertToType(data['slice_ids'], ['String']);
            }
            if (data.hasOwnProperty('verification_attempts')) {
                obj['verification_attempts'] = ApiClient.convertToType(data['verification_attempts'], [VerificationAttemptResponseModel]);
            }
            if (data.hasOwnProperty('verification_attempts_count')) {
                obj['verification_attempts_count'] = ApiClient.convertToType(data['verification_attempts_count'], 'Number');
            }
            if (data.hasOwnProperty('verification_failures')) {
                obj['verification_failures'] = ApiClient.convertToType(data['verification_failures'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FineTuningResponseModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FineTuningResponseModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FineTuningResponseModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['finetuning_state'] && !(typeof data['finetuning_state'] === 'string' || data['finetuning_state'] instanceof String)) {
            throw new Error("Expected the field `finetuning_state` to be a primitive type in the JSON string but got " + data['finetuning_state']);
        }
        // ensure the json data is a string
        if (data['model_id'] && !(typeof data['model_id'] === 'string' || data['model_id'] instanceof String)) {
            throw new Error("Expected the field `model_id` to be a primitive type in the JSON string but got " + data['model_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['slice_ids'])) {
            throw new Error("Expected the field `slice_ids` to be an array in the JSON data but got " + data['slice_ids']);
        }
        if (data['verification_attempts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['verification_attempts'])) {
                throw new Error("Expected the field `verification_attempts` to be an array in the JSON data but got " + data['verification_attempts']);
            }
            // validate the optional field `verification_attempts` (array)
            for (const item of data['verification_attempts']) {
                VerificationAttemptResponseModel.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['verification_failures'])) {
            throw new Error("Expected the field `verification_failures` to be an array in the JSON data but got " + data['verification_failures']);
        }

        return true;
    }


}

FineTuningResponseModel.RequiredProperties = ["fine_tuning_requested", "finetuning_state", "is_allowed_to_fine_tune", "model_id", "slice_ids", "verification_attempts", "verification_attempts_count", "verification_failures"];

/**
 * @member {Boolean} fine_tuning_requested
 */
FineTuningResponseModel.prototype['fine_tuning_requested'] = undefined;

/**
 * @member {module:model/FineTuningResponseModel.FinetuningStateEnum} finetuning_state
 */
FineTuningResponseModel.prototype['finetuning_state'] = undefined;

/**
 * @member {Boolean} is_allowed_to_fine_tune
 */
FineTuningResponseModel.prototype['is_allowed_to_fine_tune'] = undefined;

/**
 * @member {String} model_id
 */
FineTuningResponseModel.prototype['model_id'] = undefined;

/**
 * @member {Array.<String>} slice_ids
 */
FineTuningResponseModel.prototype['slice_ids'] = undefined;

/**
 * @member {Array.<module:model/VerificationAttemptResponseModel>} verification_attempts
 */
FineTuningResponseModel.prototype['verification_attempts'] = undefined;

/**
 * @member {Number} verification_attempts_count
 */
FineTuningResponseModel.prototype['verification_attempts_count'] = undefined;

/**
 * @member {Array.<String>} verification_failures
 */
FineTuningResponseModel.prototype['verification_failures'] = undefined;





/**
 * Allowed values for the <code>finetuning_state</code> property.
 * @enum {String}
 * @readonly
 */
FineTuningResponseModel['FinetuningStateEnum'] = {

    /**
     * value: "not_started"
     * @const
     */
    "not_started": "not_started",

    /**
     * value: "is_fine_tuning"
     * @const
     */
    "is_fine_tuning": "is_fine_tuning",

    /**
     * value: "fine_tuned"
     * @const
     */
    "fine_tuned": "fine_tuned"
};



export default FineTuningResponseModel;

