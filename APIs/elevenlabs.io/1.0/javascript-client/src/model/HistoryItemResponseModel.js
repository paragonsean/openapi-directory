/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeedbackResponseModel from './FeedbackResponseModel';

/**
 * The HistoryItemResponseModel model module.
 * @module model/HistoryItemResponseModel
 * @version 1.0
 */
class HistoryItemResponseModel {
    /**
     * Constructs a new <code>HistoryItemResponseModel</code>.
     * @alias module:model/HistoryItemResponseModel
     * @param characterCountChangeFrom {Number} 
     * @param characterCountChangeTo {Number} 
     * @param contentType {String} 
     * @param dateUnix {Number} 
     * @param feedback {module:model/FeedbackResponseModel} 
     * @param historyItemId {String} 
     * @param requestId {String} 
     * @param settings {Object} 
     * @param state {module:model/HistoryItemResponseModel.StateEnum} 
     * @param text {String} 
     * @param voiceId {String} 
     * @param voiceName {String} 
     */
    constructor(characterCountChangeFrom, characterCountChangeTo, contentType, dateUnix, feedback, historyItemId, requestId, settings, state, text, voiceId, voiceName) { 
        
        HistoryItemResponseModel.initialize(this, characterCountChangeFrom, characterCountChangeTo, contentType, dateUnix, feedback, historyItemId, requestId, settings, state, text, voiceId, voiceName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, characterCountChangeFrom, characterCountChangeTo, contentType, dateUnix, feedback, historyItemId, requestId, settings, state, text, voiceId, voiceName) { 
        obj['character_count_change_from'] = characterCountChangeFrom;
        obj['character_count_change_to'] = characterCountChangeTo;
        obj['content_type'] = contentType;
        obj['date_unix'] = dateUnix;
        obj['feedback'] = feedback;
        obj['history_item_id'] = historyItemId;
        obj['request_id'] = requestId;
        obj['settings'] = settings;
        obj['state'] = state;
        obj['text'] = text;
        obj['voice_id'] = voiceId;
        obj['voice_name'] = voiceName;
    }

    /**
     * Constructs a <code>HistoryItemResponseModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryItemResponseModel} obj Optional instance to populate.
     * @return {module:model/HistoryItemResponseModel} The populated <code>HistoryItemResponseModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryItemResponseModel();

            if (data.hasOwnProperty('character_count_change_from')) {
                obj['character_count_change_from'] = ApiClient.convertToType(data['character_count_change_from'], 'Number');
            }
            if (data.hasOwnProperty('character_count_change_to')) {
                obj['character_count_change_to'] = ApiClient.convertToType(data['character_count_change_to'], 'Number');
            }
            if (data.hasOwnProperty('content_type')) {
                obj['content_type'] = ApiClient.convertToType(data['content_type'], 'String');
            }
            if (data.hasOwnProperty('date_unix')) {
                obj['date_unix'] = ApiClient.convertToType(data['date_unix'], 'Number');
            }
            if (data.hasOwnProperty('feedback')) {
                obj['feedback'] = FeedbackResponseModel.constructFromObject(data['feedback']);
            }
            if (data.hasOwnProperty('history_item_id')) {
                obj['history_item_id'] = ApiClient.convertToType(data['history_item_id'], 'String');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = ApiClient.convertToType(data['settings'], Object);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('voice_id')) {
                obj['voice_id'] = ApiClient.convertToType(data['voice_id'], 'String');
            }
            if (data.hasOwnProperty('voice_name')) {
                obj['voice_name'] = ApiClient.convertToType(data['voice_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryItemResponseModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryItemResponseModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HistoryItemResponseModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['content_type'] && !(typeof data['content_type'] === 'string' || data['content_type'] instanceof String)) {
            throw new Error("Expected the field `content_type` to be a primitive type in the JSON string but got " + data['content_type']);
        }
        // validate the optional field `feedback`
        if (data['feedback']) { // data not null
          FeedbackResponseModel.validateJSON(data['feedback']);
        }
        // ensure the json data is a string
        if (data['history_item_id'] && !(typeof data['history_item_id'] === 'string' || data['history_item_id'] instanceof String)) {
            throw new Error("Expected the field `history_item_id` to be a primitive type in the JSON string but got " + data['history_item_id']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['voice_id'] && !(typeof data['voice_id'] === 'string' || data['voice_id'] instanceof String)) {
            throw new Error("Expected the field `voice_id` to be a primitive type in the JSON string but got " + data['voice_id']);
        }
        // ensure the json data is a string
        if (data['voice_name'] && !(typeof data['voice_name'] === 'string' || data['voice_name'] instanceof String)) {
            throw new Error("Expected the field `voice_name` to be a primitive type in the JSON string but got " + data['voice_name']);
        }

        return true;
    }


}

HistoryItemResponseModel.RequiredProperties = ["character_count_change_from", "character_count_change_to", "content_type", "date_unix", "feedback", "history_item_id", "request_id", "settings", "state", "text", "voice_id", "voice_name"];

/**
 * @member {Number} character_count_change_from
 */
HistoryItemResponseModel.prototype['character_count_change_from'] = undefined;

/**
 * @member {Number} character_count_change_to
 */
HistoryItemResponseModel.prototype['character_count_change_to'] = undefined;

/**
 * @member {String} content_type
 */
HistoryItemResponseModel.prototype['content_type'] = undefined;

/**
 * @member {Number} date_unix
 */
HistoryItemResponseModel.prototype['date_unix'] = undefined;

/**
 * @member {module:model/FeedbackResponseModel} feedback
 */
HistoryItemResponseModel.prototype['feedback'] = undefined;

/**
 * @member {String} history_item_id
 */
HistoryItemResponseModel.prototype['history_item_id'] = undefined;

/**
 * @member {String} request_id
 */
HistoryItemResponseModel.prototype['request_id'] = undefined;

/**
 * @member {Object} settings
 */
HistoryItemResponseModel.prototype['settings'] = undefined;

/**
 * @member {module:model/HistoryItemResponseModel.StateEnum} state
 */
HistoryItemResponseModel.prototype['state'] = undefined;

/**
 * @member {String} text
 */
HistoryItemResponseModel.prototype['text'] = undefined;

/**
 * @member {String} voice_id
 */
HistoryItemResponseModel.prototype['voice_id'] = undefined;

/**
 * @member {String} voice_name
 */
HistoryItemResponseModel.prototype['voice_name'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
HistoryItemResponseModel['StateEnum'] = {

    /**
     * value: "created"
     * @const
     */
    "created": "created",

    /**
     * value: "deleted"
     * @const
     */
    "deleted": "deleted",

    /**
     * value: "processing"
     * @const
     */
    "processing": "processing"
};



export default HistoryItemResponseModel;

