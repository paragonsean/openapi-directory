/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TTSModelResponseModel from './TTSModelResponseModel';

/**
 * The SubscriptionResponseModel model module.
 * @module model/SubscriptionResponseModel
 * @version 1.0
 */
class SubscriptionResponseModel {
    /**
     * Constructs a new <code>SubscriptionResponseModel</code>.
     * @alias module:model/SubscriptionResponseModel
     * @param allowedToExtendCharacterLimit {Boolean} 
     * @param availableModels {Array.<module:model/TTSModelResponseModel>} 
     * @param canExtendCharacterLimit {Boolean} 
     * @param canExtendVoiceLimit {Boolean} 
     * @param canUseDelayedPaymentMethods {Boolean} 
     * @param canUseInstantVoiceCloning {Boolean} 
     * @param canUseProfessionalVoiceCloning {Boolean} 
     * @param characterCount {Number} 
     * @param characterLimit {Number} 
     * @param currency {module:model/SubscriptionResponseModel.CurrencyEnum} 
     * @param nextCharacterCountResetUnix {Number} 
     * @param professionalVoiceLimit {Number} 
     * @param status {module:model/SubscriptionResponseModel.StatusEnum} 
     * @param tier {String} 
     * @param voiceLimit {Number} 
     */
    constructor(allowedToExtendCharacterLimit, availableModels, canExtendCharacterLimit, canExtendVoiceLimit, canUseDelayedPaymentMethods, canUseInstantVoiceCloning, canUseProfessionalVoiceCloning, characterCount, characterLimit, currency, nextCharacterCountResetUnix, professionalVoiceLimit, status, tier, voiceLimit) { 
        
        SubscriptionResponseModel.initialize(this, allowedToExtendCharacterLimit, availableModels, canExtendCharacterLimit, canExtendVoiceLimit, canUseDelayedPaymentMethods, canUseInstantVoiceCloning, canUseProfessionalVoiceCloning, characterCount, characterLimit, currency, nextCharacterCountResetUnix, professionalVoiceLimit, status, tier, voiceLimit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allowedToExtendCharacterLimit, availableModels, canExtendCharacterLimit, canExtendVoiceLimit, canUseDelayedPaymentMethods, canUseInstantVoiceCloning, canUseProfessionalVoiceCloning, characterCount, characterLimit, currency, nextCharacterCountResetUnix, professionalVoiceLimit, status, tier, voiceLimit) { 
        obj['allowed_to_extend_character_limit'] = allowedToExtendCharacterLimit;
        obj['available_models'] = availableModels;
        obj['can_extend_character_limit'] = canExtendCharacterLimit;
        obj['can_extend_voice_limit'] = canExtendVoiceLimit;
        obj['can_use_delayed_payment_methods'] = canUseDelayedPaymentMethods;
        obj['can_use_instant_voice_cloning'] = canUseInstantVoiceCloning;
        obj['can_use_professional_voice_cloning'] = canUseProfessionalVoiceCloning;
        obj['character_count'] = characterCount;
        obj['character_limit'] = characterLimit;
        obj['currency'] = currency;
        obj['next_character_count_reset_unix'] = nextCharacterCountResetUnix;
        obj['professional_voice_limit'] = professionalVoiceLimit;
        obj['status'] = status;
        obj['tier'] = tier;
        obj['voice_limit'] = voiceLimit;
    }

    /**
     * Constructs a <code>SubscriptionResponseModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionResponseModel} obj Optional instance to populate.
     * @return {module:model/SubscriptionResponseModel} The populated <code>SubscriptionResponseModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionResponseModel();

            if (data.hasOwnProperty('allowed_to_extend_character_limit')) {
                obj['allowed_to_extend_character_limit'] = ApiClient.convertToType(data['allowed_to_extend_character_limit'], 'Boolean');
            }
            if (data.hasOwnProperty('available_models')) {
                obj['available_models'] = ApiClient.convertToType(data['available_models'], [TTSModelResponseModel]);
            }
            if (data.hasOwnProperty('can_extend_character_limit')) {
                obj['can_extend_character_limit'] = ApiClient.convertToType(data['can_extend_character_limit'], 'Boolean');
            }
            if (data.hasOwnProperty('can_extend_voice_limit')) {
                obj['can_extend_voice_limit'] = ApiClient.convertToType(data['can_extend_voice_limit'], 'Boolean');
            }
            if (data.hasOwnProperty('can_use_delayed_payment_methods')) {
                obj['can_use_delayed_payment_methods'] = ApiClient.convertToType(data['can_use_delayed_payment_methods'], 'Boolean');
            }
            if (data.hasOwnProperty('can_use_instant_voice_cloning')) {
                obj['can_use_instant_voice_cloning'] = ApiClient.convertToType(data['can_use_instant_voice_cloning'], 'Boolean');
            }
            if (data.hasOwnProperty('can_use_professional_voice_cloning')) {
                obj['can_use_professional_voice_cloning'] = ApiClient.convertToType(data['can_use_professional_voice_cloning'], 'Boolean');
            }
            if (data.hasOwnProperty('character_count')) {
                obj['character_count'] = ApiClient.convertToType(data['character_count'], 'Number');
            }
            if (data.hasOwnProperty('character_limit')) {
                obj['character_limit'] = ApiClient.convertToType(data['character_limit'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('next_character_count_reset_unix')) {
                obj['next_character_count_reset_unix'] = ApiClient.convertToType(data['next_character_count_reset_unix'], 'Number');
            }
            if (data.hasOwnProperty('professional_voice_limit')) {
                obj['professional_voice_limit'] = ApiClient.convertToType(data['professional_voice_limit'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tier')) {
                obj['tier'] = ApiClient.convertToType(data['tier'], 'String');
            }
            if (data.hasOwnProperty('voice_limit')) {
                obj['voice_limit'] = ApiClient.convertToType(data['voice_limit'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionResponseModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionResponseModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubscriptionResponseModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['available_models']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['available_models'])) {
                throw new Error("Expected the field `available_models` to be an array in the JSON data but got " + data['available_models']);
            }
            // validate the optional field `available_models` (array)
            for (const item of data['available_models']) {
                TTSModelResponseModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['tier'] && !(typeof data['tier'] === 'string' || data['tier'] instanceof String)) {
            throw new Error("Expected the field `tier` to be a primitive type in the JSON string but got " + data['tier']);
        }

        return true;
    }


}

SubscriptionResponseModel.RequiredProperties = ["allowed_to_extend_character_limit", "available_models", "can_extend_character_limit", "can_extend_voice_limit", "can_use_delayed_payment_methods", "can_use_instant_voice_cloning", "can_use_professional_voice_cloning", "character_count", "character_limit", "currency", "next_character_count_reset_unix", "professional_voice_limit", "status", "tier", "voice_limit"];

/**
 * @member {Boolean} allowed_to_extend_character_limit
 */
SubscriptionResponseModel.prototype['allowed_to_extend_character_limit'] = undefined;

/**
 * @member {Array.<module:model/TTSModelResponseModel>} available_models
 */
SubscriptionResponseModel.prototype['available_models'] = undefined;

/**
 * @member {Boolean} can_extend_character_limit
 */
SubscriptionResponseModel.prototype['can_extend_character_limit'] = undefined;

/**
 * @member {Boolean} can_extend_voice_limit
 */
SubscriptionResponseModel.prototype['can_extend_voice_limit'] = undefined;

/**
 * @member {Boolean} can_use_delayed_payment_methods
 */
SubscriptionResponseModel.prototype['can_use_delayed_payment_methods'] = undefined;

/**
 * @member {Boolean} can_use_instant_voice_cloning
 */
SubscriptionResponseModel.prototype['can_use_instant_voice_cloning'] = undefined;

/**
 * @member {Boolean} can_use_professional_voice_cloning
 */
SubscriptionResponseModel.prototype['can_use_professional_voice_cloning'] = undefined;

/**
 * @member {Number} character_count
 */
SubscriptionResponseModel.prototype['character_count'] = undefined;

/**
 * @member {Number} character_limit
 */
SubscriptionResponseModel.prototype['character_limit'] = undefined;

/**
 * @member {module:model/SubscriptionResponseModel.CurrencyEnum} currency
 */
SubscriptionResponseModel.prototype['currency'] = undefined;

/**
 * @member {Number} next_character_count_reset_unix
 */
SubscriptionResponseModel.prototype['next_character_count_reset_unix'] = undefined;

/**
 * @member {Number} professional_voice_limit
 */
SubscriptionResponseModel.prototype['professional_voice_limit'] = undefined;

/**
 * @member {module:model/SubscriptionResponseModel.StatusEnum} status
 */
SubscriptionResponseModel.prototype['status'] = undefined;

/**
 * @member {String} tier
 */
SubscriptionResponseModel.prototype['tier'] = undefined;

/**
 * @member {Number} voice_limit
 */
SubscriptionResponseModel.prototype['voice_limit'] = undefined;





/**
 * Allowed values for the <code>currency</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionResponseModel['CurrencyEnum'] = {

    /**
     * value: "usd"
     * @const
     */
    "usd": "usd",

    /**
     * value: "eur"
     * @const
     */
    "eur": "eur"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionResponseModel['StatusEnum'] = {

    /**
     * value: "trialing"
     * @const
     */
    "trialing": "trialing",

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "incomplete"
     * @const
     */
    "incomplete": "incomplete",

    /**
     * value: "incomplete_expired"
     * @const
     */
    "incomplete_expired": "incomplete_expired",

    /**
     * value: "past_due"
     * @const
     */
    "past_due": "past_due",

    /**
     * value: "canceled"
     * @const
     */
    "canceled": "canceled",

    /**
     * value: "unpaid"
     * @const
     */
    "unpaid": "unpaid",

    /**
     * value: "free"
     * @const
     */
    "free": "free"
};



export default SubscriptionResponseModel;

