/**
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FineTuningResponseModel from './FineTuningResponseModel';
import SampleResponseModel from './SampleResponseModel';
import VoiceSettingsResponseModel from './VoiceSettingsResponseModel';

/**
 * The VoiceResponseModel model module.
 * @module model/VoiceResponseModel
 * @version 1.0
 */
class VoiceResponseModel {
    /**
     * Constructs a new <code>VoiceResponseModel</code>.
     * @alias module:model/VoiceResponseModel
     * @param availableForTiers {Array.<String>} 
     * @param category {String} 
     * @param description {String} 
     * @param fineTuning {module:model/FineTuningResponseModel} 
     * @param labels {Object.<String, String>} 
     * @param name {String} 
     * @param previewUrl {String} 
     * @param samples {Array.<module:model/SampleResponseModel>} 
     * @param settings {module:model/VoiceSettingsResponseModel} 
     * @param voiceId {String} 
     */
    constructor(availableForTiers, category, description, fineTuning, labels, name, previewUrl, samples, settings, voiceId) { 
        
        VoiceResponseModel.initialize(this, availableForTiers, category, description, fineTuning, labels, name, previewUrl, samples, settings, voiceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, availableForTiers, category, description, fineTuning, labels, name, previewUrl, samples, settings, voiceId) { 
        obj['available_for_tiers'] = availableForTiers;
        obj['category'] = category;
        obj['description'] = description;
        obj['fine_tuning'] = fineTuning;
        obj['labels'] = labels;
        obj['name'] = name;
        obj['preview_url'] = previewUrl;
        obj['samples'] = samples;
        obj['settings'] = settings;
        obj['voice_id'] = voiceId;
    }

    /**
     * Constructs a <code>VoiceResponseModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VoiceResponseModel} obj Optional instance to populate.
     * @return {module:model/VoiceResponseModel} The populated <code>VoiceResponseModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VoiceResponseModel();

            if (data.hasOwnProperty('available_for_tiers')) {
                obj['available_for_tiers'] = ApiClient.convertToType(data['available_for_tiers'], ['String']);
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('fine_tuning')) {
                obj['fine_tuning'] = FineTuningResponseModel.constructFromObject(data['fine_tuning']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('preview_url')) {
                obj['preview_url'] = ApiClient.convertToType(data['preview_url'], 'String');
            }
            if (data.hasOwnProperty('samples')) {
                obj['samples'] = ApiClient.convertToType(data['samples'], [SampleResponseModel]);
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = VoiceSettingsResponseModel.constructFromObject(data['settings']);
            }
            if (data.hasOwnProperty('voice_id')) {
                obj['voice_id'] = ApiClient.convertToType(data['voice_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VoiceResponseModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VoiceResponseModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VoiceResponseModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['available_for_tiers'])) {
            throw new Error("Expected the field `available_for_tiers` to be an array in the JSON data but got " + data['available_for_tiers']);
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `fine_tuning`
        if (data['fine_tuning']) { // data not null
          FineTuningResponseModel.validateJSON(data['fine_tuning']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['preview_url'] && !(typeof data['preview_url'] === 'string' || data['preview_url'] instanceof String)) {
            throw new Error("Expected the field `preview_url` to be a primitive type in the JSON string but got " + data['preview_url']);
        }
        if (data['samples']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['samples'])) {
                throw new Error("Expected the field `samples` to be an array in the JSON data but got " + data['samples']);
            }
            // validate the optional field `samples` (array)
            for (const item of data['samples']) {
                SampleResponseModel.validateJSON(item);
            };
        }
        // validate the optional field `settings`
        if (data['settings']) { // data not null
          VoiceSettingsResponseModel.validateJSON(data['settings']);
        }
        // ensure the json data is a string
        if (data['voice_id'] && !(typeof data['voice_id'] === 'string' || data['voice_id'] instanceof String)) {
            throw new Error("Expected the field `voice_id` to be a primitive type in the JSON string but got " + data['voice_id']);
        }

        return true;
    }


}

VoiceResponseModel.RequiredProperties = ["available_for_tiers", "category", "description", "fine_tuning", "labels", "name", "preview_url", "samples", "settings", "voice_id"];

/**
 * @member {Array.<String>} available_for_tiers
 */
VoiceResponseModel.prototype['available_for_tiers'] = undefined;

/**
 * @member {String} category
 */
VoiceResponseModel.prototype['category'] = undefined;

/**
 * @member {String} description
 */
VoiceResponseModel.prototype['description'] = undefined;

/**
 * @member {module:model/FineTuningResponseModel} fine_tuning
 */
VoiceResponseModel.prototype['fine_tuning'] = undefined;

/**
 * @member {Object.<String, String>} labels
 */
VoiceResponseModel.prototype['labels'] = undefined;

/**
 * @member {String} name
 */
VoiceResponseModel.prototype['name'] = undefined;

/**
 * @member {String} preview_url
 */
VoiceResponseModel.prototype['preview_url'] = undefined;

/**
 * @member {Array.<module:model/SampleResponseModel>} samples
 */
VoiceResponseModel.prototype['samples'] = undefined;

/**
 * @member {module:model/VoiceSettingsResponseModel} settings
 */
VoiceResponseModel.prototype['settings'] = undefined;

/**
 * @member {String} voice_id
 */
VoiceResponseModel.prototype['voice_id'] = undefined;






export default VoiceResponseModel;

