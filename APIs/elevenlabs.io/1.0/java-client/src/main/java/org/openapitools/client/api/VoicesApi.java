/*
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AddVoiceResponseModel;
import java.io.File;
import org.openapitools.client.model.GetVoicesResponseModel;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.VoiceResponseModel;
import org.openapitools.client.model.VoiceSettingsResponseModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VoicesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VoicesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VoicesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addVoiceV1VoicesAddPost
     * @param files One or more audio files to clone the voice from (required)
     * @param name The name that identifies this voice. This will be displayed in the dropdown of the website. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param description How would you describe the voice? (optional)
     * @param labels Serialized labels dictionary for the voice. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addVoiceV1VoicesAddPostCall(List<File> files, String name, String xiApiKey, String description, String labels, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/voices/add";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (description != null) {
            localVarFormParams.put("description", description);
        }

        if (files != null) {
            localVarFormParams.put("files", files);
        }

        if (labels != null) {
            localVarFormParams.put("labels", labels);
        }

        if (name != null) {
            localVarFormParams.put("name", name);
        }

        if (xiApiKey != null) {
            localVarHeaderParams.put("xi-api-key", localVarApiClient.parameterToString(xiApiKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "multipart/form-data"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addVoiceV1VoicesAddPostValidateBeforeCall(List<File> files, String name, String xiApiKey, String description, String labels, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'files' is set
        if (files == null) {
            throw new ApiException("Missing the required parameter 'files' when calling addVoiceV1VoicesAddPost(Async)");
        }

        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling addVoiceV1VoicesAddPost(Async)");
        }

        return addVoiceV1VoicesAddPostCall(files, name, xiApiKey, description, labels, _callback);

    }

    /**
     * Add Voice
     * Add a new voice to your collection of voices in VoiceLab.
     * @param files One or more audio files to clone the voice from (required)
     * @param name The name that identifies this voice. This will be displayed in the dropdown of the website. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param description How would you describe the voice? (optional)
     * @param labels Serialized labels dictionary for the voice. (optional)
     * @return AddVoiceResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public AddVoiceResponseModel addVoiceV1VoicesAddPost(List<File> files, String name, String xiApiKey, String description, String labels) throws ApiException {
        ApiResponse<AddVoiceResponseModel> localVarResp = addVoiceV1VoicesAddPostWithHttpInfo(files, name, xiApiKey, description, labels);
        return localVarResp.getData();
    }

    /**
     * Add Voice
     * Add a new voice to your collection of voices in VoiceLab.
     * @param files One or more audio files to clone the voice from (required)
     * @param name The name that identifies this voice. This will be displayed in the dropdown of the website. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param description How would you describe the voice? (optional)
     * @param labels Serialized labels dictionary for the voice. (optional)
     * @return ApiResponse&lt;AddVoiceResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AddVoiceResponseModel> addVoiceV1VoicesAddPostWithHttpInfo(List<File> files, String name, String xiApiKey, String description, String labels) throws ApiException {
        okhttp3.Call localVarCall = addVoiceV1VoicesAddPostValidateBeforeCall(files, name, xiApiKey, description, labels, null);
        Type localVarReturnType = new TypeToken<AddVoiceResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Add Voice (asynchronously)
     * Add a new voice to your collection of voices in VoiceLab.
     * @param files One or more audio files to clone the voice from (required)
     * @param name The name that identifies this voice. This will be displayed in the dropdown of the website. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param description How would you describe the voice? (optional)
     * @param labels Serialized labels dictionary for the voice. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call addVoiceV1VoicesAddPostAsync(List<File> files, String name, String xiApiKey, String description, String labels, final ApiCallback<AddVoiceResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = addVoiceV1VoicesAddPostValidateBeforeCall(files, name, xiApiKey, description, labels, _callback);
        Type localVarReturnType = new TypeToken<AddVoiceResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteVoiceV1VoicesVoiceIdDelete
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteVoiceV1VoicesVoiceIdDeleteCall(String voiceId, String xiApiKey, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/voices/{voice_id}"
            .replace("{" + "voice_id" + "}", localVarApiClient.escapeString(voiceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xiApiKey != null) {
            localVarHeaderParams.put("xi-api-key", localVarApiClient.parameterToString(xiApiKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteVoiceV1VoicesVoiceIdDeleteValidateBeforeCall(String voiceId, String xiApiKey, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'voiceId' is set
        if (voiceId == null) {
            throw new ApiException("Missing the required parameter 'voiceId' when calling deleteVoiceV1VoicesVoiceIdDelete(Async)");
        }

        return deleteVoiceV1VoicesVoiceIdDeleteCall(voiceId, xiApiKey, _callback);

    }

    /**
     * Delete Voice
     * Deletes a voice by its ID.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public Object deleteVoiceV1VoicesVoiceIdDelete(String voiceId, String xiApiKey) throws ApiException {
        ApiResponse<Object> localVarResp = deleteVoiceV1VoicesVoiceIdDeleteWithHttpInfo(voiceId, xiApiKey);
        return localVarResp.getData();
    }

    /**
     * Delete Voice
     * Deletes a voice by its ID.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> deleteVoiceV1VoicesVoiceIdDeleteWithHttpInfo(String voiceId, String xiApiKey) throws ApiException {
        okhttp3.Call localVarCall = deleteVoiceV1VoicesVoiceIdDeleteValidateBeforeCall(voiceId, xiApiKey, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete Voice (asynchronously)
     * Deletes a voice by its ID.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteVoiceV1VoicesVoiceIdDeleteAsync(String voiceId, String xiApiKey, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteVoiceV1VoicesVoiceIdDeleteValidateBeforeCall(voiceId, xiApiKey, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for editVoiceSettingsV1VoicesVoiceIdSettingsEditPost
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param voiceSettingsResponseModel  (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call editVoiceSettingsV1VoicesVoiceIdSettingsEditPostCall(String voiceId, VoiceSettingsResponseModel voiceSettingsResponseModel, String xiApiKey, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = voiceSettingsResponseModel;

        // create path and map variables
        String localVarPath = "/v1/voices/{voice_id}/settings/edit"
            .replace("{" + "voice_id" + "}", localVarApiClient.escapeString(voiceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xiApiKey != null) {
            localVarHeaderParams.put("xi-api-key", localVarApiClient.parameterToString(xiApiKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call editVoiceSettingsV1VoicesVoiceIdSettingsEditPostValidateBeforeCall(String voiceId, VoiceSettingsResponseModel voiceSettingsResponseModel, String xiApiKey, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'voiceId' is set
        if (voiceId == null) {
            throw new ApiException("Missing the required parameter 'voiceId' when calling editVoiceSettingsV1VoicesVoiceIdSettingsEditPost(Async)");
        }

        // verify the required parameter 'voiceSettingsResponseModel' is set
        if (voiceSettingsResponseModel == null) {
            throw new ApiException("Missing the required parameter 'voiceSettingsResponseModel' when calling editVoiceSettingsV1VoicesVoiceIdSettingsEditPost(Async)");
        }

        return editVoiceSettingsV1VoicesVoiceIdSettingsEditPostCall(voiceId, voiceSettingsResponseModel, xiApiKey, _callback);

    }

    /**
     * Edit Voice Settings
     * Edit your settings for a specific voice. \&quot;similarity_boost\&quot; corresponds to\&quot;Clarity + Similarity Enhancement\&quot; in the web app and \&quot;stability\&quot; corresponds to \&quot;Stability\&quot; slider in the web app.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param voiceSettingsResponseModel  (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public Object editVoiceSettingsV1VoicesVoiceIdSettingsEditPost(String voiceId, VoiceSettingsResponseModel voiceSettingsResponseModel, String xiApiKey) throws ApiException {
        ApiResponse<Object> localVarResp = editVoiceSettingsV1VoicesVoiceIdSettingsEditPostWithHttpInfo(voiceId, voiceSettingsResponseModel, xiApiKey);
        return localVarResp.getData();
    }

    /**
     * Edit Voice Settings
     * Edit your settings for a specific voice. \&quot;similarity_boost\&quot; corresponds to\&quot;Clarity + Similarity Enhancement\&quot; in the web app and \&quot;stability\&quot; corresponds to \&quot;Stability\&quot; slider in the web app.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param voiceSettingsResponseModel  (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> editVoiceSettingsV1VoicesVoiceIdSettingsEditPostWithHttpInfo(String voiceId, VoiceSettingsResponseModel voiceSettingsResponseModel, String xiApiKey) throws ApiException {
        okhttp3.Call localVarCall = editVoiceSettingsV1VoicesVoiceIdSettingsEditPostValidateBeforeCall(voiceId, voiceSettingsResponseModel, xiApiKey, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Edit Voice Settings (asynchronously)
     * Edit your settings for a specific voice. \&quot;similarity_boost\&quot; corresponds to\&quot;Clarity + Similarity Enhancement\&quot; in the web app and \&quot;stability\&quot; corresponds to \&quot;Stability\&quot; slider in the web app.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param voiceSettingsResponseModel  (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call editVoiceSettingsV1VoicesVoiceIdSettingsEditPostAsync(String voiceId, VoiceSettingsResponseModel voiceSettingsResponseModel, String xiApiKey, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = editVoiceSettingsV1VoicesVoiceIdSettingsEditPostValidateBeforeCall(voiceId, voiceSettingsResponseModel, xiApiKey, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for editVoiceV1VoicesVoiceIdEditPost
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param name The name that identifies this voice. This will be displayed in the dropdown of the website. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param description How would you describe the voice? (optional)
     * @param files Audio files to add to the voice (optional)
     * @param labels Serialized labels dictionary for the voice. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call editVoiceV1VoicesVoiceIdEditPostCall(String voiceId, String name, String xiApiKey, String description, List<File> files, String labels, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/voices/{voice_id}/edit"
            .replace("{" + "voice_id" + "}", localVarApiClient.escapeString(voiceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (description != null) {
            localVarFormParams.put("description", description);
        }

        if (files != null) {
            localVarFormParams.put("files", files);
        }

        if (labels != null) {
            localVarFormParams.put("labels", labels);
        }

        if (name != null) {
            localVarFormParams.put("name", name);
        }

        if (xiApiKey != null) {
            localVarHeaderParams.put("xi-api-key", localVarApiClient.parameterToString(xiApiKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "multipart/form-data"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call editVoiceV1VoicesVoiceIdEditPostValidateBeforeCall(String voiceId, String name, String xiApiKey, String description, List<File> files, String labels, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'voiceId' is set
        if (voiceId == null) {
            throw new ApiException("Missing the required parameter 'voiceId' when calling editVoiceV1VoicesVoiceIdEditPost(Async)");
        }

        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling editVoiceV1VoicesVoiceIdEditPost(Async)");
        }

        return editVoiceV1VoicesVoiceIdEditPostCall(voiceId, name, xiApiKey, description, files, labels, _callback);

    }

    /**
     * Edit Voice
     * Edit a voice created by you.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param name The name that identifies this voice. This will be displayed in the dropdown of the website. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param description How would you describe the voice? (optional)
     * @param files Audio files to add to the voice (optional)
     * @param labels Serialized labels dictionary for the voice. (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public Object editVoiceV1VoicesVoiceIdEditPost(String voiceId, String name, String xiApiKey, String description, List<File> files, String labels) throws ApiException {
        ApiResponse<Object> localVarResp = editVoiceV1VoicesVoiceIdEditPostWithHttpInfo(voiceId, name, xiApiKey, description, files, labels);
        return localVarResp.getData();
    }

    /**
     * Edit Voice
     * Edit a voice created by you.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param name The name that identifies this voice. This will be displayed in the dropdown of the website. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param description How would you describe the voice? (optional)
     * @param files Audio files to add to the voice (optional)
     * @param labels Serialized labels dictionary for the voice. (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> editVoiceV1VoicesVoiceIdEditPostWithHttpInfo(String voiceId, String name, String xiApiKey, String description, List<File> files, String labels) throws ApiException {
        okhttp3.Call localVarCall = editVoiceV1VoicesVoiceIdEditPostValidateBeforeCall(voiceId, name, xiApiKey, description, files, labels, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Edit Voice (asynchronously)
     * Edit a voice created by you.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param name The name that identifies this voice. This will be displayed in the dropdown of the website. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param description How would you describe the voice? (optional)
     * @param files Audio files to add to the voice (optional)
     * @param labels Serialized labels dictionary for the voice. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call editVoiceV1VoicesVoiceIdEditPostAsync(String voiceId, String name, String xiApiKey, String description, List<File> files, String labels, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = editVoiceV1VoicesVoiceIdEditPostValidateBeforeCall(voiceId, name, xiApiKey, description, files, labels, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getDefaultVoiceSettingsV1VoicesSettingsDefaultGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getDefaultVoiceSettingsV1VoicesSettingsDefaultGetCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/voices/settings/default";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getDefaultVoiceSettingsV1VoicesSettingsDefaultGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return getDefaultVoiceSettingsV1VoicesSettingsDefaultGetCall(_callback);

    }

    /**
     * Get Default Voice Settings.
     * Gets the default settings for voices. \&quot;similarity_boost\&quot; corresponds to\&quot;Clarity + Similarity Enhancement\&quot; in the web app and \&quot;stability\&quot; corresponds to \&quot;Stability\&quot; slider in the web app.
     * @return VoiceSettingsResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public VoiceSettingsResponseModel getDefaultVoiceSettingsV1VoicesSettingsDefaultGet() throws ApiException {
        ApiResponse<VoiceSettingsResponseModel> localVarResp = getDefaultVoiceSettingsV1VoicesSettingsDefaultGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * Get Default Voice Settings.
     * Gets the default settings for voices. \&quot;similarity_boost\&quot; corresponds to\&quot;Clarity + Similarity Enhancement\&quot; in the web app and \&quot;stability\&quot; corresponds to \&quot;Stability\&quot; slider in the web app.
     * @return ApiResponse&lt;VoiceSettingsResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VoiceSettingsResponseModel> getDefaultVoiceSettingsV1VoicesSettingsDefaultGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getDefaultVoiceSettingsV1VoicesSettingsDefaultGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<VoiceSettingsResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Default Voice Settings. (asynchronously)
     * Gets the default settings for voices. \&quot;similarity_boost\&quot; corresponds to\&quot;Clarity + Similarity Enhancement\&quot; in the web app and \&quot;stability\&quot; corresponds to \&quot;Stability\&quot; slider in the web app.
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getDefaultVoiceSettingsV1VoicesSettingsDefaultGetAsync(final ApiCallback<VoiceSettingsResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getDefaultVoiceSettingsV1VoicesSettingsDefaultGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<VoiceSettingsResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVoiceSettingsV1VoicesVoiceIdSettingsGet
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVoiceSettingsV1VoicesVoiceIdSettingsGetCall(String voiceId, String xiApiKey, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/voices/{voice_id}/settings"
            .replace("{" + "voice_id" + "}", localVarApiClient.escapeString(voiceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xiApiKey != null) {
            localVarHeaderParams.put("xi-api-key", localVarApiClient.parameterToString(xiApiKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVoiceSettingsV1VoicesVoiceIdSettingsGetValidateBeforeCall(String voiceId, String xiApiKey, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'voiceId' is set
        if (voiceId == null) {
            throw new ApiException("Missing the required parameter 'voiceId' when calling getVoiceSettingsV1VoicesVoiceIdSettingsGet(Async)");
        }

        return getVoiceSettingsV1VoicesVoiceIdSettingsGetCall(voiceId, xiApiKey, _callback);

    }

    /**
     * Get Voice Settings
     * Returns the settings for a specific voice. \&quot;similarity_boost\&quot; corresponds to\&quot;Clarity + Similarity Enhancement\&quot; in the web app and \&quot;stability\&quot; corresponds to \&quot;Stability\&quot; slider in the web app.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return VoiceSettingsResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public VoiceSettingsResponseModel getVoiceSettingsV1VoicesVoiceIdSettingsGet(String voiceId, String xiApiKey) throws ApiException {
        ApiResponse<VoiceSettingsResponseModel> localVarResp = getVoiceSettingsV1VoicesVoiceIdSettingsGetWithHttpInfo(voiceId, xiApiKey);
        return localVarResp.getData();
    }

    /**
     * Get Voice Settings
     * Returns the settings for a specific voice. \&quot;similarity_boost\&quot; corresponds to\&quot;Clarity + Similarity Enhancement\&quot; in the web app and \&quot;stability\&quot; corresponds to \&quot;Stability\&quot; slider in the web app.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return ApiResponse&lt;VoiceSettingsResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VoiceSettingsResponseModel> getVoiceSettingsV1VoicesVoiceIdSettingsGetWithHttpInfo(String voiceId, String xiApiKey) throws ApiException {
        okhttp3.Call localVarCall = getVoiceSettingsV1VoicesVoiceIdSettingsGetValidateBeforeCall(voiceId, xiApiKey, null);
        Type localVarReturnType = new TypeToken<VoiceSettingsResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Voice Settings (asynchronously)
     * Returns the settings for a specific voice. \&quot;similarity_boost\&quot; corresponds to\&quot;Clarity + Similarity Enhancement\&quot; in the web app and \&quot;stability\&quot; corresponds to \&quot;Stability\&quot; slider in the web app.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVoiceSettingsV1VoicesVoiceIdSettingsGetAsync(String voiceId, String xiApiKey, final ApiCallback<VoiceSettingsResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVoiceSettingsV1VoicesVoiceIdSettingsGetValidateBeforeCall(voiceId, xiApiKey, _callback);
        Type localVarReturnType = new TypeToken<VoiceSettingsResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVoiceV1VoicesVoiceIdGet
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param withSettings If set will return settings information corresponding to the voice, requires authorization. (optional, default to false)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVoiceV1VoicesVoiceIdGetCall(String voiceId, Boolean withSettings, String xiApiKey, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/voices/{voice_id}"
            .replace("{" + "voice_id" + "}", localVarApiClient.escapeString(voiceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (withSettings != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("with_settings", withSettings));
        }

        if (xiApiKey != null) {
            localVarHeaderParams.put("xi-api-key", localVarApiClient.parameterToString(xiApiKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVoiceV1VoicesVoiceIdGetValidateBeforeCall(String voiceId, Boolean withSettings, String xiApiKey, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'voiceId' is set
        if (voiceId == null) {
            throw new ApiException("Missing the required parameter 'voiceId' when calling getVoiceV1VoicesVoiceIdGet(Async)");
        }

        return getVoiceV1VoicesVoiceIdGetCall(voiceId, withSettings, xiApiKey, _callback);

    }

    /**
     * Get Voice
     * Returns metadata about a specific voice.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param withSettings If set will return settings information corresponding to the voice, requires authorization. (optional, default to false)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return VoiceResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public VoiceResponseModel getVoiceV1VoicesVoiceIdGet(String voiceId, Boolean withSettings, String xiApiKey) throws ApiException {
        ApiResponse<VoiceResponseModel> localVarResp = getVoiceV1VoicesVoiceIdGetWithHttpInfo(voiceId, withSettings, xiApiKey);
        return localVarResp.getData();
    }

    /**
     * Get Voice
     * Returns metadata about a specific voice.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param withSettings If set will return settings information corresponding to the voice, requires authorization. (optional, default to false)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return ApiResponse&lt;VoiceResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VoiceResponseModel> getVoiceV1VoicesVoiceIdGetWithHttpInfo(String voiceId, Boolean withSettings, String xiApiKey) throws ApiException {
        okhttp3.Call localVarCall = getVoiceV1VoicesVoiceIdGetValidateBeforeCall(voiceId, withSettings, xiApiKey, null);
        Type localVarReturnType = new TypeToken<VoiceResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Voice (asynchronously)
     * Returns metadata about a specific voice.
     * @param voiceId Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices. (required)
     * @param withSettings If set will return settings information corresponding to the voice, requires authorization. (optional, default to false)
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVoiceV1VoicesVoiceIdGetAsync(String voiceId, Boolean withSettings, String xiApiKey, final ApiCallback<VoiceResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVoiceV1VoicesVoiceIdGetValidateBeforeCall(voiceId, withSettings, xiApiKey, _callback);
        Type localVarReturnType = new TypeToken<VoiceResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVoicesV1VoicesGet
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVoicesV1VoicesGetCall(String xiApiKey, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/voices";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xiApiKey != null) {
            localVarHeaderParams.put("xi-api-key", localVarApiClient.parameterToString(xiApiKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVoicesV1VoicesGetValidateBeforeCall(String xiApiKey, final ApiCallback _callback) throws ApiException {
        return getVoicesV1VoicesGetCall(xiApiKey, _callback);

    }

    /**
     * Get Voices
     * Gets a list of all available voices for a user.
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return GetVoicesResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public GetVoicesResponseModel getVoicesV1VoicesGet(String xiApiKey) throws ApiException {
        ApiResponse<GetVoicesResponseModel> localVarResp = getVoicesV1VoicesGetWithHttpInfo(xiApiKey);
        return localVarResp.getData();
    }

    /**
     * Get Voices
     * Gets a list of all available voices for a user.
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @return ApiResponse&lt;GetVoicesResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetVoicesResponseModel> getVoicesV1VoicesGetWithHttpInfo(String xiApiKey) throws ApiException {
        okhttp3.Call localVarCall = getVoicesV1VoicesGetValidateBeforeCall(xiApiKey, null);
        Type localVarReturnType = new TypeToken<GetVoicesResponseModel>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Voices (asynchronously)
     * Gets a list of all available voices for a user.
     * @param xiApiKey Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the &#39;Profile&#39; tab on the website. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Validation Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getVoicesV1VoicesGetAsync(String xiApiKey, final ApiCallback<GetVoicesResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVoicesV1VoicesGetValidateBeforeCall(xiApiKey, _callback);
        Type localVarReturnType = new TypeToken<GetVoicesResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
