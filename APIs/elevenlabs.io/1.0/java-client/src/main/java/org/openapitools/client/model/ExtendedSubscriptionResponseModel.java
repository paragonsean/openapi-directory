/*
 * ElevenLabs API Documentation
 * This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InvoiceResponseModel;
import org.openapitools.client.model.TTSModelResponseModel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ExtendedSubscriptionResponseModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:47.855117-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ExtendedSubscriptionResponseModel {
  public static final String SERIALIZED_NAME_ALLOWED_TO_EXTEND_CHARACTER_LIMIT = "allowed_to_extend_character_limit";
  @SerializedName(SERIALIZED_NAME_ALLOWED_TO_EXTEND_CHARACTER_LIMIT)
  private Boolean allowedToExtendCharacterLimit;

  public static final String SERIALIZED_NAME_AVAILABLE_MODELS = "available_models";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_MODELS)
  private List<TTSModelResponseModel> availableModels = new ArrayList<>();

  public static final String SERIALIZED_NAME_CAN_EXTEND_CHARACTER_LIMIT = "can_extend_character_limit";
  @SerializedName(SERIALIZED_NAME_CAN_EXTEND_CHARACTER_LIMIT)
  private Boolean canExtendCharacterLimit;

  public static final String SERIALIZED_NAME_CAN_EXTEND_VOICE_LIMIT = "can_extend_voice_limit";
  @SerializedName(SERIALIZED_NAME_CAN_EXTEND_VOICE_LIMIT)
  private Boolean canExtendVoiceLimit;

  public static final String SERIALIZED_NAME_CAN_USE_DELAYED_PAYMENT_METHODS = "can_use_delayed_payment_methods";
  @SerializedName(SERIALIZED_NAME_CAN_USE_DELAYED_PAYMENT_METHODS)
  private Boolean canUseDelayedPaymentMethods;

  public static final String SERIALIZED_NAME_CAN_USE_INSTANT_VOICE_CLONING = "can_use_instant_voice_cloning";
  @SerializedName(SERIALIZED_NAME_CAN_USE_INSTANT_VOICE_CLONING)
  private Boolean canUseInstantVoiceCloning;

  public static final String SERIALIZED_NAME_CAN_USE_PROFESSIONAL_VOICE_CLONING = "can_use_professional_voice_cloning";
  @SerializedName(SERIALIZED_NAME_CAN_USE_PROFESSIONAL_VOICE_CLONING)
  private Boolean canUseProfessionalVoiceCloning;

  public static final String SERIALIZED_NAME_CHARACTER_COUNT = "character_count";
  @SerializedName(SERIALIZED_NAME_CHARACTER_COUNT)
  private Integer characterCount;

  public static final String SERIALIZED_NAME_CHARACTER_LIMIT = "character_limit";
  @SerializedName(SERIALIZED_NAME_CHARACTER_LIMIT)
  private Integer characterLimit;

  /**
   * Gets or Sets currency
   */
  @JsonAdapter(CurrencyEnum.Adapter.class)
  public enum CurrencyEnum {
    USD("usd"),
    
    EUR("eur");

    private String value;

    CurrencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CurrencyEnum fromValue(String value) {
      for (CurrencyEnum b : CurrencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CurrencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CurrencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CurrencyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CurrencyEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CurrencyEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private CurrencyEnum currency;

  public static final String SERIALIZED_NAME_NEXT_CHARACTER_COUNT_RESET_UNIX = "next_character_count_reset_unix";
  @SerializedName(SERIALIZED_NAME_NEXT_CHARACTER_COUNT_RESET_UNIX)
  private Integer nextCharacterCountResetUnix;

  public static final String SERIALIZED_NAME_NEXT_INVOICE = "next_invoice";
  @SerializedName(SERIALIZED_NAME_NEXT_INVOICE)
  private InvoiceResponseModel nextInvoice;

  public static final String SERIALIZED_NAME_PROFESSIONAL_VOICE_LIMIT = "professional_voice_limit";
  @SerializedName(SERIALIZED_NAME_PROFESSIONAL_VOICE_LIMIT)
  private Integer professionalVoiceLimit;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    TRIALING("trialing"),
    
    ACTIVE("active"),
    
    INCOMPLETE("incomplete"),
    
    INCOMPLETE_EXPIRED("incomplete_expired"),
    
    PAST_DUE("past_due"),
    
    CANCELED("canceled"),
    
    UNPAID("unpaid"),
    
    FREE("free");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_TIER = "tier";
  @SerializedName(SERIALIZED_NAME_TIER)
  private String tier;

  public static final String SERIALIZED_NAME_VOICE_LIMIT = "voice_limit";
  @SerializedName(SERIALIZED_NAME_VOICE_LIMIT)
  private Integer voiceLimit;

  public ExtendedSubscriptionResponseModel() {
  }

  public ExtendedSubscriptionResponseModel allowedToExtendCharacterLimit(Boolean allowedToExtendCharacterLimit) {
    this.allowedToExtendCharacterLimit = allowedToExtendCharacterLimit;
    return this;
  }

  /**
   * Get allowedToExtendCharacterLimit
   * @return allowedToExtendCharacterLimit
   */
  @javax.annotation.Nonnull
  public Boolean getAllowedToExtendCharacterLimit() {
    return allowedToExtendCharacterLimit;
  }

  public void setAllowedToExtendCharacterLimit(Boolean allowedToExtendCharacterLimit) {
    this.allowedToExtendCharacterLimit = allowedToExtendCharacterLimit;
  }


  public ExtendedSubscriptionResponseModel availableModels(List<TTSModelResponseModel> availableModels) {
    this.availableModels = availableModels;
    return this;
  }

  public ExtendedSubscriptionResponseModel addAvailableModelsItem(TTSModelResponseModel availableModelsItem) {
    if (this.availableModels == null) {
      this.availableModels = new ArrayList<>();
    }
    this.availableModels.add(availableModelsItem);
    return this;
  }

  /**
   * Get availableModels
   * @return availableModels
   */
  @javax.annotation.Nonnull
  public List<TTSModelResponseModel> getAvailableModels() {
    return availableModels;
  }

  public void setAvailableModels(List<TTSModelResponseModel> availableModels) {
    this.availableModels = availableModels;
  }


  public ExtendedSubscriptionResponseModel canExtendCharacterLimit(Boolean canExtendCharacterLimit) {
    this.canExtendCharacterLimit = canExtendCharacterLimit;
    return this;
  }

  /**
   * Get canExtendCharacterLimit
   * @return canExtendCharacterLimit
   */
  @javax.annotation.Nonnull
  public Boolean getCanExtendCharacterLimit() {
    return canExtendCharacterLimit;
  }

  public void setCanExtendCharacterLimit(Boolean canExtendCharacterLimit) {
    this.canExtendCharacterLimit = canExtendCharacterLimit;
  }


  public ExtendedSubscriptionResponseModel canExtendVoiceLimit(Boolean canExtendVoiceLimit) {
    this.canExtendVoiceLimit = canExtendVoiceLimit;
    return this;
  }

  /**
   * Get canExtendVoiceLimit
   * @return canExtendVoiceLimit
   */
  @javax.annotation.Nonnull
  public Boolean getCanExtendVoiceLimit() {
    return canExtendVoiceLimit;
  }

  public void setCanExtendVoiceLimit(Boolean canExtendVoiceLimit) {
    this.canExtendVoiceLimit = canExtendVoiceLimit;
  }


  public ExtendedSubscriptionResponseModel canUseDelayedPaymentMethods(Boolean canUseDelayedPaymentMethods) {
    this.canUseDelayedPaymentMethods = canUseDelayedPaymentMethods;
    return this;
  }

  /**
   * Get canUseDelayedPaymentMethods
   * @return canUseDelayedPaymentMethods
   */
  @javax.annotation.Nonnull
  public Boolean getCanUseDelayedPaymentMethods() {
    return canUseDelayedPaymentMethods;
  }

  public void setCanUseDelayedPaymentMethods(Boolean canUseDelayedPaymentMethods) {
    this.canUseDelayedPaymentMethods = canUseDelayedPaymentMethods;
  }


  public ExtendedSubscriptionResponseModel canUseInstantVoiceCloning(Boolean canUseInstantVoiceCloning) {
    this.canUseInstantVoiceCloning = canUseInstantVoiceCloning;
    return this;
  }

  /**
   * Get canUseInstantVoiceCloning
   * @return canUseInstantVoiceCloning
   */
  @javax.annotation.Nonnull
  public Boolean getCanUseInstantVoiceCloning() {
    return canUseInstantVoiceCloning;
  }

  public void setCanUseInstantVoiceCloning(Boolean canUseInstantVoiceCloning) {
    this.canUseInstantVoiceCloning = canUseInstantVoiceCloning;
  }


  public ExtendedSubscriptionResponseModel canUseProfessionalVoiceCloning(Boolean canUseProfessionalVoiceCloning) {
    this.canUseProfessionalVoiceCloning = canUseProfessionalVoiceCloning;
    return this;
  }

  /**
   * Get canUseProfessionalVoiceCloning
   * @return canUseProfessionalVoiceCloning
   */
  @javax.annotation.Nonnull
  public Boolean getCanUseProfessionalVoiceCloning() {
    return canUseProfessionalVoiceCloning;
  }

  public void setCanUseProfessionalVoiceCloning(Boolean canUseProfessionalVoiceCloning) {
    this.canUseProfessionalVoiceCloning = canUseProfessionalVoiceCloning;
  }


  public ExtendedSubscriptionResponseModel characterCount(Integer characterCount) {
    this.characterCount = characterCount;
    return this;
  }

  /**
   * Get characterCount
   * @return characterCount
   */
  @javax.annotation.Nonnull
  public Integer getCharacterCount() {
    return characterCount;
  }

  public void setCharacterCount(Integer characterCount) {
    this.characterCount = characterCount;
  }


  public ExtendedSubscriptionResponseModel characterLimit(Integer characterLimit) {
    this.characterLimit = characterLimit;
    return this;
  }

  /**
   * Get characterLimit
   * @return characterLimit
   */
  @javax.annotation.Nonnull
  public Integer getCharacterLimit() {
    return characterLimit;
  }

  public void setCharacterLimit(Integer characterLimit) {
    this.characterLimit = characterLimit;
  }


  public ExtendedSubscriptionResponseModel currency(CurrencyEnum currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nonnull
  public CurrencyEnum getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyEnum currency) {
    this.currency = currency;
  }


  public ExtendedSubscriptionResponseModel nextCharacterCountResetUnix(Integer nextCharacterCountResetUnix) {
    this.nextCharacterCountResetUnix = nextCharacterCountResetUnix;
    return this;
  }

  /**
   * Get nextCharacterCountResetUnix
   * @return nextCharacterCountResetUnix
   */
  @javax.annotation.Nonnull
  public Integer getNextCharacterCountResetUnix() {
    return nextCharacterCountResetUnix;
  }

  public void setNextCharacterCountResetUnix(Integer nextCharacterCountResetUnix) {
    this.nextCharacterCountResetUnix = nextCharacterCountResetUnix;
  }


  public ExtendedSubscriptionResponseModel nextInvoice(InvoiceResponseModel nextInvoice) {
    this.nextInvoice = nextInvoice;
    return this;
  }

  /**
   * Get nextInvoice
   * @return nextInvoice
   */
  @javax.annotation.Nonnull
  public InvoiceResponseModel getNextInvoice() {
    return nextInvoice;
  }

  public void setNextInvoice(InvoiceResponseModel nextInvoice) {
    this.nextInvoice = nextInvoice;
  }


  public ExtendedSubscriptionResponseModel professionalVoiceLimit(Integer professionalVoiceLimit) {
    this.professionalVoiceLimit = professionalVoiceLimit;
    return this;
  }

  /**
   * Get professionalVoiceLimit
   * @return professionalVoiceLimit
   */
  @javax.annotation.Nonnull
  public Integer getProfessionalVoiceLimit() {
    return professionalVoiceLimit;
  }

  public void setProfessionalVoiceLimit(Integer professionalVoiceLimit) {
    this.professionalVoiceLimit = professionalVoiceLimit;
  }


  public ExtendedSubscriptionResponseModel status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ExtendedSubscriptionResponseModel tier(String tier) {
    this.tier = tier;
    return this;
  }

  /**
   * Get tier
   * @return tier
   */
  @javax.annotation.Nonnull
  public String getTier() {
    return tier;
  }

  public void setTier(String tier) {
    this.tier = tier;
  }


  public ExtendedSubscriptionResponseModel voiceLimit(Integer voiceLimit) {
    this.voiceLimit = voiceLimit;
    return this;
  }

  /**
   * Get voiceLimit
   * @return voiceLimit
   */
  @javax.annotation.Nonnull
  public Integer getVoiceLimit() {
    return voiceLimit;
  }

  public void setVoiceLimit(Integer voiceLimit) {
    this.voiceLimit = voiceLimit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtendedSubscriptionResponseModel extendedSubscriptionResponseModel = (ExtendedSubscriptionResponseModel) o;
    return Objects.equals(this.allowedToExtendCharacterLimit, extendedSubscriptionResponseModel.allowedToExtendCharacterLimit) &&
        Objects.equals(this.availableModels, extendedSubscriptionResponseModel.availableModels) &&
        Objects.equals(this.canExtendCharacterLimit, extendedSubscriptionResponseModel.canExtendCharacterLimit) &&
        Objects.equals(this.canExtendVoiceLimit, extendedSubscriptionResponseModel.canExtendVoiceLimit) &&
        Objects.equals(this.canUseDelayedPaymentMethods, extendedSubscriptionResponseModel.canUseDelayedPaymentMethods) &&
        Objects.equals(this.canUseInstantVoiceCloning, extendedSubscriptionResponseModel.canUseInstantVoiceCloning) &&
        Objects.equals(this.canUseProfessionalVoiceCloning, extendedSubscriptionResponseModel.canUseProfessionalVoiceCloning) &&
        Objects.equals(this.characterCount, extendedSubscriptionResponseModel.characterCount) &&
        Objects.equals(this.characterLimit, extendedSubscriptionResponseModel.characterLimit) &&
        Objects.equals(this.currency, extendedSubscriptionResponseModel.currency) &&
        Objects.equals(this.nextCharacterCountResetUnix, extendedSubscriptionResponseModel.nextCharacterCountResetUnix) &&
        Objects.equals(this.nextInvoice, extendedSubscriptionResponseModel.nextInvoice) &&
        Objects.equals(this.professionalVoiceLimit, extendedSubscriptionResponseModel.professionalVoiceLimit) &&
        Objects.equals(this.status, extendedSubscriptionResponseModel.status) &&
        Objects.equals(this.tier, extendedSubscriptionResponseModel.tier) &&
        Objects.equals(this.voiceLimit, extendedSubscriptionResponseModel.voiceLimit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedToExtendCharacterLimit, availableModels, canExtendCharacterLimit, canExtendVoiceLimit, canUseDelayedPaymentMethods, canUseInstantVoiceCloning, canUseProfessionalVoiceCloning, characterCount, characterLimit, currency, nextCharacterCountResetUnix, nextInvoice, professionalVoiceLimit, status, tier, voiceLimit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtendedSubscriptionResponseModel {\n");
    sb.append("    allowedToExtendCharacterLimit: ").append(toIndentedString(allowedToExtendCharacterLimit)).append("\n");
    sb.append("    availableModels: ").append(toIndentedString(availableModels)).append("\n");
    sb.append("    canExtendCharacterLimit: ").append(toIndentedString(canExtendCharacterLimit)).append("\n");
    sb.append("    canExtendVoiceLimit: ").append(toIndentedString(canExtendVoiceLimit)).append("\n");
    sb.append("    canUseDelayedPaymentMethods: ").append(toIndentedString(canUseDelayedPaymentMethods)).append("\n");
    sb.append("    canUseInstantVoiceCloning: ").append(toIndentedString(canUseInstantVoiceCloning)).append("\n");
    sb.append("    canUseProfessionalVoiceCloning: ").append(toIndentedString(canUseProfessionalVoiceCloning)).append("\n");
    sb.append("    characterCount: ").append(toIndentedString(characterCount)).append("\n");
    sb.append("    characterLimit: ").append(toIndentedString(characterLimit)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    nextCharacterCountResetUnix: ").append(toIndentedString(nextCharacterCountResetUnix)).append("\n");
    sb.append("    nextInvoice: ").append(toIndentedString(nextInvoice)).append("\n");
    sb.append("    professionalVoiceLimit: ").append(toIndentedString(professionalVoiceLimit)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tier: ").append(toIndentedString(tier)).append("\n");
    sb.append("    voiceLimit: ").append(toIndentedString(voiceLimit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowed_to_extend_character_limit");
    openapiFields.add("available_models");
    openapiFields.add("can_extend_character_limit");
    openapiFields.add("can_extend_voice_limit");
    openapiFields.add("can_use_delayed_payment_methods");
    openapiFields.add("can_use_instant_voice_cloning");
    openapiFields.add("can_use_professional_voice_cloning");
    openapiFields.add("character_count");
    openapiFields.add("character_limit");
    openapiFields.add("currency");
    openapiFields.add("next_character_count_reset_unix");
    openapiFields.add("next_invoice");
    openapiFields.add("professional_voice_limit");
    openapiFields.add("status");
    openapiFields.add("tier");
    openapiFields.add("voice_limit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("allowed_to_extend_character_limit");
    openapiRequiredFields.add("available_models");
    openapiRequiredFields.add("can_extend_character_limit");
    openapiRequiredFields.add("can_extend_voice_limit");
    openapiRequiredFields.add("can_use_delayed_payment_methods");
    openapiRequiredFields.add("can_use_instant_voice_cloning");
    openapiRequiredFields.add("can_use_professional_voice_cloning");
    openapiRequiredFields.add("character_count");
    openapiRequiredFields.add("character_limit");
    openapiRequiredFields.add("currency");
    openapiRequiredFields.add("next_character_count_reset_unix");
    openapiRequiredFields.add("next_invoice");
    openapiRequiredFields.add("professional_voice_limit");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("tier");
    openapiRequiredFields.add("voice_limit");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExtendedSubscriptionResponseModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExtendedSubscriptionResponseModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExtendedSubscriptionResponseModel is not found in the empty JSON string", ExtendedSubscriptionResponseModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExtendedSubscriptionResponseModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExtendedSubscriptionResponseModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ExtendedSubscriptionResponseModel.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("available_models").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `available_models` to be an array in the JSON string but got `%s`", jsonObj.get("available_models").toString()));
      }

      JsonArray jsonArrayavailableModels = jsonObj.getAsJsonArray("available_models");
      // validate the required field `available_models` (array)
      for (int i = 0; i < jsonArrayavailableModels.size(); i++) {
        TTSModelResponseModel.validateJsonElement(jsonArrayavailableModels.get(i));
      };
      if (!jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      // validate the required field `currency`
      CurrencyEnum.validateJsonElement(jsonObj.get("currency"));
      // validate the required field `next_invoice`
      InvoiceResponseModel.validateJsonElement(jsonObj.get("next_invoice"));
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the required field `status`
      StatusEnum.validateJsonElement(jsonObj.get("status"));
      if (!jsonObj.get("tier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tier").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExtendedSubscriptionResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExtendedSubscriptionResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExtendedSubscriptionResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExtendedSubscriptionResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ExtendedSubscriptionResponseModel>() {
           @Override
           public void write(JsonWriter out, ExtendedSubscriptionResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExtendedSubscriptionResponseModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExtendedSubscriptionResponseModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExtendedSubscriptionResponseModel
   * @throws IOException if the JSON string is invalid with respect to ExtendedSubscriptionResponseModel
   */
  public static ExtendedSubscriptionResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExtendedSubscriptionResponseModel.class);
  }

  /**
   * Convert an instance of ExtendedSubscriptionResponseModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

