# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BodyDeleteHistoryItemsV1HistoryDeletePost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, history_item_ids: List[str]=None):
        """BodyDeleteHistoryItemsV1HistoryDeletePost - a model defined in OpenAPI

        :param history_item_ids: The history_item_ids of this BodyDeleteHistoryItemsV1HistoryDeletePost.
        """
        self.openapi_types = {
            'history_item_ids': List[str]
        }

        self.attribute_map = {
            'history_item_ids': 'history_item_ids'
        }

        self._history_item_ids = history_item_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BodyDeleteHistoryItemsV1HistoryDeletePost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Body_Delete_history_items_v1_history_delete_post of this BodyDeleteHistoryItemsV1HistoryDeletePost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def history_item_ids(self):
        """Gets the history_item_ids of this BodyDeleteHistoryItemsV1HistoryDeletePost.

        A list of history items to remove, you can get IDs of history items and other metadata using the GET https://api.elevenlabs.io/v1/history endpoint.

        :return: The history_item_ids of this BodyDeleteHistoryItemsV1HistoryDeletePost.
        :rtype: List[str]
        """
        return self._history_item_ids

    @history_item_ids.setter
    def history_item_ids(self, history_item_ids):
        """Sets the history_item_ids of this BodyDeleteHistoryItemsV1HistoryDeletePost.

        A list of history items to remove, you can get IDs of history items and other metadata using the GET https://api.elevenlabs.io/v1/history endpoint.

        :param history_item_ids: The history_item_ids of this BodyDeleteHistoryItemsV1HistoryDeletePost.
        :type history_item_ids: List[str]
        """
        if history_item_ids is None:
            raise ValueError("Invalid value for `history_item_ids`, must not be `None`")

        self._history_item_ids = history_item_ids
