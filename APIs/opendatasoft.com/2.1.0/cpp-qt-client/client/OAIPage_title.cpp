/**
 * opendatasoft
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPage_title.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPage_title::OAIPage_title(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPage_title::OAIPage_title() {
    this->initializeModel();
}

OAIPage_title::~OAIPage_title() {}

void OAIPage_title::initializeModel() {

    m_en_isSet = false;
    m_en_isValid = false;

    m_fr_isSet = false;
    m_fr_isValid = false;
}

void OAIPage_title::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPage_title::fromJsonObject(QJsonObject json) {

    m_en_isValid = ::OpenAPI::fromJsonValue(m_en, json[QString("en")]);
    m_en_isSet = !json[QString("en")].isNull() && m_en_isValid;

    m_fr_isValid = ::OpenAPI::fromJsonValue(m_fr, json[QString("fr")]);
    m_fr_isSet = !json[QString("fr")].isNull() && m_fr_isValid;
}

QString OAIPage_title::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPage_title::asJsonObject() const {
    QJsonObject obj;
    if (m_en_isSet) {
        obj.insert(QString("en"), ::OpenAPI::toJsonValue(m_en));
    }
    if (m_fr_isSet) {
        obj.insert(QString("fr"), ::OpenAPI::toJsonValue(m_fr));
    }
    return obj;
}

QString OAIPage_title::getEn() const {
    return m_en;
}
void OAIPage_title::setEn(const QString &en) {
    m_en = en;
    m_en_isSet = true;
}

bool OAIPage_title::is_en_Set() const{
    return m_en_isSet;
}

bool OAIPage_title::is_en_Valid() const{
    return m_en_isValid;
}

QString OAIPage_title::getFr() const {
    return m_fr;
}
void OAIPage_title::setFr(const QString &fr) {
    m_fr = fr;
    m_fr_isSet = true;
}

bool OAIPage_title::is_fr_Set() const{
    return m_fr_isSet;
}

bool OAIPage_title::is_fr_Valid() const{
    return m_fr_isValid;
}

bool OAIPage_title::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_en_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fr_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPage_title::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
