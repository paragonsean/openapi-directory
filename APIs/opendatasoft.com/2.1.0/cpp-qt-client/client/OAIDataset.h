/**
 * opendatasoft
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataset.h
 *
 * 
 */

#ifndef OAIDataset_H
#define OAIDataset_H

#include <QJsonObject>

#include "OAIDataset_fields_inner.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataset_fields_inner;

class OAIDataset : public OAIObject {
public:
    OAIDataset();
    OAIDataset(QString json);
    ~OAIDataset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIObject> getAttachments() const;
    void setAttachments(const QList<OAIObject> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    bool isDataVisible() const;
    void setDataVisible(const bool &data_visible);
    bool is_data_visible_Set() const;
    bool is_data_visible_Valid() const;

    QString getDatasetId() const;
    void setDatasetId(const QString &dataset_id);
    bool is_dataset_id_Set() const;
    bool is_dataset_id_Valid() const;

    QList<QString> getFeatures() const;
    void setFeatures(const QList<QString> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    QList<OAIDataset_fields_inner> getFields() const;
    void setFields(const QList<OAIDataset_fields_inner> &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    bool isHasRecords() const;
    void setHasRecords(const bool &has_records);
    bool is_has_records_Set() const;
    bool is_has_records_Valid() const;

    OAIObject getMetas() const;
    void setMetas(const OAIObject &metas);
    bool is_metas_Set() const;
    bool is_metas_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIObject> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    bool m_data_visible;
    bool m_data_visible_isSet;
    bool m_data_visible_isValid;

    QString m_dataset_id;
    bool m_dataset_id_isSet;
    bool m_dataset_id_isValid;

    QList<QString> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    QList<OAIDataset_fields_inner> m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    bool m_has_records;
    bool m_has_records_isSet;
    bool m_has_records_isValid;

    OAIObject m_metas;
    bool m_metas_isSet;
    bool m_metas_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataset)

#endif // OAIDataset_H
