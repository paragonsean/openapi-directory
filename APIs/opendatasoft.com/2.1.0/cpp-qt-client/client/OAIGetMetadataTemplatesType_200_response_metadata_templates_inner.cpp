/**
 * opendatasoft
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetMetadataTemplatesType_200_response_metadata_templates_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::OAIGetMetadataTemplatesType_200_response_metadata_templates_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::OAIGetMetadataTemplatesType_200_response_metadata_templates_inner() {
    this->initializeModel();
}

OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::~OAIGetMetadataTemplatesType_200_response_metadata_templates_inner() {}

void OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::initializeModel() {

    m_links_isSet = false;
    m_links_isValid = false;

    m_metadata_template_isSet = false;
    m_metadata_template_isValid = false;
}

void OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::fromJsonObject(QJsonObject json) {

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_metadata_template_isValid = ::OpenAPI::fromJsonValue(m_metadata_template, json[QString("metadata_template")]);
    m_metadata_template_isSet = !json[QString("metadata_template")].isNull() && m_metadata_template_isValid;
}

QString OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_links.size() > 0) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_metadata_template.isSet()) {
        obj.insert(QString("metadata_template"), ::OpenAPI::toJsonValue(m_metadata_template));
    }
    return obj;
}

QList<OAILink> OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::getLinks() const {
    return m_links;
}
void OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::setLinks(const QList<OAILink> &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::is_links_Set() const{
    return m_links_isSet;
}

bool OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::is_links_Valid() const{
    return m_links_isValid;
}

OAIMetadata_template OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::getMetadataTemplate() const {
    return m_metadata_template;
}
void OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::setMetadataTemplate(const OAIMetadata_template &metadata_template) {
    m_metadata_template = metadata_template;
    m_metadata_template_isSet = true;
}

bool OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::is_metadata_template_Set() const{
    return m_metadata_template_isSet;
}

bool OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::is_metadata_template_Valid() const{
    return m_metadata_template_isValid;
}

bool OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_template.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetMetadataTemplatesType_200_response_metadata_templates_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
