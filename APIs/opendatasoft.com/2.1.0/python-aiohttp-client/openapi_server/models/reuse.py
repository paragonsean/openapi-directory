# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reuse_user import ReuseUser
from openapi_server import util


class Reuse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, description: object=None, id: str=None, thumbnail: str=None, title: str=None, url: str=None, user: ReuseUser=None):
        """Reuse - a model defined in OpenAPI

        :param created_at: The created_at of this Reuse.
        :param description: The description of this Reuse.
        :param id: The id of this Reuse.
        :param thumbnail: The thumbnail of this Reuse.
        :param title: The title of this Reuse.
        :param url: The url of this Reuse.
        :param user: The user of this Reuse.
        """
        self.openapi_types = {
            'created_at': str,
            'description': object,
            'id': str,
            'thumbnail': str,
            'title': str,
            'url': str,
            'user': ReuseUser
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'description': 'description',
            'id': 'id',
            'thumbnail': 'thumbnail',
            'title': 'title',
            'url': 'url',
            'user': 'user'
        }

        self._created_at = created_at
        self._description = description
        self._id = id
        self._thumbnail = thumbnail
        self._title = title
        self._url = url
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Reuse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The reuse of this Reuse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Reuse.

        Date when the reuse was submitted.

        :return: The created_at of this Reuse.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Reuse.

        Date when the reuse was submitted.

        :param created_at: The created_at of this Reuse.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this Reuse.

        Slightly longer description of what was achieved using the dataset.

        :return: The description of this Reuse.
        :rtype: object
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Reuse.

        Slightly longer description of what was achieved using the dataset.

        :param description: The description of this Reuse.
        :type description: object
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this Reuse.

        reuse id

        :return: The id of this Reuse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Reuse.

        reuse id

        :param id: The id of this Reuse.
        :type id: str
        """

        self._id = id

    @property
    def thumbnail(self):
        """Gets the thumbnail of this Reuse.

        URL illustrating the work.

        :return: The thumbnail of this Reuse.
        :rtype: str
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this Reuse.

        URL illustrating the work.

        :param thumbnail: The thumbnail of this Reuse.
        :type thumbnail: str
        """

        self._thumbnail = thumbnail

    @property
    def title(self):
        """Gets the title of this Reuse.

        Short description of the user's work.

        :return: The title of this Reuse.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Reuse.

        Short description of the user's work.

        :param title: The title of this Reuse.
        :type title: str
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this Reuse.

        URL where the work can be accessed publicly.

        :return: The url of this Reuse.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Reuse.

        URL where the work can be accessed publicly.

        :param url: The url of this Reuse.
        :type url: str
        """

        self._url = url

    @property
    def user(self):
        """Gets the user of this Reuse.


        :return: The user of this Reuse.
        :rtype: ReuseUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Reuse.


        :param user: The user of this Reuse.
        :type user: ReuseUser
        """

        self._user = user
