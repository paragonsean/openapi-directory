# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_records200_response_records_inner import GetRecords200ResponseRecordsInner
from openapi_server.models.link import Link
from openapi_server import util


class GetRecords200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: List[Link]=None, records: List[GetRecords200ResponseRecordsInner]=None, total_count: int=None):
        """GetRecords200Response - a model defined in OpenAPI

        :param links: The links of this GetRecords200Response.
        :param records: The records of this GetRecords200Response.
        :param total_count: The total_count of this GetRecords200Response.
        """
        self.openapi_types = {
            'links': List[Link],
            'records': List[GetRecords200ResponseRecordsInner],
            'total_count': int
        }

        self.attribute_map = {
            'links': 'links',
            'records': 'records',
            'total_count': 'total_count'
        }

        self._links = links
        self._records = records
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetRecords200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getRecords_200_response of this GetRecords200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this GetRecords200Response.


        :return: The links of this GetRecords200Response.
        :rtype: List[Link]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this GetRecords200Response.


        :param links: The links of this GetRecords200Response.
        :type links: List[Link]
        """

        self._links = links

    @property
    def records(self):
        """Gets the records of this GetRecords200Response.


        :return: The records of this GetRecords200Response.
        :rtype: List[GetRecords200ResponseRecordsInner]
        """
        return self._records

    @records.setter
    def records(self, records):
        """Sets the records of this GetRecords200Response.


        :param records: The records of this GetRecords200Response.
        :type records: List[GetRecords200ResponseRecordsInner]
        """

        self._records = records

    @property
    def total_count(self):
        """Gets the total_count of this GetRecords200Response.


        :return: The total_count of this GetRecords200Response.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this GetRecords200Response.


        :param total_count: The total_count of this GetRecords200Response.
        :type total_count: int
        """

        self._total_count = total_count
