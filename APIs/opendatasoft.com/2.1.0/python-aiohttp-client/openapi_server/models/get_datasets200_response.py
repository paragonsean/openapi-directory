# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_datasets200_response_datasets_inner import GetDatasets200ResponseDatasetsInner
from openapi_server.models.link import Link
from openapi_server import util


class GetDatasets200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datasets: List[GetDatasets200ResponseDatasetsInner]=None, links: List[Link]=None, total_count: int=None):
        """GetDatasets200Response - a model defined in OpenAPI

        :param datasets: The datasets of this GetDatasets200Response.
        :param links: The links of this GetDatasets200Response.
        :param total_count: The total_count of this GetDatasets200Response.
        """
        self.openapi_types = {
            'datasets': List[GetDatasets200ResponseDatasetsInner],
            'links': List[Link],
            'total_count': int
        }

        self.attribute_map = {
            'datasets': 'datasets',
            'links': 'links',
            'total_count': 'total_count'
        }

        self._datasets = datasets
        self._links = links
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDatasets200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getDatasets_200_response of this GetDatasets200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datasets(self):
        """Gets the datasets of this GetDatasets200Response.


        :return: The datasets of this GetDatasets200Response.
        :rtype: List[GetDatasets200ResponseDatasetsInner]
        """
        return self._datasets

    @datasets.setter
    def datasets(self, datasets):
        """Sets the datasets of this GetDatasets200Response.


        :param datasets: The datasets of this GetDatasets200Response.
        :type datasets: List[GetDatasets200ResponseDatasetsInner]
        """

        self._datasets = datasets

    @property
    def links(self):
        """Gets the links of this GetDatasets200Response.


        :return: The links of this GetDatasets200Response.
        :rtype: List[Link]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this GetDatasets200Response.


        :param links: The links of this GetDatasets200Response.
        :type links: List[Link]
        """

        self._links = links

    @property
    def total_count(self):
        """Gets the total_count of this GetDatasets200Response.


        :return: The total_count of this GetDatasets200Response.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this GetDatasets200Response.


        :param total_count: The total_count of this GetDatasets200Response.
        :type total_count: int
        """

        self._total_count = total_count
