# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Record(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: object=None, id: str=None, size: int=None, timestamp: str=None):
        """Record - a model defined in OpenAPI

        :param fields: The fields of this Record.
        :param id: The id of this Record.
        :param size: The size of this Record.
        :param timestamp: The timestamp of this Record.
        """
        self.openapi_types = {
            'fields': object,
            'id': str,
            'size': int,
            'timestamp': str
        }

        self.attribute_map = {
            'fields': 'fields',
            'id': 'id',
            'size': 'size',
            'timestamp': 'timestamp'
        }

        self._fields = fields
        self._id = id
        self._size = size
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Record':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The record of this Record.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this Record.


        :return: The fields of this Record.
        :rtype: object
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this Record.


        :param fields: The fields of this Record.
        :type fields: object
        """

        self._fields = fields

    @property
    def id(self):
        """Gets the id of this Record.


        :return: The id of this Record.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Record.


        :param id: The id of this Record.
        :type id: str
        """

        self._id = id

    @property
    def size(self):
        """Gets the size of this Record.


        :return: The size of this Record.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this Record.


        :param size: The size of this Record.
        :type size: int
        """

        self._size = size

    @property
    def timestamp(self):
        """Gets the timestamp of this Record.


        :return: The timestamp of this Record.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this Record.


        :param timestamp: The timestamp of this Record.
        :type timestamp: str
        """

        self._timestamp = timestamp
