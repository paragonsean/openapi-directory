# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetadataTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, _schema: List[object]=None, type: str=None):
        """MetadataTemplate - a model defined in OpenAPI

        :param name: The name of this MetadataTemplate.
        :param _schema: The _schema of this MetadataTemplate.
        :param type: The type of this MetadataTemplate.
        """
        self.openapi_types = {
            'name': str,
            '_schema': List[object],
            'type': str
        }

        self.attribute_map = {
            'name': 'name',
            '_schema': 'schema',
            'type': 'type'
        }

        self._name = name
        self.__schema = _schema
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetadataTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The metadata_template of this MetadataTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this MetadataTemplate.


        :return: The name of this MetadataTemplate.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MetadataTemplate.


        :param name: The name of this MetadataTemplate.
        :type name: str
        """

        self._name = name

    @property
    def _schema(self):
        """Gets the _schema of this MetadataTemplate.


        :return: The _schema of this MetadataTemplate.
        :rtype: List[object]
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this MetadataTemplate.


        :param _schema: The _schema of this MetadataTemplate.
        :type _schema: List[object]
        """

        self.__schema = _schema

    @property
    def type(self):
        """Gets the type of this MetadataTemplate.


        :return: The type of this MetadataTemplate.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MetadataTemplate.


        :param type: The type of this MetadataTemplate.
        :type type: str
        """

        self._type = type
