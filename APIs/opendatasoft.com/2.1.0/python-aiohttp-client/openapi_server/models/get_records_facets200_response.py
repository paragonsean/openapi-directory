# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.facet_enumeration import FacetEnumeration
from openapi_server import util


class GetRecordsFacets200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, facets: List[FacetEnumeration]=None):
        """GetRecordsFacets200Response - a model defined in OpenAPI

        :param facets: The facets of this GetRecordsFacets200Response.
        """
        self.openapi_types = {
            'facets': List[FacetEnumeration]
        }

        self.attribute_map = {
            'facets': 'facets'
        }

        self._facets = facets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetRecordsFacets200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getRecordsFacets_200_response of this GetRecordsFacets200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def facets(self):
        """Gets the facets of this GetRecordsFacets200Response.


        :return: The facets of this GetRecordsFacets200Response.
        :rtype: List[FacetEnumeration]
        """
        return self._facets

    @facets.setter
    def facets(self, facets):
        """Sets the facets of this GetRecordsFacets200Response.


        :param facets: The facets of this GetRecordsFacets200Response.
        :type facets: List[FacetEnumeration]
        """

        self._facets = facets
