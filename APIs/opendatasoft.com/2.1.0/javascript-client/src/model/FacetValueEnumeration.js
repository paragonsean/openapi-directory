/**
 * opendatasoft
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FacetValueEnumeration model module.
 * @module model/FacetValueEnumeration
 * @version 2.1.0
 */
class FacetValueEnumeration {
    /**
     * Constructs a new <code>FacetValueEnumeration</code>.
     * @alias module:model/FacetValueEnumeration
     */
    constructor() { 
        
        FacetValueEnumeration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FacetValueEnumeration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FacetValueEnumeration} obj Optional instance to populate.
     * @return {module:model/FacetValueEnumeration} The populated <code>FacetValueEnumeration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FacetValueEnumeration();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('facets')) {
                obj['facets'] = ApiClient.convertToType(data['facets'], [FacetValueEnumeration]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FacetValueEnumeration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FacetValueEnumeration</code>.
     */
    static validateJSON(data) {
        if (data['facets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['facets'])) {
                throw new Error("Expected the field `facets` to be an array in the JSON data but got " + data['facets']);
            }
            // validate the optional field `facets` (array)
            for (const item of data['facets']) {
                FacetValueEnumeration.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * @member {Number} count
 */
FacetValueEnumeration.prototype['count'] = undefined;

/**
 * @member {Array.<module:model/FacetValueEnumeration>} facets
 */
FacetValueEnumeration.prototype['facets'] = undefined;

/**
 * @member {String} name
 */
FacetValueEnumeration.prototype['name'] = undefined;

/**
 * @member {String} value
 */
FacetValueEnumeration.prototype['value'] = undefined;






export default FacetValueEnumeration;

