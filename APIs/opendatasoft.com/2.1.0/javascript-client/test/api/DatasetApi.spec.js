/**
 * opendatasoft
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Opendatasoft);
  }
}(this, function(expect, Opendatasoft) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Opendatasoft.DatasetApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DatasetApi', function() {
    describe('aggregateRecords', function() {
      it('should call aggregateRecords successfully', function(done) {
        //uncomment below and update the code to test aggregateRecords
        //instance.aggregateRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadDatasetAttachement', function() {
      it('should call downloadDatasetAttachement successfully', function(done) {
        //uncomment below and update the code to test downloadDatasetAttachement
        //instance.downloadDatasetAttachement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadDatasetSnapshot', function() {
      it('should call downloadDatasetSnapshot successfully', function(done) {
        //uncomment below and update the code to test downloadDatasetSnapshot
        //instance.downloadDatasetSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataset', function() {
      it('should call getDataset successfully', function(done) {
        //uncomment below and update the code to test getDataset
        //instance.getDataset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasetAttachements', function() {
      it('should call getDatasetAttachements successfully', function(done) {
        //uncomment below and update the code to test getDatasetAttachements
        //instance.getDatasetAttachements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasetFile', function() {
      it('should call getDatasetFile successfully', function(done) {
        //uncomment below and update the code to test getDatasetFile
        //instance.getDatasetFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasetReuse', function() {
      it('should call getDatasetReuse successfully', function(done) {
        //uncomment below and update the code to test getDatasetReuse
        //instance.getDatasetReuse(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasetReuses', function() {
      it('should call getDatasetReuses successfully', function(done) {
        //uncomment below and update the code to test getDatasetReuses
        //instance.getDatasetReuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasetSnapshots', function() {
      it('should call getDatasetSnapshots successfully', function(done) {
        //uncomment below and update the code to test getDatasetSnapshots
        //instance.getDatasetSnapshots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecord', function() {
      it('should call getRecord successfully', function(done) {
        //uncomment below and update the code to test getRecord
        //instance.getRecord(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecords', function() {
      it('should call getRecords successfully', function(done) {
        //uncomment below and update the code to test getRecords
        //instance.getRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecordsFacets', function() {
      it('should call getRecordsFacets successfully', function(done) {
        //uncomment below and update the code to test getRecordsFacets
        //instance.getRecordsFacets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendDatasetFeedback', function() {
      it('should call sendDatasetFeedback successfully', function(done) {
        //uncomment below and update the code to test sendDatasetFeedback
        //instance.sendDatasetFeedback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
