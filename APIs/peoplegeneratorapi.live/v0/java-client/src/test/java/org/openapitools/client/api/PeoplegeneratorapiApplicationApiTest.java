/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.Lifestory;
import org.openapitools.client.model.Person;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PeoplegeneratorapiApplicationApi
 */
@Disabled
public class PeoplegeneratorapiApplicationApiTest {

    private final PeoplegeneratorapiApplicationApi api = new PeoplegeneratorapiApplicationApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ageTest() throws ApiException {
        Integer response = api.age();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void age1Test() throws ApiException {
        Integer response = api.age1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bloodtypeTest() throws ApiException {
        String response = api.bloodtype();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bloodtype1Test() throws ApiException {
        String response = api.bloodtype1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void creditcardnumberTest() throws ApiException {
        String response = api.creditcardnumber();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void creditcardnumber1Test() throws ApiException {
        String response = api.creditcardnumber1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void creditscoreTest() throws ApiException {
        Integer response = api.creditscore();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void creditscore1Test() throws ApiException {
        Integer response = api.creditscore1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void emailTest() throws ApiException {
        String response = api.email();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void email1Test() throws ApiException {
        String response = api.email1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eyecolorTest() throws ApiException {
        String response = api.eyecolor();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eyecolor1Test() throws ApiException {
        String response = api.eyecolor1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void genderTest() throws ApiException {
        String response = api.gender();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gender1Test() throws ApiException {
        String response = api.gender1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateAddressTest() throws ApiException {
        Address response = api.generateAddress();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateAddress1Test() throws ApiException {
        Address response = api.generateAddress1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateLifeStoryTest() throws ApiException {
        Lifestory response = api.generateLifeStory();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateLifeStory1Test() throws ApiException {
        Lifestory response = api.generateLifeStory1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompressedPersonTest() throws ApiException {
        Integer number = null;
        List<byte[]> response = api.getCompressedPerson(number);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompressedPerson1Test() throws ApiException {
        Integer number = null;
        List<byte[]> response = api.getCompressedPerson1(number);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPersonTest() throws ApiException {
        Person response = api.getPerson();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPerson1Test() throws ApiException {
        Person response = api.getPerson1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gpaTest() throws ApiException {
        Double response = api.gpa();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gpa1Test() throws ApiException {
        Double response = api.gpa1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void haschildrenTest() throws ApiException {
        Boolean response = api.haschildren();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void haschildren1Test() throws ApiException {
        Boolean response = api.haschildren1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hasdegreeTest() throws ApiException {
        Boolean response = api.hasdegree();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hasdegree1Test() throws ApiException {
        Boolean response = api.hasdegree1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void heightTest() throws ApiException {
        Double response = api.height();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void height1Test() throws ApiException {
        Double response = api.height1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void incomeTest() throws ApiException {
        Integer response = api.income();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void income1Test() throws ApiException {
        Integer response = api.income1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobTest() throws ApiException {
        String response = api.job();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void job1Test() throws ApiException {
        String response = api.job1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void maritalstatusTest() throws ApiException {
        Boolean response = api.maritalstatus();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void maritalstatus1Test() throws ApiException {
        Boolean response = api.maritalstatus1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void nameTest() throws ApiException {
        String response = api.name();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void name1Test() throws ApiException {
        String response = api.name1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void politicalLeaningTest() throws ApiException {
        Double response = api.politicalLeaning();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void politicalLeaning1Test() throws ApiException {
        Double response = api.politicalLeaning1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void religionTest() throws ApiException {
        String response = api.religion();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void religion1Test() throws ApiException {
        String response = api.religion1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usernameTest() throws ApiException {
        String response = api.username();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void username1Test() throws ApiException {
        String response = api.username1();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void weightTest() throws ApiException {
        Double response = api.weight();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void weight1Test() throws ApiException {
        Double response = api.weight1();
        // TODO: test validations
    }

}
