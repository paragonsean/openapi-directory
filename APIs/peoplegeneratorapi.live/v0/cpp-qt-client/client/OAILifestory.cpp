/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILifestory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILifestory::OAILifestory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILifestory::OAILifestory() {
    this->initializeModel();
}

OAILifestory::~OAILifestory() {}

void OAILifestory::initializeModel() {

    m_lifestory_isSet = false;
    m_lifestory_isValid = false;

    m_person_isSet = false;
    m_person_isValid = false;
}

void OAILifestory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILifestory::fromJsonObject(QJsonObject json) {

    m_lifestory_isValid = ::OpenAPI::fromJsonValue(m_lifestory, json[QString("lifestory")]);
    m_lifestory_isSet = !json[QString("lifestory")].isNull() && m_lifestory_isValid;

    m_person_isValid = ::OpenAPI::fromJsonValue(m_person, json[QString("person")]);
    m_person_isSet = !json[QString("person")].isNull() && m_person_isValid;
}

QString OAILifestory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILifestory::asJsonObject() const {
    QJsonObject obj;
    if (m_lifestory_isSet) {
        obj.insert(QString("lifestory"), ::OpenAPI::toJsonValue(m_lifestory));
    }
    if (m_person.isSet()) {
        obj.insert(QString("person"), ::OpenAPI::toJsonValue(m_person));
    }
    return obj;
}

QString OAILifestory::getLifestory() const {
    return m_lifestory;
}
void OAILifestory::setLifestory(const QString &lifestory) {
    m_lifestory = lifestory;
    m_lifestory_isSet = true;
}

bool OAILifestory::is_lifestory_Set() const{
    return m_lifestory_isSet;
}

bool OAILifestory::is_lifestory_Valid() const{
    return m_lifestory_isValid;
}

OAIPerson OAILifestory::getPerson() const {
    return m_person;
}
void OAILifestory::setPerson(const OAIPerson &person) {
    m_person = person;
    m_person_isSet = true;
}

bool OAILifestory::is_person_Set() const{
    return m_person_isSet;
}

bool OAILifestory::is_person_Valid() const{
    return m_person_isValid;
}

bool OAILifestory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_lifestory_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_person.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILifestory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
