/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenApiDefinition);
  }
}(this, function(expect, OpenApiDefinition) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenApiDefinition.Person();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Person', function() {
    it('should create an instance of Person', function() {
      // uncomment below and update the code to test Person
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be.a(OpenApiDefinition.Person);
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property age (base name: "age")', function() {
      // uncomment below and update the code to test the property age
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property bloodType (base name: "bloodType")', function() {
      // uncomment below and update the code to test the property bloodType
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property ccNumber (base name: "ccNumber")', function() {
      // uncomment below and update the code to test the property ccNumber
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property creditScore (base name: "creditScore")', function() {
      // uncomment below and update the code to test the property creditScore
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property doB (base name: "doB")', function() {
      // uncomment below and update the code to test the property doB
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property eyeColor (base name: "eyeColor")', function() {
      // uncomment below and update the code to test the property eyeColor
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property gpa (base name: "gpa")', function() {
      // uncomment below and update the code to test the property gpa
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property hasChildren (base name: "hasChildren")', function() {
      // uncomment below and update the code to test the property hasChildren
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property hasDegree (base name: "hasDegree")', function() {
      // uncomment below and update the code to test the property hasDegree
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property incomeUSD (base name: "incomeUSD")', function() {
      // uncomment below and update the code to test the property incomeUSD
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property job (base name: "job")', function() {
      // uncomment below and update the code to test the property job
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property married (base name: "married")', function() {
      // uncomment below and update the code to test the property married
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property politicalLeaning (base name: "politicalLeaning")', function() {
      // uncomment below and update the code to test the property politicalLeaning
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property religion (base name: "religion")', function() {
      // uncomment below and update the code to test the property religion
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instance = new OpenApiDefinition.Person();
      //expect(instance).to.be();
    });

  });

}));
