# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Address(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country: str=None, country_code: str=None, geoname_id: int=None, ip_address: str=None, phone_number: str=None, state: str=None, street_address: str=None, zip: str=None):
        """Address - a model defined in OpenAPI

        :param city: The city of this Address.
        :param country: The country of this Address.
        :param country_code: The country_code of this Address.
        :param geoname_id: The geoname_id of this Address.
        :param ip_address: The ip_address of this Address.
        :param phone_number: The phone_number of this Address.
        :param state: The state of this Address.
        :param street_address: The street_address of this Address.
        :param zip: The zip of this Address.
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'country_code': str,
            'geoname_id': int,
            'ip_address': str,
            'phone_number': str,
            'state': str,
            'street_address': str,
            'zip': str
        }

        self.attribute_map = {
            'city': 'city',
            'country': 'country',
            'country_code': 'countryCode',
            'geoname_id': 'geonameId',
            'ip_address': 'ipAddress',
            'phone_number': 'phoneNumber',
            'state': 'state',
            'street_address': 'streetAddress',
            'zip': 'zip'
        }

        self._city = city
        self._country = country
        self._country_code = country_code
        self._geoname_id = geoname_id
        self._ip_address = ip_address
        self._phone_number = phone_number
        self._state = state
        self._street_address = street_address
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Address':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Address of this Address.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this Address.


        :return: The city of this Address.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Address.


        :param city: The city of this Address.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this Address.


        :return: The country of this Address.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this Address.


        :param country: The country of this Address.
        :type country: str
        """

        self._country = country

    @property
    def country_code(self):
        """Gets the country_code of this Address.


        :return: The country_code of this Address.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this Address.


        :param country_code: The country_code of this Address.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def geoname_id(self):
        """Gets the geoname_id of this Address.


        :return: The geoname_id of this Address.
        :rtype: int
        """
        return self._geoname_id

    @geoname_id.setter
    def geoname_id(self, geoname_id):
        """Sets the geoname_id of this Address.


        :param geoname_id: The geoname_id of this Address.
        :type geoname_id: int
        """

        self._geoname_id = geoname_id

    @property
    def ip_address(self):
        """Gets the ip_address of this Address.


        :return: The ip_address of this Address.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this Address.


        :param ip_address: The ip_address of this Address.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def phone_number(self):
        """Gets the phone_number of this Address.


        :return: The phone_number of this Address.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this Address.


        :param phone_number: The phone_number of this Address.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def state(self):
        """Gets the state of this Address.


        :return: The state of this Address.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Address.


        :param state: The state of this Address.
        :type state: str
        """

        self._state = state

    @property
    def street_address(self):
        """Gets the street_address of this Address.


        :return: The street_address of this Address.
        :rtype: str
        """
        return self._street_address

    @street_address.setter
    def street_address(self, street_address):
        """Sets the street_address of this Address.


        :param street_address: The street_address of this Address.
        :type street_address: str
        """

        self._street_address = street_address

    @property
    def zip(self):
        """Gets the zip of this Address.


        :return: The zip of this Address.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this Address.


        :param zip: The zip of this Address.
        :type zip: str
        """

        self._zip = zip
