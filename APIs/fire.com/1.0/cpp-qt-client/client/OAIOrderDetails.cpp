/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderDetails::OAIOrderDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderDetails::OAIOrderDetails() {
    this->initializeModel();
}

OAIOrderDetails::~OAIOrderDetails() {}

void OAIOrderDetails::initializeModel() {

    m_comment1_isSet = false;
    m_comment1_isValid = false;

    m_comment2_isSet = false;
    m_comment2_isValid = false;

    m_customer_number_isSet = false;
    m_customer_number_isValid = false;

    m_delivery_address_line1_isSet = false;
    m_delivery_address_line1_isValid = false;

    m_delivery_address_line2_isSet = false;
    m_delivery_address_line2_isValid = false;

    m_delivery_city_isSet = false;
    m_delivery_city_isValid = false;

    m_delivery_country_isSet = false;
    m_delivery_country_isValid = false;

    m_delivery_post_code_isSet = false;
    m_delivery_post_code_isValid = false;

    m_merchant_customer_identification_isSet = false;
    m_merchant_customer_identification_isValid = false;

    m_merchant_number_isSet = false;
    m_merchant_number_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_variable_reference_isSet = false;
    m_variable_reference_isValid = false;
}

void OAIOrderDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderDetails::fromJsonObject(QJsonObject json) {

    m_comment1_isValid = ::OpenAPI::fromJsonValue(m_comment1, json[QString("comment1")]);
    m_comment1_isSet = !json[QString("comment1")].isNull() && m_comment1_isValid;

    m_comment2_isValid = ::OpenAPI::fromJsonValue(m_comment2, json[QString("comment2")]);
    m_comment2_isSet = !json[QString("comment2")].isNull() && m_comment2_isValid;

    m_customer_number_isValid = ::OpenAPI::fromJsonValue(m_customer_number, json[QString("customerNumber")]);
    m_customer_number_isSet = !json[QString("customerNumber")].isNull() && m_customer_number_isValid;

    m_delivery_address_line1_isValid = ::OpenAPI::fromJsonValue(m_delivery_address_line1, json[QString("deliveryAddressLine1")]);
    m_delivery_address_line1_isSet = !json[QString("deliveryAddressLine1")].isNull() && m_delivery_address_line1_isValid;

    m_delivery_address_line2_isValid = ::OpenAPI::fromJsonValue(m_delivery_address_line2, json[QString("deliveryAddressLine2")]);
    m_delivery_address_line2_isSet = !json[QString("deliveryAddressLine2")].isNull() && m_delivery_address_line2_isValid;

    m_delivery_city_isValid = ::OpenAPI::fromJsonValue(m_delivery_city, json[QString("deliveryCity")]);
    m_delivery_city_isSet = !json[QString("deliveryCity")].isNull() && m_delivery_city_isValid;

    m_delivery_country_isValid = ::OpenAPI::fromJsonValue(m_delivery_country, json[QString("deliveryCountry")]);
    m_delivery_country_isSet = !json[QString("deliveryCountry")].isNull() && m_delivery_country_isValid;

    m_delivery_post_code_isValid = ::OpenAPI::fromJsonValue(m_delivery_post_code, json[QString("deliveryPostCode")]);
    m_delivery_post_code_isSet = !json[QString("deliveryPostCode")].isNull() && m_delivery_post_code_isValid;

    m_merchant_customer_identification_isValid = ::OpenAPI::fromJsonValue(m_merchant_customer_identification, json[QString("merchantCustomerIdentification")]);
    m_merchant_customer_identification_isSet = !json[QString("merchantCustomerIdentification")].isNull() && m_merchant_customer_identification_isValid;

    m_merchant_number_isValid = ::OpenAPI::fromJsonValue(m_merchant_number, json[QString("merchantNumber")]);
    m_merchant_number_isSet = !json[QString("merchantNumber")].isNull() && m_merchant_number_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;

    m_variable_reference_isValid = ::OpenAPI::fromJsonValue(m_variable_reference, json[QString("variableReference")]);
    m_variable_reference_isSet = !json[QString("variableReference")].isNull() && m_variable_reference_isValid;
}

QString OAIOrderDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_comment1_isSet) {
        obj.insert(QString("comment1"), ::OpenAPI::toJsonValue(m_comment1));
    }
    if (m_comment2_isSet) {
        obj.insert(QString("comment2"), ::OpenAPI::toJsonValue(m_comment2));
    }
    if (m_customer_number_isSet) {
        obj.insert(QString("customerNumber"), ::OpenAPI::toJsonValue(m_customer_number));
    }
    if (m_delivery_address_line1_isSet) {
        obj.insert(QString("deliveryAddressLine1"), ::OpenAPI::toJsonValue(m_delivery_address_line1));
    }
    if (m_delivery_address_line2_isSet) {
        obj.insert(QString("deliveryAddressLine2"), ::OpenAPI::toJsonValue(m_delivery_address_line2));
    }
    if (m_delivery_city_isSet) {
        obj.insert(QString("deliveryCity"), ::OpenAPI::toJsonValue(m_delivery_city));
    }
    if (m_delivery_country_isSet) {
        obj.insert(QString("deliveryCountry"), ::OpenAPI::toJsonValue(m_delivery_country));
    }
    if (m_delivery_post_code_isSet) {
        obj.insert(QString("deliveryPostCode"), ::OpenAPI::toJsonValue(m_delivery_post_code));
    }
    if (m_merchant_customer_identification_isSet) {
        obj.insert(QString("merchantCustomerIdentification"), ::OpenAPI::toJsonValue(m_merchant_customer_identification));
    }
    if (m_merchant_number_isSet) {
        obj.insert(QString("merchantNumber"), ::OpenAPI::toJsonValue(m_merchant_number));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_variable_reference_isSet) {
        obj.insert(QString("variableReference"), ::OpenAPI::toJsonValue(m_variable_reference));
    }
    return obj;
}

QString OAIOrderDetails::getComment1() const {
    return m_comment1;
}
void OAIOrderDetails::setComment1(const QString &comment1) {
    m_comment1 = comment1;
    m_comment1_isSet = true;
}

bool OAIOrderDetails::is_comment1_Set() const{
    return m_comment1_isSet;
}

bool OAIOrderDetails::is_comment1_Valid() const{
    return m_comment1_isValid;
}

QString OAIOrderDetails::getComment2() const {
    return m_comment2;
}
void OAIOrderDetails::setComment2(const QString &comment2) {
    m_comment2 = comment2;
    m_comment2_isSet = true;
}

bool OAIOrderDetails::is_comment2_Set() const{
    return m_comment2_isSet;
}

bool OAIOrderDetails::is_comment2_Valid() const{
    return m_comment2_isValid;
}

QString OAIOrderDetails::getCustomerNumber() const {
    return m_customer_number;
}
void OAIOrderDetails::setCustomerNumber(const QString &customer_number) {
    m_customer_number = customer_number;
    m_customer_number_isSet = true;
}

bool OAIOrderDetails::is_customer_number_Set() const{
    return m_customer_number_isSet;
}

bool OAIOrderDetails::is_customer_number_Valid() const{
    return m_customer_number_isValid;
}

QString OAIOrderDetails::getDeliveryAddressLine1() const {
    return m_delivery_address_line1;
}
void OAIOrderDetails::setDeliveryAddressLine1(const QString &delivery_address_line1) {
    m_delivery_address_line1 = delivery_address_line1;
    m_delivery_address_line1_isSet = true;
}

bool OAIOrderDetails::is_delivery_address_line1_Set() const{
    return m_delivery_address_line1_isSet;
}

bool OAIOrderDetails::is_delivery_address_line1_Valid() const{
    return m_delivery_address_line1_isValid;
}

QString OAIOrderDetails::getDeliveryAddressLine2() const {
    return m_delivery_address_line2;
}
void OAIOrderDetails::setDeliveryAddressLine2(const QString &delivery_address_line2) {
    m_delivery_address_line2 = delivery_address_line2;
    m_delivery_address_line2_isSet = true;
}

bool OAIOrderDetails::is_delivery_address_line2_Set() const{
    return m_delivery_address_line2_isSet;
}

bool OAIOrderDetails::is_delivery_address_line2_Valid() const{
    return m_delivery_address_line2_isValid;
}

QString OAIOrderDetails::getDeliveryCity() const {
    return m_delivery_city;
}
void OAIOrderDetails::setDeliveryCity(const QString &delivery_city) {
    m_delivery_city = delivery_city;
    m_delivery_city_isSet = true;
}

bool OAIOrderDetails::is_delivery_city_Set() const{
    return m_delivery_city_isSet;
}

bool OAIOrderDetails::is_delivery_city_Valid() const{
    return m_delivery_city_isValid;
}

QString OAIOrderDetails::getDeliveryCountry() const {
    return m_delivery_country;
}
void OAIOrderDetails::setDeliveryCountry(const QString &delivery_country) {
    m_delivery_country = delivery_country;
    m_delivery_country_isSet = true;
}

bool OAIOrderDetails::is_delivery_country_Set() const{
    return m_delivery_country_isSet;
}

bool OAIOrderDetails::is_delivery_country_Valid() const{
    return m_delivery_country_isValid;
}

QString OAIOrderDetails::getDeliveryPostCode() const {
    return m_delivery_post_code;
}
void OAIOrderDetails::setDeliveryPostCode(const QString &delivery_post_code) {
    m_delivery_post_code = delivery_post_code;
    m_delivery_post_code_isSet = true;
}

bool OAIOrderDetails::is_delivery_post_code_Set() const{
    return m_delivery_post_code_isSet;
}

bool OAIOrderDetails::is_delivery_post_code_Valid() const{
    return m_delivery_post_code_isValid;
}

QString OAIOrderDetails::getMerchantCustomerIdentification() const {
    return m_merchant_customer_identification;
}
void OAIOrderDetails::setMerchantCustomerIdentification(const QString &merchant_customer_identification) {
    m_merchant_customer_identification = merchant_customer_identification;
    m_merchant_customer_identification_isSet = true;
}

bool OAIOrderDetails::is_merchant_customer_identification_Set() const{
    return m_merchant_customer_identification_isSet;
}

bool OAIOrderDetails::is_merchant_customer_identification_Valid() const{
    return m_merchant_customer_identification_isValid;
}

QString OAIOrderDetails::getMerchantNumber() const {
    return m_merchant_number;
}
void OAIOrderDetails::setMerchantNumber(const QString &merchant_number) {
    m_merchant_number = merchant_number;
    m_merchant_number_isSet = true;
}

bool OAIOrderDetails::is_merchant_number_Set() const{
    return m_merchant_number_isSet;
}

bool OAIOrderDetails::is_merchant_number_Valid() const{
    return m_merchant_number_isValid;
}

QString OAIOrderDetails::getOrderId() const {
    return m_order_id;
}
void OAIOrderDetails::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrderDetails::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrderDetails::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIOrderDetails::getProductId() const {
    return m_product_id;
}
void OAIOrderDetails::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIOrderDetails::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIOrderDetails::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAIOrderDetails::getVariableReference() const {
    return m_variable_reference;
}
void OAIOrderDetails::setVariableReference(const QString &variable_reference) {
    m_variable_reference = variable_reference;
    m_variable_reference_isSet = true;
}

bool OAIOrderDetails::is_variable_reference_Set() const{
    return m_variable_reference_isSet;
}

bool OAIOrderDetails::is_variable_reference_Valid() const{
    return m_variable_reference_isValid;
}

bool OAIOrderDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_post_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_customer_identification_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_variable_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
