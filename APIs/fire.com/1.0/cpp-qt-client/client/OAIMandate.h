/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMandate.h
 *
 * 
 */

#ifndef OAIMandate_H
#define OAIMandate_H

#include <QJsonObject>

#include "OAICurrency.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrency;

class OAIMandate : public OAIObject {
public:
    OAIMandate();
    OAIMandate(QString json);
    ~OAIMandate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QDateTime getDateCancelled() const;
    void setDateCancelled(const QDateTime &date_cancelled);
    bool is_date_cancelled_Set() const;
    bool is_date_cancelled_Valid() const;

    QDateTime getDateCompleted() const;
    void setDateCompleted(const QDateTime &date_completed);
    bool is_date_completed_Set() const;
    bool is_date_completed_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getFireRejectionReason() const;
    void setFireRejectionReason(const QString &fire_rejection_reason);
    bool is_fire_rejection_reason_Set() const;
    bool is_fire_rejection_reason_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    qint64 getLatestDirectDebitAmount() const;
    void setLatestDirectDebitAmount(const qint64 &latest_direct_debit_amount);
    bool is_latest_direct_debit_amount_Set() const;
    bool is_latest_direct_debit_amount_Valid() const;

    QDateTime getLatestDirectDebitDate() const;
    void setLatestDirectDebitDate(const QDateTime &latest_direct_debit_date);
    bool is_latest_direct_debit_date_Set() const;
    bool is_latest_direct_debit_date_Valid() const;

    QString getMandateReference() const;
    void setMandateReference(const QString &mandate_reference);
    bool is_mandate_reference_Set() const;
    bool is_mandate_reference_Valid() const;

    QString getMandateUuid() const;
    void setMandateUuid(const QString &mandate_uuid);
    bool is_mandate_uuid_Set() const;
    bool is_mandate_uuid_Valid() const;

    qint64 getNumberOfDirectDebitCollected() const;
    void setNumberOfDirectDebitCollected(const qint64 &number_of_direct_debit_collected);
    bool is_number_of_direct_debit_collected_Set() const;
    bool is_number_of_direct_debit_collected_Valid() const;

    QString getOriginatorAlias() const;
    void setOriginatorAlias(const QString &originator_alias);
    bool is_originator_alias_Set() const;
    bool is_originator_alias_Valid() const;

    QString getOriginatorLogoUrlLarge() const;
    void setOriginatorLogoUrlLarge(const QString &originator_logo_url_large);
    bool is_originator_logo_url_large_Set() const;
    bool is_originator_logo_url_large_Valid() const;

    QString getOriginatorLogoUrlSmall() const;
    void setOriginatorLogoUrlSmall(const QString &originator_logo_url_small);
    bool is_originator_logo_url_small_Set() const;
    bool is_originator_logo_url_small_Valid() const;

    QString getOriginatorName() const;
    void setOriginatorName(const QString &originator_name);
    bool is_originator_name_Set() const;
    bool is_originator_name_Valid() const;

    QString getOriginatorReference() const;
    void setOriginatorReference(const QString &originator_reference);
    bool is_originator_reference_Set() const;
    bool is_originator_reference_Valid() const;

    QString getSchemeCancelReason() const;
    void setSchemeCancelReason(const QString &scheme_cancel_reason);
    bool is_scheme_cancel_reason_Set() const;
    bool is_scheme_cancel_reason_Valid() const;

    QString getSchemeCancelReasonCode() const;
    void setSchemeCancelReasonCode(const QString &scheme_cancel_reason_code);
    bool is_scheme_cancel_reason_code_Set() const;
    bool is_scheme_cancel_reason_code_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint64 getTargetIcan() const;
    void setTargetIcan(const qint64 &target_ican);
    bool is_target_ican_Set() const;
    bool is_target_ican_Valid() const;

    qint64 getValueOfDirectDebitCollected() const;
    void setValueOfDirectDebitCollected(const qint64 &value_of_direct_debit_collected);
    bool is_value_of_direct_debit_collected_Set() const;
    bool is_value_of_direct_debit_collected_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QDateTime m_date_cancelled;
    bool m_date_cancelled_isSet;
    bool m_date_cancelled_isValid;

    QDateTime m_date_completed;
    bool m_date_completed_isSet;
    bool m_date_completed_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_fire_rejection_reason;
    bool m_fire_rejection_reason_isSet;
    bool m_fire_rejection_reason_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    qint64 m_latest_direct_debit_amount;
    bool m_latest_direct_debit_amount_isSet;
    bool m_latest_direct_debit_amount_isValid;

    QDateTime m_latest_direct_debit_date;
    bool m_latest_direct_debit_date_isSet;
    bool m_latest_direct_debit_date_isValid;

    QString m_mandate_reference;
    bool m_mandate_reference_isSet;
    bool m_mandate_reference_isValid;

    QString m_mandate_uuid;
    bool m_mandate_uuid_isSet;
    bool m_mandate_uuid_isValid;

    qint64 m_number_of_direct_debit_collected;
    bool m_number_of_direct_debit_collected_isSet;
    bool m_number_of_direct_debit_collected_isValid;

    QString m_originator_alias;
    bool m_originator_alias_isSet;
    bool m_originator_alias_isValid;

    QString m_originator_logo_url_large;
    bool m_originator_logo_url_large_isSet;
    bool m_originator_logo_url_large_isValid;

    QString m_originator_logo_url_small;
    bool m_originator_logo_url_small_isSet;
    bool m_originator_logo_url_small_isValid;

    QString m_originator_name;
    bool m_originator_name_isSet;
    bool m_originator_name_isValid;

    QString m_originator_reference;
    bool m_originator_reference_isSet;
    bool m_originator_reference_isValid;

    QString m_scheme_cancel_reason;
    bool m_scheme_cancel_reason_isSet;
    bool m_scheme_cancel_reason_isValid;

    QString m_scheme_cancel_reason_code;
    bool m_scheme_cancel_reason_code_isSet;
    bool m_scheme_cancel_reason_code_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint64 m_target_ican;
    bool m_target_ican_isSet;
    bool m_target_ican_isValid;

    qint64 m_value_of_direct_debit_collected;
    bool m_value_of_direct_debit_collected_isSet;
    bool m_value_of_direct_debit_collected_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMandate)

#endif // OAIMandate_H
