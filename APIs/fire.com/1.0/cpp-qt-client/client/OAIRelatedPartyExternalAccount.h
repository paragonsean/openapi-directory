/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRelatedPartyExternalAccount.h
 *
 * 
 */

#ifndef OAIRelatedPartyExternalAccount_H
#define OAIRelatedPartyExternalAccount_H

#include <QJsonObject>

#include "OAIRelatedPartyExternalAccount_account.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRelatedPartyExternalAccount_account;

class OAIRelatedPartyExternalAccount : public OAIObject {
public:
    OAIRelatedPartyExternalAccount();
    OAIRelatedPartyExternalAccount(QString json);
    ~OAIRelatedPartyExternalAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRelatedPartyExternalAccount_account getAccount() const;
    void setAccount(const OAIRelatedPartyExternalAccount_account &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRelatedPartyExternalAccount_account m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRelatedPartyExternalAccount)

#endif // OAIRelatedPartyExternalAccount_H
