/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessToken.h
 *
 * 
 */

#ifndef OAIAccessToken_H
#define OAIAccessToken_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccessToken : public OAIObject {
public:
    OAIAccessToken();
    OAIAccessToken(QString json);
    ~OAIAccessToken() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessToken() const;
    void setAccessToken(const QString &access_token);
    bool is_access_token_Set() const;
    bool is_access_token_Valid() const;

    qint64 getApiApplicationId() const;
    void setApiApplicationId(const qint64 &api_application_id);
    bool is_api_application_id_Set() const;
    bool is_api_application_id_Valid() const;

    qint64 getBusinessId() const;
    void setBusinessId(const qint64 &business_id);
    bool is_business_id_Set() const;
    bool is_business_id_Valid() const;

    QDateTime getExpiry() const;
    void setExpiry(const QDateTime &expiry);
    bool is_expiry_Set() const;
    bool is_expiry_Valid() const;

    QList<QString> getPermissions() const;
    void setPermissions(const QList<QString> &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_token;
    bool m_access_token_isSet;
    bool m_access_token_isValid;

    qint64 m_api_application_id;
    bool m_api_application_id_isSet;
    bool m_api_application_id_isValid;

    qint64 m_business_id;
    bool m_business_id_isSet;
    bool m_business_id_isValid;

    QDateTime m_expiry;
    bool m_expiry_isSet;
    bool m_expiry_isValid;

    QList<QString> m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessToken)

#endif // OAIAccessToken_H
