/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayee.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayee::OAIPayee(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayee::OAIPayee() {
    this->initializeModel();
}

OAIPayee::~OAIPayee() {}

void OAIPayee::initializeModel() {

    m_account_holder_name_isSet = false;
    m_account_holder_name_isValid = false;

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_bic_isSet = false;
    m_bic_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_iban_isSet = false;
    m_iban_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_nsc_isSet = false;
    m_nsc_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIPayee::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayee::fromJsonObject(QJsonObject json) {

    m_account_holder_name_isValid = ::OpenAPI::fromJsonValue(m_account_holder_name, json[QString("accountHolderName")]);
    m_account_holder_name_isSet = !json[QString("accountHolderName")].isNull() && m_account_holder_name_isValid;

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("accountNumber")]);
    m_account_number_isSet = !json[QString("accountNumber")].isNull() && m_account_number_isValid;

    m_bic_isValid = ::OpenAPI::fromJsonValue(m_bic, json[QString("bic")]);
    m_bic_isSet = !json[QString("bic")].isNull() && m_bic_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("createdBy")]);
    m_created_by_isSet = !json[QString("createdBy")].isNull() && m_created_by_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("dateCreated")]);
    m_date_created_isSet = !json[QString("dateCreated")].isNull() && m_date_created_isValid;

    m_iban_isValid = ::OpenAPI::fromJsonValue(m_iban, json[QString("iban")]);
    m_iban_isSet = !json[QString("iban")].isNull() && m_iban_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_nsc_isValid = ::OpenAPI::fromJsonValue(m_nsc, json[QString("nsc")]);
    m_nsc_isSet = !json[QString("nsc")].isNull() && m_nsc_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIPayee::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayee::asJsonObject() const {
    QJsonObject obj;
    if (m_account_holder_name_isSet) {
        obj.insert(QString("accountHolderName"), ::OpenAPI::toJsonValue(m_account_holder_name));
    }
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_account_number_isSet) {
        obj.insert(QString("accountNumber"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_bic_isSet) {
        obj.insert(QString("bic"), ::OpenAPI::toJsonValue(m_bic));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("createdBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_currency.isSet()) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("dateCreated"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_iban_isSet) {
        obj.insert(QString("iban"), ::OpenAPI::toJsonValue(m_iban));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_nsc_isSet) {
        obj.insert(QString("nsc"), ::OpenAPI::toJsonValue(m_nsc));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIPayee::getAccountHolderName() const {
    return m_account_holder_name;
}
void OAIPayee::setAccountHolderName(const QString &account_holder_name) {
    m_account_holder_name = account_holder_name;
    m_account_holder_name_isSet = true;
}

bool OAIPayee::is_account_holder_name_Set() const{
    return m_account_holder_name_isSet;
}

bool OAIPayee::is_account_holder_name_Valid() const{
    return m_account_holder_name_isValid;
}

QString OAIPayee::getAccountName() const {
    return m_account_name;
}
void OAIPayee::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIPayee::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIPayee::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIPayee::getAccountNumber() const {
    return m_account_number;
}
void OAIPayee::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIPayee::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIPayee::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAIPayee::getBic() const {
    return m_bic;
}
void OAIPayee::setBic(const QString &bic) {
    m_bic = bic;
    m_bic_isSet = true;
}

bool OAIPayee::is_bic_Set() const{
    return m_bic_isSet;
}

bool OAIPayee::is_bic_Valid() const{
    return m_bic_isValid;
}

QString OAIPayee::getCreatedBy() const {
    return m_created_by;
}
void OAIPayee::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIPayee::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIPayee::is_created_by_Valid() const{
    return m_created_by_isValid;
}

OAICurrency OAIPayee::getCurrency() const {
    return m_currency;
}
void OAIPayee::setCurrency(const OAICurrency &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIPayee::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIPayee::is_currency_Valid() const{
    return m_currency_isValid;
}

QDateTime OAIPayee::getDateCreated() const {
    return m_date_created;
}
void OAIPayee::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIPayee::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIPayee::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIPayee::getIban() const {
    return m_iban;
}
void OAIPayee::setIban(const QString &iban) {
    m_iban = iban;
    m_iban_isSet = true;
}

bool OAIPayee::is_iban_Set() const{
    return m_iban_isSet;
}

bool OAIPayee::is_iban_Valid() const{
    return m_iban_isValid;
}

qint64 OAIPayee::getId() const {
    return m_id;
}
void OAIPayee::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPayee::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPayee::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIPayee::getNsc() const {
    return m_nsc;
}
void OAIPayee::setNsc(const QString &nsc) {
    m_nsc = nsc;
    m_nsc_isSet = true;
}

bool OAIPayee::is_nsc_Set() const{
    return m_nsc_isSet;
}

bool OAIPayee::is_nsc_Valid() const{
    return m_nsc_isValid;
}

QString OAIPayee::getStatus() const {
    return m_status;
}
void OAIPayee::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIPayee::is_status_Set() const{
    return m_status_isSet;
}

bool OAIPayee::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIPayee::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_holder_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bic_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iban_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nsc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayee::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
