/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccount.h
 *
 * 
 */

#ifndef OAIAccount_H
#define OAIAccount_H

#include <QJsonObject>

#include "OAICurrency.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICurrency;

class OAIAccount : public OAIObject {
public:
    OAIAccount();
    OAIAccount(QString json);
    ~OAIAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBalance() const;
    void setBalance(const qint64 &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    QString getCbic() const;
    void setCbic(const QString &cbic);
    bool is_cbic_Set() const;
    bool is_cbic_Valid() const;

    QString getCcan() const;
    void setCcan(const QString &ccan);
    bool is_ccan_Set() const;
    bool is_ccan_Valid() const;

    QString getCiban() const;
    void setCiban(const QString &ciban);
    bool is_ciban_Set() const;
    bool is_ciban_Valid() const;

    QString getCnsc() const;
    void setCnsc(const QString &cnsc);
    bool is_cnsc_Set() const;
    bool is_cnsc_Valid() const;

    Q_DECL_DEPRECATED QString getColour() const;
    Q_DECL_DEPRECATED void setColour(const QString &colour);
    Q_DECL_DEPRECATED bool is_colour_Set() const;
    Q_DECL_DEPRECATED bool is_colour_Valid() const;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    bool isDefaultAccount() const;
    void setDefaultAccount(const bool &default_account);
    bool is_default_account_Set() const;
    bool is_default_account_Valid() const;

    bool isDirectDebitsAllowed() const;
    void setDirectDebitsAllowed(const bool &direct_debits_allowed);
    bool is_direct_debits_allowed_Set() const;
    bool is_direct_debits_allowed_Valid() const;

    bool isFopOnly() const;
    void setFopOnly(const bool &fop_only);
    bool is_fop_only_Set() const;
    bool is_fop_only_Valid() const;

    qint64 getIcan() const;
    void setIcan(const qint64 &ican);
    bool is_ican_Set() const;
    bool is_ican_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    QString m_cbic;
    bool m_cbic_isSet;
    bool m_cbic_isValid;

    QString m_ccan;
    bool m_ccan_isSet;
    bool m_ccan_isValid;

    QString m_ciban;
    bool m_ciban_isSet;
    bool m_ciban_isValid;

    QString m_cnsc;
    bool m_cnsc_isSet;
    bool m_cnsc_isValid;

    QString m_colour;
    bool m_colour_isSet;
    bool m_colour_isValid;

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    bool m_default_account;
    bool m_default_account_isSet;
    bool m_default_account_isValid;

    bool m_direct_debits_allowed;
    bool m_direct_debits_allowed_isSet;
    bool m_direct_debits_allowed_isValid;

    bool m_fop_only;
    bool m_fop_only_isSet;
    bool m_fop_only_isValid;

    qint64 m_ican;
    bool m_ican_isSet;
    bool m_ican_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccount)

#endif // OAIAccount_H
