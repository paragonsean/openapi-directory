/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectDebitDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectDebitDetails::OAIDirectDebitDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectDebitDetails::OAIDirectDebitDetails() {
    this->initializeModel();
}

OAIDirectDebitDetails::~OAIDirectDebitDetails() {}

void OAIDirectDebitDetails::initializeModel() {

    m_direct_debit_reference_isSet = false;
    m_direct_debit_reference_isValid = false;

    m_direct_debit_uuid_isSet = false;
    m_direct_debit_uuid_isValid = false;

    m_mandate_reference_isSet = false;
    m_mandate_reference_isValid = false;

    m_mandate_u_uid_isSet = false;
    m_mandate_u_uid_isValid = false;

    m_mandate_uuid_isSet = false;
    m_mandate_uuid_isValid = false;

    m_originator_alias_isSet = false;
    m_originator_alias_isValid = false;

    m_originator_logo_url_large_isSet = false;
    m_originator_logo_url_large_isValid = false;

    m_originator_logo_url_small_isSet = false;
    m_originator_logo_url_small_isValid = false;

    m_originator_name_isSet = false;
    m_originator_name_isValid = false;

    m_originator_reference_isSet = false;
    m_originator_reference_isValid = false;
}

void OAIDirectDebitDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectDebitDetails::fromJsonObject(QJsonObject json) {

    m_direct_debit_reference_isValid = ::OpenAPI::fromJsonValue(m_direct_debit_reference, json[QString("directDebitReference")]);
    m_direct_debit_reference_isSet = !json[QString("directDebitReference")].isNull() && m_direct_debit_reference_isValid;

    m_direct_debit_uuid_isValid = ::OpenAPI::fromJsonValue(m_direct_debit_uuid, json[QString("directDebitUuid")]);
    m_direct_debit_uuid_isSet = !json[QString("directDebitUuid")].isNull() && m_direct_debit_uuid_isValid;

    m_mandate_reference_isValid = ::OpenAPI::fromJsonValue(m_mandate_reference, json[QString("mandateReference")]);
    m_mandate_reference_isSet = !json[QString("mandateReference")].isNull() && m_mandate_reference_isValid;

    m_mandate_u_uid_isValid = ::OpenAPI::fromJsonValue(m_mandate_u_uid, json[QString("mandateUUid")]);
    m_mandate_u_uid_isSet = !json[QString("mandateUUid")].isNull() && m_mandate_u_uid_isValid;

    m_mandate_uuid_isValid = ::OpenAPI::fromJsonValue(m_mandate_uuid, json[QString("mandateUuid")]);
    m_mandate_uuid_isSet = !json[QString("mandateUuid")].isNull() && m_mandate_uuid_isValid;

    m_originator_alias_isValid = ::OpenAPI::fromJsonValue(m_originator_alias, json[QString("originatorAlias")]);
    m_originator_alias_isSet = !json[QString("originatorAlias")].isNull() && m_originator_alias_isValid;

    m_originator_logo_url_large_isValid = ::OpenAPI::fromJsonValue(m_originator_logo_url_large, json[QString("originatorLogoUrlLarge")]);
    m_originator_logo_url_large_isSet = !json[QString("originatorLogoUrlLarge")].isNull() && m_originator_logo_url_large_isValid;

    m_originator_logo_url_small_isValid = ::OpenAPI::fromJsonValue(m_originator_logo_url_small, json[QString("originatorLogoUrlSmall")]);
    m_originator_logo_url_small_isSet = !json[QString("originatorLogoUrlSmall")].isNull() && m_originator_logo_url_small_isValid;

    m_originator_name_isValid = ::OpenAPI::fromJsonValue(m_originator_name, json[QString("originatorName")]);
    m_originator_name_isSet = !json[QString("originatorName")].isNull() && m_originator_name_isValid;

    m_originator_reference_isValid = ::OpenAPI::fromJsonValue(m_originator_reference, json[QString("originatorReference")]);
    m_originator_reference_isSet = !json[QString("originatorReference")].isNull() && m_originator_reference_isValid;
}

QString OAIDirectDebitDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectDebitDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_direct_debit_reference_isSet) {
        obj.insert(QString("directDebitReference"), ::OpenAPI::toJsonValue(m_direct_debit_reference));
    }
    if (m_direct_debit_uuid_isSet) {
        obj.insert(QString("directDebitUuid"), ::OpenAPI::toJsonValue(m_direct_debit_uuid));
    }
    if (m_mandate_reference_isSet) {
        obj.insert(QString("mandateReference"), ::OpenAPI::toJsonValue(m_mandate_reference));
    }
    if (m_mandate_u_uid_isSet) {
        obj.insert(QString("mandateUUid"), ::OpenAPI::toJsonValue(m_mandate_u_uid));
    }
    if (m_mandate_uuid_isSet) {
        obj.insert(QString("mandateUuid"), ::OpenAPI::toJsonValue(m_mandate_uuid));
    }
    if (m_originator_alias_isSet) {
        obj.insert(QString("originatorAlias"), ::OpenAPI::toJsonValue(m_originator_alias));
    }
    if (m_originator_logo_url_large_isSet) {
        obj.insert(QString("originatorLogoUrlLarge"), ::OpenAPI::toJsonValue(m_originator_logo_url_large));
    }
    if (m_originator_logo_url_small_isSet) {
        obj.insert(QString("originatorLogoUrlSmall"), ::OpenAPI::toJsonValue(m_originator_logo_url_small));
    }
    if (m_originator_name_isSet) {
        obj.insert(QString("originatorName"), ::OpenAPI::toJsonValue(m_originator_name));
    }
    if (m_originator_reference_isSet) {
        obj.insert(QString("originatorReference"), ::OpenAPI::toJsonValue(m_originator_reference));
    }
    return obj;
}

QString OAIDirectDebitDetails::getDirectDebitReference() const {
    return m_direct_debit_reference;
}
void OAIDirectDebitDetails::setDirectDebitReference(const QString &direct_debit_reference) {
    m_direct_debit_reference = direct_debit_reference;
    m_direct_debit_reference_isSet = true;
}

bool OAIDirectDebitDetails::is_direct_debit_reference_Set() const{
    return m_direct_debit_reference_isSet;
}

bool OAIDirectDebitDetails::is_direct_debit_reference_Valid() const{
    return m_direct_debit_reference_isValid;
}

QString OAIDirectDebitDetails::getDirectDebitUuid() const {
    return m_direct_debit_uuid;
}
void OAIDirectDebitDetails::setDirectDebitUuid(const QString &direct_debit_uuid) {
    m_direct_debit_uuid = direct_debit_uuid;
    m_direct_debit_uuid_isSet = true;
}

bool OAIDirectDebitDetails::is_direct_debit_uuid_Set() const{
    return m_direct_debit_uuid_isSet;
}

bool OAIDirectDebitDetails::is_direct_debit_uuid_Valid() const{
    return m_direct_debit_uuid_isValid;
}

QString OAIDirectDebitDetails::getMandateReference() const {
    return m_mandate_reference;
}
void OAIDirectDebitDetails::setMandateReference(const QString &mandate_reference) {
    m_mandate_reference = mandate_reference;
    m_mandate_reference_isSet = true;
}

bool OAIDirectDebitDetails::is_mandate_reference_Set() const{
    return m_mandate_reference_isSet;
}

bool OAIDirectDebitDetails::is_mandate_reference_Valid() const{
    return m_mandate_reference_isValid;
}

QString OAIDirectDebitDetails::getMandateUUid() const {
    return m_mandate_u_uid;
}
void OAIDirectDebitDetails::setMandateUUid(const QString &mandate_u_uid) {
    m_mandate_u_uid = mandate_u_uid;
    m_mandate_u_uid_isSet = true;
}

bool OAIDirectDebitDetails::is_mandate_u_uid_Set() const{
    return m_mandate_u_uid_isSet;
}

bool OAIDirectDebitDetails::is_mandate_u_uid_Valid() const{
    return m_mandate_u_uid_isValid;
}

QString OAIDirectDebitDetails::getMandateUuid() const {
    return m_mandate_uuid;
}
void OAIDirectDebitDetails::setMandateUuid(const QString &mandate_uuid) {
    m_mandate_uuid = mandate_uuid;
    m_mandate_uuid_isSet = true;
}

bool OAIDirectDebitDetails::is_mandate_uuid_Set() const{
    return m_mandate_uuid_isSet;
}

bool OAIDirectDebitDetails::is_mandate_uuid_Valid() const{
    return m_mandate_uuid_isValid;
}

QString OAIDirectDebitDetails::getOriginatorAlias() const {
    return m_originator_alias;
}
void OAIDirectDebitDetails::setOriginatorAlias(const QString &originator_alias) {
    m_originator_alias = originator_alias;
    m_originator_alias_isSet = true;
}

bool OAIDirectDebitDetails::is_originator_alias_Set() const{
    return m_originator_alias_isSet;
}

bool OAIDirectDebitDetails::is_originator_alias_Valid() const{
    return m_originator_alias_isValid;
}

QString OAIDirectDebitDetails::getOriginatorLogoUrlLarge() const {
    return m_originator_logo_url_large;
}
void OAIDirectDebitDetails::setOriginatorLogoUrlLarge(const QString &originator_logo_url_large) {
    m_originator_logo_url_large = originator_logo_url_large;
    m_originator_logo_url_large_isSet = true;
}

bool OAIDirectDebitDetails::is_originator_logo_url_large_Set() const{
    return m_originator_logo_url_large_isSet;
}

bool OAIDirectDebitDetails::is_originator_logo_url_large_Valid() const{
    return m_originator_logo_url_large_isValid;
}

QString OAIDirectDebitDetails::getOriginatorLogoUrlSmall() const {
    return m_originator_logo_url_small;
}
void OAIDirectDebitDetails::setOriginatorLogoUrlSmall(const QString &originator_logo_url_small) {
    m_originator_logo_url_small = originator_logo_url_small;
    m_originator_logo_url_small_isSet = true;
}

bool OAIDirectDebitDetails::is_originator_logo_url_small_Set() const{
    return m_originator_logo_url_small_isSet;
}

bool OAIDirectDebitDetails::is_originator_logo_url_small_Valid() const{
    return m_originator_logo_url_small_isValid;
}

QString OAIDirectDebitDetails::getOriginatorName() const {
    return m_originator_name;
}
void OAIDirectDebitDetails::setOriginatorName(const QString &originator_name) {
    m_originator_name = originator_name;
    m_originator_name_isSet = true;
}

bool OAIDirectDebitDetails::is_originator_name_Set() const{
    return m_originator_name_isSet;
}

bool OAIDirectDebitDetails::is_originator_name_Valid() const{
    return m_originator_name_isValid;
}

QString OAIDirectDebitDetails::getOriginatorReference() const {
    return m_originator_reference;
}
void OAIDirectDebitDetails::setOriginatorReference(const QString &originator_reference) {
    m_originator_reference = originator_reference;
    m_originator_reference_isSet = true;
}

bool OAIDirectDebitDetails::is_originator_reference_Set() const{
    return m_originator_reference_isSet;
}

bool OAIDirectDebitDetails::is_originator_reference_Valid() const{
    return m_originator_reference_isValid;
}

bool OAIDirectDebitDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_direct_debit_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direct_debit_uuid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mandate_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mandate_u_uid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mandate_uuid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_alias_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_logo_url_large_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_logo_url_small_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectDebitDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
