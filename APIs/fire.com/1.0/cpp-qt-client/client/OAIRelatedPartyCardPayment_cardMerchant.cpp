/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRelatedPartyCardPayment_cardMerchant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRelatedPartyCardPayment_cardMerchant::OAIRelatedPartyCardPayment_cardMerchant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRelatedPartyCardPayment_cardMerchant::OAIRelatedPartyCardPayment_cardMerchant() {
    this->initializeModel();
}

OAIRelatedPartyCardPayment_cardMerchant::~OAIRelatedPartyCardPayment_cardMerchant() {}

void OAIRelatedPartyCardPayment_cardMerchant::initializeModel() {

    m_acquirer_id_de32_isSet = false;
    m_acquirer_id_de32_isValid = false;

    m_additional_amt_de54_isSet = false;
    m_additional_amt_de54_isValid = false;

    m_additional_data_de124_isSet = false;
    m_additional_data_de124_isValid = false;

    m_additional_data_de48_isSet = false;
    m_additional_data_de48_isValid = false;

    m_auth_code_de38_isSet = false;
    m_auth_code_de38_isValid = false;

    m_authorised_by_gps_isSet = false;
    m_authorised_by_gps_isValid = false;

    m_avs_result_isSet = false;
    m_avs_result_isValid = false;

    m_bill_amt_isSet = false;
    m_bill_amt_isValid = false;

    m_bill_ccy_isSet = false;
    m_bill_ccy_isValid = false;

    m_expiry_date_isSet = false;
    m_expiry_date_isValid = false;

    m_mcc_code_isSet = false;
    m_mcc_code_isValid = false;

    m_merch_id_de42_isSet = false;
    m_merch_id_de42_isValid = false;

    m_merch_name_de43_isSet = false;
    m_merch_name_de43_isValid = false;

    m_mt_id_isSet = false;
    m_mt_id_isValid = false;

    m_pos_data_de22_isSet = false;
    m_pos_data_de22_isValid = false;

    m_pos_data_de61_isSet = false;
    m_pos_data_de61_isValid = false;

    m_pos_termnl_de41_isSet = false;
    m_pos_termnl_de41_isValid = false;

    m_proc_code_isSet = false;
    m_proc_code_isValid = false;

    m_record_data_de120_isSet = false;
    m_record_data_de120_isValid = false;

    m_resp_code_de39_isSet = false;
    m_resp_code_de39_isValid = false;

    m_ret_ref_no_de37_isSet = false;
    m_ret_ref_no_de37_isValid = false;

    m_status_code_isSet = false;
    m_status_code_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;

    m_txn_amt4d_isSet = false;
    m_txn_amt4d_isValid = false;

    m_txn_ccy_isSet = false;
    m_txn_ccy_isValid = false;

    m_txn_ctry_isSet = false;
    m_txn_ctry_isValid = false;

    m_txn_desc_isSet = false;
    m_txn_desc_isValid = false;

    m_txn_stat_code_isSet = false;
    m_txn_stat_code_isValid = false;

    m_txn_type_isSet = false;
    m_txn_type_isValid = false;
}

void OAIRelatedPartyCardPayment_cardMerchant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRelatedPartyCardPayment_cardMerchant::fromJsonObject(QJsonObject json) {

    m_acquirer_id_de32_isValid = ::OpenAPI::fromJsonValue(m_acquirer_id_de32, json[QString("acquirerIdDe32")]);
    m_acquirer_id_de32_isSet = !json[QString("acquirerIdDe32")].isNull() && m_acquirer_id_de32_isValid;

    m_additional_amt_de54_isValid = ::OpenAPI::fromJsonValue(m_additional_amt_de54, json[QString("additionalAmtDe54")]);
    m_additional_amt_de54_isSet = !json[QString("additionalAmtDe54")].isNull() && m_additional_amt_de54_isValid;

    m_additional_data_de124_isValid = ::OpenAPI::fromJsonValue(m_additional_data_de124, json[QString("additionalDataDe124")]);
    m_additional_data_de124_isSet = !json[QString("additionalDataDe124")].isNull() && m_additional_data_de124_isValid;

    m_additional_data_de48_isValid = ::OpenAPI::fromJsonValue(m_additional_data_de48, json[QString("additionalDataDe48")]);
    m_additional_data_de48_isSet = !json[QString("additionalDataDe48")].isNull() && m_additional_data_de48_isValid;

    m_auth_code_de38_isValid = ::OpenAPI::fromJsonValue(m_auth_code_de38, json[QString("authCodeDe38")]);
    m_auth_code_de38_isSet = !json[QString("authCodeDe38")].isNull() && m_auth_code_de38_isValid;

    m_authorised_by_gps_isValid = ::OpenAPI::fromJsonValue(m_authorised_by_gps, json[QString("authorisedByGps")]);
    m_authorised_by_gps_isSet = !json[QString("authorisedByGps")].isNull() && m_authorised_by_gps_isValid;

    m_avs_result_isValid = ::OpenAPI::fromJsonValue(m_avs_result, json[QString("avsResult")]);
    m_avs_result_isSet = !json[QString("avsResult")].isNull() && m_avs_result_isValid;

    m_bill_amt_isValid = ::OpenAPI::fromJsonValue(m_bill_amt, json[QString("billAmt")]);
    m_bill_amt_isSet = !json[QString("billAmt")].isNull() && m_bill_amt_isValid;

    m_bill_ccy_isValid = ::OpenAPI::fromJsonValue(m_bill_ccy, json[QString("billCcy")]);
    m_bill_ccy_isSet = !json[QString("billCcy")].isNull() && m_bill_ccy_isValid;

    m_expiry_date_isValid = ::OpenAPI::fromJsonValue(m_expiry_date, json[QString("expiryDate")]);
    m_expiry_date_isSet = !json[QString("expiryDate")].isNull() && m_expiry_date_isValid;

    m_mcc_code_isValid = ::OpenAPI::fromJsonValue(m_mcc_code, json[QString("mccCode")]);
    m_mcc_code_isSet = !json[QString("mccCode")].isNull() && m_mcc_code_isValid;

    m_merch_id_de42_isValid = ::OpenAPI::fromJsonValue(m_merch_id_de42, json[QString("merchIdDe42")]);
    m_merch_id_de42_isSet = !json[QString("merchIdDe42")].isNull() && m_merch_id_de42_isValid;

    m_merch_name_de43_isValid = ::OpenAPI::fromJsonValue(m_merch_name_de43, json[QString("merchNameDe43")]);
    m_merch_name_de43_isSet = !json[QString("merchNameDe43")].isNull() && m_merch_name_de43_isValid;

    m_mt_id_isValid = ::OpenAPI::fromJsonValue(m_mt_id, json[QString("mtId")]);
    m_mt_id_isSet = !json[QString("mtId")].isNull() && m_mt_id_isValid;

    m_pos_data_de22_isValid = ::OpenAPI::fromJsonValue(m_pos_data_de22, json[QString("posDataDe22")]);
    m_pos_data_de22_isSet = !json[QString("posDataDe22")].isNull() && m_pos_data_de22_isValid;

    m_pos_data_de61_isValid = ::OpenAPI::fromJsonValue(m_pos_data_de61, json[QString("posDataDe61")]);
    m_pos_data_de61_isSet = !json[QString("posDataDe61")].isNull() && m_pos_data_de61_isValid;

    m_pos_termnl_de41_isValid = ::OpenAPI::fromJsonValue(m_pos_termnl_de41, json[QString("posTermnlDe41")]);
    m_pos_termnl_de41_isSet = !json[QString("posTermnlDe41")].isNull() && m_pos_termnl_de41_isValid;

    m_proc_code_isValid = ::OpenAPI::fromJsonValue(m_proc_code, json[QString("procCode")]);
    m_proc_code_isSet = !json[QString("procCode")].isNull() && m_proc_code_isValid;

    m_record_data_de120_isValid = ::OpenAPI::fromJsonValue(m_record_data_de120, json[QString("recordDataDe120")]);
    m_record_data_de120_isSet = !json[QString("recordDataDe120")].isNull() && m_record_data_de120_isValid;

    m_resp_code_de39_isValid = ::OpenAPI::fromJsonValue(m_resp_code_de39, json[QString("respCodeDe39")]);
    m_resp_code_de39_isSet = !json[QString("respCodeDe39")].isNull() && m_resp_code_de39_isValid;

    m_ret_ref_no_de37_isValid = ::OpenAPI::fromJsonValue(m_ret_ref_no_de37, json[QString("retRefNoDe37")]);
    m_ret_ref_no_de37_isSet = !json[QString("retRefNoDe37")].isNull() && m_ret_ref_no_de37_isValid;

    m_status_code_isValid = ::OpenAPI::fromJsonValue(m_status_code, json[QString("statusCode")]);
    m_status_code_isSet = !json[QString("statusCode")].isNull() && m_status_code_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;

    m_txn_amt4d_isValid = ::OpenAPI::fromJsonValue(m_txn_amt4d, json[QString("txnAmt4d")]);
    m_txn_amt4d_isSet = !json[QString("txnAmt4d")].isNull() && m_txn_amt4d_isValid;

    m_txn_ccy_isValid = ::OpenAPI::fromJsonValue(m_txn_ccy, json[QString("txnCcy")]);
    m_txn_ccy_isSet = !json[QString("txnCcy")].isNull() && m_txn_ccy_isValid;

    m_txn_ctry_isValid = ::OpenAPI::fromJsonValue(m_txn_ctry, json[QString("txnCtry")]);
    m_txn_ctry_isSet = !json[QString("txnCtry")].isNull() && m_txn_ctry_isValid;

    m_txn_desc_isValid = ::OpenAPI::fromJsonValue(m_txn_desc, json[QString("txnDesc")]);
    m_txn_desc_isSet = !json[QString("txnDesc")].isNull() && m_txn_desc_isValid;

    m_txn_stat_code_isValid = ::OpenAPI::fromJsonValue(m_txn_stat_code, json[QString("txnStatCode")]);
    m_txn_stat_code_isSet = !json[QString("txnStatCode")].isNull() && m_txn_stat_code_isValid;

    m_txn_type_isValid = ::OpenAPI::fromJsonValue(m_txn_type, json[QString("txnType")]);
    m_txn_type_isSet = !json[QString("txnType")].isNull() && m_txn_type_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRelatedPartyCardPayment_cardMerchant::asJsonObject() const {
    QJsonObject obj;
    if (m_acquirer_id_de32_isSet) {
        obj.insert(QString("acquirerIdDe32"), ::OpenAPI::toJsonValue(m_acquirer_id_de32));
    }
    if (m_additional_amt_de54_isSet) {
        obj.insert(QString("additionalAmtDe54"), ::OpenAPI::toJsonValue(m_additional_amt_de54));
    }
    if (m_additional_data_de124_isSet) {
        obj.insert(QString("additionalDataDe124"), ::OpenAPI::toJsonValue(m_additional_data_de124));
    }
    if (m_additional_data_de48_isSet) {
        obj.insert(QString("additionalDataDe48"), ::OpenAPI::toJsonValue(m_additional_data_de48));
    }
    if (m_auth_code_de38_isSet) {
        obj.insert(QString("authCodeDe38"), ::OpenAPI::toJsonValue(m_auth_code_de38));
    }
    if (m_authorised_by_gps_isSet) {
        obj.insert(QString("authorisedByGps"), ::OpenAPI::toJsonValue(m_authorised_by_gps));
    }
    if (m_avs_result_isSet) {
        obj.insert(QString("avsResult"), ::OpenAPI::toJsonValue(m_avs_result));
    }
    if (m_bill_amt_isSet) {
        obj.insert(QString("billAmt"), ::OpenAPI::toJsonValue(m_bill_amt));
    }
    if (m_bill_ccy_isSet) {
        obj.insert(QString("billCcy"), ::OpenAPI::toJsonValue(m_bill_ccy));
    }
    if (m_expiry_date_isSet) {
        obj.insert(QString("expiryDate"), ::OpenAPI::toJsonValue(m_expiry_date));
    }
    if (m_mcc_code_isSet) {
        obj.insert(QString("mccCode"), ::OpenAPI::toJsonValue(m_mcc_code));
    }
    if (m_merch_id_de42_isSet) {
        obj.insert(QString("merchIdDe42"), ::OpenAPI::toJsonValue(m_merch_id_de42));
    }
    if (m_merch_name_de43_isSet) {
        obj.insert(QString("merchNameDe43"), ::OpenAPI::toJsonValue(m_merch_name_de43));
    }
    if (m_mt_id_isSet) {
        obj.insert(QString("mtId"), ::OpenAPI::toJsonValue(m_mt_id));
    }
    if (m_pos_data_de22_isSet) {
        obj.insert(QString("posDataDe22"), ::OpenAPI::toJsonValue(m_pos_data_de22));
    }
    if (m_pos_data_de61_isSet) {
        obj.insert(QString("posDataDe61"), ::OpenAPI::toJsonValue(m_pos_data_de61));
    }
    if (m_pos_termnl_de41_isSet) {
        obj.insert(QString("posTermnlDe41"), ::OpenAPI::toJsonValue(m_pos_termnl_de41));
    }
    if (m_proc_code_isSet) {
        obj.insert(QString("procCode"), ::OpenAPI::toJsonValue(m_proc_code));
    }
    if (m_record_data_de120_isSet) {
        obj.insert(QString("recordDataDe120"), ::OpenAPI::toJsonValue(m_record_data_de120));
    }
    if (m_resp_code_de39_isSet) {
        obj.insert(QString("respCodeDe39"), ::OpenAPI::toJsonValue(m_resp_code_de39));
    }
    if (m_ret_ref_no_de37_isSet) {
        obj.insert(QString("retRefNoDe37"), ::OpenAPI::toJsonValue(m_ret_ref_no_de37));
    }
    if (m_status_code_isSet) {
        obj.insert(QString("statusCode"), ::OpenAPI::toJsonValue(m_status_code));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    if (m_txn_amt4d_isSet) {
        obj.insert(QString("txnAmt4d"), ::OpenAPI::toJsonValue(m_txn_amt4d));
    }
    if (m_txn_ccy_isSet) {
        obj.insert(QString("txnCcy"), ::OpenAPI::toJsonValue(m_txn_ccy));
    }
    if (m_txn_ctry_isSet) {
        obj.insert(QString("txnCtry"), ::OpenAPI::toJsonValue(m_txn_ctry));
    }
    if (m_txn_desc_isSet) {
        obj.insert(QString("txnDesc"), ::OpenAPI::toJsonValue(m_txn_desc));
    }
    if (m_txn_stat_code_isSet) {
        obj.insert(QString("txnStatCode"), ::OpenAPI::toJsonValue(m_txn_stat_code));
    }
    if (m_txn_type_isSet) {
        obj.insert(QString("txnType"), ::OpenAPI::toJsonValue(m_txn_type));
    }
    return obj;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getAcquirerIdDe32() const {
    return m_acquirer_id_de32;
}
void OAIRelatedPartyCardPayment_cardMerchant::setAcquirerIdDe32(const QString &acquirer_id_de32) {
    m_acquirer_id_de32 = acquirer_id_de32;
    m_acquirer_id_de32_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_acquirer_id_de32_Set() const{
    return m_acquirer_id_de32_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_acquirer_id_de32_Valid() const{
    return m_acquirer_id_de32_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getAdditionalAmtDe54() const {
    return m_additional_amt_de54;
}
void OAIRelatedPartyCardPayment_cardMerchant::setAdditionalAmtDe54(const QString &additional_amt_de54) {
    m_additional_amt_de54 = additional_amt_de54;
    m_additional_amt_de54_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_additional_amt_de54_Set() const{
    return m_additional_amt_de54_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_additional_amt_de54_Valid() const{
    return m_additional_amt_de54_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getAdditionalDataDe124() const {
    return m_additional_data_de124;
}
void OAIRelatedPartyCardPayment_cardMerchant::setAdditionalDataDe124(const QString &additional_data_de124) {
    m_additional_data_de124 = additional_data_de124;
    m_additional_data_de124_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_additional_data_de124_Set() const{
    return m_additional_data_de124_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_additional_data_de124_Valid() const{
    return m_additional_data_de124_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getAdditionalDataDe48() const {
    return m_additional_data_de48;
}
void OAIRelatedPartyCardPayment_cardMerchant::setAdditionalDataDe48(const QString &additional_data_de48) {
    m_additional_data_de48 = additional_data_de48;
    m_additional_data_de48_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_additional_data_de48_Set() const{
    return m_additional_data_de48_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_additional_data_de48_Valid() const{
    return m_additional_data_de48_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getAuthCodeDe38() const {
    return m_auth_code_de38;
}
void OAIRelatedPartyCardPayment_cardMerchant::setAuthCodeDe38(const QString &auth_code_de38) {
    m_auth_code_de38 = auth_code_de38;
    m_auth_code_de38_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_auth_code_de38_Set() const{
    return m_auth_code_de38_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_auth_code_de38_Valid() const{
    return m_auth_code_de38_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getAuthorisedByGps() const {
    return m_authorised_by_gps;
}
void OAIRelatedPartyCardPayment_cardMerchant::setAuthorisedByGps(const QString &authorised_by_gps) {
    m_authorised_by_gps = authorised_by_gps;
    m_authorised_by_gps_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_authorised_by_gps_Set() const{
    return m_authorised_by_gps_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_authorised_by_gps_Valid() const{
    return m_authorised_by_gps_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getAvsResult() const {
    return m_avs_result;
}
void OAIRelatedPartyCardPayment_cardMerchant::setAvsResult(const QString &avs_result) {
    m_avs_result = avs_result;
    m_avs_result_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_avs_result_Set() const{
    return m_avs_result_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_avs_result_Valid() const{
    return m_avs_result_isValid;
}

qint64 OAIRelatedPartyCardPayment_cardMerchant::getBillAmt() const {
    return m_bill_amt;
}
void OAIRelatedPartyCardPayment_cardMerchant::setBillAmt(const qint64 &bill_amt) {
    m_bill_amt = bill_amt;
    m_bill_amt_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_bill_amt_Set() const{
    return m_bill_amt_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_bill_amt_Valid() const{
    return m_bill_amt_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getBillCcy() const {
    return m_bill_ccy;
}
void OAIRelatedPartyCardPayment_cardMerchant::setBillCcy(const QString &bill_ccy) {
    m_bill_ccy = bill_ccy;
    m_bill_ccy_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_bill_ccy_Set() const{
    return m_bill_ccy_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_bill_ccy_Valid() const{
    return m_bill_ccy_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getExpiryDate() const {
    return m_expiry_date;
}
void OAIRelatedPartyCardPayment_cardMerchant::setExpiryDate(const QString &expiry_date) {
    m_expiry_date = expiry_date;
    m_expiry_date_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_expiry_date_Set() const{
    return m_expiry_date_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_expiry_date_Valid() const{
    return m_expiry_date_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getMccCode() const {
    return m_mcc_code;
}
void OAIRelatedPartyCardPayment_cardMerchant::setMccCode(const QString &mcc_code) {
    m_mcc_code = mcc_code;
    m_mcc_code_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_mcc_code_Set() const{
    return m_mcc_code_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_mcc_code_Valid() const{
    return m_mcc_code_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getMerchIdDe42() const {
    return m_merch_id_de42;
}
void OAIRelatedPartyCardPayment_cardMerchant::setMerchIdDe42(const QString &merch_id_de42) {
    m_merch_id_de42 = merch_id_de42;
    m_merch_id_de42_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_merch_id_de42_Set() const{
    return m_merch_id_de42_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_merch_id_de42_Valid() const{
    return m_merch_id_de42_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getMerchNameDe43() const {
    return m_merch_name_de43;
}
void OAIRelatedPartyCardPayment_cardMerchant::setMerchNameDe43(const QString &merch_name_de43) {
    m_merch_name_de43 = merch_name_de43;
    m_merch_name_de43_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_merch_name_de43_Set() const{
    return m_merch_name_de43_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_merch_name_de43_Valid() const{
    return m_merch_name_de43_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getMtId() const {
    return m_mt_id;
}
void OAIRelatedPartyCardPayment_cardMerchant::setMtId(const QString &mt_id) {
    m_mt_id = mt_id;
    m_mt_id_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_mt_id_Set() const{
    return m_mt_id_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_mt_id_Valid() const{
    return m_mt_id_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getPosDataDe22() const {
    return m_pos_data_de22;
}
void OAIRelatedPartyCardPayment_cardMerchant::setPosDataDe22(const QString &pos_data_de22) {
    m_pos_data_de22 = pos_data_de22;
    m_pos_data_de22_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_pos_data_de22_Set() const{
    return m_pos_data_de22_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_pos_data_de22_Valid() const{
    return m_pos_data_de22_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getPosDataDe61() const {
    return m_pos_data_de61;
}
void OAIRelatedPartyCardPayment_cardMerchant::setPosDataDe61(const QString &pos_data_de61) {
    m_pos_data_de61 = pos_data_de61;
    m_pos_data_de61_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_pos_data_de61_Set() const{
    return m_pos_data_de61_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_pos_data_de61_Valid() const{
    return m_pos_data_de61_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getPosTermnlDe41() const {
    return m_pos_termnl_de41;
}
void OAIRelatedPartyCardPayment_cardMerchant::setPosTermnlDe41(const QString &pos_termnl_de41) {
    m_pos_termnl_de41 = pos_termnl_de41;
    m_pos_termnl_de41_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_pos_termnl_de41_Set() const{
    return m_pos_termnl_de41_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_pos_termnl_de41_Valid() const{
    return m_pos_termnl_de41_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getProcCode() const {
    return m_proc_code;
}
void OAIRelatedPartyCardPayment_cardMerchant::setProcCode(const QString &proc_code) {
    m_proc_code = proc_code;
    m_proc_code_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_proc_code_Set() const{
    return m_proc_code_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_proc_code_Valid() const{
    return m_proc_code_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getRecordDataDe120() const {
    return m_record_data_de120;
}
void OAIRelatedPartyCardPayment_cardMerchant::setRecordDataDe120(const QString &record_data_de120) {
    m_record_data_de120 = record_data_de120;
    m_record_data_de120_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_record_data_de120_Set() const{
    return m_record_data_de120_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_record_data_de120_Valid() const{
    return m_record_data_de120_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getRespCodeDe39() const {
    return m_resp_code_de39;
}
void OAIRelatedPartyCardPayment_cardMerchant::setRespCodeDe39(const QString &resp_code_de39) {
    m_resp_code_de39 = resp_code_de39;
    m_resp_code_de39_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_resp_code_de39_Set() const{
    return m_resp_code_de39_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_resp_code_de39_Valid() const{
    return m_resp_code_de39_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getRetRefNoDe37() const {
    return m_ret_ref_no_de37;
}
void OAIRelatedPartyCardPayment_cardMerchant::setRetRefNoDe37(const QString &ret_ref_no_de37) {
    m_ret_ref_no_de37 = ret_ref_no_de37;
    m_ret_ref_no_de37_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_ret_ref_no_de37_Set() const{
    return m_ret_ref_no_de37_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_ret_ref_no_de37_Valid() const{
    return m_ret_ref_no_de37_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getStatusCode() const {
    return m_status_code;
}
void OAIRelatedPartyCardPayment_cardMerchant::setStatusCode(const QString &status_code) {
    m_status_code = status_code;
    m_status_code_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_status_code_Set() const{
    return m_status_code_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_status_code_Valid() const{
    return m_status_code_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getToken() const {
    return m_token;
}
void OAIRelatedPartyCardPayment_cardMerchant::setToken(const QString &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_token_Set() const{
    return m_token_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_token_Valid() const{
    return m_token_isValid;
}

qint64 OAIRelatedPartyCardPayment_cardMerchant::getTxnAmt4d() const {
    return m_txn_amt4d;
}
void OAIRelatedPartyCardPayment_cardMerchant::setTxnAmt4d(const qint64 &txn_amt4d) {
    m_txn_amt4d = txn_amt4d;
    m_txn_amt4d_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_amt4d_Set() const{
    return m_txn_amt4d_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_amt4d_Valid() const{
    return m_txn_amt4d_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getTxnCcy() const {
    return m_txn_ccy;
}
void OAIRelatedPartyCardPayment_cardMerchant::setTxnCcy(const QString &txn_ccy) {
    m_txn_ccy = txn_ccy;
    m_txn_ccy_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_ccy_Set() const{
    return m_txn_ccy_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_ccy_Valid() const{
    return m_txn_ccy_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getTxnCtry() const {
    return m_txn_ctry;
}
void OAIRelatedPartyCardPayment_cardMerchant::setTxnCtry(const QString &txn_ctry) {
    m_txn_ctry = txn_ctry;
    m_txn_ctry_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_ctry_Set() const{
    return m_txn_ctry_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_ctry_Valid() const{
    return m_txn_ctry_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getTxnDesc() const {
    return m_txn_desc;
}
void OAIRelatedPartyCardPayment_cardMerchant::setTxnDesc(const QString &txn_desc) {
    m_txn_desc = txn_desc;
    m_txn_desc_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_desc_Set() const{
    return m_txn_desc_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_desc_Valid() const{
    return m_txn_desc_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getTxnStatCode() const {
    return m_txn_stat_code;
}
void OAIRelatedPartyCardPayment_cardMerchant::setTxnStatCode(const QString &txn_stat_code) {
    m_txn_stat_code = txn_stat_code;
    m_txn_stat_code_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_stat_code_Set() const{
    return m_txn_stat_code_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_stat_code_Valid() const{
    return m_txn_stat_code_isValid;
}

QString OAIRelatedPartyCardPayment_cardMerchant::getTxnType() const {
    return m_txn_type;
}
void OAIRelatedPartyCardPayment_cardMerchant::setTxnType(const QString &txn_type) {
    m_txn_type = txn_type;
    m_txn_type_isSet = true;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_type_Set() const{
    return m_txn_type_isSet;
}

bool OAIRelatedPartyCardPayment_cardMerchant::is_txn_type_Valid() const{
    return m_txn_type_isValid;
}

bool OAIRelatedPartyCardPayment_cardMerchant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_acquirer_id_de32_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_amt_de54_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_data_de124_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_data_de48_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auth_code_de38_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorised_by_gps_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avs_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_amt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_ccy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiry_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mcc_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merch_id_de42_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merch_name_de43_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mt_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pos_data_de22_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pos_data_de61_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pos_termnl_de41_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_proc_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_record_data_de120_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resp_code_de39_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ret_ref_no_de37_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_amt4d_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_ccy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_ctry_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_desc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_stat_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRelatedPartyCardPayment_cardMerchant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
