/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICard::OAICard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICard::OAICard() {
    this->initializeModel();
}

OAICard::~OAICard() {}

void OAICard::initializeModel() {

    m_blocked_isSet = false;
    m_blocked_isValid = false;

    m_card_id_isSet = false;
    m_card_id_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_eur_ican_isSet = false;
    m_eur_ican_isValid = false;

    m_expiry_date_isSet = false;
    m_expiry_date_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_gbp_ican_isSet = false;
    m_gbp_ican_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_masked_pan_isSet = false;
    m_masked_pan_isValid = false;

    m_provider_isSet = false;
    m_provider_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_reason_isSet = false;
    m_status_reason_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAICard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICard::fromJsonObject(QJsonObject json) {

    m_blocked_isValid = ::OpenAPI::fromJsonValue(m_blocked, json[QString("blocked")]);
    m_blocked_isSet = !json[QString("blocked")].isNull() && m_blocked_isValid;

    m_card_id_isValid = ::OpenAPI::fromJsonValue(m_card_id, json[QString("cardId")]);
    m_card_id_isSet = !json[QString("cardId")].isNull() && m_card_id_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("dateCreated")]);
    m_date_created_isSet = !json[QString("dateCreated")].isNull() && m_date_created_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("emailAddress")]);
    m_email_address_isSet = !json[QString("emailAddress")].isNull() && m_email_address_isValid;

    m_eur_ican_isValid = ::OpenAPI::fromJsonValue(m_eur_ican, json[QString("eurIcan")]);
    m_eur_ican_isSet = !json[QString("eurIcan")].isNull() && m_eur_ican_isValid;

    m_expiry_date_isValid = ::OpenAPI::fromJsonValue(m_expiry_date, json[QString("expiryDate")]);
    m_expiry_date_isSet = !json[QString("expiryDate")].isNull() && m_expiry_date_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_gbp_ican_isValid = ::OpenAPI::fromJsonValue(m_gbp_ican, json[QString("gbpIcan")]);
    m_gbp_ican_isSet = !json[QString("gbpIcan")].isNull() && m_gbp_ican_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_masked_pan_isValid = ::OpenAPI::fromJsonValue(m_masked_pan, json[QString("maskedPan")]);
    m_masked_pan_isSet = !json[QString("maskedPan")].isNull() && m_masked_pan_isValid;

    m_provider_isValid = ::OpenAPI::fromJsonValue(m_provider, json[QString("provider")]);
    m_provider_isSet = !json[QString("provider")].isNull() && m_provider_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_reason_isValid = ::OpenAPI::fromJsonValue(m_status_reason, json[QString("statusReason")]);
    m_status_reason_isSet = !json[QString("statusReason")].isNull() && m_status_reason_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;
}

QString OAICard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICard::asJsonObject() const {
    QJsonObject obj;
    if (m_blocked_isSet) {
        obj.insert(QString("blocked"), ::OpenAPI::toJsonValue(m_blocked));
    }
    if (m_card_id_isSet) {
        obj.insert(QString("cardId"), ::OpenAPI::toJsonValue(m_card_id));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("dateCreated"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("emailAddress"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_eur_ican_isSet) {
        obj.insert(QString("eurIcan"), ::OpenAPI::toJsonValue(m_eur_ican));
    }
    if (m_expiry_date_isSet) {
        obj.insert(QString("expiryDate"), ::OpenAPI::toJsonValue(m_expiry_date));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_gbp_ican_isSet) {
        obj.insert(QString("gbpIcan"), ::OpenAPI::toJsonValue(m_gbp_ican));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_masked_pan_isSet) {
        obj.insert(QString("maskedPan"), ::OpenAPI::toJsonValue(m_masked_pan));
    }
    if (m_provider_isSet) {
        obj.insert(QString("provider"), ::OpenAPI::toJsonValue(m_provider));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_reason_isSet) {
        obj.insert(QString("statusReason"), ::OpenAPI::toJsonValue(m_status_reason));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

bool OAICard::isBlocked() const {
    return m_blocked;
}
void OAICard::setBlocked(const bool &blocked) {
    m_blocked = blocked;
    m_blocked_isSet = true;
}

bool OAICard::is_blocked_Set() const{
    return m_blocked_isSet;
}

bool OAICard::is_blocked_Valid() const{
    return m_blocked_isValid;
}

qint64 OAICard::getCardId() const {
    return m_card_id;
}
void OAICard::setCardId(const qint64 &card_id) {
    m_card_id = card_id;
    m_card_id_isSet = true;
}

bool OAICard::is_card_id_Set() const{
    return m_card_id_isSet;
}

bool OAICard::is_card_id_Valid() const{
    return m_card_id_isValid;
}

QDateTime OAICard::getDateCreated() const {
    return m_date_created;
}
void OAICard::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAICard::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAICard::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAICard::getEmailAddress() const {
    return m_email_address;
}
void OAICard::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAICard::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAICard::is_email_address_Valid() const{
    return m_email_address_isValid;
}

qint64 OAICard::getEurIcan() const {
    return m_eur_ican;
}
void OAICard::setEurIcan(const qint64 &eur_ican) {
    m_eur_ican = eur_ican;
    m_eur_ican_isSet = true;
}

bool OAICard::is_eur_ican_Set() const{
    return m_eur_ican_isSet;
}

bool OAICard::is_eur_ican_Valid() const{
    return m_eur_ican_isValid;
}

QDateTime OAICard::getExpiryDate() const {
    return m_expiry_date;
}
void OAICard::setExpiryDate(const QDateTime &expiry_date) {
    m_expiry_date = expiry_date;
    m_expiry_date_isSet = true;
}

bool OAICard::is_expiry_date_Set() const{
    return m_expiry_date_isSet;
}

bool OAICard::is_expiry_date_Valid() const{
    return m_expiry_date_isValid;
}

QString OAICard::getFirstName() const {
    return m_first_name;
}
void OAICard::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAICard::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAICard::is_first_name_Valid() const{
    return m_first_name_isValid;
}

qint64 OAICard::getGbpIcan() const {
    return m_gbp_ican;
}
void OAICard::setGbpIcan(const qint64 &gbp_ican) {
    m_gbp_ican = gbp_ican;
    m_gbp_ican_isSet = true;
}

bool OAICard::is_gbp_ican_Set() const{
    return m_gbp_ican_isSet;
}

bool OAICard::is_gbp_ican_Valid() const{
    return m_gbp_ican_isValid;
}

QString OAICard::getLastName() const {
    return m_last_name;
}
void OAICard::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAICard::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAICard::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAICard::getMaskedPan() const {
    return m_masked_pan;
}
void OAICard::setMaskedPan(const QString &masked_pan) {
    m_masked_pan = masked_pan;
    m_masked_pan_isSet = true;
}

bool OAICard::is_masked_pan_Set() const{
    return m_masked_pan_isSet;
}

bool OAICard::is_masked_pan_Valid() const{
    return m_masked_pan_isValid;
}

QString OAICard::getProvider() const {
    return m_provider;
}
void OAICard::setProvider(const QString &provider) {
    m_provider = provider;
    m_provider_isSet = true;
}

bool OAICard::is_provider_Set() const{
    return m_provider_isSet;
}

bool OAICard::is_provider_Valid() const{
    return m_provider_isValid;
}

QString OAICard::getStatus() const {
    return m_status;
}
void OAICard::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICard::is_status_Set() const{
    return m_status_isSet;
}

bool OAICard::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICard::getStatusReason() const {
    return m_status_reason;
}
void OAICard::setStatusReason(const QString &status_reason) {
    m_status_reason = status_reason;
    m_status_reason_isSet = true;
}

bool OAICard::is_status_reason_Set() const{
    return m_status_reason_isSet;
}

bool OAICard::is_status_reason_Valid() const{
    return m_status_reason_isValid;
}

qint64 OAICard::getUserId() const {
    return m_user_id;
}
void OAICard::setUserId(const qint64 &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAICard::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAICard::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAICard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blocked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_eur_ican_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiry_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gbp_ican_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_masked_pan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICard::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
