# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchApproversApprovalsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_address: str=None, first_name: str=None, last_name: str=None, last_updated: datetime=None, mobile_number: str=None, status: str=None, user_id: int=None):
        """BatchApproversApprovalsInner - a model defined in OpenAPI

        :param email_address: The email_address of this BatchApproversApprovalsInner.
        :param first_name: The first_name of this BatchApproversApprovalsInner.
        :param last_name: The last_name of this BatchApproversApprovalsInner.
        :param last_updated: The last_updated of this BatchApproversApprovalsInner.
        :param mobile_number: The mobile_number of this BatchApproversApprovalsInner.
        :param status: The status of this BatchApproversApprovalsInner.
        :param user_id: The user_id of this BatchApproversApprovalsInner.
        """
        self.openapi_types = {
            'email_address': str,
            'first_name': str,
            'last_name': str,
            'last_updated': datetime,
            'mobile_number': str,
            'status': str,
            'user_id': int
        }

        self.attribute_map = {
            'email_address': 'emailAddress',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'last_updated': 'lastUpdated',
            'mobile_number': 'mobileNumber',
            'status': 'status',
            'user_id': 'userId'
        }

        self._email_address = email_address
        self._first_name = first_name
        self._last_name = last_name
        self._last_updated = last_updated
        self._mobile_number = mobile_number
        self._status = status
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchApproversApprovalsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The batchApprovers_approvals_inner of this BatchApproversApprovalsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_address(self):
        """Gets the email_address of this BatchApproversApprovalsInner.

        User email address

        :return: The email_address of this BatchApproversApprovalsInner.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this BatchApproversApprovalsInner.

        User email address

        :param email_address: The email_address of this BatchApproversApprovalsInner.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def first_name(self):
        """Gets the first_name of this BatchApproversApprovalsInner.


        :return: The first_name of this BatchApproversApprovalsInner.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this BatchApproversApprovalsInner.


        :param first_name: The first_name of this BatchApproversApprovalsInner.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this BatchApproversApprovalsInner.


        :return: The last_name of this BatchApproversApprovalsInner.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this BatchApproversApprovalsInner.


        :param last_name: The last_name of this BatchApproversApprovalsInner.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def last_updated(self):
        """Gets the last_updated of this BatchApproversApprovalsInner.

        The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z

        :return: The last_updated of this BatchApproversApprovalsInner.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this BatchApproversApprovalsInner.

        The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z

        :param last_updated: The last_updated of this BatchApproversApprovalsInner.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def mobile_number(self):
        """Gets the mobile_number of this BatchApproversApprovalsInner.


        :return: The mobile_number of this BatchApproversApprovalsInner.
        :rtype: str
        """
        return self._mobile_number

    @mobile_number.setter
    def mobile_number(self, mobile_number):
        """Sets the mobile_number of this BatchApproversApprovalsInner.


        :param mobile_number: The mobile_number of this BatchApproversApprovalsInner.
        :type mobile_number: str
        """

        self._mobile_number = mobile_number

    @property
    def status(self):
        """Gets the status of this BatchApproversApprovalsInner.


        :return: The status of this BatchApproversApprovalsInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BatchApproversApprovalsInner.


        :param status: The status of this BatchApproversApprovalsInner.
        :type status: str
        """

        self._status = status

    @property
    def user_id(self):
        """Gets the user_id of this BatchApproversApprovalsInner.

        User id assigned by fire.com

        :return: The user_id of this BatchApproversApprovalsInner.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this BatchApproversApprovalsInner.

        User id assigned by fire.com

        :param user_id: The user_id of this BatchApproversApprovalsInner.
        :type user_id: int
        """

        self._user_id = user_id
