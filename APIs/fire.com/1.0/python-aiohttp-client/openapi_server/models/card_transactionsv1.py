# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transaction import Transaction
from openapi_server import util


class CardTransactionsv1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_range_to: int=None, total: int=None, transactions: List[Transaction]=None):
        """CardTransactionsv1 - a model defined in OpenAPI

        :param date_range_to: The date_range_to of this CardTransactionsv1.
        :param total: The total of this CardTransactionsv1.
        :param transactions: The transactions of this CardTransactionsv1.
        """
        self.openapi_types = {
            'date_range_to': int,
            'total': int,
            'transactions': List[Transaction]
        }

        self.attribute_map = {
            'date_range_to': 'dateRangeTo',
            'total': 'total',
            'transactions': 'transactions'
        }

        self._date_range_to = date_range_to
        self._total = total
        self._transactions = transactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CardTransactionsv1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The cardTransactionsv1 of this CardTransactionsv1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_range_to(self):
        """Gets the date_range_to of this CardTransactionsv1.

        milisecond timestamp of date range to value.

        :return: The date_range_to of this CardTransactionsv1.
        :rtype: int
        """
        return self._date_range_to

    @date_range_to.setter
    def date_range_to(self, date_range_to):
        """Sets the date_range_to of this CardTransactionsv1.

        milisecond timestamp of date range to value.

        :param date_range_to: The date_range_to of this CardTransactionsv1.
        :type date_range_to: int
        """

        self._date_range_to = date_range_to

    @property
    def total(self):
        """Gets the total of this CardTransactionsv1.

        The total number of card transactions in the list.

        :return: The total of this CardTransactionsv1.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this CardTransactionsv1.

        The total number of card transactions in the list.

        :param total: The total of this CardTransactionsv1.
        :type total: int
        """

        self._total = total

    @property
    def transactions(self):
        """Gets the transactions of this CardTransactionsv1.


        :return: The transactions of this CardTransactionsv1.
        :rtype: List[Transaction]
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this CardTransactionsv1.


        :param transactions: The transactions of this CardTransactionsv1.
        :type transactions: List[Transaction]
        """

        self._transactions = transactions
