# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mandate import Mandate
from openapi_server import util


class Mandates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mandates: List[Mandate]=None, total: int=None):
        """Mandates - a model defined in OpenAPI

        :param mandates: The mandates of this Mandates.
        :param total: The total of this Mandates.
        """
        self.openapi_types = {
            'mandates': List[Mandate],
            'total': int
        }

        self.attribute_map = {
            'mandates': 'mandates',
            'total': 'total'
        }

        self._mandates = mandates
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Mandates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The mandates of this Mandates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mandates(self):
        """Gets the mandates of this Mandates.


        :return: The mandates of this Mandates.
        :rtype: List[Mandate]
        """
        return self._mandates

    @mandates.setter
    def mandates(self, mandates):
        """Sets the mandates of this Mandates.


        :param mandates: The mandates of this Mandates.
        :type mandates: List[Mandate]
        """

        self._mandates = mandates

    @property
    def total(self):
        """Gets the total of this Mandates.

        Number of direct debits found

        :return: The total of this Mandates.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this Mandates.

        Number of direct debits found

        :param total: The total of this Mandates.
        :type total: int
        """

        self._total = total
