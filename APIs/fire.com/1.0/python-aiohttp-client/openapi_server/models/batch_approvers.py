# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_approvers_approvals_inner import BatchApproversApprovalsInner
from openapi_server import util


class BatchApprovers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approvals: List[BatchApproversApprovalsInner]=None):
        """BatchApprovers - a model defined in OpenAPI

        :param approvals: The approvals of this BatchApprovers.
        """
        self.openapi_types = {
            'approvals': List[BatchApproversApprovalsInner]
        }

        self.attribute_map = {
            'approvals': 'approvals'
        }

        self._approvals = approvals

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchApprovers':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The batchApprovers of this BatchApprovers.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approvals(self):
        """Gets the approvals of this BatchApprovers.


        :return: The approvals of this BatchApprovers.
        :rtype: List[BatchApproversApprovalsInner]
        """
        return self._approvals

    @approvals.setter
    def approvals(self, approvals):
        """Sets the approvals of this BatchApprovers.


        :param approvals: The approvals of this BatchApprovers.
        :type approvals: List[BatchApproversApprovalsInner]
        """

        self._approvals = approvals
