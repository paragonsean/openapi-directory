# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NewBatchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_uuid: str=None):
        """NewBatchResponse - a model defined in OpenAPI

        :param batch_uuid: The batch_uuid of this NewBatchResponse.
        """
        self.openapi_types = {
            'batch_uuid': str
        }

        self.attribute_map = {
            'batch_uuid': 'batchUuid'
        }

        self._batch_uuid = batch_uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewBatchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The newBatchResponse of this NewBatchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_uuid(self):
        """Gets the batch_uuid of this NewBatchResponse.

        A UUID for this item.

        :return: The batch_uuid of this NewBatchResponse.
        :rtype: str
        """
        return self._batch_uuid

    @batch_uuid.setter
    def batch_uuid(self, batch_uuid):
        """Sets the batch_uuid of this NewBatchResponse.

        A UUID for this item.

        :param batch_uuid: The batch_uuid of this NewBatchResponse.
        :type batch_uuid: str
        """

        self._batch_uuid = batch_uuid
