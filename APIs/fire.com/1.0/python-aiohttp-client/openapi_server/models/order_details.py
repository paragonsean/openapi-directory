# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment1: str=None, comment2: str=None, customer_number: str=None, delivery_address_line1: str=None, delivery_address_line2: str=None, delivery_city: str=None, delivery_country: str=None, delivery_post_code: str=None, merchant_customer_identification: str=None, merchant_number: str=None, order_id: str=None, product_id: str=None, variable_reference: str=None):
        """OrderDetails - a model defined in OpenAPI

        :param comment1: The comment1 of this OrderDetails.
        :param comment2: The comment2 of this OrderDetails.
        :param customer_number: The customer_number of this OrderDetails.
        :param delivery_address_line1: The delivery_address_line1 of this OrderDetails.
        :param delivery_address_line2: The delivery_address_line2 of this OrderDetails.
        :param delivery_city: The delivery_city of this OrderDetails.
        :param delivery_country: The delivery_country of this OrderDetails.
        :param delivery_post_code: The delivery_post_code of this OrderDetails.
        :param merchant_customer_identification: The merchant_customer_identification of this OrderDetails.
        :param merchant_number: The merchant_number of this OrderDetails.
        :param order_id: The order_id of this OrderDetails.
        :param product_id: The product_id of this OrderDetails.
        :param variable_reference: The variable_reference of this OrderDetails.
        """
        self.openapi_types = {
            'comment1': str,
            'comment2': str,
            'customer_number': str,
            'delivery_address_line1': str,
            'delivery_address_line2': str,
            'delivery_city': str,
            'delivery_country': str,
            'delivery_post_code': str,
            'merchant_customer_identification': str,
            'merchant_number': str,
            'order_id': str,
            'product_id': str,
            'variable_reference': str
        }

        self.attribute_map = {
            'comment1': 'comment1',
            'comment2': 'comment2',
            'customer_number': 'customerNumber',
            'delivery_address_line1': 'deliveryAddressLine1',
            'delivery_address_line2': 'deliveryAddressLine2',
            'delivery_city': 'deliveryCity',
            'delivery_country': 'deliveryCountry',
            'delivery_post_code': 'deliveryPostCode',
            'merchant_customer_identification': 'merchantCustomerIdentification',
            'merchant_number': 'merchantNumber',
            'order_id': 'orderId',
            'product_id': 'productId',
            'variable_reference': 'variableReference'
        }

        self._comment1 = comment1
        self._comment2 = comment2
        self._customer_number = customer_number
        self._delivery_address_line1 = delivery_address_line1
        self._delivery_address_line2 = delivery_address_line2
        self._delivery_city = delivery_city
        self._delivery_country = delivery_country
        self._delivery_post_code = delivery_post_code
        self._merchant_customer_identification = merchant_customer_identification
        self._merchant_number = merchant_number
        self._order_id = order_id
        self._product_id = product_id
        self._variable_reference = variable_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The orderDetails of this OrderDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment1(self):
        """Gets the comment1 of this OrderDetails.

        This is your own comment for the transaction.

        :return: The comment1 of this OrderDetails.
        :rtype: str
        """
        return self._comment1

    @comment1.setter
    def comment1(self, comment1):
        """Sets the comment1 of this OrderDetails.

        This is your own comment for the transaction.

        :param comment1: The comment1 of this OrderDetails.
        :type comment1: str
        """

        self._comment1 = comment1

    @property
    def comment2(self):
        """Gets the comment2 of this OrderDetails.

        This is your own comment for the transaction.

        :return: The comment2 of this OrderDetails.
        :rtype: str
        """
        return self._comment2

    @comment2.setter
    def comment2(self, comment2):
        """Sets the comment2 of this OrderDetails.

        This is your own comment for the transaction.

        :param comment2: The comment2 of this OrderDetails.
        :type comment2: str
        """

        self._comment2 = comment2

    @property
    def customer_number(self):
        """Gets the customer_number of this OrderDetails.

        Use this field to store a customer number for the transaction (for example).

        :return: The customer_number of this OrderDetails.
        :rtype: str
        """
        return self._customer_number

    @customer_number.setter
    def customer_number(self, customer_number):
        """Sets the customer_number of this OrderDetails.

        Use this field to store a customer number for the transaction (for example).

        :param customer_number: The customer_number of this OrderDetails.
        :type customer_number: str
        """

        self._customer_number = customer_number

    @property
    def delivery_address_line1(self):
        """Gets the delivery_address_line1 of this OrderDetails.

        The first line of the delivery address.

        :return: The delivery_address_line1 of this OrderDetails.
        :rtype: str
        """
        return self._delivery_address_line1

    @delivery_address_line1.setter
    def delivery_address_line1(self, delivery_address_line1):
        """Sets the delivery_address_line1 of this OrderDetails.

        The first line of the delivery address.

        :param delivery_address_line1: The delivery_address_line1 of this OrderDetails.
        :type delivery_address_line1: str
        """

        self._delivery_address_line1 = delivery_address_line1

    @property
    def delivery_address_line2(self):
        """Gets the delivery_address_line2 of this OrderDetails.

        The second line of the delivery address.

        :return: The delivery_address_line2 of this OrderDetails.
        :rtype: str
        """
        return self._delivery_address_line2

    @delivery_address_line2.setter
    def delivery_address_line2(self, delivery_address_line2):
        """Sets the delivery_address_line2 of this OrderDetails.

        The second line of the delivery address.

        :param delivery_address_line2: The delivery_address_line2 of this OrderDetails.
        :type delivery_address_line2: str
        """

        self._delivery_address_line2 = delivery_address_line2

    @property
    def delivery_city(self):
        """Gets the delivery_city of this OrderDetails.

        Delivery address city

        :return: The delivery_city of this OrderDetails.
        :rtype: str
        """
        return self._delivery_city

    @delivery_city.setter
    def delivery_city(self, delivery_city):
        """Sets the delivery_city of this OrderDetails.

        Delivery address city

        :param delivery_city: The delivery_city of this OrderDetails.
        :type delivery_city: str
        """

        self._delivery_city = delivery_city

    @property
    def delivery_country(self):
        """Gets the delivery_country of this OrderDetails.

        2-digit code for the country

        :return: The delivery_country of this OrderDetails.
        :rtype: str
        """
        return self._delivery_country

    @delivery_country.setter
    def delivery_country(self, delivery_country):
        """Sets the delivery_country of this OrderDetails.

        2-digit code for the country

        :param delivery_country: The delivery_country of this OrderDetails.
        :type delivery_country: str
        """

        self._delivery_country = delivery_country

    @property
    def delivery_post_code(self):
        """Gets the delivery_post_code of this OrderDetails.

        Delivery address post code

        :return: The delivery_post_code of this OrderDetails.
        :rtype: str
        """
        return self._delivery_post_code

    @delivery_post_code.setter
    def delivery_post_code(self, delivery_post_code):
        """Sets the delivery_post_code of this OrderDetails.

        Delivery address post code

        :param delivery_post_code: The delivery_post_code of this OrderDetails.
        :type delivery_post_code: str
        """

        self._delivery_post_code = delivery_post_code

    @property
    def merchant_customer_identification(self):
        """Gets the merchant_customer_identification of this OrderDetails.

        This is a reference you use to uniquely identify each of your customers.

        :return: The merchant_customer_identification of this OrderDetails.
        :rtype: str
        """
        return self._merchant_customer_identification

    @merchant_customer_identification.setter
    def merchant_customer_identification(self, merchant_customer_identification):
        """Sets the merchant_customer_identification of this OrderDetails.

        This is a reference you use to uniquely identify each of your customers.

        :param merchant_customer_identification: The merchant_customer_identification of this OrderDetails.
        :type merchant_customer_identification: str
        """

        self._merchant_customer_identification = merchant_customer_identification

    @property
    def merchant_number(self):
        """Gets the merchant_number of this OrderDetails.

        Your Merchant Number (if applicable).

        :return: The merchant_number of this OrderDetails.
        :rtype: str
        """
        return self._merchant_number

    @merchant_number.setter
    def merchant_number(self, merchant_number):
        """Sets the merchant_number of this OrderDetails.

        Your Merchant Number (if applicable).

        :param merchant_number: The merchant_number of this OrderDetails.
        :type merchant_number: str
        """

        self._merchant_number = merchant_number

    @property
    def order_id(self):
        """Gets the order_id of this OrderDetails.

        Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.

        :return: The order_id of this OrderDetails.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this OrderDetails.

        Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.

        :param order_id: The order_id of this OrderDetails.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def product_id(self):
        """Gets the product_id of this OrderDetails.

        Use this field to store a product id for the transaction (for example).

        :return: The product_id of this OrderDetails.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this OrderDetails.

        Use this field to store a product id for the transaction (for example).

        :param product_id: The product_id of this OrderDetails.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def variable_reference(self):
        """Gets the variable_reference of this OrderDetails.

        Use this field to store any other reference for the transaction (for example, a phone number).

        :return: The variable_reference of this OrderDetails.
        :rtype: str
        """
        return self._variable_reference

    @variable_reference.setter
    def variable_reference(self, variable_reference):
        """Sets the variable_reference of this OrderDetails.

        Use this field to store any other reference for the transaction (for example, a phone number).

        :param variable_reference: The variable_reference of this OrderDetails.
        :type variable_reference: str
        """

        self._variable_reference = variable_reference
