# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.payee import Payee
from openapi_server import util


class PayeeBankAccounts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, funding_sources: List[Payee]=None, total: int=None):
        """PayeeBankAccounts - a model defined in OpenAPI

        :param funding_sources: The funding_sources of this PayeeBankAccounts.
        :param total: The total of this PayeeBankAccounts.
        """
        self.openapi_types = {
            'funding_sources': List[Payee],
            'total': int
        }

        self.attribute_map = {
            'funding_sources': 'fundingSources',
            'total': 'total'
        }

        self._funding_sources = funding_sources
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayeeBankAccounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The payeeBankAccounts of this PayeeBankAccounts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def funding_sources(self):
        """Gets the funding_sources of this PayeeBankAccounts.


        :return: The funding_sources of this PayeeBankAccounts.
        :rtype: List[Payee]
        """
        return self._funding_sources

    @funding_sources.setter
    def funding_sources(self, funding_sources):
        """Sets the funding_sources of this PayeeBankAccounts.


        :param funding_sources: The funding_sources of this PayeeBankAccounts.
        :type funding_sources: List[Payee]
        """

        self._funding_sources = funding_sources

    @property
    def total(self):
        """Gets the total of this PayeeBankAccounts.

        The total number of payees in the list.

        :return: The total of this PayeeBankAccounts.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this PayeeBankAccounts.

        The total number of payees in the list.

        :param total: The total of this PayeeBankAccounts.
        :type total: int
        """

        self._total = total
