# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchItemInternationalTransferMode1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, ican_from: int=None, my_ref: str=None, payee_id: int=None, payment_reason: str=None, your_ref: str=None):
        """BatchItemInternationalTransferMode1 - a model defined in OpenAPI

        :param amount: The amount of this BatchItemInternationalTransferMode1.
        :param ican_from: The ican_from of this BatchItemInternationalTransferMode1.
        :param my_ref: The my_ref of this BatchItemInternationalTransferMode1.
        :param payee_id: The payee_id of this BatchItemInternationalTransferMode1.
        :param payment_reason: The payment_reason of this BatchItemInternationalTransferMode1.
        :param your_ref: The your_ref of this BatchItemInternationalTransferMode1.
        """
        self.openapi_types = {
            'amount': int,
            'ican_from': int,
            'my_ref': str,
            'payee_id': int,
            'payment_reason': str,
            'your_ref': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'ican_from': 'icanFrom',
            'my_ref': 'myRef',
            'payee_id': 'payeeId',
            'payment_reason': 'paymentReason',
            'your_ref': 'yourRef'
        }

        self._amount = amount
        self._ican_from = ican_from
        self._my_ref = my_ref
        self._payee_id = payee_id
        self._payment_reason = payment_reason
        self._your_ref = your_ref

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchItemInternationalTransferMode1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The batchItemInternationalTransferMode1 of this BatchItemInternationalTransferMode1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this BatchItemInternationalTransferMode1.

        The value of the payment in the beneficiary currency.

        :return: The amount of this BatchItemInternationalTransferMode1.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this BatchItemInternationalTransferMode1.

        The value of the payment in the beneficiary currency.

        :param amount: The amount of this BatchItemInternationalTransferMode1.
        :type amount: int
        """

        self._amount = amount

    @property
    def ican_from(self):
        """Gets the ican_from of this BatchItemInternationalTransferMode1.

        The Fire account ID for the fire.com account the funds are taken from.

        :return: The ican_from of this BatchItemInternationalTransferMode1.
        :rtype: int
        """
        return self._ican_from

    @ican_from.setter
    def ican_from(self, ican_from):
        """Sets the ican_from of this BatchItemInternationalTransferMode1.

        The Fire account ID for the fire.com account the funds are taken from.

        :param ican_from: The ican_from of this BatchItemInternationalTransferMode1.
        :type ican_from: int
        """

        self._ican_from = ican_from

    @property
    def my_ref(self):
        """Gets the my_ref of this BatchItemInternationalTransferMode1.

        The reference on the transaction for your records - not shown to the beneficiary.

        :return: The my_ref of this BatchItemInternationalTransferMode1.
        :rtype: str
        """
        return self._my_ref

    @my_ref.setter
    def my_ref(self, my_ref):
        """Sets the my_ref of this BatchItemInternationalTransferMode1.

        The reference on the transaction for your records - not shown to the beneficiary.

        :param my_ref: The my_ref of this BatchItemInternationalTransferMode1.
        :type my_ref: str
        """

        self._my_ref = my_ref

    @property
    def payee_id(self):
        """Gets the payee_id of this BatchItemInternationalTransferMode1.

        The ID of the existing payee

        :return: The payee_id of this BatchItemInternationalTransferMode1.
        :rtype: int
        """
        return self._payee_id

    @payee_id.setter
    def payee_id(self, payee_id):
        """Sets the payee_id of this BatchItemInternationalTransferMode1.

        The ID of the existing payee

        :param payee_id: The payee_id of this BatchItemInternationalTransferMode1.
        :type payee_id: int
        """

        self._payee_id = payee_id

    @property
    def payment_reason(self):
        """Gets the payment_reason of this BatchItemInternationalTransferMode1.

        The reason for the payment, used for transaction monitoring purposes. Must be one of Invoice Payment|Salary/Dividend Payment|Expenses|Savings|Other

        :return: The payment_reason of this BatchItemInternationalTransferMode1.
        :rtype: str
        """
        return self._payment_reason

    @payment_reason.setter
    def payment_reason(self, payment_reason):
        """Sets the payment_reason of this BatchItemInternationalTransferMode1.

        The reason for the payment, used for transaction monitoring purposes. Must be one of Invoice Payment|Salary/Dividend Payment|Expenses|Savings|Other

        :param payment_reason: The payment_reason of this BatchItemInternationalTransferMode1.
        :type payment_reason: str
        """

        self._payment_reason = payment_reason

    @property
    def your_ref(self):
        """Gets the your_ref of this BatchItemInternationalTransferMode1.

        The reference on the transaction - displayed on the beneficiary bank statement.

        :return: The your_ref of this BatchItemInternationalTransferMode1.
        :rtype: str
        """
        return self._your_ref

    @your_ref.setter
    def your_ref(self, your_ref):
        """Sets the your_ref of this BatchItemInternationalTransferMode1.

        The reference on the transaction - displayed on the beneficiary bank statement.

        :param your_ref: The your_ref of this BatchItemInternationalTransferMode1.
        :type your_ref: str
        """

        self._your_ref = your_ref
