/*
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OrderDetails
 */
public class OrderDetailsTest {
    private final OrderDetails model = new OrderDetails();

    /**
     * Model tests for OrderDetails
     */
    @Test
    public void testOrderDetails() {
        // TODO: test OrderDetails
    }

    /**
     * Test the property 'comment1'
     */
    @Test
    public void comment1Test() {
        // TODO: test comment1
    }

    /**
     * Test the property 'comment2'
     */
    @Test
    public void comment2Test() {
        // TODO: test comment2
    }

    /**
     * Test the property 'customerNumber'
     */
    @Test
    public void customerNumberTest() {
        // TODO: test customerNumber
    }

    /**
     * Test the property 'deliveryAddressLine1'
     */
    @Test
    public void deliveryAddressLine1Test() {
        // TODO: test deliveryAddressLine1
    }

    /**
     * Test the property 'deliveryAddressLine2'
     */
    @Test
    public void deliveryAddressLine2Test() {
        // TODO: test deliveryAddressLine2
    }

    /**
     * Test the property 'deliveryCity'
     */
    @Test
    public void deliveryCityTest() {
        // TODO: test deliveryCity
    }

    /**
     * Test the property 'deliveryCountry'
     */
    @Test
    public void deliveryCountryTest() {
        // TODO: test deliveryCountry
    }

    /**
     * Test the property 'deliveryPostCode'
     */
    @Test
    public void deliveryPostCodeTest() {
        // TODO: test deliveryPostCode
    }

    /**
     * Test the property 'merchantCustomerIdentification'
     */
    @Test
    public void merchantCustomerIdentificationTest() {
        // TODO: test merchantCustomerIdentification
    }

    /**
     * Test the property 'merchantNumber'
     */
    @Test
    public void merchantNumberTest() {
        // TODO: test merchantNumber
    }

    /**
     * Test the property 'orderId'
     */
    @Test
    public void orderIdTest() {
        // TODO: test orderId
    }

    /**
     * Test the property 'productId'
     */
    @Test
    public void productIdTest() {
        // TODO: test productId
    }

    /**
     * Test the property 'variableReference'
     */
    @Test
    public void variableReferenceTest() {
        // TODO: test variableReference
    }

}
