/*
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Currency;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DirectDebit
 */
public class DirectDebitTest {
    private final DirectDebit model = new DirectDebit();

    /**
     * Model tests for DirectDebit
     */
    @Test
    public void testDirectDebit() {
        // TODO: test DirectDebit
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'directDebitReference'
     */
    @Test
    public void directDebitReferenceTest() {
        // TODO: test directDebitReference
    }

    /**
     * Test the property 'directDebitUuid'
     */
    @Test
    public void directDebitUuidTest() {
        // TODO: test directDebitUuid
    }

    /**
     * Test the property 'isDDIC'
     */
    @Test
    public void isDDICTest() {
        // TODO: test isDDIC
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

    /**
     * Test the property 'mandateUUid'
     */
    @Test
    public void mandateUUidTest() {
        // TODO: test mandateUUid
    }

    /**
     * Test the property 'originatorAlias'
     */
    @Test
    public void originatorAliasTest() {
        // TODO: test originatorAlias
    }

    /**
     * Test the property 'originatorName'
     */
    @Test
    public void originatorNameTest() {
        // TODO: test originatorName
    }

    /**
     * Test the property 'originatorReference'
     */
    @Test
    public void originatorReferenceTest() {
        // TODO: test originatorReference
    }

    /**
     * Test the property 'schemeRejectReason'
     */
    @Test
    public void schemeRejectReasonTest() {
        // TODO: test schemeRejectReason
    }

    /**
     * Test the property 'schemeRejectReasonCode'
     */
    @Test
    public void schemeRejectReasonCodeTest() {
        // TODO: test schemeRejectReasonCode
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'targetIcan'
     */
    @Test
    public void targetIcanTest() {
        // TODO: test targetIcan
    }

    /**
     * Test the property 'targetPayeeId'
     */
    @Test
    public void targetPayeeIdTest() {
        // TODO: test targetPayeeId
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
