/*
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Currency;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Account
 */
public class AccountTest {
    private final Account model = new Account();

    /**
     * Model tests for Account
     */
    @Test
    public void testAccount() {
        // TODO: test Account
    }

    /**
     * Test the property 'balance'
     */
    @Test
    public void balanceTest() {
        // TODO: test balance
    }

    /**
     * Test the property 'cbic'
     */
    @Test
    public void cbicTest() {
        // TODO: test cbic
    }

    /**
     * Test the property 'ccan'
     */
    @Test
    public void ccanTest() {
        // TODO: test ccan
    }

    /**
     * Test the property 'ciban'
     */
    @Test
    public void cibanTest() {
        // TODO: test ciban
    }

    /**
     * Test the property 'cnsc'
     */
    @Test
    public void cnscTest() {
        // TODO: test cnsc
    }

    /**
     * Test the property 'colour'
     */
    @Test
    public void colourTest() {
        // TODO: test colour
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'defaultAccount'
     */
    @Test
    public void defaultAccountTest() {
        // TODO: test defaultAccount
    }

    /**
     * Test the property 'directDebitsAllowed'
     */
    @Test
    public void directDebitsAllowedTest() {
        // TODO: test directDebitsAllowed
    }

    /**
     * Test the property 'fopOnly'
     */
    @Test
    public void fopOnlyTest() {
        // TODO: test fopOnly
    }

    /**
     * Test the property 'ican'
     */
    @Test
    public void icanTest() {
        // TODO: test ican
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

}
