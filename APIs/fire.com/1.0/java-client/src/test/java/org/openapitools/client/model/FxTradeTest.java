/*
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FxTrade
 */
public class FxTradeTest {
    private final FxTrade model = new FxTrade();

    /**
     * Model tests for FxTrade
     */
    @Test
    public void testFxTrade() {
        // TODO: test FxTrade
    }

    /**
     * Test the property 'buyAmount'
     */
    @Test
    public void buyAmountTest() {
        // TODO: test buyAmount
    }

    /**
     * Test the property 'buyCurrency'
     */
    @Test
    public void buyCurrencyTest() {
        // TODO: test buyCurrency
    }

    /**
     * Test the property 'fixedSide'
     */
    @Test
    public void fixedSideTest() {
        // TODO: test fixedSide
    }

    /**
     * Test the property 'provider'
     */
    @Test
    public void providerTest() {
        // TODO: test provider
    }

    /**
     * Test the property 'rate4d'
     */
    @Test
    public void rate4dTest() {
        // TODO: test rate4d
    }

    /**
     * Test the property 'sellAmount'
     */
    @Test
    public void sellAmountTest() {
        // TODO: test sellAmount
    }

    /**
     * Test the property 'sellCurrency'
     */
    @Test
    public void sellCurrencyTest() {
        // TODO: test sellCurrency
    }

}
