/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessToken from './model/AccessToken';
import Account from './model/Account';
import Accounts from './model/Accounts';
import AddBankTransferBatchPaymentRequest from './model/AddBankTransferBatchPaymentRequest';
import ApiApplication from './model/ApiApplication';
import Aspsp from './model/Aspsp';
import Aspsps from './model/Aspsps';
import Authentication from './model/Authentication';
import Batch from './model/Batch';
import BatchApprovers from './model/BatchApprovers';
import BatchApproversApprovalsInner from './model/BatchApproversApprovalsInner';
import BatchItem from './model/BatchItem';
import BatchItemBankTransferMode1 from './model/BatchItemBankTransferMode1';
import BatchItemBankTransferMode2 from './model/BatchItemBankTransferMode2';
import BatchItemDetails from './model/BatchItemDetails';
import BatchItemInternalTransfer from './model/BatchItemInternalTransfer';
import BatchItemInternationalTransferMode1 from './model/BatchItemInternationalTransferMode1';
import BatchItemResult from './model/BatchItemResult';
import BatchItems from './model/BatchItems';
import Card from './model/Card';
import CardTransactionsv1 from './model/CardTransactionsv1';
import CardTransactionsv3 from './model/CardTransactionsv3';
import CardTransactionsv3LinksInner from './model/CardTransactionsv3LinksInner';
import Cards from './model/Cards';
import Country from './model/Country';
import Currency from './model/Currency';
import DirectDebit from './model/DirectDebit';
import DirectDebitDetails from './model/DirectDebitDetails';
import DirectDebits from './model/DirectDebits';
import FxTrade from './model/FxTrade';
import Mandate from './model/Mandate';
import Mandates from './model/Mandates';
import MobileApplication from './model/MobileApplication';
import NewAccount from './model/NewAccount';
import NewApiApplication from './model/NewApiApplication';
import NewBatch from './model/NewBatch';
import NewBatchItemResponse from './model/NewBatchItemResponse';
import NewBatchResponse from './model/NewBatchResponse';
import NewCard from './model/NewCard';
import NewCardResponse from './model/NewCardResponse';
import NewPaymentRequest from './model/NewPaymentRequest';
import NewPaymentRequestResponse from './model/NewPaymentRequestResponse';
import OrderDetails from './model/OrderDetails';
import Payee from './model/Payee';
import PayeeBankAccounts from './model/PayeeBankAccounts';
import PaymentRequest from './model/PaymentRequest';
import ProprietarySchemeDetailsInner from './model/ProprietarySchemeDetailsInner';
import RelatedCard from './model/RelatedCard';
import RelatedParty from './model/RelatedParty';
import RelatedPartyCardPayment from './model/RelatedPartyCardPayment';
import RelatedPartyCardPaymentCardMerchant from './model/RelatedPartyCardPaymentCardMerchant';
import RelatedPartyExternalAccount from './model/RelatedPartyExternalAccount';
import RelatedPartyExternalAccountAccount from './model/RelatedPartyExternalAccountAccount';
import RelatedPartyFireAccount from './model/RelatedPartyFireAccount';
import RelatedPartyFireAccountAccount from './model/RelatedPartyFireAccountAccount';
import RelatedPartyPayee from './model/RelatedPartyPayee';
import RelatedPartyPayeeAccount from './model/RelatedPartyPayeeAccount';
import Transaction from './model/Transaction';
import User from './model/User';
import APIApi from './api/APIApi';
import AccountsApi from './api/AccountsApi';
import AuthenticationApi from './api/AuthenticationApi';
import CardsApi from './api/CardsApi';
import DirectDebitsApi from './api/DirectDebitsApi';
import OpenBankingApi from './api/OpenBankingApi';
import PayeeBankAccountsApi from './api/PayeeBankAccountsApi';
import PaymentBatchesApi from './api/PaymentBatchesApi';
import TransactionsApi from './api/TransactionsApi';
import UsersApi from './api/UsersApi';


/**
* The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FireFinancialServicesBusinessApi = require('index'); // See note below*.
* var xxxSvc = new FireFinancialServicesBusinessApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FireFinancialServicesBusinessApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FireFinancialServicesBusinessApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FireFinancialServicesBusinessApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The Accounts model constructor.
     * @property {module:model/Accounts}
     */
    Accounts,

    /**
     * The AddBankTransferBatchPaymentRequest model constructor.
     * @property {module:model/AddBankTransferBatchPaymentRequest}
     */
    AddBankTransferBatchPaymentRequest,

    /**
     * The ApiApplication model constructor.
     * @property {module:model/ApiApplication}
     */
    ApiApplication,

    /**
     * The Aspsp model constructor.
     * @property {module:model/Aspsp}
     */
    Aspsp,

    /**
     * The Aspsps model constructor.
     * @property {module:model/Aspsps}
     */
    Aspsps,

    /**
     * The Authentication model constructor.
     * @property {module:model/Authentication}
     */
    Authentication,

    /**
     * The Batch model constructor.
     * @property {module:model/Batch}
     */
    Batch,

    /**
     * The BatchApprovers model constructor.
     * @property {module:model/BatchApprovers}
     */
    BatchApprovers,

    /**
     * The BatchApproversApprovalsInner model constructor.
     * @property {module:model/BatchApproversApprovalsInner}
     */
    BatchApproversApprovalsInner,

    /**
     * The BatchItem model constructor.
     * @property {module:model/BatchItem}
     */
    BatchItem,

    /**
     * The BatchItemBankTransferMode1 model constructor.
     * @property {module:model/BatchItemBankTransferMode1}
     */
    BatchItemBankTransferMode1,

    /**
     * The BatchItemBankTransferMode2 model constructor.
     * @property {module:model/BatchItemBankTransferMode2}
     */
    BatchItemBankTransferMode2,

    /**
     * The BatchItemDetails model constructor.
     * @property {module:model/BatchItemDetails}
     */
    BatchItemDetails,

    /**
     * The BatchItemInternalTransfer model constructor.
     * @property {module:model/BatchItemInternalTransfer}
     */
    BatchItemInternalTransfer,

    /**
     * The BatchItemInternationalTransferMode1 model constructor.
     * @property {module:model/BatchItemInternationalTransferMode1}
     */
    BatchItemInternationalTransferMode1,

    /**
     * The BatchItemResult model constructor.
     * @property {module:model/BatchItemResult}
     */
    BatchItemResult,

    /**
     * The BatchItems model constructor.
     * @property {module:model/BatchItems}
     */
    BatchItems,

    /**
     * The Card model constructor.
     * @property {module:model/Card}
     */
    Card,

    /**
     * The CardTransactionsv1 model constructor.
     * @property {module:model/CardTransactionsv1}
     */
    CardTransactionsv1,

    /**
     * The CardTransactionsv3 model constructor.
     * @property {module:model/CardTransactionsv3}
     */
    CardTransactionsv3,

    /**
     * The CardTransactionsv3LinksInner model constructor.
     * @property {module:model/CardTransactionsv3LinksInner}
     */
    CardTransactionsv3LinksInner,

    /**
     * The Cards model constructor.
     * @property {module:model/Cards}
     */
    Cards,

    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country,

    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency,

    /**
     * The DirectDebit model constructor.
     * @property {module:model/DirectDebit}
     */
    DirectDebit,

    /**
     * The DirectDebitDetails model constructor.
     * @property {module:model/DirectDebitDetails}
     */
    DirectDebitDetails,

    /**
     * The DirectDebits model constructor.
     * @property {module:model/DirectDebits}
     */
    DirectDebits,

    /**
     * The FxTrade model constructor.
     * @property {module:model/FxTrade}
     */
    FxTrade,

    /**
     * The Mandate model constructor.
     * @property {module:model/Mandate}
     */
    Mandate,

    /**
     * The Mandates model constructor.
     * @property {module:model/Mandates}
     */
    Mandates,

    /**
     * The MobileApplication model constructor.
     * @property {module:model/MobileApplication}
     */
    MobileApplication,

    /**
     * The NewAccount model constructor.
     * @property {module:model/NewAccount}
     */
    NewAccount,

    /**
     * The NewApiApplication model constructor.
     * @property {module:model/NewApiApplication}
     */
    NewApiApplication,

    /**
     * The NewBatch model constructor.
     * @property {module:model/NewBatch}
     */
    NewBatch,

    /**
     * The NewBatchItemResponse model constructor.
     * @property {module:model/NewBatchItemResponse}
     */
    NewBatchItemResponse,

    /**
     * The NewBatchResponse model constructor.
     * @property {module:model/NewBatchResponse}
     */
    NewBatchResponse,

    /**
     * The NewCard model constructor.
     * @property {module:model/NewCard}
     */
    NewCard,

    /**
     * The NewCardResponse model constructor.
     * @property {module:model/NewCardResponse}
     */
    NewCardResponse,

    /**
     * The NewPaymentRequest model constructor.
     * @property {module:model/NewPaymentRequest}
     */
    NewPaymentRequest,

    /**
     * The NewPaymentRequestResponse model constructor.
     * @property {module:model/NewPaymentRequestResponse}
     */
    NewPaymentRequestResponse,

    /**
     * The OrderDetails model constructor.
     * @property {module:model/OrderDetails}
     */
    OrderDetails,

    /**
     * The Payee model constructor.
     * @property {module:model/Payee}
     */
    Payee,

    /**
     * The PayeeBankAccounts model constructor.
     * @property {module:model/PayeeBankAccounts}
     */
    PayeeBankAccounts,

    /**
     * The PaymentRequest model constructor.
     * @property {module:model/PaymentRequest}
     */
    PaymentRequest,

    /**
     * The ProprietarySchemeDetailsInner model constructor.
     * @property {module:model/ProprietarySchemeDetailsInner}
     */
    ProprietarySchemeDetailsInner,

    /**
     * The RelatedCard model constructor.
     * @property {module:model/RelatedCard}
     */
    RelatedCard,

    /**
     * The RelatedParty model constructor.
     * @property {module:model/RelatedParty}
     */
    RelatedParty,

    /**
     * The RelatedPartyCardPayment model constructor.
     * @property {module:model/RelatedPartyCardPayment}
     */
    RelatedPartyCardPayment,

    /**
     * The RelatedPartyCardPaymentCardMerchant model constructor.
     * @property {module:model/RelatedPartyCardPaymentCardMerchant}
     */
    RelatedPartyCardPaymentCardMerchant,

    /**
     * The RelatedPartyExternalAccount model constructor.
     * @property {module:model/RelatedPartyExternalAccount}
     */
    RelatedPartyExternalAccount,

    /**
     * The RelatedPartyExternalAccountAccount model constructor.
     * @property {module:model/RelatedPartyExternalAccountAccount}
     */
    RelatedPartyExternalAccountAccount,

    /**
     * The RelatedPartyFireAccount model constructor.
     * @property {module:model/RelatedPartyFireAccount}
     */
    RelatedPartyFireAccount,

    /**
     * The RelatedPartyFireAccountAccount model constructor.
     * @property {module:model/RelatedPartyFireAccountAccount}
     */
    RelatedPartyFireAccountAccount,

    /**
     * The RelatedPartyPayee model constructor.
     * @property {module:model/RelatedPartyPayee}
     */
    RelatedPartyPayee,

    /**
     * The RelatedPartyPayeeAccount model constructor.
     * @property {module:model/RelatedPartyPayeeAccount}
     */
    RelatedPartyPayeeAccount,

    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The APIApi service constructor.
    * @property {module:api/APIApi}
    */
    APIApi,

    /**
    * The AccountsApi service constructor.
    * @property {module:api/AccountsApi}
    */
    AccountsApi,

    /**
    * The AuthenticationApi service constructor.
    * @property {module:api/AuthenticationApi}
    */
    AuthenticationApi,

    /**
    * The CardsApi service constructor.
    * @property {module:api/CardsApi}
    */
    CardsApi,

    /**
    * The DirectDebitsApi service constructor.
    * @property {module:api/DirectDebitsApi}
    */
    DirectDebitsApi,

    /**
    * The OpenBankingApi service constructor.
    * @property {module:api/OpenBankingApi}
    */
    OpenBankingApi,

    /**
    * The PayeeBankAccountsApi service constructor.
    * @property {module:api/PayeeBankAccountsApi}
    */
    PayeeBankAccountsApi,

    /**
    * The PaymentBatchesApi service constructor.
    * @property {module:api/PaymentBatchesApi}
    */
    PaymentBatchesApi,

    /**
    * The TransactionsApi service constructor.
    * @property {module:api/TransactionsApi}
    */
    TransactionsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
