/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DirectDebit from '../model/DirectDebit';
import DirectDebits from '../model/DirectDebits';
import Mandate from '../model/Mandate';
import Mandates from '../model/Mandates';

/**
* DirectDebits service.
* @module api/DirectDebitsApi
* @version 1.0
*/
export default class DirectDebitsApi {

    /**
    * Constructs a new DirectDebitsApi. 
    * @alias module:api/DirectDebitsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the activateMandate operation.
     * @callback module:api/DirectDebitsApi~activateMandateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activate a direct debit mandate
     * This endpoint can only be used to activate a direct debit mandate when it is in the status REJECT_REQUESTED (even if the account has direct debits disabled). This action will also enable the account for direct debits if it was previously set to be disabled. The permision needed to access this endpoint is PERM_BUSINESS_POST_MANDATE_ACTIVATE 
     * @param {String} mandateUuid 
     * @param {module:api/DirectDebitsApi~activateMandateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    activateMandate(mandateUuid, callback) {
      let postBody = null;
      // verify the required parameter 'mandateUuid' is set
      if (mandateUuid === undefined || mandateUuid === null) {
        throw new Error("Missing the required parameter 'mandateUuid' when calling activateMandate");
      }

      let pathParams = {
        'mandateUuid': mandateUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/mandates/{mandateUuid}/activate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cancelMandateByUuid operation.
     * @callback module:api/DirectDebitsApi~cancelMandateByUuidCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel a direct debit mandate
     * This endpoint allows you to cancel a direct debit mandate. The permision needed to access this endpoint is PERM_BUSINESS_POST_MANDATE_CANCEL 
     * @param {String} mandateUuid 
     * @param {module:api/DirectDebitsApi~cancelMandateByUuidCallback} callback The callback function, accepting three arguments: error, data, response
     */
    cancelMandateByUuid(mandateUuid, callback) {
      let postBody = null;
      // verify the required parameter 'mandateUuid' is set
      if (mandateUuid === undefined || mandateUuid === null) {
        throw new Error("Missing the required parameter 'mandateUuid' when calling cancelMandateByUuid");
      }

      let pathParams = {
        'mandateUuid': mandateUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/mandates/{mandateUuid}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDirectDebitByUuid operation.
     * @callback module:api/DirectDebitsApi~getDirectDebitByUuidCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DirectDebit} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the details of a direct debit
     * Retrieve all details of a single direct debit collection/payment, whether successful or not. The permision needed to access this endpoint is **PERM_BUSINESS_GET_DIRECT_DEBIT** 
     * @param {String} directDebitUuid 
     * @param {module:api/DirectDebitsApi~getDirectDebitByUuidCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DirectDebit}
     */
    getDirectDebitByUuid(directDebitUuid, callback) {
      let postBody = null;
      // verify the required parameter 'directDebitUuid' is set
      if (directDebitUuid === undefined || directDebitUuid === null) {
        throw new Error("Missing the required parameter 'directDebitUuid' when calling getDirectDebitByUuid");
      }

      let pathParams = {
        'directDebitUuid': directDebitUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DirectDebit;
      return this.apiClient.callApi(
        '/v1/directdebits/{directDebitUuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDirectDebitMandates operation.
     * @callback module:api/DirectDebitsApi~getDirectDebitMandatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Mandates} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all direct debit mandates
     * The permision needed to access this endpoint is PERM_BUSINESS_GET_MANDATES 
     * @param {module:api/DirectDebitsApi~getDirectDebitMandatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Mandates}
     */
    getDirectDebitMandates(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Mandates;
      return this.apiClient.callApi(
        '/v1/mandates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDirectDebitsForMandateUuid operation.
     * @callback module:api/DirectDebitsApi~getDirectDebitsForMandateUuidCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DirectDebits} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all DD payments associated with a direct debit mandate
     * Retrieve all direct debit payments associated with a direct debit mandate. The permision needed to access this endpoint is PERM_BUSINESS_GET_DIRECT_DEBITS 
     * @param {String} mandateUuid The mandate UUID to retrieve
     * @param {module:api/DirectDebitsApi~getDirectDebitsForMandateUuidCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DirectDebits}
     */
    getDirectDebitsForMandateUuid(mandateUuid, callback) {
      let postBody = null;
      // verify the required parameter 'mandateUuid' is set
      if (mandateUuid === undefined || mandateUuid === null) {
        throw new Error("Missing the required parameter 'mandateUuid' when calling getDirectDebitsForMandateUuid");
      }

      let pathParams = {
      };
      let queryParams = {
        'mandateUuid': mandateUuid
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DirectDebits;
      return this.apiClient.callApi(
        '/v1/directdebits', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMandate operation.
     * @callback module:api/DirectDebitsApi~getMandateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Mandate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get direct debit mandate details
     * Retrieve all details for a direct debit mandate. The permision needed to access this endpoint is PERM_BUSINESS_GET_MANDATE 
     * @param {String} mandateUuid 
     * @param {module:api/DirectDebitsApi~getMandateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Mandate}
     */
    getMandate(mandateUuid, callback) {
      let postBody = null;
      // verify the required parameter 'mandateUuid' is set
      if (mandateUuid === undefined || mandateUuid === null) {
        throw new Error("Missing the required parameter 'mandateUuid' when calling getMandate");
      }

      let pathParams = {
        'mandateUuid': mandateUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Mandate;
      return this.apiClient.callApi(
        '/v1/mandates/{mandateUuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rejectDirectDebit operation.
     * @callback module:api/DirectDebitsApi~rejectDirectDebitCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reject a direct debit payment
     * This endpoint allows you to reject a direct debit payment where the status is still set to RECEIVED. Permission name PERM_BUSINESS_POST_DIRECT_DEBIT_REJECT 
     * @param {String} directDebitUuid 
     * @param {module:api/DirectDebitsApi~rejectDirectDebitCallback} callback The callback function, accepting three arguments: error, data, response
     */
    rejectDirectDebit(directDebitUuid, callback) {
      let postBody = null;
      // verify the required parameter 'directDebitUuid' is set
      if (directDebitUuid === undefined || directDebitUuid === null) {
        throw new Error("Missing the required parameter 'directDebitUuid' when calling rejectDirectDebit");
      }

      let pathParams = {
        'directDebitUuid': directDebitUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/directdebits/{directDebitUuid}/reject', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMandateAlias operation.
     * @callback module:api/DirectDebitsApi~updateMandateAliasCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a direct debit mandate alias
     * Update Direct Debit Mandate Alias The permision needed to access this endpoint is PERM_BUSINESS_PUT_MANDATE 
     * @param {String} mandateUuid 
     * @param {module:api/DirectDebitsApi~updateMandateAliasCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateMandateAlias(mandateUuid, callback) {
      let postBody = null;
      // verify the required parameter 'mandateUuid' is set
      if (mandateUuid === undefined || mandateUuid === null) {
        throw new Error("Missing the required parameter 'mandateUuid' when calling updateMandateAlias");
      }

      let pathParams = {
        'mandateUuid': mandateUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/mandates/{mandateUuid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
