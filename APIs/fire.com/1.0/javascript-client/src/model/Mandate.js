/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';

/**
 * The Mandate model module.
 * @module model/Mandate
 * @version 1.0
 */
class Mandate {
    /**
     * Constructs a new <code>Mandate</code>.
     * @alias module:model/Mandate
     */
    constructor() { 
        
        Mandate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Mandate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Mandate} obj Optional instance to populate.
     * @return {module:model/Mandate} The populated <code>Mandate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Mandate();

            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = Currency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('dateCancelled')) {
                obj['dateCancelled'] = ApiClient.convertToType(data['dateCancelled'], 'Date');
            }
            if (data.hasOwnProperty('dateCompleted')) {
                obj['dateCompleted'] = ApiClient.convertToType(data['dateCompleted'], 'Date');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('fireRejectionReason')) {
                obj['fireRejectionReason'] = ApiClient.convertToType(data['fireRejectionReason'], 'String');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('latestDirectDebitAmount')) {
                obj['latestDirectDebitAmount'] = ApiClient.convertToType(data['latestDirectDebitAmount'], 'Number');
            }
            if (data.hasOwnProperty('latestDirectDebitDate')) {
                obj['latestDirectDebitDate'] = ApiClient.convertToType(data['latestDirectDebitDate'], 'Date');
            }
            if (data.hasOwnProperty('mandateReference')) {
                obj['mandateReference'] = ApiClient.convertToType(data['mandateReference'], 'String');
            }
            if (data.hasOwnProperty('mandateUuid')) {
                obj['mandateUuid'] = ApiClient.convertToType(data['mandateUuid'], 'String');
            }
            if (data.hasOwnProperty('numberOfDirectDebitCollected')) {
                obj['numberOfDirectDebitCollected'] = ApiClient.convertToType(data['numberOfDirectDebitCollected'], 'Number');
            }
            if (data.hasOwnProperty('originatorAlias')) {
                obj['originatorAlias'] = ApiClient.convertToType(data['originatorAlias'], 'String');
            }
            if (data.hasOwnProperty('originatorLogoUrlLarge')) {
                obj['originatorLogoUrlLarge'] = ApiClient.convertToType(data['originatorLogoUrlLarge'], 'String');
            }
            if (data.hasOwnProperty('originatorLogoUrlSmall')) {
                obj['originatorLogoUrlSmall'] = ApiClient.convertToType(data['originatorLogoUrlSmall'], 'String');
            }
            if (data.hasOwnProperty('originatorName')) {
                obj['originatorName'] = ApiClient.convertToType(data['originatorName'], 'String');
            }
            if (data.hasOwnProperty('originatorReference')) {
                obj['originatorReference'] = ApiClient.convertToType(data['originatorReference'], 'String');
            }
            if (data.hasOwnProperty('schemeCancelReason')) {
                obj['schemeCancelReason'] = ApiClient.convertToType(data['schemeCancelReason'], 'String');
            }
            if (data.hasOwnProperty('schemeCancelReasonCode')) {
                obj['schemeCancelReasonCode'] = ApiClient.convertToType(data['schemeCancelReasonCode'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('targetIcan')) {
                obj['targetIcan'] = ApiClient.convertToType(data['targetIcan'], 'Number');
            }
            if (data.hasOwnProperty('valueOfDirectDebitCollected')) {
                obj['valueOfDirectDebitCollected'] = ApiClient.convertToType(data['valueOfDirectDebitCollected'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Mandate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Mandate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alias'] && !(typeof data['alias'] === 'string' || data['alias'] instanceof String)) {
            throw new Error("Expected the field `alias` to be a primitive type in the JSON string but got " + data['alias']);
        }
        // validate the optional field `currency`
        if (data['currency']) { // data not null
          Currency.validateJSON(data['currency']);
        }
        // ensure the json data is a string
        if (data['fireRejectionReason'] && !(typeof data['fireRejectionReason'] === 'string' || data['fireRejectionReason'] instanceof String)) {
            throw new Error("Expected the field `fireRejectionReason` to be a primitive type in the JSON string but got " + data['fireRejectionReason']);
        }
        // ensure the json data is a string
        if (data['mandateReference'] && !(typeof data['mandateReference'] === 'string' || data['mandateReference'] instanceof String)) {
            throw new Error("Expected the field `mandateReference` to be a primitive type in the JSON string but got " + data['mandateReference']);
        }
        // ensure the json data is a string
        if (data['mandateUuid'] && !(typeof data['mandateUuid'] === 'string' || data['mandateUuid'] instanceof String)) {
            throw new Error("Expected the field `mandateUuid` to be a primitive type in the JSON string but got " + data['mandateUuid']);
        }
        // ensure the json data is a string
        if (data['originatorAlias'] && !(typeof data['originatorAlias'] === 'string' || data['originatorAlias'] instanceof String)) {
            throw new Error("Expected the field `originatorAlias` to be a primitive type in the JSON string but got " + data['originatorAlias']);
        }
        // ensure the json data is a string
        if (data['originatorLogoUrlLarge'] && !(typeof data['originatorLogoUrlLarge'] === 'string' || data['originatorLogoUrlLarge'] instanceof String)) {
            throw new Error("Expected the field `originatorLogoUrlLarge` to be a primitive type in the JSON string but got " + data['originatorLogoUrlLarge']);
        }
        // ensure the json data is a string
        if (data['originatorLogoUrlSmall'] && !(typeof data['originatorLogoUrlSmall'] === 'string' || data['originatorLogoUrlSmall'] instanceof String)) {
            throw new Error("Expected the field `originatorLogoUrlSmall` to be a primitive type in the JSON string but got " + data['originatorLogoUrlSmall']);
        }
        // ensure the json data is a string
        if (data['originatorName'] && !(typeof data['originatorName'] === 'string' || data['originatorName'] instanceof String)) {
            throw new Error("Expected the field `originatorName` to be a primitive type in the JSON string but got " + data['originatorName']);
        }
        // ensure the json data is a string
        if (data['originatorReference'] && !(typeof data['originatorReference'] === 'string' || data['originatorReference'] instanceof String)) {
            throw new Error("Expected the field `originatorReference` to be a primitive type in the JSON string but got " + data['originatorReference']);
        }
        // ensure the json data is a string
        if (data['schemeCancelReason'] && !(typeof data['schemeCancelReason'] === 'string' || data['schemeCancelReason'] instanceof String)) {
            throw new Error("Expected the field `schemeCancelReason` to be a primitive type in the JSON string but got " + data['schemeCancelReason']);
        }
        // ensure the json data is a string
        if (data['schemeCancelReasonCode'] && !(typeof data['schemeCancelReasonCode'] === 'string' || data['schemeCancelReasonCode'] instanceof String)) {
            throw new Error("Expected the field `schemeCancelReasonCode` to be a primitive type in the JSON string but got " + data['schemeCancelReasonCode']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The name of the alias
 * @member {String} alias
 */
Mandate.prototype['alias'] = undefined;

/**
 * @member {module:model/Currency} currency
 */
Mandate.prototype['currency'] = undefined;

/**
 * Date the direct debit was canceled. Milliseconds since the epoch (1970).
 * @member {Date} dateCancelled
 */
Mandate.prototype['dateCancelled'] = undefined;

/**
 * Date the direct debit was completed. Milliseconds since the epoch (1970).
 * @member {Date} dateCompleted
 */
Mandate.prototype['dateCompleted'] = undefined;

/**
 * Date the direct debit was created. Milliseconds since the epoch (1970).
 * @member {Date} dateCreated
 */
Mandate.prototype['dateCreated'] = undefined;

/**
 * Rejection reason if transaction is rejected
 * @member {module:model/Mandate.FireRejectionReasonEnum} fireRejectionReason
 */
Mandate.prototype['fireRejectionReason'] = undefined;

/**
 * Date the direct debit was last updated. Milliseconds since the epoch (1970).
 * @member {Date} lastUpdated
 */
Mandate.prototype['lastUpdated'] = undefined;

/**
 * The value of largest direct debit collected
 * @member {Number} latestDirectDebitAmount
 */
Mandate.prototype['latestDirectDebitAmount'] = undefined;

/**
 * The date of latest direct debit collected
 * @member {Date} latestDirectDebitDate
 */
Mandate.prototype['latestDirectDebitDate'] = undefined;

/**
 * the reference of the mandate
 * @member {String} mandateReference
 */
Mandate.prototype['mandateReference'] = undefined;

/**
 * The UUID for the mandate
 * @member {String} mandateUuid
 */
Mandate.prototype['mandateUuid'] = undefined;

/**
 * The number of direct debits collected
 * @member {Number} numberOfDirectDebitCollected
 */
Mandate.prototype['numberOfDirectDebitCollected'] = undefined;

/**
 * The name of the alias
 * @member {String} originatorAlias
 */
Mandate.prototype['originatorAlias'] = undefined;

/**
 * Logo url from party who sets up the direct debit.
 * @member {String} originatorLogoUrlLarge
 */
Mandate.prototype['originatorLogoUrlLarge'] = undefined;

/**
 * Logo url from party who sets up the direct debit.
 * @member {String} originatorLogoUrlSmall
 */
Mandate.prototype['originatorLogoUrlSmall'] = undefined;

/**
 * The creator of the party who sets up the direct debit.
 * @member {String} originatorName
 */
Mandate.prototype['originatorName'] = undefined;

/**
 * Set by party who sets up the direct debit.
 * @member {String} originatorReference
 */
Mandate.prototype['originatorReference'] = undefined;

/**
 * Reason for cancelation
 * @member {String} schemeCancelReason
 */
Mandate.prototype['schemeCancelReason'] = undefined;

/**
 * The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.
 * @member {String} schemeCancelReasonCode
 */
Mandate.prototype['schemeCancelReasonCode'] = undefined;

/**
 * The status of the mandate. * 'CREATED' * 'LIVE' * 'REJECT_REQUESTED' * 'REJECT_RECORD_IN_PROGRESS' * 'REJECT_RECORDED' * 'REJECT_FILE_CREATED' * 'REJECT_FILE_SENT' * 'CANCEL_REQUESTED' * 'CANCEL_RECORD_IN_PROGRESS' * 'CANCEL_RECORDED' * 'CANCEL_FILE_CREATED' * 'CANCEL_FILE_SENT' * 'COMPLETE' * 'DORMANT' 
 * @member {module:model/Mandate.StatusEnum} status
 */
Mandate.prototype['status'] = undefined;

/**
 * Identifier for the fire.com account (assigned by fire.com)
 * @member {Number} targetIcan
 */
Mandate.prototype['targetIcan'] = undefined;

/**
 * The value of direct debits collected
 * @member {Number} valueOfDirectDebitCollected
 */
Mandate.prototype['valueOfDirectDebitCollected'] = undefined;





/**
 * Allowed values for the <code>fireRejectionReason</code> property.
 * @enum {String}
 * @readonly
 */
Mandate['FireRejectionReasonEnum'] = {

    /**
     * value: "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS"
     * @const
     */
    "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS": "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",

    /**
     * value: "DDIC"
     * @const
     */
    "DDIC": "DDIC",

    /**
     * value: "ACCOUNT_NOT_FOUND"
     * @const
     */
    "ACCOUNT_NOT_FOUND": "ACCOUNT_NOT_FOUND",

    /**
     * value: "ACCOUNT_NOT_LIVE"
     * @const
     */
    "ACCOUNT_NOT_LIVE": "ACCOUNT_NOT_LIVE",

    /**
     * value: "CUSTOMER_NOT_FOUND"
     * @const
     */
    "CUSTOMER_NOT_FOUND": "CUSTOMER_NOT_FOUND",

    /**
     * value: "BUSINESS_NOT_LIVE"
     * @const
     */
    "BUSINESS_NOT_LIVE": "BUSINESS_NOT_LIVE",

    /**
     * value: "BUSINESS_NOT_FULL"
     * @const
     */
    "BUSINESS_NOT_FULL": "BUSINESS_NOT_FULL",

    /**
     * value: "PERSONAL_USER_NOT_LIVE"
     * @const
     */
    "PERSONAL_USER_NOT_LIVE": "PERSONAL_USER_NOT_LIVE",

    /**
     * value: "PERSONAL_USER_NOT_FULL"
     * @const
     */
    "PERSONAL_USER_NOT_FULL": "PERSONAL_USER_NOT_FULL",

    /**
     * value: "MANDATE_ALREADY_EXISTS"
     * @const
     */
    "MANDATE_ALREADY_EXISTS": "MANDATE_ALREADY_EXISTS",

    /**
     * value: "MANDATE_WITH_DIFERENT_ACCOUNT"
     * @const
     */
    "MANDATE_WITH_DIFERENT_ACCOUNT": "MANDATE_WITH_DIFERENT_ACCOUNT",

    /**
     * value: "NULL_MANDATE_REFERENCE"
     * @const
     */
    "NULL_MANDATE_REFERENCE": "NULL_MANDATE_REFERENCE",

    /**
     * value: "INVALID_ACCOUNT_CURRENCY"
     * @const
     */
    "INVALID_ACCOUNT_CURRENCY": "INVALID_ACCOUNT_CURRENCY",

    /**
     * value: "INVALID_MANDATE_REFERENCE"
     * @const
     */
    "INVALID_MANDATE_REFERENCE": "INVALID_MANDATE_REFERENCE",

    /**
     * value: "REQUESTED_BY_CUSTOMER_VIA_SUPPORT"
     * @const
     */
    "REQUESTED_BY_CUSTOMER_VIA_SUPPORT": "REQUESTED_BY_CUSTOMER_VIA_SUPPORT",

    /**
     * value: "CUSTOMER_ACCOUNT_CLOSED"
     * @const
     */
    "CUSTOMER_ACCOUNT_CLOSED": "CUSTOMER_ACCOUNT_CLOSED",

    /**
     * value: "CUSTOMER_DECEASED"
     * @const
     */
    "CUSTOMER_DECEASED": "CUSTOMER_DECEASED",

    /**
     * value: "ACCOUNT_TRANSFERRED"
     * @const
     */
    "ACCOUNT_TRANSFERRED": "ACCOUNT_TRANSFERRED",

    /**
     * value: "MANDATE_NOT_FOUND"
     * @const
     */
    "MANDATE_NOT_FOUND": "MANDATE_NOT_FOUND",

    /**
     * value: "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT"
     * @const
     */
    "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT": "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT",

    /**
     * value: "INVALID_ACCOUNT_TYPE"
     * @const
     */
    "INVALID_ACCOUNT_TYPE": "INVALID_ACCOUNT_TYPE",

    /**
     * value: "MANDATE_EXPIRED"
     * @const
     */
    "MANDATE_EXPIRED": "MANDATE_EXPIRED",

    /**
     * value: "MANDATE_CANCELLED"
     * @const
     */
    "MANDATE_CANCELLED": "MANDATE_CANCELLED",

    /**
     * value: "REQUESTED_BY_CUSTOMER"
     * @const
     */
    "REQUESTED_BY_CUSTOMER": "REQUESTED_BY_CUSTOMER"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Mandate['StatusEnum'] = {

    /**
     * value: "CREATED"
     * @const
     */
    "CREATED": "CREATED",

    /**
     * value: "LIVE"
     * @const
     */
    "LIVE": "LIVE",

    /**
     * value: "REJECT_REQUESTED"
     * @const
     */
    "REJECT_REQUESTED": "REJECT_REQUESTED",

    /**
     * value: "REJECT_RECORD_IN_PROGRESS"
     * @const
     */
    "REJECT_RECORD_IN_PROGRESS": "REJECT_RECORD_IN_PROGRESS",

    /**
     * value: "REJECT_RECORDED"
     * @const
     */
    "REJECT_RECORDED": "REJECT_RECORDED",

    /**
     * value: "REJECT_FILE_CREATED"
     * @const
     */
    "REJECT_FILE_CREATED": "REJECT_FILE_CREATED",

    /**
     * value: "REJECT_FILE_SENT"
     * @const
     */
    "REJECT_FILE_SENT": "REJECT_FILE_SENT",

    /**
     * value: "CANCEL_REQUESTED"
     * @const
     */
    "CANCEL_REQUESTED": "CANCEL_REQUESTED",

    /**
     * value: "CANCEL_RECORD_IN_PROGRESS"
     * @const
     */
    "CANCEL_RECORD_IN_PROGRESS": "CANCEL_RECORD_IN_PROGRESS",

    /**
     * value: "CANCEL_RECORDED"
     * @const
     */
    "CANCEL_RECORDED": "CANCEL_RECORDED",

    /**
     * value: "CANCEL_FILE_CREATED"
     * @const
     */
    "CANCEL_FILE_CREATED": "CANCEL_FILE_CREATED",

    /**
     * value: "CANCEL_FILE_SENT"
     * @const
     */
    "CANCEL_FILE_SENT": "CANCEL_FILE_SENT",

    /**
     * value: "COMPLETE"
     * @const
     */
    "COMPLETE": "COMPLETE",

    /**
     * value: "DORMANT"
     * @const
     */
    "DORMANT": "DORMANT"
};



export default Mandate;

