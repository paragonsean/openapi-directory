/**
 * Fire Financial Services Business API
 * The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.  The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.   The API exposes 3 main areas of functionality: financial functions, service information and service configuration. ## Financial Functions These functions provide access to your account details, transactions, payee accounts, payment initiation etc. ## Service Functions These provide information about the fees and limits applied to your account. ## Service configuration These provide information about your service configs - applications, webhooks, API tokens, etc. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: api@fire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DirectDebitDetails model module.
 * @module model/DirectDebitDetails
 * @version 1.0
 */
class DirectDebitDetails {
    /**
     * Constructs a new <code>DirectDebitDetails</code>.
     * Details of the direct debit (if applicable)
     * @alias module:model/DirectDebitDetails
     */
    constructor() { 
        
        DirectDebitDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DirectDebitDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectDebitDetails} obj Optional instance to populate.
     * @return {module:model/DirectDebitDetails} The populated <code>DirectDebitDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectDebitDetails();

            if (data.hasOwnProperty('directDebitReference')) {
                obj['directDebitReference'] = ApiClient.convertToType(data['directDebitReference'], 'String');
            }
            if (data.hasOwnProperty('directDebitUuid')) {
                obj['directDebitUuid'] = ApiClient.convertToType(data['directDebitUuid'], 'String');
            }
            if (data.hasOwnProperty('mandateReference')) {
                obj['mandateReference'] = ApiClient.convertToType(data['mandateReference'], 'String');
            }
            if (data.hasOwnProperty('mandateUUid')) {
                obj['mandateUUid'] = ApiClient.convertToType(data['mandateUUid'], 'String');
            }
            if (data.hasOwnProperty('mandateUuid')) {
                obj['mandateUuid'] = ApiClient.convertToType(data['mandateUuid'], 'String');
            }
            if (data.hasOwnProperty('originatorAlias')) {
                obj['originatorAlias'] = ApiClient.convertToType(data['originatorAlias'], 'String');
            }
            if (data.hasOwnProperty('originatorLogoUrlLarge')) {
                obj['originatorLogoUrlLarge'] = ApiClient.convertToType(data['originatorLogoUrlLarge'], 'String');
            }
            if (data.hasOwnProperty('originatorLogoUrlSmall')) {
                obj['originatorLogoUrlSmall'] = ApiClient.convertToType(data['originatorLogoUrlSmall'], 'String');
            }
            if (data.hasOwnProperty('originatorName')) {
                obj['originatorName'] = ApiClient.convertToType(data['originatorName'], 'String');
            }
            if (data.hasOwnProperty('originatorReference')) {
                obj['originatorReference'] = ApiClient.convertToType(data['originatorReference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectDebitDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectDebitDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['directDebitReference'] && !(typeof data['directDebitReference'] === 'string' || data['directDebitReference'] instanceof String)) {
            throw new Error("Expected the field `directDebitReference` to be a primitive type in the JSON string but got " + data['directDebitReference']);
        }
        // ensure the json data is a string
        if (data['directDebitUuid'] && !(typeof data['directDebitUuid'] === 'string' || data['directDebitUuid'] instanceof String)) {
            throw new Error("Expected the field `directDebitUuid` to be a primitive type in the JSON string but got " + data['directDebitUuid']);
        }
        // ensure the json data is a string
        if (data['mandateReference'] && !(typeof data['mandateReference'] === 'string' || data['mandateReference'] instanceof String)) {
            throw new Error("Expected the field `mandateReference` to be a primitive type in the JSON string but got " + data['mandateReference']);
        }
        // ensure the json data is a string
        if (data['mandateUUid'] && !(typeof data['mandateUUid'] === 'string' || data['mandateUUid'] instanceof String)) {
            throw new Error("Expected the field `mandateUUid` to be a primitive type in the JSON string but got " + data['mandateUUid']);
        }
        // ensure the json data is a string
        if (data['mandateUuid'] && !(typeof data['mandateUuid'] === 'string' || data['mandateUuid'] instanceof String)) {
            throw new Error("Expected the field `mandateUuid` to be a primitive type in the JSON string but got " + data['mandateUuid']);
        }
        // ensure the json data is a string
        if (data['originatorAlias'] && !(typeof data['originatorAlias'] === 'string' || data['originatorAlias'] instanceof String)) {
            throw new Error("Expected the field `originatorAlias` to be a primitive type in the JSON string but got " + data['originatorAlias']);
        }
        // ensure the json data is a string
        if (data['originatorLogoUrlLarge'] && !(typeof data['originatorLogoUrlLarge'] === 'string' || data['originatorLogoUrlLarge'] instanceof String)) {
            throw new Error("Expected the field `originatorLogoUrlLarge` to be a primitive type in the JSON string but got " + data['originatorLogoUrlLarge']);
        }
        // ensure the json data is a string
        if (data['originatorLogoUrlSmall'] && !(typeof data['originatorLogoUrlSmall'] === 'string' || data['originatorLogoUrlSmall'] instanceof String)) {
            throw new Error("Expected the field `originatorLogoUrlSmall` to be a primitive type in the JSON string but got " + data['originatorLogoUrlSmall']);
        }
        // ensure the json data is a string
        if (data['originatorName'] && !(typeof data['originatorName'] === 'string' || data['originatorName'] instanceof String)) {
            throw new Error("Expected the field `originatorName` to be a primitive type in the JSON string but got " + data['originatorName']);
        }
        // ensure the json data is a string
        if (data['originatorReference'] && !(typeof data['originatorReference'] === 'string' || data['originatorReference'] instanceof String)) {
            throw new Error("Expected the field `originatorReference` to be a primitive type in the JSON string but got " + data['originatorReference']);
        }

        return true;
    }


}



/**
 * The direct debit reference.
 * @member {String} directDebitReference
 */
DirectDebitDetails.prototype['directDebitReference'] = undefined;

/**
 * The UUID for the direct debit payment
 * @member {String} directDebitUuid
 */
DirectDebitDetails.prototype['directDebitUuid'] = undefined;

/**
 * the reference of the mandate
 * @member {String} mandateReference
 */
DirectDebitDetails.prototype['mandateReference'] = undefined;

/**
 * The UUID for the mandate
 * @member {String} mandateUUid
 */
DirectDebitDetails.prototype['mandateUUid'] = undefined;

/**
 * The UUID for the mandate
 * @member {String} mandateUuid
 */
DirectDebitDetails.prototype['mandateUuid'] = undefined;

/**
 * The Alias of the party who sets up the direct debit.
 * @member {String} originatorAlias
 */
DirectDebitDetails.prototype['originatorAlias'] = undefined;

/**
 * URL pointing to a large version of the Originator Logo (if available)
 * @member {String} originatorLogoUrlLarge
 */
DirectDebitDetails.prototype['originatorLogoUrlLarge'] = undefined;

/**
 * URL pointing to a small version of the Originator Logo (if available)
 * @member {String} originatorLogoUrlSmall
 */
DirectDebitDetails.prototype['originatorLogoUrlSmall'] = undefined;

/**
 * The creator of the party who sets up the direct debit.
 * @member {String} originatorName
 */
DirectDebitDetails.prototype['originatorName'] = undefined;

/**
 * Set by party who sets up the direct debit.
 * @member {String} originatorReference
 */
DirectDebitDetails.prototype['originatorReference'] = undefined;






export default DirectDebitDetails;

