/*
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.IncomingWebhook;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IncomingWebhooksApi
 */
@Disabled
public class IncomingWebhooksApiTest {

    private final IncomingWebhooksApi api = new IncomingWebhooksApi();

    /**
     * Create a new webhook for existing conversation.
     *
     * Create a new webhook. Conversation must exist and creater has to be participant. OauthScopes: WRITE_CONVERSATIONS, MANAGE_CONVERSATIONS
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIncomingWebhookTest() throws ApiException {
        String conversationId = null;
        String name = null;
        String userId = null;
        String description = null;
        IncomingWebhook response = api.createIncomingWebhook(conversationId, name, userId, description);
        // TODO: test validations
    }

    /**
     * Delete an existing webhook
     *
     * Delete a new webhook. Webhook must exist OauthScopes: WRITE_CONVERSATIONS, MANAGE_CONVERSATIONS
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteIncomingWebhookTest() throws ApiException {
        String webhookId = null;
        api.deleteIncomingWebhook(webhookId);
        // TODO: test validations
    }

    /**
     * Get all webhooks of a special user.
     *
     * Get all webhooks of a special user. OauthScopes: READ_CONVERSATIONS, MANAGE_CONVERSATIONS
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIncomingWebhookByUserTest() throws ApiException {
        String userId = null;
        BigDecimal pagesize = null;
        String searchpointer = null;
        List<IncomingWebhook> response = api.getIncomingWebhookByUser(userId, pagesize, searchpointer);
        // TODO: test validations
    }

    /**
     * Post text item for conversation via webhook.
     *
     * Post text items to conversations via slack apps.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postWebhookAsSlackMessageTest() throws ApiException {
        String webhookId = null;
        String fileURL = null;
        String filename = null;
        Boolean markdown = null;
        String subject = null;
        String text = null;
        api.postWebhookAsSlackMessage(webhookId, fileURL, filename, markdown, subject, text);
        // TODO: test validations
    }

}
