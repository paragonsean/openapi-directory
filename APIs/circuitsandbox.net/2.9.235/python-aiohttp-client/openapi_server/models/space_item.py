# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shared_item import SharedItem
from openapi_server.models.space_attachment import SpaceAttachment
from openapi_server.models.space_external_attachment import SpaceExternalAttachment
from openapi_server.models.space_item_preview import SpaceItemPreview
from openapi_server import util


class SpaceItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: str=None, attachments: List[SpaceAttachment]=None, complex: bool=None, content: str=None, creation_time: float=None, creator_id: str=None, deleted_by: str=None, external_attachments: List[SpaceExternalAttachment]=None, form_meta_data: str=None, item_id: str=None, mentioned_users: List[str]=None, modification_time: float=None, number_of_likes: float=None, previews: List[SpaceItemPreview]=None, shared_items: List[SharedItem]=None, space_id: str=None, tenant_id: str=None):
        """SpaceItem - a model defined in OpenAPI

        :param status: The status of this SpaceItem.
        :param attachments: The attachments of this SpaceItem.
        :param complex: The complex of this SpaceItem.
        :param content: The content of this SpaceItem.
        :param creation_time: The creation_time of this SpaceItem.
        :param creator_id: The creator_id of this SpaceItem.
        :param deleted_by: The deleted_by of this SpaceItem.
        :param external_attachments: The external_attachments of this SpaceItem.
        :param form_meta_data: The form_meta_data of this SpaceItem.
        :param item_id: The item_id of this SpaceItem.
        :param mentioned_users: The mentioned_users of this SpaceItem.
        :param modification_time: The modification_time of this SpaceItem.
        :param number_of_likes: The number_of_likes of this SpaceItem.
        :param previews: The previews of this SpaceItem.
        :param shared_items: The shared_items of this SpaceItem.
        :param space_id: The space_id of this SpaceItem.
        :param tenant_id: The tenant_id of this SpaceItem.
        """
        self.openapi_types = {
            'status': str,
            'attachments': List[SpaceAttachment],
            'complex': bool,
            'content': str,
            'creation_time': float,
            'creator_id': str,
            'deleted_by': str,
            'external_attachments': List[SpaceExternalAttachment],
            'form_meta_data': str,
            'item_id': str,
            'mentioned_users': List[str],
            'modification_time': float,
            'number_of_likes': float,
            'previews': List[SpaceItemPreview],
            'shared_items': List[SharedItem],
            'space_id': str,
            'tenant_id': str
        }

        self.attribute_map = {
            'status': 'Status',
            'attachments': 'attachments',
            'complex': 'complex',
            'content': 'content',
            'creation_time': 'creationTime',
            'creator_id': 'creatorId',
            'deleted_by': 'deletedBy',
            'external_attachments': 'externalAttachments',
            'form_meta_data': 'formMetaData',
            'item_id': 'itemId',
            'mentioned_users': 'mentionedUsers',
            'modification_time': 'modificationTime',
            'number_of_likes': 'numberOfLikes',
            'previews': 'previews',
            'shared_items': 'sharedItems',
            'space_id': 'spaceId',
            'tenant_id': 'tenantId'
        }

        self._status = status
        self._attachments = attachments
        self._complex = complex
        self._content = content
        self._creation_time = creation_time
        self._creator_id = creator_id
        self._deleted_by = deleted_by
        self._external_attachments = external_attachments
        self._form_meta_data = form_meta_data
        self._item_id = item_id
        self._mentioned_users = mentioned_users
        self._modification_time = modification_time
        self._number_of_likes = number_of_likes
        self._previews = previews
        self._shared_items = shared_items
        self._space_id = space_id
        self._tenant_id = tenant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpaceItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpaceItem of this SpaceItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this SpaceItem.

        The Status of this item

        :return: The status of this SpaceItem.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SpaceItem.

        The Status of this item

        :param status: The status of this SpaceItem.
        :type status: str
        """

        self._status = status

    @property
    def attachments(self):
        """Gets the attachments of this SpaceItem.

        The list of attachments

        :return: The attachments of this SpaceItem.
        :rtype: List[SpaceAttachment]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this SpaceItem.

        The list of attachments

        :param attachments: The attachments of this SpaceItem.
        :type attachments: List[SpaceAttachment]
        """

        self._attachments = attachments

    @property
    def complex(self):
        """Gets the complex of this SpaceItem.

        Is this item complex

        :return: The complex of this SpaceItem.
        :rtype: bool
        """
        return self._complex

    @complex.setter
    def complex(self, complex):
        """Sets the complex of this SpaceItem.

        Is this item complex

        :param complex: The complex of this SpaceItem.
        :type complex: bool
        """

        self._complex = complex

    @property
    def content(self):
        """Gets the content of this SpaceItem.

        The content of this item

        :return: The content of this SpaceItem.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this SpaceItem.

        The content of this item

        :param content: The content of this SpaceItem.
        :type content: str
        """

        self._content = content

    @property
    def creation_time(self):
        """Gets the creation_time of this SpaceItem.

        The time this item got created

        :return: The creation_time of this SpaceItem.
        :rtype: float
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this SpaceItem.

        The time this item got created

        :param creation_time: The creation_time of this SpaceItem.
        :type creation_time: float
        """

        self._creation_time = creation_time

    @property
    def creator_id(self):
        """Gets the creator_id of this SpaceItem.

        The Id of the creator

        :return: The creator_id of this SpaceItem.
        :rtype: str
        """
        return self._creator_id

    @creator_id.setter
    def creator_id(self, creator_id):
        """Sets the creator_id of this SpaceItem.

        The Id of the creator

        :param creator_id: The creator_id of this SpaceItem.
        :type creator_id: str
        """

        self._creator_id = creator_id

    @property
    def deleted_by(self):
        """Gets the deleted_by of this SpaceItem.

        Incase this item got deleted, the id of the deletor

        :return: The deleted_by of this SpaceItem.
        :rtype: str
        """
        return self._deleted_by

    @deleted_by.setter
    def deleted_by(self, deleted_by):
        """Sets the deleted_by of this SpaceItem.

        Incase this item got deleted, the id of the deletor

        :param deleted_by: The deleted_by of this SpaceItem.
        :type deleted_by: str
        """

        self._deleted_by = deleted_by

    @property
    def external_attachments(self):
        """Gets the external_attachments of this SpaceItem.

        A list of external attachments

        :return: The external_attachments of this SpaceItem.
        :rtype: List[SpaceExternalAttachment]
        """
        return self._external_attachments

    @external_attachments.setter
    def external_attachments(self, external_attachments):
        """Sets the external_attachments of this SpaceItem.

        A list of external attachments

        :param external_attachments: The external_attachments of this SpaceItem.
        :type external_attachments: List[SpaceExternalAttachment]
        """

        self._external_attachments = external_attachments

    @property
    def form_meta_data(self):
        """Gets the form_meta_data of this SpaceItem.

        Incase there is FormMetaData

        :return: The form_meta_data of this SpaceItem.
        :rtype: str
        """
        return self._form_meta_data

    @form_meta_data.setter
    def form_meta_data(self, form_meta_data):
        """Sets the form_meta_data of this SpaceItem.

        Incase there is FormMetaData

        :param form_meta_data: The form_meta_data of this SpaceItem.
        :type form_meta_data: str
        """

        self._form_meta_data = form_meta_data

    @property
    def item_id(self):
        """Gets the item_id of this SpaceItem.

        the Id of this item

        :return: The item_id of this SpaceItem.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this SpaceItem.

        the Id of this item

        :param item_id: The item_id of this SpaceItem.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def mentioned_users(self):
        """Gets the mentioned_users of this SpaceItem.

        A list of userIds who have been mentioned in this item

        :return: The mentioned_users of this SpaceItem.
        :rtype: List[str]
        """
        return self._mentioned_users

    @mentioned_users.setter
    def mentioned_users(self, mentioned_users):
        """Sets the mentioned_users of this SpaceItem.

        A list of userIds who have been mentioned in this item

        :param mentioned_users: The mentioned_users of this SpaceItem.
        :type mentioned_users: List[str]
        """

        self._mentioned_users = mentioned_users

    @property
    def modification_time(self):
        """Gets the modification_time of this SpaceItem.

        the time this item got modified

        :return: The modification_time of this SpaceItem.
        :rtype: float
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this SpaceItem.

        the time this item got modified

        :param modification_time: The modification_time of this SpaceItem.
        :type modification_time: float
        """

        self._modification_time = modification_time

    @property
    def number_of_likes(self):
        """Gets the number_of_likes of this SpaceItem.

        The number of likes

        :return: The number_of_likes of this SpaceItem.
        :rtype: float
        """
        return self._number_of_likes

    @number_of_likes.setter
    def number_of_likes(self, number_of_likes):
        """Sets the number_of_likes of this SpaceItem.

        The number of likes

        :param number_of_likes: The number_of_likes of this SpaceItem.
        :type number_of_likes: float
        """

        self._number_of_likes = number_of_likes

    @property
    def previews(self):
        """Gets the previews of this SpaceItem.

        A list of previews

        :return: The previews of this SpaceItem.
        :rtype: List[SpaceItemPreview]
        """
        return self._previews

    @previews.setter
    def previews(self, previews):
        """Sets the previews of this SpaceItem.

        A list of previews

        :param previews: The previews of this SpaceItem.
        :type previews: List[SpaceItemPreview]
        """

        self._previews = previews

    @property
    def shared_items(self):
        """Gets the shared_items of this SpaceItem.

        missing documentation

        :return: The shared_items of this SpaceItem.
        :rtype: List[SharedItem]
        """
        return self._shared_items

    @shared_items.setter
    def shared_items(self, shared_items):
        """Sets the shared_items of this SpaceItem.

        missing documentation

        :param shared_items: The shared_items of this SpaceItem.
        :type shared_items: List[SharedItem]
        """

        self._shared_items = shared_items

    @property
    def space_id(self):
        """Gets the space_id of this SpaceItem.

        the Id of the space containing this item

        :return: The space_id of this SpaceItem.
        :rtype: str
        """
        return self._space_id

    @space_id.setter
    def space_id(self, space_id):
        """Sets the space_id of this SpaceItem.

        the Id of the space containing this item

        :param space_id: The space_id of this SpaceItem.
        :type space_id: str
        """

        self._space_id = space_id

    @property
    def tenant_id(self):
        """Gets the tenant_id of this SpaceItem.

        the Id of the tenant

        :return: The tenant_id of this SpaceItem.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this SpaceItem.

        the Id of the tenant

        :param tenant_id: The tenant_id of this SpaceItem.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id
