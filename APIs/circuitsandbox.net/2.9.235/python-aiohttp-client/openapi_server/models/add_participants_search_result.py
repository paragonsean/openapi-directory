# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddParticipantsSearchResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, department: str=None, first_name: str=None, is_member: bool=None, job_title: str=None, last_name: str=None, small_image_uri: str=None, tenant_id: str=None, user_id: str=None):
        """AddParticipantsSearchResult - a model defined in OpenAPI

        :param department: The department of this AddParticipantsSearchResult.
        :param first_name: The first_name of this AddParticipantsSearchResult.
        :param is_member: The is_member of this AddParticipantsSearchResult.
        :param job_title: The job_title of this AddParticipantsSearchResult.
        :param last_name: The last_name of this AddParticipantsSearchResult.
        :param small_image_uri: The small_image_uri of this AddParticipantsSearchResult.
        :param tenant_id: The tenant_id of this AddParticipantsSearchResult.
        :param user_id: The user_id of this AddParticipantsSearchResult.
        """
        self.openapi_types = {
            'department': str,
            'first_name': str,
            'is_member': bool,
            'job_title': str,
            'last_name': str,
            'small_image_uri': str,
            'tenant_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'department': 'department',
            'first_name': 'firstName',
            'is_member': 'isMember',
            'job_title': 'jobTitle',
            'last_name': 'lastName',
            'small_image_uri': 'smallImageUri',
            'tenant_id': 'tenantId',
            'user_id': 'userId'
        }

        self._department = department
        self._first_name = first_name
        self._is_member = is_member
        self._job_title = job_title
        self._last_name = last_name
        self._small_image_uri = small_image_uri
        self._tenant_id = tenant_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddParticipantsSearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddParticipantsSearchResult of this AddParticipantsSearchResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def department(self):
        """Gets the department of this AddParticipantsSearchResult.

        The department of the participant

        :return: The department of this AddParticipantsSearchResult.
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this AddParticipantsSearchResult.

        The department of the participant

        :param department: The department of this AddParticipantsSearchResult.
        :type department: str
        """

        self._department = department

    @property
    def first_name(self):
        """Gets the first_name of this AddParticipantsSearchResult.

        The first name of the participant

        :return: The first_name of this AddParticipantsSearchResult.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this AddParticipantsSearchResult.

        The first name of the participant

        :param first_name: The first_name of this AddParticipantsSearchResult.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def is_member(self):
        """Gets the is_member of this AddParticipantsSearchResult.

        is the participant a member, true or false

        :return: The is_member of this AddParticipantsSearchResult.
        :rtype: bool
        """
        return self._is_member

    @is_member.setter
    def is_member(self, is_member):
        """Sets the is_member of this AddParticipantsSearchResult.

        is the participant a member, true or false

        :param is_member: The is_member of this AddParticipantsSearchResult.
        :type is_member: bool
        """

        self._is_member = is_member

    @property
    def job_title(self):
        """Gets the job_title of this AddParticipantsSearchResult.

        The job title of the participant

        :return: The job_title of this AddParticipantsSearchResult.
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this AddParticipantsSearchResult.

        The job title of the participant

        :param job_title: The job_title of this AddParticipantsSearchResult.
        :type job_title: str
        """

        self._job_title = job_title

    @property
    def last_name(self):
        """Gets the last_name of this AddParticipantsSearchResult.

        The last name of the participant

        :return: The last_name of this AddParticipantsSearchResult.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this AddParticipantsSearchResult.

        The last name of the participant

        :param last_name: The last_name of this AddParticipantsSearchResult.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def small_image_uri(self):
        """Gets the small_image_uri of this AddParticipantsSearchResult.

        The uri of the small picture of the participant

        :return: The small_image_uri of this AddParticipantsSearchResult.
        :rtype: str
        """
        return self._small_image_uri

    @small_image_uri.setter
    def small_image_uri(self, small_image_uri):
        """Sets the small_image_uri of this AddParticipantsSearchResult.

        The uri of the small picture of the participant

        :param small_image_uri: The small_image_uri of this AddParticipantsSearchResult.
        :type small_image_uri: str
        """

        self._small_image_uri = small_image_uri

    @property
    def tenant_id(self):
        """Gets the tenant_id of this AddParticipantsSearchResult.

        the tenant id of the participant

        :return: The tenant_id of this AddParticipantsSearchResult.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this AddParticipantsSearchResult.

        the tenant id of the participant

        :param tenant_id: The tenant_id of this AddParticipantsSearchResult.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def user_id(self):
        """Gets the user_id of this AddParticipantsSearchResult.

        The id of the participant

        :return: The user_id of this AddParticipantsSearchResult.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this AddParticipantsSearchResult.

        The id of the participant

        :param user_id: The user_id of this AddParticipantsSearchResult.
        :type user_id: str
        """

        self._user_id = user_id
