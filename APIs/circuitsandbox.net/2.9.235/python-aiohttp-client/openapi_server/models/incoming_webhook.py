# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IncomingWebhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversation_id: str=None, creation_time: float=None, creator_id: str=None, description: str=None, modification_time: float=None, name: str=None, status: str=None, tenant_id: str=None, url: str=None, user_id: str=None, webhook_id: str=None):
        """IncomingWebhook - a model defined in OpenAPI

        :param conversation_id: The conversation_id of this IncomingWebhook.
        :param creation_time: The creation_time of this IncomingWebhook.
        :param creator_id: The creator_id of this IncomingWebhook.
        :param description: The description of this IncomingWebhook.
        :param modification_time: The modification_time of this IncomingWebhook.
        :param name: The name of this IncomingWebhook.
        :param status: The status of this IncomingWebhook.
        :param tenant_id: The tenant_id of this IncomingWebhook.
        :param url: The url of this IncomingWebhook.
        :param user_id: The user_id of this IncomingWebhook.
        :param webhook_id: The webhook_id of this IncomingWebhook.
        """
        self.openapi_types = {
            'conversation_id': str,
            'creation_time': float,
            'creator_id': str,
            'description': str,
            'modification_time': float,
            'name': str,
            'status': str,
            'tenant_id': str,
            'url': str,
            'user_id': str,
            'webhook_id': str
        }

        self.attribute_map = {
            'conversation_id': 'conversationId',
            'creation_time': 'creationTime',
            'creator_id': 'creatorId',
            'description': 'description',
            'modification_time': 'modificationTime',
            'name': 'name',
            'status': 'status',
            'tenant_id': 'tenantId',
            'url': 'url',
            'user_id': 'userId',
            'webhook_id': 'webhookId'
        }

        self._conversation_id = conversation_id
        self._creation_time = creation_time
        self._creator_id = creator_id
        self._description = description
        self._modification_time = modification_time
        self._name = name
        self._status = status
        self._tenant_id = tenant_id
        self._url = url
        self._user_id = user_id
        self._webhook_id = webhook_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IncomingWebhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IncomingWebhook of this IncomingWebhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversation_id(self):
        """Gets the conversation_id of this IncomingWebhook.

        The conversation where the posts go to

        :return: The conversation_id of this IncomingWebhook.
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id):
        """Sets the conversation_id of this IncomingWebhook.

        The conversation where the posts go to

        :param conversation_id: The conversation_id of this IncomingWebhook.
        :type conversation_id: str
        """

        self._conversation_id = conversation_id

    @property
    def creation_time(self):
        """Gets the creation_time of this IncomingWebhook.

        Milliseconds since 1.1.1900 when the hook was created

        :return: The creation_time of this IncomingWebhook.
        :rtype: float
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this IncomingWebhook.

        Milliseconds since 1.1.1900 when the hook was created

        :param creation_time: The creation_time of this IncomingWebhook.
        :type creation_time: float
        """

        self._creation_time = creation_time

    @property
    def creator_id(self):
        """Gets the creator_id of this IncomingWebhook.

        Th e user who created the webhook

        :return: The creator_id of this IncomingWebhook.
        :rtype: str
        """
        return self._creator_id

    @creator_id.setter
    def creator_id(self, creator_id):
        """Sets the creator_id of this IncomingWebhook.

        Th e user who created the webhook

        :param creator_id: The creator_id of this IncomingWebhook.
        :type creator_id: str
        """

        self._creator_id = creator_id

    @property
    def description(self):
        """Gets the description of this IncomingWebhook.

        A short plain text to describe the webhook

        :return: The description of this IncomingWebhook.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this IncomingWebhook.

        A short plain text to describe the webhook

        :param description: The description of this IncomingWebhook.
        :type description: str
        """

        self._description = description

    @property
    def modification_time(self):
        """Gets the modification_time of this IncomingWebhook.

        Milliseconds since 1.1.1900 when the hook was modified

        :return: The modification_time of this IncomingWebhook.
        :rtype: float
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this IncomingWebhook.

        Milliseconds since 1.1.1900 when the hook was modified

        :param modification_time: The modification_time of this IncomingWebhook.
        :type modification_time: float
        """

        self._modification_time = modification_time

    @property
    def name(self):
        """Gets the name of this IncomingWebhook.

        A name to identify the webhook

        :return: The name of this IncomingWebhook.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IncomingWebhook.

        A name to identify the webhook

        :param name: The name of this IncomingWebhook.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this IncomingWebhook.

        Status may be ENABLED or DISABLED. A disabled hook cannot be used

        :return: The status of this IncomingWebhook.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this IncomingWebhook.

        Status may be ENABLED or DISABLED. A disabled hook cannot be used

        :param status: The status of this IncomingWebhook.
        :type status: str
        """

        self._status = status

    @property
    def tenant_id(self):
        """Gets the tenant_id of this IncomingWebhook.

        The tenant where the conversation and users belong to

        :return: The tenant_id of this IncomingWebhook.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this IncomingWebhook.

        The tenant where the conversation and users belong to

        :param tenant_id: The tenant_id of this IncomingWebhook.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def url(self):
        """Gets the url of this IncomingWebhook.

        The url where the webhokk can be used

        :return: The url of this IncomingWebhook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this IncomingWebhook.

        The url where the webhokk can be used

        :param url: The url of this IncomingWebhook.
        :type url: str
        """

        self._url = url

    @property
    def user_id(self):
        """Gets the user_id of this IncomingWebhook.

        The user who will occur as author of the posts

        :return: The user_id of this IncomingWebhook.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this IncomingWebhook.

        The user who will occur as author of the posts

        :param user_id: The user_id of this IncomingWebhook.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def webhook_id(self):
        """Gets the webhook_id of this IncomingWebhook.

        Unique id of the webhook

        :return: The webhook_id of this IncomingWebhook.
        :rtype: str
        """
        return self._webhook_id

    @webhook_id.setter
    def webhook_id(self, webhook_id):
        """Sets the webhook_id of this IncomingWebhook.

        Unique id of the webhook

        :param webhook_id: The webhook_id of this IncomingWebhook.
        :type webhook_id: str
        """

        self._webhook_id = webhook_id
