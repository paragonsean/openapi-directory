# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversation import Conversation
from openapi_server import util


class ConversationsPage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversation_list: List[Conversation]=None, has_more: object=None, next_page_pointer: str=None):
        """ConversationsPage - a model defined in OpenAPI

        :param conversation_list: The conversation_list of this ConversationsPage.
        :param has_more: The has_more of this ConversationsPage.
        :param next_page_pointer: The next_page_pointer of this ConversationsPage.
        """
        self.openapi_types = {
            'conversation_list': List[Conversation],
            'has_more': object,
            'next_page_pointer': str
        }

        self.attribute_map = {
            'conversation_list': 'conversationList',
            'has_more': 'hasMore',
            'next_page_pointer': 'nextPagePointer'
        }

        self._conversation_list = conversation_list
        self._has_more = has_more
        self._next_page_pointer = next_page_pointer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsPage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConversationsPage of this ConversationsPage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversation_list(self):
        """Gets the conversation_list of this ConversationsPage.

        List of conversations

        :return: The conversation_list of this ConversationsPage.
        :rtype: List[Conversation]
        """
        return self._conversation_list

    @conversation_list.setter
    def conversation_list(self, conversation_list):
        """Sets the conversation_list of this ConversationsPage.

        List of conversations

        :param conversation_list: The conversation_list of this ConversationsPage.
        :type conversation_list: List[Conversation]
        """

        self._conversation_list = conversation_list

    @property
    def has_more(self):
        """Gets the has_more of this ConversationsPage.

        Has more pages of conversations

        :return: The has_more of this ConversationsPage.
        :rtype: object
        """
        return self._has_more

    @has_more.setter
    def has_more(self, has_more):
        """Sets the has_more of this ConversationsPage.

        Has more pages of conversations

        :param has_more: The has_more of this ConversationsPage.
        :type has_more: object
        """

        self._has_more = has_more

    @property
    def next_page_pointer(self):
        """Gets the next_page_pointer of this ConversationsPage.

        Pointer to the next set page of conversations

        :return: The next_page_pointer of this ConversationsPage.
        :rtype: str
        """
        return self._next_page_pointer

    @next_page_pointer.setter
    def next_page_pointer(self, next_page_pointer):
        """Sets the next_page_pointer of this ConversationsPage.

        Pointer to the next set page of conversations

        :param next_page_pointer: The next_page_pointer of this ConversationsPage.
        :type next_page_pointer: str
        """

        self._next_page_pointer = next_page_pointer
