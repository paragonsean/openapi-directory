# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.space_attachment import SpaceAttachment
from openapi_server import util


class SpaceExternalAttachment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attachment: SpaceAttachment=None, download_location: str=None, preview_location: str=None, share_link_token: str=None, type: str=None):
        """SpaceExternalAttachment - a model defined in OpenAPI

        :param attachment: The attachment of this SpaceExternalAttachment.
        :param download_location: The download_location of this SpaceExternalAttachment.
        :param preview_location: The preview_location of this SpaceExternalAttachment.
        :param share_link_token: The share_link_token of this SpaceExternalAttachment.
        :param type: The type of this SpaceExternalAttachment.
        """
        self.openapi_types = {
            'attachment': SpaceAttachment,
            'download_location': str,
            'preview_location': str,
            'share_link_token': str,
            'type': str
        }

        self.attribute_map = {
            'attachment': 'attachment',
            'download_location': 'downloadLocation',
            'preview_location': 'previewLocation',
            'share_link_token': 'shareLinkToken',
            'type': 'type'
        }

        self._attachment = attachment
        self._download_location = download_location
        self._preview_location = preview_location
        self._share_link_token = share_link_token
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpaceExternalAttachment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpaceExternalAttachment of this SpaceExternalAttachment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attachment(self):
        """Gets the attachment of this SpaceExternalAttachment.


        :return: The attachment of this SpaceExternalAttachment.
        :rtype: SpaceAttachment
        """
        return self._attachment

    @attachment.setter
    def attachment(self, attachment):
        """Sets the attachment of this SpaceExternalAttachment.


        :param attachment: The attachment of this SpaceExternalAttachment.
        :type attachment: SpaceAttachment
        """

        self._attachment = attachment

    @property
    def download_location(self):
        """Gets the download_location of this SpaceExternalAttachment.

        the location of the download

        :return: The download_location of this SpaceExternalAttachment.
        :rtype: str
        """
        return self._download_location

    @download_location.setter
    def download_location(self, download_location):
        """Sets the download_location of this SpaceExternalAttachment.

        the location of the download

        :param download_location: The download_location of this SpaceExternalAttachment.
        :type download_location: str
        """

        self._download_location = download_location

    @property
    def preview_location(self):
        """Gets the preview_location of this SpaceExternalAttachment.

        the location of the preview

        :return: The preview_location of this SpaceExternalAttachment.
        :rtype: str
        """
        return self._preview_location

    @preview_location.setter
    def preview_location(self, preview_location):
        """Sets the preview_location of this SpaceExternalAttachment.

        the location of the preview

        :param preview_location: The preview_location of this SpaceExternalAttachment.
        :type preview_location: str
        """

        self._preview_location = preview_location

    @property
    def share_link_token(self):
        """Gets the share_link_token of this SpaceExternalAttachment.

        The share link token

        :return: The share_link_token of this SpaceExternalAttachment.
        :rtype: str
        """
        return self._share_link_token

    @share_link_token.setter
    def share_link_token(self, share_link_token):
        """Sets the share_link_token of this SpaceExternalAttachment.

        The share link token

        :param share_link_token: The share_link_token of this SpaceExternalAttachment.
        :type share_link_token: str
        """

        self._share_link_token = share_link_token

    @property
    def type(self):
        """Gets the type of this SpaceExternalAttachment.

        the type

        :return: The type of this SpaceExternalAttachment.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SpaceExternalAttachment.

        the type

        :param type: The type of this SpaceExternalAttachment.
        :type type: str
        """

        self._type = type
