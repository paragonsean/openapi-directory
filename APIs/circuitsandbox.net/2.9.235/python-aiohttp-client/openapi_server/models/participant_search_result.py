# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ParticipantSearchResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: float=None, first_name: str=None, last_name: str=None, modification_time: float=None, number_of_replies: float=None, number_of_topics: float=None, role: str=None, small_image_uri: str=None, state: str=None, tenant_id: str=None, user_id: str=None):
        """ParticipantSearchResult - a model defined in OpenAPI

        :param creation_time: The creation_time of this ParticipantSearchResult.
        :param first_name: The first_name of this ParticipantSearchResult.
        :param last_name: The last_name of this ParticipantSearchResult.
        :param modification_time: The modification_time of this ParticipantSearchResult.
        :param number_of_replies: The number_of_replies of this ParticipantSearchResult.
        :param number_of_topics: The number_of_topics of this ParticipantSearchResult.
        :param role: The role of this ParticipantSearchResult.
        :param small_image_uri: The small_image_uri of this ParticipantSearchResult.
        :param state: The state of this ParticipantSearchResult.
        :param tenant_id: The tenant_id of this ParticipantSearchResult.
        :param user_id: The user_id of this ParticipantSearchResult.
        """
        self.openapi_types = {
            'creation_time': float,
            'first_name': str,
            'last_name': str,
            'modification_time': float,
            'number_of_replies': float,
            'number_of_topics': float,
            'role': str,
            'small_image_uri': str,
            'state': str,
            'tenant_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'modification_time': 'modificationTime',
            'number_of_replies': 'numberOfReplies',
            'number_of_topics': 'numberOfTopics',
            'role': 'role',
            'small_image_uri': 'smallImageUri',
            'state': 'state',
            'tenant_id': 'tenantId',
            'user_id': 'userId'
        }

        self._creation_time = creation_time
        self._first_name = first_name
        self._last_name = last_name
        self._modification_time = modification_time
        self._number_of_replies = number_of_replies
        self._number_of_topics = number_of_topics
        self._role = role
        self._small_image_uri = small_image_uri
        self._state = state
        self._tenant_id = tenant_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParticipantSearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParticipantSearchResult of this ParticipantSearchResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this ParticipantSearchResult.

        Time when the participant was added to the space

        :return: The creation_time of this ParticipantSearchResult.
        :rtype: float
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this ParticipantSearchResult.

        Time when the participant was added to the space

        :param creation_time: The creation_time of this ParticipantSearchResult.
        :type creation_time: float
        """

        self._creation_time = creation_time

    @property
    def first_name(self):
        """Gets the first_name of this ParticipantSearchResult.

        The first name of the participant

        :return: The first_name of this ParticipantSearchResult.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ParticipantSearchResult.

        The first name of the participant

        :param first_name: The first_name of this ParticipantSearchResult.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this ParticipantSearchResult.

        The last name of the participant

        :return: The last_name of this ParticipantSearchResult.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ParticipantSearchResult.

        The last name of the participant

        :param last_name: The last_name of this ParticipantSearchResult.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def modification_time(self):
        """Gets the modification_time of this ParticipantSearchResult.

        Time when the participant was changed last.

        :return: The modification_time of this ParticipantSearchResult.
        :rtype: float
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this ParticipantSearchResult.

        Time when the participant was changed last.

        :param modification_time: The modification_time of this ParticipantSearchResult.
        :type modification_time: float
        """

        self._modification_time = modification_time

    @property
    def number_of_replies(self):
        """Gets the number_of_replies of this ParticipantSearchResult.

        Number of replies in the space created by this participant.

        :return: The number_of_replies of this ParticipantSearchResult.
        :rtype: float
        """
        return self._number_of_replies

    @number_of_replies.setter
    def number_of_replies(self, number_of_replies):
        """Sets the number_of_replies of this ParticipantSearchResult.

        Number of replies in the space created by this participant.

        :param number_of_replies: The number_of_replies of this ParticipantSearchResult.
        :type number_of_replies: float
        """

        self._number_of_replies = number_of_replies

    @property
    def number_of_topics(self):
        """Gets the number_of_topics of this ParticipantSearchResult.

        Number of topics in the space created by this participant.

        :return: The number_of_topics of this ParticipantSearchResult.
        :rtype: float
        """
        return self._number_of_topics

    @number_of_topics.setter
    def number_of_topics(self, number_of_topics):
        """Sets the number_of_topics of this ParticipantSearchResult.

        Number of topics in the space created by this participant.

        :param number_of_topics: The number_of_topics of this ParticipantSearchResult.
        :type number_of_topics: float
        """

        self._number_of_topics = number_of_topics

    @property
    def role(self):
        """Gets the role of this ParticipantSearchResult.

        The name of the role of the participant

        :return: The role of this ParticipantSearchResult.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this ParticipantSearchResult.

        The name of the role of the participant

        :param role: The role of this ParticipantSearchResult.
        :type role: str
        """

        self._role = role

    @property
    def small_image_uri(self):
        """Gets the small_image_uri of this ParticipantSearchResult.

        The uri of the small picture of the participant

        :return: The small_image_uri of this ParticipantSearchResult.
        :rtype: str
        """
        return self._small_image_uri

    @small_image_uri.setter
    def small_image_uri(self, small_image_uri):
        """Sets the small_image_uri of this ParticipantSearchResult.

        The uri of the small picture of the participant

        :param small_image_uri: The small_image_uri of this ParticipantSearchResult.
        :type small_image_uri: str
        """

        self._small_image_uri = small_image_uri

    @property
    def state(self):
        """Gets the state of this ParticipantSearchResult.

        The name of the state of the participant

        :return: The state of this ParticipantSearchResult.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ParticipantSearchResult.

        The name of the state of the participant

        :param state: The state of this ParticipantSearchResult.
        :type state: str
        """

        self._state = state

    @property
    def tenant_id(self):
        """Gets the tenant_id of this ParticipantSearchResult.

        the tenant id of the participant

        :return: The tenant_id of this ParticipantSearchResult.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this ParticipantSearchResult.

        the tenant id of the participant

        :param tenant_id: The tenant_id of this ParticipantSearchResult.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def user_id(self):
        """Gets the user_id of this ParticipantSearchResult.

        The id of the participant

        :return: The user_id of this ParticipantSearchResult.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ParticipantSearchResult.

        The id of the participant

        :param user_id: The user_id of this ParticipantSearchResult.
        :type user_id: str
        """

        self._user_id = user_id
