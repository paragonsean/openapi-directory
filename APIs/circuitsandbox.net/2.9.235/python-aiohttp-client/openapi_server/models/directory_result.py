# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.space import Space
from openapi_server import util


class DirectoryResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_more: bool=None, search_pointer: str=None, spaces: List[Space]=None):
        """DirectoryResult - a model defined in OpenAPI

        :param has_more: The has_more of this DirectoryResult.
        :param search_pointer: The search_pointer of this DirectoryResult.
        :param spaces: The spaces of this DirectoryResult.
        """
        self.openapi_types = {
            'has_more': bool,
            'search_pointer': str,
            'spaces': List[Space]
        }

        self.attribute_map = {
            'has_more': 'hasMore',
            'search_pointer': 'searchPointer',
            'spaces': 'spaces'
        }

        self._has_more = has_more
        self._search_pointer = search_pointer
        self._spaces = spaces

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DirectoryResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DirectoryResult of this DirectoryResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_more(self):
        """Gets the has_more of this DirectoryResult.

        are more results available, than start another search

        :return: The has_more of this DirectoryResult.
        :rtype: bool
        """
        return self._has_more

    @has_more.setter
    def has_more(self, has_more):
        """Sets the has_more of this DirectoryResult.

        are more results available, than start another search

        :param has_more: The has_more of this DirectoryResult.
        :type has_more: bool
        """

        self._has_more = has_more

    @property
    def search_pointer(self):
        """Gets the search_pointer of this DirectoryResult.

        pointer for stored search 

        :return: The search_pointer of this DirectoryResult.
        :rtype: str
        """
        return self._search_pointer

    @search_pointer.setter
    def search_pointer(self, search_pointer):
        """Sets the search_pointer of this DirectoryResult.

        pointer for stored search 

        :param search_pointer: The search_pointer of this DirectoryResult.
        :type search_pointer: str
        """

        self._search_pointer = search_pointer

    @property
    def spaces(self):
        """Gets the spaces of this DirectoryResult.

        list of spaces

        :return: The spaces of this DirectoryResult.
        :rtype: List[Space]
        """
        return self._spaces

    @spaces.setter
    def spaces(self, spaces):
        """Sets the spaces of this DirectoryResult.

        list of spaces

        :param spaces: The spaces of this DirectoryResult.
        :type spaces: List[Space]
        """

        self._spaces = spaces
