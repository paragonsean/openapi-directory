# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class String(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, case_insensitive_order: object=None):
        """String - a model defined in OpenAPI

        :param case_insensitive_order: The case_insensitive_order of this String.
        """
        self.openapi_types = {
            'case_insensitive_order': object
        }

        self.attribute_map = {
            'case_insensitive_order': 'CASE_INSENSITIVE_ORDER'
        }

        self._case_insensitive_order = case_insensitive_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'String':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The String of this String.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def case_insensitive_order(self):
        """Gets the case_insensitive_order of this String.


        :return: The case_insensitive_order of this String.
        :rtype: object
        """
        return self._case_insensitive_order

    @case_insensitive_order.setter
    def case_insensitive_order(self, case_insensitive_order):
        """Sets the case_insensitive_order of this String.


        :param case_insensitive_order: The case_insensitive_order of this String.
        :type case_insensitive_order: object
        """

        self._case_insensitive_order = case_insensitive_order
