# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class V2DistributedClientInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, client_version: str=None, device_subtype: str=None, device_type: str=None, hardware_model: str=None, home_node: str=None, manufacturer: str=None, os_version: str=None, user_id: str=None):
        """V2DistributedClientInfo - a model defined in OpenAPI

        :param client_id: The client_id of this V2DistributedClientInfo.
        :param client_version: The client_version of this V2DistributedClientInfo.
        :param device_subtype: The device_subtype of this V2DistributedClientInfo.
        :param device_type: The device_type of this V2DistributedClientInfo.
        :param hardware_model: The hardware_model of this V2DistributedClientInfo.
        :param home_node: The home_node of this V2DistributedClientInfo.
        :param manufacturer: The manufacturer of this V2DistributedClientInfo.
        :param os_version: The os_version of this V2DistributedClientInfo.
        :param user_id: The user_id of this V2DistributedClientInfo.
        """
        self.openapi_types = {
            'client_id': str,
            'client_version': str,
            'device_subtype': str,
            'device_type': str,
            'hardware_model': str,
            'home_node': str,
            'manufacturer': str,
            'os_version': str,
            'user_id': str
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'client_version': 'clientVersion',
            'device_subtype': 'deviceSubtype',
            'device_type': 'deviceType',
            'hardware_model': 'hardwareModel',
            'home_node': 'homeNode',
            'manufacturer': 'manufacturer',
            'os_version': 'osVersion',
            'user_id': 'userId'
        }

        self._client_id = client_id
        self._client_version = client_version
        self._device_subtype = device_subtype
        self._device_type = device_type
        self._hardware_model = hardware_model
        self._home_node = home_node
        self._manufacturer = manufacturer
        self._os_version = os_version
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V2DistributedClientInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The V2DistributedClientInfo of this V2DistributedClientInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this V2DistributedClientInfo.

        The client id

        :return: The client_id of this V2DistributedClientInfo.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this V2DistributedClientInfo.

        The client id

        :param client_id: The client_id of this V2DistributedClientInfo.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def client_version(self):
        """Gets the client_version of this V2DistributedClientInfo.

        The version of the client

        :return: The client_version of this V2DistributedClientInfo.
        :rtype: str
        """
        return self._client_version

    @client_version.setter
    def client_version(self, client_version):
        """Sets the client_version of this V2DistributedClientInfo.

        The version of the client

        :param client_version: The client_version of this V2DistributedClientInfo.
        :type client_version: str
        """

        self._client_version = client_version

    @property
    def device_subtype(self):
        """Gets the device_subtype of this V2DistributedClientInfo.

        The device sub type

        :return: The device_subtype of this V2DistributedClientInfo.
        :rtype: str
        """
        return self._device_subtype

    @device_subtype.setter
    def device_subtype(self, device_subtype):
        """Sets the device_subtype of this V2DistributedClientInfo.

        The device sub type

        :param device_subtype: The device_subtype of this V2DistributedClientInfo.
        :type device_subtype: str
        """

        self._device_subtype = device_subtype

    @property
    def device_type(self):
        """Gets the device_type of this V2DistributedClientInfo.

        The devicetype

        :return: The device_type of this V2DistributedClientInfo.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this V2DistributedClientInfo.

        The devicetype

        :param device_type: The device_type of this V2DistributedClientInfo.
        :type device_type: str
        """

        self._device_type = device_type

    @property
    def hardware_model(self):
        """Gets the hardware_model of this V2DistributedClientInfo.

        The hardware model

        :return: The hardware_model of this V2DistributedClientInfo.
        :rtype: str
        """
        return self._hardware_model

    @hardware_model.setter
    def hardware_model(self, hardware_model):
        """Sets the hardware_model of this V2DistributedClientInfo.

        The hardware model

        :param hardware_model: The hardware_model of this V2DistributedClientInfo.
        :type hardware_model: str
        """

        self._hardware_model = hardware_model

    @property
    def home_node(self):
        """Gets the home_node of this V2DistributedClientInfo.

        The home node name

        :return: The home_node of this V2DistributedClientInfo.
        :rtype: str
        """
        return self._home_node

    @home_node.setter
    def home_node(self, home_node):
        """Sets the home_node of this V2DistributedClientInfo.

        The home node name

        :param home_node: The home_node of this V2DistributedClientInfo.
        :type home_node: str
        """

        self._home_node = home_node

    @property
    def manufacturer(self):
        """Gets the manufacturer of this V2DistributedClientInfo.

        The manufacturer

        :return: The manufacturer of this V2DistributedClientInfo.
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this V2DistributedClientInfo.

        The manufacturer

        :param manufacturer: The manufacturer of this V2DistributedClientInfo.
        :type manufacturer: str
        """

        self._manufacturer = manufacturer

    @property
    def os_version(self):
        """Gets the os_version of this V2DistributedClientInfo.

        The version of the operating system

        :return: The os_version of this V2DistributedClientInfo.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this V2DistributedClientInfo.

        The version of the operating system

        :param os_version: The os_version of this V2DistributedClientInfo.
        :type os_version: str
        """

        self._os_version = os_version

    @property
    def user_id(self):
        """Gets the user_id of this V2DistributedClientInfo.

        The user id

        :return: The user_id of this V2DistributedClientInfo.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this V2DistributedClientInfo.

        The user id

        :param user_id: The user_id of this V2DistributedClientInfo.
        :type user_id: str
        """

        self._user_id = user_id
