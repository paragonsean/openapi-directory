# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Space(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_mode_type: str=None, creation_time: float=None, creator_id: str=None, default_role: str=None, description: str=None, large_picture_base64: str=None, large_picture_content_type: str=None, large_picture_id: str=None, last_content_creation_time: float=None, last_content_creator_id: str=None, modification_time: float=None, name: str=None, number_of_external_participants: float=None, number_of_participants: float=None, number_of_pinned_topics: float=None, number_of_replies: float=None, number_of_topics: float=None, owner_id: str=None, small_picture_base64: str=None, small_picture_content_type: str=None, small_picture_id: str=None, space_id: str=None, status: str=None, tags: List[str]=None, tenant_id: str=None, type: str=None):
        """Space - a model defined in OpenAPI

        :param access_mode_type: The access_mode_type of this Space.
        :param creation_time: The creation_time of this Space.
        :param creator_id: The creator_id of this Space.
        :param default_role: The default_role of this Space.
        :param description: The description of this Space.
        :param large_picture_base64: The large_picture_base64 of this Space.
        :param large_picture_content_type: The large_picture_content_type of this Space.
        :param large_picture_id: The large_picture_id of this Space.
        :param last_content_creation_time: The last_content_creation_time of this Space.
        :param last_content_creator_id: The last_content_creator_id of this Space.
        :param modification_time: The modification_time of this Space.
        :param name: The name of this Space.
        :param number_of_external_participants: The number_of_external_participants of this Space.
        :param number_of_participants: The number_of_participants of this Space.
        :param number_of_pinned_topics: The number_of_pinned_topics of this Space.
        :param number_of_replies: The number_of_replies of this Space.
        :param number_of_topics: The number_of_topics of this Space.
        :param owner_id: The owner_id of this Space.
        :param small_picture_base64: The small_picture_base64 of this Space.
        :param small_picture_content_type: The small_picture_content_type of this Space.
        :param small_picture_id: The small_picture_id of this Space.
        :param space_id: The space_id of this Space.
        :param status: The status of this Space.
        :param tags: The tags of this Space.
        :param tenant_id: The tenant_id of this Space.
        :param type: The type of this Space.
        """
        self.openapi_types = {
            'access_mode_type': str,
            'creation_time': float,
            'creator_id': str,
            'default_role': str,
            'description': str,
            'large_picture_base64': str,
            'large_picture_content_type': str,
            'large_picture_id': str,
            'last_content_creation_time': float,
            'last_content_creator_id': str,
            'modification_time': float,
            'name': str,
            'number_of_external_participants': float,
            'number_of_participants': float,
            'number_of_pinned_topics': float,
            'number_of_replies': float,
            'number_of_topics': float,
            'owner_id': str,
            'small_picture_base64': str,
            'small_picture_content_type': str,
            'small_picture_id': str,
            'space_id': str,
            'status': str,
            'tags': List[str],
            'tenant_id': str,
            'type': str
        }

        self.attribute_map = {
            'access_mode_type': 'accessModeType',
            'creation_time': 'creationTime',
            'creator_id': 'creatorId',
            'default_role': 'defaultRole',
            'description': 'description',
            'large_picture_base64': 'largePictureBase64',
            'large_picture_content_type': 'largePictureContentType',
            'large_picture_id': 'largePictureId',
            'last_content_creation_time': 'lastContentCreationTime',
            'last_content_creator_id': 'lastContentCreatorId',
            'modification_time': 'modificationTime',
            'name': 'name',
            'number_of_external_participants': 'numberOfExternalParticipants',
            'number_of_participants': 'numberOfParticipants',
            'number_of_pinned_topics': 'numberOfPinnedTopics',
            'number_of_replies': 'numberOfReplies',
            'number_of_topics': 'numberOfTopics',
            'owner_id': 'ownerId',
            'small_picture_base64': 'smallPictureBase64',
            'small_picture_content_type': 'smallPictureContentType',
            'small_picture_id': 'smallPictureId',
            'space_id': 'spaceId',
            'status': 'status',
            'tags': 'tags',
            'tenant_id': 'tenantId',
            'type': 'type'
        }

        self._access_mode_type = access_mode_type
        self._creation_time = creation_time
        self._creator_id = creator_id
        self._default_role = default_role
        self._description = description
        self._large_picture_base64 = large_picture_base64
        self._large_picture_content_type = large_picture_content_type
        self._large_picture_id = large_picture_id
        self._last_content_creation_time = last_content_creation_time
        self._last_content_creator_id = last_content_creator_id
        self._modification_time = modification_time
        self._name = name
        self._number_of_external_participants = number_of_external_participants
        self._number_of_participants = number_of_participants
        self._number_of_pinned_topics = number_of_pinned_topics
        self._number_of_replies = number_of_replies
        self._number_of_topics = number_of_topics
        self._owner_id = owner_id
        self._small_picture_base64 = small_picture_base64
        self._small_picture_content_type = small_picture_content_type
        self._small_picture_id = small_picture_id
        self._space_id = space_id
        self._status = status
        self._tags = tags
        self._tenant_id = tenant_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Space':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Space of this Space.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_mode_type(self):
        """Gets the access_mode_type of this Space.

        The name of the access mode type of the space.

        :return: The access_mode_type of this Space.
        :rtype: str
        """
        return self._access_mode_type

    @access_mode_type.setter
    def access_mode_type(self, access_mode_type):
        """Sets the access_mode_type of this Space.

        The name of the access mode type of the space.

        :param access_mode_type: The access_mode_type of this Space.
        :type access_mode_type: str
        """

        self._access_mode_type = access_mode_type

    @property
    def creation_time(self):
        """Gets the creation_time of this Space.

        The space creation time.

        :return: The creation_time of this Space.
        :rtype: float
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this Space.

        The space creation time.

        :param creation_time: The creation_time of this Space.
        :type creation_time: float
        """

        self._creation_time = creation_time

    @property
    def creator_id(self):
        """Gets the creator_id of this Space.

        The ID of the space creator.

        :return: The creator_id of this Space.
        :rtype: str
        """
        return self._creator_id

    @creator_id.setter
    def creator_id(self, creator_id):
        """Sets the creator_id of this Space.

        The ID of the space creator.

        :param creator_id: The creator_id of this Space.
        :type creator_id: str
        """

        self._creator_id = creator_id

    @property
    def default_role(self):
        """Gets the default_role of this Space.

        The name of the default role of a new participant.

        :return: The default_role of this Space.
        :rtype: str
        """
        return self._default_role

    @default_role.setter
    def default_role(self, default_role):
        """Sets the default_role of this Space.

        The name of the default role of a new participant.

        :param default_role: The default_role of this Space.
        :type default_role: str
        """

        self._default_role = default_role

    @property
    def description(self):
        """Gets the description of this Space.

        The space description.

        :return: The description of this Space.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Space.

        The space description.

        :param description: The description of this Space.
        :type description: str
        """

        self._description = description

    @property
    def large_picture_base64(self):
        """Gets the large_picture_base64 of this Space.

        Base64 encoded image that can be set during the creation and the update of a space.

        :return: The large_picture_base64 of this Space.
        :rtype: str
        """
        return self._large_picture_base64

    @large_picture_base64.setter
    def large_picture_base64(self, large_picture_base64):
        """Sets the large_picture_base64 of this Space.

        Base64 encoded image that can be set during the creation and the update of a space.

        :param large_picture_base64: The large_picture_base64 of this Space.
        :type large_picture_base64: str
        """

        self._large_picture_base64 = large_picture_base64

    @property
    def large_picture_content_type(self):
        """Gets the large_picture_content_type of this Space.

        The content type of the image.

        :return: The large_picture_content_type of this Space.
        :rtype: str
        """
        return self._large_picture_content_type

    @large_picture_content_type.setter
    def large_picture_content_type(self, large_picture_content_type):
        """Sets the large_picture_content_type of this Space.

        The content type of the image.

        :param large_picture_content_type: The large_picture_content_type of this Space.
        :type large_picture_content_type: str
        """

        self._large_picture_content_type = large_picture_content_type

    @property
    def large_picture_id(self):
        """Gets the large_picture_id of this Space.

        The file id of the large version of the picture.

        :return: The large_picture_id of this Space.
        :rtype: str
        """
        return self._large_picture_id

    @large_picture_id.setter
    def large_picture_id(self, large_picture_id):
        """Sets the large_picture_id of this Space.

        The file id of the large version of the picture.

        :param large_picture_id: The large_picture_id of this Space.
        :type large_picture_id: str
        """

        self._large_picture_id = large_picture_id

    @property
    def last_content_creation_time(self):
        """Gets the last_content_creation_time of this Space.

        Time stamp when the last content (topic / reply) was created within this space.

        :return: The last_content_creation_time of this Space.
        :rtype: float
        """
        return self._last_content_creation_time

    @last_content_creation_time.setter
    def last_content_creation_time(self, last_content_creation_time):
        """Sets the last_content_creation_time of this Space.

        Time stamp when the last content (topic / reply) was created within this space.

        :param last_content_creation_time: The last_content_creation_time of this Space.
        :type last_content_creation_time: float
        """

        self._last_content_creation_time = last_content_creation_time

    @property
    def last_content_creator_id(self):
        """Gets the last_content_creator_id of this Space.

        User ID of the user which created the last content.

        :return: The last_content_creator_id of this Space.
        :rtype: str
        """
        return self._last_content_creator_id

    @last_content_creator_id.setter
    def last_content_creator_id(self, last_content_creator_id):
        """Sets the last_content_creator_id of this Space.

        User ID of the user which created the last content.

        :param last_content_creator_id: The last_content_creator_id of this Space.
        :type last_content_creator_id: str
        """

        self._last_content_creator_id = last_content_creator_id

    @property
    def modification_time(self):
        """Gets the modification_time of this Space.

        The space modification time.

        :return: The modification_time of this Space.
        :rtype: float
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this Space.

        The space modification time.

        :param modification_time: The modification_time of this Space.
        :type modification_time: float
        """

        self._modification_time = modification_time

    @property
    def name(self):
        """Gets the name of this Space.

        The unique space name.

        :return: The name of this Space.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Space.

        The unique space name.

        :param name: The name of this Space.
        :type name: str
        """

        self._name = name

    @property
    def number_of_external_participants(self):
        """Gets the number_of_external_participants of this Space.

        Number of external participants in the space.

        :return: The number_of_external_participants of this Space.
        :rtype: float
        """
        return self._number_of_external_participants

    @number_of_external_participants.setter
    def number_of_external_participants(self, number_of_external_participants):
        """Sets the number_of_external_participants of this Space.

        Number of external participants in the space.

        :param number_of_external_participants: The number_of_external_participants of this Space.
        :type number_of_external_participants: float
        """

        self._number_of_external_participants = number_of_external_participants

    @property
    def number_of_participants(self):
        """Gets the number_of_participants of this Space.

        Number of participants in the space.

        :return: The number_of_participants of this Space.
        :rtype: float
        """
        return self._number_of_participants

    @number_of_participants.setter
    def number_of_participants(self, number_of_participants):
        """Sets the number_of_participants of this Space.

        Number of participants in the space.

        :param number_of_participants: The number_of_participants of this Space.
        :type number_of_participants: float
        """

        self._number_of_participants = number_of_participants

    @property
    def number_of_pinned_topics(self):
        """Gets the number_of_pinned_topics of this Space.

        Number of pinned topics in the space.

        :return: The number_of_pinned_topics of this Space.
        :rtype: float
        """
        return self._number_of_pinned_topics

    @number_of_pinned_topics.setter
    def number_of_pinned_topics(self, number_of_pinned_topics):
        """Sets the number_of_pinned_topics of this Space.

        Number of pinned topics in the space.

        :param number_of_pinned_topics: The number_of_pinned_topics of this Space.
        :type number_of_pinned_topics: float
        """

        self._number_of_pinned_topics = number_of_pinned_topics

    @property
    def number_of_replies(self):
        """Gets the number_of_replies of this Space.

        Number of replies in the space.

        :return: The number_of_replies of this Space.
        :rtype: float
        """
        return self._number_of_replies

    @number_of_replies.setter
    def number_of_replies(self, number_of_replies):
        """Sets the number_of_replies of this Space.

        Number of replies in the space.

        :param number_of_replies: The number_of_replies of this Space.
        :type number_of_replies: float
        """

        self._number_of_replies = number_of_replies

    @property
    def number_of_topics(self):
        """Gets the number_of_topics of this Space.

        Number of topics in the space.

        :return: The number_of_topics of this Space.
        :rtype: float
        """
        return self._number_of_topics

    @number_of_topics.setter
    def number_of_topics(self, number_of_topics):
        """Sets the number_of_topics of this Space.

        Number of topics in the space.

        :param number_of_topics: The number_of_topics of this Space.
        :type number_of_topics: float
        """

        self._number_of_topics = number_of_topics

    @property
    def owner_id(self):
        """Gets the owner_id of this Space.

        The ID of the space owner.

        :return: The owner_id of this Space.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this Space.

        The ID of the space owner.

        :param owner_id: The owner_id of this Space.
        :type owner_id: str
        """

        self._owner_id = owner_id

    @property
    def small_picture_base64(self):
        """Gets the small_picture_base64 of this Space.

        Base64 encoded image that can be set during the creation and the update of a space.

        :return: The small_picture_base64 of this Space.
        :rtype: str
        """
        return self._small_picture_base64

    @small_picture_base64.setter
    def small_picture_base64(self, small_picture_base64):
        """Sets the small_picture_base64 of this Space.

        Base64 encoded image that can be set during the creation and the update of a space.

        :param small_picture_base64: The small_picture_base64 of this Space.
        :type small_picture_base64: str
        """

        self._small_picture_base64 = small_picture_base64

    @property
    def small_picture_content_type(self):
        """Gets the small_picture_content_type of this Space.

        The content type of the image.

        :return: The small_picture_content_type of this Space.
        :rtype: str
        """
        return self._small_picture_content_type

    @small_picture_content_type.setter
    def small_picture_content_type(self, small_picture_content_type):
        """Sets the small_picture_content_type of this Space.

        The content type of the image.

        :param small_picture_content_type: The small_picture_content_type of this Space.
        :type small_picture_content_type: str
        """

        self._small_picture_content_type = small_picture_content_type

    @property
    def small_picture_id(self):
        """Gets the small_picture_id of this Space.

        The file id of the small version of the picture.

        :return: The small_picture_id of this Space.
        :rtype: str
        """
        return self._small_picture_id

    @small_picture_id.setter
    def small_picture_id(self, small_picture_id):
        """Sets the small_picture_id of this Space.

        The file id of the small version of the picture.

        :param small_picture_id: The small_picture_id of this Space.
        :type small_picture_id: str
        """

        self._small_picture_id = small_picture_id

    @property
    def space_id(self):
        """Gets the space_id of this Space.

        The unique space ID generated by the backend during the creation of the space.

        :return: The space_id of this Space.
        :rtype: str
        """
        return self._space_id

    @space_id.setter
    def space_id(self, space_id):
        """Sets the space_id of this Space.

        The unique space ID generated by the backend during the creation of the space.

        :param space_id: The space_id of this Space.
        :type space_id: str
        """

        self._space_id = space_id

    @property
    def status(self):
        """Gets the status of this Space.

        The name of the status of the space.

        :return: The status of this Space.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Space.

        The name of the status of the space.

        :param status: The status of this Space.
        :type status: str
        """

        self._status = status

    @property
    def tags(self):
        """Gets the tags of this Space.

        The list of space tags.

        :return: The tags of this Space.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Space.

        The list of space tags.

        :param tags: The tags of this Space.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def tenant_id(self):
        """Gets the tenant_id of this Space.

        The ID of the space tenant.

        :return: The tenant_id of this Space.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this Space.

        The ID of the space tenant.

        :param tenant_id: The tenant_id of this Space.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def type(self):
        """Gets the type of this Space.

        The name of the space type.

        :return: The type of this Space.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Space.

        The name of the space type.

        :param type: The type of this Space.
        :type type: str
        """

        self._type = type
