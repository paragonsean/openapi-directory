# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SupportInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, support_email_address: str=None, support_type: object=None):
        """SupportInfo - a model defined in OpenAPI

        :param support_email_address: The support_email_address of this SupportInfo.
        :param support_type: The support_type of this SupportInfo.
        """
        self.openapi_types = {
            'support_email_address': str,
            'support_type': object
        }

        self.attribute_map = {
            'support_email_address': 'supportEmailAddress',
            'support_type': 'supportType'
        }

        self._support_email_address = support_email_address
        self._support_type = support_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SupportInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SupportInfo of this SupportInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def support_email_address(self):
        """Gets the support_email_address of this SupportInfo.

        The email address of the support

        :return: The support_email_address of this SupportInfo.
        :rtype: str
        """
        return self._support_email_address

    @support_email_address.setter
    def support_email_address(self, support_email_address):
        """Sets the support_email_address of this SupportInfo.

        The email address of the support

        :param support_email_address: The support_email_address of this SupportInfo.
        :type support_email_address: str
        """

        self._support_email_address = support_email_address

    @property
    def support_type(self):
        """Gets the support_type of this SupportInfo.

        The type of support (a number)

        :return: The support_type of this SupportInfo.
        :rtype: object
        """
        return self._support_type

    @support_type.setter
    def support_type(self, support_type):
        """Sets the support_type of this SupportInfo.

        The type of support (a number)

        :param support_type: The support_type of this SupportInfo.
        :type support_type: object
        """

        self._support_type = support_type
