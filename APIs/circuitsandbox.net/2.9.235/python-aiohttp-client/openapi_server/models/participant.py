# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Participant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: float=None, label_ids: List[str]=None, last_content_creation_time: float=None, last_read_timestamp: float=None, modification_time: float=None, number_of_replies: float=None, number_of_topics: float=None, role: str=None, space_id: str=None, state: str=None, tenant_id: str=None, user_id: str=None):
        """Participant - a model defined in OpenAPI

        :param creation_time: The creation_time of this Participant.
        :param label_ids: The label_ids of this Participant.
        :param last_content_creation_time: The last_content_creation_time of this Participant.
        :param last_read_timestamp: The last_read_timestamp of this Participant.
        :param modification_time: The modification_time of this Participant.
        :param number_of_replies: The number_of_replies of this Participant.
        :param number_of_topics: The number_of_topics of this Participant.
        :param role: The role of this Participant.
        :param space_id: The space_id of this Participant.
        :param state: The state of this Participant.
        :param tenant_id: The tenant_id of this Participant.
        :param user_id: The user_id of this Participant.
        """
        self.openapi_types = {
            'creation_time': float,
            'label_ids': List[str],
            'last_content_creation_time': float,
            'last_read_timestamp': float,
            'modification_time': float,
            'number_of_replies': float,
            'number_of_topics': float,
            'role': str,
            'space_id': str,
            'state': str,
            'tenant_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'label_ids': 'labelIds',
            'last_content_creation_time': 'lastContentCreationTime',
            'last_read_timestamp': 'lastReadTimestamp',
            'modification_time': 'modificationTime',
            'number_of_replies': 'numberOfReplies',
            'number_of_topics': 'numberOfTopics',
            'role': 'role',
            'space_id': 'spaceId',
            'state': 'state',
            'tenant_id': 'tenantId',
            'user_id': 'userId'
        }

        self._creation_time = creation_time
        self._label_ids = label_ids
        self._last_content_creation_time = last_content_creation_time
        self._last_read_timestamp = last_read_timestamp
        self._modification_time = modification_time
        self._number_of_replies = number_of_replies
        self._number_of_topics = number_of_topics
        self._role = role
        self._space_id = space_id
        self._state = state
        self._tenant_id = tenant_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Participant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Participant of this Participant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this Participant.

        Time when the participant was added to the space

        :return: The creation_time of this Participant.
        :rtype: float
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this Participant.

        Time when the participant was added to the space

        :param creation_time: The creation_time of this Participant.
        :type creation_time: float
        """

        self._creation_time = creation_time

    @property
    def label_ids(self):
        """Gets the label_ids of this Participant.

        The list of label IDs of all the labels assigned to the space.

        :return: The label_ids of this Participant.
        :rtype: List[str]
        """
        return self._label_ids

    @label_ids.setter
    def label_ids(self, label_ids):
        """Sets the label_ids of this Participant.

        The list of label IDs of all the labels assigned to the space.

        :param label_ids: The label_ids of this Participant.
        :type label_ids: List[str]
        """

        self._label_ids = label_ids

    @property
    def last_content_creation_time(self):
        """Gets the last_content_creation_time of this Participant.

        Time stamp when user last created content in the space.

        :return: The last_content_creation_time of this Participant.
        :rtype: float
        """
        return self._last_content_creation_time

    @last_content_creation_time.setter
    def last_content_creation_time(self, last_content_creation_time):
        """Sets the last_content_creation_time of this Participant.

        Time stamp when user last created content in the space.

        :param last_content_creation_time: The last_content_creation_time of this Participant.
        :type last_content_creation_time: float
        """

        self._last_content_creation_time = last_content_creation_time

    @property
    def last_read_timestamp(self):
        """Gets the last_read_timestamp of this Participant.

        Last time stamp when the user read content in this space.

        :return: The last_read_timestamp of this Participant.
        :rtype: float
        """
        return self._last_read_timestamp

    @last_read_timestamp.setter
    def last_read_timestamp(self, last_read_timestamp):
        """Sets the last_read_timestamp of this Participant.

        Last time stamp when the user read content in this space.

        :param last_read_timestamp: The last_read_timestamp of this Participant.
        :type last_read_timestamp: float
        """

        self._last_read_timestamp = last_read_timestamp

    @property
    def modification_time(self):
        """Gets the modification_time of this Participant.

        Time when the participant was changed last.

        :return: The modification_time of this Participant.
        :rtype: float
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this Participant.

        Time when the participant was changed last.

        :param modification_time: The modification_time of this Participant.
        :type modification_time: float
        """

        self._modification_time = modification_time

    @property
    def number_of_replies(self):
        """Gets the number_of_replies of this Participant.

        Number of replies in the space created by this participant.

        :return: The number_of_replies of this Participant.
        :rtype: float
        """
        return self._number_of_replies

    @number_of_replies.setter
    def number_of_replies(self, number_of_replies):
        """Sets the number_of_replies of this Participant.

        Number of replies in the space created by this participant.

        :param number_of_replies: The number_of_replies of this Participant.
        :type number_of_replies: float
        """

        self._number_of_replies = number_of_replies

    @property
    def number_of_topics(self):
        """Gets the number_of_topics of this Participant.

        Number of topics in the space created by this participant.

        :return: The number_of_topics of this Participant.
        :rtype: float
        """
        return self._number_of_topics

    @number_of_topics.setter
    def number_of_topics(self, number_of_topics):
        """Sets the number_of_topics of this Participant.

        Number of topics in the space created by this participant.

        :param number_of_topics: The number_of_topics of this Participant.
        :type number_of_topics: float
        """

        self._number_of_topics = number_of_topics

    @property
    def role(self):
        """Gets the role of this Participant.

        The name of the role of the participant.

        :return: The role of this Participant.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this Participant.

        The name of the role of the participant.

        :param role: The role of this Participant.
        :type role: str
        """

        self._role = role

    @property
    def space_id(self):
        """Gets the space_id of this Participant.

        The unique ID of the space to which the participant.

        :return: The space_id of this Participant.
        :rtype: str
        """
        return self._space_id

    @space_id.setter
    def space_id(self, space_id):
        """Sets the space_id of this Participant.

        The unique ID of the space to which the participant.

        :param space_id: The space_id of this Participant.
        :type space_id: str
        """

        self._space_id = space_id

    @property
    def state(self):
        """Gets the state of this Participant.

        The name of the state of the participant;

        :return: The state of this Participant.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Participant.

        The name of the state of the participant;

        :param state: The state of this Participant.
        :type state: str
        """

        self._state = state

    @property
    def tenant_id(self):
        """Gets the tenant_id of this Participant.

        The unique tenant id of the participant.

        :return: The tenant_id of this Participant.
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this Participant.

        The unique tenant id of the participant.

        :param tenant_id: The tenant_id of this Participant.
        :type tenant_id: str
        """

        self._tenant_id = tenant_id

    @property
    def user_id(self):
        """Gets the user_id of this Participant.

        The unique user id of the participant.

        :return: The user_id of this Participant.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Participant.

        The unique user id of the participant.

        :param user_id: The user_id of this Participant.
        :type user_id: str
        """

        self._user_id = user_id
