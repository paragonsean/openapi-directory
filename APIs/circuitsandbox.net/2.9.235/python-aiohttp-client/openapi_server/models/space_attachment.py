# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SpaceAttachment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: float=None, creator_id: str=None, file_id: str=None, file_name: str=None, inline_usage: bool=None, item_id: str=None, layout: str=None, mime_type: str=None, modification_time: float=None, size: float=None, space_id: str=None, thumbnail_id: str=None):
        """SpaceAttachment - a model defined in OpenAPI

        :param creation_time: The creation_time of this SpaceAttachment.
        :param creator_id: The creator_id of this SpaceAttachment.
        :param file_id: The file_id of this SpaceAttachment.
        :param file_name: The file_name of this SpaceAttachment.
        :param inline_usage: The inline_usage of this SpaceAttachment.
        :param item_id: The item_id of this SpaceAttachment.
        :param layout: The layout of this SpaceAttachment.
        :param mime_type: The mime_type of this SpaceAttachment.
        :param modification_time: The modification_time of this SpaceAttachment.
        :param size: The size of this SpaceAttachment.
        :param space_id: The space_id of this SpaceAttachment.
        :param thumbnail_id: The thumbnail_id of this SpaceAttachment.
        """
        self.openapi_types = {
            'creation_time': float,
            'creator_id': str,
            'file_id': str,
            'file_name': str,
            'inline_usage': bool,
            'item_id': str,
            'layout': str,
            'mime_type': str,
            'modification_time': float,
            'size': float,
            'space_id': str,
            'thumbnail_id': str
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'creator_id': 'creatorId',
            'file_id': 'fileId',
            'file_name': 'fileName',
            'inline_usage': 'inlineUsage',
            'item_id': 'itemId',
            'layout': 'layout',
            'mime_type': 'mimeType',
            'modification_time': 'modificationTime',
            'size': 'size',
            'space_id': 'spaceId',
            'thumbnail_id': 'thumbnailId'
        }

        self._creation_time = creation_time
        self._creator_id = creator_id
        self._file_id = file_id
        self._file_name = file_name
        self._inline_usage = inline_usage
        self._item_id = item_id
        self._layout = layout
        self._mime_type = mime_type
        self._modification_time = modification_time
        self._size = size
        self._space_id = space_id
        self._thumbnail_id = thumbnail_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpaceAttachment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpaceAttachment of this SpaceAttachment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this SpaceAttachment.

        time this item has been created

        :return: The creation_time of this SpaceAttachment.
        :rtype: float
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this SpaceAttachment.

        time this item has been created

        :param creation_time: The creation_time of this SpaceAttachment.
        :type creation_time: float
        """

        self._creation_time = creation_time

    @property
    def creator_id(self):
        """Gets the creator_id of this SpaceAttachment.

        the id of the creator

        :return: The creator_id of this SpaceAttachment.
        :rtype: str
        """
        return self._creator_id

    @creator_id.setter
    def creator_id(self, creator_id):
        """Sets the creator_id of this SpaceAttachment.

        the id of the creator

        :param creator_id: The creator_id of this SpaceAttachment.
        :type creator_id: str
        """

        self._creator_id = creator_id

    @property
    def file_id(self):
        """Gets the file_id of this SpaceAttachment.

        the id of the field

        :return: The file_id of this SpaceAttachment.
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this SpaceAttachment.

        the id of the field

        :param file_id: The file_id of this SpaceAttachment.
        :type file_id: str
        """

        self._file_id = file_id

    @property
    def file_name(self):
        """Gets the file_name of this SpaceAttachment.

        name of the file

        :return: The file_name of this SpaceAttachment.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this SpaceAttachment.

        name of the file

        :param file_name: The file_name of this SpaceAttachment.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def inline_usage(self):
        """Gets the inline_usage of this SpaceAttachment.

        is inline usage allowed

        :return: The inline_usage of this SpaceAttachment.
        :rtype: bool
        """
        return self._inline_usage

    @inline_usage.setter
    def inline_usage(self, inline_usage):
        """Sets the inline_usage of this SpaceAttachment.

        is inline usage allowed

        :param inline_usage: The inline_usage of this SpaceAttachment.
        :type inline_usage: bool
        """

        self._inline_usage = inline_usage

    @property
    def item_id(self):
        """Gets the item_id of this SpaceAttachment.

        id of the item

        :return: The item_id of this SpaceAttachment.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this SpaceAttachment.

        id of the item

        :param item_id: The item_id of this SpaceAttachment.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def layout(self):
        """Gets the layout of this SpaceAttachment.

        layout

        :return: The layout of this SpaceAttachment.
        :rtype: str
        """
        return self._layout

    @layout.setter
    def layout(self, layout):
        """Sets the layout of this SpaceAttachment.

        layout

        :param layout: The layout of this SpaceAttachment.
        :type layout: str
        """

        self._layout = layout

    @property
    def mime_type(self):
        """Gets the mime_type of this SpaceAttachment.

        the media type

        :return: The mime_type of this SpaceAttachment.
        :rtype: str
        """
        return self._mime_type

    @mime_type.setter
    def mime_type(self, mime_type):
        """Sets the mime_type of this SpaceAttachment.

        the media type

        :param mime_type: The mime_type of this SpaceAttachment.
        :type mime_type: str
        """

        self._mime_type = mime_type

    @property
    def modification_time(self):
        """Gets the modification_time of this SpaceAttachment.

        the time this item has been ben modified

        :return: The modification_time of this SpaceAttachment.
        :rtype: float
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this SpaceAttachment.

        the time this item has been ben modified

        :param modification_time: The modification_time of this SpaceAttachment.
        :type modification_time: float
        """

        self._modification_time = modification_time

    @property
    def size(self):
        """Gets the size of this SpaceAttachment.

        size of this file

        :return: The size of this SpaceAttachment.
        :rtype: float
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this SpaceAttachment.

        size of this file

        :param size: The size of this SpaceAttachment.
        :type size: float
        """

        self._size = size

    @property
    def space_id(self):
        """Gets the space_id of this SpaceAttachment.

        id of the space

        :return: The space_id of this SpaceAttachment.
        :rtype: str
        """
        return self._space_id

    @space_id.setter
    def space_id(self, space_id):
        """Sets the space_id of this SpaceAttachment.

        id of the space

        :param space_id: The space_id of this SpaceAttachment.
        :type space_id: str
        """

        self._space_id = space_id

    @property
    def thumbnail_id(self):
        """Gets the thumbnail_id of this SpaceAttachment.

        the id of the tumbnail

        :return: The thumbnail_id of this SpaceAttachment.
        :rtype: str
        """
        return self._thumbnail_id

    @thumbnail_id.setter
    def thumbnail_id(self, thumbnail_id):
        """Sets the thumbnail_id of this SpaceAttachment.

        the id of the tumbnail

        :param thumbnail_id: The thumbnail_id of this SpaceAttachment.
        :type thumbnail_id: str
        """

        self._thumbnail_id = thumbnail_id
