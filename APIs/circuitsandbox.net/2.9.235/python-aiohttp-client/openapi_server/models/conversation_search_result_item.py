# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConversationSearchResultItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conv_id: str=None, item_ids: List[str]=None):
        """ConversationSearchResultItem - a model defined in OpenAPI

        :param conv_id: The conv_id of this ConversationSearchResultItem.
        :param item_ids: The item_ids of this ConversationSearchResultItem.
        """
        self.openapi_types = {
            'conv_id': str,
            'item_ids': List[str]
        }

        self.attribute_map = {
            'conv_id': 'convId',
            'item_ids': 'itemIds'
        }

        self._conv_id = conv_id
        self._item_ids = item_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationSearchResultItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConversationSearchResultItem of this ConversationSearchResultItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conv_id(self):
        """Gets the conv_id of this ConversationSearchResultItem.

        The ID of the conversation to which the matching items belong.

        :return: The conv_id of this ConversationSearchResultItem.
        :rtype: str
        """
        return self._conv_id

    @conv_id.setter
    def conv_id(self, conv_id):
        """Sets the conv_id of this ConversationSearchResultItem.

        The ID of the conversation to which the matching items belong.

        :param conv_id: The conv_id of this ConversationSearchResultItem.
        :type conv_id: str
        """

        self._conv_id = conv_id

    @property
    def item_ids(self):
        """Gets the item_ids of this ConversationSearchResultItem.

        The conversation items which contain the search result. The list maybe empty in case a hit was found for the conversation related data like topic or participants.

        :return: The item_ids of this ConversationSearchResultItem.
        :rtype: List[str]
        """
        return self._item_ids

    @item_ids.setter
    def item_ids(self, item_ids):
        """Sets the item_ids of this ConversationSearchResultItem.

        The conversation items which contain the search result. The list maybe empty in case a hit was found for the conversation related data like topic or participants.

        :param item_ids: The item_ids of this ConversationSearchResultItem.
        :type item_ids: List[str]
        """

        self._item_ids = item_ids
