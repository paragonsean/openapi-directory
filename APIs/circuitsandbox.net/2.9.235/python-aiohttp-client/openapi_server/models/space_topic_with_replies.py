# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.space_reply import SpaceReply
from openapi_server.models.space_topic import SpaceTopic
from openapi_server import util


class SpaceTopicWithReplies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replies: List[SpaceReply]=None, topic: SpaceTopic=None):
        """SpaceTopicWithReplies - a model defined in OpenAPI

        :param replies: The replies of this SpaceTopicWithReplies.
        :param topic: The topic of this SpaceTopicWithReplies.
        """
        self.openapi_types = {
            'replies': List[SpaceReply],
            'topic': SpaceTopic
        }

        self.attribute_map = {
            'replies': 'replies',
            'topic': 'topic'
        }

        self._replies = replies
        self._topic = topic

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpaceTopicWithReplies':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpaceTopicWithReplies of this SpaceTopicWithReplies.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replies(self):
        """Gets the replies of this SpaceTopicWithReplies.

        A List holding the replies for a topic

        :return: The replies of this SpaceTopicWithReplies.
        :rtype: List[SpaceReply]
        """
        return self._replies

    @replies.setter
    def replies(self, replies):
        """Sets the replies of this SpaceTopicWithReplies.

        A List holding the replies for a topic

        :param replies: The replies of this SpaceTopicWithReplies.
        :type replies: List[SpaceReply]
        """

        self._replies = replies

    @property
    def topic(self):
        """Gets the topic of this SpaceTopicWithReplies.


        :return: The topic of this SpaceTopicWithReplies.
        :rtype: SpaceTopic
        """
        return self._topic

    @topic.setter
    def topic(self, topic):
        """Sets the topic of this SpaceTopicWithReplies.


        :param topic: The topic of this SpaceTopicWithReplies.
        :type topic: SpaceTopic
        """

        self._topic = topic
