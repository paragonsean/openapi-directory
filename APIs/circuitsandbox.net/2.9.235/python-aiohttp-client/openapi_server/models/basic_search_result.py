# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.space import Space
from openapi_server import util


class BasicSearchResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, spaces: List[Space]=None, status: str=None):
        """BasicSearchResult - a model defined in OpenAPI

        :param spaces: The spaces of this BasicSearchResult.
        :param status: The status of this BasicSearchResult.
        """
        self.openapi_types = {
            'spaces': List[Space],
            'status': str
        }

        self.attribute_map = {
            'spaces': 'spaces',
            'status': 'status'
        }

        self._spaces = spaces
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BasicSearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BasicSearchResult of this BasicSearchResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def spaces(self):
        """Gets the spaces of this BasicSearchResult.

        List of spaces

        :return: The spaces of this BasicSearchResult.
        :rtype: List[Space]
        """
        return self._spaces

    @spaces.setter
    def spaces(self, spaces):
        """Sets the spaces of this BasicSearchResult.

        List of spaces

        :param spaces: The spaces of this BasicSearchResult.
        :type spaces: List[Space]
        """

        self._spaces = spaces

    @property
    def status(self):
        """Gets the status of this BasicSearchResult.

        The status of the search (NORESULT, ERROR, TIMEOUT, MORERESULT)

        :return: The status of this BasicSearchResult.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BasicSearchResult.

        The status of the search (NORESULT, ERROR, TIMEOUT, MORERESULT)

        :param status: The status of this BasicSearchResult.
        :type status: str
        """

        self._status = status
