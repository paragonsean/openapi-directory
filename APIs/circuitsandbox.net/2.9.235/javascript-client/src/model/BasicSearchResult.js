/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Space from './Space';

/**
 * The BasicSearchResult model module.
 * @module model/BasicSearchResult
 * @version 2.9.235
 */
class BasicSearchResult {
    /**
     * Constructs a new <code>BasicSearchResult</code>.
     * @alias module:model/BasicSearchResult
     */
    constructor() { 
        
        BasicSearchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BasicSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasicSearchResult} obj Optional instance to populate.
     * @return {module:model/BasicSearchResult} The populated <code>BasicSearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BasicSearchResult();

            if (data.hasOwnProperty('spaces')) {
                obj['spaces'] = ApiClient.convertToType(data['spaces'], [Space]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BasicSearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BasicSearchResult</code>.
     */
    static validateJSON(data) {
        if (data['spaces']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['spaces'])) {
                throw new Error("Expected the field `spaces` to be an array in the JSON data but got " + data['spaces']);
            }
            // validate the optional field `spaces` (array)
            for (const item of data['spaces']) {
                Space.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * List of spaces
 * @member {Array.<module:model/Space>} spaces
 */
BasicSearchResult.prototype['spaces'] = undefined;

/**
 * The status of the search (NORESULT, ERROR, TIMEOUT, MORERESULT)
 * @member {String} status
 */
BasicSearchResult.prototype['status'] = undefined;






export default BasicSearchResult;

