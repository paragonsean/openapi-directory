/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ParticipantsLike model module.
 * @module model/ParticipantsLike
 * @version 2.9.235
 */
class ParticipantsLike {
    /**
     * Constructs a new <code>ParticipantsLike</code>.
     * @alias module:model/ParticipantsLike
     */
    constructor() { 
        
        ParticipantsLike.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ParticipantsLike</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ParticipantsLike} obj Optional instance to populate.
     * @return {module:model/ParticipantsLike} The populated <code>ParticipantsLike</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ParticipantsLike();

            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('largeImageUri')) {
                obj['largeImageUri'] = ApiClient.convertToType(data['largeImageUri'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('smallImageUri')) {
                obj['smallImageUri'] = ApiClient.convertToType(data['smallImageUri'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ParticipantsLike</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ParticipantsLike</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['largeImageUri'] && !(typeof data['largeImageUri'] === 'string' || data['largeImageUri'] instanceof String)) {
            throw new Error("Expected the field `largeImageUri` to be a primitive type in the JSON string but got " + data['largeImageUri']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['smallImageUri'] && !(typeof data['smallImageUri'] === 'string' || data['smallImageUri'] instanceof String)) {
            throw new Error("Expected the field `smallImageUri` to be a primitive type in the JSON string but got " + data['smallImageUri']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }

        return true;
    }


}



/**
 * The first name of the user
 * @member {String} firstName
 */
ParticipantsLike.prototype['firstName'] = undefined;

/**
 * The large image uri of the user
 * @member {String} largeImageUri
 */
ParticipantsLike.prototype['largeImageUri'] = undefined;

/**
 * The last name of the user
 * @member {String} lastName
 */
ParticipantsLike.prototype['lastName'] = undefined;

/**
 * The small image uri of the user
 * @member {String} smallImageUri
 */
ParticipantsLike.prototype['smallImageUri'] = undefined;

/**
 * The id of the user
 * @member {String} userId
 */
ParticipantsLike.prototype['userId'] = undefined;






export default ParticipantsLike;

