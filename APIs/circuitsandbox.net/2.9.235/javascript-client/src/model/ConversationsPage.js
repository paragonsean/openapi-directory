/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Conversation from './Conversation';

/**
 * The ConversationsPage model module.
 * @module model/ConversationsPage
 * @version 2.9.235
 */
class ConversationsPage {
    /**
     * Constructs a new <code>ConversationsPage</code>.
     * @alias module:model/ConversationsPage
     */
    constructor() { 
        
        ConversationsPage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationsPage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsPage} obj Optional instance to populate.
     * @return {module:model/ConversationsPage} The populated <code>ConversationsPage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsPage();

            if (data.hasOwnProperty('conversationList')) {
                obj['conversationList'] = ApiClient.convertToType(data['conversationList'], [Conversation]);
            }
            if (data.hasOwnProperty('hasMore')) {
                obj['hasMore'] = ApiClient.convertToType(data['hasMore'], Object);
            }
            if (data.hasOwnProperty('nextPagePointer')) {
                obj['nextPagePointer'] = ApiClient.convertToType(data['nextPagePointer'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsPage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsPage</code>.
     */
    static validateJSON(data) {
        if (data['conversationList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conversationList'])) {
                throw new Error("Expected the field `conversationList` to be an array in the JSON data but got " + data['conversationList']);
            }
            // validate the optional field `conversationList` (array)
            for (const item of data['conversationList']) {
                Conversation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextPagePointer'] && !(typeof data['nextPagePointer'] === 'string' || data['nextPagePointer'] instanceof String)) {
            throw new Error("Expected the field `nextPagePointer` to be a primitive type in the JSON string but got " + data['nextPagePointer']);
        }

        return true;
    }


}



/**
 * List of conversations
 * @member {Array.<module:model/Conversation>} conversationList
 */
ConversationsPage.prototype['conversationList'] = undefined;

/**
 * Has more pages of conversations
 * @member {Object} hasMore
 */
ConversationsPage.prototype['hasMore'] = undefined;

/**
 * Pointer to the next set page of conversations
 * @member {String} nextPagePointer
 */
ConversationsPage.prototype['nextPagePointer'] = undefined;






export default ConversationsPage;

