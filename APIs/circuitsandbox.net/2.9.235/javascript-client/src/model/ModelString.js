/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelString model module.
 * @module model/ModelString
 * @version 2.9.235
 */
class ModelString {
    /**
     * Constructs a new <code>ModelString</code>.
     * @alias module:model/ModelString
     */
    constructor() { 
        
        ModelString.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelString</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelString} obj Optional instance to populate.
     * @return {module:model/ModelString} The populated <code>ModelString</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelString();

            if (data.hasOwnProperty('CASE_INSENSITIVE_ORDER')) {
                obj['CASE_INSENSITIVE_ORDER'] = ApiClient.convertToType(data['CASE_INSENSITIVE_ORDER'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelString</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelString</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Object} CASE_INSENSITIVE_ORDER
 */
ModelString.prototype['CASE_INSENSITIVE_ORDER'] = undefined;






export default ModelString;

