/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Space from './Space';

/**
 * The DirectoryResult model module.
 * @module model/DirectoryResult
 * @version 2.9.235
 */
class DirectoryResult {
    /**
     * Constructs a new <code>DirectoryResult</code>.
     * @alias module:model/DirectoryResult
     */
    constructor() { 
        
        DirectoryResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DirectoryResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectoryResult} obj Optional instance to populate.
     * @return {module:model/DirectoryResult} The populated <code>DirectoryResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectoryResult();

            if (data.hasOwnProperty('hasMore')) {
                obj['hasMore'] = ApiClient.convertToType(data['hasMore'], 'Boolean');
            }
            if (data.hasOwnProperty('searchPointer')) {
                obj['searchPointer'] = ApiClient.convertToType(data['searchPointer'], 'String');
            }
            if (data.hasOwnProperty('spaces')) {
                obj['spaces'] = ApiClient.convertToType(data['spaces'], [Space]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectoryResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectoryResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['searchPointer'] && !(typeof data['searchPointer'] === 'string' || data['searchPointer'] instanceof String)) {
            throw new Error("Expected the field `searchPointer` to be a primitive type in the JSON string but got " + data['searchPointer']);
        }
        if (data['spaces']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['spaces'])) {
                throw new Error("Expected the field `spaces` to be an array in the JSON data but got " + data['spaces']);
            }
            // validate the optional field `spaces` (array)
            for (const item of data['spaces']) {
                Space.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * are more results available, than start another search
 * @member {Boolean} hasMore
 */
DirectoryResult.prototype['hasMore'] = undefined;

/**
 * pointer for stored search 
 * @member {String} searchPointer
 */
DirectoryResult.prototype['searchPointer'] = undefined;

/**
 * list of spaces
 * @member {Array.<module:model/Space>} spaces
 */
DirectoryResult.prototype['spaces'] = undefined;






export default DirectoryResult;

