/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SpaceItem from './SpaceItem';

/**
 * The SpaceReply model module.
 * @module model/SpaceReply
 * @version 2.9.235
 */
class SpaceReply {
    /**
     * Constructs a new <code>SpaceReply</code>.
     * @alias module:model/SpaceReply
     */
    constructor() { 
        
        SpaceReply.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpaceReply</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpaceReply} obj Optional instance to populate.
     * @return {module:model/SpaceReply} The populated <code>SpaceReply</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpaceReply();

            if (data.hasOwnProperty('parentTopicId')) {
                obj['parentTopicId'] = ApiClient.convertToType(data['parentTopicId'], 'String');
            }
            if (data.hasOwnProperty('spaceItem')) {
                obj['spaceItem'] = SpaceItem.constructFromObject(data['spaceItem']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpaceReply</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpaceReply</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['parentTopicId'] && !(typeof data['parentTopicId'] === 'string' || data['parentTopicId'] instanceof String)) {
            throw new Error("Expected the field `parentTopicId` to be a primitive type in the JSON string but got " + data['parentTopicId']);
        }
        // validate the optional field `spaceItem`
        if (data['spaceItem']) { // data not null
          SpaceItem.validateJSON(data['spaceItem']);
        }

        return true;
    }


}



/**
 * The Id of the parent topic
 * @member {String} parentTopicId
 */
SpaceReply.prototype['parentTopicId'] = undefined;

/**
 * @member {module:model/SpaceItem} spaceItem
 */
SpaceReply.prototype['spaceItem'] = undefined;






export default SpaceReply;

