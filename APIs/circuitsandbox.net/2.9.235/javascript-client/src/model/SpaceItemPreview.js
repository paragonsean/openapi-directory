/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SpaceItemPreview model module.
 * @module model/SpaceItemPreview
 * @version 2.9.235
 */
class SpaceItemPreview {
    /**
     * Constructs a new <code>SpaceItemPreview</code>.
     * @alias module:model/SpaceItemPreview
     */
    constructor() { 
        
        SpaceItemPreview.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpaceItemPreview</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpaceItemPreview} obj Optional instance to populate.
     * @return {module:model/SpaceItemPreview} The populated <code>SpaceItemPreview</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpaceItemPreview();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = ApiClient.convertToType(data['html'], 'String');
            }
            if (data.hasOwnProperty('imageURI')) {
                obj['imageURI'] = ApiClient.convertToType(data['imageURI'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('srcURL')) {
                obj['srcURL'] = ApiClient.convertToType(data['srcURL'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpaceItemPreview</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpaceItemPreview</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['html'] && !(typeof data['html'] === 'string' || data['html'] instanceof String)) {
            throw new Error("Expected the field `html` to be a primitive type in the JSON string but got " + data['html']);
        }
        // ensure the json data is a string
        if (data['imageURI'] && !(typeof data['imageURI'] === 'string' || data['imageURI'] instanceof String)) {
            throw new Error("Expected the field `imageURI` to be a primitive type in the JSON string but got " + data['imageURI']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['srcURL'] && !(typeof data['srcURL'] === 'string' || data['srcURL'] instanceof String)) {
            throw new Error("Expected the field `srcURL` to be a primitive type in the JSON string but got " + data['srcURL']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The description of this preview
 * @member {String} description
 */
SpaceItemPreview.prototype['description'] = undefined;

/**
 * Html code
 * @member {String} html
 */
SpaceItemPreview.prototype['html'] = undefined;

/**
 * The URI of the image
 * @member {String} imageURI
 */
SpaceItemPreview.prototype['imageURI'] = undefined;

/**
 * the provider
 * @member {String} provider
 */
SpaceItemPreview.prototype['provider'] = undefined;

/**
 * The URL of the source
 * @member {String} srcURL
 */
SpaceItemPreview.prototype['srcURL'] = undefined;

/**
 * The title of this preview
 * @member {String} title
 */
SpaceItemPreview.prototype['title'] = undefined;

/**
 * The type of this preview
 * @member {String} type
 */
SpaceItemPreview.prototype['type'] = undefined;






export default SpaceItemPreview;

