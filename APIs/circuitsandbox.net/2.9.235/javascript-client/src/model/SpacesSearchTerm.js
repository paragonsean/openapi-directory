/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SpacesSearchTerm model module.
 * @module model/SpacesSearchTerm
 * @version 2.9.235
 */
class SpacesSearchTerm {
    /**
     * Constructs a new <code>SpacesSearchTerm</code>.
     * @alias module:model/SpacesSearchTerm
     */
    constructor() { 
        
        SpacesSearchTerm.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpacesSearchTerm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpacesSearchTerm} obj Optional instance to populate.
     * @return {module:model/SpacesSearchTerm} The populated <code>SpacesSearchTerm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpacesSearchTerm();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], Object);
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
            if (data.hasOwnProperty('searchTerm')) {
                obj['searchTerm'] = ApiClient.convertToType(data['searchTerm'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpacesSearchTerm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpacesSearchTerm</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }
        // ensure the json data is a string
        if (data['searchTerm'] && !(typeof data['searchTerm'] === 'string' || data['searchTerm'] instanceof String)) {
            throw new Error("Expected the field `searchTerm` to be a primitive type in the JSON string but got " + data['searchTerm']);
        }

        return true;
    }


}



/**
 * The end time
 * @member {Object} endTime
 */
SpacesSearchTerm.prototype['endTime'] = undefined;

/**
 * The scope of the search
 * @member {String} scope
 */
SpacesSearchTerm.prototype['scope'] = undefined;

/**
 * The search term
 * @member {String} searchTerm
 */
SpacesSearchTerm.prototype['searchTerm'] = undefined;

/**
 * The start time
 * @member {Object} startTime
 */
SpacesSearchTerm.prototype['startTime'] = undefined;






export default SpacesSearchTerm;

