/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConversationItem from '../model/ConversationItem';
import V2DistributedClientInfo from '../model/V2DistributedClientInfo';

/**
* Telephony service.
* @module api/TelephonyApi
* @version 2.9.235
*/
export default class TelephonyApi {

    /**
    * Constructs a new TelephonyApi. 
    * @alias module:api/TelephonyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getJournalEntries operation.
     * @callback module:api/TelephonyApi~getJournalEntriesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ConversationItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get journal
     * Get telephony journal OauthScopes: READ_CONVERSATIONS
     * @param {String} telephonyConversationId The id of the telephony conversation
     * @param {Object} opts Optional parameters
     * @param {Number} [timestamp = 0)] A timestamp, default = 0
     * @param {Number} [numberOfEntries = 25)] The number of entries, between 1 and 100, default = 25
     * @param {module:model/String} [direction = 'AFTER')] The direction (BEFORE||AFTER||BOTH), default = AFTER
     * @param {module:model/String} [journalFilter = 'ALL')] The filter, ALL||MISSED||DIALED||RECEIVED||DIVERTED||VOICEMAILS||UNHERAD_VOICEMAILS. default = ALL
     * @param {module:api/TelephonyApi~getJournalEntriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ConversationItem>}
     */
    getJournalEntries(telephonyConversationId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'telephonyConversationId' is set
      if (telephonyConversationId === undefined || telephonyConversationId === null) {
        throw new Error("Missing the required parameter 'telephonyConversationId' when calling getJournalEntries");
      }

      let pathParams = {
        'telephonyConversationId': telephonyConversationId
      };
      let queryParams = {
        'timestamp': opts['timestamp'],
        'numberOfEntries': opts['numberOfEntries'],
        'direction': opts['direction'],
        'journalFilter': opts['journalFilter']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = [ConversationItem];
      return this.apiClient.callApi(
        '/telephony/{telephonyConversationId}/journal', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v2GetDeviceInfos operation.
     * @callback module:api/TelephonyApi~v2GetDeviceInfosCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/V2DistributedClientInfo>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get devices infos
     * Get the device infos of the requesting user OauthScopes: READ_USER_PROFILE
     * @param {module:api/TelephonyApi~v2GetDeviceInfosCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/V2DistributedClientInfo>}
     */
    v2GetDeviceInfos(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = [V2DistributedClientInfo];
      return this.apiClient.callApi(
        '/telephony/deviceInfos', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v2GetTelephonyConversationId operation.
     * @callback module:api/TelephonyApi~v2GetTelephonyConversationIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get telephony conversation id
     * Get telephony conversation id for requesting client OauthScopes: READ_CONVERSATIONS
     * @param {module:api/TelephonyApi~v2GetTelephonyConversationIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v2GetTelephonyConversationId(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/telephony/telephonyConversationId', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
