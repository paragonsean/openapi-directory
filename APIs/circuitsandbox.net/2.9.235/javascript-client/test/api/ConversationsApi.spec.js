/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RestApiVersion2);
  }
}(this, function(expect, RestApiVersion2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RestApiVersion2.ConversationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConversationsApi', function() {
    describe('addFavorite', function() {
      it('should call addFavorite successfully', function(done) {
        //uncomment below and update the code to test addFavorite
        //instance.addFavorite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addLabel', function() {
      it('should call addLabel successfully', function(done) {
        //uncomment below and update the code to test addLabel
        //instance.addLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addModerators', function() {
      it('should call addModerators successfully', function(done) {
        //uncomment below and update the code to test addModerators
        //instance.addModerators(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addParticipantCommunity', function() {
      it('should call addParticipantCommunity successfully', function(done) {
        //uncomment below and update the code to test addParticipantCommunity
        //instance.addParticipantCommunity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addParticipantGroup', function() {
      it('should call addParticipantGroup successfully', function(done) {
        //uncomment below and update the code to test addParticipantGroup
        //instance.addParticipantGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addTextItem', function() {
      it('should call addTextItem successfully', function(done) {
        //uncomment below and update the code to test addTextItem
        //instance.addTextItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addTextItemWithParent', function() {
      it('should call addTextItemWithParent successfully', function(done) {
        //uncomment below and update the code to test addTextItemWithParent
        //instance.addTextItemWithParent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('archiveConversation', function() {
      it('should call archiveConversation successfully', function(done) {
        //uncomment below and update the code to test archiveConversation
        //instance.archiveConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('assignLabel', function() {
      it('should call assignLabel successfully', function(done) {
        //uncomment below and update the code to test assignLabel
        //instance.assignLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCommunityConversation', function() {
      it('should call createCommunityConversation successfully', function(done) {
        //uncomment below and update the code to test createCommunityConversation
        //instance.createCommunityConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDirectConversation', function() {
      it('should call createDirectConversation successfully', function(done) {
        //uncomment below and update the code to test createDirectConversation
        //instance.createDirectConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGroupConversation', function() {
      it('should call createGroupConversation successfully', function(done) {
        //uncomment below and update the code to test createGroupConversation
        //instance.createGroupConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFavorite', function() {
      it('should call deleteFavorite successfully', function(done) {
        //uncomment below and update the code to test deleteFavorite
        //instance.deleteFavorite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTextItem', function() {
      it('should call deleteTextItem successfully', function(done) {
        //uncomment below and update the code to test deleteTextItem
        //instance.deleteTextItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('flagItem', function() {
      it('should call flagItem successfully', function(done) {
        //uncomment below and update the code to test flagItem
        //instance.flagItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCommunityConversations', function() {
      it('should call getCommunityConversations successfully', function(done) {
        //uncomment below and update the code to test getCommunityConversations
        //instance.getCommunityConversations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConversationItems', function() {
      it('should call getConversationItems successfully', function(done) {
        //uncomment below and update the code to test getConversationItems
        //instance.getConversationItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConversationbyId', function() {
      it('should call getConversationbyId successfully', function(done) {
        //uncomment below and update the code to test getConversationbyId
        //instance.getConversationbyId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConversations', function() {
      it('should call getConversations successfully', function(done) {
        //uncomment below and update the code to test getConversations
        //instance.getConversations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConversationsById', function() {
      it('should call getConversationsById successfully', function(done) {
        //uncomment below and update the code to test getConversationsById
        //instance.getConversationsById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConversationsByLabel', function() {
      it('should call getConversationsByLabel successfully', function(done) {
        //uncomment below and update the code to test getConversationsByLabel
        //instance.getConversationsByLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDirectConversation', function() {
      it('should call getDirectConversation successfully', function(done) {
        //uncomment below and update the code to test getDirectConversation
        //instance.getDirectConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFavoriteConversations', function() {
      it('should call getFavoriteConversations successfully', function(done) {
        //uncomment below and update the code to test getFavoriteConversations
        //instance.getFavoriteConversations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFlagItem', function() {
      it('should call getFlagItem successfully', function(done) {
        //uncomment below and update the code to test getFlagItem
        //instance.getFlagItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFlagItemConv', function() {
      it('should call getFlagItemConv successfully', function(done) {
        //uncomment below and update the code to test getFlagItemConv
        //instance.getFlagItemConv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJoinDetails', function() {
      it('should call getJoinDetails successfully', function(done) {
        //uncomment below and update the code to test getJoinDetails
        //instance.getJoinDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJoinDetailsMultiple', function() {
      it('should call getJoinDetailsMultiple successfully', function(done) {
        //uncomment below and update the code to test getJoinDetailsMultiple
        //instance.getJoinDetailsMultiple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getParticipantsByConvId', function() {
      it('should call getParticipantsByConvId successfully', function(done) {
        //uncomment below and update the code to test getParticipantsByConvId
        //instance.getParticipantsByConvId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPinnedConversations', function() {
      it('should call getPinnedConversations successfully', function(done) {
        //uncomment below and update the code to test getPinnedConversations
        //instance.getPinnedConversations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSingleConversationtem', function() {
      it('should call getSingleConversationtem successfully', function(done) {
        //uncomment below and update the code to test getSingleConversationtem
        //instance.getSingleConversationtem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('joinCommunityConversation', function() {
      it('should call joinCommunityConversation successfully', function(done) {
        //uncomment below and update the code to test joinCommunityConversation
        //instance.joinCommunityConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('likeItem', function() {
      it('should call likeItem successfully', function(done) {
        //uncomment below and update the code to test likeItem
        //instance.likeItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('moderateConversation', function() {
      it('should call moderateConversation successfully', function(done) {
        //uncomment below and update the code to test moderateConversation
        //instance.moderateConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pinAConversation', function() {
      it('should call pinAConversation successfully', function(done) {
        //uncomment below and update the code to test pinAConversation
        //instance.pinAConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeLabel', function() {
      it('should call removeLabel successfully', function(done) {
        //uncomment below and update the code to test removeLabel
        //instance.removeLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeModerators', function() {
      it('should call removeModerators successfully', function(done) {
        //uncomment below and update the code to test removeModerators
        //instance.removeModerators(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeParticipantCommunity', function() {
      it('should call removeParticipantCommunity successfully', function(done) {
        //uncomment below and update the code to test removeParticipantCommunity
        //instance.removeParticipantCommunity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeParticipantGroup', function() {
      it('should call removeParticipantGroup successfully', function(done) {
        //uncomment below and update the code to test removeParticipantGroup
        //instance.removeParticipantGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resolveInvitationToken', function() {
      it('should call resolveInvitationToken successfully', function(done) {
        //uncomment below and update the code to test resolveInvitationToken
        //instance.resolveInvitationToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchConversations', function() {
      it('should call searchConversations successfully', function(done) {
        //uncomment below and update the code to test searchConversations
        //instance.searchConversations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unFlagItem', function() {
      it('should call unFlagItem successfully', function(done) {
        //uncomment below and update the code to test unFlagItem
        //instance.unFlagItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unPinAConversation', function() {
      it('should call unPinAConversation successfully', function(done) {
        //uncomment below and update the code to test unPinAConversation
        //instance.unPinAConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unassignLabel', function() {
      it('should call unassignLabel successfully', function(done) {
        //uncomment below and update the code to test unassignLabel
        //instance.unassignLabel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('undoArchiveConversation', function() {
      it('should call undoArchiveConversation successfully', function(done) {
        //uncomment below and update the code to test undoArchiveConversation
        //instance.undoArchiveConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unlikeItem', function() {
      it('should call unlikeItem successfully', function(done) {
        //uncomment below and update the code to test unlikeItem
        //instance.unlikeItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unmoderateConversation', function() {
      it('should call unmoderateConversation successfully', function(done) {
        //uncomment below and update the code to test unmoderateConversation
        //instance.unmoderateConversation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConversationCommunity', function() {
      it('should call updateConversationCommunity successfully', function(done) {
        //uncomment below and update the code to test updateConversationCommunity
        //instance.updateConversationCommunity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConversationGroup', function() {
      it('should call updateConversationGroup successfully', function(done) {
        //uncomment below and update the code to test updateConversationGroup
        //instance.updateConversationGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProfile', function() {
      it('should call updateProfile successfully', function(done) {
        //uncomment below and update the code to test updateProfile
        //instance.updateProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTextItem', function() {
      it('should call updateTextItem successfully', function(done) {
        //uncomment below and update the code to test updateTextItem
        //instance.updateTextItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
