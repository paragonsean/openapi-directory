/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RestApiVersion2);
  }
}(this, function(expect, RestApiVersion2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RestApiVersion2.OutgoingWebhooksApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OutgoingWebhooksApi', function() {
    describe('addPresenceWebHook', function() {
      it('should call addPresenceWebHook successfully', function(done) {
        //uncomment below and update the code to test addPresenceWebHook
        //instance.addPresenceWebHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addWebHook', function() {
      it('should call addWebHook successfully', function(done) {
        //uncomment below and update the code to test addWebHook
        //instance.addWebHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWebHook', function() {
      it('should call getWebHook successfully', function(done) {
        //uncomment below and update the code to test getWebHook
        //instance.getWebHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWebHookById', function() {
      it('should call getWebHookById successfully', function(done) {
        //uncomment below and update the code to test getWebHookById
        //instance.getWebHookById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeWebHook', function() {
      it('should call removeWebHook successfully', function(done) {
        //uncomment below and update the code to test removeWebHook
        //instance.removeWebHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeWebHooks', function() {
      it('should call removeWebHooks successfully', function(done) {
        //uncomment below and update the code to test removeWebHooks
        //instance.removeWebHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePresenceWebHook', function() {
      it('should call updatePresenceWebHook successfully', function(done) {
        //uncomment below and update the code to test updatePresenceWebHook
        //instance.updatePresenceWebHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWebHook', function() {
      it('should call updateWebHook successfully', function(done) {
        //uncomment below and update the code to test updateWebHook
        //instance.updateWebHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
