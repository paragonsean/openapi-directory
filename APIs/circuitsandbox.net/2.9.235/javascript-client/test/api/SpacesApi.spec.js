/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RestApiVersion2);
  }
}(this, function(expect, RestApiVersion2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RestApiVersion2.SpacesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SpacesApi', function() {
    describe('addParticipantsToSpace', function() {
      it('should call addParticipantsToSpace successfully', function(done) {
        //uncomment below and update the code to test addParticipantsToSpace
        //instance.addParticipantsToSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addRecentSpaceSearch', function() {
      it('should call addRecentSpaceSearch successfully', function(done) {
        //uncomment below and update the code to test addRecentSpaceSearch
        //instance.addRecentSpaceSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('assignLabels', function() {
      it('should call assignLabels successfully', function(done) {
        //uncomment below and update the code to test assignLabels
        //instance.assignLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelSpaceSearch', function() {
      it('should call cancelSpaceSearch successfully', function(done) {
        //uncomment below and update the code to test cancelSpaceSearch
        //instance.cancelSpaceSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createReply', function() {
      it('should call createReply successfully', function(done) {
        //uncomment below and update the code to test createReply
        //instance.createReply(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSpace', function() {
      it('should call createSpace successfully', function(done) {
        //uncomment below and update the code to test createSpace
        //instance.createSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSpaceTopic', function() {
      it('should call createSpaceTopic successfully', function(done) {
        //uncomment below and update the code to test createSpaceTopic
        //instance.createSpaceTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSpace', function() {
      it('should call deleteSpace successfully', function(done) {
        //uncomment below and update the code to test deleteSpace
        //instance.deleteSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSpaceItem', function() {
      it('should call deleteSpaceItem successfully', function(done) {
        //uncomment below and update the code to test deleteSpaceItem
        //instance.deleteSpaceItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('denySpaceAcces', function() {
      it('should call denySpaceAcces successfully', function(done) {
        //uncomment below and update the code to test denySpaceAcces
        //instance.denySpaceAcces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('existsSpaceName', function() {
      it('should call existsSpaceName successfully', function(done) {
        //uncomment below and update the code to test existsSpaceName
        //instance.existsSpaceName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('flagSpaceItem', function() {
      it('should call flagSpaceItem successfully', function(done) {
        //uncomment below and update the code to test flagSpaceItem
        //instance.flagSpaceItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDirectory', function() {
      it('should call getDirectory successfully', function(done) {
        //uncomment below and update the code to test getDirectory
        //instance.getDirectory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFlaggedItems', function() {
      it('should call getFlaggedItems successfully', function(done) {
        //uncomment below and update the code to test getFlaggedItems
        //instance.getFlaggedItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLikes', function() {
      it('should call getLikes successfully', function(done) {
        //uncomment below and update the code to test getLikes
        //instance.getLikes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getParticipantsImportData', function() {
      it('should call getParticipantsImportData successfully', function(done) {
        //uncomment below and update the code to test getParticipantsImportData
        //instance.getParticipantsImportData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPendingParticipants', function() {
      it('should call getPendingParticipants successfully', function(done) {
        //uncomment below and update the code to test getPendingParticipants
        //instance.getPendingParticipants(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPinnedTopics', function() {
      it('should call getPinnedTopics successfully', function(done) {
        //uncomment below and update the code to test getPinnedTopics
        //instance.getPinnedTopics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecentSearches', function() {
      it('should call getRecentSearches successfully', function(done) {
        //uncomment below and update the code to test getRecentSearches
        //instance.getRecentSearches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpaceParticipants', function() {
      it('should call getSpaceParticipants successfully', function(done) {
        //uncomment below and update the code to test getSpaceParticipants
        //instance.getSpaceParticipants(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpaceReplies', function() {
      it('should call getSpaceReplies successfully', function(done) {
        //uncomment below and update the code to test getSpaceReplies
        //instance.getSpaceReplies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpaceTopics', function() {
      it('should call getSpaceTopics successfully', function(done) {
        //uncomment below and update the code to test getSpaceTopics
        //instance.getSpaceTopics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpaces', function() {
      it('should call getSpaces successfully', function(done) {
        //uncomment below and update the code to test getSpaces
        //instance.getSpaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpacesByIds', function() {
      it('should call getSpacesByIds successfully', function(done) {
        //uncomment below and update the code to test getSpacesByIds
        //instance.getSpacesByIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('grantSpaceAcces', function() {
      it('should call grantSpaceAcces successfully', function(done) {
        //uncomment below and update the code to test grantSpaceAcces
        //instance.grantSpaceAcces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('joinSpace', function() {
      it('should call joinSpace successfully', function(done) {
        //uncomment below and update the code to test joinSpace
        //instance.joinSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('leaveSpace', function() {
      it('should call leaveSpace successfully', function(done) {
        //uncomment below and update the code to test leaveSpace
        //instance.leaveSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('likeSpaceItem', function() {
      it('should call likeSpaceItem successfully', function(done) {
        //uncomment below and update the code to test likeSpaceItem
        //instance.likeSpaceItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pinTopic', function() {
      it('should call pinTopic successfully', function(done) {
        //uncomment below and update the code to test pinTopic
        //instance.pinTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestSpaceAcces', function() {
      it('should call requestSpaceAcces successfully', function(done) {
        //uncomment below and update the code to test requestSpaceAcces
        //instance.requestSpaceAcces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchParticipantsToAdd', function() {
      it('should call searchParticipantsToAdd successfully', function(done) {
        //uncomment below and update the code to test searchParticipantsToAdd
        //instance.searchParticipantsToAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchSpaceParticipants', function() {
      it('should call searchSpaceParticipants successfully', function(done) {
        //uncomment below and update the code to test searchSpaceParticipants
        //instance.searchSpaceParticipants(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startBasicSpacesSearch', function() {
      it('should call startBasicSpacesSearch successfully', function(done) {
        //uncomment below and update the code to test startBasicSpacesSearch
        //instance.startBasicSpacesSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startDetailedSpaceSearch', function() {
      it('should call startDetailedSpaceSearch successfully', function(done) {
        //uncomment below and update the code to test startDetailedSpaceSearch
        //instance.startDetailedSpaceSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unassignLabels', function() {
      it('should call unassignLabels successfully', function(done) {
        //uncomment below and update the code to test unassignLabels
        //instance.unassignLabels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unflagSpaceItem', function() {
      it('should call unflagSpaceItem successfully', function(done) {
        //uncomment below and update the code to test unflagSpaceItem
        //instance.unflagSpaceItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unlikeSpaceItem', function() {
      it('should call unlikeSpaceItem successfully', function(done) {
        //uncomment below and update the code to test unlikeSpaceItem
        //instance.unlikeSpaceItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unpinTopic', function() {
      it('should call unpinTopic successfully', function(done) {
        //uncomment below and update the code to test unpinTopic
        //instance.unpinTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateParticipantInSpace', function() {
      it('should call updateParticipantInSpace successfully', function(done) {
        //uncomment below and update the code to test updateParticipantInSpace
        //instance.updateParticipantInSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateReadTimestamp', function() {
      it('should call updateReadTimestamp successfully', function(done) {
        //uncomment below and update the code to test updateReadTimestamp
        //instance.updateReadTimestamp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSpace', function() {
      it('should call updateSpace successfully', function(done) {
        //uncomment below and update the code to test updateSpace
        //instance.updateSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSpaceReply', function() {
      it('should call updateSpaceReply successfully', function(done) {
        //uncomment below and update the code to test updateSpaceReply
        //instance.updateSpaceReply(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSpaceTopic', function() {
      it('should call updateSpaceTopic successfully', function(done) {
        //uncomment below and update the code to test updateSpaceTopic
        //instance.updateSpaceTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTopicTags', function() {
      it('should call updateTopicTags successfully', function(done) {
        //uncomment below and update the code to test updateTopicTags
        //instance.updateTopicTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v2GetTopicWithReplies', function() {
      it('should call v2GetTopicWithReplies successfully', function(done) {
        //uncomment below and update the code to test v2GetTopicWithReplies
        //instance.v2GetTopicWithReplies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v2RemoveParticipantsFromSpace', function() {
      it('should call v2RemoveParticipantsFromSpace successfully', function(done) {
        //uncomment below and update the code to test v2RemoveParticipantsFromSpace
        //instance.v2RemoveParticipantsFromSpace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v2UpdateWelcomeBoxContent', function() {
      it('should call v2UpdateWelcomeBoxContent successfully', function(done) {
        //uncomment below and update the code to test v2UpdateWelcomeBoxContent
        //instance.v2UpdateWelcomeBoxContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
