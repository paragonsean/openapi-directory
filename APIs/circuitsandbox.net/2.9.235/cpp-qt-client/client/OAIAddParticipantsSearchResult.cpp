/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddParticipantsSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddParticipantsSearchResult::OAIAddParticipantsSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddParticipantsSearchResult::OAIAddParticipantsSearchResult() {
    this->initializeModel();
}

OAIAddParticipantsSearchResult::~OAIAddParticipantsSearchResult() {}

void OAIAddParticipantsSearchResult::initializeModel() {

    m_department_isSet = false;
    m_department_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_is_member_isSet = false;
    m_is_member_isValid = false;

    m_job_title_isSet = false;
    m_job_title_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_small_image_uri_isSet = false;
    m_small_image_uri_isValid = false;

    m_tenant_id_isSet = false;
    m_tenant_id_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAIAddParticipantsSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddParticipantsSearchResult::fromJsonObject(QJsonObject json) {

    m_department_isValid = ::OpenAPI::fromJsonValue(m_department, json[QString("department")]);
    m_department_isSet = !json[QString("department")].isNull() && m_department_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_is_member_isValid = ::OpenAPI::fromJsonValue(m_is_member, json[QString("isMember")]);
    m_is_member_isSet = !json[QString("isMember")].isNull() && m_is_member_isValid;

    m_job_title_isValid = ::OpenAPI::fromJsonValue(m_job_title, json[QString("jobTitle")]);
    m_job_title_isSet = !json[QString("jobTitle")].isNull() && m_job_title_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_small_image_uri_isValid = ::OpenAPI::fromJsonValue(m_small_image_uri, json[QString("smallImageUri")]);
    m_small_image_uri_isSet = !json[QString("smallImageUri")].isNull() && m_small_image_uri_isValid;

    m_tenant_id_isValid = ::OpenAPI::fromJsonValue(m_tenant_id, json[QString("tenantId")]);
    m_tenant_id_isSet = !json[QString("tenantId")].isNull() && m_tenant_id_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;
}

QString OAIAddParticipantsSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddParticipantsSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_department_isSet) {
        obj.insert(QString("department"), ::OpenAPI::toJsonValue(m_department));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_is_member_isSet) {
        obj.insert(QString("isMember"), ::OpenAPI::toJsonValue(m_is_member));
    }
    if (m_job_title_isSet) {
        obj.insert(QString("jobTitle"), ::OpenAPI::toJsonValue(m_job_title));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_small_image_uri_isSet) {
        obj.insert(QString("smallImageUri"), ::OpenAPI::toJsonValue(m_small_image_uri));
    }
    if (m_tenant_id_isSet) {
        obj.insert(QString("tenantId"), ::OpenAPI::toJsonValue(m_tenant_id));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QString OAIAddParticipantsSearchResult::getDepartment() const {
    return m_department;
}
void OAIAddParticipantsSearchResult::setDepartment(const QString &department) {
    m_department = department;
    m_department_isSet = true;
}

bool OAIAddParticipantsSearchResult::is_department_Set() const{
    return m_department_isSet;
}

bool OAIAddParticipantsSearchResult::is_department_Valid() const{
    return m_department_isValid;
}

QString OAIAddParticipantsSearchResult::getFirstName() const {
    return m_first_name;
}
void OAIAddParticipantsSearchResult::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIAddParticipantsSearchResult::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIAddParticipantsSearchResult::is_first_name_Valid() const{
    return m_first_name_isValid;
}

bool OAIAddParticipantsSearchResult::isIsMember() const {
    return m_is_member;
}
void OAIAddParticipantsSearchResult::setIsMember(const bool &is_member) {
    m_is_member = is_member;
    m_is_member_isSet = true;
}

bool OAIAddParticipantsSearchResult::is_is_member_Set() const{
    return m_is_member_isSet;
}

bool OAIAddParticipantsSearchResult::is_is_member_Valid() const{
    return m_is_member_isValid;
}

QString OAIAddParticipantsSearchResult::getJobTitle() const {
    return m_job_title;
}
void OAIAddParticipantsSearchResult::setJobTitle(const QString &job_title) {
    m_job_title = job_title;
    m_job_title_isSet = true;
}

bool OAIAddParticipantsSearchResult::is_job_title_Set() const{
    return m_job_title_isSet;
}

bool OAIAddParticipantsSearchResult::is_job_title_Valid() const{
    return m_job_title_isValid;
}

QString OAIAddParticipantsSearchResult::getLastName() const {
    return m_last_name;
}
void OAIAddParticipantsSearchResult::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIAddParticipantsSearchResult::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIAddParticipantsSearchResult::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIAddParticipantsSearchResult::getSmallImageUri() const {
    return m_small_image_uri;
}
void OAIAddParticipantsSearchResult::setSmallImageUri(const QString &small_image_uri) {
    m_small_image_uri = small_image_uri;
    m_small_image_uri_isSet = true;
}

bool OAIAddParticipantsSearchResult::is_small_image_uri_Set() const{
    return m_small_image_uri_isSet;
}

bool OAIAddParticipantsSearchResult::is_small_image_uri_Valid() const{
    return m_small_image_uri_isValid;
}

QString OAIAddParticipantsSearchResult::getTenantId() const {
    return m_tenant_id;
}
void OAIAddParticipantsSearchResult::setTenantId(const QString &tenant_id) {
    m_tenant_id = tenant_id;
    m_tenant_id_isSet = true;
}

bool OAIAddParticipantsSearchResult::is_tenant_id_Set() const{
    return m_tenant_id_isSet;
}

bool OAIAddParticipantsSearchResult::is_tenant_id_Valid() const{
    return m_tenant_id_isValid;
}

QString OAIAddParticipantsSearchResult::getUserId() const {
    return m_user_id;
}
void OAIAddParticipantsSearchResult::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIAddParticipantsSearchResult::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIAddParticipantsSearchResult::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAIAddParticipantsSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_department_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_member_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_small_image_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddParticipantsSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
