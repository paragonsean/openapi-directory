/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBasicSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBasicSearchResult::OAIBasicSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBasicSearchResult::OAIBasicSearchResult() {
    this->initializeModel();
}

OAIBasicSearchResult::~OAIBasicSearchResult() {}

void OAIBasicSearchResult::initializeModel() {

    m_spaces_isSet = false;
    m_spaces_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIBasicSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBasicSearchResult::fromJsonObject(QJsonObject json) {

    m_spaces_isValid = ::OpenAPI::fromJsonValue(m_spaces, json[QString("spaces")]);
    m_spaces_isSet = !json[QString("spaces")].isNull() && m_spaces_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIBasicSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBasicSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_spaces.size() > 0) {
        obj.insert(QString("spaces"), ::OpenAPI::toJsonValue(m_spaces));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QList<OAISpace> OAIBasicSearchResult::getSpaces() const {
    return m_spaces;
}
void OAIBasicSearchResult::setSpaces(const QList<OAISpace> &spaces) {
    m_spaces = spaces;
    m_spaces_isSet = true;
}

bool OAIBasicSearchResult::is_spaces_Set() const{
    return m_spaces_isSet;
}

bool OAIBasicSearchResult::is_spaces_Valid() const{
    return m_spaces_isValid;
}

QString OAIBasicSearchResult::getStatus() const {
    return m_status;
}
void OAIBasicSearchResult::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIBasicSearchResult::is_status_Set() const{
    return m_status_isSet;
}

bool OAIBasicSearchResult::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIBasicSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_spaces.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBasicSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
