/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISpacePinnedTopic.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISpacePinnedTopic::OAISpacePinnedTopic(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISpacePinnedTopic::OAISpacePinnedTopic() {
    this->initializeModel();
}

OAISpacePinnedTopic::~OAISpacePinnedTopic() {}

void OAISpacePinnedTopic::initializeModel() {

    m_position_isSet = false;
    m_position_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;

    m_topic_id_isSet = false;
    m_topic_id_isValid = false;
}

void OAISpacePinnedTopic::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISpacePinnedTopic::fromJsonObject(QJsonObject json) {

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("subject")]);
    m_subject_isSet = !json[QString("subject")].isNull() && m_subject_isValid;

    m_topic_id_isValid = ::OpenAPI::fromJsonValue(m_topic_id, json[QString("topicId")]);
    m_topic_id_isSet = !json[QString("topicId")].isNull() && m_topic_id_isValid;
}

QString OAISpacePinnedTopic::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISpacePinnedTopic::asJsonObject() const {
    QJsonObject obj;
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_subject_isSet) {
        obj.insert(QString("subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    if (m_topic_id_isSet) {
        obj.insert(QString("topicId"), ::OpenAPI::toJsonValue(m_topic_id));
    }
    return obj;
}

double OAISpacePinnedTopic::getPosition() const {
    return m_position;
}
void OAISpacePinnedTopic::setPosition(const double &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAISpacePinnedTopic::is_position_Set() const{
    return m_position_isSet;
}

bool OAISpacePinnedTopic::is_position_Valid() const{
    return m_position_isValid;
}

QString OAISpacePinnedTopic::getSubject() const {
    return m_subject;
}
void OAISpacePinnedTopic::setSubject(const QString &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAISpacePinnedTopic::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAISpacePinnedTopic::is_subject_Valid() const{
    return m_subject_isValid;
}

QString OAISpacePinnedTopic::getTopicId() const {
    return m_topic_id;
}
void OAISpacePinnedTopic::setTopicId(const QString &topic_id) {
    m_topic_id = topic_id;
    m_topic_id_isSet = true;
}

bool OAISpacePinnedTopic::is_topic_id_Set() const{
    return m_topic_id_isSet;
}

bool OAISpacePinnedTopic::is_topic_id_Valid() const{
    return m_topic_id_isValid;
}

bool OAISpacePinnedTopic::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_topic_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISpacePinnedTopic::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
