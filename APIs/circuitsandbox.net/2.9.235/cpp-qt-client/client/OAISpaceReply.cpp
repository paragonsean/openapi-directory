/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISpaceReply.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISpaceReply::OAISpaceReply(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISpaceReply::OAISpaceReply() {
    this->initializeModel();
}

OAISpaceReply::~OAISpaceReply() {}

void OAISpaceReply::initializeModel() {

    m_parent_topic_id_isSet = false;
    m_parent_topic_id_isValid = false;

    m_space_item_isSet = false;
    m_space_item_isValid = false;
}

void OAISpaceReply::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISpaceReply::fromJsonObject(QJsonObject json) {

    m_parent_topic_id_isValid = ::OpenAPI::fromJsonValue(m_parent_topic_id, json[QString("parentTopicId")]);
    m_parent_topic_id_isSet = !json[QString("parentTopicId")].isNull() && m_parent_topic_id_isValid;

    m_space_item_isValid = ::OpenAPI::fromJsonValue(m_space_item, json[QString("spaceItem")]);
    m_space_item_isSet = !json[QString("spaceItem")].isNull() && m_space_item_isValid;
}

QString OAISpaceReply::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISpaceReply::asJsonObject() const {
    QJsonObject obj;
    if (m_parent_topic_id_isSet) {
        obj.insert(QString("parentTopicId"), ::OpenAPI::toJsonValue(m_parent_topic_id));
    }
    if (m_space_item.isSet()) {
        obj.insert(QString("spaceItem"), ::OpenAPI::toJsonValue(m_space_item));
    }
    return obj;
}

QString OAISpaceReply::getParentTopicId() const {
    return m_parent_topic_id;
}
void OAISpaceReply::setParentTopicId(const QString &parent_topic_id) {
    m_parent_topic_id = parent_topic_id;
    m_parent_topic_id_isSet = true;
}

bool OAISpaceReply::is_parent_topic_id_Set() const{
    return m_parent_topic_id_isSet;
}

bool OAISpaceReply::is_parent_topic_id_Valid() const{
    return m_parent_topic_id_isValid;
}

OAISpaceItem OAISpaceReply::getSpaceItem() const {
    return m_space_item;
}
void OAISpaceReply::setSpaceItem(const OAISpaceItem &space_item) {
    m_space_item = space_item;
    m_space_item_isSet = true;
}

bool OAISpaceReply::is_space_item_Set() const{
    return m_space_item_isSet;
}

bool OAISpaceReply::is_space_item_Valid() const{
    return m_space_item_isValid;
}

bool OAISpaceReply::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parent_topic_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_space_item.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISpaceReply::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
