/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversationItem.h
 *
 * 
 */

#ifndef OAIConversationItem_H
#define OAIConversationItem_H

#include <QJsonObject>

#include "OAIAttachment.h"
#include "OAIConversationTextItem.h"
#include "OAIRtcItem.h"
#include "OAISystemItem.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachment;
class OAIRtcItem;
class OAISystemItem;
class OAIConversationTextItem;

class OAIConversationItem : public OAIObject {
public:
    OAIConversationItem();
    OAIConversationItem(QString json);
    ~OAIConversationItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttachment> getAttachments() const;
    void setAttachments(const QList<OAIAttachment> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QString getConvId() const;
    void setConvId(const QString &conv_id);
    bool is_conv_id_Set() const;
    bool is_conv_id_Valid() const;

    double getCreationTime() const;
    void setCreationTime(const double &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getCreatorId() const;
    void setCreatorId(const QString &creator_id);
    bool is_creator_id_Set() const;
    bool is_creator_id_Valid() const;

    bool isIncludeInUnreadCount() const;
    void setIncludeInUnreadCount(const bool &include_in_unread_count);
    bool is_include_in_unread_count_Set() const;
    bool is_include_in_unread_count_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    double getModificationTime() const;
    void setModificationTime(const double &modification_time);
    bool is_modification_time_Set() const;
    bool is_modification_time_Valid() const;

    OAIRtcItem getRtc() const;
    void setRtc(const OAIRtcItem &rtc);
    bool is_rtc_Set() const;
    bool is_rtc_Valid() const;

    OAISystemItem getSystem() const;
    void setSystem(const OAISystemItem &system);
    bool is_system_Set() const;
    bool is_system_Valid() const;

    OAIConversationTextItem getText() const;
    void setText(const OAIConversationTextItem &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttachment> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QString m_conv_id;
    bool m_conv_id_isSet;
    bool m_conv_id_isValid;

    double m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_creator_id;
    bool m_creator_id_isSet;
    bool m_creator_id_isValid;

    bool m_include_in_unread_count;
    bool m_include_in_unread_count_isSet;
    bool m_include_in_unread_count_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    double m_modification_time;
    bool m_modification_time_isSet;
    bool m_modification_time_isValid;

    OAIRtcItem m_rtc;
    bool m_rtc_isSet;
    bool m_rtc_isValid;

    OAISystemItem m_system;
    bool m_system_isSet;
    bool m_system_isValid;

    OAIConversationTextItem m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversationItem)

#endif // OAIConversationItem_H
