/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversationTextItem.h
 *
 * 
 */

#ifndef OAIConversationTextItem_H
#define OAIConversationTextItem_H

#include <QJsonObject>

#include "OAIPreview.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPreview;

class OAIConversationTextItem : public OAIObject {
public:
    OAIConversationTextItem();
    OAIConversationTextItem(QString json);
    ~OAIConversationTextItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getFormMetaData() const;
    void setFormMetaData(const QString &form_meta_data);
    bool is_form_meta_data_Set() const;
    bool is_form_meta_data_Valid() const;

    bool isIsWebhookMessage() const;
    void setIsWebhookMessage(const bool &is_webhook_message);
    bool is_is_webhook_message_Set() const;
    bool is_is_webhook_message_Valid() const;

    QList<QString> getLikedUserIds() const;
    void setLikedUserIds(const QList<QString> &liked_user_ids);
    bool is_liked_user_ids_Set() const;
    bool is_liked_user_ids_Valid() const;

    QString getParentId() const;
    void setParentId(const QString &parent_id);
    bool is_parent_id_Set() const;
    bool is_parent_id_Valid() const;

    OAIPreview getPreview() const;
    void setPreview(const OAIPreview &preview);
    bool is_preview_Set() const;
    bool is_preview_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_form_meta_data;
    bool m_form_meta_data_isSet;
    bool m_form_meta_data_isValid;

    bool m_is_webhook_message;
    bool m_is_webhook_message_isSet;
    bool m_is_webhook_message_isValid;

    QList<QString> m_liked_user_ids;
    bool m_liked_user_ids_isSet;
    bool m_liked_user_ids_isValid;

    QString m_parent_id;
    bool m_parent_id_isSet;
    bool m_parent_id_isValid;

    OAIPreview m_preview;
    bool m_preview_isSet;
    bool m_preview_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversationTextItem)

#endif // OAIConversationTextItem_H
