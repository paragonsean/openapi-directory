/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIncomingWebhook.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIncomingWebhook::OAIIncomingWebhook(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIncomingWebhook::OAIIncomingWebhook() {
    this->initializeModel();
}

OAIIncomingWebhook::~OAIIncomingWebhook() {}

void OAIIncomingWebhook::initializeModel() {

    m_conversation_id_isSet = false;
    m_conversation_id_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_creator_id_isSet = false;
    m_creator_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_modification_time_isSet = false;
    m_modification_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tenant_id_isSet = false;
    m_tenant_id_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_webhook_id_isSet = false;
    m_webhook_id_isValid = false;
}

void OAIIncomingWebhook::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIncomingWebhook::fromJsonObject(QJsonObject json) {

    m_conversation_id_isValid = ::OpenAPI::fromJsonValue(m_conversation_id, json[QString("conversationId")]);
    m_conversation_id_isSet = !json[QString("conversationId")].isNull() && m_conversation_id_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_creator_id_isValid = ::OpenAPI::fromJsonValue(m_creator_id, json[QString("creatorId")]);
    m_creator_id_isSet = !json[QString("creatorId")].isNull() && m_creator_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_modification_time_isValid = ::OpenAPI::fromJsonValue(m_modification_time, json[QString("modificationTime")]);
    m_modification_time_isSet = !json[QString("modificationTime")].isNull() && m_modification_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_tenant_id_isValid = ::OpenAPI::fromJsonValue(m_tenant_id, json[QString("tenantId")]);
    m_tenant_id_isSet = !json[QString("tenantId")].isNull() && m_tenant_id_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("userId")]);
    m_user_id_isSet = !json[QString("userId")].isNull() && m_user_id_isValid;

    m_webhook_id_isValid = ::OpenAPI::fromJsonValue(m_webhook_id, json[QString("webhookId")]);
    m_webhook_id_isSet = !json[QString("webhookId")].isNull() && m_webhook_id_isValid;
}

QString OAIIncomingWebhook::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIncomingWebhook::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_id_isSet) {
        obj.insert(QString("conversationId"), ::OpenAPI::toJsonValue(m_conversation_id));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_creator_id_isSet) {
        obj.insert(QString("creatorId"), ::OpenAPI::toJsonValue(m_creator_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_modification_time_isSet) {
        obj.insert(QString("modificationTime"), ::OpenAPI::toJsonValue(m_modification_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tenant_id_isSet) {
        obj.insert(QString("tenantId"), ::OpenAPI::toJsonValue(m_tenant_id));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_webhook_id_isSet) {
        obj.insert(QString("webhookId"), ::OpenAPI::toJsonValue(m_webhook_id));
    }
    return obj;
}

QString OAIIncomingWebhook::getConversationId() const {
    return m_conversation_id;
}
void OAIIncomingWebhook::setConversationId(const QString &conversation_id) {
    m_conversation_id = conversation_id;
    m_conversation_id_isSet = true;
}

bool OAIIncomingWebhook::is_conversation_id_Set() const{
    return m_conversation_id_isSet;
}

bool OAIIncomingWebhook::is_conversation_id_Valid() const{
    return m_conversation_id_isValid;
}

double OAIIncomingWebhook::getCreationTime() const {
    return m_creation_time;
}
void OAIIncomingWebhook::setCreationTime(const double &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIIncomingWebhook::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIIncomingWebhook::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIIncomingWebhook::getCreatorId() const {
    return m_creator_id;
}
void OAIIncomingWebhook::setCreatorId(const QString &creator_id) {
    m_creator_id = creator_id;
    m_creator_id_isSet = true;
}

bool OAIIncomingWebhook::is_creator_id_Set() const{
    return m_creator_id_isSet;
}

bool OAIIncomingWebhook::is_creator_id_Valid() const{
    return m_creator_id_isValid;
}

QString OAIIncomingWebhook::getDescription() const {
    return m_description;
}
void OAIIncomingWebhook::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIIncomingWebhook::is_description_Set() const{
    return m_description_isSet;
}

bool OAIIncomingWebhook::is_description_Valid() const{
    return m_description_isValid;
}

double OAIIncomingWebhook::getModificationTime() const {
    return m_modification_time;
}
void OAIIncomingWebhook::setModificationTime(const double &modification_time) {
    m_modification_time = modification_time;
    m_modification_time_isSet = true;
}

bool OAIIncomingWebhook::is_modification_time_Set() const{
    return m_modification_time_isSet;
}

bool OAIIncomingWebhook::is_modification_time_Valid() const{
    return m_modification_time_isValid;
}

QString OAIIncomingWebhook::getName() const {
    return m_name;
}
void OAIIncomingWebhook::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIIncomingWebhook::is_name_Set() const{
    return m_name_isSet;
}

bool OAIIncomingWebhook::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIIncomingWebhook::getStatus() const {
    return m_status;
}
void OAIIncomingWebhook::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIIncomingWebhook::is_status_Set() const{
    return m_status_isSet;
}

bool OAIIncomingWebhook::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIIncomingWebhook::getTenantId() const {
    return m_tenant_id;
}
void OAIIncomingWebhook::setTenantId(const QString &tenant_id) {
    m_tenant_id = tenant_id;
    m_tenant_id_isSet = true;
}

bool OAIIncomingWebhook::is_tenant_id_Set() const{
    return m_tenant_id_isSet;
}

bool OAIIncomingWebhook::is_tenant_id_Valid() const{
    return m_tenant_id_isValid;
}

QString OAIIncomingWebhook::getUrl() const {
    return m_url;
}
void OAIIncomingWebhook::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIIncomingWebhook::is_url_Set() const{
    return m_url_isSet;
}

bool OAIIncomingWebhook::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIIncomingWebhook::getUserId() const {
    return m_user_id;
}
void OAIIncomingWebhook::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIIncomingWebhook::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIIncomingWebhook::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIIncomingWebhook::getWebhookId() const {
    return m_webhook_id;
}
void OAIIncomingWebhook::setWebhookId(const QString &webhook_id) {
    m_webhook_id = webhook_id;
    m_webhook_id_isSet = true;
}

bool OAIIncomingWebhook::is_webhook_id_Set() const{
    return m_webhook_id_isSet;
}

bool OAIIncomingWebhook::is_webhook_id_Valid() const{
    return m_webhook_id_isValid;
}

bool OAIIncomingWebhook::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creator_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modification_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tenant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIncomingWebhook::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
