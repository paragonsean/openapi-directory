/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISpaceAttachment.h
 *
 * 
 */

#ifndef OAISpaceAttachment_H
#define OAISpaceAttachment_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISpaceAttachment : public OAIObject {
public:
    OAISpaceAttachment();
    OAISpaceAttachment(QString json);
    ~OAISpaceAttachment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCreationTime() const;
    void setCreationTime(const double &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getCreatorId() const;
    void setCreatorId(const QString &creator_id);
    bool is_creator_id_Set() const;
    bool is_creator_id_Valid() const;

    QString getFileId() const;
    void setFileId(const QString &file_id);
    bool is_file_id_Set() const;
    bool is_file_id_Valid() const;

    QString getFileName() const;
    void setFileName(const QString &file_name);
    bool is_file_name_Set() const;
    bool is_file_name_Valid() const;

    bool isInlineUsage() const;
    void setInlineUsage(const bool &inline_usage);
    bool is_inline_usage_Set() const;
    bool is_inline_usage_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getLayout() const;
    void setLayout(const QString &layout);
    bool is_layout_Set() const;
    bool is_layout_Valid() const;

    QString getMimeType() const;
    void setMimeType(const QString &mime_type);
    bool is_mime_type_Set() const;
    bool is_mime_type_Valid() const;

    double getModificationTime() const;
    void setModificationTime(const double &modification_time);
    bool is_modification_time_Set() const;
    bool is_modification_time_Valid() const;

    double getSize() const;
    void setSize(const double &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getSpaceId() const;
    void setSpaceId(const QString &space_id);
    bool is_space_id_Set() const;
    bool is_space_id_Valid() const;

    QString getThumbnailId() const;
    void setThumbnailId(const QString &thumbnail_id);
    bool is_thumbnail_id_Set() const;
    bool is_thumbnail_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_creator_id;
    bool m_creator_id_isSet;
    bool m_creator_id_isValid;

    QString m_file_id;
    bool m_file_id_isSet;
    bool m_file_id_isValid;

    QString m_file_name;
    bool m_file_name_isSet;
    bool m_file_name_isValid;

    bool m_inline_usage;
    bool m_inline_usage_isSet;
    bool m_inline_usage_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_layout;
    bool m_layout_isSet;
    bool m_layout_isValid;

    QString m_mime_type;
    bool m_mime_type_isSet;
    bool m_mime_type_isValid;

    double m_modification_time;
    bool m_modification_time_isSet;
    bool m_modification_time_isValid;

    double m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_space_id;
    bool m_space_id_isSet;
    bool m_space_id_isValid;

    QString m_thumbnail_id;
    bool m_thumbnail_id_isSet;
    bool m_thumbnail_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISpaceAttachment)

#endif // OAISpaceAttachment_H
