/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserEmailAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserEmailAddress::OAIUserEmailAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserEmailAddress::OAIUserEmailAddress() {
    this->initializeModel();
}

OAIUserEmailAddress::~OAIUserEmailAddress() {}

void OAIUserEmailAddress::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIUserEmailAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserEmailAddress::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIUserEmailAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserEmailAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIUserEmailAddress::getAddress() const {
    return m_address;
}
void OAIUserEmailAddress::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIUserEmailAddress::is_address_Set() const{
    return m_address_isSet;
}

bool OAIUserEmailAddress::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIUserEmailAddress::getType() const {
    return m_type;
}
void OAIUserEmailAddress::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIUserEmailAddress::is_type_Set() const{
    return m_type_isSet;
}

bool OAIUserEmailAddress::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIUserEmailAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserEmailAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
