/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupportInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupportInfo::OAISupportInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupportInfo::OAISupportInfo() {
    this->initializeModel();
}

OAISupportInfo::~OAISupportInfo() {}

void OAISupportInfo::initializeModel() {

    m_support_email_address_isSet = false;
    m_support_email_address_isValid = false;

    m_support_type_isSet = false;
    m_support_type_isValid = false;
}

void OAISupportInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupportInfo::fromJsonObject(QJsonObject json) {

    m_support_email_address_isValid = ::OpenAPI::fromJsonValue(m_support_email_address, json[QString("supportEmailAddress")]);
    m_support_email_address_isSet = !json[QString("supportEmailAddress")].isNull() && m_support_email_address_isValid;

    m_support_type_isValid = ::OpenAPI::fromJsonValue(m_support_type, json[QString("supportType")]);
    m_support_type_isSet = !json[QString("supportType")].isNull() && m_support_type_isValid;
}

QString OAISupportInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupportInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_support_email_address_isSet) {
        obj.insert(QString("supportEmailAddress"), ::OpenAPI::toJsonValue(m_support_email_address));
    }
    if (m_support_type_isSet) {
        obj.insert(QString("supportType"), ::OpenAPI::toJsonValue(m_support_type));
    }
    return obj;
}

QString OAISupportInfo::getSupportEmailAddress() const {
    return m_support_email_address;
}
void OAISupportInfo::setSupportEmailAddress(const QString &support_email_address) {
    m_support_email_address = support_email_address;
    m_support_email_address_isSet = true;
}

bool OAISupportInfo::is_support_email_address_Set() const{
    return m_support_email_address_isSet;
}

bool OAISupportInfo::is_support_email_address_Valid() const{
    return m_support_email_address_isValid;
}

QJsonValue OAISupportInfo::getSupportType() const {
    return m_support_type;
}
void OAISupportInfo::setSupportType(const QJsonValue &support_type) {
    m_support_type = support_type;
    m_support_type_isSet = true;
}

bool OAISupportInfo::is_support_type_Set() const{
    return m_support_type_isSet;
}

bool OAISupportInfo::is_support_type_Valid() const{
    return m_support_type_isValid;
}

bool OAISupportInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_support_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_support_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupportInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
