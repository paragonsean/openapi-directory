/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "String.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

String::String(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

String::String() {
    this->initializeModel();
}

String::~String() {}

void String::initializeModel() {

    m_case_insensitive_order_isSet = false;
    m_case_insensitive_order_isValid = false;
}

void String::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void String::fromJsonObject(QJsonObject json) {

    m_case_insensitive_order_isValid = ::OpenAPI::fromJsonValue(m_case_insensitive_order, json[QString("CASE_INSENSITIVE_ORDER")]);
    m_case_insensitive_order_isSet = !json[QString("CASE_INSENSITIVE_ORDER")].isNull() && m_case_insensitive_order_isValid;
}

QString String::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject String::asJsonObject() const {
    QJsonObject obj;
    if (m_case_insensitive_order_isSet) {
        obj.insert(QString("CASE_INSENSITIVE_ORDER"), ::OpenAPI::toJsonValue(m_case_insensitive_order));
    }
    return obj;
}

QJsonValue String::getCaseInsensitiveOrder() const {
    return m_case_insensitive_order;
}
void String::setCaseInsensitiveOrder(const QJsonValue &case_insensitive_order) {
    m_case_insensitive_order = case_insensitive_order;
    m_case_insensitive_order_isSet = true;
}

bool String::is_case_insensitive_order_Set() const{
    return m_case_insensitive_order_isSet;
}

bool String::is_case_insensitive_order_Valid() const{
    return m_case_insensitive_order_isValid;
}

bool String::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_case_insensitive_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool String::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
