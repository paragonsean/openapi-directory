/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParticipantsLikeResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParticipantsLikeResult::OAIParticipantsLikeResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParticipantsLikeResult::OAIParticipantsLikeResult() {
    this->initializeModel();
}

OAIParticipantsLikeResult::~OAIParticipantsLikeResult() {}

void OAIParticipantsLikeResult::initializeModel() {

    m_has_more_isSet = false;
    m_has_more_isValid = false;

    m_participants_isSet = false;
    m_participants_isValid = false;

    m_search_pointer_isSet = false;
    m_search_pointer_isValid = false;
}

void OAIParticipantsLikeResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIParticipantsLikeResult::fromJsonObject(QJsonObject json) {

    m_has_more_isValid = ::OpenAPI::fromJsonValue(m_has_more, json[QString("hasMore")]);
    m_has_more_isSet = !json[QString("hasMore")].isNull() && m_has_more_isValid;

    m_participants_isValid = ::OpenAPI::fromJsonValue(m_participants, json[QString("participants")]);
    m_participants_isSet = !json[QString("participants")].isNull() && m_participants_isValid;

    m_search_pointer_isValid = ::OpenAPI::fromJsonValue(m_search_pointer, json[QString("searchPointer")]);
    m_search_pointer_isSet = !json[QString("searchPointer")].isNull() && m_search_pointer_isValid;
}

QString OAIParticipantsLikeResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIParticipantsLikeResult::asJsonObject() const {
    QJsonObject obj;
    if (m_has_more_isSet) {
        obj.insert(QString("hasMore"), ::OpenAPI::toJsonValue(m_has_more));
    }
    if (m_participants.size() > 0) {
        obj.insert(QString("participants"), ::OpenAPI::toJsonValue(m_participants));
    }
    if (m_search_pointer_isSet) {
        obj.insert(QString("searchPointer"), ::OpenAPI::toJsonValue(m_search_pointer));
    }
    return obj;
}

bool OAIParticipantsLikeResult::isHasMore() const {
    return m_has_more;
}
void OAIParticipantsLikeResult::setHasMore(const bool &has_more) {
    m_has_more = has_more;
    m_has_more_isSet = true;
}

bool OAIParticipantsLikeResult::is_has_more_Set() const{
    return m_has_more_isSet;
}

bool OAIParticipantsLikeResult::is_has_more_Valid() const{
    return m_has_more_isValid;
}

QList<OAIParticipantsLike> OAIParticipantsLikeResult::getParticipants() const {
    return m_participants;
}
void OAIParticipantsLikeResult::setParticipants(const QList<OAIParticipantsLike> &participants) {
    m_participants = participants;
    m_participants_isSet = true;
}

bool OAIParticipantsLikeResult::is_participants_Set() const{
    return m_participants_isSet;
}

bool OAIParticipantsLikeResult::is_participants_Valid() const{
    return m_participants_isValid;
}

QString OAIParticipantsLikeResult::getSearchPointer() const {
    return m_search_pointer;
}
void OAIParticipantsLikeResult::setSearchPointer(const QString &search_pointer) {
    m_search_pointer = search_pointer;
    m_search_pointer_isSet = true;
}

bool OAIParticipantsLikeResult::is_search_pointer_Set() const{
    return m_search_pointer_isSet;
}

bool OAIParticipantsLikeResult::is_search_pointer_Valid() const{
    return m_search_pointer_isValid;
}

bool OAIParticipantsLikeResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_has_more_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_participants.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_pointer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIParticipantsLikeResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
