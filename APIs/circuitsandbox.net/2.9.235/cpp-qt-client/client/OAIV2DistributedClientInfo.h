/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIV2DistributedClientInfo.h
 *
 * 
 */

#ifndef OAIV2DistributedClientInfo_H
#define OAIV2DistributedClientInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIV2DistributedClientInfo : public OAIObject {
public:
    OAIV2DistributedClientInfo();
    OAIV2DistributedClientInfo(QString json);
    ~OAIV2DistributedClientInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientVersion() const;
    void setClientVersion(const QString &client_version);
    bool is_client_version_Set() const;
    bool is_client_version_Valid() const;

    QString getDeviceSubtype() const;
    void setDeviceSubtype(const QString &device_subtype);
    bool is_device_subtype_Set() const;
    bool is_device_subtype_Valid() const;

    QString getDeviceType() const;
    void setDeviceType(const QString &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    QString getHardwareModel() const;
    void setHardwareModel(const QString &hardware_model);
    bool is_hardware_model_Set() const;
    bool is_hardware_model_Valid() const;

    QString getHomeNode() const;
    void setHomeNode(const QString &home_node);
    bool is_home_node_Set() const;
    bool is_home_node_Valid() const;

    QString getManufacturer() const;
    void setManufacturer(const QString &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_version;
    bool m_client_version_isSet;
    bool m_client_version_isValid;

    QString m_device_subtype;
    bool m_device_subtype_isSet;
    bool m_device_subtype_isValid;

    QString m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    QString m_hardware_model;
    bool m_hardware_model_isSet;
    bool m_hardware_model_isValid;

    QString m_home_node;
    bool m_home_node_isSet;
    bool m_home_node_isValid;

    QString m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIV2DistributedClientInfo)

#endif // OAIV2DistributedClientInfo_H
