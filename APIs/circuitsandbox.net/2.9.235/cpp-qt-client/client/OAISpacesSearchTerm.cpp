/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISpacesSearchTerm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISpacesSearchTerm::OAISpacesSearchTerm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISpacesSearchTerm::OAISpacesSearchTerm() {
    this->initializeModel();
}

OAISpacesSearchTerm::~OAISpacesSearchTerm() {}

void OAISpacesSearchTerm::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;

    m_search_term_isSet = false;
    m_search_term_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAISpacesSearchTerm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISpacesSearchTerm::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;

    m_search_term_isValid = ::OpenAPI::fromJsonValue(m_search_term, json[QString("searchTerm")]);
    m_search_term_isSet = !json[QString("searchTerm")].isNull() && m_search_term_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAISpacesSearchTerm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISpacesSearchTerm::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_scope_isSet) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    if (m_search_term_isSet) {
        obj.insert(QString("searchTerm"), ::OpenAPI::toJsonValue(m_search_term));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QJsonValue OAISpacesSearchTerm::getEndTime() const {
    return m_end_time;
}
void OAISpacesSearchTerm::setEndTime(const QJsonValue &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAISpacesSearchTerm::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAISpacesSearchTerm::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAISpacesSearchTerm::getScope() const {
    return m_scope;
}
void OAISpacesSearchTerm::setScope(const QString &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAISpacesSearchTerm::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAISpacesSearchTerm::is_scope_Valid() const{
    return m_scope_isValid;
}

QString OAISpacesSearchTerm::getSearchTerm() const {
    return m_search_term;
}
void OAISpacesSearchTerm::setSearchTerm(const QString &search_term) {
    m_search_term = search_term;
    m_search_term_isSet = true;
}

bool OAISpacesSearchTerm::is_search_term_Set() const{
    return m_search_term_isSet;
}

bool OAISpacesSearchTerm::is_search_term_Valid() const{
    return m_search_term_isValid;
}

QJsonValue OAISpacesSearchTerm::getStartTime() const {
    return m_start_time;
}
void OAISpacesSearchTerm::setStartTime(const QJsonValue &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAISpacesSearchTerm::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAISpacesSearchTerm::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAISpacesSearchTerm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_term_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISpacesSearchTerm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
