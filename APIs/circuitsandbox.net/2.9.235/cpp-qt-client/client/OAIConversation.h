/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversation.h
 *
 * 
 */

#ifndef OAIConversation_H
#define OAIConversation_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConversation : public OAIObject {
public:
    OAIConversation();
    OAIConversation(QString json);
    ~OAIConversation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatar() const;
    void setAvatar(const QString &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    QString getAvatarLarge() const;
    void setAvatarLarge(const QString &avatar_large);
    bool is_avatar_large_Set() const;
    bool is_avatar_large_Valid() const;

    QString getConvId() const;
    void setConvId(const QString &conv_id);
    bool is_conv_id_Set() const;
    bool is_conv_id_Valid() const;

    double getCreationTime() const;
    void setCreationTime(const double &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getCreatorId() const;
    void setCreatorId(const QString &creator_id);
    bool is_creator_id_Set() const;
    bool is_creator_id_Valid() const;

    QString getCreatorTenantId() const;
    void setCreatorTenantId(const QString &creator_tenant_id);
    bool is_creator_tenant_id_Set() const;
    bool is_creator_tenant_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isIsGuestAccessDisabled() const;
    void setIsGuestAccessDisabled(const bool &is_guest_access_disabled);
    bool is_is_guest_access_disabled_Set() const;
    bool is_is_guest_access_disabled_Valid() const;

    bool isIsModerated() const;
    void setIsModerated(const bool &is_moderated);
    bool is_is_moderated_Set() const;
    bool is_is_moderated_Valid() const;

    double getModificationTime() const;
    void setModificationTime(const double &modification_time);
    bool is_modification_time_Set() const;
    bool is_modification_time_Valid() const;

    QList<QString> getParticipants() const;
    void setParticipants(const QList<QString> &participants);
    bool is_participants_Set() const;
    bool is_participants_Valid() const;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    QString getTopicPlaceholder() const;
    void setTopicPlaceholder(const QString &topic_placeholder);
    bool is_topic_placeholder_Set() const;
    bool is_topic_placeholder_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    QString m_avatar_large;
    bool m_avatar_large_isSet;
    bool m_avatar_large_isValid;

    QString m_conv_id;
    bool m_conv_id_isSet;
    bool m_conv_id_isValid;

    double m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_creator_id;
    bool m_creator_id_isSet;
    bool m_creator_id_isValid;

    QString m_creator_tenant_id;
    bool m_creator_tenant_id_isSet;
    bool m_creator_tenant_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_is_guest_access_disabled;
    bool m_is_guest_access_disabled_isSet;
    bool m_is_guest_access_disabled_isValid;

    bool m_is_moderated;
    bool m_is_moderated_isSet;
    bool m_is_moderated_isValid;

    double m_modification_time;
    bool m_modification_time_isSet;
    bool m_modification_time_isValid;

    QList<QString> m_participants;
    bool m_participants_isSet;
    bool m_participants_isValid;

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;

    QString m_topic_placeholder;
    bool m_topic_placeholder_isSet;
    bool m_topic_placeholder_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversation)

#endif // OAIConversation_H
