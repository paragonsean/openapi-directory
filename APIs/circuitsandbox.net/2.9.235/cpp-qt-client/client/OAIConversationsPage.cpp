/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConversationsPage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConversationsPage::OAIConversationsPage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConversationsPage::OAIConversationsPage() {
    this->initializeModel();
}

OAIConversationsPage::~OAIConversationsPage() {}

void OAIConversationsPage::initializeModel() {

    m_conversation_list_isSet = false;
    m_conversation_list_isValid = false;

    m_has_more_isSet = false;
    m_has_more_isValid = false;

    m_next_page_pointer_isSet = false;
    m_next_page_pointer_isValid = false;
}

void OAIConversationsPage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConversationsPage::fromJsonObject(QJsonObject json) {

    m_conversation_list_isValid = ::OpenAPI::fromJsonValue(m_conversation_list, json[QString("conversationList")]);
    m_conversation_list_isSet = !json[QString("conversationList")].isNull() && m_conversation_list_isValid;

    m_has_more_isValid = ::OpenAPI::fromJsonValue(m_has_more, json[QString("hasMore")]);
    m_has_more_isSet = !json[QString("hasMore")].isNull() && m_has_more_isValid;

    m_next_page_pointer_isValid = ::OpenAPI::fromJsonValue(m_next_page_pointer, json[QString("nextPagePointer")]);
    m_next_page_pointer_isSet = !json[QString("nextPagePointer")].isNull() && m_next_page_pointer_isValid;
}

QString OAIConversationsPage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConversationsPage::asJsonObject() const {
    QJsonObject obj;
    if (m_conversation_list.size() > 0) {
        obj.insert(QString("conversationList"), ::OpenAPI::toJsonValue(m_conversation_list));
    }
    if (m_has_more_isSet) {
        obj.insert(QString("hasMore"), ::OpenAPI::toJsonValue(m_has_more));
    }
    if (m_next_page_pointer_isSet) {
        obj.insert(QString("nextPagePointer"), ::OpenAPI::toJsonValue(m_next_page_pointer));
    }
    return obj;
}

QList<OAIConversation> OAIConversationsPage::getConversationList() const {
    return m_conversation_list;
}
void OAIConversationsPage::setConversationList(const QList<OAIConversation> &conversation_list) {
    m_conversation_list = conversation_list;
    m_conversation_list_isSet = true;
}

bool OAIConversationsPage::is_conversation_list_Set() const{
    return m_conversation_list_isSet;
}

bool OAIConversationsPage::is_conversation_list_Valid() const{
    return m_conversation_list_isValid;
}

QJsonValue OAIConversationsPage::getHasMore() const {
    return m_has_more;
}
void OAIConversationsPage::setHasMore(const QJsonValue &has_more) {
    m_has_more = has_more;
    m_has_more_isSet = true;
}

bool OAIConversationsPage::is_has_more_Set() const{
    return m_has_more_isSet;
}

bool OAIConversationsPage::is_has_more_Valid() const{
    return m_has_more_isValid;
}

QString OAIConversationsPage::getNextPagePointer() const {
    return m_next_page_pointer;
}
void OAIConversationsPage::setNextPagePointer(const QString &next_page_pointer) {
    m_next_page_pointer = next_page_pointer;
    m_next_page_pointer_isSet = true;
}

bool OAIConversationsPage::is_next_page_pointer_Set() const{
    return m_next_page_pointer_isSet;
}

bool OAIConversationsPage::is_next_page_pointer_Valid() const{
    return m_next_page_pointer_isValid;
}

bool OAIConversationsPage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_conversation_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_more_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_pointer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConversationsPage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
