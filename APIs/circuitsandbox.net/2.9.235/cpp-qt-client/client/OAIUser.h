/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * 
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include "OAIUserEmailAddress.h"
#include "OAIUserPhoneNumber.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserEmailAddress;
class OAIUserPhoneNumber;

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatar() const;
    void setAvatar(const QString &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    QString getAvatarLarge() const;
    void setAvatarLarge(const QString &avatar_large);
    bool is_avatar_large_Set() const;
    bool is_avatar_large_Valid() const;

    QString getCompany() const;
    void setCompany(const QString &company);
    bool is_company_Set() const;
    bool is_company_Valid() const;

    QString getDepartment() const;
    void setDepartment(const QString &department);
    bool is_department_Set() const;
    bool is_department_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEmailAddress() const;
    void setEmailAddress(const QString &email_address);
    bool is_email_address_Set() const;
    bool is_email_address_Valid() const;

    QList<OAIUserEmailAddress> getEmailAddresses() const;
    void setEmailAddresses(const QList<OAIUserEmailAddress> &email_addresses);
    bool is_email_addresses_Set() const;
    bool is_email_addresses_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getJobTitle() const;
    void setJobTitle(const QString &job_title);
    bool is_job_title_Set() const;
    bool is_job_title_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QList<OAIUserPhoneNumber> getPhoneNumbers() const;
    void setPhoneNumbers(const QList<OAIUserPhoneNumber> &phone_numbers);
    bool is_phone_numbers_Set() const;
    bool is_phone_numbers_Valid() const;

    QString getPrimaryTenantId() const;
    void setPrimaryTenantId(const QString &primary_tenant_id);
    bool is_primary_tenant_id_Set() const;
    bool is_primary_tenant_id_Valid() const;

    QString getSecondaryEmailAddress() const;
    void setSecondaryEmailAddress(const QString &secondary_email_address);
    bool is_secondary_email_address_Set() const;
    bool is_secondary_email_address_Valid() const;

    QString getSecondaryTenantId() const;
    void setSecondaryTenantId(const QString &secondary_tenant_id);
    bool is_secondary_tenant_id_Set() const;
    bool is_secondary_tenant_id_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getUserState() const;
    void setUserState(const QString &user_state);
    bool is_user_state_Set() const;
    bool is_user_state_Valid() const;

    QString getUserType() const;
    void setUserType(const QString &user_type);
    bool is_user_type_Set() const;
    bool is_user_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    QString m_avatar_large;
    bool m_avatar_large_isSet;
    bool m_avatar_large_isValid;

    QString m_company;
    bool m_company_isSet;
    bool m_company_isValid;

    QString m_department;
    bool m_department_isSet;
    bool m_department_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_email_address;
    bool m_email_address_isSet;
    bool m_email_address_isValid;

    QList<OAIUserEmailAddress> m_email_addresses;
    bool m_email_addresses_isSet;
    bool m_email_addresses_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_job_title;
    bool m_job_title_isSet;
    bool m_job_title_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QList<OAIUserPhoneNumber> m_phone_numbers;
    bool m_phone_numbers_isSet;
    bool m_phone_numbers_isValid;

    QString m_primary_tenant_id;
    bool m_primary_tenant_id_isSet;
    bool m_primary_tenant_id_isValid;

    QString m_secondary_email_address;
    bool m_secondary_email_address_isSet;
    bool m_secondary_email_address_isValid;

    QString m_secondary_tenant_id;
    bool m_secondary_tenant_id_isSet;
    bool m_secondary_tenant_id_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_user_state;
    bool m_user_state_isSet;
    bool m_user_state_isValid;

    QString m_user_type;
    bool m_user_type_isSet;
    bool m_user_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
