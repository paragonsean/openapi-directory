/**
 * REST API Version 2
 * Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)
 *
 * The version of the OpenAPI document: 2.9.235
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParticipant.h
 *
 * 
 */

#ifndef OAIParticipant_H
#define OAIParticipant_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParticipant : public OAIObject {
public:
    OAIParticipant();
    OAIParticipant(QString json);
    ~OAIParticipant() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCreationTime() const;
    void setCreationTime(const double &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QList<QString> getLabelIds() const;
    void setLabelIds(const QList<QString> &label_ids);
    bool is_label_ids_Set() const;
    bool is_label_ids_Valid() const;

    double getLastContentCreationTime() const;
    void setLastContentCreationTime(const double &last_content_creation_time);
    bool is_last_content_creation_time_Set() const;
    bool is_last_content_creation_time_Valid() const;

    double getLastReadTimestamp() const;
    void setLastReadTimestamp(const double &last_read_timestamp);
    bool is_last_read_timestamp_Set() const;
    bool is_last_read_timestamp_Valid() const;

    double getModificationTime() const;
    void setModificationTime(const double &modification_time);
    bool is_modification_time_Set() const;
    bool is_modification_time_Valid() const;

    double getNumberOfReplies() const;
    void setNumberOfReplies(const double &number_of_replies);
    bool is_number_of_replies_Set() const;
    bool is_number_of_replies_Valid() const;

    double getNumberOfTopics() const;
    void setNumberOfTopics(const double &number_of_topics);
    bool is_number_of_topics_Set() const;
    bool is_number_of_topics_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QString getSpaceId() const;
    void setSpaceId(const QString &space_id);
    bool is_space_id_Set() const;
    bool is_space_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTenantId() const;
    void setTenantId(const QString &tenant_id);
    bool is_tenant_id_Set() const;
    bool is_tenant_id_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QList<QString> m_label_ids;
    bool m_label_ids_isSet;
    bool m_label_ids_isValid;

    double m_last_content_creation_time;
    bool m_last_content_creation_time_isSet;
    bool m_last_content_creation_time_isValid;

    double m_last_read_timestamp;
    bool m_last_read_timestamp_isSet;
    bool m_last_read_timestamp_isValid;

    double m_modification_time;
    bool m_modification_time_isSet;
    bool m_modification_time_isValid;

    double m_number_of_replies;
    bool m_number_of_replies_isSet;
    bool m_number_of_replies_isValid;

    double m_number_of_topics;
    bool m_number_of_topics_isSet;
    bool m_number_of_topics_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QString m_space_id;
    bool m_space_id_isSet;
    bool m_space_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_tenant_id;
    bool m_tenant_id_isSet;
    bool m_tenant_id_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParticipant)

#endif // OAIParticipant_H
