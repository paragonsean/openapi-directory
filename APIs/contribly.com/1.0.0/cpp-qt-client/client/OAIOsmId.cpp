/**
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOsmId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOsmId::OAIOsmId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOsmId::OAIOsmId() {
    this->initializeModel();
}

OAIOsmId::~OAIOsmId() {}

void OAIOsmId::initializeModel() {

    m_osm_id_isSet = false;
    m_osm_id_isValid = false;

    m_osm_type_isSet = false;
    m_osm_type_isValid = false;
}

void OAIOsmId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOsmId::fromJsonObject(QJsonObject json) {

    m_osm_id_isValid = ::OpenAPI::fromJsonValue(m_osm_id, json[QString("osmId")]);
    m_osm_id_isSet = !json[QString("osmId")].isNull() && m_osm_id_isValid;

    m_osm_type_isValid = ::OpenAPI::fromJsonValue(m_osm_type, json[QString("osmType")]);
    m_osm_type_isSet = !json[QString("osmType")].isNull() && m_osm_type_isValid;
}

QString OAIOsmId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOsmId::asJsonObject() const {
    QJsonObject obj;
    if (m_osm_id_isSet) {
        obj.insert(QString("osmId"), ::OpenAPI::toJsonValue(m_osm_id));
    }
    if (m_osm_type_isSet) {
        obj.insert(QString("osmType"), ::OpenAPI::toJsonValue(m_osm_type));
    }
    return obj;
}

double OAIOsmId::getOsmId() const {
    return m_osm_id;
}
void OAIOsmId::setOsmId(const double &osm_id) {
    m_osm_id = osm_id;
    m_osm_id_isSet = true;
}

bool OAIOsmId::is_osm_id_Set() const{
    return m_osm_id_isSet;
}

bool OAIOsmId::is_osm_id_Valid() const{
    return m_osm_id_isValid;
}

QString OAIOsmId::getOsmType() const {
    return m_osm_type;
}
void OAIOsmId::setOsmType(const QString &osm_type) {
    m_osm_type = osm_type;
    m_osm_type_isSet = true;
}

bool OAIOsmId::is_osm_type_Set() const{
    return m_osm_type_isSet;
}

bool OAIOsmId::is_osm_type_Valid() const{
    return m_osm_type_isValid;
}

bool OAIOsmId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_osm_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_osm_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOsmId::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
