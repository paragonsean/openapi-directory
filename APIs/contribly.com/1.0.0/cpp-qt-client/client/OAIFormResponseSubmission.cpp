/**
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFormResponseSubmission.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFormResponseSubmission::OAIFormResponseSubmission(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFormResponseSubmission::OAIFormResponseSubmission() {
    this->initializeModel();
}

OAIFormResponseSubmission::~OAIFormResponseSubmission() {}

void OAIFormResponseSubmission::initializeModel() {

    m_contribution_isSet = false;
    m_contribution_isValid = false;

    m_form_isSet = false;
    m_form_isValid = false;

    m_responses_isSet = false;
    m_responses_isValid = false;
}

void OAIFormResponseSubmission::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFormResponseSubmission::fromJsonObject(QJsonObject json) {

    m_contribution_isValid = ::OpenAPI::fromJsonValue(m_contribution, json[QString("contribution")]);
    m_contribution_isSet = !json[QString("contribution")].isNull() && m_contribution_isValid;

    m_form_isValid = ::OpenAPI::fromJsonValue(m_form, json[QString("form")]);
    m_form_isSet = !json[QString("form")].isNull() && m_form_isValid;

    m_responses_isValid = ::OpenAPI::fromJsonValue(m_responses, json[QString("responses")]);
    m_responses_isSet = !json[QString("responses")].isNull() && m_responses_isValid;
}

QString OAIFormResponseSubmission::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFormResponseSubmission::asJsonObject() const {
    QJsonObject obj;
    if (m_contribution_isSet) {
        obj.insert(QString("contribution"), ::OpenAPI::toJsonValue(m_contribution));
    }
    if (m_form_isSet) {
        obj.insert(QString("form"), ::OpenAPI::toJsonValue(m_form));
    }
    if (m_responses.size() > 0) {
        obj.insert(QString("responses"), ::OpenAPI::toJsonValue(m_responses));
    }
    return obj;
}

QString OAIFormResponseSubmission::getContribution() const {
    return m_contribution;
}
void OAIFormResponseSubmission::setContribution(const QString &contribution) {
    m_contribution = contribution;
    m_contribution_isSet = true;
}

bool OAIFormResponseSubmission::is_contribution_Set() const{
    return m_contribution_isSet;
}

bool OAIFormResponseSubmission::is_contribution_Valid() const{
    return m_contribution_isValid;
}

QString OAIFormResponseSubmission::getForm() const {
    return m_form;
}
void OAIFormResponseSubmission::setForm(const QString &form) {
    m_form = form;
    m_form_isSet = true;
}

bool OAIFormResponseSubmission::is_form_Set() const{
    return m_form_isSet;
}

bool OAIFormResponseSubmission::is_form_Valid() const{
    return m_form_isValid;
}

QMap<QString, QString> OAIFormResponseSubmission::getResponses() const {
    return m_responses;
}
void OAIFormResponseSubmission::setResponses(const QMap<QString, QString> &responses) {
    m_responses = responses;
    m_responses_isSet = true;
}

bool OAIFormResponseSubmission::is_responses_Set() const{
    return m_responses_isSet;
}

bool OAIFormResponseSubmission::is_responses_Valid() const{
    return m_responses_isValid;
}

bool OAIFormResponseSubmission::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contribution_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_responses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFormResponseSubmission::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
