/**
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArtifactFormats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArtifactFormats::OAIArtifactFormats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArtifactFormats::OAIArtifactFormats() {
    this->initializeModel();
}

OAIArtifactFormats::~OAIArtifactFormats() {}

void OAIArtifactFormats::initializeModel() {

    m_contribution_isSet = false;
    m_contribution_isValid = false;

    m_cover_isSet = false;
    m_cover_isValid = false;

    m_profile_image_isSet = false;
    m_profile_image_isValid = false;
}

void OAIArtifactFormats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArtifactFormats::fromJsonObject(QJsonObject json) {

    m_contribution_isValid = ::OpenAPI::fromJsonValue(m_contribution, json[QString("contribution")]);
    m_contribution_isSet = !json[QString("contribution")].isNull() && m_contribution_isValid;

    m_cover_isValid = ::OpenAPI::fromJsonValue(m_cover, json[QString("cover")]);
    m_cover_isSet = !json[QString("cover")].isNull() && m_cover_isValid;

    m_profile_image_isValid = ::OpenAPI::fromJsonValue(m_profile_image, json[QString("profileImage")]);
    m_profile_image_isSet = !json[QString("profileImage")].isNull() && m_profile_image_isValid;
}

QString OAIArtifactFormats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArtifactFormats::asJsonObject() const {
    QJsonObject obj;
    if (m_contribution.size() > 0) {
        obj.insert(QString("contribution"), ::OpenAPI::toJsonValue(m_contribution));
    }
    if (m_cover.size() > 0) {
        obj.insert(QString("cover"), ::OpenAPI::toJsonValue(m_cover));
    }
    if (m_profile_image.size() > 0) {
        obj.insert(QString("profileImage"), ::OpenAPI::toJsonValue(m_profile_image));
    }
    return obj;
}

QList<OAIArtifactFormat> OAIArtifactFormats::getContribution() const {
    return m_contribution;
}
void OAIArtifactFormats::setContribution(const QList<OAIArtifactFormat> &contribution) {
    m_contribution = contribution;
    m_contribution_isSet = true;
}

bool OAIArtifactFormats::is_contribution_Set() const{
    return m_contribution_isSet;
}

bool OAIArtifactFormats::is_contribution_Valid() const{
    return m_contribution_isValid;
}

QList<OAIArtifactFormat> OAIArtifactFormats::getCover() const {
    return m_cover;
}
void OAIArtifactFormats::setCover(const QList<OAIArtifactFormat> &cover) {
    m_cover = cover;
    m_cover_isSet = true;
}

bool OAIArtifactFormats::is_cover_Set() const{
    return m_cover_isSet;
}

bool OAIArtifactFormats::is_cover_Valid() const{
    return m_cover_isValid;
}

QList<OAIArtifactFormat> OAIArtifactFormats::getProfileImage() const {
    return m_profile_image;
}
void OAIArtifactFormats::setProfileImage(const QList<OAIArtifactFormat> &profile_image) {
    m_profile_image = profile_image;
    m_profile_image_isSet = true;
}

bool OAIArtifactFormats::is_profile_image_Set() const{
    return m_profile_image_isSet;
}

bool OAIArtifactFormats::is_profile_image_Valid() const{
    return m_profile_image_isValid;
}

bool OAIArtifactFormats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contribution.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_cover.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_image.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArtifactFormats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
