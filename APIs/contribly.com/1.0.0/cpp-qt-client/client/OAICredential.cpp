/**
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICredential.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICredential::OAICredential(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICredential::OAICredential() {
    this->initializeModel();
}

OAICredential::~OAICredential() {}

void OAICredential::initializeModel() {

    m_scopes_isSet = false;
    m_scopes_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAICredential::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICredential::fromJsonObject(QJsonObject json) {

    m_scopes_isValid = ::OpenAPI::fromJsonValue(m_scopes, json[QString("scopes")]);
    m_scopes_isSet = !json[QString("scopes")].isNull() && m_scopes_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAICredential::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICredential::asJsonObject() const {
    QJsonObject obj;
    if (m_scopes.size() > 0) {
        obj.insert(QString("scopes"), ::OpenAPI::toJsonValue(m_scopes));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_user_isSet) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QList<QString> OAICredential::getScopes() const {
    return m_scopes;
}
void OAICredential::setScopes(const QList<QString> &scopes) {
    m_scopes = scopes;
    m_scopes_isSet = true;
}

bool OAICredential::is_scopes_Set() const{
    return m_scopes_isSet;
}

bool OAICredential::is_scopes_Valid() const{
    return m_scopes_isValid;
}

QString OAICredential::getType() const {
    return m_type;
}
void OAICredential::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICredential::is_type_Set() const{
    return m_type_isSet;
}

bool OAICredential::is_type_Valid() const{
    return m_type_isValid;
}

QString OAICredential::getUser() const {
    return m_user;
}
void OAICredential::setUser(const QString &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAICredential::is_user_Set() const{
    return m_user_isSet;
}

bool OAICredential::is_user_Valid() const{
    return m_user_isValid;
}

QString OAICredential::getValue() const {
    return m_value;
}
void OAICredential::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAICredential::is_value_Set() const{
    return m_value_isSet;
}

bool OAICredential::is_value_Valid() const{
    return m_value_isValid;
}

bool OAICredential::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_scopes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICredential::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
