/**
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkedProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkedProfile::OAILinkedProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkedProfile::OAILinkedProfile() {
    this->initializeModel();
}

OAILinkedProfile::~OAILinkedProfile() {}

void OAILinkedProfile::initializeModel() {

    m_bio_isSet = false;
    m_bio_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_picture_isSet = false;
    m_picture_isValid = false;

    m_profile_isSet = false;
    m_profile_isValid = false;

    m_registered_isSet = false;
    m_registered_isValid = false;
}

void OAILinkedProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkedProfile::fromJsonObject(QJsonObject json) {

    m_bio_isValid = ::OpenAPI::fromJsonValue(m_bio, json[QString("bio")]);
    m_bio_isSet = !json[QString("bio")].isNull() && m_bio_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_picture_isValid = ::OpenAPI::fromJsonValue(m_picture, json[QString("picture")]);
    m_picture_isSet = !json[QString("picture")].isNull() && m_picture_isValid;

    m_profile_isValid = ::OpenAPI::fromJsonValue(m_profile, json[QString("profile")]);
    m_profile_isSet = !json[QString("profile")].isNull() && m_profile_isValid;

    m_registered_isValid = ::OpenAPI::fromJsonValue(m_registered, json[QString("registered")]);
    m_registered_isSet = !json[QString("registered")].isNull() && m_registered_isValid;
}

QString OAILinkedProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkedProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_bio_isSet) {
        obj.insert(QString("bio"), ::OpenAPI::toJsonValue(m_bio));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_picture_isSet) {
        obj.insert(QString("picture"), ::OpenAPI::toJsonValue(m_picture));
    }
    if (m_profile_isSet) {
        obj.insert(QString("profile"), ::OpenAPI::toJsonValue(m_profile));
    }
    if (m_registered_isSet) {
        obj.insert(QString("registered"), ::OpenAPI::toJsonValue(m_registered));
    }
    return obj;
}

QString OAILinkedProfile::getBio() const {
    return m_bio;
}
void OAILinkedProfile::setBio(const QString &bio) {
    m_bio = bio;
    m_bio_isSet = true;
}

bool OAILinkedProfile::is_bio_Set() const{
    return m_bio_isSet;
}

bool OAILinkedProfile::is_bio_Valid() const{
    return m_bio_isValid;
}

QString OAILinkedProfile::getEmail() const {
    return m_email;
}
void OAILinkedProfile::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAILinkedProfile::is_email_Set() const{
    return m_email_isSet;
}

bool OAILinkedProfile::is_email_Valid() const{
    return m_email_isValid;
}

QString OAILinkedProfile::getId() const {
    return m_id;
}
void OAILinkedProfile::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAILinkedProfile::is_id_Set() const{
    return m_id_isSet;
}

bool OAILinkedProfile::is_id_Valid() const{
    return m_id_isValid;
}

QString OAILinkedProfile::getName() const {
    return m_name;
}
void OAILinkedProfile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILinkedProfile::is_name_Set() const{
    return m_name_isSet;
}

bool OAILinkedProfile::is_name_Valid() const{
    return m_name_isValid;
}

QString OAILinkedProfile::getPicture() const {
    return m_picture;
}
void OAILinkedProfile::setPicture(const QString &picture) {
    m_picture = picture;
    m_picture_isSet = true;
}

bool OAILinkedProfile::is_picture_Set() const{
    return m_picture_isSet;
}

bool OAILinkedProfile::is_picture_Valid() const{
    return m_picture_isValid;
}

QString OAILinkedProfile::getProfile() const {
    return m_profile;
}
void OAILinkedProfile::setProfile(const QString &profile) {
    m_profile = profile;
    m_profile_isSet = true;
}

bool OAILinkedProfile::is_profile_Set() const{
    return m_profile_isSet;
}

bool OAILinkedProfile::is_profile_Valid() const{
    return m_profile_isValid;
}

QDateTime OAILinkedProfile::getRegistered() const {
    return m_registered;
}
void OAILinkedProfile::setRegistered(const QDateTime &registered) {
    m_registered = registered;
    m_registered_isSet = true;
}

bool OAILinkedProfile::is_registered_Set() const{
    return m_registered_isSet;
}

bool OAILinkedProfile::is_registered_Valid() const{
    return m_registered_isValid;
}

bool OAILinkedProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_picture_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registered_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkedProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
