/**
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFormField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFormField::OAIFormField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFormField::OAIFormField() {
    this->initializeModel();
}

OAIFormField::~OAIFormField() {}

void OAIFormField::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_options_isSet = false;
    m_options_isValid = false;

    m_r_public_isSet = false;
    m_r_public_isValid = false;

    m_required_isSet = false;
    m_required_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIFormField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFormField::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_options_isValid = ::OpenAPI::fromJsonValue(m_options, json[QString("options")]);
    m_options_isSet = !json[QString("options")].isNull() && m_options_isValid;

    m_r_public_isValid = ::OpenAPI::fromJsonValue(m_r_public, json[QString("public")]);
    m_r_public_isSet = !json[QString("public")].isNull() && m_r_public_isValid;

    m_required_isValid = ::OpenAPI::fromJsonValue(m_required, json[QString("required")]);
    m_required_isSet = !json[QString("required")].isNull() && m_required_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIFormField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFormField::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_options.size() > 0) {
        obj.insert(QString("options"), ::OpenAPI::toJsonValue(m_options));
    }
    if (m_r_public_isSet) {
        obj.insert(QString("public"), ::OpenAPI::toJsonValue(m_r_public));
    }
    if (m_required_isSet) {
        obj.insert(QString("required"), ::OpenAPI::toJsonValue(m_required));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIFormField::getDescription() const {
    return m_description;
}
void OAIFormField::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIFormField::is_description_Set() const{
    return m_description_isSet;
}

bool OAIFormField::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIFormField::getLabel() const {
    return m_label;
}
void OAIFormField::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIFormField::is_label_Set() const{
    return m_label_isSet;
}

bool OAIFormField::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIFormField::getName() const {
    return m_name;
}
void OAIFormField::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIFormField::is_name_Set() const{
    return m_name_isSet;
}

bool OAIFormField::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIFormField::getOptions() const {
    return m_options;
}
void OAIFormField::setOptions(const QList<QString> &options) {
    m_options = options;
    m_options_isSet = true;
}

bool OAIFormField::is_options_Set() const{
    return m_options_isSet;
}

bool OAIFormField::is_options_Valid() const{
    return m_options_isValid;
}

bool OAIFormField::isRPublic() const {
    return m_r_public;
}
void OAIFormField::setRPublic(const bool &r_public) {
    m_r_public = r_public;
    m_r_public_isSet = true;
}

bool OAIFormField::is_r_public_Set() const{
    return m_r_public_isSet;
}

bool OAIFormField::is_r_public_Valid() const{
    return m_r_public_isValid;
}

bool OAIFormField::isRequired() const {
    return m_required;
}
void OAIFormField::setRequired(const bool &required) {
    m_required = required;
    m_required_isSet = true;
}

bool OAIFormField::is_required_Set() const{
    return m_required_isSet;
}

bool OAIFormField::is_required_Valid() const{
    return m_required_isValid;
}

QString OAIFormField::getType() const {
    return m_type;
}
void OAIFormField::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIFormField::is_type_Set() const{
    return m_type_isSet;
}

bool OAIFormField::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIFormField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_public_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFormField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
