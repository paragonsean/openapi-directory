/*
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.Form;
import org.openapitools.client.model.FormResponse;
import org.openapitools.client.model.FormResponseSubmission;
import org.openapitools.client.model.FormSubmission;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FormApi
 */
@Disabled
public class FormApiTest {

    private final FormApi api = new FormApi();

    /**
     * List form responses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void formResponsesGetTest() throws ApiException {
        String user = null;
        String form = null;
        String contribution = null;
        List<FormResponse> response = api.formResponsesGet(user, form, contribution);
        // TODO: test validations
    }

    /**
     * Get a single form response by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void formResponsesIdGetTest() throws ApiException {
        String id = null;
        FormResponse response = api.formResponsesIdGet(id);
        // TODO: test validations
    }

    /**
     * Submit a response to a form
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void formResponsesPostTest() throws ApiException {
        FormResponseSubmission formResponseSubmission = null;
        FormResponse response = api.formResponsesPost(formResponseSubmission);
        // TODO: test validations
    }

    /**
     * List forms
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void formsGetTest() throws ApiException {
        String ownedBy = null;
        List<Form> response = api.formsGet(ownedBy);
        // TODO: test validations
    }

    /**
     * Delete this form and all of it&#39;s responses.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void formsIdDeleteTest() throws ApiException {
        String id = null;
        api.formsIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get a single form by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void formsIdGetTest() throws ApiException {
        String id = null;
        Form response = api.formsIdGet(id);
        // TODO: test validations
    }

    /**
     * Create a form
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void formsPostTest() throws ApiException {
        FormSubmission formSubmission = null;
        Form response = api.formsPost(formSubmission);
        // TODO: test validations
    }

}
