# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artifact import Artifact
from openapi_server.models.media import Media
from openapi_server import util


class MediaUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifacts: List[Artifact]=None, id: str=None, media: Media=None):
        """MediaUsage - a model defined in OpenAPI

        :param artifacts: The artifacts of this MediaUsage.
        :param id: The id of this MediaUsage.
        :param media: The media of this MediaUsage.
        """
        self.openapi_types = {
            'artifacts': List[Artifact],
            'id': str,
            'media': Media
        }

        self.attribute_map = {
            'artifacts': 'artifacts',
            'id': 'id',
            'media': 'media'
        }

        self._artifacts = artifacts
        self._id = id
        self._media = media

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaUsage of this MediaUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifacts(self):
        """Gets the artifacts of this MediaUsage.


        :return: The artifacts of this MediaUsage.
        :rtype: List[Artifact]
        """
        return self._artifacts

    @artifacts.setter
    def artifacts(self, artifacts):
        """Sets the artifacts of this MediaUsage.


        :param artifacts: The artifacts of this MediaUsage.
        :type artifacts: List[Artifact]
        """

        self._artifacts = artifacts

    @property
    def id(self):
        """Gets the id of this MediaUsage.


        :return: The id of this MediaUsage.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MediaUsage.


        :param id: The id of this MediaUsage.
        :type id: str
        """

        self._id = id

    @property
    def media(self):
        """Gets the media of this MediaUsage.


        :return: The media of this MediaUsage.
        :rtype: Media
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this MediaUsage.


        :param media: The media of this MediaUsage.
        :type media: Media
        """

        self._media = media
