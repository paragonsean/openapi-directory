# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LinkedProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bio: str=None, email: str=None, id: str=None, name: str=None, picture: str=None, profile: str=None, registered: datetime=None):
        """LinkedProfile - a model defined in OpenAPI

        :param bio: The bio of this LinkedProfile.
        :param email: The email of this LinkedProfile.
        :param id: The id of this LinkedProfile.
        :param name: The name of this LinkedProfile.
        :param picture: The picture of this LinkedProfile.
        :param profile: The profile of this LinkedProfile.
        :param registered: The registered of this LinkedProfile.
        """
        self.openapi_types = {
            'bio': str,
            'email': str,
            'id': str,
            'name': str,
            'picture': str,
            'profile': str,
            'registered': datetime
        }

        self.attribute_map = {
            'bio': 'bio',
            'email': 'email',
            'id': 'id',
            'name': 'name',
            'picture': 'picture',
            'profile': 'profile',
            'registered': 'registered'
        }

        self._bio = bio
        self._email = email
        self._id = id
        self._name = name
        self._picture = picture
        self._profile = profile
        self._registered = registered

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedProfile of this LinkedProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bio(self):
        """Gets the bio of this LinkedProfile.


        :return: The bio of this LinkedProfile.
        :rtype: str
        """
        return self._bio

    @bio.setter
    def bio(self, bio):
        """Sets the bio of this LinkedProfile.


        :param bio: The bio of this LinkedProfile.
        :type bio: str
        """

        self._bio = bio

    @property
    def email(self):
        """Gets the email of this LinkedProfile.


        :return: The email of this LinkedProfile.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this LinkedProfile.


        :param email: The email of this LinkedProfile.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this LinkedProfile.


        :return: The id of this LinkedProfile.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LinkedProfile.


        :param id: The id of this LinkedProfile.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this LinkedProfile.


        :return: The name of this LinkedProfile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LinkedProfile.


        :param name: The name of this LinkedProfile.
        :type name: str
        """

        self._name = name

    @property
    def picture(self):
        """Gets the picture of this LinkedProfile.


        :return: The picture of this LinkedProfile.
        :rtype: str
        """
        return self._picture

    @picture.setter
    def picture(self, picture):
        """Sets the picture of this LinkedProfile.


        :param picture: The picture of this LinkedProfile.
        :type picture: str
        """

        self._picture = picture

    @property
    def profile(self):
        """Gets the profile of this LinkedProfile.


        :return: The profile of this LinkedProfile.
        :rtype: str
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this LinkedProfile.


        :param profile: The profile of this LinkedProfile.
        :type profile: str
        """

        self._profile = profile

    @property
    def registered(self):
        """Gets the registered of this LinkedProfile.


        :return: The registered of this LinkedProfile.
        :rtype: datetime
        """
        return self._registered

    @registered.setter
    def registered(self, registered):
        """Sets the registered of this LinkedProfile.


        :param registered: The registered of this LinkedProfile.
        :type registered: datetime
        """

        self._registered = registered
