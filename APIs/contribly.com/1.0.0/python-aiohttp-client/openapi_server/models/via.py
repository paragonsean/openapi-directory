# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authority import Authority
from openapi_server.models.place import Place
from openapi_server import util


class Via(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authority: Authority=None, ip_address: str=None, ip_address_place: Place=None):
        """Via - a model defined in OpenAPI

        :param authority: The authority of this Via.
        :param ip_address: The ip_address of this Via.
        :param ip_address_place: The ip_address_place of this Via.
        """
        self.openapi_types = {
            'authority': Authority,
            'ip_address': str,
            'ip_address_place': Place
        }

        self.attribute_map = {
            'authority': 'authority',
            'ip_address': 'ipAddress',
            'ip_address_place': 'ipAddressPlace'
        }

        self._authority = authority
        self._ip_address = ip_address
        self._ip_address_place = ip_address_place

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Via':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Via of this Via.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authority(self):
        """Gets the authority of this Via.


        :return: The authority of this Via.
        :rtype: Authority
        """
        return self._authority

    @authority.setter
    def authority(self, authority):
        """Sets the authority of this Via.


        :param authority: The authority of this Via.
        :type authority: Authority
        """

        self._authority = authority

    @property
    def ip_address(self):
        """Gets the ip_address of this Via.


        :return: The ip_address of this Via.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this Via.


        :param ip_address: The ip_address of this Via.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def ip_address_place(self):
        """Gets the ip_address_place of this Via.


        :return: The ip_address_place of this Via.
        :rtype: Place
        """
        return self._ip_address_place

    @ip_address_place.setter
    def ip_address_place(self, ip_address_place):
        """Sets the ip_address_place of this Via.


        :param ip_address_place: The ip_address_place of this Via.
        :type ip_address_place: Place
        """

        self._ip_address_place = ip_address_place
