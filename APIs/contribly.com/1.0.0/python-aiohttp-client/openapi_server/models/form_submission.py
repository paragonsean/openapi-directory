# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.form_field import FormField
from openapi_server.models.tag import Tag
from openapi_server import util


class FormSubmission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, call_to_action: str=None, css_url: str=None, fields: List[FormField]=None, heading: str=None, name: str=None, no_css: bool=None, tags: List[Tag]=None):
        """FormSubmission - a model defined in OpenAPI

        :param call_to_action: The call_to_action of this FormSubmission.
        :param css_url: The css_url of this FormSubmission.
        :param fields: The fields of this FormSubmission.
        :param heading: The heading of this FormSubmission.
        :param name: The name of this FormSubmission.
        :param no_css: The no_css of this FormSubmission.
        :param tags: The tags of this FormSubmission.
        """
        self.openapi_types = {
            'call_to_action': str,
            'css_url': str,
            'fields': List[FormField],
            'heading': str,
            'name': str,
            'no_css': bool,
            'tags': List[Tag]
        }

        self.attribute_map = {
            'call_to_action': 'callToAction',
            'css_url': 'cssUrl',
            'fields': 'fields',
            'heading': 'heading',
            'name': 'name',
            'no_css': 'noCss',
            'tags': 'tags'
        }

        self._call_to_action = call_to_action
        self._css_url = css_url
        self._fields = fields
        self._heading = heading
        self._name = name
        self._no_css = no_css
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormSubmission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormSubmission of this FormSubmission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def call_to_action(self):
        """Gets the call_to_action of this FormSubmission.


        :return: The call_to_action of this FormSubmission.
        :rtype: str
        """
        return self._call_to_action

    @call_to_action.setter
    def call_to_action(self, call_to_action):
        """Sets the call_to_action of this FormSubmission.


        :param call_to_action: The call_to_action of this FormSubmission.
        :type call_to_action: str
        """

        self._call_to_action = call_to_action

    @property
    def css_url(self):
        """Gets the css_url of this FormSubmission.


        :return: The css_url of this FormSubmission.
        :rtype: str
        """
        return self._css_url

    @css_url.setter
    def css_url(self, css_url):
        """Sets the css_url of this FormSubmission.


        :param css_url: The css_url of this FormSubmission.
        :type css_url: str
        """

        self._css_url = css_url

    @property
    def fields(self):
        """Gets the fields of this FormSubmission.


        :return: The fields of this FormSubmission.
        :rtype: List[FormField]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this FormSubmission.


        :param fields: The fields of this FormSubmission.
        :type fields: List[FormField]
        """

        self._fields = fields

    @property
    def heading(self):
        """Gets the heading of this FormSubmission.


        :return: The heading of this FormSubmission.
        :rtype: str
        """
        return self._heading

    @heading.setter
    def heading(self, heading):
        """Sets the heading of this FormSubmission.


        :param heading: The heading of this FormSubmission.
        :type heading: str
        """

        self._heading = heading

    @property
    def name(self):
        """Gets the name of this FormSubmission.


        :return: The name of this FormSubmission.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FormSubmission.


        :param name: The name of this FormSubmission.
        :type name: str
        """

        self._name = name

    @property
    def no_css(self):
        """Gets the no_css of this FormSubmission.


        :return: The no_css of this FormSubmission.
        :rtype: bool
        """
        return self._no_css

    @no_css.setter
    def no_css(self, no_css):
        """Sets the no_css of this FormSubmission.


        :param no_css: The no_css of this FormSubmission.
        :type no_css: bool
        """

        self._no_css = no_css

    @property
    def tags(self):
        """Gets the tags of this FormSubmission.


        :return: The tags of this FormSubmission.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this FormSubmission.


        :param tags: The tags of this FormSubmission.
        :type tags: List[Tag]
        """

        self._tags = tags
