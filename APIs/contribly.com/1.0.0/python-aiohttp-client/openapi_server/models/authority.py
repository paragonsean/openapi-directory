# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client import Client
from openapi_server.models.user import User
from openapi_server import util


class Authority(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client: Client=None, id: str=None, user: User=None):
        """Authority - a model defined in OpenAPI

        :param client: The client of this Authority.
        :param id: The id of this Authority.
        :param user: The user of this Authority.
        """
        self.openapi_types = {
            'client': Client,
            'id': str,
            'user': User
        }

        self.attribute_map = {
            'client': 'client',
            'id': 'id',
            'user': 'user'
        }

        self._client = client
        self._id = id
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Authority':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Authority of this Authority.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client(self):
        """Gets the client of this Authority.


        :return: The client of this Authority.
        :rtype: Client
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this Authority.


        :param client: The client of this Authority.
        :type client: Client
        """

        self._client = client

    @property
    def id(self):
        """Gets the id of this Authority.


        :return: The id of this Authority.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Authority.


        :param id: The id of this Authority.
        :type id: str
        """

        self._id = id

    @property
    def user(self):
        """Gets the user of this Authority.


        :return: The user of this Authority.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Authority.


        :param user: The user of this Authority.
        :type user: User
        """

        self._user = user
