/**
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportSummary model module.
 * @module model/ExportSummary
 * @version 1.0.0
 */
class ExportSummary {
    /**
     * Constructs a new <code>ExportSummary</code>.
     * @alias module:model/ExportSummary
     * @param contributions {Number} The number of contributions selected for export.
     * @param media {Number} The number of media files included in this export.
     * @param totalMediaSize {Number} The expected total size of the media files to be exported.
     */
    constructor(contributions, media, totalMediaSize) { 
        
        ExportSummary.initialize(this, contributions, media, totalMediaSize);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contributions, media, totalMediaSize) { 
        obj['contributions'] = contributions;
        obj['media'] = media;
        obj['totalMediaSize'] = totalMediaSize;
    }

    /**
     * Constructs a <code>ExportSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportSummary} obj Optional instance to populate.
     * @return {module:model/ExportSummary} The populated <code>ExportSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportSummary();

            if (data.hasOwnProperty('contributions')) {
                obj['contributions'] = ApiClient.convertToType(data['contributions'], 'Number');
            }
            if (data.hasOwnProperty('estimatedSize')) {
                obj['estimatedSize'] = ApiClient.convertToType(data['estimatedSize'], 'String');
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ApiClient.convertToType(data['media'], 'Number');
            }
            if (data.hasOwnProperty('totalMediaSize')) {
                obj['totalMediaSize'] = ApiClient.convertToType(data['totalMediaSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ExportSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['estimatedSize'] && !(typeof data['estimatedSize'] === 'string' || data['estimatedSize'] instanceof String)) {
            throw new Error("Expected the field `estimatedSize` to be a primitive type in the JSON string but got " + data['estimatedSize']);
        }

        return true;
    }


}

ExportSummary.RequiredProperties = ["contributions", "media", "totalMediaSize"];

/**
 * The number of contributions selected for export.
 * @member {Number} contributions
 */
ExportSummary.prototype['contributions'] = undefined;

/**
 * Human readable estimate of the export size. ie. '10MB'.
 * @member {String} estimatedSize
 */
ExportSummary.prototype['estimatedSize'] = undefined;

/**
 * The number of media files included in this export.
 * @member {Number} media
 */
ExportSummary.prototype['media'] = undefined;

/**
 * The expected total size of the media files to be exported.
 * @member {Number} totalMediaSize
 */
ExportSummary.prototype['totalMediaSize'] = undefined;






export default ExportSummary;

