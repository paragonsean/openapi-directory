/**
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Artifact from './model/Artifact';
import ArtifactFormat from './model/ArtifactFormat';
import ArtifactFormats from './model/ArtifactFormats';
import Assignment from './model/Assignment';
import AssignmentSubmission from './model/AssignmentSubmission';
import Authority from './model/Authority';
import ChangeLogItem from './model/ChangeLogItem';
import Client from './model/Client';
import Contribution from './model/Contribution';
import Credential from './model/Credential';
import ErrorField from './model/ErrorField';
import ErrorResponse from './model/ErrorResponse';
import EventType from './model/EventType';
import Export from './model/Export';
import ExportSummary from './model/ExportSummary';
import Flag from './model/Flag';
import Form from './model/Form';
import FormField from './model/FormField';
import FormResponse from './model/FormResponse';
import FormResponseSubmission from './model/FormResponseSubmission';
import FormSubmission from './model/FormSubmission';
import Group from './model/Group';
import LatLong from './model/LatLong';
import LinkedProfile from './model/LinkedProfile';
import Media from './model/Media';
import MediaUsage from './model/MediaUsage';
import ModerationAction from './model/ModerationAction';
import ModerationHistoryItem from './model/ModerationHistoryItem';
import ModerationHistoryItemSubmission from './model/ModerationHistoryItemSubmission';
import ModerationState from './model/ModerationState';
import NotificationPreview from './model/NotificationPreview';
import OsmId from './model/OsmId';
import Place from './model/Place';
import Subscription from './model/Subscription';
import SubscriptionSubmission from './model/SubscriptionSubmission';
import SubscriptionType from './model/SubscriptionType';
import Tag from './model/Tag';
import TagSet from './model/TagSet';
import TagSetSubmission from './model/TagSetSubmission';
import TagSubmission from './model/TagSubmission';
import User from './model/User';
import Via from './model/Via';
import AssignmentApi from './api/AssignmentApi';
import AuthApi from './api/AuthApi';
import ContributionApi from './api/ContributionApi';
import FormApi from './api/FormApi';
import InfoApi from './api/InfoApi';
import MediaApi from './api/MediaApi';
import NotificationsApi from './api/NotificationsApi';
import SubscriptionsApi from './api/SubscriptionsApi';
import TagApi from './api/TagApi';
import UserApi from './api/UserApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Contribly = require('index'); // See note below*.
* var xxxSvc = new Contribly.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Contribly.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Contribly.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Contribly.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Artifact model constructor.
     * @property {module:model/Artifact}
     */
    Artifact,

    /**
     * The ArtifactFormat model constructor.
     * @property {module:model/ArtifactFormat}
     */
    ArtifactFormat,

    /**
     * The ArtifactFormats model constructor.
     * @property {module:model/ArtifactFormats}
     */
    ArtifactFormats,

    /**
     * The Assignment model constructor.
     * @property {module:model/Assignment}
     */
    Assignment,

    /**
     * The AssignmentSubmission model constructor.
     * @property {module:model/AssignmentSubmission}
     */
    AssignmentSubmission,

    /**
     * The Authority model constructor.
     * @property {module:model/Authority}
     */
    Authority,

    /**
     * The ChangeLogItem model constructor.
     * @property {module:model/ChangeLogItem}
     */
    ChangeLogItem,

    /**
     * The Client model constructor.
     * @property {module:model/Client}
     */
    Client,

    /**
     * The Contribution model constructor.
     * @property {module:model/Contribution}
     */
    Contribution,

    /**
     * The Credential model constructor.
     * @property {module:model/Credential}
     */
    Credential,

    /**
     * The ErrorField model constructor.
     * @property {module:model/ErrorField}
     */
    ErrorField,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The EventType model constructor.
     * @property {module:model/EventType}
     */
    EventType,

    /**
     * The Export model constructor.
     * @property {module:model/Export}
     */
    Export,

    /**
     * The ExportSummary model constructor.
     * @property {module:model/ExportSummary}
     */
    ExportSummary,

    /**
     * The Flag model constructor.
     * @property {module:model/Flag}
     */
    Flag,

    /**
     * The Form model constructor.
     * @property {module:model/Form}
     */
    Form,

    /**
     * The FormField model constructor.
     * @property {module:model/FormField}
     */
    FormField,

    /**
     * The FormResponse model constructor.
     * @property {module:model/FormResponse}
     */
    FormResponse,

    /**
     * The FormResponseSubmission model constructor.
     * @property {module:model/FormResponseSubmission}
     */
    FormResponseSubmission,

    /**
     * The FormSubmission model constructor.
     * @property {module:model/FormSubmission}
     */
    FormSubmission,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The LatLong model constructor.
     * @property {module:model/LatLong}
     */
    LatLong,

    /**
     * The LinkedProfile model constructor.
     * @property {module:model/LinkedProfile}
     */
    LinkedProfile,

    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media,

    /**
     * The MediaUsage model constructor.
     * @property {module:model/MediaUsage}
     */
    MediaUsage,

    /**
     * The ModerationAction model constructor.
     * @property {module:model/ModerationAction}
     */
    ModerationAction,

    /**
     * The ModerationHistoryItem model constructor.
     * @property {module:model/ModerationHistoryItem}
     */
    ModerationHistoryItem,

    /**
     * The ModerationHistoryItemSubmission model constructor.
     * @property {module:model/ModerationHistoryItemSubmission}
     */
    ModerationHistoryItemSubmission,

    /**
     * The ModerationState model constructor.
     * @property {module:model/ModerationState}
     */
    ModerationState,

    /**
     * The NotificationPreview model constructor.
     * @property {module:model/NotificationPreview}
     */
    NotificationPreview,

    /**
     * The OsmId model constructor.
     * @property {module:model/OsmId}
     */
    OsmId,

    /**
     * The Place model constructor.
     * @property {module:model/Place}
     */
    Place,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The SubscriptionSubmission model constructor.
     * @property {module:model/SubscriptionSubmission}
     */
    SubscriptionSubmission,

    /**
     * The SubscriptionType model constructor.
     * @property {module:model/SubscriptionType}
     */
    SubscriptionType,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TagSet model constructor.
     * @property {module:model/TagSet}
     */
    TagSet,

    /**
     * The TagSetSubmission model constructor.
     * @property {module:model/TagSetSubmission}
     */
    TagSetSubmission,

    /**
     * The TagSubmission model constructor.
     * @property {module:model/TagSubmission}
     */
    TagSubmission,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The Via model constructor.
     * @property {module:model/Via}
     */
    Via,

    /**
    * The AssignmentApi service constructor.
    * @property {module:api/AssignmentApi}
    */
    AssignmentApi,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The ContributionApi service constructor.
    * @property {module:api/ContributionApi}
    */
    ContributionApi,

    /**
    * The FormApi service constructor.
    * @property {module:api/FormApi}
    */
    FormApi,

    /**
    * The InfoApi service constructor.
    * @property {module:api/InfoApi}
    */
    InfoApi,

    /**
    * The MediaApi service constructor.
    * @property {module:api/MediaApi}
    */
    MediaApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The SubscriptionsApi service constructor.
    * @property {module:api/SubscriptionsApi}
    */
    SubscriptionsApi,

    /**
    * The TagApi service constructor.
    * @property {module:api/TagApi}
    */
    TagApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
