/**
 * Contribly
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ArtifactFormats from '../model/ArtifactFormats';
import ChangeLogItem from '../model/ChangeLogItem';
import EventType from '../model/EventType';

/**
* Info service.
* @module api/InfoApi
* @version 1.0.0
*/
export default class InfoApi {

    /**
    * Constructs a new InfoApi. 
    * @alias module:api/InfoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the artifactFormatsGet operation.
     * @callback module:api/InfoApi~artifactFormatsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ArtifactFormats} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Artifact formats
     * List the available artifact formats
     * @param {module:api/InfoApi~artifactFormatsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ArtifactFormats}
     */
    artifactFormatsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ArtifactFormats;
      return this.apiClient.callApi(
        '/artifact-formats', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the changeLogGet operation.
     * @callback module:api/InfoApi~changeLogGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ChangeLogItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Recent changes
     * The Contribly change log.
     * @param {module:api/InfoApi~changeLogGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ChangeLogItem>}
     */
    changeLogGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ChangeLogItem];
      return this.apiClient.callApi(
        '/change-log', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the eventTypesGet operation.
     * @callback module:api/InfoApi~eventTypesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EventType>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Event types
     * List available notification event types
     * @param {module:api/InfoApi~eventTypesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EventType>}
     */
    eventTypesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [EventType];
      return this.apiClient.callApi(
        '/event-types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
