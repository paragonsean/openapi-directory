/*
 * Axesso Api
 * Use this api to fetch information to Amazon products and more.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@axesso.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductDetailsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:25.796505-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProductDetailsResponse {
  public static final String SERIALIZED_NAME_ANSWERED_QUESTIONS = "answeredQuestions";
  @SerializedName(SERIALIZED_NAME_ANSWERED_QUESTIONS)
  private Long answeredQuestions;

  public static final String SERIALIZED_NAME_ASIN = "asin";
  @SerializedName(SERIALIZED_NAME_ASIN)
  private String asin;

  public static final String SERIALIZED_NAME_COUNT_REVIEW = "countReview";
  @SerializedName(SERIALIZED_NAME_COUNT_REVIEW)
  private Long countReview;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<String> features = new ArrayList<>();

  public static final String SERIALIZED_NAME_FULFILLED_BY = "fulfilledBy";
  @SerializedName(SERIALIZED_NAME_FULFILLED_BY)
  private String fulfilledBy;

  public static final String SERIALIZED_NAME_MANUFACTURER = "manufacturer";
  @SerializedName(SERIALIZED_NAME_MANUFACTURER)
  private String manufacturer;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRICE_SAVING = "priceSaving";
  @SerializedName(SERIALIZED_NAME_PRICE_SAVING)
  private String priceSaving;

  public static final String SERIALIZED_NAME_PRICE_SHIPPING_INFORMATION = "priceShippingInformation";
  @SerializedName(SERIALIZED_NAME_PRICE_SHIPPING_INFORMATION)
  private String priceShippingInformation;

  public static final String SERIALIZED_NAME_PRIME = "prime";
  @SerializedName(SERIALIZED_NAME_PRIME)
  private Boolean prime;

  public static final String SERIALIZED_NAME_PRODUCT_RATING = "productRating";
  @SerializedName(SERIALIZED_NAME_PRODUCT_RATING)
  private String productRating;

  public static final String SERIALIZED_NAME_PRODUCT_TITLE = "productTitle";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TITLE)
  private String productTitle;

  public static final String SERIALIZED_NAME_RESPONSE_MESSAGE = "responseMessage";
  @SerializedName(SERIALIZED_NAME_RESPONSE_MESSAGE)
  private String responseMessage;

  public static final String SERIALIZED_NAME_RESPONSE_STATUS = "responseStatus";
  @SerializedName(SERIALIZED_NAME_RESPONSE_STATUS)
  private String responseStatus;

  public static final String SERIALIZED_NAME_RETAIL_PRICE = "retailPrice";
  @SerializedName(SERIALIZED_NAME_RETAIL_PRICE)
  private BigDecimal retailPrice;

  public static final String SERIALIZED_NAME_SIZE_SELECTION = "sizeSelection";
  @SerializedName(SERIALIZED_NAME_SIZE_SELECTION)
  private List<String> sizeSelection = new ArrayList<>();

  public static final String SERIALIZED_NAME_SOLD_BY = "soldBy";
  @SerializedName(SERIALIZED_NAME_SOLD_BY)
  private String soldBy;

  public static final String SERIALIZED_NAME_WAREHOUSE_AVAILABILITY = "warehouseAvailability";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_AVAILABILITY)
  private String warehouseAvailability;

  public ProductDetailsResponse() {
  }

  public ProductDetailsResponse answeredQuestions(Long answeredQuestions) {
    this.answeredQuestions = answeredQuestions;
    return this;
  }

  /**
   * Get answeredQuestions
   * @return answeredQuestions
   */
  @javax.annotation.Nullable
  public Long getAnsweredQuestions() {
    return answeredQuestions;
  }

  public void setAnsweredQuestions(Long answeredQuestions) {
    this.answeredQuestions = answeredQuestions;
  }


  public ProductDetailsResponse asin(String asin) {
    this.asin = asin;
    return this;
  }

  /**
   * Get asin
   * @return asin
   */
  @javax.annotation.Nullable
  public String getAsin() {
    return asin;
  }

  public void setAsin(String asin) {
    this.asin = asin;
  }


  public ProductDetailsResponse countReview(Long countReview) {
    this.countReview = countReview;
    return this;
  }

  /**
   * Get countReview
   * @return countReview
   */
  @javax.annotation.Nullable
  public Long getCountReview() {
    return countReview;
  }

  public void setCountReview(Long countReview) {
    this.countReview = countReview;
  }


  public ProductDetailsResponse features(List<String> features) {
    this.features = features;
    return this;
  }

  public ProductDetailsResponse addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

  /**
   * Get features
   * @return features
   */
  @javax.annotation.Nullable
  public List<String> getFeatures() {
    return features;
  }

  public void setFeatures(List<String> features) {
    this.features = features;
  }


  public ProductDetailsResponse fulfilledBy(String fulfilledBy) {
    this.fulfilledBy = fulfilledBy;
    return this;
  }

  /**
   * Get fulfilledBy
   * @return fulfilledBy
   */
  @javax.annotation.Nullable
  public String getFulfilledBy() {
    return fulfilledBy;
  }

  public void setFulfilledBy(String fulfilledBy) {
    this.fulfilledBy = fulfilledBy;
  }


  public ProductDetailsResponse manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

  /**
   * Get manufacturer
   * @return manufacturer
   */
  @javax.annotation.Nullable
  public String getManufacturer() {
    return manufacturer;
  }

  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public ProductDetailsResponse price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @javax.annotation.Nullable
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public ProductDetailsResponse priceSaving(String priceSaving) {
    this.priceSaving = priceSaving;
    return this;
  }

  /**
   * Get priceSaving
   * @return priceSaving
   */
  @javax.annotation.Nullable
  public String getPriceSaving() {
    return priceSaving;
  }

  public void setPriceSaving(String priceSaving) {
    this.priceSaving = priceSaving;
  }


  public ProductDetailsResponse priceShippingInformation(String priceShippingInformation) {
    this.priceShippingInformation = priceShippingInformation;
    return this;
  }

  /**
   * Get priceShippingInformation
   * @return priceShippingInformation
   */
  @javax.annotation.Nullable
  public String getPriceShippingInformation() {
    return priceShippingInformation;
  }

  public void setPriceShippingInformation(String priceShippingInformation) {
    this.priceShippingInformation = priceShippingInformation;
  }


  public ProductDetailsResponse prime(Boolean prime) {
    this.prime = prime;
    return this;
  }

  /**
   * Get prime
   * @return prime
   */
  @javax.annotation.Nullable
  public Boolean getPrime() {
    return prime;
  }

  public void setPrime(Boolean prime) {
    this.prime = prime;
  }


  public ProductDetailsResponse productRating(String productRating) {
    this.productRating = productRating;
    return this;
  }

  /**
   * Get productRating
   * @return productRating
   */
  @javax.annotation.Nullable
  public String getProductRating() {
    return productRating;
  }

  public void setProductRating(String productRating) {
    this.productRating = productRating;
  }


  public ProductDetailsResponse productTitle(String productTitle) {
    this.productTitle = productTitle;
    return this;
  }

  /**
   * Get productTitle
   * @return productTitle
   */
  @javax.annotation.Nullable
  public String getProductTitle() {
    return productTitle;
  }

  public void setProductTitle(String productTitle) {
    this.productTitle = productTitle;
  }


  public ProductDetailsResponse responseMessage(String responseMessage) {
    this.responseMessage = responseMessage;
    return this;
  }

  /**
   * Get responseMessage
   * @return responseMessage
   */
  @javax.annotation.Nullable
  public String getResponseMessage() {
    return responseMessage;
  }

  public void setResponseMessage(String responseMessage) {
    this.responseMessage = responseMessage;
  }


  public ProductDetailsResponse responseStatus(String responseStatus) {
    this.responseStatus = responseStatus;
    return this;
  }

  /**
   * Get responseStatus
   * @return responseStatus
   */
  @javax.annotation.Nullable
  public String getResponseStatus() {
    return responseStatus;
  }

  public void setResponseStatus(String responseStatus) {
    this.responseStatus = responseStatus;
  }


  public ProductDetailsResponse retailPrice(BigDecimal retailPrice) {
    this.retailPrice = retailPrice;
    return this;
  }

  /**
   * Get retailPrice
   * @return retailPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getRetailPrice() {
    return retailPrice;
  }

  public void setRetailPrice(BigDecimal retailPrice) {
    this.retailPrice = retailPrice;
  }


  public ProductDetailsResponse sizeSelection(List<String> sizeSelection) {
    this.sizeSelection = sizeSelection;
    return this;
  }

  public ProductDetailsResponse addSizeSelectionItem(String sizeSelectionItem) {
    if (this.sizeSelection == null) {
      this.sizeSelection = new ArrayList<>();
    }
    this.sizeSelection.add(sizeSelectionItem);
    return this;
  }

  /**
   * Get sizeSelection
   * @return sizeSelection
   */
  @javax.annotation.Nullable
  public List<String> getSizeSelection() {
    return sizeSelection;
  }

  public void setSizeSelection(List<String> sizeSelection) {
    this.sizeSelection = sizeSelection;
  }


  public ProductDetailsResponse soldBy(String soldBy) {
    this.soldBy = soldBy;
    return this;
  }

  /**
   * Get soldBy
   * @return soldBy
   */
  @javax.annotation.Nullable
  public String getSoldBy() {
    return soldBy;
  }

  public void setSoldBy(String soldBy) {
    this.soldBy = soldBy;
  }


  public ProductDetailsResponse warehouseAvailability(String warehouseAvailability) {
    this.warehouseAvailability = warehouseAvailability;
    return this;
  }

  /**
   * Get warehouseAvailability
   * @return warehouseAvailability
   */
  @javax.annotation.Nullable
  public String getWarehouseAvailability() {
    return warehouseAvailability;
  }

  public void setWarehouseAvailability(String warehouseAvailability) {
    this.warehouseAvailability = warehouseAvailability;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductDetailsResponse productDetailsResponse = (ProductDetailsResponse) o;
    return Objects.equals(this.answeredQuestions, productDetailsResponse.answeredQuestions) &&
        Objects.equals(this.asin, productDetailsResponse.asin) &&
        Objects.equals(this.countReview, productDetailsResponse.countReview) &&
        Objects.equals(this.features, productDetailsResponse.features) &&
        Objects.equals(this.fulfilledBy, productDetailsResponse.fulfilledBy) &&
        Objects.equals(this.manufacturer, productDetailsResponse.manufacturer) &&
        Objects.equals(this.price, productDetailsResponse.price) &&
        Objects.equals(this.priceSaving, productDetailsResponse.priceSaving) &&
        Objects.equals(this.priceShippingInformation, productDetailsResponse.priceShippingInformation) &&
        Objects.equals(this.prime, productDetailsResponse.prime) &&
        Objects.equals(this.productRating, productDetailsResponse.productRating) &&
        Objects.equals(this.productTitle, productDetailsResponse.productTitle) &&
        Objects.equals(this.responseMessage, productDetailsResponse.responseMessage) &&
        Objects.equals(this.responseStatus, productDetailsResponse.responseStatus) &&
        Objects.equals(this.retailPrice, productDetailsResponse.retailPrice) &&
        Objects.equals(this.sizeSelection, productDetailsResponse.sizeSelection) &&
        Objects.equals(this.soldBy, productDetailsResponse.soldBy) &&
        Objects.equals(this.warehouseAvailability, productDetailsResponse.warehouseAvailability);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answeredQuestions, asin, countReview, features, fulfilledBy, manufacturer, price, priceSaving, priceShippingInformation, prime, productRating, productTitle, responseMessage, responseStatus, retailPrice, sizeSelection, soldBy, warehouseAvailability);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductDetailsResponse {\n");
    sb.append("    answeredQuestions: ").append(toIndentedString(answeredQuestions)).append("\n");
    sb.append("    asin: ").append(toIndentedString(asin)).append("\n");
    sb.append("    countReview: ").append(toIndentedString(countReview)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    fulfilledBy: ").append(toIndentedString(fulfilledBy)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceSaving: ").append(toIndentedString(priceSaving)).append("\n");
    sb.append("    priceShippingInformation: ").append(toIndentedString(priceShippingInformation)).append("\n");
    sb.append("    prime: ").append(toIndentedString(prime)).append("\n");
    sb.append("    productRating: ").append(toIndentedString(productRating)).append("\n");
    sb.append("    productTitle: ").append(toIndentedString(productTitle)).append("\n");
    sb.append("    responseMessage: ").append(toIndentedString(responseMessage)).append("\n");
    sb.append("    responseStatus: ").append(toIndentedString(responseStatus)).append("\n");
    sb.append("    retailPrice: ").append(toIndentedString(retailPrice)).append("\n");
    sb.append("    sizeSelection: ").append(toIndentedString(sizeSelection)).append("\n");
    sb.append("    soldBy: ").append(toIndentedString(soldBy)).append("\n");
    sb.append("    warehouseAvailability: ").append(toIndentedString(warehouseAvailability)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("answeredQuestions");
    openapiFields.add("asin");
    openapiFields.add("countReview");
    openapiFields.add("features");
    openapiFields.add("fulfilledBy");
    openapiFields.add("manufacturer");
    openapiFields.add("price");
    openapiFields.add("priceSaving");
    openapiFields.add("priceShippingInformation");
    openapiFields.add("prime");
    openapiFields.add("productRating");
    openapiFields.add("productTitle");
    openapiFields.add("responseMessage");
    openapiFields.add("responseStatus");
    openapiFields.add("retailPrice");
    openapiFields.add("sizeSelection");
    openapiFields.add("soldBy");
    openapiFields.add("warehouseAvailability");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProductDetailsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductDetailsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductDetailsResponse is not found in the empty JSON string", ProductDetailsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductDetailsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductDetailsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("asin") != null && !jsonObj.get("asin").isJsonNull()) && !jsonObj.get("asin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asin").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("features") != null && !jsonObj.get("features").isJsonNull() && !jsonObj.get("features").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      if ((jsonObj.get("fulfilledBy") != null && !jsonObj.get("fulfilledBy").isJsonNull()) && !jsonObj.get("fulfilledBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfilledBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfilledBy").toString()));
      }
      if ((jsonObj.get("manufacturer") != null && !jsonObj.get("manufacturer").isJsonNull()) && !jsonObj.get("manufacturer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturer").toString()));
      }
      if ((jsonObj.get("priceSaving") != null && !jsonObj.get("priceSaving").isJsonNull()) && !jsonObj.get("priceSaving").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceSaving` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceSaving").toString()));
      }
      if ((jsonObj.get("priceShippingInformation") != null && !jsonObj.get("priceShippingInformation").isJsonNull()) && !jsonObj.get("priceShippingInformation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceShippingInformation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceShippingInformation").toString()));
      }
      if ((jsonObj.get("productRating") != null && !jsonObj.get("productRating").isJsonNull()) && !jsonObj.get("productRating").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productRating` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productRating").toString()));
      }
      if ((jsonObj.get("productTitle") != null && !jsonObj.get("productTitle").isJsonNull()) && !jsonObj.get("productTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productTitle").toString()));
      }
      if ((jsonObj.get("responseMessage") != null && !jsonObj.get("responseMessage").isJsonNull()) && !jsonObj.get("responseMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responseMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responseMessage").toString()));
      }
      if ((jsonObj.get("responseStatus") != null && !jsonObj.get("responseStatus").isJsonNull()) && !jsonObj.get("responseStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responseStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responseStatus").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sizeSelection") != null && !jsonObj.get("sizeSelection").isJsonNull() && !jsonObj.get("sizeSelection").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sizeSelection` to be an array in the JSON string but got `%s`", jsonObj.get("sizeSelection").toString()));
      }
      if ((jsonObj.get("soldBy") != null && !jsonObj.get("soldBy").isJsonNull()) && !jsonObj.get("soldBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `soldBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("soldBy").toString()));
      }
      if ((jsonObj.get("warehouseAvailability") != null && !jsonObj.get("warehouseAvailability").isJsonNull()) && !jsonObj.get("warehouseAvailability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouseAvailability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouseAvailability").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductDetailsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductDetailsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductDetailsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductDetailsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductDetailsResponse>() {
           @Override
           public void write(JsonWriter out, ProductDetailsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductDetailsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProductDetailsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProductDetailsResponse
   * @throws IOException if the JSON string is invalid with respect to ProductDetailsResponse
   */
  public static ProductDetailsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductDetailsResponse.class);
  }

  /**
   * Convert an instance of ProductDetailsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

