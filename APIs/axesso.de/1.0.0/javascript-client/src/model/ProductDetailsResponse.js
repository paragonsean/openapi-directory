/**
 * Axesso Api
 * Use this api to fetch information to Amazon products and more.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@axesso.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductDetailsResponse model module.
 * @module model/ProductDetailsResponse
 * @version 1.0.0
 */
class ProductDetailsResponse {
    /**
     * Constructs a new <code>ProductDetailsResponse</code>.
     * @alias module:model/ProductDetailsResponse
     */
    constructor() { 
        
        ProductDetailsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductDetailsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductDetailsResponse} obj Optional instance to populate.
     * @return {module:model/ProductDetailsResponse} The populated <code>ProductDetailsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductDetailsResponse();

            if (data.hasOwnProperty('answeredQuestions')) {
                obj['answeredQuestions'] = ApiClient.convertToType(data['answeredQuestions'], 'Number');
            }
            if (data.hasOwnProperty('asin')) {
                obj['asin'] = ApiClient.convertToType(data['asin'], 'String');
            }
            if (data.hasOwnProperty('countReview')) {
                obj['countReview'] = ApiClient.convertToType(data['countReview'], 'Number');
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = ApiClient.convertToType(data['features'], ['String']);
            }
            if (data.hasOwnProperty('fulfilledBy')) {
                obj['fulfilledBy'] = ApiClient.convertToType(data['fulfilledBy'], 'String');
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('priceSaving')) {
                obj['priceSaving'] = ApiClient.convertToType(data['priceSaving'], 'String');
            }
            if (data.hasOwnProperty('priceShippingInformation')) {
                obj['priceShippingInformation'] = ApiClient.convertToType(data['priceShippingInformation'], 'String');
            }
            if (data.hasOwnProperty('prime')) {
                obj['prime'] = ApiClient.convertToType(data['prime'], 'Boolean');
            }
            if (data.hasOwnProperty('productRating')) {
                obj['productRating'] = ApiClient.convertToType(data['productRating'], 'String');
            }
            if (data.hasOwnProperty('productTitle')) {
                obj['productTitle'] = ApiClient.convertToType(data['productTitle'], 'String');
            }
            if (data.hasOwnProperty('responseMessage')) {
                obj['responseMessage'] = ApiClient.convertToType(data['responseMessage'], 'String');
            }
            if (data.hasOwnProperty('responseStatus')) {
                obj['responseStatus'] = ApiClient.convertToType(data['responseStatus'], 'String');
            }
            if (data.hasOwnProperty('retailPrice')) {
                obj['retailPrice'] = ApiClient.convertToType(data['retailPrice'], 'Number');
            }
            if (data.hasOwnProperty('sizeSelection')) {
                obj['sizeSelection'] = ApiClient.convertToType(data['sizeSelection'], ['String']);
            }
            if (data.hasOwnProperty('soldBy')) {
                obj['soldBy'] = ApiClient.convertToType(data['soldBy'], 'String');
            }
            if (data.hasOwnProperty('warehouseAvailability')) {
                obj['warehouseAvailability'] = ApiClient.convertToType(data['warehouseAvailability'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductDetailsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductDetailsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['asin'] && !(typeof data['asin'] === 'string' || data['asin'] instanceof String)) {
            throw new Error("Expected the field `asin` to be a primitive type in the JSON string but got " + data['asin']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['features'])) {
            throw new Error("Expected the field `features` to be an array in the JSON data but got " + data['features']);
        }
        // ensure the json data is a string
        if (data['fulfilledBy'] && !(typeof data['fulfilledBy'] === 'string' || data['fulfilledBy'] instanceof String)) {
            throw new Error("Expected the field `fulfilledBy` to be a primitive type in the JSON string but got " + data['fulfilledBy']);
        }
        // ensure the json data is a string
        if (data['manufacturer'] && !(typeof data['manufacturer'] === 'string' || data['manufacturer'] instanceof String)) {
            throw new Error("Expected the field `manufacturer` to be a primitive type in the JSON string but got " + data['manufacturer']);
        }
        // ensure the json data is a string
        if (data['priceSaving'] && !(typeof data['priceSaving'] === 'string' || data['priceSaving'] instanceof String)) {
            throw new Error("Expected the field `priceSaving` to be a primitive type in the JSON string but got " + data['priceSaving']);
        }
        // ensure the json data is a string
        if (data['priceShippingInformation'] && !(typeof data['priceShippingInformation'] === 'string' || data['priceShippingInformation'] instanceof String)) {
            throw new Error("Expected the field `priceShippingInformation` to be a primitive type in the JSON string but got " + data['priceShippingInformation']);
        }
        // ensure the json data is a string
        if (data['productRating'] && !(typeof data['productRating'] === 'string' || data['productRating'] instanceof String)) {
            throw new Error("Expected the field `productRating` to be a primitive type in the JSON string but got " + data['productRating']);
        }
        // ensure the json data is a string
        if (data['productTitle'] && !(typeof data['productTitle'] === 'string' || data['productTitle'] instanceof String)) {
            throw new Error("Expected the field `productTitle` to be a primitive type in the JSON string but got " + data['productTitle']);
        }
        // ensure the json data is a string
        if (data['responseMessage'] && !(typeof data['responseMessage'] === 'string' || data['responseMessage'] instanceof String)) {
            throw new Error("Expected the field `responseMessage` to be a primitive type in the JSON string but got " + data['responseMessage']);
        }
        // ensure the json data is a string
        if (data['responseStatus'] && !(typeof data['responseStatus'] === 'string' || data['responseStatus'] instanceof String)) {
            throw new Error("Expected the field `responseStatus` to be a primitive type in the JSON string but got " + data['responseStatus']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sizeSelection'])) {
            throw new Error("Expected the field `sizeSelection` to be an array in the JSON data but got " + data['sizeSelection']);
        }
        // ensure the json data is a string
        if (data['soldBy'] && !(typeof data['soldBy'] === 'string' || data['soldBy'] instanceof String)) {
            throw new Error("Expected the field `soldBy` to be a primitive type in the JSON string but got " + data['soldBy']);
        }
        // ensure the json data is a string
        if (data['warehouseAvailability'] && !(typeof data['warehouseAvailability'] === 'string' || data['warehouseAvailability'] instanceof String)) {
            throw new Error("Expected the field `warehouseAvailability` to be a primitive type in the JSON string but got " + data['warehouseAvailability']);
        }

        return true;
    }


}



/**
 * @member {Number} answeredQuestions
 */
ProductDetailsResponse.prototype['answeredQuestions'] = undefined;

/**
 * @member {String} asin
 */
ProductDetailsResponse.prototype['asin'] = undefined;

/**
 * @member {Number} countReview
 */
ProductDetailsResponse.prototype['countReview'] = undefined;

/**
 * @member {Array.<String>} features
 */
ProductDetailsResponse.prototype['features'] = undefined;

/**
 * @member {String} fulfilledBy
 */
ProductDetailsResponse.prototype['fulfilledBy'] = undefined;

/**
 * @member {String} manufacturer
 */
ProductDetailsResponse.prototype['manufacturer'] = undefined;

/**
 * @member {Number} price
 */
ProductDetailsResponse.prototype['price'] = undefined;

/**
 * @member {String} priceSaving
 */
ProductDetailsResponse.prototype['priceSaving'] = undefined;

/**
 * @member {String} priceShippingInformation
 */
ProductDetailsResponse.prototype['priceShippingInformation'] = undefined;

/**
 * @member {Boolean} prime
 */
ProductDetailsResponse.prototype['prime'] = undefined;

/**
 * @member {String} productRating
 */
ProductDetailsResponse.prototype['productRating'] = undefined;

/**
 * @member {String} productTitle
 */
ProductDetailsResponse.prototype['productTitle'] = undefined;

/**
 * @member {String} responseMessage
 */
ProductDetailsResponse.prototype['responseMessage'] = undefined;

/**
 * @member {String} responseStatus
 */
ProductDetailsResponse.prototype['responseStatus'] = undefined;

/**
 * @member {Number} retailPrice
 */
ProductDetailsResponse.prototype['retailPrice'] = undefined;

/**
 * @member {Array.<String>} sizeSelection
 */
ProductDetailsResponse.prototype['sizeSelection'] = undefined;

/**
 * @member {String} soldBy
 */
ProductDetailsResponse.prototype['soldBy'] = undefined;

/**
 * @member {String} warehouseAvailability
 */
ProductDetailsResponse.prototype['warehouseAvailability'] = undefined;






export default ProductDetailsResponse;

