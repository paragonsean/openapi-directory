/**
 * Axesso Api
 * Use this api to fetch information to Amazon products and more.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@axesso.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BuyRecommendationResponse model module.
 * @module model/BuyRecommendationResponse
 * @version 1.0.0
 */
class BuyRecommendationResponse {
    /**
     * Constructs a new <code>BuyRecommendationResponse</code>.
     * @alias module:model/BuyRecommendationResponse
     */
    constructor() { 
        
        BuyRecommendationResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuyRecommendationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuyRecommendationResponse} obj Optional instance to populate.
     * @return {module:model/BuyRecommendationResponse} The populated <code>BuyRecommendationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuyRecommendationResponse();

            if (data.hasOwnProperty('buyRecommendations')) {
                obj['buyRecommendations'] = ApiClient.convertToType(data['buyRecommendations'], ['String']);
            }
            if (data.hasOwnProperty('numberOfProducts')) {
                obj['numberOfProducts'] = ApiClient.convertToType(data['numberOfProducts'], 'Number');
            }
            if (data.hasOwnProperty('responseMessage')) {
                obj['responseMessage'] = ApiClient.convertToType(data['responseMessage'], 'String');
            }
            if (data.hasOwnProperty('responseStatus')) {
                obj['responseStatus'] = ApiClient.convertToType(data['responseStatus'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuyRecommendationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuyRecommendationResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['buyRecommendations'])) {
            throw new Error("Expected the field `buyRecommendations` to be an array in the JSON data but got " + data['buyRecommendations']);
        }
        // ensure the json data is a string
        if (data['responseMessage'] && !(typeof data['responseMessage'] === 'string' || data['responseMessage'] instanceof String)) {
            throw new Error("Expected the field `responseMessage` to be a primitive type in the JSON string but got " + data['responseMessage']);
        }
        // ensure the json data is a string
        if (data['responseStatus'] && !(typeof data['responseStatus'] === 'string' || data['responseStatus'] instanceof String)) {
            throw new Error("Expected the field `responseStatus` to be a primitive type in the JSON string but got " + data['responseStatus']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} buyRecommendations
 */
BuyRecommendationResponse.prototype['buyRecommendations'] = undefined;

/**
 * @member {Number} numberOfProducts
 */
BuyRecommendationResponse.prototype['numberOfProducts'] = undefined;

/**
 * @member {String} responseMessage
 */
BuyRecommendationResponse.prototype['responseMessage'] = undefined;

/**
 * @member {String} responseStatus
 */
BuyRecommendationResponse.prototype['responseStatus'] = undefined;






export default BuyRecommendationResponse;

