# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeywordSearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_code: str=None, found_products: List[str]=None, keyword: str=None, number_of_products: int=None, response_message: str=None, response_status: str=None, sort_strategy: str=None):
        """KeywordSearchResponse - a model defined in OpenAPI

        :param domain_code: The domain_code of this KeywordSearchResponse.
        :param found_products: The found_products of this KeywordSearchResponse.
        :param keyword: The keyword of this KeywordSearchResponse.
        :param number_of_products: The number_of_products of this KeywordSearchResponse.
        :param response_message: The response_message of this KeywordSearchResponse.
        :param response_status: The response_status of this KeywordSearchResponse.
        :param sort_strategy: The sort_strategy of this KeywordSearchResponse.
        """
        self.openapi_types = {
            'domain_code': str,
            'found_products': List[str],
            'keyword': str,
            'number_of_products': int,
            'response_message': str,
            'response_status': str,
            'sort_strategy': str
        }

        self.attribute_map = {
            'domain_code': 'domainCode',
            'found_products': 'foundProducts',
            'keyword': 'keyword',
            'number_of_products': 'numberOfProducts',
            'response_message': 'responseMessage',
            'response_status': 'responseStatus',
            'sort_strategy': 'sortStrategy'
        }

        self._domain_code = domain_code
        self._found_products = found_products
        self._keyword = keyword
        self._number_of_products = number_of_products
        self._response_message = response_message
        self._response_status = response_status
        self._sort_strategy = sort_strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeywordSearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeywordSearchResponse of this KeywordSearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_code(self):
        """Gets the domain_code of this KeywordSearchResponse.


        :return: The domain_code of this KeywordSearchResponse.
        :rtype: str
        """
        return self._domain_code

    @domain_code.setter
    def domain_code(self, domain_code):
        """Sets the domain_code of this KeywordSearchResponse.


        :param domain_code: The domain_code of this KeywordSearchResponse.
        :type domain_code: str
        """

        self._domain_code = domain_code

    @property
    def found_products(self):
        """Gets the found_products of this KeywordSearchResponse.


        :return: The found_products of this KeywordSearchResponse.
        :rtype: List[str]
        """
        return self._found_products

    @found_products.setter
    def found_products(self, found_products):
        """Sets the found_products of this KeywordSearchResponse.


        :param found_products: The found_products of this KeywordSearchResponse.
        :type found_products: List[str]
        """

        self._found_products = found_products

    @property
    def keyword(self):
        """Gets the keyword of this KeywordSearchResponse.


        :return: The keyword of this KeywordSearchResponse.
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword):
        """Sets the keyword of this KeywordSearchResponse.


        :param keyword: The keyword of this KeywordSearchResponse.
        :type keyword: str
        """

        self._keyword = keyword

    @property
    def number_of_products(self):
        """Gets the number_of_products of this KeywordSearchResponse.


        :return: The number_of_products of this KeywordSearchResponse.
        :rtype: int
        """
        return self._number_of_products

    @number_of_products.setter
    def number_of_products(self, number_of_products):
        """Sets the number_of_products of this KeywordSearchResponse.


        :param number_of_products: The number_of_products of this KeywordSearchResponse.
        :type number_of_products: int
        """

        self._number_of_products = number_of_products

    @property
    def response_message(self):
        """Gets the response_message of this KeywordSearchResponse.


        :return: The response_message of this KeywordSearchResponse.
        :rtype: str
        """
        return self._response_message

    @response_message.setter
    def response_message(self, response_message):
        """Sets the response_message of this KeywordSearchResponse.


        :param response_message: The response_message of this KeywordSearchResponse.
        :type response_message: str
        """

        self._response_message = response_message

    @property
    def response_status(self):
        """Gets the response_status of this KeywordSearchResponse.


        :return: The response_status of this KeywordSearchResponse.
        :rtype: str
        """
        return self._response_status

    @response_status.setter
    def response_status(self, response_status):
        """Sets the response_status of this KeywordSearchResponse.


        :param response_status: The response_status of this KeywordSearchResponse.
        :type response_status: str
        """

        self._response_status = response_status

    @property
    def sort_strategy(self):
        """Gets the sort_strategy of this KeywordSearchResponse.


        :return: The sort_strategy of this KeywordSearchResponse.
        :rtype: str
        """
        return self._sort_strategy

    @sort_strategy.setter
    def sort_strategy(self, sort_strategy):
        """Sets the sort_strategy of this KeywordSearchResponse.


        :param sort_strategy: The sort_strategy of this KeywordSearchResponse.
        :type sort_strategy: str
        """

        self._sort_strategy = sort_strategy
