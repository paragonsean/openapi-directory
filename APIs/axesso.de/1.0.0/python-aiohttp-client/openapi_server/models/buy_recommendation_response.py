# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BuyRecommendationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buy_recommendations: List[str]=None, number_of_products: int=None, response_message: str=None, response_status: str=None):
        """BuyRecommendationResponse - a model defined in OpenAPI

        :param buy_recommendations: The buy_recommendations of this BuyRecommendationResponse.
        :param number_of_products: The number_of_products of this BuyRecommendationResponse.
        :param response_message: The response_message of this BuyRecommendationResponse.
        :param response_status: The response_status of this BuyRecommendationResponse.
        """
        self.openapi_types = {
            'buy_recommendations': List[str],
            'number_of_products': int,
            'response_message': str,
            'response_status': str
        }

        self.attribute_map = {
            'buy_recommendations': 'buyRecommendations',
            'number_of_products': 'numberOfProducts',
            'response_message': 'responseMessage',
            'response_status': 'responseStatus'
        }

        self._buy_recommendations = buy_recommendations
        self._number_of_products = number_of_products
        self._response_message = response_message
        self._response_status = response_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuyRecommendationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuyRecommendationResponse of this BuyRecommendationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buy_recommendations(self):
        """Gets the buy_recommendations of this BuyRecommendationResponse.


        :return: The buy_recommendations of this BuyRecommendationResponse.
        :rtype: List[str]
        """
        return self._buy_recommendations

    @buy_recommendations.setter
    def buy_recommendations(self, buy_recommendations):
        """Sets the buy_recommendations of this BuyRecommendationResponse.


        :param buy_recommendations: The buy_recommendations of this BuyRecommendationResponse.
        :type buy_recommendations: List[str]
        """

        self._buy_recommendations = buy_recommendations

    @property
    def number_of_products(self):
        """Gets the number_of_products of this BuyRecommendationResponse.


        :return: The number_of_products of this BuyRecommendationResponse.
        :rtype: int
        """
        return self._number_of_products

    @number_of_products.setter
    def number_of_products(self, number_of_products):
        """Sets the number_of_products of this BuyRecommendationResponse.


        :param number_of_products: The number_of_products of this BuyRecommendationResponse.
        :type number_of_products: int
        """

        self._number_of_products = number_of_products

    @property
    def response_message(self):
        """Gets the response_message of this BuyRecommendationResponse.


        :return: The response_message of this BuyRecommendationResponse.
        :rtype: str
        """
        return self._response_message

    @response_message.setter
    def response_message(self, response_message):
        """Sets the response_message of this BuyRecommendationResponse.


        :param response_message: The response_message of this BuyRecommendationResponse.
        :type response_message: str
        """

        self._response_message = response_message

    @property
    def response_status(self):
        """Gets the response_status of this BuyRecommendationResponse.


        :return: The response_status of this BuyRecommendationResponse.
        :rtype: str
        """
        return self._response_status

    @response_status.setter
    def response_status(self, response_status):
        """Sets the response_status of this BuyRecommendationResponse.


        :param response_status: The response_status of this BuyRecommendationResponse.
        :type response_status: str
        """

        self._response_status = response_status
