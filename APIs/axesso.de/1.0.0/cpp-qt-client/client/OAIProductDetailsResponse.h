/**
 * Axesso Api
 * Use this api to fetch information to Amazon products and more.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@axesso.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductDetailsResponse.h
 *
 * 
 */

#ifndef OAIProductDetailsResponse_H
#define OAIProductDetailsResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProductDetailsResponse : public OAIObject {
public:
    OAIProductDetailsResponse();
    OAIProductDetailsResponse(QString json);
    ~OAIProductDetailsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAnsweredQuestions() const;
    void setAnsweredQuestions(const qint64 &answered_questions);
    bool is_answered_questions_Set() const;
    bool is_answered_questions_Valid() const;

    QString getAsin() const;
    void setAsin(const QString &asin);
    bool is_asin_Set() const;
    bool is_asin_Valid() const;

    qint64 getCountReview() const;
    void setCountReview(const qint64 &count_review);
    bool is_count_review_Set() const;
    bool is_count_review_Valid() const;

    QList<QString> getFeatures() const;
    void setFeatures(const QList<QString> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    QString getFulfilledBy() const;
    void setFulfilledBy(const QString &fulfilled_by);
    bool is_fulfilled_by_Set() const;
    bool is_fulfilled_by_Valid() const;

    QString getManufacturer() const;
    void setManufacturer(const QString &manufacturer);
    bool is_manufacturer_Set() const;
    bool is_manufacturer_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getPriceSaving() const;
    void setPriceSaving(const QString &price_saving);
    bool is_price_saving_Set() const;
    bool is_price_saving_Valid() const;

    QString getPriceShippingInformation() const;
    void setPriceShippingInformation(const QString &price_shipping_information);
    bool is_price_shipping_information_Set() const;
    bool is_price_shipping_information_Valid() const;

    bool isPrime() const;
    void setPrime(const bool &prime);
    bool is_prime_Set() const;
    bool is_prime_Valid() const;

    QString getProductRating() const;
    void setProductRating(const QString &product_rating);
    bool is_product_rating_Set() const;
    bool is_product_rating_Valid() const;

    QString getProductTitle() const;
    void setProductTitle(const QString &product_title);
    bool is_product_title_Set() const;
    bool is_product_title_Valid() const;

    QString getResponseMessage() const;
    void setResponseMessage(const QString &response_message);
    bool is_response_message_Set() const;
    bool is_response_message_Valid() const;

    QString getResponseStatus() const;
    void setResponseStatus(const QString &response_status);
    bool is_response_status_Set() const;
    bool is_response_status_Valid() const;

    double getRetailPrice() const;
    void setRetailPrice(const double &retail_price);
    bool is_retail_price_Set() const;
    bool is_retail_price_Valid() const;

    QList<QString> getSizeSelection() const;
    void setSizeSelection(const QList<QString> &size_selection);
    bool is_size_selection_Set() const;
    bool is_size_selection_Valid() const;

    QString getSoldBy() const;
    void setSoldBy(const QString &sold_by);
    bool is_sold_by_Set() const;
    bool is_sold_by_Valid() const;

    QString getWarehouseAvailability() const;
    void setWarehouseAvailability(const QString &warehouse_availability);
    bool is_warehouse_availability_Set() const;
    bool is_warehouse_availability_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_answered_questions;
    bool m_answered_questions_isSet;
    bool m_answered_questions_isValid;

    QString m_asin;
    bool m_asin_isSet;
    bool m_asin_isValid;

    qint64 m_count_review;
    bool m_count_review_isSet;
    bool m_count_review_isValid;

    QList<QString> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    QString m_fulfilled_by;
    bool m_fulfilled_by_isSet;
    bool m_fulfilled_by_isValid;

    QString m_manufacturer;
    bool m_manufacturer_isSet;
    bool m_manufacturer_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_price_saving;
    bool m_price_saving_isSet;
    bool m_price_saving_isValid;

    QString m_price_shipping_information;
    bool m_price_shipping_information_isSet;
    bool m_price_shipping_information_isValid;

    bool m_prime;
    bool m_prime_isSet;
    bool m_prime_isValid;

    QString m_product_rating;
    bool m_product_rating_isSet;
    bool m_product_rating_isValid;

    QString m_product_title;
    bool m_product_title_isSet;
    bool m_product_title_isValid;

    QString m_response_message;
    bool m_response_message_isSet;
    bool m_response_message_isValid;

    QString m_response_status;
    bool m_response_status_isSet;
    bool m_response_status_isValid;

    double m_retail_price;
    bool m_retail_price_isSet;
    bool m_retail_price_isValid;

    QList<QString> m_size_selection;
    bool m_size_selection_isSet;
    bool m_size_selection_isValid;

    QString m_sold_by;
    bool m_sold_by_isSet;
    bool m_sold_by_isValid;

    QString m_warehouse_availability;
    bool m_warehouse_availability_isSet;
    bool m_warehouse_availability_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductDetailsResponse)

#endif // OAIProductDetailsResponse_H
