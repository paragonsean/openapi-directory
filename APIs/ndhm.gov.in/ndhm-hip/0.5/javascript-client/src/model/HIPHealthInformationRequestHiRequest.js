/**
 * Health Repository Provider Specifications for HIP
 * The following are the specifications for the APIs to be implemented at the Health Repository end if an entity is only serving the role of a HIP. The specs are essentially duplicates from the Gateway and Health Repository, but put together so as to make it clear to *HIPs* which set of APIs they should implement to participate in the network.  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Consent from './Consent';
import DateRange from './DateRange';
import KeyMaterial from './KeyMaterial';

/**
 * The HIPHealthInformationRequestHiRequest model module.
 * @module model/HIPHealthInformationRequestHiRequest
 * @version 0.5
 */
class HIPHealthInformationRequestHiRequest {
    /**
     * Constructs a new <code>HIPHealthInformationRequestHiRequest</code>.
     * @alias module:model/HIPHealthInformationRequestHiRequest
     * @param consent {module:model/Consent} 
     * @param dataPushUrl {String} 
     * @param dateRange {module:model/DateRange} 
     * @param keyMaterial {module:model/KeyMaterial} 
     */
    constructor(consent, dataPushUrl, dateRange, keyMaterial) { 
        
        HIPHealthInformationRequestHiRequest.initialize(this, consent, dataPushUrl, dateRange, keyMaterial);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, consent, dataPushUrl, dateRange, keyMaterial) { 
        obj['consent'] = consent;
        obj['dataPushUrl'] = dataPushUrl;
        obj['dateRange'] = dateRange;
        obj['keyMaterial'] = keyMaterial;
    }

    /**
     * Constructs a <code>HIPHealthInformationRequestHiRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HIPHealthInformationRequestHiRequest} obj Optional instance to populate.
     * @return {module:model/HIPHealthInformationRequestHiRequest} The populated <code>HIPHealthInformationRequestHiRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HIPHealthInformationRequestHiRequest();

            if (data.hasOwnProperty('consent')) {
                obj['consent'] = Consent.constructFromObject(data['consent']);
            }
            if (data.hasOwnProperty('dataPushUrl')) {
                obj['dataPushUrl'] = ApiClient.convertToType(data['dataPushUrl'], 'String');
            }
            if (data.hasOwnProperty('dateRange')) {
                obj['dateRange'] = DateRange.constructFromObject(data['dateRange']);
            }
            if (data.hasOwnProperty('keyMaterial')) {
                obj['keyMaterial'] = KeyMaterial.constructFromObject(data['keyMaterial']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HIPHealthInformationRequestHiRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HIPHealthInformationRequestHiRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HIPHealthInformationRequestHiRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `consent`
        if (data['consent']) { // data not null
          Consent.validateJSON(data['consent']);
        }
        // ensure the json data is a string
        if (data['dataPushUrl'] && !(typeof data['dataPushUrl'] === 'string' || data['dataPushUrl'] instanceof String)) {
            throw new Error("Expected the field `dataPushUrl` to be a primitive type in the JSON string but got " + data['dataPushUrl']);
        }
        // validate the optional field `dateRange`
        if (data['dateRange']) { // data not null
          DateRange.validateJSON(data['dateRange']);
        }
        // validate the optional field `keyMaterial`
        if (data['keyMaterial']) { // data not null
          KeyMaterial.validateJSON(data['keyMaterial']);
        }

        return true;
    }


}

HIPHealthInformationRequestHiRequest.RequiredProperties = ["consent", "dataPushUrl", "dateRange", "keyMaterial"];

/**
 * @member {module:model/Consent} consent
 */
HIPHealthInformationRequestHiRequest.prototype['consent'] = undefined;

/**
 * @member {String} dataPushUrl
 */
HIPHealthInformationRequestHiRequest.prototype['dataPushUrl'] = undefined;

/**
 * @member {module:model/DateRange} dateRange
 */
HIPHealthInformationRequestHiRequest.prototype['dateRange'] = undefined;

/**
 * @member {module:model/KeyMaterial} keyMaterial
 */
HIPHealthInformationRequestHiRequest.prototype['keyMaterial'] = undefined;






export default HIPHealthInformationRequestHiRequest;

