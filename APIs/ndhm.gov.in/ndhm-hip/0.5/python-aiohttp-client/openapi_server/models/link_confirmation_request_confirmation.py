# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LinkConfirmationRequestConfirmation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, link_ref_number: str=None, token: str=None):
        """LinkConfirmationRequestConfirmation - a model defined in OpenAPI

        :param link_ref_number: The link_ref_number of this LinkConfirmationRequestConfirmation.
        :param token: The token of this LinkConfirmationRequestConfirmation.
        """
        self.openapi_types = {
            'link_ref_number': str,
            'token': str
        }

        self.attribute_map = {
            'link_ref_number': 'linkRefNumber',
            'token': 'token'
        }

        self._link_ref_number = link_ref_number
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkConfirmationRequestConfirmation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkConfirmationRequest_confirmation of this LinkConfirmationRequestConfirmation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def link_ref_number(self):
        """Gets the link_ref_number of this LinkConfirmationRequestConfirmation.


        :return: The link_ref_number of this LinkConfirmationRequestConfirmation.
        :rtype: str
        """
        return self._link_ref_number

    @link_ref_number.setter
    def link_ref_number(self, link_ref_number):
        """Sets the link_ref_number of this LinkConfirmationRequestConfirmation.


        :param link_ref_number: The link_ref_number of this LinkConfirmationRequestConfirmation.
        :type link_ref_number: str
        """
        if link_ref_number is None:
            raise ValueError("Invalid value for `link_ref_number`, must not be `None`")

        self._link_ref_number = link_ref_number

    @property
    def token(self):
        """Gets the token of this LinkConfirmationRequestConfirmation.


        :return: The token of this LinkConfirmationRequestConfirmation.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this LinkConfirmationRequestConfirmation.


        :param token: The token of this LinkConfirmationRequestConfirmation.
        :type token: str
        """
        if token is None:
            raise ValueError("Invalid value for `token`, must not be `None`")

        self._token = token
