# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_information_notification_notification_status_notification_status_responses_inner import HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner
from openapi_server import util


class HealthInformationNotificationNotificationStatusNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hip_id: str=None, session_status: str=None, status_responses: List[HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner]=None):
        """HealthInformationNotificationNotificationStatusNotification - a model defined in OpenAPI

        :param hip_id: The hip_id of this HealthInformationNotificationNotificationStatusNotification.
        :param session_status: The session_status of this HealthInformationNotificationNotificationStatusNotification.
        :param status_responses: The status_responses of this HealthInformationNotificationNotificationStatusNotification.
        """
        self.openapi_types = {
            'hip_id': str,
            'session_status': str,
            'status_responses': List[HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner]
        }

        self.attribute_map = {
            'hip_id': 'hipId',
            'session_status': 'sessionStatus',
            'status_responses': 'statusResponses'
        }

        self._hip_id = hip_id
        self._session_status = session_status
        self._status_responses = status_responses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HealthInformationNotificationNotificationStatusNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HealthInformationNotification_notification_statusNotification of this HealthInformationNotificationNotificationStatusNotification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hip_id(self):
        """Gets the hip_id of this HealthInformationNotificationNotificationStatusNotification.


        :return: The hip_id of this HealthInformationNotificationNotificationStatusNotification.
        :rtype: str
        """
        return self._hip_id

    @hip_id.setter
    def hip_id(self, hip_id):
        """Sets the hip_id of this HealthInformationNotificationNotificationStatusNotification.


        :param hip_id: The hip_id of this HealthInformationNotificationNotificationStatusNotification.
        :type hip_id: str
        """
        if hip_id is None:
            raise ValueError("Invalid value for `hip_id`, must not be `None`")

        self._hip_id = hip_id

    @property
    def session_status(self):
        """Gets the session_status of this HealthInformationNotificationNotificationStatusNotification.


        :return: The session_status of this HealthInformationNotificationNotificationStatusNotification.
        :rtype: str
        """
        return self._session_status

    @session_status.setter
    def session_status(self, session_status):
        """Sets the session_status of this HealthInformationNotificationNotificationStatusNotification.


        :param session_status: The session_status of this HealthInformationNotificationNotificationStatusNotification.
        :type session_status: str
        """
        allowed_values = ["TRANSFERRED", "FAILED"]  # noqa: E501
        if session_status not in allowed_values:
            raise ValueError(
                "Invalid value for `session_status` ({0}), must be one of {1}"
                .format(session_status, allowed_values)
            )

        self._session_status = session_status

    @property
    def status_responses(self):
        """Gets the status_responses of this HealthInformationNotificationNotificationStatusNotification.


        :return: The status_responses of this HealthInformationNotificationNotificationStatusNotification.
        :rtype: List[HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner]
        """
        return self._status_responses

    @status_responses.setter
    def status_responses(self, status_responses):
        """Sets the status_responses of this HealthInformationNotificationNotificationStatusNotification.


        :param status_responses: The status_responses of this HealthInformationNotificationNotificationStatusNotification.
        :type status_responses: List[HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner]
        """

        self._status_responses = status_responses
