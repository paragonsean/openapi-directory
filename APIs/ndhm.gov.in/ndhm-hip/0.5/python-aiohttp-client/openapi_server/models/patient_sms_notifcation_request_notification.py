# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.patient_sms_notifcation_request_notification_hip import PatientSMSNotifcationRequestNotificationHip
from openapi_server import util


class PatientSMSNotifcationRequestNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, care_context_info: str=None, deeplink_url: str=None, hip: PatientSMSNotifcationRequestNotificationHip=None, phone_no: str=None, receiver_name: str=None):
        """PatientSMSNotifcationRequestNotification - a model defined in OpenAPI

        :param care_context_info: The care_context_info of this PatientSMSNotifcationRequestNotification.
        :param deeplink_url: The deeplink_url of this PatientSMSNotifcationRequestNotification.
        :param hip: The hip of this PatientSMSNotifcationRequestNotification.
        :param phone_no: The phone_no of this PatientSMSNotifcationRequestNotification.
        :param receiver_name: The receiver_name of this PatientSMSNotifcationRequestNotification.
        """
        self.openapi_types = {
            'care_context_info': str,
            'deeplink_url': str,
            'hip': PatientSMSNotifcationRequestNotificationHip,
            'phone_no': str,
            'receiver_name': str
        }

        self.attribute_map = {
            'care_context_info': 'careContextInfo',
            'deeplink_url': 'deeplinkUrl',
            'hip': 'hip',
            'phone_no': 'phoneNo',
            'receiver_name': 'receiverName'
        }

        self._care_context_info = care_context_info
        self._deeplink_url = deeplink_url
        self._hip = hip
        self._phone_no = phone_no
        self._receiver_name = receiver_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatientSMSNotifcationRequestNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatientSMSNotifcationRequest_notification of this PatientSMSNotifcationRequestNotification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def care_context_info(self):
        """Gets the care_context_info of this PatientSMSNotifcationRequestNotification.

        Information about care context or visit for which the SMS is being sent.

        :return: The care_context_info of this PatientSMSNotifcationRequestNotification.
        :rtype: str
        """
        return self._care_context_info

    @care_context_info.setter
    def care_context_info(self, care_context_info):
        """Sets the care_context_info of this PatientSMSNotifcationRequestNotification.

        Information about care context or visit for which the SMS is being sent.

        :param care_context_info: The care_context_info of this PatientSMSNotifcationRequestNotification.
        :type care_context_info: str
        """
        if care_context_info is None:
            raise ValueError("Invalid value for `care_context_info`, must not be `None`")

        self._care_context_info = care_context_info

    @property
    def deeplink_url(self):
        """Gets the deeplink_url of this PatientSMSNotifcationRequestNotification.

        A link pointing to digital health records of the patient. PHR App's deeplink will be sent in SMS if this field is not provided.

        :return: The deeplink_url of this PatientSMSNotifcationRequestNotification.
        :rtype: str
        """
        return self._deeplink_url

    @deeplink_url.setter
    def deeplink_url(self, deeplink_url):
        """Sets the deeplink_url of this PatientSMSNotifcationRequestNotification.

        A link pointing to digital health records of the patient. PHR App's deeplink will be sent in SMS if this field is not provided.

        :param deeplink_url: The deeplink_url of this PatientSMSNotifcationRequestNotification.
        :type deeplink_url: str
        """

        self._deeplink_url = deeplink_url

    @property
    def hip(self):
        """Gets the hip of this PatientSMSNotifcationRequestNotification.


        :return: The hip of this PatientSMSNotifcationRequestNotification.
        :rtype: PatientSMSNotifcationRequestNotificationHip
        """
        return self._hip

    @hip.setter
    def hip(self, hip):
        """Sets the hip of this PatientSMSNotifcationRequestNotification.


        :param hip: The hip of this PatientSMSNotifcationRequestNotification.
        :type hip: PatientSMSNotifcationRequestNotificationHip
        """
        if hip is None:
            raise ValueError("Invalid value for `hip`, must not be `None`")

        self._hip = hip

    @property
    def phone_no(self):
        """Gets the phone_no of this PatientSMSNotifcationRequestNotification.

        Phone number of the receiver with country code

        :return: The phone_no of this PatientSMSNotifcationRequestNotification.
        :rtype: str
        """
        return self._phone_no

    @phone_no.setter
    def phone_no(self, phone_no):
        """Sets the phone_no of this PatientSMSNotifcationRequestNotification.

        Phone number of the receiver with country code

        :param phone_no: The phone_no of this PatientSMSNotifcationRequestNotification.
        :type phone_no: str
        """
        if phone_no is None:
            raise ValueError("Invalid value for `phone_no`, must not be `None`")

        self._phone_no = phone_no

    @property
    def receiver_name(self):
        """Gets the receiver_name of this PatientSMSNotifcationRequestNotification.

        Name of the reciever/patient. Receiver's name will not be sent if not provided.

        :return: The receiver_name of this PatientSMSNotifcationRequestNotification.
        :rtype: str
        """
        return self._receiver_name

    @receiver_name.setter
    def receiver_name(self, receiver_name):
        """Sets the receiver_name of this PatientSMSNotifcationRequestNotification.

        Name of the reciever/patient. Receiver's name will not be sent if not provided.

        :param receiver_name: The receiver_name of this PatientSMSNotifcationRequestNotification.
        :type receiver_name: str
        """

        self._receiver_name = receiver_name
