# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, care_context_reference: str=None, description: str=None, hi_status: str=None):
        """HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner - a model defined in OpenAPI

        :param care_context_reference: The care_context_reference of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        :param description: The description of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        :param hi_status: The hi_status of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        """
        self.openapi_types = {
            'care_context_reference': str,
            'description': str,
            'hi_status': str
        }

        self.attribute_map = {
            'care_context_reference': 'careContextReference',
            'description': 'description',
            'hi_status': 'hiStatus'
        }

        self._care_context_reference = care_context_reference
        self._description = description
        self._hi_status = hi_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HealthInformationNotification_notification_statusNotification_statusResponses_inner of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def care_context_reference(self):
        """Gets the care_context_reference of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.


        :return: The care_context_reference of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        :rtype: str
        """
        return self._care_context_reference

    @care_context_reference.setter
    def care_context_reference(self, care_context_reference):
        """Sets the care_context_reference of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.


        :param care_context_reference: The care_context_reference of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        :type care_context_reference: str
        """
        if care_context_reference is None:
            raise ValueError("Invalid value for `care_context_reference`, must not be `None`")

        self._care_context_reference = care_context_reference

    @property
    def description(self):
        """Gets the description of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.


        :return: The description of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.


        :param description: The description of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        :type description: str
        """

        self._description = description

    @property
    def hi_status(self):
        """Gets the hi_status of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.


        :return: The hi_status of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        :rtype: str
        """
        return self._hi_status

    @hi_status.setter
    def hi_status(self, hi_status):
        """Sets the hi_status of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.


        :param hi_status: The hi_status of this HealthInformationNotificationNotificationStatusNotificationStatusResponsesInner.
        :type hi_status: str
        """
        allowed_values = ["DELIVERED", "OK", "ERRORED"]  # noqa: E501
        if hi_status not in allowed_values:
            raise ValueError(
                "Invalid value for `hi_status` ({0}), must be one of {1}"
                .format(hi_status, allowed_values)
            )

        self._hi_status = hi_status
