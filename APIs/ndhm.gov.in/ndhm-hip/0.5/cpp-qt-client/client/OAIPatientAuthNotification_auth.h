/**
 * Health Repository Provider Specifications for HIP
 * The following are the specifications for the APIs to be implemented at the Health Repository end if an entity is only serving the role of a HIP. The specs are essentially duplicates from the Gateway and Health Repository, but put together so as to make it clear to *HIPs* which set of APIs they should implement to participate in the network.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatientAuthNotification_auth.h
 *
 * depending on the purpose of auth, as specified in /auth/init, the response may include the following    1. LINK - only returns **accessToken**   2. KYC - only returns **patient**   3. KYC_AND_LINK - returns both **accessToken** and **patient** 
 */

#ifndef OAIPatientAuthNotification_auth_H
#define OAIPatientAuthNotification_auth_H

#include <QJsonObject>

#include "OAIAccessTokenValidity.h"
#include "OAIPatientDemographicResponse.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPatientDemographicResponse;
class OAIAccessTokenValidity;

class OAIPatientAuthNotification_auth : public OAIObject {
public:
    OAIPatientAuthNotification_auth();
    OAIPatientAuthNotification_auth(QString json);
    ~OAIPatientAuthNotification_auth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccessToken() const;
    void setAccessToken(const QString &access_token);
    bool is_access_token_Set() const;
    bool is_access_token_Valid() const;

    OAIPatientDemographicResponse getPatient() const;
    void setPatient(const OAIPatientDemographicResponse &patient);
    bool is_patient_Set() const;
    bool is_patient_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    OAIAccessTokenValidity getValidity() const;
    void setValidity(const OAIAccessTokenValidity &validity);
    bool is_validity_Set() const;
    bool is_validity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_access_token;
    bool m_access_token_isSet;
    bool m_access_token_isValid;

    OAIPatientDemographicResponse m_patient;
    bool m_patient_isSet;
    bool m_patient_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;

    OAIAccessTokenValidity m_validity;
    bool m_validity_isSet;
    bool m_validity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatientAuthNotification_auth)

#endif // OAIPatientAuthNotification_auth_H
