/**
 * Health Repository Provider Specifications for HIP
 * The following are the specifications for the APIs to be implemented at the Health Repository end if an entity is only serving the role of a HIP. The specs are essentially duplicates from the Gateway and Health Repository, but put together so as to make it clear to *HIPs* which set of APIs they should implement to participate in the network.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyObject.h
 *
 * 
 */

#ifndef OAIKeyObject_H
#define OAIKeyObject_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKeyObject : public OAIObject {
public:
    OAIKeyObject();
    OAIKeyObject(QString json);
    ~OAIKeyObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getExpiry() const;
    void setExpiry(const QDateTime &expiry);
    bool is_expiry_Set() const;
    bool is_expiry_Valid() const;

    QString getKeyValue() const;
    void setKeyValue(const QString &key_value);
    bool is_key_value_Set() const;
    bool is_key_value_Valid() const;

    QString getParameters() const;
    void setParameters(const QString &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_expiry;
    bool m_expiry_isSet;
    bool m_expiry_isValid;

    QString m_key_value;
    bool m_key_value_isSet;
    bool m_key_value_isValid;

    QString m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyObject)

#endif // OAIKeyObject_H
