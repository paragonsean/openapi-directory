/**
 * Health Repository Provider Specifications for HIP
 * The following are the specifications for the APIs to be implemented at the Health Repository end if an entity is only serving the role of a HIP. The specs are essentially duplicates from the Gateway and Health Repository, but put together so as to make it clear to *HIPs* which set of APIs they should implement to participate in the network.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataNotification.h
 *
 * 
 */

#ifndef OAIDataNotification_H
#define OAIDataNotification_H

#include <QJsonObject>

#include "OAIDataNotification_entries_inner.h"
#include "OAIKeyMaterial.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataNotification_entries_inner;
class OAIKeyMaterial;

class OAIDataNotification : public OAIObject {
public:
    OAIDataNotification();
    OAIDataNotification(QString json);
    ~OAIDataNotification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDataNotification_entries_inner> getEntries() const;
    void setEntries(const QList<OAIDataNotification_entries_inner> &entries);
    bool is_entries_Set() const;
    bool is_entries_Valid() const;

    OAIKeyMaterial getKeyMaterial() const;
    void setKeyMaterial(const OAIKeyMaterial &key_material);
    bool is_key_material_Set() const;
    bool is_key_material_Valid() const;

    qint32 getPageCount() const;
    void setPageCount(const qint32 &page_count);
    bool is_page_count_Set() const;
    bool is_page_count_Valid() const;

    qint32 getPageNumber() const;
    void setPageNumber(const qint32 &page_number);
    bool is_page_number_Set() const;
    bool is_page_number_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDataNotification_entries_inner> m_entries;
    bool m_entries_isSet;
    bool m_entries_isValid;

    OAIKeyMaterial m_key_material;
    bool m_key_material_isSet;
    bool m_key_material_isValid;

    qint32 m_page_count;
    bool m_page_count_isSet;
    bool m_page_count_isValid;

    qint32 m_page_number;
    bool m_page_number_isSet;
    bool m_page_number_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataNotification)

#endif // OAIDataNotification_H
