/**
 * Health Repository Provider Specifications for HIP
 * The following are the specifications for the APIs to be implemented at the Health Repository end if an entity is only serving the role of a HIP. The specs are essentially duplicates from the Gateway and Health Repository, but put together so as to make it clear to *HIPs* which set of APIs they should implement to participate in the network.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntryContent.h
 *
 * 
 */

#ifndef OAIEntryContent_H
#define OAIEntryContent_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEntryContent : public OAIObject {
public:
    OAIEntryContent();
    OAIEntryContent(QString json);
    ~OAIEntryContent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCareContextReference() const;
    void setCareContextReference(const QString &care_context_reference);
    bool is_care_context_reference_Set() const;
    bool is_care_context_reference_Valid() const;

    QString getChecksum() const;
    void setChecksum(const QString &checksum);
    bool is_checksum_Set() const;
    bool is_checksum_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getMedia() const;
    void setMedia(const QString &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_care_context_reference;
    bool m_care_context_reference_isSet;
    bool m_care_context_reference_isValid;

    QString m_checksum;
    bool m_checksum_isSet;
    bool m_checksum_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_media;
    bool m_media_isSet;
    bool m_media_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntryContent)

#endif // OAIEntryContent_H
