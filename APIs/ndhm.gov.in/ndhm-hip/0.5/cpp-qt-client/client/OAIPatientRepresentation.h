/**
 * Health Repository Provider Specifications for HIP
 * The following are the specifications for the APIs to be implemented at the Health Repository end if an entity is only serving the role of a HIP. The specs are essentially duplicates from the Gateway and Health Repository, but put together so as to make it clear to *HIPs* which set of APIs they should implement to participate in the network.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatientRepresentation.h
 *
 * 
 */

#ifndef OAIPatientRepresentation_H
#define OAIPatientRepresentation_H

#include <QJsonObject>

#include "OAICareContextRepresentation.h"
#include "OAIIdentifierType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICareContextRepresentation;

class OAIPatientRepresentation : public OAIObject {
public:
    OAIPatientRepresentation();
    OAIPatientRepresentation(QString json);
    ~OAIPatientRepresentation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICareContextRepresentation> getCareContexts() const;
    void setCareContexts(const QList<OAICareContextRepresentation> &care_contexts);
    bool is_care_contexts_Set() const;
    bool is_care_contexts_Valid() const;

    QString getDisplay() const;
    void setDisplay(const QString &display);
    bool is_display_Set() const;
    bool is_display_Valid() const;

    QList<OAIIdentifierType> getMatchedBy() const;
    void setMatchedBy(const QList<OAIIdentifierType> &matched_by);
    bool is_matched_by_Set() const;
    bool is_matched_by_Valid() const;

    QString getReferenceNumber() const;
    void setReferenceNumber(const QString &reference_number);
    bool is_reference_number_Set() const;
    bool is_reference_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICareContextRepresentation> m_care_contexts;
    bool m_care_contexts_isSet;
    bool m_care_contexts_isValid;

    QString m_display;
    bool m_display_isSet;
    bool m_display_isValid;

    QList<OAIIdentifierType> m_matched_by;
    bool m_matched_by_isSet;
    bool m_matched_by_isValid;

    QString m_reference_number;
    bool m_reference_number_isSet;
    bool m_reference_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatientRepresentation)

#endif // OAIPatientRepresentation_H
