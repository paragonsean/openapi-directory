/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthInitRequest model module.
 * @module model/AuthInitRequest
 * @version 1.0
 */
class AuthInitRequest {
    /**
     * Constructs a new <code>AuthInitRequest</code>.
     * @alias module:model/AuthInitRequest
     * @param authMethod {module:model/AuthInitRequest.AuthMethodEnum} 
     */
    constructor(authMethod) { 
        
        AuthInitRequest.initialize(this, authMethod);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authMethod) { 
        obj['authMethod'] = authMethod;
    }

    /**
     * Constructs a <code>AuthInitRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthInitRequest} obj Optional instance to populate.
     * @return {module:model/AuthInitRequest} The populated <code>AuthInitRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthInitRequest();

            if (data.hasOwnProperty('authMethod')) {
                obj['authMethod'] = ApiClient.convertToType(data['authMethod'], 'String');
            }
            if (data.hasOwnProperty('healthid')) {
                obj['healthid'] = ApiClient.convertToType(data['healthid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthInitRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthInitRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthInitRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['authMethod'] && !(typeof data['authMethod'] === 'string' || data['authMethod'] instanceof String)) {
            throw new Error("Expected the field `authMethod` to be a primitive type in the JSON string but got " + data['authMethod']);
        }
        // ensure the json data is a string
        if (data['healthid'] && !(typeof data['healthid'] === 'string' || data['healthid'] instanceof String)) {
            throw new Error("Expected the field `healthid` to be a primitive type in the JSON string but got " + data['healthid']);
        }

        return true;
    }


}

AuthInitRequest.RequiredProperties = ["authMethod"];

/**
 * @member {module:model/AuthInitRequest.AuthMethodEnum} authMethod
 */
AuthInitRequest.prototype['authMethod'] = undefined;

/**
 * @member {String} healthid
 */
AuthInitRequest.prototype['healthid'] = undefined;





/**
 * Allowed values for the <code>authMethod</code> property.
 * @enum {String}
 * @readonly
 */
AuthInitRequest['AuthMethodEnum'] = {

    /**
     * value: "AADHAAR_OTP"
     * @const
     */
    "AADHAAR_OTP": "AADHAAR_OTP",

    /**
     * value: "MOBILE_OTP"
     * @const
     */
    "MOBILE_OTP": "MOBILE_OTP",

    /**
     * value: "PASSWORD"
     * @const
     */
    "PASSWORD": "PASSWORD",

    /**
     * value: "DEMOGRAPHICS"
     * @const
     */
    "DEMOGRAPHICS": "DEMOGRAPHICS",

    /**
     * value: "AADHAAR_BIO"
     * @const
     */
    "AADHAAR_BIO": "AADHAAR_BIO"
};



export default AuthInitRequest;

