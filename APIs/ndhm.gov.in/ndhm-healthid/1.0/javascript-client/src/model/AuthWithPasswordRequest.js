/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthWithPasswordRequest model module.
 * @module model/AuthWithPasswordRequest
 * @version 1.0
 */
class AuthWithPasswordRequest {
    /**
     * Constructs a new <code>AuthWithPasswordRequest</code>.
     * @alias module:model/AuthWithPasswordRequest
     * @param password {String} 
     * @param txnId {String} 
     */
    constructor(password, txnId) { 
        
        AuthWithPasswordRequest.initialize(this, password, txnId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, password, txnId) { 
        obj['password'] = password;
        obj['txnId'] = txnId;
    }

    /**
     * Constructs a <code>AuthWithPasswordRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthWithPasswordRequest} obj Optional instance to populate.
     * @return {module:model/AuthWithPasswordRequest} The populated <code>AuthWithPasswordRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthWithPasswordRequest();

            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('txnId')) {
                obj['txnId'] = ApiClient.convertToType(data['txnId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthWithPasswordRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthWithPasswordRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthWithPasswordRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['txnId'] && !(typeof data['txnId'] === 'string' || data['txnId'] instanceof String)) {
            throw new Error("Expected the field `txnId` to be a primitive type in the JSON string but got " + data['txnId']);
        }

        return true;
    }


}

AuthWithPasswordRequest.RequiredProperties = ["password", "txnId"];

/**
 * @member {String} password
 */
AuthWithPasswordRequest.prototype['password'] = undefined;

/**
 * @member {String} txnId
 */
AuthWithPasswordRequest.prototype['txnId'] = undefined;






export default AuthWithPasswordRequest;

