/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VerifyMobileRequest model module.
 * @module model/VerifyMobileRequest
 * @version 1.0
 */
class VerifyMobileRequest {
    /**
     * Constructs a new <code>VerifyMobileRequest</code>.
     * @alias module:model/VerifyMobileRequest
     */
    constructor() { 
        
        VerifyMobileRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VerifyMobileRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerifyMobileRequest} obj Optional instance to populate.
     * @return {module:model/VerifyMobileRequest} The populated <code>VerifyMobileRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerifyMobileRequest();

            if (data.hasOwnProperty('otp')) {
                obj['otp'] = ApiClient.convertToType(data['otp'], 'String');
            }
            if (data.hasOwnProperty('txnId')) {
                obj['txnId'] = ApiClient.convertToType(data['txnId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerifyMobileRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerifyMobileRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['otp'] && !(typeof data['otp'] === 'string' || data['otp'] instanceof String)) {
            throw new Error("Expected the field `otp` to be a primitive type in the JSON string but got " + data['otp']);
        }
        // ensure the json data is a string
        if (data['txnId'] && !(typeof data['txnId'] === 'string' || data['txnId'] instanceof String)) {
            throw new Error("Expected the field `txnId` to be a primitive type in the JSON string but got " + data['txnId']);
        }

        return true;
    }


}



/**
 * @member {String} otp
 */
VerifyMobileRequest.prototype['otp'] = undefined;

/**
 * @member {String} txnId
 */
VerifyMobileRequest.prototype['txnId'] = undefined;






export default VerifyMobileRequest;

