/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AadharNumberRequestPayload from '../model/AadharNumberRequestPayload';
import AadharOtpGenerateRequestPayLoad from '../model/AadharOtpGenerateRequestPayLoad';
import CreateAccountJwtResponse from '../model/CreateAccountJwtResponse';
import CreateAccountWithAadhaarOtp from '../model/CreateAccountWithAadhaarOtp';
import CreateAccountWithPreVerifiedAadhaar from '../model/CreateAccountWithPreVerifiedAadhaar';
import GenerateMobileOTPForTxnRequest from '../model/GenerateMobileOTPForTxnRequest';
import ResendOTPRequest from '../model/ResendOTPRequest';
import TxnResponse from '../model/TxnResponse';
import VerifyAadhaarOtp from '../model/VerifyAadhaarOtp';
import VerifyAadhaarWithBio from '../model/VerifyAadhaarWithBio';
import VerifyMobileRequest from '../model/VerifyMobileRequest';

/**
* RegistrationWithAadhaar service.
* @module api/RegistrationWithAadhaarApi
* @version 1.0
*/
export default class RegistrationWithAadhaarApi {

    /**
    * Constructs a new RegistrationWithAadhaarApi. 
    * @alias module:api/RegistrationWithAadhaarApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createAadhaarAccountUsingPOST operation.
     * @callback module:api/RegistrationWithAadhaarApi~createAadhaarAccountUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAccountJwtResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Health ID using pre-verified Aadhaar & Mobile.
     * Create Health ID using pre-verified Aadhaar & Mobile.
     * @param {module:model/CreateAccountWithPreVerifiedAadhaar} accountRequest accountRequest
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithAadhaarApi~createAadhaarAccountUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAccountJwtResponse}
     */
    createAadhaarAccountUsingPOST(accountRequest, opts, callback) {
      opts = opts || {};
      let postBody = accountRequest;
      // verify the required parameter 'accountRequest' is set
      if (accountRequest === undefined || accountRequest === null) {
        throw new Error("Missing the required parameter 'accountRequest' when calling createAadhaarAccountUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = CreateAccountJwtResponse;
      return this.apiClient.callApi(
        '/v1/registration/aadhaar/createHealthIdWithPreVerified', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the generateAadharOTPUsingPOST operation.
     * @callback module:api/RegistrationWithAadhaarApi~generateAadharOTPUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TxnResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate Aadhaar OTP on registrered mobile number
     * Generate Aadhaar OTP on registrered mobile number
     * @param {module:model/AadharOtpGenerateRequestPayLoad} generateOtpRequest generateOtpRequest
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithAadhaarApi~generateAadharOTPUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TxnResponse}
     */
    generateAadharOTPUsingPOST(generateOtpRequest, opts, callback) {
      opts = opts || {};
      let postBody = generateOtpRequest;
      // verify the required parameter 'generateOtpRequest' is set
      if (generateOtpRequest === undefined || generateOtpRequest === null) {
        throw new Error("Missing the required parameter 'generateOtpRequest' when calling generateAadharOTPUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = TxnResponse;
      return this.apiClient.callApi(
        '/v1/registration/aadhaar/generateOtp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the generateMobileOTPForTxnUsingPOST operation.
     * @callback module:api/RegistrationWithAadhaarApi~generateMobileOTPForTxnUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TxnResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate Mobile OTP for verification.
     * Generate Mobile OTP to verify mobile number.
     * @param {module:model/GenerateMobileOTPForTxnRequest} request request
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithAadhaarApi~generateMobileOTPForTxnUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TxnResponse}
     */
    generateMobileOTPForTxnUsingPOST(request, opts, callback) {
      opts = opts || {};
      let postBody = request;
      // verify the required parameter 'request' is set
      if (request === undefined || request === null) {
        throw new Error("Missing the required parameter 'request' when calling generateMobileOTPForTxnUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = TxnResponse;
      return this.apiClient.callApi(
        '/v1/registration/aadhaar/generateMobileOTP', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getHealthIdNumbersByAadharUsingPOST operation.
     * @callback module:api/RegistrationWithAadhaarApi~getHealthIdNumbersByAadharUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Object>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search health id number using aadhar.
     * Search health id number using aadhar.
     * @param {module:model/AadharNumberRequestPayload} aadharNumberRequestPayload aadharNumberRequestPayload
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithAadhaarApi~getHealthIdNumbersByAadharUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Object>}
     */
    getHealthIdNumbersByAadharUsingPOST(aadharNumberRequestPayload, opts, callback) {
      opts = opts || {};
      let postBody = aadharNumberRequestPayload;
      // verify the required parameter 'aadharNumberRequestPayload' is set
      if (aadharNumberRequestPayload === undefined || aadharNumberRequestPayload === null) {
        throw new Error("Missing the required parameter 'aadharNumberRequestPayload' when calling getHealthIdNumbersByAadharUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = [Object];
      return this.apiClient.callApi(
        '/v1/registration/aadhaar/search/aadhar', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resendAadharOTPUsingPOST operation.
     * @callback module:api/RegistrationWithAadhaarApi~resendAadharOTPUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAccountJwtResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resend Aadhaar OTP on registrered mobile number to create Health ID.
     * Resend Aadhar OTP on registrered mobile number
     * @param {module:model/ResendOTPRequest} request request
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithAadhaarApi~resendAadharOTPUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAccountJwtResponse}
     */
    resendAadharOTPUsingPOST(request, opts, callback) {
      opts = opts || {};
      let postBody = request;
      // verify the required parameter 'request' is set
      if (request === undefined || request === null) {
        throw new Error("Missing the required parameter 'request' when calling resendAadharOTPUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = CreateAccountJwtResponse;
      return this.apiClient.callApi(
        '/v1/registration/aadhaar/resendAadhaarOtp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the verifyAadharBioUsingPOST operation.
     * @callback module:api/RegistrationWithAadhaarApi~verifyAadharBioUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TxnResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify Aadhaar using biometrics.
     * Verify Aadhaar using biometrics
     * @param {module:model/VerifyAadhaarWithBio} verifyAadharOtpRequest verifyAadharOtpRequest
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithAadhaarApi~verifyAadharBioUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TxnResponse}
     */
    verifyAadharBioUsingPOST(verifyAadharOtpRequest, opts, callback) {
      opts = opts || {};
      let postBody = verifyAadharOtpRequest;
      // verify the required parameter 'verifyAadharOtpRequest' is set
      if (verifyAadharOtpRequest === undefined || verifyAadharOtpRequest === null) {
        throw new Error("Missing the required parameter 'verifyAadharOtpRequest' when calling verifyAadharBioUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = TxnResponse;
      return this.apiClient.callApi(
        '/v1/registration/aadhaar/verifyBio', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the verifyAadharOTPOnlyUsingPOST operation.
     * @callback module:api/RegistrationWithAadhaarApi~verifyAadharOTPOnlyUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TxnResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify Aadhaar OTP and continue for mobile verification.
     * Verify Aadhaar OTP received on registrered mobile number
     * @param {module:model/VerifyAadhaarOtp} verifyAadhaarOtp verifyAadhaarOtp
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithAadhaarApi~verifyAadharOTPOnlyUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TxnResponse}
     */
    verifyAadharOTPOnlyUsingPOST(verifyAadhaarOtp, opts, callback) {
      opts = opts || {};
      let postBody = verifyAadhaarOtp;
      // verify the required parameter 'verifyAadhaarOtp' is set
      if (verifyAadhaarOtp === undefined || verifyAadhaarOtp === null) {
        throw new Error("Missing the required parameter 'verifyAadhaarOtp' when calling verifyAadharOTPOnlyUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = TxnResponse;
      return this.apiClient.callApi(
        '/v1/registration/aadhaar/verifyOTP', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the verifyAadharOTPUsingPOST operation.
     * @callback module:api/RegistrationWithAadhaarApi~verifyAadharOTPUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAccountJwtResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify Aadhaar OTP on registrered mobile number to create Health ID.
     * Verify Aadhar OTP received on registrered mobile number
     * @param {module:model/CreateAccountWithAadhaarOtp} verifyAadharOtpRequest verifyAadharOtpRequest
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithAadhaarApi~verifyAadharOTPUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAccountJwtResponse}
     */
    verifyAadharOTPUsingPOST(verifyAadharOtpRequest, opts, callback) {
      opts = opts || {};
      let postBody = verifyAadharOtpRequest;
      // verify the required parameter 'verifyAadharOtpRequest' is set
      if (verifyAadharOtpRequest === undefined || verifyAadharOtpRequest === null) {
        throw new Error("Missing the required parameter 'verifyAadharOtpRequest' when calling verifyAadharOTPUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = CreateAccountJwtResponse;
      return this.apiClient.callApi(
        '/v1/registration/aadhaar/createHealthIdWithAadhaarOtp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the verifyMobileOTPForTxnUsingPOST operation.
     * @callback module:api/RegistrationWithAadhaarApi~verifyMobileOTPForTxnUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TxnResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify Mobile OTP in an existing transaction.
     * Verify Mobile OTP in an existing transaction.
     * @param {module:model/VerifyMobileRequest} request request
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithAadhaarApi~verifyMobileOTPForTxnUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TxnResponse}
     */
    verifyMobileOTPForTxnUsingPOST(request, opts, callback) {
      opts = opts || {};
      let postBody = request;
      // verify the required parameter 'request' is set
      if (request === undefined || request === null) {
        throw new Error("Missing the required parameter 'request' when calling verifyMobileOTPForTxnUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = TxnResponse;
      return this.apiClient.callApi(
        '/v1/registration/aadhaar/verifyMobileOTP', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
