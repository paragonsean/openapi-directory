/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateAccountByVerifiedMobileRequest from '../model/CreateAccountByVerifiedMobileRequest';
import CreateAccountJwtResponse from '../model/CreateAccountJwtResponse';
import GenerateMobileOTPRequest from '../model/GenerateMobileOTPRequest';
import MobileVerificationToken from '../model/MobileVerificationToken';
import ResendOTPRequest from '../model/ResendOTPRequest';
import TxnResponse from '../model/TxnResponse';
import VerifyMobileRequest from '../model/VerifyMobileRequest';

/**
* RegistrationWithMobileNumber service.
* @module api/RegistrationWithMobileNumberApi
* @version 1.0
*/
export default class RegistrationWithMobileNumberApi {

    /**
    * Constructs a new RegistrationWithMobileNumberApi. 
    * @alias module:api/RegistrationWithMobileNumberApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the generateMobileOTPUsingPOST1 operation.
     * @callback module:api/RegistrationWithMobileNumberApi~generateMobileOTPUsingPOST1Callback
     * @param {String} error Error message, if any.
     * @param {module:model/TxnResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate Mobile OTP to start registration
     * Generate Mobile OTP to start registration transaction.
     * @param {module:model/GenerateMobileOTPRequest} generateOtpRequest generateOtpRequest
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithMobileNumberApi~generateMobileOTPUsingPOST1Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TxnResponse}
     */
    generateMobileOTPUsingPOST1(generateOtpRequest, opts, callback) {
      opts = opts || {};
      let postBody = generateOtpRequest;
      // verify the required parameter 'generateOtpRequest' is set
      if (generateOtpRequest === undefined || generateOtpRequest === null) {
        throw new Error("Missing the required parameter 'generateOtpRequest' when calling generateMobileOTPUsingPOST1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = TxnResponse;
      return this.apiClient.callApi(
        '/v1/registration/mobile/generateOtp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resentOtpUsingPOST operation.
     * @callback module:api/RegistrationWithMobileNumberApi~resentOtpUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resend Mobile OTP for Health ID registration
     * Resend Mobile OTP in an existing transaction in case previous OTP is not received.
     * @param {module:model/ResendOTPRequest} resendRequest resendRequest
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithMobileNumberApi~resentOtpUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    resentOtpUsingPOST(resendRequest, opts, callback) {
      opts = opts || {};
      let postBody = resendRequest;
      // verify the required parameter 'resendRequest' is set
      if (resendRequest === undefined || resendRequest === null) {
        throw new Error("Missing the required parameter 'resendRequest' when calling resentOtpUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = 'Boolean';
      return this.apiClient.callApi(
        '/v1/registration/mobile/resendOtp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the verifyMobileOTPUsingPOST operation.
     * @callback module:api/RegistrationWithMobileNumberApi~verifyMobileOTPUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MobileVerificationToken} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify Mobile OTP sent as part of registration transaction.
     * Verify Mobile OTP in current registration transaction.
     * @param {module:model/VerifyMobileRequest} verifyOtpRequest verifyOtpRequest
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithMobileNumberApi~verifyMobileOTPUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MobileVerificationToken}
     */
    verifyMobileOTPUsingPOST(verifyOtpRequest, opts, callback) {
      opts = opts || {};
      let postBody = verifyOtpRequest;
      // verify the required parameter 'verifyOtpRequest' is set
      if (verifyOtpRequest === undefined || verifyOtpRequest === null) {
        throw new Error("Missing the required parameter 'verifyOtpRequest' when calling verifyMobileOTPUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = MobileVerificationToken;
      return this.apiClient.callApi(
        '/v1/registration/mobile/verifyOtp', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the verifyUserViaMobileUsingPOST operation.
     * @callback module:api/RegistrationWithMobileNumberApi~verifyUserViaMobileUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateAccountJwtResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Health ID with verified mobile token
     * @param {module:model/CreateAccountByVerifiedMobileRequest} createAccountRequest createAccountRequest
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage = 'en-US')] 
     * @param {module:api/RegistrationWithMobileNumberApi~verifyUserViaMobileUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateAccountJwtResponse}
     */
    verifyUserViaMobileUsingPOST(createAccountRequest, opts, callback) {
      opts = opts || {};
      let postBody = createAccountRequest;
      // verify the required parameter 'createAccountRequest' is set
      if (createAccountRequest === undefined || createAccountRequest === null) {
        throw new Error("Missing the required parameter 'createAccountRequest' when calling verifyUserViaMobileUsingPOST");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['Authorization', 'X-HIP-ID'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = CreateAccountJwtResponse;
      return this.apiClient.callApi(
        '/v1/registration/mobile/createHealthId', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
