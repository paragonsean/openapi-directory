# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BenefitDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, benefit_id: str=None, benefit_name: str=None, description: str=None, linkage_date: datetime=None, program_name: str=None, validity: date=None):
        """BenefitDTO - a model defined in OpenAPI

        :param benefit_id: The benefit_id of this BenefitDTO.
        :param benefit_name: The benefit_name of this BenefitDTO.
        :param description: The description of this BenefitDTO.
        :param linkage_date: The linkage_date of this BenefitDTO.
        :param program_name: The program_name of this BenefitDTO.
        :param validity: The validity of this BenefitDTO.
        """
        self.openapi_types = {
            'benefit_id': str,
            'benefit_name': str,
            'description': str,
            'linkage_date': datetime,
            'program_name': str,
            'validity': date
        }

        self.attribute_map = {
            'benefit_id': 'benefitId',
            'benefit_name': 'benefitName',
            'description': 'description',
            'linkage_date': 'linkageDate',
            'program_name': 'programName',
            'validity': 'validity'
        }

        self._benefit_id = benefit_id
        self._benefit_name = benefit_name
        self._description = description
        self._linkage_date = linkage_date
        self._program_name = program_name
        self._validity = validity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BenefitDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BenefitDTO of this BenefitDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def benefit_id(self):
        """Gets the benefit_id of this BenefitDTO.


        :return: The benefit_id of this BenefitDTO.
        :rtype: str
        """
        return self._benefit_id

    @benefit_id.setter
    def benefit_id(self, benefit_id):
        """Sets the benefit_id of this BenefitDTO.


        :param benefit_id: The benefit_id of this BenefitDTO.
        :type benefit_id: str
        """

        self._benefit_id = benefit_id

    @property
    def benefit_name(self):
        """Gets the benefit_name of this BenefitDTO.


        :return: The benefit_name of this BenefitDTO.
        :rtype: str
        """
        return self._benefit_name

    @benefit_name.setter
    def benefit_name(self, benefit_name):
        """Sets the benefit_name of this BenefitDTO.


        :param benefit_name: The benefit_name of this BenefitDTO.
        :type benefit_name: str
        """

        self._benefit_name = benefit_name

    @property
    def description(self):
        """Gets the description of this BenefitDTO.


        :return: The description of this BenefitDTO.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BenefitDTO.


        :param description: The description of this BenefitDTO.
        :type description: str
        """

        self._description = description

    @property
    def linkage_date(self):
        """Gets the linkage_date of this BenefitDTO.


        :return: The linkage_date of this BenefitDTO.
        :rtype: datetime
        """
        return self._linkage_date

    @linkage_date.setter
    def linkage_date(self, linkage_date):
        """Sets the linkage_date of this BenefitDTO.


        :param linkage_date: The linkage_date of this BenefitDTO.
        :type linkage_date: datetime
        """

        self._linkage_date = linkage_date

    @property
    def program_name(self):
        """Gets the program_name of this BenefitDTO.


        :return: The program_name of this BenefitDTO.
        :rtype: str
        """
        return self._program_name

    @program_name.setter
    def program_name(self, program_name):
        """Sets the program_name of this BenefitDTO.


        :param program_name: The program_name of this BenefitDTO.
        :type program_name: str
        """

        self._program_name = program_name

    @property
    def validity(self):
        """Gets the validity of this BenefitDTO.


        :return: The validity of this BenefitDTO.
        :rtype: date
        """
        return self._validity

    @validity.setter
    def validity(self, validity):
        """Sets the validity of this BenefitDTO.


        :param validity: The validity of this BenefitDTO.
        :type validity: date
        """

        self._validity = validity
