# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class AadharOtpGenerateRequestPayLoad(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aadhaar: str=None):
        """AadharOtpGenerateRequestPayLoad - a model defined in OpenAPI

        :param aadhaar: The aadhaar of this AadharOtpGenerateRequestPayLoad.
        """
        self.openapi_types = {
            'aadhaar': str
        }

        self.attribute_map = {
            'aadhaar': 'aadhaar'
        }

        self._aadhaar = aadhaar

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AadharOtpGenerateRequestPayLoad':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AadharOtpGenerateRequestPayLoad of this AadharOtpGenerateRequestPayLoad.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aadhaar(self):
        """Gets the aadhaar of this AadharOtpGenerateRequestPayLoad.


        :return: The aadhaar of this AadharOtpGenerateRequestPayLoad.
        :rtype: str
        """
        return self._aadhaar

    @aadhaar.setter
    def aadhaar(self, aadhaar):
        """Sets the aadhaar of this AadharOtpGenerateRequestPayLoad.


        :param aadhaar: The aadhaar of this AadharOtpGenerateRequestPayLoad.
        :type aadhaar: str
        """
        if aadhaar is not None and not re.search(r'^(\d{12}|\d{16})*$', aadhaar):
            raise ValueError("Invalid value for `aadhaar`, must be a follow pattern or equal to `/^(\d{12}|\d{16})*$/`")

        self._aadhaar = aadhaar
