# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.district_dto import DistrictDTO
from openapi_server import util


class StatesDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, districts: List[DistrictDTO]=None, name: str=None):
        """StatesDTO - a model defined in OpenAPI

        :param code: The code of this StatesDTO.
        :param districts: The districts of this StatesDTO.
        :param name: The name of this StatesDTO.
        """
        self.openapi_types = {
            'code': str,
            'districts': List[DistrictDTO],
            'name': str
        }

        self.attribute_map = {
            'code': 'code',
            'districts': 'districts',
            'name': 'name'
        }

        self._code = code
        self._districts = districts
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatesDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatesDTO of this StatesDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this StatesDTO.


        :return: The code of this StatesDTO.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this StatesDTO.


        :param code: The code of this StatesDTO.
        :type code: str
        """

        self._code = code

    @property
    def districts(self):
        """Gets the districts of this StatesDTO.


        :return: The districts of this StatesDTO.
        :rtype: List[DistrictDTO]
        """
        return self._districts

    @districts.setter
    def districts(self, districts):
        """Sets the districts of this StatesDTO.


        :param districts: The districts of this StatesDTO.
        :type districts: List[DistrictDTO]
        """

        self._districts = districts

    @property
    def name(self):
        """Gets the name of this StatesDTO.


        :return: The name of this StatesDTO.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StatesDTO.


        :param name: The name of this StatesDTO.
        :type name: str
        """

        self._name = name
