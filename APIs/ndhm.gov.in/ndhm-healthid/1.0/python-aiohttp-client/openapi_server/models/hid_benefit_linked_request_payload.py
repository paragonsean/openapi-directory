# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HidBenefitLinkedRequestPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, benefit_id: str=None, benefit_name: str=None, state_code: str=None, uid_token: str=None, validity: str=None):
        """HidBenefitLinkedRequestPayload - a model defined in OpenAPI

        :param benefit_id: The benefit_id of this HidBenefitLinkedRequestPayload.
        :param benefit_name: The benefit_name of this HidBenefitLinkedRequestPayload.
        :param state_code: The state_code of this HidBenefitLinkedRequestPayload.
        :param uid_token: The uid_token of this HidBenefitLinkedRequestPayload.
        :param validity: The validity of this HidBenefitLinkedRequestPayload.
        """
        self.openapi_types = {
            'benefit_id': str,
            'benefit_name': str,
            'state_code': str,
            'uid_token': str,
            'validity': str
        }

        self.attribute_map = {
            'benefit_id': 'benefitId',
            'benefit_name': 'benefitName',
            'state_code': 'stateCode',
            'uid_token': 'uidToken',
            'validity': 'validity'
        }

        self._benefit_id = benefit_id
        self._benefit_name = benefit_name
        self._state_code = state_code
        self._uid_token = uid_token
        self._validity = validity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HidBenefitLinkedRequestPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HidBenefitLinkedRequestPayload of this HidBenefitLinkedRequestPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def benefit_id(self):
        """Gets the benefit_id of this HidBenefitLinkedRequestPayload.


        :return: The benefit_id of this HidBenefitLinkedRequestPayload.
        :rtype: str
        """
        return self._benefit_id

    @benefit_id.setter
    def benefit_id(self, benefit_id):
        """Sets the benefit_id of this HidBenefitLinkedRequestPayload.


        :param benefit_id: The benefit_id of this HidBenefitLinkedRequestPayload.
        :type benefit_id: str
        """

        self._benefit_id = benefit_id

    @property
    def benefit_name(self):
        """Gets the benefit_name of this HidBenefitLinkedRequestPayload.


        :return: The benefit_name of this HidBenefitLinkedRequestPayload.
        :rtype: str
        """
        return self._benefit_name

    @benefit_name.setter
    def benefit_name(self, benefit_name):
        """Sets the benefit_name of this HidBenefitLinkedRequestPayload.


        :param benefit_name: The benefit_name of this HidBenefitLinkedRequestPayload.
        :type benefit_name: str
        """

        self._benefit_name = benefit_name

    @property
    def state_code(self):
        """Gets the state_code of this HidBenefitLinkedRequestPayload.


        :return: The state_code of this HidBenefitLinkedRequestPayload.
        :rtype: str
        """
        return self._state_code

    @state_code.setter
    def state_code(self, state_code):
        """Sets the state_code of this HidBenefitLinkedRequestPayload.


        :param state_code: The state_code of this HidBenefitLinkedRequestPayload.
        :type state_code: str
        """

        self._state_code = state_code

    @property
    def uid_token(self):
        """Gets the uid_token of this HidBenefitLinkedRequestPayload.


        :return: The uid_token of this HidBenefitLinkedRequestPayload.
        :rtype: str
        """
        return self._uid_token

    @uid_token.setter
    def uid_token(self, uid_token):
        """Sets the uid_token of this HidBenefitLinkedRequestPayload.


        :param uid_token: The uid_token of this HidBenefitLinkedRequestPayload.
        :type uid_token: str
        """

        self._uid_token = uid_token

    @property
    def validity(self):
        """Gets the validity of this HidBenefitLinkedRequestPayload.


        :return: The validity of this HidBenefitLinkedRequestPayload.
        :rtype: str
        """
        return self._validity

    @validity.setter
    def validity(self, validity):
        """Sets the validity of this HidBenefitLinkedRequestPayload.


        :param validity: The validity of this HidBenefitLinkedRequestPayload.
        :type validity: str
        """

        self._validity = validity
