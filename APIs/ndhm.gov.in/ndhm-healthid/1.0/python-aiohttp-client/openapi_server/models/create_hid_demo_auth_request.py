# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class CreateHIdDemoAuthRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aadhar_number: str=None, auto_generated_benefit_id: bool=None, benefit_id: str=None, benefit_name: str=None, consent_health_id: bool=None, date_of_birth: str=None, gender: str=None, mobile_number: str=None, name: str=None, validity: str=None):
        """CreateHIdDemoAuthRequest - a model defined in OpenAPI

        :param aadhar_number: The aadhar_number of this CreateHIdDemoAuthRequest.
        :param auto_generated_benefit_id: The auto_generated_benefit_id of this CreateHIdDemoAuthRequest.
        :param benefit_id: The benefit_id of this CreateHIdDemoAuthRequest.
        :param benefit_name: The benefit_name of this CreateHIdDemoAuthRequest.
        :param consent_health_id: The consent_health_id of this CreateHIdDemoAuthRequest.
        :param date_of_birth: The date_of_birth of this CreateHIdDemoAuthRequest.
        :param gender: The gender of this CreateHIdDemoAuthRequest.
        :param mobile_number: The mobile_number of this CreateHIdDemoAuthRequest.
        :param name: The name of this CreateHIdDemoAuthRequest.
        :param validity: The validity of this CreateHIdDemoAuthRequest.
        """
        self.openapi_types = {
            'aadhar_number': str,
            'auto_generated_benefit_id': bool,
            'benefit_id': str,
            'benefit_name': str,
            'consent_health_id': bool,
            'date_of_birth': str,
            'gender': str,
            'mobile_number': str,
            'name': str,
            'validity': str
        }

        self.attribute_map = {
            'aadhar_number': 'aadharNumber',
            'auto_generated_benefit_id': 'autoGeneratedBenefitId',
            'benefit_id': 'benefitId',
            'benefit_name': 'benefitName',
            'consent_health_id': 'consentHealthId',
            'date_of_birth': 'dateOfBirth',
            'gender': 'gender',
            'mobile_number': 'mobileNumber',
            'name': 'name',
            'validity': 'validity'
        }

        self._aadhar_number = aadhar_number
        self._auto_generated_benefit_id = auto_generated_benefit_id
        self._benefit_id = benefit_id
        self._benefit_name = benefit_name
        self._consent_health_id = consent_health_id
        self._date_of_birth = date_of_birth
        self._gender = gender
        self._mobile_number = mobile_number
        self._name = name
        self._validity = validity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateHIdDemoAuthRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateHIdDemoAuthRequest of this CreateHIdDemoAuthRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aadhar_number(self):
        """Gets the aadhar_number of this CreateHIdDemoAuthRequest.


        :return: The aadhar_number of this CreateHIdDemoAuthRequest.
        :rtype: str
        """
        return self._aadhar_number

    @aadhar_number.setter
    def aadhar_number(self, aadhar_number):
        """Sets the aadhar_number of this CreateHIdDemoAuthRequest.


        :param aadhar_number: The aadhar_number of this CreateHIdDemoAuthRequest.
        :type aadhar_number: str
        """
        if aadhar_number is not None and not re.search(r'^(\d{12}|\d{16})*$', aadhar_number):
            raise ValueError("Invalid value for `aadhar_number`, must be a follow pattern or equal to `/^(\d{12}|\d{16})*$/`")

        self._aadhar_number = aadhar_number

    @property
    def auto_generated_benefit_id(self):
        """Gets the auto_generated_benefit_id of this CreateHIdDemoAuthRequest.


        :return: The auto_generated_benefit_id of this CreateHIdDemoAuthRequest.
        :rtype: bool
        """
        return self._auto_generated_benefit_id

    @auto_generated_benefit_id.setter
    def auto_generated_benefit_id(self, auto_generated_benefit_id):
        """Sets the auto_generated_benefit_id of this CreateHIdDemoAuthRequest.


        :param auto_generated_benefit_id: The auto_generated_benefit_id of this CreateHIdDemoAuthRequest.
        :type auto_generated_benefit_id: bool
        """

        self._auto_generated_benefit_id = auto_generated_benefit_id

    @property
    def benefit_id(self):
        """Gets the benefit_id of this CreateHIdDemoAuthRequest.


        :return: The benefit_id of this CreateHIdDemoAuthRequest.
        :rtype: str
        """
        return self._benefit_id

    @benefit_id.setter
    def benefit_id(self, benefit_id):
        """Sets the benefit_id of this CreateHIdDemoAuthRequest.


        :param benefit_id: The benefit_id of this CreateHIdDemoAuthRequest.
        :type benefit_id: str
        """

        self._benefit_id = benefit_id

    @property
    def benefit_name(self):
        """Gets the benefit_name of this CreateHIdDemoAuthRequest.


        :return: The benefit_name of this CreateHIdDemoAuthRequest.
        :rtype: str
        """
        return self._benefit_name

    @benefit_name.setter
    def benefit_name(self, benefit_name):
        """Sets the benefit_name of this CreateHIdDemoAuthRequest.


        :param benefit_name: The benefit_name of this CreateHIdDemoAuthRequest.
        :type benefit_name: str
        """

        self._benefit_name = benefit_name

    @property
    def consent_health_id(self):
        """Gets the consent_health_id of this CreateHIdDemoAuthRequest.


        :return: The consent_health_id of this CreateHIdDemoAuthRequest.
        :rtype: bool
        """
        return self._consent_health_id

    @consent_health_id.setter
    def consent_health_id(self, consent_health_id):
        """Sets the consent_health_id of this CreateHIdDemoAuthRequest.


        :param consent_health_id: The consent_health_id of this CreateHIdDemoAuthRequest.
        :type consent_health_id: bool
        """

        self._consent_health_id = consent_health_id

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this CreateHIdDemoAuthRequest.


        :return: The date_of_birth of this CreateHIdDemoAuthRequest.
        :rtype: str
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this CreateHIdDemoAuthRequest.


        :param date_of_birth: The date_of_birth of this CreateHIdDemoAuthRequest.
        :type date_of_birth: str
        """

        self._date_of_birth = date_of_birth

    @property
    def gender(self):
        """Gets the gender of this CreateHIdDemoAuthRequest.


        :return: The gender of this CreateHIdDemoAuthRequest.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this CreateHIdDemoAuthRequest.


        :param gender: The gender of this CreateHIdDemoAuthRequest.
        :type gender: str
        """
        if gender is not None and not re.search(r'^(M|F|T)$', gender):
            raise ValueError("Invalid value for `gender`, must be a follow pattern or equal to `/^(M|F|T)$/`")

        self._gender = gender

    @property
    def mobile_number(self):
        """Gets the mobile_number of this CreateHIdDemoAuthRequest.


        :return: The mobile_number of this CreateHIdDemoAuthRequest.
        :rtype: str
        """
        return self._mobile_number

    @mobile_number.setter
    def mobile_number(self, mobile_number):
        """Sets the mobile_number of this CreateHIdDemoAuthRequest.


        :param mobile_number: The mobile_number of this CreateHIdDemoAuthRequest.
        :type mobile_number: str
        """

        self._mobile_number = mobile_number

    @property
    def name(self):
        """Gets the name of this CreateHIdDemoAuthRequest.


        :return: The name of this CreateHIdDemoAuthRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateHIdDemoAuthRequest.


        :param name: The name of this CreateHIdDemoAuthRequest.
        :type name: str
        """

        self._name = name

    @property
    def validity(self):
        """Gets the validity of this CreateHIdDemoAuthRequest.


        :return: The validity of this CreateHIdDemoAuthRequest.
        :rtype: str
        """
        return self._validity

    @validity.setter
    def validity(self, validity):
        """Sets the validity of this CreateHIdDemoAuthRequest.


        :param validity: The validity of this CreateHIdDemoAuthRequest.
        :type validity: str
        """

        self._validity = validity
