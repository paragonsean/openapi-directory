/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHidUpdateMobiletRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHidUpdateMobiletRequest::OAIHidUpdateMobiletRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHidUpdateMobiletRequest::OAIHidUpdateMobiletRequest() {
    this->initializeModel();
}

OAIHidUpdateMobiletRequest::~OAIHidUpdateMobiletRequest() {}

void OAIHidUpdateMobiletRequest::initializeModel() {

    m_health_id_number_isSet = false;
    m_health_id_number_isValid = false;

    m_mobile_isSet = false;
    m_mobile_isValid = false;
}

void OAIHidUpdateMobiletRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHidUpdateMobiletRequest::fromJsonObject(QJsonObject json) {

    m_health_id_number_isValid = ::OpenAPI::fromJsonValue(m_health_id_number, json[QString("healthIdNumber")]);
    m_health_id_number_isSet = !json[QString("healthIdNumber")].isNull() && m_health_id_number_isValid;

    m_mobile_isValid = ::OpenAPI::fromJsonValue(m_mobile, json[QString("mobile")]);
    m_mobile_isSet = !json[QString("mobile")].isNull() && m_mobile_isValid;
}

QString OAIHidUpdateMobiletRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHidUpdateMobiletRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_health_id_number_isSet) {
        obj.insert(QString("healthIdNumber"), ::OpenAPI::toJsonValue(m_health_id_number));
    }
    if (m_mobile_isSet) {
        obj.insert(QString("mobile"), ::OpenAPI::toJsonValue(m_mobile));
    }
    return obj;
}

QString OAIHidUpdateMobiletRequest::getHealthIdNumber() const {
    return m_health_id_number;
}
void OAIHidUpdateMobiletRequest::setHealthIdNumber(const QString &health_id_number) {
    m_health_id_number = health_id_number;
    m_health_id_number_isSet = true;
}

bool OAIHidUpdateMobiletRequest::is_health_id_number_Set() const{
    return m_health_id_number_isSet;
}

bool OAIHidUpdateMobiletRequest::is_health_id_number_Valid() const{
    return m_health_id_number_isValid;
}

QString OAIHidUpdateMobiletRequest::getMobile() const {
    return m_mobile;
}
void OAIHidUpdateMobiletRequest::setMobile(const QString &mobile) {
    m_mobile = mobile;
    m_mobile_isSet = true;
}

bool OAIHidUpdateMobiletRequest::is_mobile_Set() const{
    return m_mobile_isSet;
}

bool OAIHidUpdateMobiletRequest::is_mobile_Valid() const{
    return m_mobile_isValid;
}

bool OAIHidUpdateMobiletRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_health_id_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHidUpdateMobiletRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
