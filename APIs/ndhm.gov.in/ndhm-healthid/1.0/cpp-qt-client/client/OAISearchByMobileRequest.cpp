/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchByMobileRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchByMobileRequest::OAISearchByMobileRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchByMobileRequest::OAISearchByMobileRequest() {
    this->initializeModel();
}

OAISearchByMobileRequest::~OAISearchByMobileRequest() {}

void OAISearchByMobileRequest::initializeModel() {

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_mobile_isSet = false;
    m_mobile_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_year_of_birth_isSet = false;
    m_year_of_birth_isValid = false;
}

void OAISearchByMobileRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchByMobileRequest::fromJsonObject(QJsonObject json) {

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_mobile_isValid = ::OpenAPI::fromJsonValue(m_mobile, json[QString("mobile")]);
    m_mobile_isSet = !json[QString("mobile")].isNull() && m_mobile_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_year_of_birth_isValid = ::OpenAPI::fromJsonValue(m_year_of_birth, json[QString("yearOfBirth")]);
    m_year_of_birth_isSet = !json[QString("yearOfBirth")].isNull() && m_year_of_birth_isValid;
}

QString OAISearchByMobileRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchByMobileRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_mobile_isSet) {
        obj.insert(QString("mobile"), ::OpenAPI::toJsonValue(m_mobile));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_year_of_birth_isSet) {
        obj.insert(QString("yearOfBirth"), ::OpenAPI::toJsonValue(m_year_of_birth));
    }
    return obj;
}

QString OAISearchByMobileRequest::getGender() const {
    return m_gender;
}
void OAISearchByMobileRequest::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAISearchByMobileRequest::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAISearchByMobileRequest::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAISearchByMobileRequest::getMobile() const {
    return m_mobile;
}
void OAISearchByMobileRequest::setMobile(const QString &mobile) {
    m_mobile = mobile;
    m_mobile_isSet = true;
}

bool OAISearchByMobileRequest::is_mobile_Set() const{
    return m_mobile_isSet;
}

bool OAISearchByMobileRequest::is_mobile_Valid() const{
    return m_mobile_isValid;
}

QString OAISearchByMobileRequest::getName() const {
    return m_name;
}
void OAISearchByMobileRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISearchByMobileRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAISearchByMobileRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISearchByMobileRequest::getYearOfBirth() const {
    return m_year_of_birth;
}
void OAISearchByMobileRequest::setYearOfBirth(const QString &year_of_birth) {
    m_year_of_birth = year_of_birth;
    m_year_of_birth_isSet = true;
}

bool OAISearchByMobileRequest::is_year_of_birth_Set() const{
    return m_year_of_birth_isSet;
}

bool OAISearchByMobileRequest::is_year_of_birth_Valid() const{
    return m_year_of_birth_isValid;
}

bool OAISearchByMobileRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchByMobileRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
