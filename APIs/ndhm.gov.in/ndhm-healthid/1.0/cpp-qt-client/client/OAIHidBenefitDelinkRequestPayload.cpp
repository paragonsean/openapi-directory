/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHidBenefitDelinkRequestPayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHidBenefitDelinkRequestPayload::OAIHidBenefitDelinkRequestPayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHidBenefitDelinkRequestPayload::OAIHidBenefitDelinkRequestPayload() {
    this->initializeModel();
}

OAIHidBenefitDelinkRequestPayload::~OAIHidBenefitDelinkRequestPayload() {}

void OAIHidBenefitDelinkRequestPayload::initializeModel() {

    m_benefit_name_isSet = false;
    m_benefit_name_isValid = false;

    m_uid_token_isSet = false;
    m_uid_token_isValid = false;
}

void OAIHidBenefitDelinkRequestPayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHidBenefitDelinkRequestPayload::fromJsonObject(QJsonObject json) {

    m_benefit_name_isValid = ::OpenAPI::fromJsonValue(m_benefit_name, json[QString("benefitName")]);
    m_benefit_name_isSet = !json[QString("benefitName")].isNull() && m_benefit_name_isValid;

    m_uid_token_isValid = ::OpenAPI::fromJsonValue(m_uid_token, json[QString("uidToken")]);
    m_uid_token_isSet = !json[QString("uidToken")].isNull() && m_uid_token_isValid;
}

QString OAIHidBenefitDelinkRequestPayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHidBenefitDelinkRequestPayload::asJsonObject() const {
    QJsonObject obj;
    if (m_benefit_name_isSet) {
        obj.insert(QString("benefitName"), ::OpenAPI::toJsonValue(m_benefit_name));
    }
    if (m_uid_token_isSet) {
        obj.insert(QString("uidToken"), ::OpenAPI::toJsonValue(m_uid_token));
    }
    return obj;
}

QString OAIHidBenefitDelinkRequestPayload::getBenefitName() const {
    return m_benefit_name;
}
void OAIHidBenefitDelinkRequestPayload::setBenefitName(const QString &benefit_name) {
    m_benefit_name = benefit_name;
    m_benefit_name_isSet = true;
}

bool OAIHidBenefitDelinkRequestPayload::is_benefit_name_Set() const{
    return m_benefit_name_isSet;
}

bool OAIHidBenefitDelinkRequestPayload::is_benefit_name_Valid() const{
    return m_benefit_name_isValid;
}

QString OAIHidBenefitDelinkRequestPayload::getUidToken() const {
    return m_uid_token;
}
void OAIHidBenefitDelinkRequestPayload::setUidToken(const QString &uid_token) {
    m_uid_token = uid_token;
    m_uid_token_isSet = true;
}

bool OAIHidBenefitDelinkRequestPayload::is_uid_token_Set() const{
    return m_uid_token_isSet;
}

bool OAIHidBenefitDelinkRequestPayload::is_uid_token_Valid() const{
    return m_uid_token_isValid;
}

bool OAIHidBenefitDelinkRequestPayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_benefit_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uid_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHidBenefitDelinkRequestPayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
