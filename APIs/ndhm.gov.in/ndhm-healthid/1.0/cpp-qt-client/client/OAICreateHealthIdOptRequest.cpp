/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateHealthIdOptRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateHealthIdOptRequest::OAICreateHealthIdOptRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateHealthIdOptRequest::OAICreateHealthIdOptRequest() {
    this->initializeModel();
}

OAICreateHealthIdOptRequest::~OAICreateHealthIdOptRequest() {}

void OAICreateHealthIdOptRequest::initializeModel() {

    m_auto_generated_benefit_id_isSet = false;
    m_auto_generated_benefit_id_isValid = false;

    m_benefit_id_isSet = false;
    m_benefit_id_isValid = false;

    m_benefit_name_isSet = false;
    m_benefit_name_isValid = false;

    m_consent_health_id_isSet = false;
    m_consent_health_id_isValid = false;

    m_mobile_number_isSet = false;
    m_mobile_number_isValid = false;

    m_otp_isSet = false;
    m_otp_isValid = false;

    m_txn_id_isSet = false;
    m_txn_id_isValid = false;

    m_validity_isSet = false;
    m_validity_isValid = false;
}

void OAICreateHealthIdOptRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateHealthIdOptRequest::fromJsonObject(QJsonObject json) {

    m_auto_generated_benefit_id_isValid = ::OpenAPI::fromJsonValue(m_auto_generated_benefit_id, json[QString("autoGeneratedBenefitId")]);
    m_auto_generated_benefit_id_isSet = !json[QString("autoGeneratedBenefitId")].isNull() && m_auto_generated_benefit_id_isValid;

    m_benefit_id_isValid = ::OpenAPI::fromJsonValue(m_benefit_id, json[QString("benefitId")]);
    m_benefit_id_isSet = !json[QString("benefitId")].isNull() && m_benefit_id_isValid;

    m_benefit_name_isValid = ::OpenAPI::fromJsonValue(m_benefit_name, json[QString("benefitName")]);
    m_benefit_name_isSet = !json[QString("benefitName")].isNull() && m_benefit_name_isValid;

    m_consent_health_id_isValid = ::OpenAPI::fromJsonValue(m_consent_health_id, json[QString("consentHealthId")]);
    m_consent_health_id_isSet = !json[QString("consentHealthId")].isNull() && m_consent_health_id_isValid;

    m_mobile_number_isValid = ::OpenAPI::fromJsonValue(m_mobile_number, json[QString("mobileNumber")]);
    m_mobile_number_isSet = !json[QString("mobileNumber")].isNull() && m_mobile_number_isValid;

    m_otp_isValid = ::OpenAPI::fromJsonValue(m_otp, json[QString("otp")]);
    m_otp_isSet = !json[QString("otp")].isNull() && m_otp_isValid;

    m_txn_id_isValid = ::OpenAPI::fromJsonValue(m_txn_id, json[QString("txnId")]);
    m_txn_id_isSet = !json[QString("txnId")].isNull() && m_txn_id_isValid;

    m_validity_isValid = ::OpenAPI::fromJsonValue(m_validity, json[QString("validity")]);
    m_validity_isSet = !json[QString("validity")].isNull() && m_validity_isValid;
}

QString OAICreateHealthIdOptRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateHealthIdOptRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_generated_benefit_id_isSet) {
        obj.insert(QString("autoGeneratedBenefitId"), ::OpenAPI::toJsonValue(m_auto_generated_benefit_id));
    }
    if (m_benefit_id_isSet) {
        obj.insert(QString("benefitId"), ::OpenAPI::toJsonValue(m_benefit_id));
    }
    if (m_benefit_name_isSet) {
        obj.insert(QString("benefitName"), ::OpenAPI::toJsonValue(m_benefit_name));
    }
    if (m_consent_health_id_isSet) {
        obj.insert(QString("consentHealthId"), ::OpenAPI::toJsonValue(m_consent_health_id));
    }
    if (m_mobile_number_isSet) {
        obj.insert(QString("mobileNumber"), ::OpenAPI::toJsonValue(m_mobile_number));
    }
    if (m_otp_isSet) {
        obj.insert(QString("otp"), ::OpenAPI::toJsonValue(m_otp));
    }
    if (m_txn_id_isSet) {
        obj.insert(QString("txnId"), ::OpenAPI::toJsonValue(m_txn_id));
    }
    if (m_validity_isSet) {
        obj.insert(QString("validity"), ::OpenAPI::toJsonValue(m_validity));
    }
    return obj;
}

bool OAICreateHealthIdOptRequest::isAutoGeneratedBenefitId() const {
    return m_auto_generated_benefit_id;
}
void OAICreateHealthIdOptRequest::setAutoGeneratedBenefitId(const bool &auto_generated_benefit_id) {
    m_auto_generated_benefit_id = auto_generated_benefit_id;
    m_auto_generated_benefit_id_isSet = true;
}

bool OAICreateHealthIdOptRequest::is_auto_generated_benefit_id_Set() const{
    return m_auto_generated_benefit_id_isSet;
}

bool OAICreateHealthIdOptRequest::is_auto_generated_benefit_id_Valid() const{
    return m_auto_generated_benefit_id_isValid;
}

QString OAICreateHealthIdOptRequest::getBenefitId() const {
    return m_benefit_id;
}
void OAICreateHealthIdOptRequest::setBenefitId(const QString &benefit_id) {
    m_benefit_id = benefit_id;
    m_benefit_id_isSet = true;
}

bool OAICreateHealthIdOptRequest::is_benefit_id_Set() const{
    return m_benefit_id_isSet;
}

bool OAICreateHealthIdOptRequest::is_benefit_id_Valid() const{
    return m_benefit_id_isValid;
}

QString OAICreateHealthIdOptRequest::getBenefitName() const {
    return m_benefit_name;
}
void OAICreateHealthIdOptRequest::setBenefitName(const QString &benefit_name) {
    m_benefit_name = benefit_name;
    m_benefit_name_isSet = true;
}

bool OAICreateHealthIdOptRequest::is_benefit_name_Set() const{
    return m_benefit_name_isSet;
}

bool OAICreateHealthIdOptRequest::is_benefit_name_Valid() const{
    return m_benefit_name_isValid;
}

bool OAICreateHealthIdOptRequest::isConsentHealthId() const {
    return m_consent_health_id;
}
void OAICreateHealthIdOptRequest::setConsentHealthId(const bool &consent_health_id) {
    m_consent_health_id = consent_health_id;
    m_consent_health_id_isSet = true;
}

bool OAICreateHealthIdOptRequest::is_consent_health_id_Set() const{
    return m_consent_health_id_isSet;
}

bool OAICreateHealthIdOptRequest::is_consent_health_id_Valid() const{
    return m_consent_health_id_isValid;
}

QString OAICreateHealthIdOptRequest::getMobileNumber() const {
    return m_mobile_number;
}
void OAICreateHealthIdOptRequest::setMobileNumber(const QString &mobile_number) {
    m_mobile_number = mobile_number;
    m_mobile_number_isSet = true;
}

bool OAICreateHealthIdOptRequest::is_mobile_number_Set() const{
    return m_mobile_number_isSet;
}

bool OAICreateHealthIdOptRequest::is_mobile_number_Valid() const{
    return m_mobile_number_isValid;
}

QString OAICreateHealthIdOptRequest::getOtp() const {
    return m_otp;
}
void OAICreateHealthIdOptRequest::setOtp(const QString &otp) {
    m_otp = otp;
    m_otp_isSet = true;
}

bool OAICreateHealthIdOptRequest::is_otp_Set() const{
    return m_otp_isSet;
}

bool OAICreateHealthIdOptRequest::is_otp_Valid() const{
    return m_otp_isValid;
}

QString OAICreateHealthIdOptRequest::getTxnId() const {
    return m_txn_id;
}
void OAICreateHealthIdOptRequest::setTxnId(const QString &txn_id) {
    m_txn_id = txn_id;
    m_txn_id_isSet = true;
}

bool OAICreateHealthIdOptRequest::is_txn_id_Set() const{
    return m_txn_id_isSet;
}

bool OAICreateHealthIdOptRequest::is_txn_id_Valid() const{
    return m_txn_id_isValid;
}

QString OAICreateHealthIdOptRequest::getValidity() const {
    return m_validity;
}
void OAICreateHealthIdOptRequest::setValidity(const QString &validity) {
    m_validity = validity;
    m_validity_isSet = true;
}

bool OAICreateHealthIdOptRequest::is_validity_Set() const{
    return m_validity_isSet;
}

bool OAICreateHealthIdOptRequest::is_validity_Valid() const{
    return m_validity_isValid;
}

bool OAICreateHealthIdOptRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_generated_benefit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_benefit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_benefit_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_consent_health_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateHealthIdOptRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
