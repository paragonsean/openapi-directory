/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHidBenefitLinkedResponsePayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHidBenefitLinkedResponsePayload::OAIHidBenefitLinkedResponsePayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHidBenefitLinkedResponsePayload::OAIHidBenefitLinkedResponsePayload() {
    this->initializeModel();
}

OAIHidBenefitLinkedResponsePayload::~OAIHidBenefitLinkedResponsePayload() {}

void OAIHidBenefitLinkedResponsePayload::initializeModel() {

    m_benefit_name_isSet = false;
    m_benefit_name_isValid = false;

    m_health_id_isSet = false;
    m_health_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIHidBenefitLinkedResponsePayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHidBenefitLinkedResponsePayload::fromJsonObject(QJsonObject json) {

    m_benefit_name_isValid = ::OpenAPI::fromJsonValue(m_benefit_name, json[QString("benefitName")]);
    m_benefit_name_isSet = !json[QString("benefitName")].isNull() && m_benefit_name_isValid;

    m_health_id_isValid = ::OpenAPI::fromJsonValue(m_health_id, json[QString("healthId")]);
    m_health_id_isSet = !json[QString("healthId")].isNull() && m_health_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIHidBenefitLinkedResponsePayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHidBenefitLinkedResponsePayload::asJsonObject() const {
    QJsonObject obj;
    if (m_benefit_name_isSet) {
        obj.insert(QString("benefitName"), ::OpenAPI::toJsonValue(m_benefit_name));
    }
    if (m_health_id_isSet) {
        obj.insert(QString("healthId"), ::OpenAPI::toJsonValue(m_health_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIHidBenefitLinkedResponsePayload::getBenefitName() const {
    return m_benefit_name;
}
void OAIHidBenefitLinkedResponsePayload::setBenefitName(const QString &benefit_name) {
    m_benefit_name = benefit_name;
    m_benefit_name_isSet = true;
}

bool OAIHidBenefitLinkedResponsePayload::is_benefit_name_Set() const{
    return m_benefit_name_isSet;
}

bool OAIHidBenefitLinkedResponsePayload::is_benefit_name_Valid() const{
    return m_benefit_name_isValid;
}

QString OAIHidBenefitLinkedResponsePayload::getHealthId() const {
    return m_health_id;
}
void OAIHidBenefitLinkedResponsePayload::setHealthId(const QString &health_id) {
    m_health_id = health_id;
    m_health_id_isSet = true;
}

bool OAIHidBenefitLinkedResponsePayload::is_health_id_Set() const{
    return m_health_id_isSet;
}

bool OAIHidBenefitLinkedResponsePayload::is_health_id_Valid() const{
    return m_health_id_isValid;
}

QString OAIHidBenefitLinkedResponsePayload::getStatus() const {
    return m_status;
}
void OAIHidBenefitLinkedResponsePayload::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIHidBenefitLinkedResponsePayload::is_status_Set() const{
    return m_status_isSet;
}

bool OAIHidBenefitLinkedResponsePayload::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIHidBenefitLinkedResponsePayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_benefit_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHidBenefitLinkedResponsePayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
