/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHidBenefitRequestPayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHidBenefitRequestPayload::OAIHidBenefitRequestPayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHidBenefitRequestPayload::OAIHidBenefitRequestPayload() {
    this->initializeModel();
}

OAIHidBenefitRequestPayload::~OAIHidBenefitRequestPayload() {}

void OAIHidBenefitRequestPayload::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_auth_methods_isSet = false;
    m_auth_methods_isValid = false;

    m_benefit_id_isSet = false;
    m_benefit_id_isValid = false;

    m_day_of_birth_isSet = false;
    m_day_of_birth_isValid = false;

    m_district_code_isSet = false;
    m_district_code_isValid = false;

    m_district_name_isSet = false;
    m_district_name_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_health_id_isSet = false;
    m_health_id_isValid = false;

    m_health_id_number_isSet = false;
    m_health_id_number_isValid = false;

    m_kyc_photo_isSet = false;
    m_kyc_photo_isValid = false;

    m_kyc_verified_isSet = false;
    m_kyc_verified_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_mobile_isSet = false;
    m_mobile_isValid = false;

    m_month_of_birth_isSet = false;
    m_month_of_birth_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_r_new_isSet = false;
    m_r_new_isValid = false;

    m_pincode_isSet = false;
    m_pincode_isValid = false;

    m_profile_photo_isSet = false;
    m_profile_photo_isValid = false;

    m_state_code_isSet = false;
    m_state_code_isValid = false;

    m_state_name_isSet = false;
    m_state_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_sub_district_code_isSet = false;
    m_sub_district_code_isValid = false;

    m_subdistrict_name_isSet = false;
    m_subdistrict_name_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;

    m_town_code_isSet = false;
    m_town_code_isValid = false;

    m_town_name_isSet = false;
    m_town_name_isValid = false;

    m_village_code_isSet = false;
    m_village_code_isValid = false;

    m_village_name_isSet = false;
    m_village_name_isValid = false;

    m_ward_code_isSet = false;
    m_ward_code_isValid = false;

    m_ward_name_isSet = false;
    m_ward_name_isValid = false;

    m_year_of_birth_isSet = false;
    m_year_of_birth_isValid = false;
}

void OAIHidBenefitRequestPayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHidBenefitRequestPayload::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_auth_methods_isValid = ::OpenAPI::fromJsonValue(m_auth_methods, json[QString("authMethods")]);
    m_auth_methods_isSet = !json[QString("authMethods")].isNull() && m_auth_methods_isValid;

    m_benefit_id_isValid = ::OpenAPI::fromJsonValue(m_benefit_id, json[QString("benefitId")]);
    m_benefit_id_isSet = !json[QString("benefitId")].isNull() && m_benefit_id_isValid;

    m_day_of_birth_isValid = ::OpenAPI::fromJsonValue(m_day_of_birth, json[QString("dayOfBirth")]);
    m_day_of_birth_isSet = !json[QString("dayOfBirth")].isNull() && m_day_of_birth_isValid;

    m_district_code_isValid = ::OpenAPI::fromJsonValue(m_district_code, json[QString("districtCode")]);
    m_district_code_isSet = !json[QString("districtCode")].isNull() && m_district_code_isValid;

    m_district_name_isValid = ::OpenAPI::fromJsonValue(m_district_name, json[QString("districtName")]);
    m_district_name_isSet = !json[QString("districtName")].isNull() && m_district_name_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_health_id_isValid = ::OpenAPI::fromJsonValue(m_health_id, json[QString("healthId")]);
    m_health_id_isSet = !json[QString("healthId")].isNull() && m_health_id_isValid;

    m_health_id_number_isValid = ::OpenAPI::fromJsonValue(m_health_id_number, json[QString("healthIdNumber")]);
    m_health_id_number_isSet = !json[QString("healthIdNumber")].isNull() && m_health_id_number_isValid;

    m_kyc_photo_isValid = ::OpenAPI::fromJsonValue(m_kyc_photo, json[QString("kycPhoto")]);
    m_kyc_photo_isSet = !json[QString("kycPhoto")].isNull() && m_kyc_photo_isValid;

    m_kyc_verified_isValid = ::OpenAPI::fromJsonValue(m_kyc_verified, json[QString("kycVerified")]);
    m_kyc_verified_isSet = !json[QString("kycVerified")].isNull() && m_kyc_verified_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middleName")]);
    m_middle_name_isSet = !json[QString("middleName")].isNull() && m_middle_name_isValid;

    m_mobile_isValid = ::OpenAPI::fromJsonValue(m_mobile, json[QString("mobile")]);
    m_mobile_isSet = !json[QString("mobile")].isNull() && m_mobile_isValid;

    m_month_of_birth_isValid = ::OpenAPI::fromJsonValue(m_month_of_birth, json[QString("monthOfBirth")]);
    m_month_of_birth_isSet = !json[QString("monthOfBirth")].isNull() && m_month_of_birth_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_r_new_isValid = ::OpenAPI::fromJsonValue(m_r_new, json[QString("new")]);
    m_r_new_isSet = !json[QString("new")].isNull() && m_r_new_isValid;

    m_pincode_isValid = ::OpenAPI::fromJsonValue(m_pincode, json[QString("pincode")]);
    m_pincode_isSet = !json[QString("pincode")].isNull() && m_pincode_isValid;

    m_profile_photo_isValid = ::OpenAPI::fromJsonValue(m_profile_photo, json[QString("profilePhoto")]);
    m_profile_photo_isSet = !json[QString("profilePhoto")].isNull() && m_profile_photo_isValid;

    m_state_code_isValid = ::OpenAPI::fromJsonValue(m_state_code, json[QString("stateCode")]);
    m_state_code_isSet = !json[QString("stateCode")].isNull() && m_state_code_isValid;

    m_state_name_isValid = ::OpenAPI::fromJsonValue(m_state_name, json[QString("stateName")]);
    m_state_name_isSet = !json[QString("stateName")].isNull() && m_state_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_sub_district_code_isValid = ::OpenAPI::fromJsonValue(m_sub_district_code, json[QString("subDistrictCode")]);
    m_sub_district_code_isSet = !json[QString("subDistrictCode")].isNull() && m_sub_district_code_isValid;

    m_subdistrict_name_isValid = ::OpenAPI::fromJsonValue(m_subdistrict_name, json[QString("subdistrictName")]);
    m_subdistrict_name_isSet = !json[QString("subdistrictName")].isNull() && m_subdistrict_name_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;

    m_town_code_isValid = ::OpenAPI::fromJsonValue(m_town_code, json[QString("townCode")]);
    m_town_code_isSet = !json[QString("townCode")].isNull() && m_town_code_isValid;

    m_town_name_isValid = ::OpenAPI::fromJsonValue(m_town_name, json[QString("townName")]);
    m_town_name_isSet = !json[QString("townName")].isNull() && m_town_name_isValid;

    m_village_code_isValid = ::OpenAPI::fromJsonValue(m_village_code, json[QString("villageCode")]);
    m_village_code_isSet = !json[QString("villageCode")].isNull() && m_village_code_isValid;

    m_village_name_isValid = ::OpenAPI::fromJsonValue(m_village_name, json[QString("villageName")]);
    m_village_name_isSet = !json[QString("villageName")].isNull() && m_village_name_isValid;

    m_ward_code_isValid = ::OpenAPI::fromJsonValue(m_ward_code, json[QString("wardCode")]);
    m_ward_code_isSet = !json[QString("wardCode")].isNull() && m_ward_code_isValid;

    m_ward_name_isValid = ::OpenAPI::fromJsonValue(m_ward_name, json[QString("wardName")]);
    m_ward_name_isSet = !json[QString("wardName")].isNull() && m_ward_name_isValid;

    m_year_of_birth_isValid = ::OpenAPI::fromJsonValue(m_year_of_birth, json[QString("yearOfBirth")]);
    m_year_of_birth_isSet = !json[QString("yearOfBirth")].isNull() && m_year_of_birth_isValid;
}

QString OAIHidBenefitRequestPayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHidBenefitRequestPayload::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_auth_methods.size() > 0) {
        obj.insert(QString("authMethods"), ::OpenAPI::toJsonValue(m_auth_methods));
    }
    if (m_benefit_id_isSet) {
        obj.insert(QString("benefitId"), ::OpenAPI::toJsonValue(m_benefit_id));
    }
    if (m_day_of_birth_isSet) {
        obj.insert(QString("dayOfBirth"), ::OpenAPI::toJsonValue(m_day_of_birth));
    }
    if (m_district_code_isSet) {
        obj.insert(QString("districtCode"), ::OpenAPI::toJsonValue(m_district_code));
    }
    if (m_district_name_isSet) {
        obj.insert(QString("districtName"), ::OpenAPI::toJsonValue(m_district_name));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_health_id_isSet) {
        obj.insert(QString("healthId"), ::OpenAPI::toJsonValue(m_health_id));
    }
    if (m_health_id_number_isSet) {
        obj.insert(QString("healthIdNumber"), ::OpenAPI::toJsonValue(m_health_id_number));
    }
    if (m_kyc_photo_isSet) {
        obj.insert(QString("kycPhoto"), ::OpenAPI::toJsonValue(m_kyc_photo));
    }
    if (m_kyc_verified_isSet) {
        obj.insert(QString("kycVerified"), ::OpenAPI::toJsonValue(m_kyc_verified));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_mobile_isSet) {
        obj.insert(QString("mobile"), ::OpenAPI::toJsonValue(m_mobile));
    }
    if (m_month_of_birth_isSet) {
        obj.insert(QString("monthOfBirth"), ::OpenAPI::toJsonValue(m_month_of_birth));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_r_new_isSet) {
        obj.insert(QString("new"), ::OpenAPI::toJsonValue(m_r_new));
    }
    if (m_pincode_isSet) {
        obj.insert(QString("pincode"), ::OpenAPI::toJsonValue(m_pincode));
    }
    if (m_profile_photo_isSet) {
        obj.insert(QString("profilePhoto"), ::OpenAPI::toJsonValue(m_profile_photo));
    }
    if (m_state_code_isSet) {
        obj.insert(QString("stateCode"), ::OpenAPI::toJsonValue(m_state_code));
    }
    if (m_state_name_isSet) {
        obj.insert(QString("stateName"), ::OpenAPI::toJsonValue(m_state_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_sub_district_code_isSet) {
        obj.insert(QString("subDistrictCode"), ::OpenAPI::toJsonValue(m_sub_district_code));
    }
    if (m_subdistrict_name_isSet) {
        obj.insert(QString("subdistrictName"), ::OpenAPI::toJsonValue(m_subdistrict_name));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    if (m_town_code_isSet) {
        obj.insert(QString("townCode"), ::OpenAPI::toJsonValue(m_town_code));
    }
    if (m_town_name_isSet) {
        obj.insert(QString("townName"), ::OpenAPI::toJsonValue(m_town_name));
    }
    if (m_village_code_isSet) {
        obj.insert(QString("villageCode"), ::OpenAPI::toJsonValue(m_village_code));
    }
    if (m_village_name_isSet) {
        obj.insert(QString("villageName"), ::OpenAPI::toJsonValue(m_village_name));
    }
    if (m_ward_code_isSet) {
        obj.insert(QString("wardCode"), ::OpenAPI::toJsonValue(m_ward_code));
    }
    if (m_ward_name_isSet) {
        obj.insert(QString("wardName"), ::OpenAPI::toJsonValue(m_ward_name));
    }
    if (m_year_of_birth_isSet) {
        obj.insert(QString("yearOfBirth"), ::OpenAPI::toJsonValue(m_year_of_birth));
    }
    return obj;
}

QString OAIHidBenefitRequestPayload::getAddress() const {
    return m_address;
}
void OAIHidBenefitRequestPayload::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_address_Set() const{
    return m_address_isSet;
}

bool OAIHidBenefitRequestPayload::is_address_Valid() const{
    return m_address_isValid;
}

QList<QString> OAIHidBenefitRequestPayload::getAuthMethods() const {
    return m_auth_methods;
}
void OAIHidBenefitRequestPayload::setAuthMethods(const QList<QString> &auth_methods) {
    m_auth_methods = auth_methods;
    m_auth_methods_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_auth_methods_Set() const{
    return m_auth_methods_isSet;
}

bool OAIHidBenefitRequestPayload::is_auth_methods_Valid() const{
    return m_auth_methods_isValid;
}

QString OAIHidBenefitRequestPayload::getBenefitId() const {
    return m_benefit_id;
}
void OAIHidBenefitRequestPayload::setBenefitId(const QString &benefit_id) {
    m_benefit_id = benefit_id;
    m_benefit_id_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_benefit_id_Set() const{
    return m_benefit_id_isSet;
}

bool OAIHidBenefitRequestPayload::is_benefit_id_Valid() const{
    return m_benefit_id_isValid;
}

QString OAIHidBenefitRequestPayload::getDayOfBirth() const {
    return m_day_of_birth;
}
void OAIHidBenefitRequestPayload::setDayOfBirth(const QString &day_of_birth) {
    m_day_of_birth = day_of_birth;
    m_day_of_birth_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_day_of_birth_Set() const{
    return m_day_of_birth_isSet;
}

bool OAIHidBenefitRequestPayload::is_day_of_birth_Valid() const{
    return m_day_of_birth_isValid;
}

QString OAIHidBenefitRequestPayload::getDistrictCode() const {
    return m_district_code;
}
void OAIHidBenefitRequestPayload::setDistrictCode(const QString &district_code) {
    m_district_code = district_code;
    m_district_code_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_district_code_Set() const{
    return m_district_code_isSet;
}

bool OAIHidBenefitRequestPayload::is_district_code_Valid() const{
    return m_district_code_isValid;
}

QString OAIHidBenefitRequestPayload::getDistrictName() const {
    return m_district_name;
}
void OAIHidBenefitRequestPayload::setDistrictName(const QString &district_name) {
    m_district_name = district_name;
    m_district_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_district_name_Set() const{
    return m_district_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_district_name_Valid() const{
    return m_district_name_isValid;
}

QString OAIHidBenefitRequestPayload::getEmail() const {
    return m_email;
}
void OAIHidBenefitRequestPayload::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_email_Set() const{
    return m_email_isSet;
}

bool OAIHidBenefitRequestPayload::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIHidBenefitRequestPayload::getFirstName() const {
    return m_first_name;
}
void OAIHidBenefitRequestPayload::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIHidBenefitRequestPayload::getGender() const {
    return m_gender;
}
void OAIHidBenefitRequestPayload::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIHidBenefitRequestPayload::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAIHidBenefitRequestPayload::getHealthId() const {
    return m_health_id;
}
void OAIHidBenefitRequestPayload::setHealthId(const QString &health_id) {
    m_health_id = health_id;
    m_health_id_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_health_id_Set() const{
    return m_health_id_isSet;
}

bool OAIHidBenefitRequestPayload::is_health_id_Valid() const{
    return m_health_id_isValid;
}

QString OAIHidBenefitRequestPayload::getHealthIdNumber() const {
    return m_health_id_number;
}
void OAIHidBenefitRequestPayload::setHealthIdNumber(const QString &health_id_number) {
    m_health_id_number = health_id_number;
    m_health_id_number_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_health_id_number_Set() const{
    return m_health_id_number_isSet;
}

bool OAIHidBenefitRequestPayload::is_health_id_number_Valid() const{
    return m_health_id_number_isValid;
}

QString OAIHidBenefitRequestPayload::getKycPhoto() const {
    return m_kyc_photo;
}
void OAIHidBenefitRequestPayload::setKycPhoto(const QString &kyc_photo) {
    m_kyc_photo = kyc_photo;
    m_kyc_photo_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_kyc_photo_Set() const{
    return m_kyc_photo_isSet;
}

bool OAIHidBenefitRequestPayload::is_kyc_photo_Valid() const{
    return m_kyc_photo_isValid;
}

bool OAIHidBenefitRequestPayload::isKycVerified() const {
    return m_kyc_verified;
}
void OAIHidBenefitRequestPayload::setKycVerified(const bool &kyc_verified) {
    m_kyc_verified = kyc_verified;
    m_kyc_verified_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_kyc_verified_Set() const{
    return m_kyc_verified_isSet;
}

bool OAIHidBenefitRequestPayload::is_kyc_verified_Valid() const{
    return m_kyc_verified_isValid;
}

QString OAIHidBenefitRequestPayload::getLastName() const {
    return m_last_name;
}
void OAIHidBenefitRequestPayload::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIHidBenefitRequestPayload::getMiddleName() const {
    return m_middle_name;
}
void OAIHidBenefitRequestPayload::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAIHidBenefitRequestPayload::getMobile() const {
    return m_mobile;
}
void OAIHidBenefitRequestPayload::setMobile(const QString &mobile) {
    m_mobile = mobile;
    m_mobile_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_mobile_Set() const{
    return m_mobile_isSet;
}

bool OAIHidBenefitRequestPayload::is_mobile_Valid() const{
    return m_mobile_isValid;
}

QString OAIHidBenefitRequestPayload::getMonthOfBirth() const {
    return m_month_of_birth;
}
void OAIHidBenefitRequestPayload::setMonthOfBirth(const QString &month_of_birth) {
    m_month_of_birth = month_of_birth;
    m_month_of_birth_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_month_of_birth_Set() const{
    return m_month_of_birth_isSet;
}

bool OAIHidBenefitRequestPayload::is_month_of_birth_Valid() const{
    return m_month_of_birth_isValid;
}

QString OAIHidBenefitRequestPayload::getName() const {
    return m_name;
}
void OAIHidBenefitRequestPayload::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_name_Set() const{
    return m_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIHidBenefitRequestPayload::isRNew() const {
    return m_r_new;
}
void OAIHidBenefitRequestPayload::setRNew(const bool &r_new) {
    m_r_new = r_new;
    m_r_new_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_r_new_Set() const{
    return m_r_new_isSet;
}

bool OAIHidBenefitRequestPayload::is_r_new_Valid() const{
    return m_r_new_isValid;
}

QString OAIHidBenefitRequestPayload::getPincode() const {
    return m_pincode;
}
void OAIHidBenefitRequestPayload::setPincode(const QString &pincode) {
    m_pincode = pincode;
    m_pincode_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_pincode_Set() const{
    return m_pincode_isSet;
}

bool OAIHidBenefitRequestPayload::is_pincode_Valid() const{
    return m_pincode_isValid;
}

QString OAIHidBenefitRequestPayload::getProfilePhoto() const {
    return m_profile_photo;
}
void OAIHidBenefitRequestPayload::setProfilePhoto(const QString &profile_photo) {
    m_profile_photo = profile_photo;
    m_profile_photo_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_profile_photo_Set() const{
    return m_profile_photo_isSet;
}

bool OAIHidBenefitRequestPayload::is_profile_photo_Valid() const{
    return m_profile_photo_isValid;
}

QString OAIHidBenefitRequestPayload::getStateCode() const {
    return m_state_code;
}
void OAIHidBenefitRequestPayload::setStateCode(const QString &state_code) {
    m_state_code = state_code;
    m_state_code_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_state_code_Set() const{
    return m_state_code_isSet;
}

bool OAIHidBenefitRequestPayload::is_state_code_Valid() const{
    return m_state_code_isValid;
}

QString OAIHidBenefitRequestPayload::getStateName() const {
    return m_state_name;
}
void OAIHidBenefitRequestPayload::setStateName(const QString &state_name) {
    m_state_name = state_name;
    m_state_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_state_name_Set() const{
    return m_state_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_state_name_Valid() const{
    return m_state_name_isValid;
}

QString OAIHidBenefitRequestPayload::getStatus() const {
    return m_status;
}
void OAIHidBenefitRequestPayload::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_status_Set() const{
    return m_status_isSet;
}

bool OAIHidBenefitRequestPayload::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIHidBenefitRequestPayload::getSubDistrictCode() const {
    return m_sub_district_code;
}
void OAIHidBenefitRequestPayload::setSubDistrictCode(const QString &sub_district_code) {
    m_sub_district_code = sub_district_code;
    m_sub_district_code_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_sub_district_code_Set() const{
    return m_sub_district_code_isSet;
}

bool OAIHidBenefitRequestPayload::is_sub_district_code_Valid() const{
    return m_sub_district_code_isValid;
}

QString OAIHidBenefitRequestPayload::getSubdistrictName() const {
    return m_subdistrict_name;
}
void OAIHidBenefitRequestPayload::setSubdistrictName(const QString &subdistrict_name) {
    m_subdistrict_name = subdistrict_name;
    m_subdistrict_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_subdistrict_name_Set() const{
    return m_subdistrict_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_subdistrict_name_Valid() const{
    return m_subdistrict_name_isValid;
}

QMap<QString, QString> OAIHidBenefitRequestPayload::getTags() const {
    return m_tags;
}
void OAIHidBenefitRequestPayload::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIHidBenefitRequestPayload::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIHidBenefitRequestPayload::getToken() const {
    return m_token;
}
void OAIHidBenefitRequestPayload::setToken(const QString &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_token_Set() const{
    return m_token_isSet;
}

bool OAIHidBenefitRequestPayload::is_token_Valid() const{
    return m_token_isValid;
}

QString OAIHidBenefitRequestPayload::getTownCode() const {
    return m_town_code;
}
void OAIHidBenefitRequestPayload::setTownCode(const QString &town_code) {
    m_town_code = town_code;
    m_town_code_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_town_code_Set() const{
    return m_town_code_isSet;
}

bool OAIHidBenefitRequestPayload::is_town_code_Valid() const{
    return m_town_code_isValid;
}

QString OAIHidBenefitRequestPayload::getTownName() const {
    return m_town_name;
}
void OAIHidBenefitRequestPayload::setTownName(const QString &town_name) {
    m_town_name = town_name;
    m_town_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_town_name_Set() const{
    return m_town_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_town_name_Valid() const{
    return m_town_name_isValid;
}

QString OAIHidBenefitRequestPayload::getVillageCode() const {
    return m_village_code;
}
void OAIHidBenefitRequestPayload::setVillageCode(const QString &village_code) {
    m_village_code = village_code;
    m_village_code_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_village_code_Set() const{
    return m_village_code_isSet;
}

bool OAIHidBenefitRequestPayload::is_village_code_Valid() const{
    return m_village_code_isValid;
}

QString OAIHidBenefitRequestPayload::getVillageName() const {
    return m_village_name;
}
void OAIHidBenefitRequestPayload::setVillageName(const QString &village_name) {
    m_village_name = village_name;
    m_village_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_village_name_Set() const{
    return m_village_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_village_name_Valid() const{
    return m_village_name_isValid;
}

QString OAIHidBenefitRequestPayload::getWardCode() const {
    return m_ward_code;
}
void OAIHidBenefitRequestPayload::setWardCode(const QString &ward_code) {
    m_ward_code = ward_code;
    m_ward_code_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_ward_code_Set() const{
    return m_ward_code_isSet;
}

bool OAIHidBenefitRequestPayload::is_ward_code_Valid() const{
    return m_ward_code_isValid;
}

QString OAIHidBenefitRequestPayload::getWardName() const {
    return m_ward_name;
}
void OAIHidBenefitRequestPayload::setWardName(const QString &ward_name) {
    m_ward_name = ward_name;
    m_ward_name_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_ward_name_Set() const{
    return m_ward_name_isSet;
}

bool OAIHidBenefitRequestPayload::is_ward_name_Valid() const{
    return m_ward_name_isValid;
}

QString OAIHidBenefitRequestPayload::getYearOfBirth() const {
    return m_year_of_birth;
}
void OAIHidBenefitRequestPayload::setYearOfBirth(const QString &year_of_birth) {
    m_year_of_birth = year_of_birth;
    m_year_of_birth_isSet = true;
}

bool OAIHidBenefitRequestPayload::is_year_of_birth_Set() const{
    return m_year_of_birth_isSet;
}

bool OAIHidBenefitRequestPayload::is_year_of_birth_Valid() const{
    return m_year_of_birth_isValid;
}

bool OAIHidBenefitRequestPayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auth_methods.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_benefit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_id_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kyc_photo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kyc_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_month_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_new_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pincode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_photo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_district_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subdistrict_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_town_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_town_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_village_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_village_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ward_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ward_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHidBenefitRequestPayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
