/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRetriveHealthIdMobilePayLoad.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRetriveHealthIdMobilePayLoad::OAIRetriveHealthIdMobilePayLoad(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRetriveHealthIdMobilePayLoad::OAIRetriveHealthIdMobilePayLoad() {
    this->initializeModel();
}

OAIRetriveHealthIdMobilePayLoad::~OAIRetriveHealthIdMobilePayLoad() {}

void OAIRetriveHealthIdMobilePayLoad::initializeModel() {

    m_day_of_birth_isSet = false;
    m_day_of_birth_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_month_of_birth_isSet = false;
    m_month_of_birth_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_otp_isSet = false;
    m_otp_isValid = false;

    m_txn_id_isSet = false;
    m_txn_id_isValid = false;

    m_year_of_birth_isSet = false;
    m_year_of_birth_isValid = false;
}

void OAIRetriveHealthIdMobilePayLoad::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRetriveHealthIdMobilePayLoad::fromJsonObject(QJsonObject json) {

    m_day_of_birth_isValid = ::OpenAPI::fromJsonValue(m_day_of_birth, json[QString("dayOfBirth")]);
    m_day_of_birth_isSet = !json[QString("dayOfBirth")].isNull() && m_day_of_birth_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middleName")]);
    m_middle_name_isSet = !json[QString("middleName")].isNull() && m_middle_name_isValid;

    m_month_of_birth_isValid = ::OpenAPI::fromJsonValue(m_month_of_birth, json[QString("monthOfBirth")]);
    m_month_of_birth_isSet = !json[QString("monthOfBirth")].isNull() && m_month_of_birth_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_otp_isValid = ::OpenAPI::fromJsonValue(m_otp, json[QString("otp")]);
    m_otp_isSet = !json[QString("otp")].isNull() && m_otp_isValid;

    m_txn_id_isValid = ::OpenAPI::fromJsonValue(m_txn_id, json[QString("txnId")]);
    m_txn_id_isSet = !json[QString("txnId")].isNull() && m_txn_id_isValid;

    m_year_of_birth_isValid = ::OpenAPI::fromJsonValue(m_year_of_birth, json[QString("yearOfBirth")]);
    m_year_of_birth_isSet = !json[QString("yearOfBirth")].isNull() && m_year_of_birth_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRetriveHealthIdMobilePayLoad::asJsonObject() const {
    QJsonObject obj;
    if (m_day_of_birth_isSet) {
        obj.insert(QString("dayOfBirth"), ::OpenAPI::toJsonValue(m_day_of_birth));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_month_of_birth_isSet) {
        obj.insert(QString("monthOfBirth"), ::OpenAPI::toJsonValue(m_month_of_birth));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_otp_isSet) {
        obj.insert(QString("otp"), ::OpenAPI::toJsonValue(m_otp));
    }
    if (m_txn_id_isSet) {
        obj.insert(QString("txnId"), ::OpenAPI::toJsonValue(m_txn_id));
    }
    if (m_year_of_birth_isSet) {
        obj.insert(QString("yearOfBirth"), ::OpenAPI::toJsonValue(m_year_of_birth));
    }
    return obj;
}

QString OAIRetriveHealthIdMobilePayLoad::getDayOfBirth() const {
    return m_day_of_birth;
}
void OAIRetriveHealthIdMobilePayLoad::setDayOfBirth(const QString &day_of_birth) {
    m_day_of_birth = day_of_birth;
    m_day_of_birth_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_day_of_birth_Set() const{
    return m_day_of_birth_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_day_of_birth_Valid() const{
    return m_day_of_birth_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::getFirstName() const {
    return m_first_name;
}
void OAIRetriveHealthIdMobilePayLoad::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::getGender() const {
    return m_gender;
}
void OAIRetriveHealthIdMobilePayLoad::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::getLastName() const {
    return m_last_name;
}
void OAIRetriveHealthIdMobilePayLoad::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::getMiddleName() const {
    return m_middle_name;
}
void OAIRetriveHealthIdMobilePayLoad::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::getMonthOfBirth() const {
    return m_month_of_birth;
}
void OAIRetriveHealthIdMobilePayLoad::setMonthOfBirth(const QString &month_of_birth) {
    m_month_of_birth = month_of_birth;
    m_month_of_birth_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_month_of_birth_Set() const{
    return m_month_of_birth_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_month_of_birth_Valid() const{
    return m_month_of_birth_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::getName() const {
    return m_name;
}
void OAIRetriveHealthIdMobilePayLoad::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::getOtp() const {
    return m_otp;
}
void OAIRetriveHealthIdMobilePayLoad::setOtp(const QString &otp) {
    m_otp = otp;
    m_otp_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_otp_Set() const{
    return m_otp_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_otp_Valid() const{
    return m_otp_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::getTxnId() const {
    return m_txn_id;
}
void OAIRetriveHealthIdMobilePayLoad::setTxnId(const QString &txn_id) {
    m_txn_id = txn_id;
    m_txn_id_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_txn_id_Set() const{
    return m_txn_id_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_txn_id_Valid() const{
    return m_txn_id_isValid;
}

QString OAIRetriveHealthIdMobilePayLoad::getYearOfBirth() const {
    return m_year_of_birth;
}
void OAIRetriveHealthIdMobilePayLoad::setYearOfBirth(const QString &year_of_birth) {
    m_year_of_birth = year_of_birth;
    m_year_of_birth_isSet = true;
}

bool OAIRetriveHealthIdMobilePayLoad::is_year_of_birth_Set() const{
    return m_year_of_birth_isSet;
}

bool OAIRetriveHealthIdMobilePayLoad::is_year_of_birth_Valid() const{
    return m_year_of_birth_isValid;
}

bool OAIRetriveHealthIdMobilePayLoad::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_month_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_txn_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRetriveHealthIdMobilePayLoad::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_txn_id_isValid && true;
}

} // namespace OpenAPI
