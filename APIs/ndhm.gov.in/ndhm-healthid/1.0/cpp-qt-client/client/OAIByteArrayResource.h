/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIByteArrayResource.h
 *
 * 
 */

#ifndef OAIByteArrayResource_H
#define OAIByteArrayResource_H

#include <QJsonObject>

#include "OAIFile.h"
#include "OAIObject.h"
#include "OAIURL.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFile;
class OAIURL;

class OAIByteArrayResource : public OAIObject {
public:
    OAIByteArrayResource();
    OAIByteArrayResource(QString json);
    ~OAIByteArrayResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QByteArray getByteArray() const;
    void setByteArray(const QByteArray &byte_array);
    bool is_byte_array_Set() const;
    bool is_byte_array_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIFile getFile() const;
    void setFile(const OAIFile &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    QString getFilename() const;
    void setFilename(const QString &filename);
    bool is_filename_Set() const;
    bool is_filename_Valid() const;

    OAIObject getInputStream() const;
    void setInputStream(const OAIObject &input_stream);
    bool is_input_stream_Set() const;
    bool is_input_stream_Valid() const;

    bool isOpen() const;
    void setOpen(const bool &open);
    bool is_open_Set() const;
    bool is_open_Valid() const;

    bool isReadable() const;
    void setReadable(const bool &readable);
    bool is_readable_Set() const;
    bool is_readable_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    OAIURL getUrl() const;
    void setUrl(const OAIURL &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QByteArray m_byte_array;
    bool m_byte_array_isSet;
    bool m_byte_array_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIFile m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    QString m_filename;
    bool m_filename_isSet;
    bool m_filename_isValid;

    OAIObject m_input_stream;
    bool m_input_stream_isSet;
    bool m_input_stream_isValid;

    bool m_open;
    bool m_open_isSet;
    bool m_open_isValid;

    bool m_readable;
    bool m_readable_isSet;
    bool m_readable_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    OAIURL m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIByteArrayResource)

#endif // OAIByteArrayResource_H
