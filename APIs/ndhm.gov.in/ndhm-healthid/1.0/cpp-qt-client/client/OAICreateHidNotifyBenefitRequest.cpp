/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateHidNotifyBenefitRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateHidNotifyBenefitRequest::OAICreateHidNotifyBenefitRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateHidNotifyBenefitRequest::OAICreateHidNotifyBenefitRequest() {
    this->initializeModel();
}

OAICreateHidNotifyBenefitRequest::~OAICreateHidNotifyBenefitRequest() {}

void OAICreateHidNotifyBenefitRequest::initializeModel() {

    m_aadhar_number_or_uid_token_isSet = false;
    m_aadhar_number_or_uid_token_isValid = false;

    m_auto_generated_benefit_id_isSet = false;
    m_auto_generated_benefit_id_isValid = false;

    m_benefit_id_isSet = false;
    m_benefit_id_isValid = false;

    m_benefit_name_isSet = false;
    m_benefit_name_isValid = false;

    m_consent_health_id_isSet = false;
    m_consent_health_id_isValid = false;

    m_date_of_birth_isSet = false;
    m_date_of_birth_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_mobile_number_isSet = false;
    m_mobile_number_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_state_code_isSet = false;
    m_state_code_isValid = false;

    m_validity_isSet = false;
    m_validity_isValid = false;
}

void OAICreateHidNotifyBenefitRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateHidNotifyBenefitRequest::fromJsonObject(QJsonObject json) {

    m_aadhar_number_or_uid_token_isValid = ::OpenAPI::fromJsonValue(m_aadhar_number_or_uid_token, json[QString("aadharNumberOrUidToken")]);
    m_aadhar_number_or_uid_token_isSet = !json[QString("aadharNumberOrUidToken")].isNull() && m_aadhar_number_or_uid_token_isValid;

    m_auto_generated_benefit_id_isValid = ::OpenAPI::fromJsonValue(m_auto_generated_benefit_id, json[QString("autoGeneratedBenefitId")]);
    m_auto_generated_benefit_id_isSet = !json[QString("autoGeneratedBenefitId")].isNull() && m_auto_generated_benefit_id_isValid;

    m_benefit_id_isValid = ::OpenAPI::fromJsonValue(m_benefit_id, json[QString("benefitId")]);
    m_benefit_id_isSet = !json[QString("benefitId")].isNull() && m_benefit_id_isValid;

    m_benefit_name_isValid = ::OpenAPI::fromJsonValue(m_benefit_name, json[QString("benefitName")]);
    m_benefit_name_isSet = !json[QString("benefitName")].isNull() && m_benefit_name_isValid;

    m_consent_health_id_isValid = ::OpenAPI::fromJsonValue(m_consent_health_id, json[QString("consentHealthId")]);
    m_consent_health_id_isSet = !json[QString("consentHealthId")].isNull() && m_consent_health_id_isValid;

    m_date_of_birth_isValid = ::OpenAPI::fromJsonValue(m_date_of_birth, json[QString("dateOfBirth")]);
    m_date_of_birth_isSet = !json[QString("dateOfBirth")].isNull() && m_date_of_birth_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_mobile_number_isValid = ::OpenAPI::fromJsonValue(m_mobile_number, json[QString("mobileNumber")]);
    m_mobile_number_isSet = !json[QString("mobileNumber")].isNull() && m_mobile_number_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_state_code_isValid = ::OpenAPI::fromJsonValue(m_state_code, json[QString("stateCode")]);
    m_state_code_isSet = !json[QString("stateCode")].isNull() && m_state_code_isValid;

    m_validity_isValid = ::OpenAPI::fromJsonValue(m_validity, json[QString("validity")]);
    m_validity_isSet = !json[QString("validity")].isNull() && m_validity_isValid;
}

QString OAICreateHidNotifyBenefitRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateHidNotifyBenefitRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_aadhar_number_or_uid_token_isSet) {
        obj.insert(QString("aadharNumberOrUidToken"), ::OpenAPI::toJsonValue(m_aadhar_number_or_uid_token));
    }
    if (m_auto_generated_benefit_id_isSet) {
        obj.insert(QString("autoGeneratedBenefitId"), ::OpenAPI::toJsonValue(m_auto_generated_benefit_id));
    }
    if (m_benefit_id_isSet) {
        obj.insert(QString("benefitId"), ::OpenAPI::toJsonValue(m_benefit_id));
    }
    if (m_benefit_name_isSet) {
        obj.insert(QString("benefitName"), ::OpenAPI::toJsonValue(m_benefit_name));
    }
    if (m_consent_health_id_isSet) {
        obj.insert(QString("consentHealthId"), ::OpenAPI::toJsonValue(m_consent_health_id));
    }
    if (m_date_of_birth_isSet) {
        obj.insert(QString("dateOfBirth"), ::OpenAPI::toJsonValue(m_date_of_birth));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_mobile_number_isSet) {
        obj.insert(QString("mobileNumber"), ::OpenAPI::toJsonValue(m_mobile_number));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_state_code_isSet) {
        obj.insert(QString("stateCode"), ::OpenAPI::toJsonValue(m_state_code));
    }
    if (m_validity_isSet) {
        obj.insert(QString("validity"), ::OpenAPI::toJsonValue(m_validity));
    }
    return obj;
}

QString OAICreateHidNotifyBenefitRequest::getAadharNumberOrUidToken() const {
    return m_aadhar_number_or_uid_token;
}
void OAICreateHidNotifyBenefitRequest::setAadharNumberOrUidToken(const QString &aadhar_number_or_uid_token) {
    m_aadhar_number_or_uid_token = aadhar_number_or_uid_token;
    m_aadhar_number_or_uid_token_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_aadhar_number_or_uid_token_Set() const{
    return m_aadhar_number_or_uid_token_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_aadhar_number_or_uid_token_Valid() const{
    return m_aadhar_number_or_uid_token_isValid;
}

bool OAICreateHidNotifyBenefitRequest::isAutoGeneratedBenefitId() const {
    return m_auto_generated_benefit_id;
}
void OAICreateHidNotifyBenefitRequest::setAutoGeneratedBenefitId(const bool &auto_generated_benefit_id) {
    m_auto_generated_benefit_id = auto_generated_benefit_id;
    m_auto_generated_benefit_id_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_auto_generated_benefit_id_Set() const{
    return m_auto_generated_benefit_id_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_auto_generated_benefit_id_Valid() const{
    return m_auto_generated_benefit_id_isValid;
}

QString OAICreateHidNotifyBenefitRequest::getBenefitId() const {
    return m_benefit_id;
}
void OAICreateHidNotifyBenefitRequest::setBenefitId(const QString &benefit_id) {
    m_benefit_id = benefit_id;
    m_benefit_id_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_benefit_id_Set() const{
    return m_benefit_id_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_benefit_id_Valid() const{
    return m_benefit_id_isValid;
}

QString OAICreateHidNotifyBenefitRequest::getBenefitName() const {
    return m_benefit_name;
}
void OAICreateHidNotifyBenefitRequest::setBenefitName(const QString &benefit_name) {
    m_benefit_name = benefit_name;
    m_benefit_name_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_benefit_name_Set() const{
    return m_benefit_name_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_benefit_name_Valid() const{
    return m_benefit_name_isValid;
}

bool OAICreateHidNotifyBenefitRequest::isConsentHealthId() const {
    return m_consent_health_id;
}
void OAICreateHidNotifyBenefitRequest::setConsentHealthId(const bool &consent_health_id) {
    m_consent_health_id = consent_health_id;
    m_consent_health_id_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_consent_health_id_Set() const{
    return m_consent_health_id_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_consent_health_id_Valid() const{
    return m_consent_health_id_isValid;
}

QString OAICreateHidNotifyBenefitRequest::getDateOfBirth() const {
    return m_date_of_birth;
}
void OAICreateHidNotifyBenefitRequest::setDateOfBirth(const QString &date_of_birth) {
    m_date_of_birth = date_of_birth;
    m_date_of_birth_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_date_of_birth_Set() const{
    return m_date_of_birth_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_date_of_birth_Valid() const{
    return m_date_of_birth_isValid;
}

QString OAICreateHidNotifyBenefitRequest::getGender() const {
    return m_gender;
}
void OAICreateHidNotifyBenefitRequest::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAICreateHidNotifyBenefitRequest::getMobileNumber() const {
    return m_mobile_number;
}
void OAICreateHidNotifyBenefitRequest::setMobileNumber(const QString &mobile_number) {
    m_mobile_number = mobile_number;
    m_mobile_number_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_mobile_number_Set() const{
    return m_mobile_number_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_mobile_number_Valid() const{
    return m_mobile_number_isValid;
}

QString OAICreateHidNotifyBenefitRequest::getName() const {
    return m_name;
}
void OAICreateHidNotifyBenefitRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreateHidNotifyBenefitRequest::getStateCode() const {
    return m_state_code;
}
void OAICreateHidNotifyBenefitRequest::setStateCode(const QString &state_code) {
    m_state_code = state_code;
    m_state_code_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_state_code_Set() const{
    return m_state_code_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_state_code_Valid() const{
    return m_state_code_isValid;
}

QString OAICreateHidNotifyBenefitRequest::getValidity() const {
    return m_validity;
}
void OAICreateHidNotifyBenefitRequest::setValidity(const QString &validity) {
    m_validity = validity;
    m_validity_isSet = true;
}

bool OAICreateHidNotifyBenefitRequest::is_validity_Set() const{
    return m_validity_isSet;
}

bool OAICreateHidNotifyBenefitRequest::is_validity_Valid() const{
    return m_validity_isValid;
}

bool OAICreateHidNotifyBenefitRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aadhar_number_or_uid_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_generated_benefit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_benefit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_benefit_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_consent_health_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateHidNotifyBenefitRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
