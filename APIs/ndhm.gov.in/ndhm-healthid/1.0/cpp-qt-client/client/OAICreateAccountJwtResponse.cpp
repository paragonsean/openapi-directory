/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAccountJwtResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAccountJwtResponse::OAICreateAccountJwtResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAccountJwtResponse::OAICreateAccountJwtResponse() {
    this->initializeModel();
}

OAICreateAccountJwtResponse::~OAICreateAccountJwtResponse() {}

void OAICreateAccountJwtResponse::initializeModel() {

    m_auth_methods_isSet = false;
    m_auth_methods_isValid = false;

    m_day_of_birth_isSet = false;
    m_day_of_birth_isValid = false;

    m_district_code_isSet = false;
    m_district_code_isValid = false;

    m_district_name_isSet = false;
    m_district_name_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_health_id_isSet = false;
    m_health_id_isValid = false;

    m_health_id_number_isSet = false;
    m_health_id_number_isValid = false;

    m_kyc_photo_isSet = false;
    m_kyc_photo_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_mobile_isSet = false;
    m_mobile_isValid = false;

    m_month_of_birth_isSet = false;
    m_month_of_birth_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_r_new_isSet = false;
    m_r_new_isValid = false;

    m_state_code_isSet = false;
    m_state_code_isValid = false;

    m_state_name_isSet = false;
    m_state_name_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;

    m_year_of_birth_isSet = false;
    m_year_of_birth_isValid = false;
}

void OAICreateAccountJwtResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAccountJwtResponse::fromJsonObject(QJsonObject json) {

    m_auth_methods_isValid = ::OpenAPI::fromJsonValue(m_auth_methods, json[QString("authMethods")]);
    m_auth_methods_isSet = !json[QString("authMethods")].isNull() && m_auth_methods_isValid;

    m_day_of_birth_isValid = ::OpenAPI::fromJsonValue(m_day_of_birth, json[QString("dayOfBirth")]);
    m_day_of_birth_isSet = !json[QString("dayOfBirth")].isNull() && m_day_of_birth_isValid;

    m_district_code_isValid = ::OpenAPI::fromJsonValue(m_district_code, json[QString("districtCode")]);
    m_district_code_isSet = !json[QString("districtCode")].isNull() && m_district_code_isValid;

    m_district_name_isValid = ::OpenAPI::fromJsonValue(m_district_name, json[QString("districtName")]);
    m_district_name_isSet = !json[QString("districtName")].isNull() && m_district_name_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_health_id_isValid = ::OpenAPI::fromJsonValue(m_health_id, json[QString("healthId")]);
    m_health_id_isSet = !json[QString("healthId")].isNull() && m_health_id_isValid;

    m_health_id_number_isValid = ::OpenAPI::fromJsonValue(m_health_id_number, json[QString("healthIdNumber")]);
    m_health_id_number_isSet = !json[QString("healthIdNumber")].isNull() && m_health_id_number_isValid;

    m_kyc_photo_isValid = ::OpenAPI::fromJsonValue(m_kyc_photo, json[QString("kycPhoto")]);
    m_kyc_photo_isSet = !json[QString("kycPhoto")].isNull() && m_kyc_photo_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middleName")]);
    m_middle_name_isSet = !json[QString("middleName")].isNull() && m_middle_name_isValid;

    m_mobile_isValid = ::OpenAPI::fromJsonValue(m_mobile, json[QString("mobile")]);
    m_mobile_isSet = !json[QString("mobile")].isNull() && m_mobile_isValid;

    m_month_of_birth_isValid = ::OpenAPI::fromJsonValue(m_month_of_birth, json[QString("monthOfBirth")]);
    m_month_of_birth_isSet = !json[QString("monthOfBirth")].isNull() && m_month_of_birth_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_r_new_isValid = ::OpenAPI::fromJsonValue(m_r_new, json[QString("new")]);
    m_r_new_isSet = !json[QString("new")].isNull() && m_r_new_isValid;

    m_state_code_isValid = ::OpenAPI::fromJsonValue(m_state_code, json[QString("stateCode")]);
    m_state_code_isSet = !json[QString("stateCode")].isNull() && m_state_code_isValid;

    m_state_name_isValid = ::OpenAPI::fromJsonValue(m_state_name, json[QString("stateName")]);
    m_state_name_isSet = !json[QString("stateName")].isNull() && m_state_name_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;

    m_year_of_birth_isValid = ::OpenAPI::fromJsonValue(m_year_of_birth, json[QString("yearOfBirth")]);
    m_year_of_birth_isSet = !json[QString("yearOfBirth")].isNull() && m_year_of_birth_isValid;
}

QString OAICreateAccountJwtResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAccountJwtResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_auth_methods.size() > 0) {
        obj.insert(QString("authMethods"), ::OpenAPI::toJsonValue(m_auth_methods));
    }
    if (m_day_of_birth_isSet) {
        obj.insert(QString("dayOfBirth"), ::OpenAPI::toJsonValue(m_day_of_birth));
    }
    if (m_district_code_isSet) {
        obj.insert(QString("districtCode"), ::OpenAPI::toJsonValue(m_district_code));
    }
    if (m_district_name_isSet) {
        obj.insert(QString("districtName"), ::OpenAPI::toJsonValue(m_district_name));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_health_id_isSet) {
        obj.insert(QString("healthId"), ::OpenAPI::toJsonValue(m_health_id));
    }
    if (m_health_id_number_isSet) {
        obj.insert(QString("healthIdNumber"), ::OpenAPI::toJsonValue(m_health_id_number));
    }
    if (m_kyc_photo_isSet) {
        obj.insert(QString("kycPhoto"), ::OpenAPI::toJsonValue(m_kyc_photo));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_mobile_isSet) {
        obj.insert(QString("mobile"), ::OpenAPI::toJsonValue(m_mobile));
    }
    if (m_month_of_birth_isSet) {
        obj.insert(QString("monthOfBirth"), ::OpenAPI::toJsonValue(m_month_of_birth));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_r_new_isSet) {
        obj.insert(QString("new"), ::OpenAPI::toJsonValue(m_r_new));
    }
    if (m_state_code_isSet) {
        obj.insert(QString("stateCode"), ::OpenAPI::toJsonValue(m_state_code));
    }
    if (m_state_name_isSet) {
        obj.insert(QString("stateName"), ::OpenAPI::toJsonValue(m_state_name));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    if (m_year_of_birth_isSet) {
        obj.insert(QString("yearOfBirth"), ::OpenAPI::toJsonValue(m_year_of_birth));
    }
    return obj;
}

QList<QString> OAICreateAccountJwtResponse::getAuthMethods() const {
    return m_auth_methods;
}
void OAICreateAccountJwtResponse::setAuthMethods(const QList<QString> &auth_methods) {
    m_auth_methods = auth_methods;
    m_auth_methods_isSet = true;
}

bool OAICreateAccountJwtResponse::is_auth_methods_Set() const{
    return m_auth_methods_isSet;
}

bool OAICreateAccountJwtResponse::is_auth_methods_Valid() const{
    return m_auth_methods_isValid;
}

QString OAICreateAccountJwtResponse::getDayOfBirth() const {
    return m_day_of_birth;
}
void OAICreateAccountJwtResponse::setDayOfBirth(const QString &day_of_birth) {
    m_day_of_birth = day_of_birth;
    m_day_of_birth_isSet = true;
}

bool OAICreateAccountJwtResponse::is_day_of_birth_Set() const{
    return m_day_of_birth_isSet;
}

bool OAICreateAccountJwtResponse::is_day_of_birth_Valid() const{
    return m_day_of_birth_isValid;
}

QString OAICreateAccountJwtResponse::getDistrictCode() const {
    return m_district_code;
}
void OAICreateAccountJwtResponse::setDistrictCode(const QString &district_code) {
    m_district_code = district_code;
    m_district_code_isSet = true;
}

bool OAICreateAccountJwtResponse::is_district_code_Set() const{
    return m_district_code_isSet;
}

bool OAICreateAccountJwtResponse::is_district_code_Valid() const{
    return m_district_code_isValid;
}

QString OAICreateAccountJwtResponse::getDistrictName() const {
    return m_district_name;
}
void OAICreateAccountJwtResponse::setDistrictName(const QString &district_name) {
    m_district_name = district_name;
    m_district_name_isSet = true;
}

bool OAICreateAccountJwtResponse::is_district_name_Set() const{
    return m_district_name_isSet;
}

bool OAICreateAccountJwtResponse::is_district_name_Valid() const{
    return m_district_name_isValid;
}

QString OAICreateAccountJwtResponse::getEmail() const {
    return m_email;
}
void OAICreateAccountJwtResponse::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAICreateAccountJwtResponse::is_email_Set() const{
    return m_email_isSet;
}

bool OAICreateAccountJwtResponse::is_email_Valid() const{
    return m_email_isValid;
}

QString OAICreateAccountJwtResponse::getFirstName() const {
    return m_first_name;
}
void OAICreateAccountJwtResponse::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAICreateAccountJwtResponse::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAICreateAccountJwtResponse::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAICreateAccountJwtResponse::getGender() const {
    return m_gender;
}
void OAICreateAccountJwtResponse::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAICreateAccountJwtResponse::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAICreateAccountJwtResponse::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAICreateAccountJwtResponse::getHealthId() const {
    return m_health_id;
}
void OAICreateAccountJwtResponse::setHealthId(const QString &health_id) {
    m_health_id = health_id;
    m_health_id_isSet = true;
}

bool OAICreateAccountJwtResponse::is_health_id_Set() const{
    return m_health_id_isSet;
}

bool OAICreateAccountJwtResponse::is_health_id_Valid() const{
    return m_health_id_isValid;
}

QString OAICreateAccountJwtResponse::getHealthIdNumber() const {
    return m_health_id_number;
}
void OAICreateAccountJwtResponse::setHealthIdNumber(const QString &health_id_number) {
    m_health_id_number = health_id_number;
    m_health_id_number_isSet = true;
}

bool OAICreateAccountJwtResponse::is_health_id_number_Set() const{
    return m_health_id_number_isSet;
}

bool OAICreateAccountJwtResponse::is_health_id_number_Valid() const{
    return m_health_id_number_isValid;
}

QString OAICreateAccountJwtResponse::getKycPhoto() const {
    return m_kyc_photo;
}
void OAICreateAccountJwtResponse::setKycPhoto(const QString &kyc_photo) {
    m_kyc_photo = kyc_photo;
    m_kyc_photo_isSet = true;
}

bool OAICreateAccountJwtResponse::is_kyc_photo_Set() const{
    return m_kyc_photo_isSet;
}

bool OAICreateAccountJwtResponse::is_kyc_photo_Valid() const{
    return m_kyc_photo_isValid;
}

QString OAICreateAccountJwtResponse::getLastName() const {
    return m_last_name;
}
void OAICreateAccountJwtResponse::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAICreateAccountJwtResponse::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAICreateAccountJwtResponse::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAICreateAccountJwtResponse::getMiddleName() const {
    return m_middle_name;
}
void OAICreateAccountJwtResponse::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAICreateAccountJwtResponse::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAICreateAccountJwtResponse::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAICreateAccountJwtResponse::getMobile() const {
    return m_mobile;
}
void OAICreateAccountJwtResponse::setMobile(const QString &mobile) {
    m_mobile = mobile;
    m_mobile_isSet = true;
}

bool OAICreateAccountJwtResponse::is_mobile_Set() const{
    return m_mobile_isSet;
}

bool OAICreateAccountJwtResponse::is_mobile_Valid() const{
    return m_mobile_isValid;
}

QString OAICreateAccountJwtResponse::getMonthOfBirth() const {
    return m_month_of_birth;
}
void OAICreateAccountJwtResponse::setMonthOfBirth(const QString &month_of_birth) {
    m_month_of_birth = month_of_birth;
    m_month_of_birth_isSet = true;
}

bool OAICreateAccountJwtResponse::is_month_of_birth_Set() const{
    return m_month_of_birth_isSet;
}

bool OAICreateAccountJwtResponse::is_month_of_birth_Valid() const{
    return m_month_of_birth_isValid;
}

QString OAICreateAccountJwtResponse::getName() const {
    return m_name;
}
void OAICreateAccountJwtResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateAccountJwtResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateAccountJwtResponse::is_name_Valid() const{
    return m_name_isValid;
}

bool OAICreateAccountJwtResponse::isRNew() const {
    return m_r_new;
}
void OAICreateAccountJwtResponse::setRNew(const bool &r_new) {
    m_r_new = r_new;
    m_r_new_isSet = true;
}

bool OAICreateAccountJwtResponse::is_r_new_Set() const{
    return m_r_new_isSet;
}

bool OAICreateAccountJwtResponse::is_r_new_Valid() const{
    return m_r_new_isValid;
}

QString OAICreateAccountJwtResponse::getStateCode() const {
    return m_state_code;
}
void OAICreateAccountJwtResponse::setStateCode(const QString &state_code) {
    m_state_code = state_code;
    m_state_code_isSet = true;
}

bool OAICreateAccountJwtResponse::is_state_code_Set() const{
    return m_state_code_isSet;
}

bool OAICreateAccountJwtResponse::is_state_code_Valid() const{
    return m_state_code_isValid;
}

QString OAICreateAccountJwtResponse::getStateName() const {
    return m_state_name;
}
void OAICreateAccountJwtResponse::setStateName(const QString &state_name) {
    m_state_name = state_name;
    m_state_name_isSet = true;
}

bool OAICreateAccountJwtResponse::is_state_name_Set() const{
    return m_state_name_isSet;
}

bool OAICreateAccountJwtResponse::is_state_name_Valid() const{
    return m_state_name_isValid;
}

QMap<QString, QString> OAICreateAccountJwtResponse::getTags() const {
    return m_tags;
}
void OAICreateAccountJwtResponse::setTags(const QMap<QString, QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAICreateAccountJwtResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAICreateAccountJwtResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAICreateAccountJwtResponse::getToken() const {
    return m_token;
}
void OAICreateAccountJwtResponse::setToken(const QString &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAICreateAccountJwtResponse::is_token_Set() const{
    return m_token_isSet;
}

bool OAICreateAccountJwtResponse::is_token_Valid() const{
    return m_token_isValid;
}

QString OAICreateAccountJwtResponse::getYearOfBirth() const {
    return m_year_of_birth;
}
void OAICreateAccountJwtResponse::setYearOfBirth(const QString &year_of_birth) {
    m_year_of_birth = year_of_birth;
    m_year_of_birth_isSet = true;
}

bool OAICreateAccountJwtResponse::is_year_of_birth_Set() const{
    return m_year_of_birth_isSet;
}

bool OAICreateAccountJwtResponse::is_year_of_birth_Valid() const{
    return m_year_of_birth_isValid;
}

bool OAICreateAccountJwtResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auth_methods.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_day_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_id_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kyc_photo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_month_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_new_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAccountJwtResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
