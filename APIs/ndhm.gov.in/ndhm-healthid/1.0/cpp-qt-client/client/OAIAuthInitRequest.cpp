/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthInitRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthInitRequest::OAIAuthInitRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthInitRequest::OAIAuthInitRequest() {
    this->initializeModel();
}

OAIAuthInitRequest::~OAIAuthInitRequest() {}

void OAIAuthInitRequest::initializeModel() {

    m_auth_method_isSet = false;
    m_auth_method_isValid = false;

    m_healthid_isSet = false;
    m_healthid_isValid = false;
}

void OAIAuthInitRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthInitRequest::fromJsonObject(QJsonObject json) {

    m_auth_method_isValid = ::OpenAPI::fromJsonValue(m_auth_method, json[QString("authMethod")]);
    m_auth_method_isSet = !json[QString("authMethod")].isNull() && m_auth_method_isValid;

    m_healthid_isValid = ::OpenAPI::fromJsonValue(m_healthid, json[QString("healthid")]);
    m_healthid_isSet = !json[QString("healthid")].isNull() && m_healthid_isValid;
}

QString OAIAuthInitRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthInitRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_auth_method_isSet) {
        obj.insert(QString("authMethod"), ::OpenAPI::toJsonValue(m_auth_method));
    }
    if (m_healthid_isSet) {
        obj.insert(QString("healthid"), ::OpenAPI::toJsonValue(m_healthid));
    }
    return obj;
}

QString OAIAuthInitRequest::getAuthMethod() const {
    return m_auth_method;
}
void OAIAuthInitRequest::setAuthMethod(const QString &auth_method) {
    m_auth_method = auth_method;
    m_auth_method_isSet = true;
}

bool OAIAuthInitRequest::is_auth_method_Set() const{
    return m_auth_method_isSet;
}

bool OAIAuthInitRequest::is_auth_method_Valid() const{
    return m_auth_method_isValid;
}

QString OAIAuthInitRequest::getHealthid() const {
    return m_healthid;
}
void OAIAuthInitRequest::setHealthid(const QString &healthid) {
    m_healthid = healthid;
    m_healthid_isSet = true;
}

bool OAIAuthInitRequest::is_healthid_Set() const{
    return m_healthid_isSet;
}

bool OAIAuthInitRequest::is_healthid_Valid() const{
    return m_healthid_isValid;
}

bool OAIAuthInitRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auth_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_healthid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthInitRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_auth_method_isValid && true;
}

} // namespace OpenAPI
