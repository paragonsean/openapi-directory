/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerifyAadhaarWithBio.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerifyAadhaarWithBio::OAIVerifyAadhaarWithBio(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerifyAadhaarWithBio::OAIVerifyAadhaarWithBio() {
    this->initializeModel();
}

OAIVerifyAadhaarWithBio::~OAIVerifyAadhaarWithBio() {}

void OAIVerifyAadhaarWithBio::initializeModel() {

    m_aadhaar_isSet = false;
    m_aadhaar_isValid = false;

    m_bio_type_isSet = false;
    m_bio_type_isValid = false;

    m_pid_isSet = false;
    m_pid_isValid = false;

    m_restrictions_isSet = false;
    m_restrictions_isValid = false;
}

void OAIVerifyAadhaarWithBio::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerifyAadhaarWithBio::fromJsonObject(QJsonObject json) {

    m_aadhaar_isValid = ::OpenAPI::fromJsonValue(m_aadhaar, json[QString("aadhaar")]);
    m_aadhaar_isSet = !json[QString("aadhaar")].isNull() && m_aadhaar_isValid;

    m_bio_type_isValid = ::OpenAPI::fromJsonValue(m_bio_type, json[QString("bioType")]);
    m_bio_type_isSet = !json[QString("bioType")].isNull() && m_bio_type_isValid;

    m_pid_isValid = ::OpenAPI::fromJsonValue(m_pid, json[QString("pid")]);
    m_pid_isSet = !json[QString("pid")].isNull() && m_pid_isValid;

    m_restrictions_isValid = ::OpenAPI::fromJsonValue(m_restrictions, json[QString("restrictions")]);
    m_restrictions_isSet = !json[QString("restrictions")].isNull() && m_restrictions_isValid;
}

QString OAIVerifyAadhaarWithBio::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerifyAadhaarWithBio::asJsonObject() const {
    QJsonObject obj;
    if (m_aadhaar_isSet) {
        obj.insert(QString("aadhaar"), ::OpenAPI::toJsonValue(m_aadhaar));
    }
    if (m_bio_type_isSet) {
        obj.insert(QString("bioType"), ::OpenAPI::toJsonValue(m_bio_type));
    }
    if (m_pid_isSet) {
        obj.insert(QString("pid"), ::OpenAPI::toJsonValue(m_pid));
    }
    if (m_restrictions_isSet) {
        obj.insert(QString("restrictions"), ::OpenAPI::toJsonValue(m_restrictions));
    }
    return obj;
}

QString OAIVerifyAadhaarWithBio::getAadhaar() const {
    return m_aadhaar;
}
void OAIVerifyAadhaarWithBio::setAadhaar(const QString &aadhaar) {
    m_aadhaar = aadhaar;
    m_aadhaar_isSet = true;
}

bool OAIVerifyAadhaarWithBio::is_aadhaar_Set() const{
    return m_aadhaar_isSet;
}

bool OAIVerifyAadhaarWithBio::is_aadhaar_Valid() const{
    return m_aadhaar_isValid;
}

QString OAIVerifyAadhaarWithBio::getBioType() const {
    return m_bio_type;
}
void OAIVerifyAadhaarWithBio::setBioType(const QString &bio_type) {
    m_bio_type = bio_type;
    m_bio_type_isSet = true;
}

bool OAIVerifyAadhaarWithBio::is_bio_type_Set() const{
    return m_bio_type_isSet;
}

bool OAIVerifyAadhaarWithBio::is_bio_type_Valid() const{
    return m_bio_type_isValid;
}

QString OAIVerifyAadhaarWithBio::getPid() const {
    return m_pid;
}
void OAIVerifyAadhaarWithBio::setPid(const QString &pid) {
    m_pid = pid;
    m_pid_isSet = true;
}

bool OAIVerifyAadhaarWithBio::is_pid_Set() const{
    return m_pid_isSet;
}

bool OAIVerifyAadhaarWithBio::is_pid_Valid() const{
    return m_pid_isValid;
}

QString OAIVerifyAadhaarWithBio::getRestrictions() const {
    return m_restrictions;
}
void OAIVerifyAadhaarWithBio::setRestrictions(const QString &restrictions) {
    m_restrictions = restrictions;
    m_restrictions_isSet = true;
}

bool OAIVerifyAadhaarWithBio::is_restrictions_Set() const{
    return m_restrictions_isSet;
}

bool OAIVerifyAadhaarWithBio::is_restrictions_Valid() const{
    return m_restrictions_isValid;
}

bool OAIVerifyAadhaarWithBio::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aadhaar_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bio_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restrictions_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerifyAadhaarWithBio::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
