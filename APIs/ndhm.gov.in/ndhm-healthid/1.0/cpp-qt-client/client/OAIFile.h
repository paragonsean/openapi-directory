/**
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFile.h
 *
 * 
 */

#ifndef OAIFile_H
#define OAIFile_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFile : public OAIObject {
public:
    OAIFile();
    OAIFile(QString json);
    ~OAIFile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAbsolute() const;
    void setAbsolute(const bool &absolute);
    bool is_absolute_Set() const;
    bool is_absolute_Valid() const;

    OAIFile getAbsoluteFile() const;
    void setAbsoluteFile(const OAIFile &absolute_file);
    bool is_absolute_file_Set() const;
    bool is_absolute_file_Valid() const;

    QString getAbsolutePath() const;
    void setAbsolutePath(const QString &absolute_path);
    bool is_absolute_path_Set() const;
    bool is_absolute_path_Valid() const;

    OAIFile getCanonicalFile() const;
    void setCanonicalFile(const OAIFile &canonical_file);
    bool is_canonical_file_Set() const;
    bool is_canonical_file_Valid() const;

    QString getCanonicalPath() const;
    void setCanonicalPath(const QString &canonical_path);
    bool is_canonical_path_Set() const;
    bool is_canonical_path_Valid() const;

    bool isDirectory() const;
    void setDirectory(const bool &directory);
    bool is_directory_Set() const;
    bool is_directory_Valid() const;

    bool isFile() const;
    void setFile(const bool &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    qint64 getFreeSpace() const;
    void setFreeSpace(const qint64 &free_space);
    bool is_free_space_Set() const;
    bool is_free_space_Valid() const;

    bool isHidden() const;
    void setHidden(const bool &hidden);
    bool is_hidden_Set() const;
    bool is_hidden_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParent() const;
    void setParent(const QString &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    OAIFile getParentFile() const;
    void setParentFile(const OAIFile &parent_file);
    bool is_parent_file_Set() const;
    bool is_parent_file_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    qint64 getTotalSpace() const;
    void setTotalSpace(const qint64 &total_space);
    bool is_total_space_Set() const;
    bool is_total_space_Valid() const;

    qint64 getUsableSpace() const;
    void setUsableSpace(const qint64 &usable_space);
    bool is_usable_space_Set() const;
    bool is_usable_space_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_absolute;
    bool m_absolute_isSet;
    bool m_absolute_isValid;

    OAIFile m_absolute_file;
    bool m_absolute_file_isSet;
    bool m_absolute_file_isValid;

    QString m_absolute_path;
    bool m_absolute_path_isSet;
    bool m_absolute_path_isValid;

    OAIFile m_canonical_file;
    bool m_canonical_file_isSet;
    bool m_canonical_file_isValid;

    QString m_canonical_path;
    bool m_canonical_path_isSet;
    bool m_canonical_path_isValid;

    bool m_directory;
    bool m_directory_isSet;
    bool m_directory_isValid;

    bool m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    qint64 m_free_space;
    bool m_free_space_isSet;
    bool m_free_space_isValid;

    bool m_hidden;
    bool m_hidden_isSet;
    bool m_hidden_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    OAIFile m_parent_file;
    bool m_parent_file_isSet;
    bool m_parent_file_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    qint64 m_total_space;
    bool m_total_space_isSet;
    bool m_total_space_isValid;

    qint64 m_usable_space;
    bool m_usable_space_isSet;
    bool m_usable_space_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFile)

#endif // OAIFile_H
