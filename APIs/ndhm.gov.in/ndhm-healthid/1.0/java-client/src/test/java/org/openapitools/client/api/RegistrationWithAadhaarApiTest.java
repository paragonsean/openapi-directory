/*
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AadharNumberRequestPayload;
import org.openapitools.client.model.AadharOtpGenerateRequestPayLoad;
import org.openapitools.client.model.CreateAccountJwtResponse;
import org.openapitools.client.model.CreateAccountWithAadhaarOtp;
import org.openapitools.client.model.CreateAccountWithPreVerifiedAadhaar;
import org.openapitools.client.model.GenerateMobileOTPForTxnRequest;
import org.openapitools.client.model.ResendOTPRequest;
import org.openapitools.client.model.TxnResponse;
import org.openapitools.client.model.VerifyAadhaarOtp;
import org.openapitools.client.model.VerifyAadhaarWithBio;
import org.openapitools.client.model.VerifyMobileRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegistrationWithAadhaarApi
 */
@Disabled
public class RegistrationWithAadhaarApiTest {

    private final RegistrationWithAadhaarApi api = new RegistrationWithAadhaarApi();

    /**
     * Create Health ID using pre-verified Aadhaar &amp; Mobile.
     *
     * Create Health ID using pre-verified Aadhaar &amp; Mobile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAadhaarAccountUsingPOSTTest() throws ApiException {
        CreateAccountWithPreVerifiedAadhaar accountRequest = null;
        String acceptLanguage = null;
        CreateAccountJwtResponse response = api.createAadhaarAccountUsingPOST(accountRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate Aadhaar OTP on registrered mobile number
     *
     * Generate Aadhaar OTP on registrered mobile number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateAadharOTPUsingPOSTTest() throws ApiException {
        AadharOtpGenerateRequestPayLoad generateOtpRequest = null;
        String acceptLanguage = null;
        TxnResponse response = api.generateAadharOTPUsingPOST(generateOtpRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate Mobile OTP for verification.
     *
     * Generate Mobile OTP to verify mobile number.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateMobileOTPForTxnUsingPOSTTest() throws ApiException {
        GenerateMobileOTPForTxnRequest request = null;
        String acceptLanguage = null;
        TxnResponse response = api.generateMobileOTPForTxnUsingPOST(request, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Search health id number using aadhar.
     *
     * Search health id number using aadhar.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHealthIdNumbersByAadharUsingPOSTTest() throws ApiException {
        AadharNumberRequestPayload aadharNumberRequestPayload = null;
        String acceptLanguage = null;
        List<Object> response = api.getHealthIdNumbersByAadharUsingPOST(aadharNumberRequestPayload, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Resend Aadhaar OTP on registrered mobile number to create Health ID.
     *
     * Resend Aadhar OTP on registrered mobile number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resendAadharOTPUsingPOSTTest() throws ApiException {
        ResendOTPRequest request = null;
        String acceptLanguage = null;
        CreateAccountJwtResponse response = api.resendAadharOTPUsingPOST(request, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Verify Aadhaar using biometrics.
     *
     * Verify Aadhaar using biometrics
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyAadharBioUsingPOSTTest() throws ApiException {
        VerifyAadhaarWithBio verifyAadharOtpRequest = null;
        String acceptLanguage = null;
        TxnResponse response = api.verifyAadharBioUsingPOST(verifyAadharOtpRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Verify Aadhaar OTP and continue for mobile verification.
     *
     * Verify Aadhaar OTP received on registrered mobile number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyAadharOTPOnlyUsingPOSTTest() throws ApiException {
        VerifyAadhaarOtp verifyAadhaarOtp = null;
        String acceptLanguage = null;
        TxnResponse response = api.verifyAadharOTPOnlyUsingPOST(verifyAadhaarOtp, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Verify Aadhaar OTP on registrered mobile number to create Health ID.
     *
     * Verify Aadhar OTP received on registrered mobile number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyAadharOTPUsingPOSTTest() throws ApiException {
        CreateAccountWithAadhaarOtp verifyAadharOtpRequest = null;
        String acceptLanguage = null;
        CreateAccountJwtResponse response = api.verifyAadharOTPUsingPOST(verifyAadharOtpRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Verify Mobile OTP in an existing transaction.
     *
     * Verify Mobile OTP in an existing transaction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyMobileOTPForTxnUsingPOSTTest() throws ApiException {
        VerifyMobileRequest request = null;
        String acceptLanguage = null;
        TxnResponse response = api.verifyMobileOTPForTxnUsingPOST(request, acceptLanguage);
        // TODO: test validations
    }

}
