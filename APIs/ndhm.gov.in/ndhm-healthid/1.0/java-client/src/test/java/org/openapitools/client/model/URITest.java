/*
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for URI
 */
public class URITest {
    private final URI model = new URI();

    /**
     * Model tests for URI
     */
    @Test
    public void testURI() {
        // TODO: test URI
    }

    /**
     * Test the property 'absolute'
     */
    @Test
    public void absoluteTest() {
        // TODO: test absolute
    }

    /**
     * Test the property 'authority'
     */
    @Test
    public void authorityTest() {
        // TODO: test authority
    }

    /**
     * Test the property 'fragment'
     */
    @Test
    public void fragmentTest() {
        // TODO: test fragment
    }

    /**
     * Test the property 'host'
     */
    @Test
    public void hostTest() {
        // TODO: test host
    }

    /**
     * Test the property 'opaque'
     */
    @Test
    public void opaqueTest() {
        // TODO: test opaque
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'query'
     */
    @Test
    public void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'rawAuthority'
     */
    @Test
    public void rawAuthorityTest() {
        // TODO: test rawAuthority
    }

    /**
     * Test the property 'rawFragment'
     */
    @Test
    public void rawFragmentTest() {
        // TODO: test rawFragment
    }

    /**
     * Test the property 'rawPath'
     */
    @Test
    public void rawPathTest() {
        // TODO: test rawPath
    }

    /**
     * Test the property 'rawQuery'
     */
    @Test
    public void rawQueryTest() {
        // TODO: test rawQuery
    }

    /**
     * Test the property 'rawSchemeSpecificPart'
     */
    @Test
    public void rawSchemeSpecificPartTest() {
        // TODO: test rawSchemeSpecificPart
    }

    /**
     * Test the property 'rawUserInfo'
     */
    @Test
    public void rawUserInfoTest() {
        // TODO: test rawUserInfo
    }

    /**
     * Test the property 'scheme'
     */
    @Test
    public void schemeTest() {
        // TODO: test scheme
    }

    /**
     * Test the property 'schemeSpecificPart'
     */
    @Test
    public void schemeSpecificPartTest() {
        // TODO: test schemeSpecificPart
    }

    /**
     * Test the property 'userInfo'
     */
    @Test
    public void userInfoTest() {
        // TODO: test userInfo
    }

}
