/*
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.SearchByHealthIdRequest;
import org.openapitools.client.model.SearchByMobileRequest;
import org.openapitools.client.model.SearchResponseSingle;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
@Disabled
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    /**
     * Search a user by Health ID Number.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchUserByAccountUsingPOSTTest() throws ApiException {
        SearchByHealthIdRequest searchRequest = null;
        String acceptLanguage = null;
        SearchResponseSingle response = api.searchUserByAccountUsingPOST(searchRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Search users with a mobile number.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchUserByMobileUsingPOSTTest() throws ApiException {
        SearchByMobileRequest searchRequest = null;
        String acceptLanguage = null;
        SearchResponseSingle response = api.searchUserByMobileUsingPOST(searchRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Search a user by Health IDs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchUserByUseridUsingPOSTTest() throws ApiException {
        SearchByHealthIdRequest searchDTO = null;
        String acceptLanguage = null;
        Object response = api.searchUserByUseridUsingPOST(searchDTO, acceptLanguage);
        // TODO: test validations
    }

}
