/*
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ModelFile
 */
public class ModelFileTest {
    private final ModelFile model = new ModelFile();

    /**
     * Model tests for ModelFile
     */
    @Test
    public void testModelFile() {
        // TODO: test ModelFile
    }

    /**
     * Test the property 'absolute'
     */
    @Test
    public void absoluteTest() {
        // TODO: test absolute
    }

    /**
     * Test the property 'absoluteFile'
     */
    @Test
    public void absoluteFileTest() {
        // TODO: test absoluteFile
    }

    /**
     * Test the property 'absolutePath'
     */
    @Test
    public void absolutePathTest() {
        // TODO: test absolutePath
    }

    /**
     * Test the property 'canonicalFile'
     */
    @Test
    public void canonicalFileTest() {
        // TODO: test canonicalFile
    }

    /**
     * Test the property 'canonicalPath'
     */
    @Test
    public void canonicalPathTest() {
        // TODO: test canonicalPath
    }

    /**
     * Test the property 'directory'
     */
    @Test
    public void directoryTest() {
        // TODO: test directory
    }

    /**
     * Test the property '_file'
     */
    @Test
    public void _fileTest() {
        // TODO: test _file
    }

    /**
     * Test the property 'freeSpace'
     */
    @Test
    public void freeSpaceTest() {
        // TODO: test freeSpace
    }

    /**
     * Test the property 'hidden'
     */
    @Test
    public void hiddenTest() {
        // TODO: test hidden
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'parent'
     */
    @Test
    public void parentTest() {
        // TODO: test parent
    }

    /**
     * Test the property 'parentFile'
     */
    @Test
    public void parentFileTest() {
        // TODO: test parentFile
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'totalSpace'
     */
    @Test
    public void totalSpaceTest() {
        // TODO: test totalSpace
    }

    /**
     * Test the property 'usableSpace'
     */
    @Test
    public void usableSpaceTest() {
        // TODO: test usableSpace
    }

}
