/*
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AadharOtpGenerateRequestPayLoad;
import org.openapitools.client.model.CreateAccountJwtResponse;
import org.openapitools.client.model.CreateAccountWithPreVerifiedAadhaar;
import org.openapitools.client.model.HealthFacilityAuthenticationRequest;
import org.openapitools.client.model.HealthFacilityChangedPasswordRequest;
import org.openapitools.client.model.HealthFacilityPasswordRequest;
import org.openapitools.client.model.TxnResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HealthFacilityApi
 */
@Disabled
public class HealthFacilityApiTest {

    private final HealthFacilityApi api = new HealthFacilityApi();

    /**
     * Generate token for heath facility id.
     *
     * Generate token for heath facility id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authenticateHealthFacilityUsingPOSTTest() throws ApiException {
        HealthFacilityAuthenticationRequest healthFacilityAuthenticationRequest = null;
        String acceptLanguage = null;
        String response = api.authenticateHealthFacilityUsingPOST(healthFacilityAuthenticationRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Change password for heath facility id.
     *
     * Change password for heath facility id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changePasswordUsingPOSTTest() throws ApiException {
        HealthFacilityChangedPasswordRequest healthFacilityPasswordRequest = null;
        String acceptLanguage = null;
        String response = api.changePasswordUsingPOST(healthFacilityPasswordRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate Health ID card SVG
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAadhaarAccountUsingPOST1Test() throws ApiException {
        CreateAccountWithPreVerifiedAadhaar accountRequest = null;
        String acceptLanguage = null;
        CreateAccountJwtResponse response = api.createAadhaarAccountUsingPOST1(accountRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate health hacility OTP on registrered mobile number
     *
     * Generate health facility OTP on registrered mobile number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateFacilityOTPUsingPOSTTest() throws ApiException {
        String xToken = null;
        AadharOtpGenerateRequestPayLoad generateOtpRequest = null;
        String acceptLanguage = null;
        TxnResponse response = api.generateFacilityOTPUsingPOST(xToken, generateOtpRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generates password for heath facility id.
     *
     * Generates password for heath facility id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generatePasswordUsingPOSTTest() throws ApiException {
        HealthFacilityPasswordRequest healthFacilityPasswordRequest = null;
        String acceptLanguage = null;
        String response = api.generatePasswordUsingPOST(healthFacilityPasswordRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * generateSvgCard
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateSvgCardUsingGET1Test() throws ApiException {
        String healthID = null;
        String xToken = null;
        String acceptLanguage = null;
        byte[] response = api.generateSvgCardUsingGET1(healthID, xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Reset password for heath facility id.
     *
     * Reset password for heath facility id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetPasswordUsingPOSTTest() throws ApiException {
        HealthFacilityPasswordRequest healthFacilityPasswordRequest = null;
        String acceptLanguage = null;
        String response = api.resetPasswordUsingPOST(healthFacilityPasswordRequest, acceptLanguage);
        // TODO: test validations
    }

}
