/*
 * Health ID Service
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue a Health ID to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HidChangePasswordRequestPayload;
import org.openapitools.client.model.HidOtpRequestPaylaod;
import org.openapitools.client.model.TxnResponse;
import org.openapitools.client.model.UpdateAccountRequest;
import org.openapitools.client.model.UserDTO;
import org.openapitools.client.model.ValidateTokenRequest;
import org.openapitools.client.model.VerifyAadhaarOtp;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProfileApi
 */
@Disabled
public class ProfileApiTest {

    private final ProfileApi api = new ProfileApi();

    /**
     * Change password via Aadhar for heath id.
     *
     * Change password via Aadhar for heath id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changePasswordViaAadharUsingPOSTTest() throws ApiException {
        String xToken = null;
        HidOtpRequestPaylaod hidOtpRequestPaylaod = null;
        String acceptLanguage = null;
        String response = api.changePasswordViaAadharUsingPOST(xToken, hidOtpRequestPaylaod, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Change password via mobile for heath id.
     *
     * Change password via mobile for heath id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changePasswordViaMobileUsingPOSTTest() throws ApiException {
        String xToken = null;
        HidOtpRequestPaylaod hidOtpRequestPaylaod = null;
        String acceptLanguage = null;
        String response = api.changePasswordViaMobileUsingPOST(xToken, hidOtpRequestPaylaod, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Change password via password for heath id.
     *
     * Change password via password for heath id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changePasswordViaUsingPOSTTest() throws ApiException {
        String xToken = null;
        HidChangePasswordRequestPayload healthFacilityPasswordRequest = null;
        String acceptLanguage = null;
        String response = api.changePasswordViaUsingPOST(xToken, healthFacilityPasswordRequest, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Delete account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccountUsingDELETETest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        Boolean response = api.deleteAccountUsingDELETE(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate Aadhaar OTP on registrered mobile number.
     *
     * Generate Aadhaar OTP on registrered mobile number.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateAadharOTPUsingGETTest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        String response = api.generateAadharOTPUsingGET(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate Health ID card in PDF format
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateCardUsingGETTest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        UserDTO response = api.generateCardUsingGET(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate Mobile OTP to start registration.
     *
     * Generate Mobile OTP to start registration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateMobileOTPUsingGETTest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        String response = api.generateMobileOTPUsingGET(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate Health ID card PNG
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generatePngCardUsingGETTest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        UserDTO response = api.generatePngCardUsingGET(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate Health ID card SVG
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateSvgCardUsingGETTest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        UserDTO response = api.generateSvgCardUsingGET(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Generate Aadhaar OTP on registrered for link account with aadhar number
     *
     * Generate Aadhaar OTP on registrered for link account with aadhar number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generatereKycAadharOTPUsingPOSTTest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        TxnResponse response = api.generatereKycAadharOTPUsingPOST(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Get account information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountInformationUsingGETTest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        UserDTO response = api.getAccountInformationUsingGET(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Get List of Benefits associated with HealthID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBenefitsUsingGETTest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        UserDTO response = api.getBenefitsUsingGET(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Get Quick Response code in PNG format for this account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQrCodeUsingGETTest() throws ApiException {
        String xToken = null;
        String acceptLanguage = null;
        byte[] response = api.getQrCodeUsingGET(xToken, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Update account information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountInformationUsingPOSTTest() throws ApiException {
        String xToken = null;
        UpdateAccountRequest request = null;
        String acceptLanguage = null;
        UserDTO response = api.updateAccountInformationUsingPOST(xToken, request, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Validate auth token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validateTokenUsingPOSTTest() throws ApiException {
        ValidateTokenRequest request = null;
        String acceptLanguage = null;
        Boolean response = api.validateTokenUsingPOST(request, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Verify Aadhaar OTP to complete KYC/re-KYC verification.
     *
     * Verify Aadhaar OTP to complete KYC/re-KYC verification
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyAadharOTPOnlyUsingPOST1Test() throws ApiException {
        String xToken = null;
        VerifyAadhaarOtp verifyAadhaarOtp = null;
        String acceptLanguage = null;
        Boolean response = api.verifyAadharOTPOnlyUsingPOST1(xToken, verifyAadhaarOtp, acceptLanguage);
        // TODO: test validations
    }

}
