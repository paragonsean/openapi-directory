/**
 * Health Repository Provider Specifications for HIU
 * The following are the specifications for the APIs to be implemented at the Health Repository end if an entity is only serving the role of a HIU. The specs are essentially duplicates from the Gateway and Bridge, but put together so as to make it clear to *HIUs* which set of APIs they should implement to participate in the network.     1. The APIs are organized by the flows - **identification**, **consent flow**, **data flow** and **monitoring**. They represent the APIs that are expected to be available at the HIU end by the Gateway.    2. For majority of the APIs, if Gateway has initiated a call, there are corresponding callback APIs on the Gateway. e.g for **_/consents/hiu/notify** API on HIU end, its expected that a corresponding callback API **_/consents/hiu/on-notify** on Gateway is called. Such APIs are organized under the **Gateway** label.    3. Gateway relevant APIs for HIUs are grouped under **Gateway** label. These include the APIs that HIPs are required to call on the Gateway. For example, to request a CM for consent, HIU would call **_/consent-requests/init** API on gateway.    4. **NOTE**, in some of the API documentations below, **X-HIP-ID** is mentioned in header (for example in /auth/on-init). These are the cases, when a particular API is applicable for both HIU and HIP (e.g an entity is playing the role of HRP representing both HIU and HIP). If you are only playing the role of HIP, then only X-HIU-ID header will be sent  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatientDemographicResponse.h
 *
 * 
 */

#ifndef OAIPatientDemographicResponse_H
#define OAIPatientDemographicResponse_H

#include <QJsonObject>

#include "OAIIdentifier.h"
#include "OAIPatientAddress.h"
#include "OAIPatientGender.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPatientAddress;
class OAIIdentifier;

class OAIPatientDemographicResponse : public OAIObject {
public:
    OAIPatientDemographicResponse();
    OAIPatientDemographicResponse(QString json);
    ~OAIPatientDemographicResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPatientAddress getAddress() const;
    void setAddress(const OAIPatientAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    OAIPatientGender getGender() const;
    void setGender(const OAIPatientGender &gender);
    bool is_gender_Set() const;
    bool is_gender_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIIdentifier> getIdentifiers() const;
    void setIdentifiers(const QList<OAIIdentifier> &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getYearOfBirth() const;
    void setYearOfBirth(const qint32 &year_of_birth);
    bool is_year_of_birth_Set() const;
    bool is_year_of_birth_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPatientAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    OAIPatientGender m_gender;
    bool m_gender_isSet;
    bool m_gender_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIIdentifier> m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_year_of_birth;
    bool m_year_of_birth_isSet;
    bool m_year_of_birth_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatientDemographicResponse)

#endif // OAIPatientDemographicResponse_H
