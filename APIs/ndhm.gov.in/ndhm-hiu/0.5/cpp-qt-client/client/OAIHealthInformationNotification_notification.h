/**
 * Health Repository Provider Specifications for HIU
 * The following are the specifications for the APIs to be implemented at the Health Repository end if an entity is only serving the role of a HIU. The specs are essentially duplicates from the Gateway and Bridge, but put together so as to make it clear to *HIUs* which set of APIs they should implement to participate in the network.     1. The APIs are organized by the flows - **identification**, **consent flow**, **data flow** and **monitoring**. They represent the APIs that are expected to be available at the HIU end by the Gateway.    2. For majority of the APIs, if Gateway has initiated a call, there are corresponding callback APIs on the Gateway. e.g for **_/consents/hiu/notify** API on HIU end, its expected that a corresponding callback API **_/consents/hiu/on-notify** on Gateway is called. Such APIs are organized under the **Gateway** label.    3. Gateway relevant APIs for HIUs are grouped under **Gateway** label. These include the APIs that HIPs are required to call on the Gateway. For example, to request a CM for consent, HIU would call **_/consent-requests/init** API on gateway.    4. **NOTE**, in some of the API documentations below, **X-HIP-ID** is mentioned in header (for example in /auth/on-init). These are the cases, when a particular API is applicable for both HIU and HIP (e.g an entity is playing the role of HRP representing both HIU and HIP). If you are only playing the role of HIP, then only X-HIU-ID header will be sent  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHealthInformationNotification_notification.h
 *
 * 
 */

#ifndef OAIHealthInformationNotification_notification_H
#define OAIHealthInformationNotification_notification_H

#include <QJsonObject>

#include "OAIHealthInformationNotification_notification_notifier.h"
#include "OAIHealthInformationNotification_notification_statusNotification.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHealthInformationNotification_notification_notifier;
class OAIHealthInformationNotification_notification_statusNotification;

class OAIHealthInformationNotification_notification : public OAIObject {
public:
    OAIHealthInformationNotification_notification();
    OAIHealthInformationNotification_notification(QString json);
    ~OAIHealthInformationNotification_notification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConsentId() const;
    void setConsentId(const QString &consent_id);
    bool is_consent_id_Set() const;
    bool is_consent_id_Valid() const;

    QDateTime getDoneAt() const;
    void setDoneAt(const QDateTime &done_at);
    bool is_done_at_Set() const;
    bool is_done_at_Valid() const;

    OAIHealthInformationNotification_notification_notifier getNotifier() const;
    void setNotifier(const OAIHealthInformationNotification_notification_notifier &notifier);
    bool is_notifier_Set() const;
    bool is_notifier_Valid() const;

    OAIHealthInformationNotification_notification_statusNotification getStatusNotification() const;
    void setStatusNotification(const OAIHealthInformationNotification_notification_statusNotification &status_notification);
    bool is_status_notification_Set() const;
    bool is_status_notification_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_consent_id;
    bool m_consent_id_isSet;
    bool m_consent_id_isValid;

    QDateTime m_done_at;
    bool m_done_at_isSet;
    bool m_done_at_isValid;

    OAIHealthInformationNotification_notification_notifier m_notifier;
    bool m_notifier_isSet;
    bool m_notifier_isValid;

    OAIHealthInformationNotification_notification_statusNotification m_status_notification;
    bool m_status_notification_isSet;
    bool m_status_notification_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHealthInformationNotification_notification)

#endif // OAIHealthInformationNotification_notification_H
