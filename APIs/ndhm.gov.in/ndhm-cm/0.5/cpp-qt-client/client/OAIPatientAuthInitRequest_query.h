/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatientAuthInitRequest_query.h
 *
 * 
 */

#ifndef OAIPatientAuthInitRequest_query_H
#define OAIPatientAuthInitRequest_query_H

#include <QJsonObject>

#include "OAIAuthenticationMode.h"
#include "OAIPatientAuthPurpose.h"
#include "OAIPatientAuthRequester.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPatientAuthRequester;

class OAIPatientAuthInitRequest_query : public OAIObject {
public:
    OAIPatientAuthInitRequest_query();
    OAIPatientAuthInitRequest_query(QString json);
    ~OAIPatientAuthInitRequest_query() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuthenticationMode getAuthMode() const;
    void setAuthMode(const OAIAuthenticationMode &auth_mode);
    bool is_auth_mode_Set() const;
    bool is_auth_mode_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIPatientAuthPurpose getPurpose() const;
    void setPurpose(const OAIPatientAuthPurpose &purpose);
    bool is_purpose_Set() const;
    bool is_purpose_Valid() const;

    OAIPatientAuthRequester getRequester() const;
    void setRequester(const OAIPatientAuthRequester &requester);
    bool is_requester_Set() const;
    bool is_requester_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuthenticationMode m_auth_mode;
    bool m_auth_mode_isSet;
    bool m_auth_mode_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIPatientAuthPurpose m_purpose;
    bool m_purpose_isSet;
    bool m_purpose_isValid;

    OAIPatientAuthRequester m_requester;
    bool m_requester_isSet;
    bool m_requester_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatientAuthInitRequest_query)

#endif // OAIPatientAuthInitRequest_query_H
