/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICareContextDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICareContextDefinition::OAICareContextDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICareContextDefinition::OAICareContextDefinition() {
    this->initializeModel();
}

OAICareContextDefinition::~OAICareContextDefinition() {}

void OAICareContextDefinition::initializeModel() {

    m_care_context_reference_isSet = false;
    m_care_context_reference_isValid = false;

    m_patient_reference_isSet = false;
    m_patient_reference_isValid = false;
}

void OAICareContextDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICareContextDefinition::fromJsonObject(QJsonObject json) {

    m_care_context_reference_isValid = ::OpenAPI::fromJsonValue(m_care_context_reference, json[QString("careContextReference")]);
    m_care_context_reference_isSet = !json[QString("careContextReference")].isNull() && m_care_context_reference_isValid;

    m_patient_reference_isValid = ::OpenAPI::fromJsonValue(m_patient_reference, json[QString("patientReference")]);
    m_patient_reference_isSet = !json[QString("patientReference")].isNull() && m_patient_reference_isValid;
}

QString OAICareContextDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICareContextDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_care_context_reference_isSet) {
        obj.insert(QString("careContextReference"), ::OpenAPI::toJsonValue(m_care_context_reference));
    }
    if (m_patient_reference_isSet) {
        obj.insert(QString("patientReference"), ::OpenAPI::toJsonValue(m_patient_reference));
    }
    return obj;
}

QString OAICareContextDefinition::getCareContextReference() const {
    return m_care_context_reference;
}
void OAICareContextDefinition::setCareContextReference(const QString &care_context_reference) {
    m_care_context_reference = care_context_reference;
    m_care_context_reference_isSet = true;
}

bool OAICareContextDefinition::is_care_context_reference_Set() const{
    return m_care_context_reference_isSet;
}

bool OAICareContextDefinition::is_care_context_reference_Valid() const{
    return m_care_context_reference_isValid;
}

QString OAICareContextDefinition::getPatientReference() const {
    return m_patient_reference;
}
void OAICareContextDefinition::setPatientReference(const QString &patient_reference) {
    m_patient_reference = patient_reference;
    m_patient_reference_isSet = true;
}

bool OAICareContextDefinition::is_patient_reference_Set() const{
    return m_patient_reference_isSet;
}

bool OAICareContextDefinition::is_patient_reference_Valid() const{
    return m_patient_reference_isValid;
}

bool OAICareContextDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_care_context_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_patient_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICareContextDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_care_context_reference_isValid && m_patient_reference_isValid && true;
}

} // namespace OpenAPI
