/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatientIdentificationRequest_query.h
 *
 * 
 */

#ifndef OAIPatientIdentificationRequest_query_H
#define OAIPatientIdentificationRequest_query_H

#include <QJsonObject>

#include "OAIHealthInformationNotification_notification_notifier.h"
#include "OAIPatientIdentificationRequest_query_patient.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPatientIdentificationRequest_query_patient;
class OAIHealthInformationNotification_notification_notifier;

class OAIPatientIdentificationRequest_query : public OAIObject {
public:
    OAIPatientIdentificationRequest_query();
    OAIPatientIdentificationRequest_query(QString json);
    ~OAIPatientIdentificationRequest_query() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPatientIdentificationRequest_query_patient getPatient() const;
    void setPatient(const OAIPatientIdentificationRequest_query_patient &patient);
    bool is_patient_Set() const;
    bool is_patient_Valid() const;

    OAIHealthInformationNotification_notification_notifier getRequester() const;
    void setRequester(const OAIHealthInformationNotification_notification_notifier &requester);
    bool is_requester_Set() const;
    bool is_requester_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPatientIdentificationRequest_query_patient m_patient;
    bool m_patient_isSet;
    bool m_patient_isValid;

    OAIHealthInformationNotification_notification_notifier m_requester;
    bool m_requester_isSet;
    bool m_requester_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatientIdentificationRequest_query)

#endif // OAIPatientIdentificationRequest_query_H
