/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatientAuthNotificationAcknowledgement.h
 *
 * 
 */

#ifndef OAIPatientAuthNotificationAcknowledgement_H
#define OAIPatientAuthNotificationAcknowledgement_H

#include <QJsonObject>

#include "OAIError.h"
#include "OAIPatientAuthNotificationAcknowledgement_acknowledgement.h"
#include "OAIRequestReference.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPatientAuthNotificationAcknowledgement_acknowledgement;
class OAIError;
class OAIRequestReference;

class OAIPatientAuthNotificationAcknowledgement : public OAIObject {
public:
    OAIPatientAuthNotificationAcknowledgement();
    OAIPatientAuthNotificationAcknowledgement(QString json);
    ~OAIPatientAuthNotificationAcknowledgement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPatientAuthNotificationAcknowledgement_acknowledgement getAcknowledgement() const;
    void setAcknowledgement(const OAIPatientAuthNotificationAcknowledgement_acknowledgement &acknowledgement);
    bool is_acknowledgement_Set() const;
    bool is_acknowledgement_Valid() const;

    OAIError getError() const;
    void setError(const OAIError &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    OAIRequestReference getResp() const;
    void setResp(const OAIRequestReference &resp);
    bool is_resp_Set() const;
    bool is_resp_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPatientAuthNotificationAcknowledgement_acknowledgement m_acknowledgement;
    bool m_acknowledgement_isSet;
    bool m_acknowledgement_isValid;

    OAIError m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    OAIRequestReference m_resp;
    bool m_resp_isSet;
    bool m_resp_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatientAuthNotificationAcknowledgement)

#endif // OAIPatientAuthNotificationAcknowledgement_H
