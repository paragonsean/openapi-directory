/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHIRequest_hiRequest.h
 *
 * 
 */

#ifndef OAIHIRequest_hiRequest_H
#define OAIHIRequest_hiRequest_H

#include <QJsonObject>

#include "OAIConsent.h"
#include "OAIDateRange.h"
#include "OAIKeyMaterial.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConsent;
class OAIDateRange;
class OAIKeyMaterial;

class OAIHIRequest_hiRequest : public OAIObject {
public:
    OAIHIRequest_hiRequest();
    OAIHIRequest_hiRequest(QString json);
    ~OAIHIRequest_hiRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConsent getConsent() const;
    void setConsent(const OAIConsent &consent);
    bool is_consent_Set() const;
    bool is_consent_Valid() const;

    QString getDataPushUrl() const;
    void setDataPushUrl(const QString &data_push_url);
    bool is_data_push_url_Set() const;
    bool is_data_push_url_Valid() const;

    OAIDateRange getDateRange() const;
    void setDateRange(const OAIDateRange &date_range);
    bool is_date_range_Set() const;
    bool is_date_range_Valid() const;

    OAIKeyMaterial getKeyMaterial() const;
    void setKeyMaterial(const OAIKeyMaterial &key_material);
    bool is_key_material_Set() const;
    bool is_key_material_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConsent m_consent;
    bool m_consent_isSet;
    bool m_consent_isValid;

    QString m_data_push_url;
    bool m_data_push_url_isSet;
    bool m_data_push_url_isValid;

    OAIDateRange m_date_range;
    bool m_date_range_isSet;
    bool m_date_range_isValid;

    OAIKeyMaterial m_key_material;
    bool m_key_material_isSet;
    bool m_key_material_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHIRequest_hiRequest)

#endif // OAIHIRequest_hiRequest_H
