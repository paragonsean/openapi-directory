/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthConfirmIdentifierType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthConfirmIdentifierType::OAIAuthConfirmIdentifierType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthConfirmIdentifierType::OAIAuthConfirmIdentifierType() {
    this->initializeModel();
}

OAIAuthConfirmIdentifierType::~OAIAuthConfirmIdentifierType() {}

void OAIAuthConfirmIdentifierType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAuthConfirmIdentifierType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAuthConfirmIdentifierType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MOBILE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAuthConfirmIdentifierType::MOBILE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAuthConfirmIdentifierType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAuthConfirmIdentifierType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAuthConfirmIdentifierType::MOBILE:
            val = "MOBILE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAuthConfirmIdentifierType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAuthConfirmIdentifierType::eOAIAuthConfirmIdentifierType OAIAuthConfirmIdentifierType::getValue() const {
    return m_value;
}

void OAIAuthConfirmIdentifierType::setValue(const OAIAuthConfirmIdentifierType::eOAIAuthConfirmIdentifierType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAuthConfirmIdentifierType::isSet() const {
    
    return m_value_isSet;
}

bool OAIAuthConfirmIdentifierType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
