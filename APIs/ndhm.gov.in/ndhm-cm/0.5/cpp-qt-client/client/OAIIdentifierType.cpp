/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIdentifierType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIdentifierType::OAIIdentifierType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIdentifierType::OAIIdentifierType() {
    this->initializeModel();
}

OAIIdentifierType::~OAIIdentifierType() {}

void OAIIdentifierType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIIdentifierType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIIdentifierType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("MOBILE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIdentifierType::MOBILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIdentifierType::MR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIIdentifierType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIIdentifierType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIIdentifierType::MOBILE:
            val = "MOBILE";
            break;
        case eOAIIdentifierType::MR:
            val = "MR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIIdentifierType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIIdentifierType::eOAIIdentifierType OAIIdentifierType::getValue() const {
    return m_value;
}

void OAIIdentifierType::setValue(const OAIIdentifierType::eOAIIdentifierType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIIdentifierType::isSet() const {
    
    return m_value_isSet;
}

bool OAIIdentifierType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
