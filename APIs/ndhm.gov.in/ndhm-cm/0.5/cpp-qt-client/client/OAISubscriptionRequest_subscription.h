/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscriptionRequest_subscription.h
 *
 * 
 */

#ifndef OAISubscriptionRequest_subscription_H
#define OAISubscriptionRequest_subscription_H

#include <QJsonObject>

#include "OAIConsentManagerPatientID.h"
#include "OAIOrganizationRepresentation.h"
#include "OAISubscriptionCategory.h"
#include "OAISubscriptionPeriod.h"
#include "OAIUsePurpose.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrganizationRepresentation;
class OAIConsentManagerPatientID;
class OAISubscriptionPeriod;
class OAIUsePurpose;

class OAISubscriptionRequest_subscription : public OAIObject {
public:
    OAISubscriptionRequest_subscription();
    OAISubscriptionRequest_subscription(QString json);
    ~OAISubscriptionRequest_subscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISubscriptionCategory> getCategories() const;
    void setCategories(const QList<OAISubscriptionCategory> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QList<OAIOrganizationRepresentation> getHips() const;
    void setHips(const QList<OAIOrganizationRepresentation> &hips);
    bool is_hips_Set() const;
    bool is_hips_Valid() const;

    OAIOrganizationRepresentation getHiu() const;
    void setHiu(const OAIOrganizationRepresentation &hiu);
    bool is_hiu_Set() const;
    bool is_hiu_Valid() const;

    OAIConsentManagerPatientID getPatient() const;
    void setPatient(const OAIConsentManagerPatientID &patient);
    bool is_patient_Set() const;
    bool is_patient_Valid() const;

    OAISubscriptionPeriod getPeriod() const;
    void setPeriod(const OAISubscriptionPeriod &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    OAIUsePurpose getPurpose() const;
    void setPurpose(const OAIUsePurpose &purpose);
    bool is_purpose_Set() const;
    bool is_purpose_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISubscriptionCategory> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QList<OAIOrganizationRepresentation> m_hips;
    bool m_hips_isSet;
    bool m_hips_isValid;

    OAIOrganizationRepresentation m_hiu;
    bool m_hiu_isSet;
    bool m_hiu_isValid;

    OAIConsentManagerPatientID m_patient;
    bool m_patient_isSet;
    bool m_patient_isValid;

    OAISubscriptionPeriod m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    OAIUsePurpose m_purpose;
    bool m_purpose_isSet;
    bool m_purpose_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscriptionRequest_subscription)

#endif // OAISubscriptionRequest_subscription_H
