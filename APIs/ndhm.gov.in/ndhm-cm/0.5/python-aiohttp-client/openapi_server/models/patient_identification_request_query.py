# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.health_information_notification_notification_notifier import HealthInformationNotificationNotificationNotifier
from openapi_server.models.patient_identification_request_query_patient import PatientIdentificationRequestQueryPatient
from openapi_server import util


class PatientIdentificationRequestQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, patient: PatientIdentificationRequestQueryPatient=None, requester: HealthInformationNotificationNotificationNotifier=None):
        """PatientIdentificationRequestQuery - a model defined in OpenAPI

        :param patient: The patient of this PatientIdentificationRequestQuery.
        :param requester: The requester of this PatientIdentificationRequestQuery.
        """
        self.openapi_types = {
            'patient': PatientIdentificationRequestQueryPatient,
            'requester': HealthInformationNotificationNotificationNotifier
        }

        self.attribute_map = {
            'patient': 'patient',
            'requester': 'requester'
        }

        self._patient = patient
        self._requester = requester

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatientIdentificationRequestQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatientIdentificationRequest_query of this PatientIdentificationRequestQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def patient(self):
        """Gets the patient of this PatientIdentificationRequestQuery.


        :return: The patient of this PatientIdentificationRequestQuery.
        :rtype: PatientIdentificationRequestQueryPatient
        """
        return self._patient

    @patient.setter
    def patient(self, patient):
        """Sets the patient of this PatientIdentificationRequestQuery.


        :param patient: The patient of this PatientIdentificationRequestQuery.
        :type patient: PatientIdentificationRequestQueryPatient
        """
        if patient is None:
            raise ValueError("Invalid value for `patient`, must not be `None`")

        self._patient = patient

    @property
    def requester(self):
        """Gets the requester of this PatientIdentificationRequestQuery.


        :return: The requester of this PatientIdentificationRequestQuery.
        :rtype: HealthInformationNotificationNotificationNotifier
        """
        return self._requester

    @requester.setter
    def requester(self, requester):
        """Sets the requester of this PatientIdentificationRequestQuery.


        :param requester: The requester of this PatientIdentificationRequestQuery.
        :type requester: HealthInformationNotificationNotificationNotifier
        """
        if requester is None:
            raise ValueError("Invalid value for `requester`, must not be `None`")

        self._requester = requester
