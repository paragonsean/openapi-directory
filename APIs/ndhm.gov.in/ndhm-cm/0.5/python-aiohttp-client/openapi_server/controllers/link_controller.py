from typing import List, Dict
from aiohttp import web

from openapi_server.models.error_response import ErrorResponse
from openapi_server.models.patient_care_context_link_request import PatientCareContextLinkRequest
from openapi_server.models.patient_link_reference_result import PatientLinkReferenceResult
from openapi_server.models.patient_link_result import PatientLinkResult
from openapi_server import util


async def v05_links_link_add_contexts_post(request: web.Request, authorization, body) -> web.Response:
    """API for HIP initiated care-context linking for patient

    API to submit care-context to CM for HIP initiated linking. The API must accompany the \&quot;accessToken\&quot; fetched in the users/auth process.     1. subsequent usage for accessToken may be invalid if it was meant for one-time usage or if it expired 

    :param authorization: Access token which was issued after successful login with gateway auth server.
    :type authorization: str
    :param body: 
    :type body: dict | bytes

    """
    body = PatientCareContextLinkRequest.from_dict(body)
    return web.Response(status=200)


async def v05_links_link_on_confirm_post(request: web.Request, authorization, body) -> web.Response:
    """Token authenticated by HIP, indicating completion of linkage of care-contexts

    Returns a list of linked care contexts with patient reference number.   1. **Validated and linked account reference number**   2. **Validated that the token sent from Consent Manager is same as the one generated by HIP**   3. **Verified that same Consent Manager which made the link request is sending the token**   4. **Results of unmasked linked care contexts with patient reference number** 

    :param authorization: Access token which was issued after successful login with gateway auth server.
    :type authorization: str
    :param body: 
    :type body: dict | bytes

    """
    body = PatientLinkResult.from_dict(body)
    return web.Response(status=200)


async def v05_links_link_on_init_post(request: web.Request, authorization, body) -> web.Response:
    """Response to patient&#39;s care context link request

    Result of patient care-context link request from HIP end. This happens in context of previous discovery of patient found at HIP end, therefore the link requests ought to be in reference to the patient reference and care-context references previously returned by the HIP. The correlation of discovery and link request is maintained through the transactionId. HIP should have   1. **Validated transactionId in the request to check whether there was a discovery done previously, and the link request corresponds to returned patient care care context references**   2. **Before returning the response, HIP should have sent an authentication request to the patient(eg: OTP verification)**   3. **HIP should communicate the mode of authentication of a successful request**   4. **HIP subsequently should expect the token passed via /link/confirm against the link.referenceNumber passed in this call**                        The error section in the body, represents the potential errors that may have occurred. Possible reasons:   1. **Patient reference number is invalid**   2. **Care context reference numbers are invalid** 

    :param authorization: Access token which was issued after successful login with gateway auth server.
    :type authorization: str
    :param body: 
    :type body: dict | bytes

    """
    body = PatientLinkReferenceResult.from_dict(body)
    return web.Response(status=200)
