/*
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.HIUSubscriptionNotificationAcknowledgment;
import org.openapitools.client.model.HIUSubscriptionRequestNotificationAcknowledgement;
import org.openapitools.client.model.SubscriptionRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionsApi
 */
@Disabled
public class SubscriptionsApiTest {

    private final SubscriptionsApi api = new SubscriptionsApi();

    /**
     * Request for subscription
     *
     * creates a request for subscription. The subscription categories can be for care-contexts linkages or availability of data against existing care-contexts. Note that the requester must have HIU role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v05SubscriptionRequestsCmInitPostTest() throws ApiException {
        String authorization = null;
        SubscriptionRequest subscriptionRequest = null;
        api.v05SubscriptionRequestsCmInitPost(authorization, subscriptionRequest);
        // TODO: test validations
    }

    /**
     * Callback API for /subscription-requests/hiu/notify to acknowledge receipt of notification.
     *
     * This API is called by HIU as acknowledgement to subscription request relevant notifications.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v05SubscriptionRequestsHiuOnNotifyPostTest() throws ApiException {
        String authorization = null;
        HIUSubscriptionRequestNotificationAcknowledgement hiUSubscriptionRequestNotificationAcknowledgement = null;
        api.v05SubscriptionRequestsHiuOnNotifyPost(authorization, hiUSubscriptionRequestNotificationAcknowledgement);
        // TODO: test validations
    }

    /**
     * Callback API for /subscriptions/hiu/notify to acknowledge receipt of notification.
     *
     * This API is called by HIU as acknowledgement to consent notifications, specifically for cases when consent is REVOKED or EXPIRED. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v05SubscriptionsHiuOnNotifyPostTest() throws ApiException {
        String authorization = null;
        HIUSubscriptionNotificationAcknowledgment hiUSubscriptionNotificationAcknowledgment = null;
        api.v05SubscriptionsHiuOnNotifyPost(authorization, hiUSubscriptionNotificationAcknowledgment);
        // TODO: test validations
    }

}
