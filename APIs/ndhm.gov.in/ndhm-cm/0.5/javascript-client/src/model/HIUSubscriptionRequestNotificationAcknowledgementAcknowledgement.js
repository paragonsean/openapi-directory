/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement model module.
 * @module model/HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement
 * @version 0.5
 */
class HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement {
    /**
     * Constructs a new <code>HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement</code>.
     * @alias module:model/HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement
     * @param status {module:model/HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement.StatusEnum} 
     * @param subscriptionRequestId {String} 
     */
    constructor(status, subscriptionRequestId) { 
        
        HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement.initialize(this, status, subscriptionRequestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status, subscriptionRequestId) { 
        obj['status'] = status;
        obj['subscriptionRequestId'] = subscriptionRequestId;
    }

    /**
     * Constructs a <code>HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement} obj Optional instance to populate.
     * @return {module:model/HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement} The populated <code>HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement();

            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('subscriptionRequestId')) {
                obj['subscriptionRequestId'] = ApiClient.convertToType(data['subscriptionRequestId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['subscriptionRequestId'] && !(typeof data['subscriptionRequestId'] === 'string' || data['subscriptionRequestId'] instanceof String)) {
            throw new Error("Expected the field `subscriptionRequestId` to be a primitive type in the JSON string but got " + data['subscriptionRequestId']);
        }

        return true;
    }


}

HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement.RequiredProperties = ["status", "subscriptionRequestId"];

/**
 * @member {module:model/HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement.StatusEnum} status
 */
HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement.prototype['status'] = undefined;

/**
 * @member {String} subscriptionRequestId
 */
HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement.prototype['subscriptionRequestId'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement['StatusEnum'] = {

    /**
     * value: "OK"
     * @const
     */
    "OK": "OK"
};



export default HIUSubscriptionRequestNotificationAcknowledgementAcknowledgement;

