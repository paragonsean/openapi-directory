/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import PatientCareContextLinkRequest from '../model/PatientCareContextLinkRequest';
import PatientLinkReferenceResult from '../model/PatientLinkReferenceResult';
import PatientLinkResult from '../model/PatientLinkResult';

/**
* Link service.
* @module api/LinkApi
* @version 0.5
*/
export default class LinkApi {

    /**
    * Constructs a new LinkApi. 
    * @alias module:api/LinkApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v05LinksLinkAddContextsPost operation.
     * @callback module:api/LinkApi~v05LinksLinkAddContextsPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * API for HIP initiated care-context linking for patient
     * API to submit care-context to CM for HIP initiated linking. The API must accompany the \"accessToken\" fetched in the users/auth process.     1. subsequent usage for accessToken may be invalid if it was meant for one-time usage or if it expired 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {module:model/PatientCareContextLinkRequest} patientCareContextLinkRequest 
     * @param {module:api/LinkApi~v05LinksLinkAddContextsPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v05LinksLinkAddContextsPost(authorization, patientCareContextLinkRequest, callback) {
      let postBody = patientCareContextLinkRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05LinksLinkAddContextsPost");
      }
      // verify the required parameter 'patientCareContextLinkRequest' is set
      if (patientCareContextLinkRequest === undefined || patientCareContextLinkRequest === null) {
        throw new Error("Missing the required parameter 'patientCareContextLinkRequest' when calling v05LinksLinkAddContextsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/links/link/add-contexts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05LinksLinkOnConfirmPost operation.
     * @callback module:api/LinkApi~v05LinksLinkOnConfirmPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Token authenticated by HIP, indicating completion of linkage of care-contexts
     * Returns a list of linked care contexts with patient reference number.   1. **Validated and linked account reference number**   2. **Validated that the token sent from Consent Manager is same as the one generated by HIP**   3. **Verified that same Consent Manager which made the link request is sending the token**   4. **Results of unmasked linked care contexts with patient reference number** 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {module:model/PatientLinkResult} patientLinkResult 
     * @param {module:api/LinkApi~v05LinksLinkOnConfirmPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v05LinksLinkOnConfirmPost(authorization, patientLinkResult, callback) {
      let postBody = patientLinkResult;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05LinksLinkOnConfirmPost");
      }
      // verify the required parameter 'patientLinkResult' is set
      if (patientLinkResult === undefined || patientLinkResult === null) {
        throw new Error("Missing the required parameter 'patientLinkResult' when calling v05LinksLinkOnConfirmPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/links/link/on-confirm', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05LinksLinkOnInitPost operation.
     * @callback module:api/LinkApi~v05LinksLinkOnInitPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Response to patient's care context link request
     * Result of patient care-context link request from HIP end. This happens in context of previous discovery of patient found at HIP end, therefore the link requests ought to be in reference to the patient reference and care-context references previously returned by the HIP. The correlation of discovery and link request is maintained through the transactionId. HIP should have   1. **Validated transactionId in the request to check whether there was a discovery done previously, and the link request corresponds to returned patient care care context references**   2. **Before returning the response, HIP should have sent an authentication request to the patient(eg: OTP verification)**   3. **HIP should communicate the mode of authentication of a successful request**   4. **HIP subsequently should expect the token passed via /link/confirm against the link.referenceNumber passed in this call**                        The error section in the body, represents the potential errors that may have occurred. Possible reasons:   1. **Patient reference number is invalid**   2. **Care context reference numbers are invalid** 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {module:model/PatientLinkReferenceResult} patientLinkReferenceResult 
     * @param {module:api/LinkApi~v05LinksLinkOnInitPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v05LinksLinkOnInitPost(authorization, patientLinkReferenceResult, callback) {
      let postBody = patientLinkReferenceResult;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05LinksLinkOnInitPost");
      }
      // verify the required parameter 'patientLinkReferenceResult' is set
      if (patientLinkReferenceResult === undefined || patientLinkReferenceResult === null) {
        throw new Error("Missing the required parameter 'patientLinkReferenceResult' when calling v05LinksLinkOnInitPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/links/link/on-init', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
