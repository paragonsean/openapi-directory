/**
 * Health Data Consent Manager
 * Entity which provides health information aggregation services to customers of health care services. It enables customers to fetch their health information from one or more Health Information Providers (e.g., Hospitals, Diagnostic Labs, Medical Device Companies), based on their explicit Consent and to share such aggregated information with Health Information Users i.e. entities in need of such data (e.g., Insurers, Doctors, Medical Researchers).  # Specifications 1. This document maintains only the Health Information Gateway relevant APIs.  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ShareProfileResult from '../model/ShareProfileResult';

/**
* Profile service.
* @module api/ProfileApi
* @version 0.5
*/
export default class ProfileApi {

    /**
    * Constructs a new ProfileApi. 
    * @alias module:api/ProfileApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v05PatientsProfileOnSharePost operation.
     * @callback module:api/ProfileApi~v05PatientsProfileOnSharePostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Response to patient's share profile request
     * Result of patient share profile request at HIP end. 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {module:model/ShareProfileResult} shareProfileResult 
     * @param {module:api/ProfileApi~v05PatientsProfileOnSharePostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v05PatientsProfileOnSharePost(authorization, shareProfileResult, callback) {
      let postBody = shareProfileResult;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05PatientsProfileOnSharePost");
      }
      // verify the required parameter 'shareProfileResult' is set
      if (shareProfileResult === undefined || shareProfileResult === null) {
        throw new Error("Missing the required parameter 'shareProfileResult' when calling v05PatientsProfileOnSharePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/patients/profile/on-share', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
