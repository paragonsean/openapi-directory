/*
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.HIUSubscriptionNotification;
import org.openapitools.client.model.HIUSubscriptionNotificationAcknowledgment;
import org.openapitools.client.model.HIUSubscriptionRequestNotificationAcknowledgement;
import org.openapitools.client.model.HIUSubscriptionRequestReceipt;
import org.openapitools.client.model.SubscriptionApprovalNotification;
import org.openapitools.client.model.SubscriptionRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionsApi
 */
@Disabled
public class SubscriptionsApiTest {

    private final SubscriptionsApi api = new SubscriptionsApi();

    /**
     * Request for subscription
     *
     * creates a request for subscription. The subscription categories can be for care-contexts linkages or availability of data against existing care-contexts. Note that the requester must have HIU role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v05SubscriptionRequestsCmInitPostTest() throws ApiException {
        String authorization = null;
        String X_CM_ID = null;
        SubscriptionRequest subscriptionRequest = null;
        api.v05SubscriptionRequestsCmInitPost(authorization, X_CM_ID, subscriptionRequest);
        // TODO: test validations
    }

    /**
     * callback API for the /subscription-requests/cm/init to notify a HIU on acceptance/acknowledgement of the request for subscription.
     *
     * This callback API acknowledges the request for subscription from a HIU, and sends back a \&quot;id\&quot; that will be used when the patient/user approves or denies the subscription.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v05SubscriptionRequestsCmOnInitPostTest() throws ApiException {
        String authorization = null;
        String X_HIU_ID = null;
        HIUSubscriptionRequestReceipt hiUSubscriptionRequestReceipt = null;
        api.v05SubscriptionRequestsCmOnInitPost(authorization, X_HIU_ID, hiUSubscriptionRequestReceipt);
        // TODO: test validations
    }

    /**
     * Notification for subscription grant/deny/revoke
     *
     * This API is used by CM to notify a HIU to grant or deny a request for subscription, and also to notify that in case an existing subscription is revoked or expired. For notifying that a particular subscription request was GRANTED or DENIED, the **subscriptionRequestId** is passed.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v05SubscriptionRequestsHiuNotifyPostTest() throws ApiException {
        String authorization = null;
        String X_HIU_ID = null;
        SubscriptionApprovalNotification subscriptionApprovalNotification = null;
        api.v05SubscriptionRequestsHiuNotifyPost(authorization, X_HIU_ID, subscriptionApprovalNotification);
        // TODO: test validations
    }

    /**
     * Callback API for /subscription-requests/hiu/notify to acknowledge receipt of notification.
     *
     * This API is called by HIU as acknowledgement to subscription request relevant notifications.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v05SubscriptionRequestsHiuOnNotifyPostTest() throws ApiException {
        String authorization = null;
        String X_CM_ID = null;
        HIUSubscriptionRequestNotificationAcknowledgement hiUSubscriptionRequestNotificationAcknowledgement = null;
        api.v05SubscriptionRequestsHiuOnNotifyPost(authorization, X_CM_ID, hiUSubscriptionRequestNotificationAcknowledgement);
        // TODO: test validations
    }

    /**
     * Notification to HIU on basis of a granted subscription
     *
     * This API is used by CM to notify a HIU for notification relevant to subscription. Notifications are sent to subscribed HIUs whenever a new care-context is linked or new data is available on an existing linked care-context.  1. if event.category &#x3D; LINK, then only care-contexts are passed when new care-contexts are linked for patient.  2. If event.category &#x3D; DATA, then hiTypes are passed. Care-context is passed only if the subscribed HIU has any valid consent for that care-context 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v05SubscriptionsHiuNotifyPostTest() throws ApiException {
        String authorization = null;
        String X_HIU_ID = null;
        HIUSubscriptionNotification hiUSubscriptionNotification = null;
        api.v05SubscriptionsHiuNotifyPost(authorization, X_HIU_ID, hiUSubscriptionNotification);
        // TODO: test validations
    }

    /**
     * Callback API for /subscriptions/hiu/notify to acknowledge receipt of notification.
     *
     * This API is called by HIU as acknowledgement to consent notifications, specifically for cases when consent is REVOKED or EXPIRED. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v05SubscriptionsHiuOnNotifyPostTest() throws ApiException {
        String authorization = null;
        String X_CM_ID = null;
        HIUSubscriptionNotificationAcknowledgment hiUSubscriptionNotificationAcknowledgment = null;
        api.v05SubscriptionsHiuOnNotifyPost(authorization, X_CM_ID, hiUSubscriptionNotificationAcknowledgment);
        // TODO: test validations
    }

}
