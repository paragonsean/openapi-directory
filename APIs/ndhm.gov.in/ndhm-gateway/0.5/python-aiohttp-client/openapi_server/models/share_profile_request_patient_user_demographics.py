# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.identifier import Identifier
from openapi_server.models.patient_address import PatientAddress
from openapi_server.models.patient_gender import PatientGender
from openapi_server import util


class ShareProfileRequestPatientUserDemographics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: PatientAddress=None, day_of_birth: int=None, gender: PatientGender=None, health_id: str=None, health_id_number: str=None, identifiers: List[Identifier]=None, month_of_birth: int=None, name: str=None, year_of_birth: int=None):
        """ShareProfileRequestPatientUserDemographics - a model defined in OpenAPI

        :param address: The address of this ShareProfileRequestPatientUserDemographics.
        :param day_of_birth: The day_of_birth of this ShareProfileRequestPatientUserDemographics.
        :param gender: The gender of this ShareProfileRequestPatientUserDemographics.
        :param health_id: The health_id of this ShareProfileRequestPatientUserDemographics.
        :param health_id_number: The health_id_number of this ShareProfileRequestPatientUserDemographics.
        :param identifiers: The identifiers of this ShareProfileRequestPatientUserDemographics.
        :param month_of_birth: The month_of_birth of this ShareProfileRequestPatientUserDemographics.
        :param name: The name of this ShareProfileRequestPatientUserDemographics.
        :param year_of_birth: The year_of_birth of this ShareProfileRequestPatientUserDemographics.
        """
        self.openapi_types = {
            'address': PatientAddress,
            'day_of_birth': int,
            'gender': PatientGender,
            'health_id': str,
            'health_id_number': str,
            'identifiers': List[Identifier],
            'month_of_birth': int,
            'name': str,
            'year_of_birth': int
        }

        self.attribute_map = {
            'address': 'address',
            'day_of_birth': 'dayOfBirth',
            'gender': 'gender',
            'health_id': 'healthId',
            'health_id_number': 'healthIdNumber',
            'identifiers': 'identifiers',
            'month_of_birth': 'monthOfBirth',
            'name': 'name',
            'year_of_birth': 'yearOfBirth'
        }

        self._address = address
        self._day_of_birth = day_of_birth
        self._gender = gender
        self._health_id = health_id
        self._health_id_number = health_id_number
        self._identifiers = identifiers
        self._month_of_birth = month_of_birth
        self._name = name
        self._year_of_birth = year_of_birth

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShareProfileRequestPatientUserDemographics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShareProfileRequest_patient_userDemographics of this ShareProfileRequestPatientUserDemographics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this ShareProfileRequestPatientUserDemographics.


        :return: The address of this ShareProfileRequestPatientUserDemographics.
        :rtype: PatientAddress
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ShareProfileRequestPatientUserDemographics.


        :param address: The address of this ShareProfileRequestPatientUserDemographics.
        :type address: PatientAddress
        """

        self._address = address

    @property
    def day_of_birth(self):
        """Gets the day_of_birth of this ShareProfileRequestPatientUserDemographics.


        :return: The day_of_birth of this ShareProfileRequestPatientUserDemographics.
        :rtype: int
        """
        return self._day_of_birth

    @day_of_birth.setter
    def day_of_birth(self, day_of_birth):
        """Sets the day_of_birth of this ShareProfileRequestPatientUserDemographics.


        :param day_of_birth: The day_of_birth of this ShareProfileRequestPatientUserDemographics.
        :type day_of_birth: int
        """

        self._day_of_birth = day_of_birth

    @property
    def gender(self):
        """Gets the gender of this ShareProfileRequestPatientUserDemographics.


        :return: The gender of this ShareProfileRequestPatientUserDemographics.
        :rtype: PatientGender
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this ShareProfileRequestPatientUserDemographics.


        :param gender: The gender of this ShareProfileRequestPatientUserDemographics.
        :type gender: PatientGender
        """
        if gender is None:
            raise ValueError("Invalid value for `gender`, must not be `None`")

        self._gender = gender

    @property
    def health_id(self):
        """Gets the health_id of this ShareProfileRequestPatientUserDemographics.


        :return: The health_id of this ShareProfileRequestPatientUserDemographics.
        :rtype: str
        """
        return self._health_id

    @health_id.setter
    def health_id(self, health_id):
        """Sets the health_id of this ShareProfileRequestPatientUserDemographics.


        :param health_id: The health_id of this ShareProfileRequestPatientUserDemographics.
        :type health_id: str
        """
        if health_id is None:
            raise ValueError("Invalid value for `health_id`, must not be `None`")

        self._health_id = health_id

    @property
    def health_id_number(self):
        """Gets the health_id_number of this ShareProfileRequestPatientUserDemographics.


        :return: The health_id_number of this ShareProfileRequestPatientUserDemographics.
        :rtype: str
        """
        return self._health_id_number

    @health_id_number.setter
    def health_id_number(self, health_id_number):
        """Sets the health_id_number of this ShareProfileRequestPatientUserDemographics.


        :param health_id_number: The health_id_number of this ShareProfileRequestPatientUserDemographics.
        :type health_id_number: str
        """
        if health_id_number is None:
            raise ValueError("Invalid value for `health_id_number`, must not be `None`")

        self._health_id_number = health_id_number

    @property
    def identifiers(self):
        """Gets the identifiers of this ShareProfileRequestPatientUserDemographics.


        :return: The identifiers of this ShareProfileRequestPatientUserDemographics.
        :rtype: List[Identifier]
        """
        return self._identifiers

    @identifiers.setter
    def identifiers(self, identifiers):
        """Sets the identifiers of this ShareProfileRequestPatientUserDemographics.


        :param identifiers: The identifiers of this ShareProfileRequestPatientUserDemographics.
        :type identifiers: List[Identifier]
        """

        self._identifiers = identifiers

    @property
    def month_of_birth(self):
        """Gets the month_of_birth of this ShareProfileRequestPatientUserDemographics.


        :return: The month_of_birth of this ShareProfileRequestPatientUserDemographics.
        :rtype: int
        """
        return self._month_of_birth

    @month_of_birth.setter
    def month_of_birth(self, month_of_birth):
        """Sets the month_of_birth of this ShareProfileRequestPatientUserDemographics.


        :param month_of_birth: The month_of_birth of this ShareProfileRequestPatientUserDemographics.
        :type month_of_birth: int
        """

        self._month_of_birth = month_of_birth

    @property
    def name(self):
        """Gets the name of this ShareProfileRequestPatientUserDemographics.


        :return: The name of this ShareProfileRequestPatientUserDemographics.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ShareProfileRequestPatientUserDemographics.


        :param name: The name of this ShareProfileRequestPatientUserDemographics.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def year_of_birth(self):
        """Gets the year_of_birth of this ShareProfileRequestPatientUserDemographics.


        :return: The year_of_birth of this ShareProfileRequestPatientUserDemographics.
        :rtype: int
        """
        return self._year_of_birth

    @year_of_birth.setter
    def year_of_birth(self, year_of_birth):
        """Sets the year_of_birth of this ShareProfileRequestPatientUserDemographics.


        :param year_of_birth: The year_of_birth of this ShareProfileRequestPatientUserDemographics.
        :type year_of_birth: int
        """
        if year_of_birth is None:
            raise ValueError("Invalid value for `year_of_birth`, must not be `None`")

        self._year_of_birth = year_of_birth
