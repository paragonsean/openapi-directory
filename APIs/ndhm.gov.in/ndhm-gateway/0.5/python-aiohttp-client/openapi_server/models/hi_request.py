# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hiphi_request_hi_request import HIPHIRequestHiRequest
from openapi_server import util


class HIRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hi_request: HIPHIRequestHiRequest=None, request_id: str=None, timestamp: datetime=None):
        """HIRequest - a model defined in OpenAPI

        :param hi_request: The hi_request of this HIRequest.
        :param request_id: The request_id of this HIRequest.
        :param timestamp: The timestamp of this HIRequest.
        """
        self.openapi_types = {
            'hi_request': HIPHIRequestHiRequest,
            'request_id': str,
            'timestamp': datetime
        }

        self.attribute_map = {
            'hi_request': 'hiRequest',
            'request_id': 'requestId',
            'timestamp': 'timestamp'
        }

        self._hi_request = hi_request
        self._request_id = request_id
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HIRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HIRequest of this HIRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hi_request(self):
        """Gets the hi_request of this HIRequest.


        :return: The hi_request of this HIRequest.
        :rtype: HIPHIRequestHiRequest
        """
        return self._hi_request

    @hi_request.setter
    def hi_request(self, hi_request):
        """Sets the hi_request of this HIRequest.


        :param hi_request: The hi_request of this HIRequest.
        :type hi_request: HIPHIRequestHiRequest
        """
        if hi_request is None:
            raise ValueError("Invalid value for `hi_request`, must not be `None`")

        self._hi_request = hi_request

    @property
    def request_id(self):
        """Gets the request_id of this HIRequest.


        :return: The request_id of this HIRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this HIRequest.


        :param request_id: The request_id of this HIRequest.
        :type request_id: str
        """
        if request_id is None:
            raise ValueError("Invalid value for `request_id`, must not be `None`")

        self._request_id = request_id

    @property
    def timestamp(self):
        """Gets the timestamp of this HIRequest.

        Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ

        :return: The timestamp of this HIRequest.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this HIRequest.

        Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ

        :param timestamp: The timestamp of this HIRequest.
        :type timestamp: datetime
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")

        self._timestamp = timestamp
