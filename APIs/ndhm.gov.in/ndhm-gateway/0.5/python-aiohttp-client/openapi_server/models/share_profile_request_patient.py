# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.share_profile_request_patient_user_demographics import ShareProfileRequestPatientUserDemographics
from openapi_server import util


class ShareProfileRequestPatient(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hip_code: str=None, user_demographics: ShareProfileRequestPatientUserDemographics=None):
        """ShareProfileRequestPatient - a model defined in OpenAPI

        :param hip_code: The hip_code of this ShareProfileRequestPatient.
        :param user_demographics: The user_demographics of this ShareProfileRequestPatient.
        """
        self.openapi_types = {
            'hip_code': str,
            'user_demographics': ShareProfileRequestPatientUserDemographics
        }

        self.attribute_map = {
            'hip_code': 'hipCode',
            'user_demographics': 'userDemographics'
        }

        self._hip_code = hip_code
        self._user_demographics = user_demographics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShareProfileRequestPatient':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShareProfileRequest_patient of this ShareProfileRequestPatient.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hip_code(self):
        """Gets the hip_code of this ShareProfileRequestPatient.

        additional details about HIP retrieved after scanning QR.

        :return: The hip_code of this ShareProfileRequestPatient.
        :rtype: str
        """
        return self._hip_code

    @hip_code.setter
    def hip_code(self, hip_code):
        """Sets the hip_code of this ShareProfileRequestPatient.

        additional details about HIP retrieved after scanning QR.

        :param hip_code: The hip_code of this ShareProfileRequestPatient.
        :type hip_code: str
        """

        self._hip_code = hip_code

    @property
    def user_demographics(self):
        """Gets the user_demographics of this ShareProfileRequestPatient.


        :return: The user_demographics of this ShareProfileRequestPatient.
        :rtype: ShareProfileRequestPatientUserDemographics
        """
        return self._user_demographics

    @user_demographics.setter
    def user_demographics(self, user_demographics):
        """Sets the user_demographics of this ShareProfileRequestPatient.


        :param user_demographics: The user_demographics of this ShareProfileRequestPatient.
        :type user_demographics: ShareProfileRequestPatientUserDemographics
        """
        if user_demographics is None:
            raise ValueError("Invalid value for `user_demographics`, must not be `None`")

        self._user_demographics = user_demographics
