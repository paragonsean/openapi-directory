/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConsentManagerPatientID from './ConsentManagerPatientID';
import EventCategoryDetail from './EventCategoryDetail';
import OrganizationRepresentation from './OrganizationRepresentation';

/**
 * The HIUSubscriptionEventContent model module.
 * @module model/HIUSubscriptionEventContent
 * @version 0.5
 */
class HIUSubscriptionEventContent {
    /**
     * Constructs a new <code>HIUSubscriptionEventContent</code>.
     * @alias module:model/HIUSubscriptionEventContent
     * @param context {Array.<module:model/EventCategoryDetail>} 
     * @param hip {module:model/OrganizationRepresentation} 
     * @param patient {module:model/ConsentManagerPatientID} 
     */
    constructor(context, hip, patient) { 
        
        HIUSubscriptionEventContent.initialize(this, context, hip, patient);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, context, hip, patient) { 
        obj['context'] = context;
        obj['hip'] = hip;
        obj['patient'] = patient;
    }

    /**
     * Constructs a <code>HIUSubscriptionEventContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HIUSubscriptionEventContent} obj Optional instance to populate.
     * @return {module:model/HIUSubscriptionEventContent} The populated <code>HIUSubscriptionEventContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HIUSubscriptionEventContent();

            if (data.hasOwnProperty('context')) {
                obj['context'] = ApiClient.convertToType(data['context'], [EventCategoryDetail]);
            }
            if (data.hasOwnProperty('hip')) {
                obj['hip'] = OrganizationRepresentation.constructFromObject(data['hip']);
            }
            if (data.hasOwnProperty('patient')) {
                obj['patient'] = ConsentManagerPatientID.constructFromObject(data['patient']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HIUSubscriptionEventContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HIUSubscriptionEventContent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HIUSubscriptionEventContent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['context']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['context'])) {
                throw new Error("Expected the field `context` to be an array in the JSON data but got " + data['context']);
            }
            // validate the optional field `context` (array)
            for (const item of data['context']) {
                EventCategoryDetail.validateJSON(item);
            };
        }
        // validate the optional field `hip`
        if (data['hip']) { // data not null
          OrganizationRepresentation.validateJSON(data['hip']);
        }
        // validate the optional field `patient`
        if (data['patient']) { // data not null
          ConsentManagerPatientID.validateJSON(data['patient']);
        }

        return true;
    }


}

HIUSubscriptionEventContent.RequiredProperties = ["context", "hip", "patient"];

/**
 * @member {Array.<module:model/EventCategoryDetail>} context
 */
HIUSubscriptionEventContent.prototype['context'] = undefined;

/**
 * @member {module:model/OrganizationRepresentation} hip
 */
HIUSubscriptionEventContent.prototype['hip'] = undefined;

/**
 * @member {module:model/ConsentManagerPatientID} patient
 */
HIUSubscriptionEventContent.prototype['patient'] = undefined;






export default HIUSubscriptionEventContent;

