/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConsentFetchRequest from '../model/ConsentFetchRequest';
import ConsentRequest from '../model/ConsentRequest';
import ConsentRequestStatusRequest from '../model/ConsentRequestStatusRequest';
import ErrorResponse from '../model/ErrorResponse';
import HIRequest from '../model/HIRequest';
import HIUConsentNotificationResponse from '../model/HIUConsentNotificationResponse';
import HIUSubscriptionNotificationAcknowledgment from '../model/HIUSubscriptionNotificationAcknowledgment';
import HIUSubscriptionRequestNotificationAcknowledgement from '../model/HIUSubscriptionRequestNotificationAcknowledgement';
import HealthInformationNotification from '../model/HealthInformationNotification';
import PatientAuthConfirmRequest from '../model/PatientAuthConfirmRequest';
import PatientAuthInitRequest from '../model/PatientAuthInitRequest';
import PatientAuthModeQueryRequest from '../model/PatientAuthModeQueryRequest';
import PatientAuthNotificationAcknowledgement from '../model/PatientAuthNotificationAcknowledgement';
import PatientIdentificationRequest from '../model/PatientIdentificationRequest';
import SubscriptionRequest from '../model/SubscriptionRequest';

/**
* HiuFacing service.
* @module api/HiuFacingApi
* @version 0.5
*/
export default class HiuFacingApi {

    /**
    * Constructs a new HiuFacingApi. 
    * @alias module:api/HiuFacingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v05ConsentRequestsInitPost_0 operation.
     * @callback module:api/HiuFacingApi~v05ConsentRequestsInitPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create consent request
     * Creates a consent request to get data about a patient by HIU user.
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/ConsentRequest} consentRequest 
     * @param {module:api/HiuFacingApi~v05ConsentRequestsInitPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05ConsentRequestsInitPost_0(authorization, X_CM_ID, consentRequest, callback) {
      let postBody = consentRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05ConsentRequestsInitPost_0");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05ConsentRequestsInitPost_0");
      }
      // verify the required parameter 'consentRequest' is set
      if (consentRequest === undefined || consentRequest === null) {
        throw new Error("Missing the required parameter 'consentRequest' when calling v05ConsentRequestsInitPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/consent-requests/init', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05ConsentRequestsStatusPost_0 operation.
     * @callback module:api/HiuFacingApi~v05ConsentRequestsStatusPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get consent request status
     * Get status of consent request done previously
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/ConsentRequestStatusRequest} consentRequestStatusRequest 
     * @param {module:api/HiuFacingApi~v05ConsentRequestsStatusPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05ConsentRequestsStatusPost_0(authorization, X_CM_ID, consentRequestStatusRequest, callback) {
      let postBody = consentRequestStatusRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05ConsentRequestsStatusPost_0");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05ConsentRequestsStatusPost_0");
      }
      // verify the required parameter 'consentRequestStatusRequest' is set
      if (consentRequestStatusRequest === undefined || consentRequestStatusRequest === null) {
        throw new Error("Missing the required parameter 'consentRequestStatusRequest' when calling v05ConsentRequestsStatusPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/consent-requests/status', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05ConsentsFetchPost_0 operation.
     * @callback module:api/HiuFacingApi~v05ConsentsFetchPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get consent artefact
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/ConsentFetchRequest} consentFetchRequest 
     * @param {module:api/HiuFacingApi~v05ConsentsFetchPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05ConsentsFetchPost_0(authorization, X_CM_ID, consentFetchRequest, callback) {
      let postBody = consentFetchRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05ConsentsFetchPost_0");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05ConsentsFetchPost_0");
      }
      // verify the required parameter 'consentFetchRequest' is set
      if (consentFetchRequest === undefined || consentFetchRequest === null) {
        throw new Error("Missing the required parameter 'consentFetchRequest' when calling v05ConsentsFetchPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/consents/fetch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05ConsentsHiuOnNotifyPost_0 operation.
     * @callback module:api/HiuFacingApi~v05ConsentsHiuOnNotifyPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Consent notification
     * This API is called by HIU as acknowledgement to consent notifications, specifically for cases when consent is REVOKED or EXPIRED. 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/HIUConsentNotificationResponse} hIUConsentNotificationResponse 
     * @param {module:api/HiuFacingApi~v05ConsentsHiuOnNotifyPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05ConsentsHiuOnNotifyPost_0(authorization, X_CM_ID, hIUConsentNotificationResponse, callback) {
      let postBody = hIUConsentNotificationResponse;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05ConsentsHiuOnNotifyPost_0");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05ConsentsHiuOnNotifyPost_0");
      }
      // verify the required parameter 'hIUConsentNotificationResponse' is set
      if (hIUConsentNotificationResponse === undefined || hIUConsentNotificationResponse === null) {
        throw new Error("Missing the required parameter 'hIUConsentNotificationResponse' when calling v05ConsentsHiuOnNotifyPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/consents/hiu/on-notify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05HealthInformationCmRequestPost_0 operation.
     * @callback module:api/HiuFacingApi~v05HealthInformationCmRequestPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Health information data request
     * Request for Health information against a consent id. CM would generate a transactionId against each consent and pass it as trnasaction context / correlation id to the HIP and also return the same to HIU via /on-request.  
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/HIRequest} hIRequest 
     * @param {module:api/HiuFacingApi~v05HealthInformationCmRequestPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05HealthInformationCmRequestPost_0(authorization, X_CM_ID, hIRequest, callback) {
      let postBody = hIRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05HealthInformationCmRequestPost_0");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05HealthInformationCmRequestPost_0");
      }
      // verify the required parameter 'hIRequest' is set
      if (hIRequest === undefined || hIRequest === null) {
        throw new Error("Missing the required parameter 'hIRequest' when calling v05HealthInformationCmRequestPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/health-information/cm/request', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05HealthInformationNotifyPost_1 operation.
     * @callback module:api/HiuFacingApi~v05HealthInformationNotifyPost_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Notifications corresponding to events during data flow
     * API called by HIU and HIP during data-transfer.  1. HIP on transfer of data would send **sessionStatus** - one of [TRANSFERRED, FAILED] 2. HIP would also send **hiStatus** for each *careContextReference* - on of [DELIVERED, ERRORED] 3. HIU on receipt of data would send **sessionStatus** - one of [TRANSFERRED, FAILED]. For example, FAILED when if data was not sent or if invalid data was sent 4. HIU would also send **hiStatus** for each *careContextReference* - one of [OK, ERRORED]  
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/HealthInformationNotification} healthInformationNotification 
     * @param {module:api/HiuFacingApi~v05HealthInformationNotifyPost_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05HealthInformationNotifyPost_1(authorization, X_CM_ID, healthInformationNotification, callback) {
      let postBody = healthInformationNotification;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05HealthInformationNotifyPost_1");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05HealthInformationNotifyPost_1");
      }
      // verify the required parameter 'healthInformationNotification' is set
      if (healthInformationNotification === undefined || healthInformationNotification === null) {
        throw new Error("Missing the required parameter 'healthInformationNotification' when calling v05HealthInformationNotifyPost_1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/health-information/notify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05PatientsFindPost_0 operation.
     * @callback module:api/HiuFacingApi~v05PatientsFindPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Identify a patient by her consent-manager user-id
     * This API is meant for identify to patient given her consent-manager-user-id 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/PatientIdentificationRequest} patientIdentificationRequest 
     * @param {module:api/HiuFacingApi~v05PatientsFindPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05PatientsFindPost_0(authorization, X_CM_ID, patientIdentificationRequest, callback) {
      let postBody = patientIdentificationRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05PatientsFindPost_0");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05PatientsFindPost_0");
      }
      // verify the required parameter 'patientIdentificationRequest' is set
      if (patientIdentificationRequest === undefined || patientIdentificationRequest === null) {
        throw new Error("Missing the required parameter 'patientIdentificationRequest' when calling v05PatientsFindPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/patients/find', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05SubscriptionRequestsCmInitPost_0 operation.
     * @callback module:api/HiuFacingApi~v05SubscriptionRequestsCmInitPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request for subscription
     * creates a request for subscription. The subscription categories can be for care-contexts linkages or availability of data against existing care-contexts. Note that the requester must have HIU role
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/SubscriptionRequest} subscriptionRequest 
     * @param {module:api/HiuFacingApi~v05SubscriptionRequestsCmInitPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05SubscriptionRequestsCmInitPost_0(authorization, X_CM_ID, subscriptionRequest, callback) {
      let postBody = subscriptionRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05SubscriptionRequestsCmInitPost_0");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05SubscriptionRequestsCmInitPost_0");
      }
      // verify the required parameter 'subscriptionRequest' is set
      if (subscriptionRequest === undefined || subscriptionRequest === null) {
        throw new Error("Missing the required parameter 'subscriptionRequest' when calling v05SubscriptionRequestsCmInitPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/subscription-requests/cm/init', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05SubscriptionRequestsHiuOnNotifyPost_0 operation.
     * @callback module:api/HiuFacingApi~v05SubscriptionRequestsHiuOnNotifyPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Callback API for /subscription-requests/hiu/notify to acknowledge receipt of notification.
     * This API is called by HIU as acknowledgement to subscription request relevant notifications.  
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/HIUSubscriptionRequestNotificationAcknowledgement} hIUSubscriptionRequestNotificationAcknowledgement 
     * @param {module:api/HiuFacingApi~v05SubscriptionRequestsHiuOnNotifyPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05SubscriptionRequestsHiuOnNotifyPost_0(authorization, X_CM_ID, hIUSubscriptionRequestNotificationAcknowledgement, callback) {
      let postBody = hIUSubscriptionRequestNotificationAcknowledgement;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05SubscriptionRequestsHiuOnNotifyPost_0");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05SubscriptionRequestsHiuOnNotifyPost_0");
      }
      // verify the required parameter 'hIUSubscriptionRequestNotificationAcknowledgement' is set
      if (hIUSubscriptionRequestNotificationAcknowledgement === undefined || hIUSubscriptionRequestNotificationAcknowledgement === null) {
        throw new Error("Missing the required parameter 'hIUSubscriptionRequestNotificationAcknowledgement' when calling v05SubscriptionRequestsHiuOnNotifyPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/subscription-requests/hiu/on-notify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05SubscriptionsHiuOnNotifyPost_0 operation.
     * @callback module:api/HiuFacingApi~v05SubscriptionsHiuOnNotifyPost_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Callback API for /subscriptions/hiu/notify to acknowledge receipt of notification.
     * This API is called by HIU as acknowledgement to consent notifications, specifically for cases when consent is REVOKED or EXPIRED. 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/HIUSubscriptionNotificationAcknowledgment} hIUSubscriptionNotificationAcknowledgment 
     * @param {module:api/HiuFacingApi~v05SubscriptionsHiuOnNotifyPost_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05SubscriptionsHiuOnNotifyPost_0(authorization, X_CM_ID, hIUSubscriptionNotificationAcknowledgment, callback) {
      let postBody = hIUSubscriptionNotificationAcknowledgment;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05SubscriptionsHiuOnNotifyPost_0");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05SubscriptionsHiuOnNotifyPost_0");
      }
      // verify the required parameter 'hIUSubscriptionNotificationAcknowledgment' is set
      if (hIUSubscriptionNotificationAcknowledgment === undefined || hIUSubscriptionNotificationAcknowledgment === null) {
        throw new Error("Missing the required parameter 'hIUSubscriptionNotificationAcknowledgment' when calling v05SubscriptionsHiuOnNotifyPost_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/subscriptions/hiu/on-notify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05UsersAuthConfirmPost_1 operation.
     * @callback module:api/HiuFacingApi~v05UsersAuthConfirmPost_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Confirmation request sending token, otp or other authentication details from HIP/HIU for confirmation
     * This API is called by HIP/HIUs to confirm authentication of users. The transactionId returned by the previous callback API /users/auth/on-init must be sent. If Authentication is successful the callback API will send an \"access token\" for subsequent purpose specific API calls. Note only **credential.authCode** or **credential.demographic** should be sent   1. demographic details are only required for  demographic auth as of now.    2. demographic details are required only in MEDIATED cases and if the **auth.mode** so demands. e.g. if **auth.mode** is DEMOGRAPHICS. Usually for demographic authentication, the name, gender and DOB must be exactly as specified in User Account.   3. demographic.identifier is optional, however maybe required if authentication so mandates.    4. credential.authCode is required for other MEDIATED authentication like MOBILE_OTP, AADHAAR_OTP.  
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/PatientAuthConfirmRequest} patientAuthConfirmRequest 
     * @param {module:api/HiuFacingApi~v05UsersAuthConfirmPost_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05UsersAuthConfirmPost_1(authorization, X_CM_ID, patientAuthConfirmRequest, callback) {
      let postBody = patientAuthConfirmRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05UsersAuthConfirmPost_1");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05UsersAuthConfirmPost_1");
      }
      // verify the required parameter 'patientAuthConfirmRequest' is set
      if (patientAuthConfirmRequest === undefined || patientAuthConfirmRequest === null) {
        throw new Error("Missing the required parameter 'patientAuthConfirmRequest' when calling v05UsersAuthConfirmPost_1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/users/auth/confirm', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05UsersAuthFetchModesPost_1 operation.
     * @callback module:api/HiuFacingApi~v05UsersAuthFetchModesPost_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a patient's authentication modes relevant to specified purpose
     * This API is meant for identify supported authentication modes for a patient given a specific purpose 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/PatientAuthModeQueryRequest} patientAuthModeQueryRequest 
     * @param {module:api/HiuFacingApi~v05UsersAuthFetchModesPost_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05UsersAuthFetchModesPost_1(authorization, X_CM_ID, patientAuthModeQueryRequest, callback) {
      let postBody = patientAuthModeQueryRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05UsersAuthFetchModesPost_1");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05UsersAuthFetchModesPost_1");
      }
      // verify the required parameter 'patientAuthModeQueryRequest' is set
      if (patientAuthModeQueryRequest === undefined || patientAuthModeQueryRequest === null) {
        throw new Error("Missing the required parameter 'patientAuthModeQueryRequest' when calling v05UsersAuthFetchModesPost_1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/users/auth/fetch-modes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05UsersAuthInitPost_1 operation.
     * @callback module:api/HiuFacingApi~v05UsersAuthInitPost_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Initialize authentication from HIP
     * This API is called by HIPs to initiate authentication of users. A transactionId is retuned by the corresponding callback API for confirmation of user auth. 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/PatientAuthInitRequest} patientAuthInitRequest 
     * @param {module:api/HiuFacingApi~v05UsersAuthInitPost_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05UsersAuthInitPost_1(authorization, X_CM_ID, patientAuthInitRequest, callback) {
      let postBody = patientAuthInitRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05UsersAuthInitPost_1");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05UsersAuthInitPost_1");
      }
      // verify the required parameter 'patientAuthInitRequest' is set
      if (patientAuthInitRequest === undefined || patientAuthInitRequest === null) {
        throw new Error("Missing the required parameter 'patientAuthInitRequest' when calling v05UsersAuthInitPost_1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/users/auth/init', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05UsersAuthOnNotifyPost_1 operation.
     * @callback module:api/HiuFacingApi~v05UsersAuthOnNotifyPost_1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * callback API by HIU/HIPs as acknowledgement of auth notification
     * This API is called by HIU/HIPs to confirm acknowledgement for receipt of auth notification is case of DIRECT authentication.  
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/PatientAuthNotificationAcknowledgement} patientAuthNotificationAcknowledgement 
     * @param {module:api/HiuFacingApi~v05UsersAuthOnNotifyPost_1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    v05UsersAuthOnNotifyPost_1(authorization, X_CM_ID, patientAuthNotificationAcknowledgement, callback) {
      let postBody = patientAuthNotificationAcknowledgement;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05UsersAuthOnNotifyPost_1");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05UsersAuthOnNotifyPost_1");
      }
      // verify the required parameter 'patientAuthNotificationAcknowledgement' is set
      if (patientAuthNotificationAcknowledgement === undefined || patientAuthNotificationAcknowledgement === null) {
        throw new Error("Missing the required parameter 'patientAuthNotificationAcknowledgement' when calling v05UsersAuthOnNotifyPost_1");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/users/auth/on-notify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
