/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Certs from '../model/Certs';
import ErrorResponse from '../model/ErrorResponse';
import OpenIdConfiguration from '../model/OpenIdConfiguration';
import SessionRequest from '../model/SessionRequest';
import SessionResponse from '../model/SessionResponse';

/**
* Sessions service.
* @module api/SessionsApi
* @version 0.5
*/
export default class SessionsApi {

    /**
    * Constructs a new SessionsApi. 
    * @alias module:api/SessionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v05CertsGet operation.
     * @callback module:api/SessionsApi~v05CertsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Certs} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get certs for JWT verification
     * @param {module:api/SessionsApi~v05CertsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Certs}
     */
    v05CertsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Certs;
      return this.apiClient.callApi(
        '/v0.5/certs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05SessionsPost operation.
     * @callback module:api/SessionsApi~v05SessionsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SessionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get access token
     * @param {module:model/SessionRequest} sessionRequest 
     * @param {module:api/SessionsApi~v05SessionsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SessionResponse}
     */
    v05SessionsPost(sessionRequest, callback) {
      let postBody = sessionRequest;
      // verify the required parameter 'sessionRequest' is set
      if (sessionRequest === undefined || sessionRequest === null) {
        throw new Error("Missing the required parameter 'sessionRequest' when calling v05SessionsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SessionResponse;
      return this.apiClient.callApi(
        '/v0.5/sessions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05WellKnownOpenidConfigurationGet operation.
     * @callback module:api/SessionsApi~v05WellKnownOpenidConfigurationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OpenIdConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get openid configuration
     * @param {module:api/SessionsApi~v05WellKnownOpenidConfigurationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OpenIdConfiguration}
     */
    v05WellKnownOpenidConfigurationGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = OpenIdConfiguration;
      return this.apiClient.callApi(
        '/v0.5/.well-known/openid-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
