/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import HIPHIRequest from '../model/HIPHIRequest';
import HIPHealthInformationRequestAcknowledgement from '../model/HIPHealthInformationRequestAcknowledgement';
import HIRequest from '../model/HIRequest';
import HIUHealthInformationRequestResponse from '../model/HIUHealthInformationRequestResponse';
import HealthInformationNotification from '../model/HealthInformationNotification';

/**
* DataFlow service.
* @module api/DataFlowApi
* @version 0.5
*/
export default class DataFlowApi {

    /**
    * Constructs a new DataFlowApi. 
    * @alias module:api/DataFlowApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v05HealthInformationCmOnRequestPost operation.
     * @callback module:api/DataFlowApi~v05HealthInformationCmOnRequestPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Health information data request
     * Callback API for acknowledgement of Health information request of HIU. CM calls this API when it has validated the Health Information request given the consent id. Either the **hiRequest** or **error** would need to be specified. If the health info request was valid, then the ***hiRequest.transactionId*** specifies the transaction context against which HIP would send over the data.  Possible cases of errors are   1. **Invalid consent artefact id**   2. **Consent has expired**   3. **Date ranges are invalid** 
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_HIU_ID Identifier of the health information user to which the request was intended.
     * @param {module:model/HIUHealthInformationRequestResponse} hIUHealthInformationRequestResponse 
     * @param {module:api/DataFlowApi~v05HealthInformationCmOnRequestPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v05HealthInformationCmOnRequestPost(authorization, X_HIU_ID, hIUHealthInformationRequestResponse, callback) {
      let postBody = hIUHealthInformationRequestResponse;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05HealthInformationCmOnRequestPost");
      }
      // verify the required parameter 'X_HIU_ID' is set
      if (X_HIU_ID === undefined || X_HIU_ID === null) {
        throw new Error("Missing the required parameter 'X_HIU_ID' when calling v05HealthInformationCmOnRequestPost");
      }
      // verify the required parameter 'hIUHealthInformationRequestResponse' is set
      if (hIUHealthInformationRequestResponse === undefined || hIUHealthInformationRequestResponse === null) {
        throw new Error("Missing the required parameter 'hIUHealthInformationRequestResponse' when calling v05HealthInformationCmOnRequestPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-HIU-ID': X_HIU_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/health-information/cm/on-request', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05HealthInformationCmRequestPost operation.
     * @callback module:api/DataFlowApi~v05HealthInformationCmRequestPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Health information data request
     * Request for Health information against a consent id. CM would generate a transactionId against each consent and pass it as trnasaction context / correlation id to the HIP and also return the same to HIU via /on-request.  
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/HIRequest} hIRequest 
     * @param {module:api/DataFlowApi~v05HealthInformationCmRequestPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v05HealthInformationCmRequestPost(authorization, X_CM_ID, hIRequest, callback) {
      let postBody = hIRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05HealthInformationCmRequestPost");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05HealthInformationCmRequestPost");
      }
      // verify the required parameter 'hIRequest' is set
      if (hIRequest === undefined || hIRequest === null) {
        throw new Error("Missing the required parameter 'hIRequest' when calling v05HealthInformationCmRequestPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/health-information/cm/request', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05HealthInformationHipOnRequestPost operation.
     * @callback module:api/DataFlowApi~v05HealthInformationHipOnRequestPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Health information data request
     * API called by HIP to acknowledge Health information request receipt. Either the **hiRequest** or **error** must be specified. **hiRequest** element returns the same transactionId as before with a status indicating that the request is acknowledged.   
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/HIPHealthInformationRequestAcknowledgement} hIPHealthInformationRequestAcknowledgement 
     * @param {module:api/DataFlowApi~v05HealthInformationHipOnRequestPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v05HealthInformationHipOnRequestPost(authorization, X_CM_ID, hIPHealthInformationRequestAcknowledgement, callback) {
      let postBody = hIPHealthInformationRequestAcknowledgement;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05HealthInformationHipOnRequestPost");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05HealthInformationHipOnRequestPost");
      }
      // verify the required parameter 'hIPHealthInformationRequestAcknowledgement' is set
      if (hIPHealthInformationRequestAcknowledgement === undefined || hIPHealthInformationRequestAcknowledgement === null) {
        throw new Error("Missing the required parameter 'hIPHealthInformationRequestAcknowledgement' when calling v05HealthInformationHipOnRequestPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/health-information/hip/on-request', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05HealthInformationHipRequestPost operation.
     * @callback module:api/DataFlowApi~v05HealthInformationHipRequestPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Health information data request
     * API called by CM to request Health information from HIP against a validated consent artefact. The transactionId is the correlation id that HIP should use use when pushing data to the **dataPushUrl**.  
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_HIP_ID Identifier of the health information provider to which the request was intended.
     * @param {module:model/HIPHIRequest} hIPHIRequest 
     * @param {module:api/DataFlowApi~v05HealthInformationHipRequestPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v05HealthInformationHipRequestPost(authorization, X_HIP_ID, hIPHIRequest, callback) {
      let postBody = hIPHIRequest;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05HealthInformationHipRequestPost");
      }
      // verify the required parameter 'X_HIP_ID' is set
      if (X_HIP_ID === undefined || X_HIP_ID === null) {
        throw new Error("Missing the required parameter 'X_HIP_ID' when calling v05HealthInformationHipRequestPost");
      }
      // verify the required parameter 'hIPHIRequest' is set
      if (hIPHIRequest === undefined || hIPHIRequest === null) {
        throw new Error("Missing the required parameter 'hIPHIRequest' when calling v05HealthInformationHipRequestPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-HIP-ID': X_HIP_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/health-information/hip/request', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v05HealthInformationNotifyPost operation.
     * @callback module:api/DataFlowApi~v05HealthInformationNotifyPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Notifications corresponding to events during data flow
     * API called by HIU and HIP during data-transfer.  1. HIP on transfer of data would send **sessionStatus** - one of [TRANSFERRED, FAILED] 2. HIP would also send **hiStatus** for each *careContextReference* - on of [DELIVERED, ERRORED] 3. HIU on receipt of data would send **sessionStatus** - one of [TRANSFERRED, FAILED]. For example, FAILED when if data was not sent or if invalid data was sent 4. HIU would also send **hiStatus** for each *careContextReference* - one of [OK, ERRORED]  
     * @param {String} authorization Access token which was issued after successful login with gateway auth server.
     * @param {String} X_CM_ID Suffix of the consent manager to which the request was intended.
     * @param {module:model/HealthInformationNotification} healthInformationNotification 
     * @param {module:api/DataFlowApi~v05HealthInformationNotifyPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v05HealthInformationNotifyPost(authorization, X_CM_ID, healthInformationNotification, callback) {
      let postBody = healthInformationNotification;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling v05HealthInformationNotifyPost");
      }
      // verify the required parameter 'X_CM_ID' is set
      if (X_CM_ID === undefined || X_CM_ID === null) {
        throw new Error("Missing the required parameter 'X_CM_ID' when calling v05HealthInformationNotifyPost");
      }
      // verify the required parameter 'healthInformationNotification' is set
      if (healthInformationNotification === undefined || healthInformationNotification === null) {
        throw new Error("Missing the required parameter 'healthInformationNotification' when calling v05HealthInformationNotifyPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-CM-ID': X_CM_ID
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v0.5/health-information/notify', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
