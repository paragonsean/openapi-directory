/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPatientSMSNotifcationRequest_notification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPatientSMSNotifcationRequest_notification::OAIPatientSMSNotifcationRequest_notification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPatientSMSNotifcationRequest_notification::OAIPatientSMSNotifcationRequest_notification() {
    this->initializeModel();
}

OAIPatientSMSNotifcationRequest_notification::~OAIPatientSMSNotifcationRequest_notification() {}

void OAIPatientSMSNotifcationRequest_notification::initializeModel() {

    m_care_context_info_isSet = false;
    m_care_context_info_isValid = false;

    m_deeplink_url_isSet = false;
    m_deeplink_url_isValid = false;

    m_hip_isSet = false;
    m_hip_isValid = false;

    m_phone_no_isSet = false;
    m_phone_no_isValid = false;

    m_receiver_name_isSet = false;
    m_receiver_name_isValid = false;
}

void OAIPatientSMSNotifcationRequest_notification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPatientSMSNotifcationRequest_notification::fromJsonObject(QJsonObject json) {

    m_care_context_info_isValid = ::OpenAPI::fromJsonValue(m_care_context_info, json[QString("careContextInfo")]);
    m_care_context_info_isSet = !json[QString("careContextInfo")].isNull() && m_care_context_info_isValid;

    m_deeplink_url_isValid = ::OpenAPI::fromJsonValue(m_deeplink_url, json[QString("deeplinkUrl")]);
    m_deeplink_url_isSet = !json[QString("deeplinkUrl")].isNull() && m_deeplink_url_isValid;

    m_hip_isValid = ::OpenAPI::fromJsonValue(m_hip, json[QString("hip")]);
    m_hip_isSet = !json[QString("hip")].isNull() && m_hip_isValid;

    m_phone_no_isValid = ::OpenAPI::fromJsonValue(m_phone_no, json[QString("phoneNo")]);
    m_phone_no_isSet = !json[QString("phoneNo")].isNull() && m_phone_no_isValid;

    m_receiver_name_isValid = ::OpenAPI::fromJsonValue(m_receiver_name, json[QString("receiverName")]);
    m_receiver_name_isSet = !json[QString("receiverName")].isNull() && m_receiver_name_isValid;
}

QString OAIPatientSMSNotifcationRequest_notification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPatientSMSNotifcationRequest_notification::asJsonObject() const {
    QJsonObject obj;
    if (m_care_context_info_isSet) {
        obj.insert(QString("careContextInfo"), ::OpenAPI::toJsonValue(m_care_context_info));
    }
    if (m_deeplink_url_isSet) {
        obj.insert(QString("deeplinkUrl"), ::OpenAPI::toJsonValue(m_deeplink_url));
    }
    if (m_hip.isSet()) {
        obj.insert(QString("hip"), ::OpenAPI::toJsonValue(m_hip));
    }
    if (m_phone_no_isSet) {
        obj.insert(QString("phoneNo"), ::OpenAPI::toJsonValue(m_phone_no));
    }
    if (m_receiver_name_isSet) {
        obj.insert(QString("receiverName"), ::OpenAPI::toJsonValue(m_receiver_name));
    }
    return obj;
}

QString OAIPatientSMSNotifcationRequest_notification::getCareContextInfo() const {
    return m_care_context_info;
}
void OAIPatientSMSNotifcationRequest_notification::setCareContextInfo(const QString &care_context_info) {
    m_care_context_info = care_context_info;
    m_care_context_info_isSet = true;
}

bool OAIPatientSMSNotifcationRequest_notification::is_care_context_info_Set() const{
    return m_care_context_info_isSet;
}

bool OAIPatientSMSNotifcationRequest_notification::is_care_context_info_Valid() const{
    return m_care_context_info_isValid;
}

QString OAIPatientSMSNotifcationRequest_notification::getDeeplinkUrl() const {
    return m_deeplink_url;
}
void OAIPatientSMSNotifcationRequest_notification::setDeeplinkUrl(const QString &deeplink_url) {
    m_deeplink_url = deeplink_url;
    m_deeplink_url_isSet = true;
}

bool OAIPatientSMSNotifcationRequest_notification::is_deeplink_url_Set() const{
    return m_deeplink_url_isSet;
}

bool OAIPatientSMSNotifcationRequest_notification::is_deeplink_url_Valid() const{
    return m_deeplink_url_isValid;
}

OAIPatientSMSNotifcationRequest_notification_hip OAIPatientSMSNotifcationRequest_notification::getHip() const {
    return m_hip;
}
void OAIPatientSMSNotifcationRequest_notification::setHip(const OAIPatientSMSNotifcationRequest_notification_hip &hip) {
    m_hip = hip;
    m_hip_isSet = true;
}

bool OAIPatientSMSNotifcationRequest_notification::is_hip_Set() const{
    return m_hip_isSet;
}

bool OAIPatientSMSNotifcationRequest_notification::is_hip_Valid() const{
    return m_hip_isValid;
}

QString OAIPatientSMSNotifcationRequest_notification::getPhoneNo() const {
    return m_phone_no;
}
void OAIPatientSMSNotifcationRequest_notification::setPhoneNo(const QString &phone_no) {
    m_phone_no = phone_no;
    m_phone_no_isSet = true;
}

bool OAIPatientSMSNotifcationRequest_notification::is_phone_no_Set() const{
    return m_phone_no_isSet;
}

bool OAIPatientSMSNotifcationRequest_notification::is_phone_no_Valid() const{
    return m_phone_no_isValid;
}

QString OAIPatientSMSNotifcationRequest_notification::getReceiverName() const {
    return m_receiver_name;
}
void OAIPatientSMSNotifcationRequest_notification::setReceiverName(const QString &receiver_name) {
    m_receiver_name = receiver_name;
    m_receiver_name_isSet = true;
}

bool OAIPatientSMSNotifcationRequest_notification::is_receiver_name_Set() const{
    return m_receiver_name_isSet;
}

bool OAIPatientSMSNotifcationRequest_notification::is_receiver_name_Valid() const{
    return m_receiver_name_isValid;
}

bool OAIPatientSMSNotifcationRequest_notification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_care_context_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deeplink_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hip.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPatientSMSNotifcationRequest_notification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_care_context_info_isValid && m_hip_isValid && m_phone_no_isValid && true;
}

} // namespace OpenAPI
