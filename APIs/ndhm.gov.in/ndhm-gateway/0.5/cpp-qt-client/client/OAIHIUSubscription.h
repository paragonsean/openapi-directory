/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHIUSubscription.h
 *
 * 
 */

#ifndef OAIHIUSubscription_H
#define OAIHIUSubscription_H

#include <QJsonObject>

#include "OAIConsentManagerPatientID.h"
#include "OAIHIUSubscriptionContext.h"
#include "OAIOrganizationRepresentation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrganizationRepresentation;
class OAIConsentManagerPatientID;
class OAIHIUSubscriptionContext;

class OAIHIUSubscription : public OAIObject {
public:
    OAIHIUSubscription();
    OAIHIUSubscription(QString json);
    ~OAIHIUSubscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOrganizationRepresentation getHiu() const;
    void setHiu(const OAIOrganizationRepresentation &hiu);
    bool is_hiu_Set() const;
    bool is_hiu_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIConsentManagerPatientID getPatient() const;
    void setPatient(const OAIConsentManagerPatientID &patient);
    bool is_patient_Set() const;
    bool is_patient_Valid() const;

    QList<OAIHIUSubscriptionContext> getSources() const;
    void setSources(const QList<OAIHIUSubscriptionContext> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOrganizationRepresentation m_hiu;
    bool m_hiu_isSet;
    bool m_hiu_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIConsentManagerPatientID m_patient;
    bool m_patient_isSet;
    bool m_patient_isValid;

    QList<OAIHIUSubscriptionContext> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHIUSubscription)

#endif // OAIHIUSubscription_H
