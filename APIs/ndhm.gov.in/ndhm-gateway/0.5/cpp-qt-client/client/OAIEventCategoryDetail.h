/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventCategoryDetail.h
 *
 * 
 */

#ifndef OAIEventCategoryDetail_H
#define OAIEventCategoryDetail_H

#include <QJsonObject>

#include "OAICareContextDefinition.h"
#include "OAIHITypeEnum.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICareContextDefinition;

class OAIEventCategoryDetail : public OAIObject {
public:
    OAIEventCategoryDetail();
    OAIEventCategoryDetail(QString json);
    ~OAIEventCategoryDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICareContextDefinition getCareContext() const;
    void setCareContext(const OAICareContextDefinition &care_context);
    bool is_care_context_Set() const;
    bool is_care_context_Valid() const;

    QList<OAIHITypeEnum> getHiTypes() const;
    void setHiTypes(const QList<OAIHITypeEnum> &hi_types);
    bool is_hi_types_Set() const;
    bool is_hi_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICareContextDefinition m_care_context;
    bool m_care_context_isSet;
    bool m_care_context_isValid;

    QList<OAIHITypeEnum> m_hi_types;
    bool m_hi_types_isSet;
    bool m_hi_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventCategoryDetail)

#endif // OAIEventCategoryDetail_H
