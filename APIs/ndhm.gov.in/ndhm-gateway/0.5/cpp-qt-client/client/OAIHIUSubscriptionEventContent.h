/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHIUSubscriptionEventContent.h
 *
 * 
 */

#ifndef OAIHIUSubscriptionEventContent_H
#define OAIHIUSubscriptionEventContent_H

#include <QJsonObject>

#include "OAIConsentManagerPatientID.h"
#include "OAIEventCategoryDetail.h"
#include "OAIOrganizationRepresentation.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEventCategoryDetail;
class OAIOrganizationRepresentation;
class OAIConsentManagerPatientID;

class OAIHIUSubscriptionEventContent : public OAIObject {
public:
    OAIHIUSubscriptionEventContent();
    OAIHIUSubscriptionEventContent(QString json);
    ~OAIHIUSubscriptionEventContent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEventCategoryDetail> getContext() const;
    void setContext(const QList<OAIEventCategoryDetail> &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    OAIOrganizationRepresentation getHip() const;
    void setHip(const OAIOrganizationRepresentation &hip);
    bool is_hip_Set() const;
    bool is_hip_Valid() const;

    OAIConsentManagerPatientID getPatient() const;
    void setPatient(const OAIConsentManagerPatientID &patient);
    bool is_patient_Set() const;
    bool is_patient_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEventCategoryDetail> m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    OAIOrganizationRepresentation m_hip;
    bool m_hip_isSet;
    bool m_hip_isValid;

    OAIConsentManagerPatientID m_patient;
    bool m_patient_isSet;
    bool m_patient_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHIUSubscriptionEventContent)

#endif // OAIHIUSubscriptionEventContent_H
