/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatientAuthPurpose.h
 *
 * what is the purpose of user auth
 */

#ifndef OAIPatientAuthPurpose_H
#define OAIPatientAuthPurpose_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPatientAuthPurpose : public OAIEnum {
public:
    OAIPatientAuthPurpose();
    OAIPatientAuthPurpose(QString json);
    ~OAIPatientAuthPurpose() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIPatientAuthPurpose {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        LINK, 
        KYC, 
        KYC_AND_LINK
    };
    OAIPatientAuthPurpose::eOAIPatientAuthPurpose getValue() const;
    void setValue(const OAIPatientAuthPurpose::eOAIPatientAuthPurpose& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIPatientAuthPurpose m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatientAuthPurpose)

#endif // OAIPatientAuthPurpose_H
