/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatientIdentificationRequest_query.h
 *
 * 
 */

#ifndef OAIPatientIdentificationRequest_query_H
#define OAIPatientIdentificationRequest_query_H

#include <QJsonObject>

#include "OAIPatientIdentificationRequest_query_patient.h"
#include "OAIPatientIdentificationRequest_query_requester.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPatientIdentificationRequest_query_patient;
class OAIPatientIdentificationRequest_query_requester;

class OAIPatientIdentificationRequest_query : public OAIObject {
public:
    OAIPatientIdentificationRequest_query();
    OAIPatientIdentificationRequest_query(QString json);
    ~OAIPatientIdentificationRequest_query() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPatientIdentificationRequest_query_patient getPatient() const;
    void setPatient(const OAIPatientIdentificationRequest_query_patient &patient);
    bool is_patient_Set() const;
    bool is_patient_Valid() const;

    OAIPatientIdentificationRequest_query_requester getRequester() const;
    void setRequester(const OAIPatientIdentificationRequest_query_requester &requester);
    bool is_requester_Set() const;
    bool is_requester_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPatientIdentificationRequest_query_patient m_patient;
    bool m_patient_isSet;
    bool m_patient_isValid;

    OAIPatientIdentificationRequest_query_requester m_requester;
    bool m_requester_isSet;
    bool m_requester_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatientIdentificationRequest_query)

#endif // OAIPatientIdentificationRequest_query_H
