/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceRole.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceRole::OAIServiceRole(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceRole::OAIServiceRole() {
    this->initializeModel();
}

OAIServiceRole::~OAIServiceRole() {}

void OAIServiceRole::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIServiceRole::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIServiceRole::fromJson(QString jsonString) {
    
    if ( jsonString.compare("HIP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceRole::HIP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HIU", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceRole::HIU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HIP_AND_HIU", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceRole::HIP_AND_HIU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HEALTH_LOCKER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIServiceRole::HEALTH_LOCKER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIServiceRole::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIServiceRole::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIServiceRole::HIP:
            val = "HIP";
            break;
        case eOAIServiceRole::HIU:
            val = "HIU";
            break;
        case eOAIServiceRole::HIP_AND_HIU:
            val = "HIP_AND_HIU";
            break;
        case eOAIServiceRole::HEALTH_LOCKER:
            val = "HEALTH_LOCKER";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIServiceRole::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIServiceRole::eOAIServiceRole OAIServiceRole::getValue() const {
    return m_value;
}

void OAIServiceRole::setValue(const OAIServiceRole::eOAIServiceRole& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIServiceRole::isSet() const {
    
    return m_value_isSet;
}

bool OAIServiceRole::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
