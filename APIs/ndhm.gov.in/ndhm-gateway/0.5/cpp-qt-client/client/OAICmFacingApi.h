/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAICmFacingApi_H
#define OAI_OAICmFacingApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIConsentArtefactResponse.h"
#include "OAIConsentRequestInitResponse.h"
#include "OAIErrorResponse.h"
#include "OAIHIPConsentNotification.h"
#include "OAIHIPHIRequest.h"
#include "OAIHIUConsentNotificationEvent.h"
#include "OAIHIUConsentRequestStatus.h"
#include "OAIHIUHealthInformationRequestResponse.h"
#include "OAIHIUSubscriptionNotification.h"
#include "OAIHIUSubscriptionRequestReceipt.h"
#include "OAILinkConfirmationRequest.h"
#include "OAIPatientAuthConfirmResponse.h"
#include "OAIPatientAuthInitResponse.h"
#include "OAIPatientAuthModeQueryResponse.h"
#include "OAIPatientAuthNotification.h"
#include "OAIPatientCareContextLinkResponse.h"
#include "OAIPatientDiscoveryRequest.h"
#include "OAIPatientDiscoveryResult.h"
#include "OAIPatientIdentificationResponse.h"
#include "OAIPatientLinkReferenceRequest.h"
#include "OAIPatientSMSNotifcationResponse.h"
#include "OAIShareProfileRequest.h"
#include "OAISubscriptionApprovalNotification.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAICmFacingApi : public QObject {
    Q_OBJECT

public:
    OAICmFacingApi(const int timeOut = 0);
    ~OAICmFacingApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  oai_patient_discovery_request OAIPatientDiscoveryRequest [required]
    */
    virtual void v05CareContextsDiscoverPost(const QString &authorization, const QString &x_hip_id, const OAIPatientDiscoveryRequest &oai_patient_discovery_request);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_cm_id QString [required]
    * @param[in]  oai_patient_discovery_result OAIPatientDiscoveryResult [required]
    */
    virtual void v05CareContextsOnDiscoverPost(const QString &authorization, const QString &x_cm_id, const OAIPatientDiscoveryResult &oai_patient_discovery_result);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oai_consent_request_init_response OAIConsentRequestInitResponse [required]
    */
    virtual void v05ConsentRequestsOnInitPost(const QString &authorization, const QString &x_hiu_id, const OAIConsentRequestInitResponse &oai_consent_request_init_response);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oaihiu_consent_request_status OAIHIUConsentRequestStatus [required]
    */
    virtual void v05ConsentRequestsOnStatusPost(const QString &authorization, const QString &x_hiu_id, const OAIHIUConsentRequestStatus &oaihiu_consent_request_status);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  oaihip_consent_notification OAIHIPConsentNotification [required]
    */
    virtual void v05ConsentsHipNotifyPost(const QString &authorization, const QString &x_hip_id, const OAIHIPConsentNotification &oaihip_consent_notification);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oaihiu_consent_notification_event OAIHIUConsentNotificationEvent [required]
    */
    virtual void v05ConsentsHiuNotifyPost(const QString &authorization, const QString &x_hiu_id, const OAIHIUConsentNotificationEvent &oaihiu_consent_notification_event);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oai_consent_artefact_response OAIConsentArtefactResponse [required]
    */
    virtual void v05ConsentsOnFetchPost(const QString &authorization, const QString &x_hiu_id, const OAIConsentArtefactResponse &oai_consent_artefact_response);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oaihiu_health_information_request_response OAIHIUHealthInformationRequestResponse [required]
    */
    virtual void v05HealthInformationCmOnRequestPost(const QString &authorization, const QString &x_hiu_id, const OAIHIUHealthInformationRequestResponse &oaihiu_health_information_request_response);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  oaihiphi_request OAIHIPHIRequest [required]
    */
    virtual void v05HealthInformationHipRequestPost(const QString &authorization, const QString &x_hip_id, const OAIHIPHIRequest &oaihiphi_request);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  oai_link_confirmation_request OAILinkConfirmationRequest [required]
    */
    virtual void v05LinksLinkConfirmPost(const QString &authorization, const QString &x_hip_id, const OAILinkConfirmationRequest &oai_link_confirmation_request);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  oai_patient_link_reference_request OAIPatientLinkReferenceRequest [required]
    */
    virtual void v05LinksLinkInitPost(const QString &authorization, const QString &x_hip_id, const OAIPatientLinkReferenceRequest &oai_patient_link_reference_request);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  oai_patient_care_context_link_response OAIPatientCareContextLinkResponse [required]
    */
    virtual void v05LinksLinkOnAddContextsPost(const QString &authorization, const QString &x_hip_id, const OAIPatientCareContextLinkResponse &oai_patient_care_context_link_response);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  oai_patient_identification_response OAIPatientIdentificationResponse [required]
    */
    virtual void v05PatientsOnFindPost(const QString &authorization, const OAIPatientIdentificationResponse &oai_patient_identification_response);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  oai_share_profile_request OAIShareProfileRequest [required]
    */
    virtual void v05PatientsProfileSharePost(const QString &authorization, const QString &x_hip_id, const OAIShareProfileRequest &oai_share_profile_request);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  oai_patient_sms_notifcation_response OAIPatientSMSNotifcationResponse [required]
    */
    virtual void v05PatientsSmsOnNotifyPost(const QString &authorization, const QString &x_hip_id, const OAIPatientSMSNotifcationResponse &oai_patient_sms_notifcation_response);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oaihiu_subscription_request_receipt OAIHIUSubscriptionRequestReceipt [required]
    */
    virtual void v05SubscriptionRequestsCmOnInitPost(const QString &authorization, const QString &x_hiu_id, const OAIHIUSubscriptionRequestReceipt &oaihiu_subscription_request_receipt);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oai_subscription_approval_notification OAISubscriptionApprovalNotification [required]
    */
    virtual void v05SubscriptionRequestsHiuNotifyPost(const QString &authorization, const QString &x_hiu_id, const OAISubscriptionApprovalNotification &oai_subscription_approval_notification);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oaihiu_subscription_notification OAIHIUSubscriptionNotification [required]
    */
    virtual void v05SubscriptionsHiuNotifyPost(const QString &authorization, const QString &x_hiu_id, const OAIHIUSubscriptionNotification &oaihiu_subscription_notification);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oai_patient_auth_notification OAIPatientAuthNotification [required]
    */
    virtual void v05UsersAuthNotifyPost(const QString &authorization, const QString &x_hip_id, const QString &x_hiu_id, const OAIPatientAuthNotification &oai_patient_auth_notification);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oai_patient_auth_confirm_response OAIPatientAuthConfirmResponse [required]
    */
    virtual void v05UsersAuthOnConfirmPost(const QString &authorization, const QString &x_hip_id, const QString &x_hiu_id, const OAIPatientAuthConfirmResponse &oai_patient_auth_confirm_response);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oai_patient_auth_mode_query_response OAIPatientAuthModeQueryResponse [required]
    */
    virtual void v05UsersAuthOnFetchModesPost(const QString &authorization, const QString &x_hip_id, const QString &x_hiu_id, const OAIPatientAuthModeQueryResponse &oai_patient_auth_mode_query_response);

    /**
    * @param[in]  authorization QString [required]
    * @param[in]  x_hip_id QString [required]
    * @param[in]  x_hiu_id QString [required]
    * @param[in]  oai_patient_auth_init_response OAIPatientAuthInitResponse [required]
    */
    virtual void v05UsersAuthOnInitPost(const QString &authorization, const QString &x_hip_id, const QString &x_hiu_id, const OAIPatientAuthInitResponse &oai_patient_auth_init_response);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void v05CareContextsDiscoverPostCallback(OAIHttpRequestWorker *worker);
    void v05CareContextsOnDiscoverPostCallback(OAIHttpRequestWorker *worker);
    void v05ConsentRequestsOnInitPostCallback(OAIHttpRequestWorker *worker);
    void v05ConsentRequestsOnStatusPostCallback(OAIHttpRequestWorker *worker);
    void v05ConsentsHipNotifyPostCallback(OAIHttpRequestWorker *worker);
    void v05ConsentsHiuNotifyPostCallback(OAIHttpRequestWorker *worker);
    void v05ConsentsOnFetchPostCallback(OAIHttpRequestWorker *worker);
    void v05HealthInformationCmOnRequestPostCallback(OAIHttpRequestWorker *worker);
    void v05HealthInformationHipRequestPostCallback(OAIHttpRequestWorker *worker);
    void v05LinksLinkConfirmPostCallback(OAIHttpRequestWorker *worker);
    void v05LinksLinkInitPostCallback(OAIHttpRequestWorker *worker);
    void v05LinksLinkOnAddContextsPostCallback(OAIHttpRequestWorker *worker);
    void v05PatientsOnFindPostCallback(OAIHttpRequestWorker *worker);
    void v05PatientsProfileSharePostCallback(OAIHttpRequestWorker *worker);
    void v05PatientsSmsOnNotifyPostCallback(OAIHttpRequestWorker *worker);
    void v05SubscriptionRequestsCmOnInitPostCallback(OAIHttpRequestWorker *worker);
    void v05SubscriptionRequestsHiuNotifyPostCallback(OAIHttpRequestWorker *worker);
    void v05SubscriptionsHiuNotifyPostCallback(OAIHttpRequestWorker *worker);
    void v05UsersAuthNotifyPostCallback(OAIHttpRequestWorker *worker);
    void v05UsersAuthOnConfirmPostCallback(OAIHttpRequestWorker *worker);
    void v05UsersAuthOnFetchModesPostCallback(OAIHttpRequestWorker *worker);
    void v05UsersAuthOnInitPostCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void v05CareContextsDiscoverPostSignal();
    void v05CareContextsOnDiscoverPostSignal();
    void v05ConsentRequestsOnInitPostSignal();
    void v05ConsentRequestsOnStatusPostSignal();
    void v05ConsentsHipNotifyPostSignal();
    void v05ConsentsHiuNotifyPostSignal();
    void v05ConsentsOnFetchPostSignal();
    void v05HealthInformationCmOnRequestPostSignal();
    void v05HealthInformationHipRequestPostSignal();
    void v05LinksLinkConfirmPostSignal();
    void v05LinksLinkInitPostSignal();
    void v05LinksLinkOnAddContextsPostSignal();
    void v05PatientsOnFindPostSignal();
    void v05PatientsProfileSharePostSignal();
    void v05PatientsSmsOnNotifyPostSignal();
    void v05SubscriptionRequestsCmOnInitPostSignal();
    void v05SubscriptionRequestsHiuNotifyPostSignal();
    void v05SubscriptionsHiuNotifyPostSignal();
    void v05UsersAuthNotifyPostSignal();
    void v05UsersAuthOnConfirmPostSignal();
    void v05UsersAuthOnFetchModesPostSignal();
    void v05UsersAuthOnInitPostSignal();


    void v05CareContextsDiscoverPostSignalFull(OAIHttpRequestWorker *worker);
    void v05CareContextsOnDiscoverPostSignalFull(OAIHttpRequestWorker *worker);
    void v05ConsentRequestsOnInitPostSignalFull(OAIHttpRequestWorker *worker);
    void v05ConsentRequestsOnStatusPostSignalFull(OAIHttpRequestWorker *worker);
    void v05ConsentsHipNotifyPostSignalFull(OAIHttpRequestWorker *worker);
    void v05ConsentsHiuNotifyPostSignalFull(OAIHttpRequestWorker *worker);
    void v05ConsentsOnFetchPostSignalFull(OAIHttpRequestWorker *worker);
    void v05HealthInformationCmOnRequestPostSignalFull(OAIHttpRequestWorker *worker);
    void v05HealthInformationHipRequestPostSignalFull(OAIHttpRequestWorker *worker);
    void v05LinksLinkConfirmPostSignalFull(OAIHttpRequestWorker *worker);
    void v05LinksLinkInitPostSignalFull(OAIHttpRequestWorker *worker);
    void v05LinksLinkOnAddContextsPostSignalFull(OAIHttpRequestWorker *worker);
    void v05PatientsOnFindPostSignalFull(OAIHttpRequestWorker *worker);
    void v05PatientsProfileSharePostSignalFull(OAIHttpRequestWorker *worker);
    void v05PatientsSmsOnNotifyPostSignalFull(OAIHttpRequestWorker *worker);
    void v05SubscriptionRequestsCmOnInitPostSignalFull(OAIHttpRequestWorker *worker);
    void v05SubscriptionRequestsHiuNotifyPostSignalFull(OAIHttpRequestWorker *worker);
    void v05SubscriptionsHiuNotifyPostSignalFull(OAIHttpRequestWorker *worker);
    void v05UsersAuthNotifyPostSignalFull(OAIHttpRequestWorker *worker);
    void v05UsersAuthOnConfirmPostSignalFull(OAIHttpRequestWorker *worker);
    void v05UsersAuthOnFetchModesPostSignalFull(OAIHttpRequestWorker *worker);
    void v05UsersAuthOnInitPostSignalFull(OAIHttpRequestWorker *worker);

    Q_DECL_DEPRECATED_X("Use v05CareContextsDiscoverPostSignalError() instead")
    void v05CareContextsDiscoverPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05CareContextsDiscoverPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05CareContextsOnDiscoverPostSignalError() instead")
    void v05CareContextsOnDiscoverPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05CareContextsOnDiscoverPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentRequestsOnInitPostSignalError() instead")
    void v05ConsentRequestsOnInitPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentRequestsOnInitPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentRequestsOnStatusPostSignalError() instead")
    void v05ConsentRequestsOnStatusPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentRequestsOnStatusPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentsHipNotifyPostSignalError() instead")
    void v05ConsentsHipNotifyPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentsHipNotifyPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentsHiuNotifyPostSignalError() instead")
    void v05ConsentsHiuNotifyPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentsHiuNotifyPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentsOnFetchPostSignalError() instead")
    void v05ConsentsOnFetchPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentsOnFetchPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05HealthInformationCmOnRequestPostSignalError() instead")
    void v05HealthInformationCmOnRequestPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05HealthInformationCmOnRequestPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05HealthInformationHipRequestPostSignalError() instead")
    void v05HealthInformationHipRequestPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05HealthInformationHipRequestPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05LinksLinkConfirmPostSignalError() instead")
    void v05LinksLinkConfirmPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05LinksLinkConfirmPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05LinksLinkInitPostSignalError() instead")
    void v05LinksLinkInitPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05LinksLinkInitPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05LinksLinkOnAddContextsPostSignalError() instead")
    void v05LinksLinkOnAddContextsPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05LinksLinkOnAddContextsPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05PatientsOnFindPostSignalError() instead")
    void v05PatientsOnFindPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05PatientsOnFindPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05PatientsProfileSharePostSignalError() instead")
    void v05PatientsProfileSharePostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05PatientsProfileSharePostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05PatientsSmsOnNotifyPostSignalError() instead")
    void v05PatientsSmsOnNotifyPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05PatientsSmsOnNotifyPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05SubscriptionRequestsCmOnInitPostSignalError() instead")
    void v05SubscriptionRequestsCmOnInitPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05SubscriptionRequestsCmOnInitPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05SubscriptionRequestsHiuNotifyPostSignalError() instead")
    void v05SubscriptionRequestsHiuNotifyPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05SubscriptionRequestsHiuNotifyPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05SubscriptionsHiuNotifyPostSignalError() instead")
    void v05SubscriptionsHiuNotifyPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05SubscriptionsHiuNotifyPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05UsersAuthNotifyPostSignalError() instead")
    void v05UsersAuthNotifyPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05UsersAuthNotifyPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05UsersAuthOnConfirmPostSignalError() instead")
    void v05UsersAuthOnConfirmPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05UsersAuthOnConfirmPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05UsersAuthOnFetchModesPostSignalError() instead")
    void v05UsersAuthOnFetchModesPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05UsersAuthOnFetchModesPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05UsersAuthOnInitPostSignalError() instead")
    void v05UsersAuthOnInitPostSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void v05UsersAuthOnInitPostSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use v05CareContextsDiscoverPostSignalErrorFull() instead")
    void v05CareContextsDiscoverPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05CareContextsDiscoverPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05CareContextsOnDiscoverPostSignalErrorFull() instead")
    void v05CareContextsOnDiscoverPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05CareContextsOnDiscoverPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentRequestsOnInitPostSignalErrorFull() instead")
    void v05ConsentRequestsOnInitPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentRequestsOnInitPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentRequestsOnStatusPostSignalErrorFull() instead")
    void v05ConsentRequestsOnStatusPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentRequestsOnStatusPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentsHipNotifyPostSignalErrorFull() instead")
    void v05ConsentsHipNotifyPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentsHipNotifyPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentsHiuNotifyPostSignalErrorFull() instead")
    void v05ConsentsHiuNotifyPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentsHiuNotifyPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05ConsentsOnFetchPostSignalErrorFull() instead")
    void v05ConsentsOnFetchPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05ConsentsOnFetchPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05HealthInformationCmOnRequestPostSignalErrorFull() instead")
    void v05HealthInformationCmOnRequestPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05HealthInformationCmOnRequestPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05HealthInformationHipRequestPostSignalErrorFull() instead")
    void v05HealthInformationHipRequestPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05HealthInformationHipRequestPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05LinksLinkConfirmPostSignalErrorFull() instead")
    void v05LinksLinkConfirmPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05LinksLinkConfirmPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05LinksLinkInitPostSignalErrorFull() instead")
    void v05LinksLinkInitPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05LinksLinkInitPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05LinksLinkOnAddContextsPostSignalErrorFull() instead")
    void v05LinksLinkOnAddContextsPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05LinksLinkOnAddContextsPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05PatientsOnFindPostSignalErrorFull() instead")
    void v05PatientsOnFindPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05PatientsOnFindPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05PatientsProfileSharePostSignalErrorFull() instead")
    void v05PatientsProfileSharePostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05PatientsProfileSharePostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05PatientsSmsOnNotifyPostSignalErrorFull() instead")
    void v05PatientsSmsOnNotifyPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05PatientsSmsOnNotifyPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05SubscriptionRequestsCmOnInitPostSignalErrorFull() instead")
    void v05SubscriptionRequestsCmOnInitPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05SubscriptionRequestsCmOnInitPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05SubscriptionRequestsHiuNotifyPostSignalErrorFull() instead")
    void v05SubscriptionRequestsHiuNotifyPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05SubscriptionRequestsHiuNotifyPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05SubscriptionsHiuNotifyPostSignalErrorFull() instead")
    void v05SubscriptionsHiuNotifyPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05SubscriptionsHiuNotifyPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05UsersAuthNotifyPostSignalErrorFull() instead")
    void v05UsersAuthNotifyPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05UsersAuthNotifyPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05UsersAuthOnConfirmPostSignalErrorFull() instead")
    void v05UsersAuthOnConfirmPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05UsersAuthOnConfirmPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05UsersAuthOnFetchModesPostSignalErrorFull() instead")
    void v05UsersAuthOnFetchModesPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05UsersAuthOnFetchModesPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use v05UsersAuthOnInitPostSignalErrorFull() instead")
    void v05UsersAuthOnInitPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void v05UsersAuthOnInitPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
