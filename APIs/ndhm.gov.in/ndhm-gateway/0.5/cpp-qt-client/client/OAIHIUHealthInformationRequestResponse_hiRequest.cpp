/**
 * Gateway
 * Gateway is the hub that routes/orchestrates the interaction between consent managers and API bridges. There are 5 categories of APIs; discovery, link, consent flow, data flow and  monitoring. To reflect the consumers of APIs, the above apis are also categorized under cm facing, hiu facing and hip facing  
 *
 * The version of the OpenAPI document: 0.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHIUHealthInformationRequestResponse_hiRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHIUHealthInformationRequestResponse_hiRequest::OAIHIUHealthInformationRequestResponse_hiRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHIUHealthInformationRequestResponse_hiRequest::OAIHIUHealthInformationRequestResponse_hiRequest() {
    this->initializeModel();
}

OAIHIUHealthInformationRequestResponse_hiRequest::~OAIHIUHealthInformationRequestResponse_hiRequest() {}

void OAIHIUHealthInformationRequestResponse_hiRequest::initializeModel() {

    m_session_status_isSet = false;
    m_session_status_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;
}

void OAIHIUHealthInformationRequestResponse_hiRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHIUHealthInformationRequestResponse_hiRequest::fromJsonObject(QJsonObject json) {

    m_session_status_isValid = ::OpenAPI::fromJsonValue(m_session_status, json[QString("sessionStatus")]);
    m_session_status_isSet = !json[QString("sessionStatus")].isNull() && m_session_status_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transactionId")]);
    m_transaction_id_isSet = !json[QString("transactionId")].isNull() && m_transaction_id_isValid;
}

QString OAIHIUHealthInformationRequestResponse_hiRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHIUHealthInformationRequestResponse_hiRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_session_status_isSet) {
        obj.insert(QString("sessionStatus"), ::OpenAPI::toJsonValue(m_session_status));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transactionId"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    return obj;
}

QString OAIHIUHealthInformationRequestResponse_hiRequest::getSessionStatus() const {
    return m_session_status;
}
void OAIHIUHealthInformationRequestResponse_hiRequest::setSessionStatus(const QString &session_status) {
    m_session_status = session_status;
    m_session_status_isSet = true;
}

bool OAIHIUHealthInformationRequestResponse_hiRequest::is_session_status_Set() const{
    return m_session_status_isSet;
}

bool OAIHIUHealthInformationRequestResponse_hiRequest::is_session_status_Valid() const{
    return m_session_status_isValid;
}

QString OAIHIUHealthInformationRequestResponse_hiRequest::getTransactionId() const {
    return m_transaction_id;
}
void OAIHIUHealthInformationRequestResponse_hiRequest::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIHIUHealthInformationRequestResponse_hiRequest::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIHIUHealthInformationRequestResponse_hiRequest::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

bool OAIHIUHealthInformationRequestResponse_hiRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_session_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHIUHealthInformationRequestResponse_hiRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_session_status_isValid && m_transaction_id_isValid && true;
}

} // namespace OpenAPI
