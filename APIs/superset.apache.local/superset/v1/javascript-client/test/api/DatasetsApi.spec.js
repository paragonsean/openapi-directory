/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Superset.DatasetsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DatasetsApi', function() {
    describe('datasetDelete', function() {
      it('should call datasetDelete successfully', function(done) {
        //uncomment below and update the code to test datasetDelete
        //instance.datasetDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetDistinctColumnNameGet', function() {
      it('should call datasetDistinctColumnNameGet successfully', function(done) {
        //uncomment below and update the code to test datasetDistinctColumnNameGet
        //instance.datasetDistinctColumnNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetExportGet', function() {
      it('should call datasetExportGet successfully', function(done) {
        //uncomment below and update the code to test datasetExportGet
        //instance.datasetExportGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetGet', function() {
      it('should call datasetGet successfully', function(done) {
        //uncomment below and update the code to test datasetGet
        //instance.datasetGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetImportPost', function() {
      it('should call datasetImportPost successfully', function(done) {
        //uncomment below and update the code to test datasetImportPost
        //instance.datasetImportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetInfoGet', function() {
      it('should call datasetInfoGet successfully', function(done) {
        //uncomment below and update the code to test datasetInfoGet
        //instance.datasetInfoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetPkColumnColumnIdDelete', function() {
      it('should call datasetPkColumnColumnIdDelete successfully', function(done) {
        //uncomment below and update the code to test datasetPkColumnColumnIdDelete
        //instance.datasetPkColumnColumnIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetPkDelete', function() {
      it('should call datasetPkDelete successfully', function(done) {
        //uncomment below and update the code to test datasetPkDelete
        //instance.datasetPkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetPkGet', function() {
      it('should call datasetPkGet successfully', function(done) {
        //uncomment below and update the code to test datasetPkGet
        //instance.datasetPkGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetPkMetricMetricIdDelete', function() {
      it('should call datasetPkMetricMetricIdDelete successfully', function(done) {
        //uncomment below and update the code to test datasetPkMetricMetricIdDelete
        //instance.datasetPkMetricMetricIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetPkPut', function() {
      it('should call datasetPkPut successfully', function(done) {
        //uncomment below and update the code to test datasetPkPut
        //instance.datasetPkPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetPkRefreshPut', function() {
      it('should call datasetPkRefreshPut successfully', function(done) {
        //uncomment below and update the code to test datasetPkRefreshPut
        //instance.datasetPkRefreshPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetPkRelatedObjectsGet', function() {
      it('should call datasetPkRelatedObjectsGet successfully', function(done) {
        //uncomment below and update the code to test datasetPkRelatedObjectsGet
        //instance.datasetPkRelatedObjectsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetPost', function() {
      it('should call datasetPost successfully', function(done) {
        //uncomment below and update the code to test datasetPost
        //instance.datasetPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datasetRelatedColumnNameGet', function() {
      it('should call datasetRelatedColumnNameGet successfully', function(done) {
        //uncomment below and update the code to test datasetRelatedColumnNameGet
        //instance.datasetRelatedColumnNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
