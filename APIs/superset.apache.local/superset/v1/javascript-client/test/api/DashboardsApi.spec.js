/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Superset.DashboardsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DashboardsApi', function() {
    describe('dashboardDelete', function() {
      it('should call dashboardDelete successfully', function(done) {
        //uncomment below and update the code to test dashboardDelete
        //instance.dashboardDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardExportGet', function() {
      it('should call dashboardExportGet successfully', function(done) {
        //uncomment below and update the code to test dashboardExportGet
        //instance.dashboardExportGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardFavoriteStatusGet', function() {
      it('should call dashboardFavoriteStatusGet successfully', function(done) {
        //uncomment below and update the code to test dashboardFavoriteStatusGet
        //instance.dashboardFavoriteStatusGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardGet', function() {
      it('should call dashboardGet successfully', function(done) {
        //uncomment below and update the code to test dashboardGet
        //instance.dashboardGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardIdOrSlugChartsGet', function() {
      it('should call dashboardIdOrSlugChartsGet successfully', function(done) {
        //uncomment below and update the code to test dashboardIdOrSlugChartsGet
        //instance.dashboardIdOrSlugChartsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardIdOrSlugDatasetsGet', function() {
      it('should call dashboardIdOrSlugDatasetsGet successfully', function(done) {
        //uncomment below and update the code to test dashboardIdOrSlugDatasetsGet
        //instance.dashboardIdOrSlugDatasetsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardIdOrSlugGet', function() {
      it('should call dashboardIdOrSlugGet successfully', function(done) {
        //uncomment below and update the code to test dashboardIdOrSlugGet
        //instance.dashboardIdOrSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardImportPost', function() {
      it('should call dashboardImportPost successfully', function(done) {
        //uncomment below and update the code to test dashboardImportPost
        //instance.dashboardImportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardInfoGet', function() {
      it('should call dashboardInfoGet successfully', function(done) {
        //uncomment below and update the code to test dashboardInfoGet
        //instance.dashboardInfoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardPkDelete', function() {
      it('should call dashboardPkDelete successfully', function(done) {
        //uncomment below and update the code to test dashboardPkDelete
        //instance.dashboardPkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardPkPut', function() {
      it('should call dashboardPkPut successfully', function(done) {
        //uncomment below and update the code to test dashboardPkPut
        //instance.dashboardPkPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardPkThumbnailDigestGet', function() {
      it('should call dashboardPkThumbnailDigestGet successfully', function(done) {
        //uncomment below and update the code to test dashboardPkThumbnailDigestGet
        //instance.dashboardPkThumbnailDigestGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardPost', function() {
      it('should call dashboardPost successfully', function(done) {
        //uncomment below and update the code to test dashboardPost
        //instance.dashboardPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dashboardRelatedColumnNameGet', function() {
      it('should call dashboardRelatedColumnNameGet successfully', function(done) {
        //uncomment below and update the code to test dashboardRelatedColumnNameGet
        //instance.dashboardRelatedColumnNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
