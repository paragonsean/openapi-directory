/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Superset);
  }
}(this, function(expect, Superset) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Superset.DatabaseApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DatabaseApi', function() {
    describe('databaseAvailableGet', function() {
      it('should call databaseAvailableGet successfully', function(done) {
        //uncomment below and update the code to test databaseAvailableGet
        //instance.databaseAvailableGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseExportGet', function() {
      it('should call databaseExportGet successfully', function(done) {
        //uncomment below and update the code to test databaseExportGet
        //instance.databaseExportGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseGet', function() {
      it('should call databaseGet successfully', function(done) {
        //uncomment below and update the code to test databaseGet
        //instance.databaseGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseImportPost', function() {
      it('should call databaseImportPost successfully', function(done) {
        //uncomment below and update the code to test databaseImportPost
        //instance.databaseImportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseInfoGet', function() {
      it('should call databaseInfoGet successfully', function(done) {
        //uncomment below and update the code to test databaseInfoGet
        //instance.databaseInfoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePkDelete', function() {
      it('should call databasePkDelete successfully', function(done) {
        //uncomment below and update the code to test databasePkDelete
        //instance.databasePkDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePkFunctionNamesGet', function() {
      it('should call databasePkFunctionNamesGet successfully', function(done) {
        //uncomment below and update the code to test databasePkFunctionNamesGet
        //instance.databasePkFunctionNamesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePkGet', function() {
      it('should call databasePkGet successfully', function(done) {
        //uncomment below and update the code to test databasePkGet
        //instance.databasePkGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePkPut', function() {
      it('should call databasePkPut successfully', function(done) {
        //uncomment below and update the code to test databasePkPut
        //instance.databasePkPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePkRelatedObjectsGet', function() {
      it('should call databasePkRelatedObjectsGet successfully', function(done) {
        //uncomment below and update the code to test databasePkRelatedObjectsGet
        //instance.databasePkRelatedObjectsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePkSchemasGet', function() {
      it('should call databasePkSchemasGet successfully', function(done) {
        //uncomment below and update the code to test databasePkSchemasGet
        //instance.databasePkSchemasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePkSelectStarTableNameGet', function() {
      it('should call databasePkSelectStarTableNameGet successfully', function(done) {
        //uncomment below and update the code to test databasePkSelectStarTableNameGet
        //instance.databasePkSelectStarTableNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePkSelectStarTableNameSchemaNameGet', function() {
      it('should call databasePkSelectStarTableNameSchemaNameGet successfully', function(done) {
        //uncomment below and update the code to test databasePkSelectStarTableNameSchemaNameGet
        //instance.databasePkSelectStarTableNameSchemaNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePkTableTableNameSchemaNameGet', function() {
      it('should call databasePkTableTableNameSchemaNameGet successfully', function(done) {
        //uncomment below and update the code to test databasePkTableTableNameSchemaNameGet
        //instance.databasePkTableTableNameSchemaNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databasePost', function() {
      it('should call databasePost successfully', function(done) {
        //uncomment below and update the code to test databasePost
        //instance.databasePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseTestConnectionPost', function() {
      it('should call databaseTestConnectionPost successfully', function(done) {
        //uncomment below and update the code to test databaseTestConnectionPost
        //instance.databaseTestConnectionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('databaseValidateParametersPost', function() {
      it('should call databaseValidateParametersPost successfully', function(done) {
        //uncomment below and update the code to test databaseValidateParametersPost
        //instance.databaseValidateParametersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
