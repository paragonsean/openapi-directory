/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChartDataAsyncResponseSchema model module.
 * @module model/ChartDataAsyncResponseSchema
 * @version v1
 */
class ChartDataAsyncResponseSchema {
    /**
     * Constructs a new <code>ChartDataAsyncResponseSchema</code>.
     * @alias module:model/ChartDataAsyncResponseSchema
     */
    constructor() { 
        
        ChartDataAsyncResponseSchema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChartDataAsyncResponseSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChartDataAsyncResponseSchema} obj Optional instance to populate.
     * @return {module:model/ChartDataAsyncResponseSchema} The populated <code>ChartDataAsyncResponseSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChartDataAsyncResponseSchema();

            if (data.hasOwnProperty('channel_id')) {
                obj['channel_id'] = ApiClient.convertToType(data['channel_id'], 'String');
            }
            if (data.hasOwnProperty('job_id')) {
                obj['job_id'] = ApiClient.convertToType(data['job_id'], 'String');
            }
            if (data.hasOwnProperty('result_url')) {
                obj['result_url'] = ApiClient.convertToType(data['result_url'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChartDataAsyncResponseSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChartDataAsyncResponseSchema</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channel_id'] && !(typeof data['channel_id'] === 'string' || data['channel_id'] instanceof String)) {
            throw new Error("Expected the field `channel_id` to be a primitive type in the JSON string but got " + data['channel_id']);
        }
        // ensure the json data is a string
        if (data['job_id'] && !(typeof data['job_id'] === 'string' || data['job_id'] instanceof String)) {
            throw new Error("Expected the field `job_id` to be a primitive type in the JSON string but got " + data['job_id']);
        }
        // ensure the json data is a string
        if (data['result_url'] && !(typeof data['result_url'] === 'string' || data['result_url'] instanceof String)) {
            throw new Error("Expected the field `result_url` to be a primitive type in the JSON string but got " + data['result_url']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }

        return true;
    }


}



/**
 * Unique session async channel ID
 * @member {String} channel_id
 */
ChartDataAsyncResponseSchema.prototype['channel_id'] = undefined;

/**
 * Unique async job ID
 * @member {String} job_id
 */
ChartDataAsyncResponseSchema.prototype['job_id'] = undefined;

/**
 * Unique result URL for fetching async query data
 * @member {String} result_url
 */
ChartDataAsyncResponseSchema.prototype['result_url'] = undefined;

/**
 * Status value for async job
 * @member {String} status
 */
ChartDataAsyncResponseSchema.prototype['status'] = undefined;

/**
 * Requesting user ID
 * @member {String} user_id
 */
ChartDataAsyncResponseSchema.prototype['user_id'] = undefined;






export default ChartDataAsyncResponseSchema;

