/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Meta22 from './Meta22';
import Meta23 from './Meta23';
import Meta24 from './Meta24';
import Meta25 from './Meta25';

/**
 * The DatasetRestApiGet model module.
 * @module model/DatasetRestApiGet
 * @version v1
 */
class DatasetRestApiGet {
    /**
     * Constructs a new <code>DatasetRestApiGet</code>.
     * @alias module:model/DatasetRestApiGet
     * @param columns {module:model/Meta22} 
     * @param database {module:model/Meta23} 
     * @param metrics {module:model/Meta25} 
     * @param tableName {String} 
     */
    constructor(columns, database, metrics, tableName) { 
        
        DatasetRestApiGet.initialize(this, columns, database, metrics, tableName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, columns, database, metrics, tableName) { 
        obj['columns'] = columns;
        obj['database'] = database;
        obj['metrics'] = metrics;
        obj['table_name'] = tableName;
    }

    /**
     * Constructs a <code>DatasetRestApiGet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatasetRestApiGet} obj Optional instance to populate.
     * @return {module:model/DatasetRestApiGet} The populated <code>DatasetRestApiGet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatasetRestApiGet();

            if (data.hasOwnProperty('cache_timeout')) {
                obj['cache_timeout'] = ApiClient.convertToType(data['cache_timeout'], 'Number');
            }
            if (data.hasOwnProperty('columns')) {
                obj['columns'] = Meta22.constructFromObject(data['columns']);
            }
            if (data.hasOwnProperty('database')) {
                obj['database'] = Meta23.constructFromObject(data['database']);
            }
            if (data.hasOwnProperty('datasource_type')) {
                obj['datasource_type'] = ApiClient.convertToType(data['datasource_type'], Object);
            }
            if (data.hasOwnProperty('default_endpoint')) {
                obj['default_endpoint'] = ApiClient.convertToType(data['default_endpoint'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('extra')) {
                obj['extra'] = ApiClient.convertToType(data['extra'], 'String');
            }
            if (data.hasOwnProperty('fetch_values_predicate')) {
                obj['fetch_values_predicate'] = ApiClient.convertToType(data['fetch_values_predicate'], 'String');
            }
            if (data.hasOwnProperty('filter_select_enabled')) {
                obj['filter_select_enabled'] = ApiClient.convertToType(data['filter_select_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('is_sqllab_view')) {
                obj['is_sqllab_view'] = ApiClient.convertToType(data['is_sqllab_view'], 'Boolean');
            }
            if (data.hasOwnProperty('main_dttm_col')) {
                obj['main_dttm_col'] = ApiClient.convertToType(data['main_dttm_col'], 'String');
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = Meta25.constructFromObject(data['metrics']);
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('owners')) {
                obj['owners'] = Meta24.constructFromObject(data['owners']);
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], 'String');
            }
            if (data.hasOwnProperty('sql')) {
                obj['sql'] = ApiClient.convertToType(data['sql'], 'String');
            }
            if (data.hasOwnProperty('table_name')) {
                obj['table_name'] = ApiClient.convertToType(data['table_name'], 'String');
            }
            if (data.hasOwnProperty('template_params')) {
                obj['template_params'] = ApiClient.convertToType(data['template_params'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatasetRestApiGet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatasetRestApiGet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DatasetRestApiGet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `columns`
        if (data['columns']) { // data not null
          Meta22.validateJSON(data['columns']);
        }
        // validate the optional field `database`
        if (data['database']) { // data not null
          Meta23.validateJSON(data['database']);
        }
        // ensure the json data is a string
        if (data['default_endpoint'] && !(typeof data['default_endpoint'] === 'string' || data['default_endpoint'] instanceof String)) {
            throw new Error("Expected the field `default_endpoint` to be a primitive type in the JSON string but got " + data['default_endpoint']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['extra'] && !(typeof data['extra'] === 'string' || data['extra'] instanceof String)) {
            throw new Error("Expected the field `extra` to be a primitive type in the JSON string but got " + data['extra']);
        }
        // ensure the json data is a string
        if (data['fetch_values_predicate'] && !(typeof data['fetch_values_predicate'] === 'string' || data['fetch_values_predicate'] instanceof String)) {
            throw new Error("Expected the field `fetch_values_predicate` to be a primitive type in the JSON string but got " + data['fetch_values_predicate']);
        }
        // ensure the json data is a string
        if (data['main_dttm_col'] && !(typeof data['main_dttm_col'] === 'string' || data['main_dttm_col'] instanceof String)) {
            throw new Error("Expected the field `main_dttm_col` to be a primitive type in the JSON string but got " + data['main_dttm_col']);
        }
        // validate the optional field `metrics`
        if (data['metrics']) { // data not null
          Meta25.validateJSON(data['metrics']);
        }
        // validate the optional field `owners`
        if (data['owners']) { // data not null
          Meta24.validateJSON(data['owners']);
        }
        // ensure the json data is a string
        if (data['schema'] && !(typeof data['schema'] === 'string' || data['schema'] instanceof String)) {
            throw new Error("Expected the field `schema` to be a primitive type in the JSON string but got " + data['schema']);
        }
        // ensure the json data is a string
        if (data['sql'] && !(typeof data['sql'] === 'string' || data['sql'] instanceof String)) {
            throw new Error("Expected the field `sql` to be a primitive type in the JSON string but got " + data['sql']);
        }
        // ensure the json data is a string
        if (data['table_name'] && !(typeof data['table_name'] === 'string' || data['table_name'] instanceof String)) {
            throw new Error("Expected the field `table_name` to be a primitive type in the JSON string but got " + data['table_name']);
        }
        // ensure the json data is a string
        if (data['template_params'] && !(typeof data['template_params'] === 'string' || data['template_params'] instanceof String)) {
            throw new Error("Expected the field `template_params` to be a primitive type in the JSON string but got " + data['template_params']);
        }

        return true;
    }


}

DatasetRestApiGet.RequiredProperties = ["columns", "database", "metrics", "table_name"];

/**
 * @member {Number} cache_timeout
 */
DatasetRestApiGet.prototype['cache_timeout'] = undefined;

/**
 * @member {module:model/Meta22} columns
 */
DatasetRestApiGet.prototype['columns'] = undefined;

/**
 * @member {module:model/Meta23} database
 */
DatasetRestApiGet.prototype['database'] = undefined;

/**
 * @member {Object} datasource_type
 */
DatasetRestApiGet.prototype['datasource_type'] = undefined;

/**
 * @member {String} default_endpoint
 */
DatasetRestApiGet.prototype['default_endpoint'] = undefined;

/**
 * @member {String} description
 */
DatasetRestApiGet.prototype['description'] = undefined;

/**
 * @member {String} extra
 */
DatasetRestApiGet.prototype['extra'] = undefined;

/**
 * @member {String} fetch_values_predicate
 */
DatasetRestApiGet.prototype['fetch_values_predicate'] = undefined;

/**
 * @member {Boolean} filter_select_enabled
 */
DatasetRestApiGet.prototype['filter_select_enabled'] = undefined;

/**
 * @member {Number} id
 */
DatasetRestApiGet.prototype['id'] = undefined;

/**
 * @member {Boolean} is_sqllab_view
 */
DatasetRestApiGet.prototype['is_sqllab_view'] = undefined;

/**
 * @member {String} main_dttm_col
 */
DatasetRestApiGet.prototype['main_dttm_col'] = undefined;

/**
 * @member {module:model/Meta25} metrics
 */
DatasetRestApiGet.prototype['metrics'] = undefined;

/**
 * @member {Number} offset
 */
DatasetRestApiGet.prototype['offset'] = undefined;

/**
 * @member {module:model/Meta24} owners
 */
DatasetRestApiGet.prototype['owners'] = undefined;

/**
 * @member {String} schema
 */
DatasetRestApiGet.prototype['schema'] = undefined;

/**
 * @member {String} sql
 */
DatasetRestApiGet.prototype['sql'] = undefined;

/**
 * @member {String} table_name
 */
DatasetRestApiGet.prototype['table_name'] = undefined;

/**
 * @member {String} template_params
 */
DatasetRestApiGet.prototype['template_params'] = undefined;

/**
 * @member {Object} url
 */
DatasetRestApiGet.prototype['url'] = undefined;






export default DatasetRestApiGet;

