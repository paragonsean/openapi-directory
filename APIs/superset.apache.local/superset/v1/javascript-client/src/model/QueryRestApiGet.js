/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Meta28 from './Meta28';

/**
 * The QueryRestApiGet model module.
 * @module model/QueryRestApiGet
 * @version v1
 */
class QueryRestApiGet {
    /**
     * Constructs a new <code>QueryRestApiGet</code>.
     * @alias module:model/QueryRestApiGet
     * @param clientId {String} 
     * @param database {module:model/Meta28} 
     */
    constructor(clientId, database) { 
        
        QueryRestApiGet.initialize(this, clientId, database);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientId, database) { 
        obj['client_id'] = clientId;
        obj['database'] = database;
    }

    /**
     * Constructs a <code>QueryRestApiGet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryRestApiGet} obj Optional instance to populate.
     * @return {module:model/QueryRestApiGet} The populated <code>QueryRestApiGet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryRestApiGet();

            if (data.hasOwnProperty('changed_on')) {
                obj['changed_on'] = ApiClient.convertToType(data['changed_on'], 'Date');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('database')) {
                obj['database'] = Meta28.constructFromObject(data['database']);
            }
            if (data.hasOwnProperty('end_result_backend_time')) {
                obj['end_result_backend_time'] = ApiClient.convertToType(data['end_result_backend_time'], 'Number');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'Number');
            }
            if (data.hasOwnProperty('error_message')) {
                obj['error_message'] = ApiClient.convertToType(data['error_message'], 'String');
            }
            if (data.hasOwnProperty('executed_sql')) {
                obj['executed_sql'] = ApiClient.convertToType(data['executed_sql'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = ApiClient.convertToType(data['progress'], 'Number');
            }
            if (data.hasOwnProperty('results_key')) {
                obj['results_key'] = ApiClient.convertToType(data['results_key'], 'String');
            }
            if (data.hasOwnProperty('rows')) {
                obj['rows'] = ApiClient.convertToType(data['rows'], 'Number');
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], 'String');
            }
            if (data.hasOwnProperty('select_as_cta')) {
                obj['select_as_cta'] = ApiClient.convertToType(data['select_as_cta'], 'Boolean');
            }
            if (data.hasOwnProperty('select_as_cta_used')) {
                obj['select_as_cta_used'] = ApiClient.convertToType(data['select_as_cta_used'], 'Boolean');
            }
            if (data.hasOwnProperty('select_sql')) {
                obj['select_sql'] = ApiClient.convertToType(data['select_sql'], 'String');
            }
            if (data.hasOwnProperty('sql')) {
                obj['sql'] = ApiClient.convertToType(data['sql'], 'String');
            }
            if (data.hasOwnProperty('sql_editor_id')) {
                obj['sql_editor_id'] = ApiClient.convertToType(data['sql_editor_id'], 'String');
            }
            if (data.hasOwnProperty('start_running_time')) {
                obj['start_running_time'] = ApiClient.convertToType(data['start_running_time'], 'Number');
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tab_name')) {
                obj['tab_name'] = ApiClient.convertToType(data['tab_name'], 'String');
            }
            if (data.hasOwnProperty('tmp_schema_name')) {
                obj['tmp_schema_name'] = ApiClient.convertToType(data['tmp_schema_name'], 'String');
            }
            if (data.hasOwnProperty('tmp_table_name')) {
                obj['tmp_table_name'] = ApiClient.convertToType(data['tmp_table_name'], 'String');
            }
            if (data.hasOwnProperty('tracking_url')) {
                obj['tracking_url'] = ApiClient.convertToType(data['tracking_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryRestApiGet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryRestApiGet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QueryRestApiGet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // validate the optional field `database`
        if (data['database']) { // data not null
          Meta28.validateJSON(data['database']);
        }
        // ensure the json data is a string
        if (data['error_message'] && !(typeof data['error_message'] === 'string' || data['error_message'] instanceof String)) {
            throw new Error("Expected the field `error_message` to be a primitive type in the JSON string but got " + data['error_message']);
        }
        // ensure the json data is a string
        if (data['executed_sql'] && !(typeof data['executed_sql'] === 'string' || data['executed_sql'] instanceof String)) {
            throw new Error("Expected the field `executed_sql` to be a primitive type in the JSON string but got " + data['executed_sql']);
        }
        // ensure the json data is a string
        if (data['results_key'] && !(typeof data['results_key'] === 'string' || data['results_key'] instanceof String)) {
            throw new Error("Expected the field `results_key` to be a primitive type in the JSON string but got " + data['results_key']);
        }
        // ensure the json data is a string
        if (data['schema'] && !(typeof data['schema'] === 'string' || data['schema'] instanceof String)) {
            throw new Error("Expected the field `schema` to be a primitive type in the JSON string but got " + data['schema']);
        }
        // ensure the json data is a string
        if (data['select_sql'] && !(typeof data['select_sql'] === 'string' || data['select_sql'] instanceof String)) {
            throw new Error("Expected the field `select_sql` to be a primitive type in the JSON string but got " + data['select_sql']);
        }
        // ensure the json data is a string
        if (data['sql'] && !(typeof data['sql'] === 'string' || data['sql'] instanceof String)) {
            throw new Error("Expected the field `sql` to be a primitive type in the JSON string but got " + data['sql']);
        }
        // ensure the json data is a string
        if (data['sql_editor_id'] && !(typeof data['sql_editor_id'] === 'string' || data['sql_editor_id'] instanceof String)) {
            throw new Error("Expected the field `sql_editor_id` to be a primitive type in the JSON string but got " + data['sql_editor_id']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['tab_name'] && !(typeof data['tab_name'] === 'string' || data['tab_name'] instanceof String)) {
            throw new Error("Expected the field `tab_name` to be a primitive type in the JSON string but got " + data['tab_name']);
        }
        // ensure the json data is a string
        if (data['tmp_schema_name'] && !(typeof data['tmp_schema_name'] === 'string' || data['tmp_schema_name'] instanceof String)) {
            throw new Error("Expected the field `tmp_schema_name` to be a primitive type in the JSON string but got " + data['tmp_schema_name']);
        }
        // ensure the json data is a string
        if (data['tmp_table_name'] && !(typeof data['tmp_table_name'] === 'string' || data['tmp_table_name'] instanceof String)) {
            throw new Error("Expected the field `tmp_table_name` to be a primitive type in the JSON string but got " + data['tmp_table_name']);
        }
        // ensure the json data is a string
        if (data['tracking_url'] && !(typeof data['tracking_url'] === 'string' || data['tracking_url'] instanceof String)) {
            throw new Error("Expected the field `tracking_url` to be a primitive type in the JSON string but got " + data['tracking_url']);
        }

        return true;
    }


}

QueryRestApiGet.RequiredProperties = ["client_id", "database"];

/**
 * @member {Date} changed_on
 */
QueryRestApiGet.prototype['changed_on'] = undefined;

/**
 * @member {String} client_id
 */
QueryRestApiGet.prototype['client_id'] = undefined;

/**
 * @member {module:model/Meta28} database
 */
QueryRestApiGet.prototype['database'] = undefined;

/**
 * @member {Number} end_result_backend_time
 */
QueryRestApiGet.prototype['end_result_backend_time'] = undefined;

/**
 * @member {Number} end_time
 */
QueryRestApiGet.prototype['end_time'] = undefined;

/**
 * @member {String} error_message
 */
QueryRestApiGet.prototype['error_message'] = undefined;

/**
 * @member {String} executed_sql
 */
QueryRestApiGet.prototype['executed_sql'] = undefined;

/**
 * @member {Number} id
 */
QueryRestApiGet.prototype['id'] = undefined;

/**
 * @member {Number} limit
 */
QueryRestApiGet.prototype['limit'] = undefined;

/**
 * @member {Number} progress
 */
QueryRestApiGet.prototype['progress'] = undefined;

/**
 * @member {String} results_key
 */
QueryRestApiGet.prototype['results_key'] = undefined;

/**
 * @member {Number} rows
 */
QueryRestApiGet.prototype['rows'] = undefined;

/**
 * @member {String} schema
 */
QueryRestApiGet.prototype['schema'] = undefined;

/**
 * @member {Boolean} select_as_cta
 */
QueryRestApiGet.prototype['select_as_cta'] = undefined;

/**
 * @member {Boolean} select_as_cta_used
 */
QueryRestApiGet.prototype['select_as_cta_used'] = undefined;

/**
 * @member {String} select_sql
 */
QueryRestApiGet.prototype['select_sql'] = undefined;

/**
 * @member {String} sql
 */
QueryRestApiGet.prototype['sql'] = undefined;

/**
 * @member {String} sql_editor_id
 */
QueryRestApiGet.prototype['sql_editor_id'] = undefined;

/**
 * @member {Number} start_running_time
 */
QueryRestApiGet.prototype['start_running_time'] = undefined;

/**
 * @member {Number} start_time
 */
QueryRestApiGet.prototype['start_time'] = undefined;

/**
 * @member {String} status
 */
QueryRestApiGet.prototype['status'] = undefined;

/**
 * @member {String} tab_name
 */
QueryRestApiGet.prototype['tab_name'] = undefined;

/**
 * @member {String} tmp_schema_name
 */
QueryRestApiGet.prototype['tmp_schema_name'] = undefined;

/**
 * @member {String} tmp_table_name
 */
QueryRestApiGet.prototype['tmp_table_name'] = undefined;

/**
 * @member {String} tracking_url
 */
QueryRestApiGet.prototype['tracking_url'] = undefined;






export default QueryRestApiGet;

