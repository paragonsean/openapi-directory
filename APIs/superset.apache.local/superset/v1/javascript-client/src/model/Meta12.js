/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Meta12 model module.
 * @module model/Meta12
 * @version v1
 */
class Meta12 {
    /**
     * Constructs a new <code>Meta12</code>.
     * @alias module:model/Meta12
     * @param email {String} 
     * @param firstName {String} 
     * @param lastName {String} 
     * @param username {String} 
     */
    constructor(email, firstName, lastName, username) { 
        
        Meta12.initialize(this, email, firstName, lastName, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, firstName, lastName, username) { 
        obj['email'] = email;
        obj['first_name'] = firstName;
        obj['last_name'] = lastName;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>Meta12</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Meta12} obj Optional instance to populate.
     * @return {module:model/Meta12} The populated <code>Meta12</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Meta12();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('changed_on')) {
                obj['changed_on'] = ApiClient.convertToType(data['changed_on'], 'Date');
            }
            if (data.hasOwnProperty('created_on')) {
                obj['created_on'] = ApiClient.convertToType(data['created_on'], 'Date');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('fail_login_count')) {
                obj['fail_login_count'] = ApiClient.convertToType(data['fail_login_count'], 'Number');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('last_login')) {
                obj['last_login'] = ApiClient.convertToType(data['last_login'], 'Date');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('login_count')) {
                obj['login_count'] = ApiClient.convertToType(data['login_count'], 'Number');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Meta12</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Meta12</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Meta12.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

Meta12.RequiredProperties = ["email", "first_name", "last_name", "username"];

/**
 * @member {Boolean} active
 */
Meta12.prototype['active'] = undefined;

/**
 * @member {Date} changed_on
 */
Meta12.prototype['changed_on'] = undefined;

/**
 * @member {Date} created_on
 */
Meta12.prototype['created_on'] = undefined;

/**
 * @member {String} email
 */
Meta12.prototype['email'] = undefined;

/**
 * @member {Number} fail_login_count
 */
Meta12.prototype['fail_login_count'] = undefined;

/**
 * @member {String} first_name
 */
Meta12.prototype['first_name'] = undefined;

/**
 * @member {Number} id
 */
Meta12.prototype['id'] = undefined;

/**
 * @member {Date} last_login
 */
Meta12.prototype['last_login'] = undefined;

/**
 * @member {String} last_name
 */
Meta12.prototype['last_name'] = undefined;

/**
 * @member {Number} login_count
 */
Meta12.prototype['login_count'] = undefined;

/**
 * @member {String} password
 */
Meta12.prototype['password'] = undefined;

/**
 * @member {String} username
 */
Meta12.prototype['username'] = undefined;






export default Meta12;

