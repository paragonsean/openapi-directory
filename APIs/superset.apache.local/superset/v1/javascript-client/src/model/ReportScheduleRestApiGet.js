/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Meta37 from './Meta37';
import Meta38 from './Meta38';
import Meta39 from './Meta39';
import Meta40 from './Meta40';
import Meta41 from './Meta41';

/**
 * The ReportScheduleRestApiGet model module.
 * @module model/ReportScheduleRestApiGet
 * @version v1
 */
class ReportScheduleRestApiGet {
    /**
     * Constructs a new <code>ReportScheduleRestApiGet</code>.
     * @alias module:model/ReportScheduleRestApiGet
     * @param crontab {String} 
     * @param name {String} 
     * @param recipients {module:model/Meta38} 
     * @param type {String} 
     */
    constructor(crontab, name, recipients, type) { 
        
        ReportScheduleRestApiGet.initialize(this, crontab, name, recipients, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, crontab, name, recipients, type) { 
        obj['crontab'] = crontab;
        obj['name'] = name;
        obj['recipients'] = recipients;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>ReportScheduleRestApiGet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportScheduleRestApiGet} obj Optional instance to populate.
     * @return {module:model/ReportScheduleRestApiGet} The populated <code>ReportScheduleRestApiGet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportScheduleRestApiGet();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('chart')) {
                obj['chart'] = Meta40.constructFromObject(data['chart']);
            }
            if (data.hasOwnProperty('context_markdown')) {
                obj['context_markdown'] = ApiClient.convertToType(data['context_markdown'], 'String');
            }
            if (data.hasOwnProperty('creation_method')) {
                obj['creation_method'] = ApiClient.convertToType(data['creation_method'], 'String');
            }
            if (data.hasOwnProperty('crontab')) {
                obj['crontab'] = ApiClient.convertToType(data['crontab'], 'String');
            }
            if (data.hasOwnProperty('dashboard')) {
                obj['dashboard'] = Meta41.constructFromObject(data['dashboard']);
            }
            if (data.hasOwnProperty('database')) {
                obj['database'] = Meta37.constructFromObject(data['database']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('grace_period')) {
                obj['grace_period'] = ApiClient.convertToType(data['grace_period'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('last_eval_dttm')) {
                obj['last_eval_dttm'] = ApiClient.convertToType(data['last_eval_dttm'], 'Date');
            }
            if (data.hasOwnProperty('last_state')) {
                obj['last_state'] = ApiClient.convertToType(data['last_state'], 'String');
            }
            if (data.hasOwnProperty('last_value')) {
                obj['last_value'] = ApiClient.convertToType(data['last_value'], 'Number');
            }
            if (data.hasOwnProperty('last_value_row_json')) {
                obj['last_value_row_json'] = ApiClient.convertToType(data['last_value_row_json'], 'String');
            }
            if (data.hasOwnProperty('log_retention')) {
                obj['log_retention'] = ApiClient.convertToType(data['log_retention'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owners')) {
                obj['owners'] = Meta39.constructFromObject(data['owners']);
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = Meta38.constructFromObject(data['recipients']);
            }
            if (data.hasOwnProperty('report_format')) {
                obj['report_format'] = ApiClient.convertToType(data['report_format'], 'String');
            }
            if (data.hasOwnProperty('sql')) {
                obj['sql'] = ApiClient.convertToType(data['sql'], 'String');
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('validator_config_json')) {
                obj['validator_config_json'] = ApiClient.convertToType(data['validator_config_json'], 'String');
            }
            if (data.hasOwnProperty('validator_type')) {
                obj['validator_type'] = ApiClient.convertToType(data['validator_type'], 'String');
            }
            if (data.hasOwnProperty('working_timeout')) {
                obj['working_timeout'] = ApiClient.convertToType(data['working_timeout'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReportScheduleRestApiGet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReportScheduleRestApiGet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReportScheduleRestApiGet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `chart`
        if (data['chart']) { // data not null
          Meta40.validateJSON(data['chart']);
        }
        // ensure the json data is a string
        if (data['context_markdown'] && !(typeof data['context_markdown'] === 'string' || data['context_markdown'] instanceof String)) {
            throw new Error("Expected the field `context_markdown` to be a primitive type in the JSON string but got " + data['context_markdown']);
        }
        // ensure the json data is a string
        if (data['creation_method'] && !(typeof data['creation_method'] === 'string' || data['creation_method'] instanceof String)) {
            throw new Error("Expected the field `creation_method` to be a primitive type in the JSON string but got " + data['creation_method']);
        }
        // ensure the json data is a string
        if (data['crontab'] && !(typeof data['crontab'] === 'string' || data['crontab'] instanceof String)) {
            throw new Error("Expected the field `crontab` to be a primitive type in the JSON string but got " + data['crontab']);
        }
        // validate the optional field `dashboard`
        if (data['dashboard']) { // data not null
          Meta41.validateJSON(data['dashboard']);
        }
        // validate the optional field `database`
        if (data['database']) { // data not null
          Meta37.validateJSON(data['database']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['last_state'] && !(typeof data['last_state'] === 'string' || data['last_state'] instanceof String)) {
            throw new Error("Expected the field `last_state` to be a primitive type in the JSON string but got " + data['last_state']);
        }
        // ensure the json data is a string
        if (data['last_value_row_json'] && !(typeof data['last_value_row_json'] === 'string' || data['last_value_row_json'] instanceof String)) {
            throw new Error("Expected the field `last_value_row_json` to be a primitive type in the JSON string but got " + data['last_value_row_json']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `owners`
        if (data['owners']) { // data not null
          Meta39.validateJSON(data['owners']);
        }
        // validate the optional field `recipients`
        if (data['recipients']) { // data not null
          Meta38.validateJSON(data['recipients']);
        }
        // ensure the json data is a string
        if (data['report_format'] && !(typeof data['report_format'] === 'string' || data['report_format'] instanceof String)) {
            throw new Error("Expected the field `report_format` to be a primitive type in the JSON string but got " + data['report_format']);
        }
        // ensure the json data is a string
        if (data['sql'] && !(typeof data['sql'] === 'string' || data['sql'] instanceof String)) {
            throw new Error("Expected the field `sql` to be a primitive type in the JSON string but got " + data['sql']);
        }
        // ensure the json data is a string
        if (data['timezone'] && !(typeof data['timezone'] === 'string' || data['timezone'] instanceof String)) {
            throw new Error("Expected the field `timezone` to be a primitive type in the JSON string but got " + data['timezone']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['validator_config_json'] && !(typeof data['validator_config_json'] === 'string' || data['validator_config_json'] instanceof String)) {
            throw new Error("Expected the field `validator_config_json` to be a primitive type in the JSON string but got " + data['validator_config_json']);
        }
        // ensure the json data is a string
        if (data['validator_type'] && !(typeof data['validator_type'] === 'string' || data['validator_type'] instanceof String)) {
            throw new Error("Expected the field `validator_type` to be a primitive type in the JSON string but got " + data['validator_type']);
        }

        return true;
    }


}

ReportScheduleRestApiGet.RequiredProperties = ["crontab", "name", "recipients", "type"];

/**
 * @member {Boolean} active
 */
ReportScheduleRestApiGet.prototype['active'] = undefined;

/**
 * @member {module:model/Meta40} chart
 */
ReportScheduleRestApiGet.prototype['chart'] = undefined;

/**
 * @member {String} context_markdown
 */
ReportScheduleRestApiGet.prototype['context_markdown'] = undefined;

/**
 * @member {String} creation_method
 */
ReportScheduleRestApiGet.prototype['creation_method'] = undefined;

/**
 * @member {String} crontab
 */
ReportScheduleRestApiGet.prototype['crontab'] = undefined;

/**
 * @member {module:model/Meta41} dashboard
 */
ReportScheduleRestApiGet.prototype['dashboard'] = undefined;

/**
 * @member {module:model/Meta37} database
 */
ReportScheduleRestApiGet.prototype['database'] = undefined;

/**
 * @member {String} description
 */
ReportScheduleRestApiGet.prototype['description'] = undefined;

/**
 * @member {Number} grace_period
 */
ReportScheduleRestApiGet.prototype['grace_period'] = undefined;

/**
 * @member {Number} id
 */
ReportScheduleRestApiGet.prototype['id'] = undefined;

/**
 * @member {Date} last_eval_dttm
 */
ReportScheduleRestApiGet.prototype['last_eval_dttm'] = undefined;

/**
 * @member {String} last_state
 */
ReportScheduleRestApiGet.prototype['last_state'] = undefined;

/**
 * @member {Number} last_value
 */
ReportScheduleRestApiGet.prototype['last_value'] = undefined;

/**
 * @member {String} last_value_row_json
 */
ReportScheduleRestApiGet.prototype['last_value_row_json'] = undefined;

/**
 * @member {Number} log_retention
 */
ReportScheduleRestApiGet.prototype['log_retention'] = undefined;

/**
 * @member {String} name
 */
ReportScheduleRestApiGet.prototype['name'] = undefined;

/**
 * @member {module:model/Meta39} owners
 */
ReportScheduleRestApiGet.prototype['owners'] = undefined;

/**
 * @member {module:model/Meta38} recipients
 */
ReportScheduleRestApiGet.prototype['recipients'] = undefined;

/**
 * @member {String} report_format
 */
ReportScheduleRestApiGet.prototype['report_format'] = undefined;

/**
 * @member {String} sql
 */
ReportScheduleRestApiGet.prototype['sql'] = undefined;

/**
 * @member {String} timezone
 */
ReportScheduleRestApiGet.prototype['timezone'] = undefined;

/**
 * @member {String} type
 */
ReportScheduleRestApiGet.prototype['type'] = undefined;

/**
 * @member {String} validator_config_json
 */
ReportScheduleRestApiGet.prototype['validator_config_json'] = undefined;

/**
 * @member {String} validator_type
 */
ReportScheduleRestApiGet.prototype['validator_type'] = undefined;

/**
 * @member {Number} working_timeout
 */
ReportScheduleRestApiGet.prototype['working_timeout'] = undefined;






export default ReportScheduleRestApiGet;

