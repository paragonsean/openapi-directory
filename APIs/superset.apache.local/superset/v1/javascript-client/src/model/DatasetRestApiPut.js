/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DatasetColumnsPut from './DatasetColumnsPut';
import DatasetMetricsPut from './DatasetMetricsPut';

/**
 * The DatasetRestApiPut model module.
 * @module model/DatasetRestApiPut
 * @version v1
 */
class DatasetRestApiPut {
    /**
     * Constructs a new <code>DatasetRestApiPut</code>.
     * @alias module:model/DatasetRestApiPut
     */
    constructor() { 
        
        DatasetRestApiPut.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DatasetRestApiPut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatasetRestApiPut} obj Optional instance to populate.
     * @return {module:model/DatasetRestApiPut} The populated <code>DatasetRestApiPut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatasetRestApiPut();

            if (data.hasOwnProperty('cache_timeout')) {
                obj['cache_timeout'] = ApiClient.convertToType(data['cache_timeout'], 'Number');
            }
            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], [DatasetColumnsPut]);
            }
            if (data.hasOwnProperty('database_id')) {
                obj['database_id'] = ApiClient.convertToType(data['database_id'], 'Number');
            }
            if (data.hasOwnProperty('default_endpoint')) {
                obj['default_endpoint'] = ApiClient.convertToType(data['default_endpoint'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('extra')) {
                obj['extra'] = ApiClient.convertToType(data['extra'], 'String');
            }
            if (data.hasOwnProperty('fetch_values_predicate')) {
                obj['fetch_values_predicate'] = ApiClient.convertToType(data['fetch_values_predicate'], 'String');
            }
            if (data.hasOwnProperty('filter_select_enabled')) {
                obj['filter_select_enabled'] = ApiClient.convertToType(data['filter_select_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('is_sqllab_view')) {
                obj['is_sqllab_view'] = ApiClient.convertToType(data['is_sqllab_view'], 'Boolean');
            }
            if (data.hasOwnProperty('main_dttm_col')) {
                obj['main_dttm_col'] = ApiClient.convertToType(data['main_dttm_col'], 'String');
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], [DatasetMetricsPut]);
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('owners')) {
                obj['owners'] = ApiClient.convertToType(data['owners'], ['Number']);
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], 'String');
            }
            if (data.hasOwnProperty('sql')) {
                obj['sql'] = ApiClient.convertToType(data['sql'], 'String');
            }
            if (data.hasOwnProperty('table_name')) {
                obj['table_name'] = ApiClient.convertToType(data['table_name'], 'String');
            }
            if (data.hasOwnProperty('template_params')) {
                obj['template_params'] = ApiClient.convertToType(data['template_params'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatasetRestApiPut</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatasetRestApiPut</code>.
     */
    static validateJSON(data) {
        if (data['columns']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['columns'])) {
                throw new Error("Expected the field `columns` to be an array in the JSON data but got " + data['columns']);
            }
            // validate the optional field `columns` (array)
            for (const item of data['columns']) {
                DatasetColumnsPut.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['default_endpoint'] && !(typeof data['default_endpoint'] === 'string' || data['default_endpoint'] instanceof String)) {
            throw new Error("Expected the field `default_endpoint` to be a primitive type in the JSON string but got " + data['default_endpoint']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['extra'] && !(typeof data['extra'] === 'string' || data['extra'] instanceof String)) {
            throw new Error("Expected the field `extra` to be a primitive type in the JSON string but got " + data['extra']);
        }
        // ensure the json data is a string
        if (data['fetch_values_predicate'] && !(typeof data['fetch_values_predicate'] === 'string' || data['fetch_values_predicate'] instanceof String)) {
            throw new Error("Expected the field `fetch_values_predicate` to be a primitive type in the JSON string but got " + data['fetch_values_predicate']);
        }
        // ensure the json data is a string
        if (data['main_dttm_col'] && !(typeof data['main_dttm_col'] === 'string' || data['main_dttm_col'] instanceof String)) {
            throw new Error("Expected the field `main_dttm_col` to be a primitive type in the JSON string but got " + data['main_dttm_col']);
        }
        if (data['metrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metrics'])) {
                throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
            }
            // validate the optional field `metrics` (array)
            for (const item of data['metrics']) {
                DatasetMetricsPut.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['owners'])) {
            throw new Error("Expected the field `owners` to be an array in the JSON data but got " + data['owners']);
        }
        // ensure the json data is a string
        if (data['schema'] && !(typeof data['schema'] === 'string' || data['schema'] instanceof String)) {
            throw new Error("Expected the field `schema` to be a primitive type in the JSON string but got " + data['schema']);
        }
        // ensure the json data is a string
        if (data['sql'] && !(typeof data['sql'] === 'string' || data['sql'] instanceof String)) {
            throw new Error("Expected the field `sql` to be a primitive type in the JSON string but got " + data['sql']);
        }
        // ensure the json data is a string
        if (data['table_name'] && !(typeof data['table_name'] === 'string' || data['table_name'] instanceof String)) {
            throw new Error("Expected the field `table_name` to be a primitive type in the JSON string but got " + data['table_name']);
        }
        // ensure the json data is a string
        if (data['template_params'] && !(typeof data['template_params'] === 'string' || data['template_params'] instanceof String)) {
            throw new Error("Expected the field `template_params` to be a primitive type in the JSON string but got " + data['template_params']);
        }

        return true;
    }


}



/**
 * @member {Number} cache_timeout
 */
DatasetRestApiPut.prototype['cache_timeout'] = undefined;

/**
 * @member {Array.<module:model/DatasetColumnsPut>} columns
 */
DatasetRestApiPut.prototype['columns'] = undefined;

/**
 * @member {Number} database_id
 */
DatasetRestApiPut.prototype['database_id'] = undefined;

/**
 * @member {String} default_endpoint
 */
DatasetRestApiPut.prototype['default_endpoint'] = undefined;

/**
 * @member {String} description
 */
DatasetRestApiPut.prototype['description'] = undefined;

/**
 * @member {String} extra
 */
DatasetRestApiPut.prototype['extra'] = undefined;

/**
 * @member {String} fetch_values_predicate
 */
DatasetRestApiPut.prototype['fetch_values_predicate'] = undefined;

/**
 * @member {Boolean} filter_select_enabled
 */
DatasetRestApiPut.prototype['filter_select_enabled'] = undefined;

/**
 * @member {Boolean} is_sqllab_view
 */
DatasetRestApiPut.prototype['is_sqllab_view'] = undefined;

/**
 * @member {String} main_dttm_col
 */
DatasetRestApiPut.prototype['main_dttm_col'] = undefined;

/**
 * @member {Array.<module:model/DatasetMetricsPut>} metrics
 */
DatasetRestApiPut.prototype['metrics'] = undefined;

/**
 * @member {Number} offset
 */
DatasetRestApiPut.prototype['offset'] = undefined;

/**
 * @member {Array.<Number>} owners
 */
DatasetRestApiPut.prototype['owners'] = undefined;

/**
 * @member {String} schema
 */
DatasetRestApiPut.prototype['schema'] = undefined;

/**
 * @member {String} sql
 */
DatasetRestApiPut.prototype['sql'] = undefined;

/**
 * @member {String} table_name
 */
DatasetRestApiPut.prototype['table_name'] = undefined;

/**
 * @member {String} template_params
 */
DatasetRestApiPut.prototype['template_params'] = undefined;






export default DatasetRestApiPut;

