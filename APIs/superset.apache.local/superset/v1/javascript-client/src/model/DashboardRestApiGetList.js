/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Meta14 from './Meta14';
import Meta15 from './Meta15';
import Meta16 from './Meta16';
import Meta17 from './Meta17';

/**
 * The DashboardRestApiGetList model module.
 * @module model/DashboardRestApiGetList
 * @version v1
 */
class DashboardRestApiGetList {
    /**
     * Constructs a new <code>DashboardRestApiGetList</code>.
     * @alias module:model/DashboardRestApiGetList
     */
    constructor() { 
        
        DashboardRestApiGetList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DashboardRestApiGetList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DashboardRestApiGetList} obj Optional instance to populate.
     * @return {module:model/DashboardRestApiGetList} The populated <code>DashboardRestApiGetList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DashboardRestApiGetList();

            if (data.hasOwnProperty('changed_by')) {
                obj['changed_by'] = Meta15.constructFromObject(data['changed_by']);
            }
            if (data.hasOwnProperty('changed_by_name')) {
                obj['changed_by_name'] = ApiClient.convertToType(data['changed_by_name'], Object);
            }
            if (data.hasOwnProperty('changed_by_url')) {
                obj['changed_by_url'] = ApiClient.convertToType(data['changed_by_url'], Object);
            }
            if (data.hasOwnProperty('changed_on_delta_humanized')) {
                obj['changed_on_delta_humanized'] = ApiClient.convertToType(data['changed_on_delta_humanized'], Object);
            }
            if (data.hasOwnProperty('changed_on_utc')) {
                obj['changed_on_utc'] = ApiClient.convertToType(data['changed_on_utc'], Object);
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = Meta14.constructFromObject(data['created_by']);
            }
            if (data.hasOwnProperty('css')) {
                obj['css'] = ApiClient.convertToType(data['css'], 'String');
            }
            if (data.hasOwnProperty('dashboard_title')) {
                obj['dashboard_title'] = ApiClient.convertToType(data['dashboard_title'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('json_metadata')) {
                obj['json_metadata'] = ApiClient.convertToType(data['json_metadata'], 'String');
            }
            if (data.hasOwnProperty('owners')) {
                obj['owners'] = Meta17.constructFromObject(data['owners']);
            }
            if (data.hasOwnProperty('position_json')) {
                obj['position_json'] = ApiClient.convertToType(data['position_json'], 'String');
            }
            if (data.hasOwnProperty('published')) {
                obj['published'] = ApiClient.convertToType(data['published'], 'Boolean');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = Meta16.constructFromObject(data['roles']);
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], Object);
            }
            if (data.hasOwnProperty('thumbnail_url')) {
                obj['thumbnail_url'] = ApiClient.convertToType(data['thumbnail_url'], Object);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DashboardRestApiGetList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DashboardRestApiGetList</code>.
     */
    static validateJSON(data) {
        // validate the optional field `changed_by`
        if (data['changed_by']) { // data not null
          Meta15.validateJSON(data['changed_by']);
        }
        // validate the optional field `created_by`
        if (data['created_by']) { // data not null
          Meta14.validateJSON(data['created_by']);
        }
        // ensure the json data is a string
        if (data['css'] && !(typeof data['css'] === 'string' || data['css'] instanceof String)) {
            throw new Error("Expected the field `css` to be a primitive type in the JSON string but got " + data['css']);
        }
        // ensure the json data is a string
        if (data['dashboard_title'] && !(typeof data['dashboard_title'] === 'string' || data['dashboard_title'] instanceof String)) {
            throw new Error("Expected the field `dashboard_title` to be a primitive type in the JSON string but got " + data['dashboard_title']);
        }
        // ensure the json data is a string
        if (data['json_metadata'] && !(typeof data['json_metadata'] === 'string' || data['json_metadata'] instanceof String)) {
            throw new Error("Expected the field `json_metadata` to be a primitive type in the JSON string but got " + data['json_metadata']);
        }
        // validate the optional field `owners`
        if (data['owners']) { // data not null
          Meta17.validateJSON(data['owners']);
        }
        // ensure the json data is a string
        if (data['position_json'] && !(typeof data['position_json'] === 'string' || data['position_json'] instanceof String)) {
            throw new Error("Expected the field `position_json` to be a primitive type in the JSON string but got " + data['position_json']);
        }
        // validate the optional field `roles`
        if (data['roles']) { // data not null
          Meta16.validateJSON(data['roles']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }

        return true;
    }


}



/**
 * @member {module:model/Meta15} changed_by
 */
DashboardRestApiGetList.prototype['changed_by'] = undefined;

/**
 * @member {Object} changed_by_name
 */
DashboardRestApiGetList.prototype['changed_by_name'] = undefined;

/**
 * @member {Object} changed_by_url
 */
DashboardRestApiGetList.prototype['changed_by_url'] = undefined;

/**
 * @member {Object} changed_on_delta_humanized
 */
DashboardRestApiGetList.prototype['changed_on_delta_humanized'] = undefined;

/**
 * @member {Object} changed_on_utc
 */
DashboardRestApiGetList.prototype['changed_on_utc'] = undefined;

/**
 * @member {module:model/Meta14} created_by
 */
DashboardRestApiGetList.prototype['created_by'] = undefined;

/**
 * @member {String} css
 */
DashboardRestApiGetList.prototype['css'] = undefined;

/**
 * @member {String} dashboard_title
 */
DashboardRestApiGetList.prototype['dashboard_title'] = undefined;

/**
 * @member {Number} id
 */
DashboardRestApiGetList.prototype['id'] = undefined;

/**
 * @member {String} json_metadata
 */
DashboardRestApiGetList.prototype['json_metadata'] = undefined;

/**
 * @member {module:model/Meta17} owners
 */
DashboardRestApiGetList.prototype['owners'] = undefined;

/**
 * @member {String} position_json
 */
DashboardRestApiGetList.prototype['position_json'] = undefined;

/**
 * @member {Boolean} published
 */
DashboardRestApiGetList.prototype['published'] = undefined;

/**
 * @member {module:model/Meta16} roles
 */
DashboardRestApiGetList.prototype['roles'] = undefined;

/**
 * @member {String} slug
 */
DashboardRestApiGetList.prototype['slug'] = undefined;

/**
 * @member {Object} status
 */
DashboardRestApiGetList.prototype['status'] = undefined;

/**
 * @member {Object} thumbnail_url
 */
DashboardRestApiGetList.prototype['thumbnail_url'] = undefined;

/**
 * @member {Object} url
 */
DashboardRestApiGetList.prototype['url'] = undefined;






export default DashboardRestApiGetList;

