/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DatasetRestApiPost model module.
 * @module model/DatasetRestApiPost
 * @version v1
 */
class DatasetRestApiPost {
    /**
     * Constructs a new <code>DatasetRestApiPost</code>.
     * @alias module:model/DatasetRestApiPost
     * @param database {Number} 
     * @param tableName {String} 
     */
    constructor(database, tableName) { 
        
        DatasetRestApiPost.initialize(this, database, tableName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, database, tableName) { 
        obj['database'] = database;
        obj['table_name'] = tableName;
    }

    /**
     * Constructs a <code>DatasetRestApiPost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DatasetRestApiPost} obj Optional instance to populate.
     * @return {module:model/DatasetRestApiPost} The populated <code>DatasetRestApiPost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DatasetRestApiPost();

            if (data.hasOwnProperty('database')) {
                obj['database'] = ApiClient.convertToType(data['database'], 'Number');
            }
            if (data.hasOwnProperty('owners')) {
                obj['owners'] = ApiClient.convertToType(data['owners'], ['Number']);
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], 'String');
            }
            if (data.hasOwnProperty('table_name')) {
                obj['table_name'] = ApiClient.convertToType(data['table_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DatasetRestApiPost</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DatasetRestApiPost</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DatasetRestApiPost.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['owners'])) {
            throw new Error("Expected the field `owners` to be an array in the JSON data but got " + data['owners']);
        }
        // ensure the json data is a string
        if (data['schema'] && !(typeof data['schema'] === 'string' || data['schema'] instanceof String)) {
            throw new Error("Expected the field `schema` to be a primitive type in the JSON string but got " + data['schema']);
        }
        // ensure the json data is a string
        if (data['table_name'] && !(typeof data['table_name'] === 'string' || data['table_name'] instanceof String)) {
            throw new Error("Expected the field `table_name` to be a primitive type in the JSON string but got " + data['table_name']);
        }

        return true;
    }


}

DatasetRestApiPost.RequiredProperties = ["database", "table_name"];

/**
 * @member {Number} database
 */
DatasetRestApiPost.prototype['database'] = undefined;

/**
 * @member {Array.<Number>} owners
 */
DatasetRestApiPost.prototype['owners'] = undefined;

/**
 * @member {String} schema
 */
DatasetRestApiPost.prototype['schema'] = undefined;

/**
 * @member {String} table_name
 */
DatasetRestApiPost.prototype['table_name'] = undefined;






export default DatasetRestApiPost;

