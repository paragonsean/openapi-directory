/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetItemSchema model module.
 * @module model/GetItemSchema
 * @version v1
 */
class GetItemSchema {
    /**
     * Constructs a new <code>GetItemSchema</code>.
     * @alias module:model/GetItemSchema
     */
    constructor() { 
        
        GetItemSchema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetItemSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetItemSchema} obj Optional instance to populate.
     * @return {module:model/GetItemSchema} The populated <code>GetItemSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetItemSchema();

            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], ['String']);
            }
            if (data.hasOwnProperty('keys')) {
                obj['keys'] = ApiClient.convertToType(data['keys'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetItemSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetItemSchema</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['columns'])) {
            throw new Error("Expected the field `columns` to be an array in the JSON data but got " + data['columns']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['keys'])) {
            throw new Error("Expected the field `keys` to be an array in the JSON data but got " + data['keys']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} columns
 */
GetItemSchema.prototype['columns'] = undefined;

/**
 * @member {Array.<module:model/GetItemSchema.KeysEnum>} keys
 */
GetItemSchema.prototype['keys'] = undefined;





/**
 * Allowed values for the <code>keys</code> property.
 * @enum {String}
 * @readonly
 */
GetItemSchema['KeysEnum'] = {

    /**
     * value: "show_columns"
     * @const
     */
    "show_columns": "show_columns",

    /**
     * value: "description_columns"
     * @const
     */
    "description_columns": "description_columns",

    /**
     * value: "label_columns"
     * @const
     */
    "label_columns": "label_columns",

    /**
     * value: "show_title"
     * @const
     */
    "show_title": "show_title",

    /**
     * value: "none"
     * @const
     */
    "none": "none"
};



export default GetItemSchema;

