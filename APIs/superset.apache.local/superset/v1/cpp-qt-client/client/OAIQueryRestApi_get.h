/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryRestApi_get.h
 *
 * 
 */

#ifndef OAIQueryRestApi_get_H
#define OAIQueryRestApi_get_H

#include <QJsonObject>

#include "OAIMeta28.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMeta28;

class OAIQueryRestApi_get : public OAIObject {
public:
    OAIQueryRestApi_get();
    OAIQueryRestApi_get(QString json);
    ~OAIQueryRestApi_get() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getChangedOn() const;
    void setChangedOn(const QDateTime &changed_on);
    bool is_changed_on_Set() const;
    bool is_changed_on_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    OAIMeta28 getDatabase() const;
    void setDatabase(const OAIMeta28 &database);
    bool is_database_Set() const;
    bool is_database_Valid() const;

    double getEndResultBackendTime() const;
    void setEndResultBackendTime(const double &end_result_backend_time);
    bool is_end_result_backend_time_Set() const;
    bool is_end_result_backend_time_Valid() const;

    double getEndTime() const;
    void setEndTime(const double &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getExecutedSql() const;
    void setExecutedSql(const QString &executed_sql);
    bool is_executed_sql_Set() const;
    bool is_executed_sql_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint32 getProgress() const;
    void setProgress(const qint32 &progress);
    bool is_progress_Set() const;
    bool is_progress_Valid() const;

    QString getResultsKey() const;
    void setResultsKey(const QString &results_key);
    bool is_results_key_Set() const;
    bool is_results_key_Valid() const;

    qint32 getRows() const;
    void setRows(const qint32 &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    QString getSchema() const;
    void setSchema(const QString &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    bool isSelectAsCta() const;
    void setSelectAsCta(const bool &select_as_cta);
    bool is_select_as_cta_Set() const;
    bool is_select_as_cta_Valid() const;

    bool isSelectAsCtaUsed() const;
    void setSelectAsCtaUsed(const bool &select_as_cta_used);
    bool is_select_as_cta_used_Set() const;
    bool is_select_as_cta_used_Valid() const;

    QString getSelectSql() const;
    void setSelectSql(const QString &select_sql);
    bool is_select_sql_Set() const;
    bool is_select_sql_Valid() const;

    QString getSql() const;
    void setSql(const QString &sql);
    bool is_sql_Set() const;
    bool is_sql_Valid() const;

    QString getSqlEditorId() const;
    void setSqlEditorId(const QString &sql_editor_id);
    bool is_sql_editor_id_Set() const;
    bool is_sql_editor_id_Valid() const;

    double getStartRunningTime() const;
    void setStartRunningTime(const double &start_running_time);
    bool is_start_running_time_Set() const;
    bool is_start_running_time_Valid() const;

    double getStartTime() const;
    void setStartTime(const double &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTabName() const;
    void setTabName(const QString &tab_name);
    bool is_tab_name_Set() const;
    bool is_tab_name_Valid() const;

    QString getTmpSchemaName() const;
    void setTmpSchemaName(const QString &tmp_schema_name);
    bool is_tmp_schema_name_Set() const;
    bool is_tmp_schema_name_Valid() const;

    QString getTmpTableName() const;
    void setTmpTableName(const QString &tmp_table_name);
    bool is_tmp_table_name_Set() const;
    bool is_tmp_table_name_Valid() const;

    QString getTrackingUrl() const;
    void setTrackingUrl(const QString &tracking_url);
    bool is_tracking_url_Set() const;
    bool is_tracking_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_changed_on;
    bool m_changed_on_isSet;
    bool m_changed_on_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    OAIMeta28 m_database;
    bool m_database_isSet;
    bool m_database_isValid;

    double m_end_result_backend_time;
    bool m_end_result_backend_time_isSet;
    bool m_end_result_backend_time_isValid;

    double m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_executed_sql;
    bool m_executed_sql_isSet;
    bool m_executed_sql_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint32 m_progress;
    bool m_progress_isSet;
    bool m_progress_isValid;

    QString m_results_key;
    bool m_results_key_isSet;
    bool m_results_key_isValid;

    qint32 m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;

    QString m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    bool m_select_as_cta;
    bool m_select_as_cta_isSet;
    bool m_select_as_cta_isValid;

    bool m_select_as_cta_used;
    bool m_select_as_cta_used_isSet;
    bool m_select_as_cta_used_isValid;

    QString m_select_sql;
    bool m_select_sql_isSet;
    bool m_select_sql_isValid;

    QString m_sql;
    bool m_sql_isSet;
    bool m_sql_isValid;

    QString m_sql_editor_id;
    bool m_sql_editor_id_isSet;
    bool m_sql_editor_id_isValid;

    double m_start_running_time;
    bool m_start_running_time_isSet;
    bool m_start_running_time_isValid;

    double m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_tab_name;
    bool m_tab_name_isSet;
    bool m_tab_name_isValid;

    QString m_tmp_schema_name;
    bool m_tmp_schema_name_isSet;
    bool m_tmp_schema_name_isValid;

    QString m_tmp_table_name;
    bool m_tmp_table_name_isSet;
    bool m_tmp_table_name_isValid;

    QString m_tracking_url;
    bool m_tracking_url_isSet;
    bool m_tracking_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryRestApi_get)

#endif // OAIQueryRestApi_get_H
