/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChartDataExtras.h
 *
 * 
 */

#ifndef OAIChartDataExtras_H
#define OAIChartDataExtras_H

#include <QJsonObject>

#include "OAIChartDataFilter.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChartDataFilter;

class OAIChartDataExtras : public OAIObject {
public:
    OAIChartDataExtras();
    OAIChartDataExtras(QString json);
    ~OAIChartDataExtras() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDruidTimeOrigin() const;
    void setDruidTimeOrigin(const QString &druid_time_origin);
    bool is_druid_time_origin_Set() const;
    bool is_druid_time_origin_Valid() const;

    QString getHaving() const;
    void setHaving(const QString &having);
    bool is_having_Set() const;
    bool is_having_Valid() const;

    QList<OAIChartDataFilter> getHavingDruid() const;
    void setHavingDruid(const QList<OAIChartDataFilter> &having_druid);
    bool is_having_druid_Set() const;
    bool is_having_druid_Valid() const;

    QString getRelativeEnd() const;
    void setRelativeEnd(const QString &relative_end);
    bool is_relative_end_Set() const;
    bool is_relative_end_Valid() const;

    QString getRelativeStart() const;
    void setRelativeStart(const QString &relative_start);
    bool is_relative_start_Set() const;
    bool is_relative_start_Valid() const;

    QString getTimeGrainSqla() const;
    void setTimeGrainSqla(const QString &time_grain_sqla);
    bool is_time_grain_sqla_Set() const;
    bool is_time_grain_sqla_Valid() const;

    QList<QJsonValue> getTimeRangeEndpoints() const;
    void setTimeRangeEndpoints(const QList<QJsonValue> &time_range_endpoints);
    bool is_time_range_endpoints_Set() const;
    bool is_time_range_endpoints_Valid() const;

    QString getWhere() const;
    void setWhere(const QString &where);
    bool is_where_Set() const;
    bool is_where_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_druid_time_origin;
    bool m_druid_time_origin_isSet;
    bool m_druid_time_origin_isValid;

    QString m_having;
    bool m_having_isSet;
    bool m_having_isValid;

    QList<OAIChartDataFilter> m_having_druid;
    bool m_having_druid_isSet;
    bool m_having_druid_isValid;

    QString m_relative_end;
    bool m_relative_end_isSet;
    bool m_relative_end_isValid;

    QString m_relative_start;
    bool m_relative_start_isSet;
    bool m_relative_start_isValid;

    QString m_time_grain_sqla;
    bool m_time_grain_sqla_isSet;
    bool m_time_grain_sqla_isValid;

    QList<QJsonValue> m_time_range_endpoints;
    bool m_time_range_endpoints_isSet;
    bool m_time_range_endpoints_isValid;

    QString m_where;
    bool m_where_isSet;
    bool m_where_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChartDataExtras)

#endif // OAIChartDataExtras_H
