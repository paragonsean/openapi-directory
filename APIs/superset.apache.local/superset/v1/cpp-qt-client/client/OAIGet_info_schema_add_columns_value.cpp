/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_info_schema_add_columns_value.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_info_schema_add_columns_value::OAIGet_info_schema_add_columns_value(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_info_schema_add_columns_value::OAIGet_info_schema_add_columns_value() {
    this->initializeModel();
}

OAIGet_info_schema_add_columns_value::~OAIGet_info_schema_add_columns_value() {}

void OAIGet_info_schema_add_columns_value::initializeModel() {

    m_page_isSet = false;
    m_page_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;
}

void OAIGet_info_schema_add_columns_value::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_info_schema_add_columns_value::fromJsonObject(QJsonObject json) {

    m_page_isValid = ::OpenAPI::fromJsonValue(m_page, json[QString("page")]);
    m_page_isSet = !json[QString("page")].isNull() && m_page_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("page_size")]);
    m_page_size_isSet = !json[QString("page_size")].isNull() && m_page_size_isValid;
}

QString OAIGet_info_schema_add_columns_value::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_info_schema_add_columns_value::asJsonObject() const {
    QJsonObject obj;
    if (m_page_isSet) {
        obj.insert(QString("page"), ::OpenAPI::toJsonValue(m_page));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("page_size"), ::OpenAPI::toJsonValue(m_page_size));
    }
    return obj;
}

qint32 OAIGet_info_schema_add_columns_value::getPage() const {
    return m_page;
}
void OAIGet_info_schema_add_columns_value::setPage(const qint32 &page) {
    m_page = page;
    m_page_isSet = true;
}

bool OAIGet_info_schema_add_columns_value::is_page_Set() const{
    return m_page_isSet;
}

bool OAIGet_info_schema_add_columns_value::is_page_Valid() const{
    return m_page_isValid;
}

qint32 OAIGet_info_schema_add_columns_value::getPageSize() const {
    return m_page_size;
}
void OAIGet_info_schema_add_columns_value::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIGet_info_schema_add_columns_value::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIGet_info_schema_add_columns_value::is_page_size_Valid() const{
    return m_page_size_isValid;
}

bool OAIGet_info_schema_add_columns_value::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_info_schema_add_columns_value::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
