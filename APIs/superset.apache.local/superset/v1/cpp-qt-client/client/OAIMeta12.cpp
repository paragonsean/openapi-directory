/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMeta12.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMeta12::OAIMeta12(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMeta12::OAIMeta12() {
    this->initializeModel();
}

OAIMeta12::~OAIMeta12() {}

void OAIMeta12::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_changed_on_isSet = false;
    m_changed_on_isValid = false;

    m_created_on_isSet = false;
    m_created_on_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_fail_login_count_isSet = false;
    m_fail_login_count_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_login_isSet = false;
    m_last_login_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_login_count_isSet = false;
    m_login_count_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIMeta12::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMeta12::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_changed_on_isValid = ::OpenAPI::fromJsonValue(m_changed_on, json[QString("changed_on")]);
    m_changed_on_isSet = !json[QString("changed_on")].isNull() && m_changed_on_isValid;

    m_created_on_isValid = ::OpenAPI::fromJsonValue(m_created_on, json[QString("created_on")]);
    m_created_on_isSet = !json[QString("created_on")].isNull() && m_created_on_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_fail_login_count_isValid = ::OpenAPI::fromJsonValue(m_fail_login_count, json[QString("fail_login_count")]);
    m_fail_login_count_isSet = !json[QString("fail_login_count")].isNull() && m_fail_login_count_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_login_isValid = ::OpenAPI::fromJsonValue(m_last_login, json[QString("last_login")]);
    m_last_login_isSet = !json[QString("last_login")].isNull() && m_last_login_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_login_count_isValid = ::OpenAPI::fromJsonValue(m_login_count, json[QString("login_count")]);
    m_login_count_isSet = !json[QString("login_count")].isNull() && m_login_count_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAIMeta12::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMeta12::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_changed_on_isSet) {
        obj.insert(QString("changed_on"), ::OpenAPI::toJsonValue(m_changed_on));
    }
    if (m_created_on_isSet) {
        obj.insert(QString("created_on"), ::OpenAPI::toJsonValue(m_created_on));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_fail_login_count_isSet) {
        obj.insert(QString("fail_login_count"), ::OpenAPI::toJsonValue(m_fail_login_count));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_login_isSet) {
        obj.insert(QString("last_login"), ::OpenAPI::toJsonValue(m_last_login));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_login_count_isSet) {
        obj.insert(QString("login_count"), ::OpenAPI::toJsonValue(m_login_count));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

bool OAIMeta12::isActive() const {
    return m_active;
}
void OAIMeta12::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIMeta12::is_active_Set() const{
    return m_active_isSet;
}

bool OAIMeta12::is_active_Valid() const{
    return m_active_isValid;
}

QDateTime OAIMeta12::getChangedOn() const {
    return m_changed_on;
}
void OAIMeta12::setChangedOn(const QDateTime &changed_on) {
    m_changed_on = changed_on;
    m_changed_on_isSet = true;
}

bool OAIMeta12::is_changed_on_Set() const{
    return m_changed_on_isSet;
}

bool OAIMeta12::is_changed_on_Valid() const{
    return m_changed_on_isValid;
}

QDateTime OAIMeta12::getCreatedOn() const {
    return m_created_on;
}
void OAIMeta12::setCreatedOn(const QDateTime &created_on) {
    m_created_on = created_on;
    m_created_on_isSet = true;
}

bool OAIMeta12::is_created_on_Set() const{
    return m_created_on_isSet;
}

bool OAIMeta12::is_created_on_Valid() const{
    return m_created_on_isValid;
}

QString OAIMeta12::getEmail() const {
    return m_email;
}
void OAIMeta12::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIMeta12::is_email_Set() const{
    return m_email_isSet;
}

bool OAIMeta12::is_email_Valid() const{
    return m_email_isValid;
}

qint32 OAIMeta12::getFailLoginCount() const {
    return m_fail_login_count;
}
void OAIMeta12::setFailLoginCount(const qint32 &fail_login_count) {
    m_fail_login_count = fail_login_count;
    m_fail_login_count_isSet = true;
}

bool OAIMeta12::is_fail_login_count_Set() const{
    return m_fail_login_count_isSet;
}

bool OAIMeta12::is_fail_login_count_Valid() const{
    return m_fail_login_count_isValid;
}

QString OAIMeta12::getFirstName() const {
    return m_first_name;
}
void OAIMeta12::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIMeta12::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIMeta12::is_first_name_Valid() const{
    return m_first_name_isValid;
}

qint32 OAIMeta12::getId() const {
    return m_id;
}
void OAIMeta12::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIMeta12::is_id_Set() const{
    return m_id_isSet;
}

bool OAIMeta12::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIMeta12::getLastLogin() const {
    return m_last_login;
}
void OAIMeta12::setLastLogin(const QDateTime &last_login) {
    m_last_login = last_login;
    m_last_login_isSet = true;
}

bool OAIMeta12::is_last_login_Set() const{
    return m_last_login_isSet;
}

bool OAIMeta12::is_last_login_Valid() const{
    return m_last_login_isValid;
}

QString OAIMeta12::getLastName() const {
    return m_last_name;
}
void OAIMeta12::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIMeta12::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIMeta12::is_last_name_Valid() const{
    return m_last_name_isValid;
}

qint32 OAIMeta12::getLoginCount() const {
    return m_login_count;
}
void OAIMeta12::setLoginCount(const qint32 &login_count) {
    m_login_count = login_count;
    m_login_count_isSet = true;
}

bool OAIMeta12::is_login_count_Set() const{
    return m_login_count_isSet;
}

bool OAIMeta12::is_login_count_Valid() const{
    return m_login_count_isValid;
}

QString OAIMeta12::getPassword() const {
    return m_password;
}
void OAIMeta12::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIMeta12::is_password_Set() const{
    return m_password_isSet;
}

bool OAIMeta12::is_password_Valid() const{
    return m_password_isValid;
}

QString OAIMeta12::getUsername() const {
    return m_username;
}
void OAIMeta12::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIMeta12::is_username_Set() const{
    return m_username_isSet;
}

bool OAIMeta12::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIMeta12::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fail_login_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_login_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_login_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMeta12::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_first_name_isValid && m_last_name_isValid && m_username_isValid && true;
}

} // namespace OpenAPI
