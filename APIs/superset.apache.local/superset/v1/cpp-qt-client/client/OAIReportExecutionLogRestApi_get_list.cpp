/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReportExecutionLogRestApi_get_list.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReportExecutionLogRestApi_get_list::OAIReportExecutionLogRestApi_get_list(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReportExecutionLogRestApi_get_list::OAIReportExecutionLogRestApi_get_list() {
    this->initializeModel();
}

OAIReportExecutionLogRestApi_get_list::~OAIReportExecutionLogRestApi_get_list() {}

void OAIReportExecutionLogRestApi_get_list::initializeModel() {

    m_end_dttm_isSet = false;
    m_end_dttm_isValid = false;

    m_error_message_isSet = false;
    m_error_message_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_scheduled_dttm_isSet = false;
    m_scheduled_dttm_isValid = false;

    m_start_dttm_isSet = false;
    m_start_dttm_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_uuid_isSet = false;
    m_uuid_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;

    m_value_row_json_isSet = false;
    m_value_row_json_isValid = false;
}

void OAIReportExecutionLogRestApi_get_list::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReportExecutionLogRestApi_get_list::fromJsonObject(QJsonObject json) {

    m_end_dttm_isValid = ::OpenAPI::fromJsonValue(m_end_dttm, json[QString("end_dttm")]);
    m_end_dttm_isSet = !json[QString("end_dttm")].isNull() && m_end_dttm_isValid;

    m_error_message_isValid = ::OpenAPI::fromJsonValue(m_error_message, json[QString("error_message")]);
    m_error_message_isSet = !json[QString("error_message")].isNull() && m_error_message_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_scheduled_dttm_isValid = ::OpenAPI::fromJsonValue(m_scheduled_dttm, json[QString("scheduled_dttm")]);
    m_scheduled_dttm_isSet = !json[QString("scheduled_dttm")].isNull() && m_scheduled_dttm_isValid;

    m_start_dttm_isValid = ::OpenAPI::fromJsonValue(m_start_dttm, json[QString("start_dttm")]);
    m_start_dttm_isSet = !json[QString("start_dttm")].isNull() && m_start_dttm_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_uuid_isValid = ::OpenAPI::fromJsonValue(m_uuid, json[QString("uuid")]);
    m_uuid_isSet = !json[QString("uuid")].isNull() && m_uuid_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;

    m_value_row_json_isValid = ::OpenAPI::fromJsonValue(m_value_row_json, json[QString("value_row_json")]);
    m_value_row_json_isSet = !json[QString("value_row_json")].isNull() && m_value_row_json_isValid;
}

QString OAIReportExecutionLogRestApi_get_list::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReportExecutionLogRestApi_get_list::asJsonObject() const {
    QJsonObject obj;
    if (m_end_dttm_isSet) {
        obj.insert(QString("end_dttm"), ::OpenAPI::toJsonValue(m_end_dttm));
    }
    if (m_error_message_isSet) {
        obj.insert(QString("error_message"), ::OpenAPI::toJsonValue(m_error_message));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_scheduled_dttm_isSet) {
        obj.insert(QString("scheduled_dttm"), ::OpenAPI::toJsonValue(m_scheduled_dttm));
    }
    if (m_start_dttm_isSet) {
        obj.insert(QString("start_dttm"), ::OpenAPI::toJsonValue(m_start_dttm));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_uuid_isSet) {
        obj.insert(QString("uuid"), ::OpenAPI::toJsonValue(m_uuid));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    if (m_value_row_json_isSet) {
        obj.insert(QString("value_row_json"), ::OpenAPI::toJsonValue(m_value_row_json));
    }
    return obj;
}

QDateTime OAIReportExecutionLogRestApi_get_list::getEndDttm() const {
    return m_end_dttm;
}
void OAIReportExecutionLogRestApi_get_list::setEndDttm(const QDateTime &end_dttm) {
    m_end_dttm = end_dttm;
    m_end_dttm_isSet = true;
}

bool OAIReportExecutionLogRestApi_get_list::is_end_dttm_Set() const{
    return m_end_dttm_isSet;
}

bool OAIReportExecutionLogRestApi_get_list::is_end_dttm_Valid() const{
    return m_end_dttm_isValid;
}

QString OAIReportExecutionLogRestApi_get_list::getErrorMessage() const {
    return m_error_message;
}
void OAIReportExecutionLogRestApi_get_list::setErrorMessage(const QString &error_message) {
    m_error_message = error_message;
    m_error_message_isSet = true;
}

bool OAIReportExecutionLogRestApi_get_list::is_error_message_Set() const{
    return m_error_message_isSet;
}

bool OAIReportExecutionLogRestApi_get_list::is_error_message_Valid() const{
    return m_error_message_isValid;
}

qint32 OAIReportExecutionLogRestApi_get_list::getId() const {
    return m_id;
}
void OAIReportExecutionLogRestApi_get_list::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIReportExecutionLogRestApi_get_list::is_id_Set() const{
    return m_id_isSet;
}

bool OAIReportExecutionLogRestApi_get_list::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIReportExecutionLogRestApi_get_list::getScheduledDttm() const {
    return m_scheduled_dttm;
}
void OAIReportExecutionLogRestApi_get_list::setScheduledDttm(const QDateTime &scheduled_dttm) {
    m_scheduled_dttm = scheduled_dttm;
    m_scheduled_dttm_isSet = true;
}

bool OAIReportExecutionLogRestApi_get_list::is_scheduled_dttm_Set() const{
    return m_scheduled_dttm_isSet;
}

bool OAIReportExecutionLogRestApi_get_list::is_scheduled_dttm_Valid() const{
    return m_scheduled_dttm_isValid;
}

QDateTime OAIReportExecutionLogRestApi_get_list::getStartDttm() const {
    return m_start_dttm;
}
void OAIReportExecutionLogRestApi_get_list::setStartDttm(const QDateTime &start_dttm) {
    m_start_dttm = start_dttm;
    m_start_dttm_isSet = true;
}

bool OAIReportExecutionLogRestApi_get_list::is_start_dttm_Set() const{
    return m_start_dttm_isSet;
}

bool OAIReportExecutionLogRestApi_get_list::is_start_dttm_Valid() const{
    return m_start_dttm_isValid;
}

QString OAIReportExecutionLogRestApi_get_list::getState() const {
    return m_state;
}
void OAIReportExecutionLogRestApi_get_list::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIReportExecutionLogRestApi_get_list::is_state_Set() const{
    return m_state_isSet;
}

bool OAIReportExecutionLogRestApi_get_list::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIReportExecutionLogRestApi_get_list::getUuid() const {
    return m_uuid;
}
void OAIReportExecutionLogRestApi_get_list::setUuid(const QString &uuid) {
    m_uuid = uuid;
    m_uuid_isSet = true;
}

bool OAIReportExecutionLogRestApi_get_list::is_uuid_Set() const{
    return m_uuid_isSet;
}

bool OAIReportExecutionLogRestApi_get_list::is_uuid_Valid() const{
    return m_uuid_isValid;
}

float OAIReportExecutionLogRestApi_get_list::getValue() const {
    return m_value;
}
void OAIReportExecutionLogRestApi_get_list::setValue(const float &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIReportExecutionLogRestApi_get_list::is_value_Set() const{
    return m_value_isSet;
}

bool OAIReportExecutionLogRestApi_get_list::is_value_Valid() const{
    return m_value_isValid;
}

QString OAIReportExecutionLogRestApi_get_list::getValueRowJson() const {
    return m_value_row_json;
}
void OAIReportExecutionLogRestApi_get_list::setValueRowJson(const QString &value_row_json) {
    m_value_row_json = value_row_json;
    m_value_row_json_isSet = true;
}

bool OAIReportExecutionLogRestApi_get_list::is_value_row_json_Set() const{
    return m_value_row_json_isSet;
}

bool OAIReportExecutionLogRestApi_get_list::is_value_row_json_Valid() const{
    return m_value_row_json_isValid;
}

bool OAIReportExecutionLogRestApi_get_list::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_dttm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduled_dttm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_dttm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uuid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_row_json_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReportExecutionLogRestApi_get_list::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_scheduled_dttm_isValid && m_state_isValid && true;
}

} // namespace OpenAPI
