/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChartRestApi_get_list.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChartRestApi_get_list::OAIChartRestApi_get_list(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChartRestApi_get_list::OAIChartRestApi_get_list() {
    this->initializeModel();
}

OAIChartRestApi_get_list::~OAIChartRestApi_get_list() {}

void OAIChartRestApi_get_list::initializeModel() {

    m_cache_timeout_isSet = false;
    m_cache_timeout_isValid = false;

    m_changed_by_isSet = false;
    m_changed_by_isValid = false;

    m_changed_by_name_isSet = false;
    m_changed_by_name_isValid = false;

    m_changed_by_url_isSet = false;
    m_changed_by_url_isValid = false;

    m_changed_on_delta_humanized_isSet = false;
    m_changed_on_delta_humanized_isValid = false;

    m_changed_on_utc_isSet = false;
    m_changed_on_utc_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_datasource_id_isSet = false;
    m_datasource_id_isValid = false;

    m_datasource_name_text_isSet = false;
    m_datasource_name_text_isValid = false;

    m_datasource_type_isSet = false;
    m_datasource_type_isValid = false;

    m_datasource_url_isSet = false;
    m_datasource_url_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_description_markeddown_isSet = false;
    m_description_markeddown_isValid = false;

    m_edit_url_isSet = false;
    m_edit_url_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_owners_isSet = false;
    m_owners_isValid = false;

    m_params_isSet = false;
    m_params_isValid = false;

    m_slice_name_isSet = false;
    m_slice_name_isValid = false;

    m_table_isSet = false;
    m_table_isValid = false;

    m_thumbnail_url_isSet = false;
    m_thumbnail_url_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_viz_type_isSet = false;
    m_viz_type_isValid = false;
}

void OAIChartRestApi_get_list::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChartRestApi_get_list::fromJsonObject(QJsonObject json) {

    m_cache_timeout_isValid = ::OpenAPI::fromJsonValue(m_cache_timeout, json[QString("cache_timeout")]);
    m_cache_timeout_isSet = !json[QString("cache_timeout")].isNull() && m_cache_timeout_isValid;

    m_changed_by_isValid = ::OpenAPI::fromJsonValue(m_changed_by, json[QString("changed_by")]);
    m_changed_by_isSet = !json[QString("changed_by")].isNull() && m_changed_by_isValid;

    m_changed_by_name_isValid = ::OpenAPI::fromJsonValue(m_changed_by_name, json[QString("changed_by_name")]);
    m_changed_by_name_isSet = !json[QString("changed_by_name")].isNull() && m_changed_by_name_isValid;

    m_changed_by_url_isValid = ::OpenAPI::fromJsonValue(m_changed_by_url, json[QString("changed_by_url")]);
    m_changed_by_url_isSet = !json[QString("changed_by_url")].isNull() && m_changed_by_url_isValid;

    m_changed_on_delta_humanized_isValid = ::OpenAPI::fromJsonValue(m_changed_on_delta_humanized, json[QString("changed_on_delta_humanized")]);
    m_changed_on_delta_humanized_isSet = !json[QString("changed_on_delta_humanized")].isNull() && m_changed_on_delta_humanized_isValid;

    m_changed_on_utc_isValid = ::OpenAPI::fromJsonValue(m_changed_on_utc, json[QString("changed_on_utc")]);
    m_changed_on_utc_isSet = !json[QString("changed_on_utc")].isNull() && m_changed_on_utc_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_datasource_id_isValid = ::OpenAPI::fromJsonValue(m_datasource_id, json[QString("datasource_id")]);
    m_datasource_id_isSet = !json[QString("datasource_id")].isNull() && m_datasource_id_isValid;

    m_datasource_name_text_isValid = ::OpenAPI::fromJsonValue(m_datasource_name_text, json[QString("datasource_name_text")]);
    m_datasource_name_text_isSet = !json[QString("datasource_name_text")].isNull() && m_datasource_name_text_isValid;

    m_datasource_type_isValid = ::OpenAPI::fromJsonValue(m_datasource_type, json[QString("datasource_type")]);
    m_datasource_type_isSet = !json[QString("datasource_type")].isNull() && m_datasource_type_isValid;

    m_datasource_url_isValid = ::OpenAPI::fromJsonValue(m_datasource_url, json[QString("datasource_url")]);
    m_datasource_url_isSet = !json[QString("datasource_url")].isNull() && m_datasource_url_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_description_markeddown_isValid = ::OpenAPI::fromJsonValue(m_description_markeddown, json[QString("description_markeddown")]);
    m_description_markeddown_isSet = !json[QString("description_markeddown")].isNull() && m_description_markeddown_isValid;

    m_edit_url_isValid = ::OpenAPI::fromJsonValue(m_edit_url, json[QString("edit_url")]);
    m_edit_url_isSet = !json[QString("edit_url")].isNull() && m_edit_url_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_owners_isValid = ::OpenAPI::fromJsonValue(m_owners, json[QString("owners")]);
    m_owners_isSet = !json[QString("owners")].isNull() && m_owners_isValid;

    m_params_isValid = ::OpenAPI::fromJsonValue(m_params, json[QString("params")]);
    m_params_isSet = !json[QString("params")].isNull() && m_params_isValid;

    m_slice_name_isValid = ::OpenAPI::fromJsonValue(m_slice_name, json[QString("slice_name")]);
    m_slice_name_isSet = !json[QString("slice_name")].isNull() && m_slice_name_isValid;

    m_table_isValid = ::OpenAPI::fromJsonValue(m_table, json[QString("table")]);
    m_table_isSet = !json[QString("table")].isNull() && m_table_isValid;

    m_thumbnail_url_isValid = ::OpenAPI::fromJsonValue(m_thumbnail_url, json[QString("thumbnail_url")]);
    m_thumbnail_url_isSet = !json[QString("thumbnail_url")].isNull() && m_thumbnail_url_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_viz_type_isValid = ::OpenAPI::fromJsonValue(m_viz_type, json[QString("viz_type")]);
    m_viz_type_isSet = !json[QString("viz_type")].isNull() && m_viz_type_isValid;
}

QString OAIChartRestApi_get_list::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChartRestApi_get_list::asJsonObject() const {
    QJsonObject obj;
    if (m_cache_timeout_isSet) {
        obj.insert(QString("cache_timeout"), ::OpenAPI::toJsonValue(m_cache_timeout));
    }
    if (m_changed_by.isSet()) {
        obj.insert(QString("changed_by"), ::OpenAPI::toJsonValue(m_changed_by));
    }
    if (m_changed_by_name_isSet) {
        obj.insert(QString("changed_by_name"), ::OpenAPI::toJsonValue(m_changed_by_name));
    }
    if (m_changed_by_url_isSet) {
        obj.insert(QString("changed_by_url"), ::OpenAPI::toJsonValue(m_changed_by_url));
    }
    if (m_changed_on_delta_humanized_isSet) {
        obj.insert(QString("changed_on_delta_humanized"), ::OpenAPI::toJsonValue(m_changed_on_delta_humanized));
    }
    if (m_changed_on_utc_isSet) {
        obj.insert(QString("changed_on_utc"), ::OpenAPI::toJsonValue(m_changed_on_utc));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_datasource_id_isSet) {
        obj.insert(QString("datasource_id"), ::OpenAPI::toJsonValue(m_datasource_id));
    }
    if (m_datasource_name_text_isSet) {
        obj.insert(QString("datasource_name_text"), ::OpenAPI::toJsonValue(m_datasource_name_text));
    }
    if (m_datasource_type_isSet) {
        obj.insert(QString("datasource_type"), ::OpenAPI::toJsonValue(m_datasource_type));
    }
    if (m_datasource_url_isSet) {
        obj.insert(QString("datasource_url"), ::OpenAPI::toJsonValue(m_datasource_url));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_description_markeddown_isSet) {
        obj.insert(QString("description_markeddown"), ::OpenAPI::toJsonValue(m_description_markeddown));
    }
    if (m_edit_url_isSet) {
        obj.insert(QString("edit_url"), ::OpenAPI::toJsonValue(m_edit_url));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_owners.isSet()) {
        obj.insert(QString("owners"), ::OpenAPI::toJsonValue(m_owners));
    }
    if (m_params_isSet) {
        obj.insert(QString("params"), ::OpenAPI::toJsonValue(m_params));
    }
    if (m_slice_name_isSet) {
        obj.insert(QString("slice_name"), ::OpenAPI::toJsonValue(m_slice_name));
    }
    if (m_table.isSet()) {
        obj.insert(QString("table"), ::OpenAPI::toJsonValue(m_table));
    }
    if (m_thumbnail_url_isSet) {
        obj.insert(QString("thumbnail_url"), ::OpenAPI::toJsonValue(m_thumbnail_url));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_viz_type_isSet) {
        obj.insert(QString("viz_type"), ::OpenAPI::toJsonValue(m_viz_type));
    }
    return obj;
}

qint32 OAIChartRestApi_get_list::getCacheTimeout() const {
    return m_cache_timeout;
}
void OAIChartRestApi_get_list::setCacheTimeout(const qint32 &cache_timeout) {
    m_cache_timeout = cache_timeout;
    m_cache_timeout_isSet = true;
}

bool OAIChartRestApi_get_list::is_cache_timeout_Set() const{
    return m_cache_timeout_isSet;
}

bool OAIChartRestApi_get_list::is_cache_timeout_Valid() const{
    return m_cache_timeout_isValid;
}

OAIMeta8 OAIChartRestApi_get_list::getChangedBy() const {
    return m_changed_by;
}
void OAIChartRestApi_get_list::setChangedBy(const OAIMeta8 &changed_by) {
    m_changed_by = changed_by;
    m_changed_by_isSet = true;
}

bool OAIChartRestApi_get_list::is_changed_by_Set() const{
    return m_changed_by_isSet;
}

bool OAIChartRestApi_get_list::is_changed_by_Valid() const{
    return m_changed_by_isValid;
}

QJsonValue OAIChartRestApi_get_list::getChangedByName() const {
    return m_changed_by_name;
}
void OAIChartRestApi_get_list::setChangedByName(const QJsonValue &changed_by_name) {
    m_changed_by_name = changed_by_name;
    m_changed_by_name_isSet = true;
}

bool OAIChartRestApi_get_list::is_changed_by_name_Set() const{
    return m_changed_by_name_isSet;
}

bool OAIChartRestApi_get_list::is_changed_by_name_Valid() const{
    return m_changed_by_name_isValid;
}

QJsonValue OAIChartRestApi_get_list::getChangedByUrl() const {
    return m_changed_by_url;
}
void OAIChartRestApi_get_list::setChangedByUrl(const QJsonValue &changed_by_url) {
    m_changed_by_url = changed_by_url;
    m_changed_by_url_isSet = true;
}

bool OAIChartRestApi_get_list::is_changed_by_url_Set() const{
    return m_changed_by_url_isSet;
}

bool OAIChartRestApi_get_list::is_changed_by_url_Valid() const{
    return m_changed_by_url_isValid;
}

QJsonValue OAIChartRestApi_get_list::getChangedOnDeltaHumanized() const {
    return m_changed_on_delta_humanized;
}
void OAIChartRestApi_get_list::setChangedOnDeltaHumanized(const QJsonValue &changed_on_delta_humanized) {
    m_changed_on_delta_humanized = changed_on_delta_humanized;
    m_changed_on_delta_humanized_isSet = true;
}

bool OAIChartRestApi_get_list::is_changed_on_delta_humanized_Set() const{
    return m_changed_on_delta_humanized_isSet;
}

bool OAIChartRestApi_get_list::is_changed_on_delta_humanized_Valid() const{
    return m_changed_on_delta_humanized_isValid;
}

QJsonValue OAIChartRestApi_get_list::getChangedOnUtc() const {
    return m_changed_on_utc;
}
void OAIChartRestApi_get_list::setChangedOnUtc(const QJsonValue &changed_on_utc) {
    m_changed_on_utc = changed_on_utc;
    m_changed_on_utc_isSet = true;
}

bool OAIChartRestApi_get_list::is_changed_on_utc_Set() const{
    return m_changed_on_utc_isSet;
}

bool OAIChartRestApi_get_list::is_changed_on_utc_Valid() const{
    return m_changed_on_utc_isValid;
}

OAIMeta5 OAIChartRestApi_get_list::getCreatedBy() const {
    return m_created_by;
}
void OAIChartRestApi_get_list::setCreatedBy(const OAIMeta5 &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIChartRestApi_get_list::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIChartRestApi_get_list::is_created_by_Valid() const{
    return m_created_by_isValid;
}

qint32 OAIChartRestApi_get_list::getDatasourceId() const {
    return m_datasource_id;
}
void OAIChartRestApi_get_list::setDatasourceId(const qint32 &datasource_id) {
    m_datasource_id = datasource_id;
    m_datasource_id_isSet = true;
}

bool OAIChartRestApi_get_list::is_datasource_id_Set() const{
    return m_datasource_id_isSet;
}

bool OAIChartRestApi_get_list::is_datasource_id_Valid() const{
    return m_datasource_id_isValid;
}

QJsonValue OAIChartRestApi_get_list::getDatasourceNameText() const {
    return m_datasource_name_text;
}
void OAIChartRestApi_get_list::setDatasourceNameText(const QJsonValue &datasource_name_text) {
    m_datasource_name_text = datasource_name_text;
    m_datasource_name_text_isSet = true;
}

bool OAIChartRestApi_get_list::is_datasource_name_text_Set() const{
    return m_datasource_name_text_isSet;
}

bool OAIChartRestApi_get_list::is_datasource_name_text_Valid() const{
    return m_datasource_name_text_isValid;
}

QString OAIChartRestApi_get_list::getDatasourceType() const {
    return m_datasource_type;
}
void OAIChartRestApi_get_list::setDatasourceType(const QString &datasource_type) {
    m_datasource_type = datasource_type;
    m_datasource_type_isSet = true;
}

bool OAIChartRestApi_get_list::is_datasource_type_Set() const{
    return m_datasource_type_isSet;
}

bool OAIChartRestApi_get_list::is_datasource_type_Valid() const{
    return m_datasource_type_isValid;
}

QJsonValue OAIChartRestApi_get_list::getDatasourceUrl() const {
    return m_datasource_url;
}
void OAIChartRestApi_get_list::setDatasourceUrl(const QJsonValue &datasource_url) {
    m_datasource_url = datasource_url;
    m_datasource_url_isSet = true;
}

bool OAIChartRestApi_get_list::is_datasource_url_Set() const{
    return m_datasource_url_isSet;
}

bool OAIChartRestApi_get_list::is_datasource_url_Valid() const{
    return m_datasource_url_isValid;
}

QString OAIChartRestApi_get_list::getDescription() const {
    return m_description;
}
void OAIChartRestApi_get_list::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIChartRestApi_get_list::is_description_Set() const{
    return m_description_isSet;
}

bool OAIChartRestApi_get_list::is_description_Valid() const{
    return m_description_isValid;
}

QJsonValue OAIChartRestApi_get_list::getDescriptionMarkeddown() const {
    return m_description_markeddown;
}
void OAIChartRestApi_get_list::setDescriptionMarkeddown(const QJsonValue &description_markeddown) {
    m_description_markeddown = description_markeddown;
    m_description_markeddown_isSet = true;
}

bool OAIChartRestApi_get_list::is_description_markeddown_Set() const{
    return m_description_markeddown_isSet;
}

bool OAIChartRestApi_get_list::is_description_markeddown_Valid() const{
    return m_description_markeddown_isValid;
}

QJsonValue OAIChartRestApi_get_list::getEditUrl() const {
    return m_edit_url;
}
void OAIChartRestApi_get_list::setEditUrl(const QJsonValue &edit_url) {
    m_edit_url = edit_url;
    m_edit_url_isSet = true;
}

bool OAIChartRestApi_get_list::is_edit_url_Set() const{
    return m_edit_url_isSet;
}

bool OAIChartRestApi_get_list::is_edit_url_Valid() const{
    return m_edit_url_isValid;
}

qint32 OAIChartRestApi_get_list::getId() const {
    return m_id;
}
void OAIChartRestApi_get_list::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIChartRestApi_get_list::is_id_Set() const{
    return m_id_isSet;
}

bool OAIChartRestApi_get_list::is_id_Valid() const{
    return m_id_isValid;
}

OAIMeta7 OAIChartRestApi_get_list::getOwners() const {
    return m_owners;
}
void OAIChartRestApi_get_list::setOwners(const OAIMeta7 &owners) {
    m_owners = owners;
    m_owners_isSet = true;
}

bool OAIChartRestApi_get_list::is_owners_Set() const{
    return m_owners_isSet;
}

bool OAIChartRestApi_get_list::is_owners_Valid() const{
    return m_owners_isValid;
}

QString OAIChartRestApi_get_list::getParams() const {
    return m_params;
}
void OAIChartRestApi_get_list::setParams(const QString &params) {
    m_params = params;
    m_params_isSet = true;
}

bool OAIChartRestApi_get_list::is_params_Set() const{
    return m_params_isSet;
}

bool OAIChartRestApi_get_list::is_params_Valid() const{
    return m_params_isValid;
}

QString OAIChartRestApi_get_list::getSliceName() const {
    return m_slice_name;
}
void OAIChartRestApi_get_list::setSliceName(const QString &slice_name) {
    m_slice_name = slice_name;
    m_slice_name_isSet = true;
}

bool OAIChartRestApi_get_list::is_slice_name_Set() const{
    return m_slice_name_isSet;
}

bool OAIChartRestApi_get_list::is_slice_name_Valid() const{
    return m_slice_name_isValid;
}

OAIMeta6 OAIChartRestApi_get_list::getTable() const {
    return m_table;
}
void OAIChartRestApi_get_list::setTable(const OAIMeta6 &table) {
    m_table = table;
    m_table_isSet = true;
}

bool OAIChartRestApi_get_list::is_table_Set() const{
    return m_table_isSet;
}

bool OAIChartRestApi_get_list::is_table_Valid() const{
    return m_table_isValid;
}

QJsonValue OAIChartRestApi_get_list::getThumbnailUrl() const {
    return m_thumbnail_url;
}
void OAIChartRestApi_get_list::setThumbnailUrl(const QJsonValue &thumbnail_url) {
    m_thumbnail_url = thumbnail_url;
    m_thumbnail_url_isSet = true;
}

bool OAIChartRestApi_get_list::is_thumbnail_url_Set() const{
    return m_thumbnail_url_isSet;
}

bool OAIChartRestApi_get_list::is_thumbnail_url_Valid() const{
    return m_thumbnail_url_isValid;
}

QJsonValue OAIChartRestApi_get_list::getUrl() const {
    return m_url;
}
void OAIChartRestApi_get_list::setUrl(const QJsonValue &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIChartRestApi_get_list::is_url_Set() const{
    return m_url_isSet;
}

bool OAIChartRestApi_get_list::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIChartRestApi_get_list::getVizType() const {
    return m_viz_type;
}
void OAIChartRestApi_get_list::setVizType(const QString &viz_type) {
    m_viz_type = viz_type;
    m_viz_type_isSet = true;
}

bool OAIChartRestApi_get_list::is_viz_type_Set() const{
    return m_viz_type_isSet;
}

bool OAIChartRestApi_get_list::is_viz_type_Valid() const{
    return m_viz_type_isValid;
}

bool OAIChartRestApi_get_list::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cache_timeout_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_by_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_by_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_on_delta_humanized_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_on_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_datasource_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_datasource_name_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_datasource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_datasource_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_markeddown_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edit_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owners.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_params_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slice_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_viz_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChartRestApi_get_list::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
