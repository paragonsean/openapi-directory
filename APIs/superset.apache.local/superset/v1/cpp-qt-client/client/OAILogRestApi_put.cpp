/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogRestApi_put.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogRestApi_put::OAILogRestApi_put(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogRestApi_put::OAILogRestApi_put() {
    this->initializeModel();
}

OAILogRestApi_put::~OAILogRestApi_put() {}

void OAILogRestApi_put::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_dttm_isSet = false;
    m_dttm_isValid = false;

    m_json_isSet = false;
    m_json_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAILogRestApi_put::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogRestApi_put::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_dttm_isValid = ::OpenAPI::fromJsonValue(m_dttm, json[QString("dttm")]);
    m_dttm_isSet = !json[QString("dttm")].isNull() && m_dttm_isValid;

    m_json_isValid = ::OpenAPI::fromJsonValue(m_json, json[QString("json")]);
    m_json_isSet = !json[QString("json")].isNull() && m_json_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAILogRestApi_put::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogRestApi_put::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_dttm_isSet) {
        obj.insert(QString("dttm"), ::OpenAPI::toJsonValue(m_dttm));
    }
    if (m_json_isSet) {
        obj.insert(QString("json"), ::OpenAPI::toJsonValue(m_json));
    }
    if (m_user_isSet) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

QString OAILogRestApi_put::getAction() const {
    return m_action;
}
void OAILogRestApi_put::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAILogRestApi_put::is_action_Set() const{
    return m_action_isSet;
}

bool OAILogRestApi_put::is_action_Valid() const{
    return m_action_isValid;
}

QDateTime OAILogRestApi_put::getDttm() const {
    return m_dttm;
}
void OAILogRestApi_put::setDttm(const QDateTime &dttm) {
    m_dttm = dttm;
    m_dttm_isSet = true;
}

bool OAILogRestApi_put::is_dttm_Set() const{
    return m_dttm_isSet;
}

bool OAILogRestApi_put::is_dttm_Valid() const{
    return m_dttm_isValid;
}

QString OAILogRestApi_put::getJson() const {
    return m_json;
}
void OAILogRestApi_put::setJson(const QString &json) {
    m_json = json;
    m_json_isSet = true;
}

bool OAILogRestApi_put::is_json_Set() const{
    return m_json_isSet;
}

bool OAILogRestApi_put::is_json_Valid() const{
    return m_json_isValid;
}

QJsonValue OAILogRestApi_put::getUser() const {
    return m_user;
}
void OAILogRestApi_put::setUser(const QJsonValue &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAILogRestApi_put::is_user_Set() const{
    return m_user_isSet;
}

bool OAILogRestApi_put::is_user_Valid() const{
    return m_user_isValid;
}

bool OAILogRestApi_put::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dttm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_json_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogRestApi_put::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
