/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_database__pk__get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_database__pk__get_200_response::OAI_database__pk__get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_database__pk__get_200_response::OAI_database__pk__get_200_response() {
    this->initializeModel();
}

OAI_database__pk__get_200_response::~OAI_database__pk__get_200_response() {}

void OAI_database__pk__get_200_response::initializeModel() {

    m_description_columns_isSet = false;
    m_description_columns_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_label_columns_isSet = false;
    m_label_columns_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_show_columns_isSet = false;
    m_show_columns_isValid = false;

    m_show_title_isSet = false;
    m_show_title_isValid = false;
}

void OAI_database__pk__get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_database__pk__get_200_response::fromJsonObject(QJsonObject json) {

    m_description_columns_isValid = ::OpenAPI::fromJsonValue(m_description_columns, json[QString("description_columns")]);
    m_description_columns_isSet = !json[QString("description_columns")].isNull() && m_description_columns_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_label_columns_isValid = ::OpenAPI::fromJsonValue(m_label_columns, json[QString("label_columns")]);
    m_label_columns_isSet = !json[QString("label_columns")].isNull() && m_label_columns_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_show_columns_isValid = ::OpenAPI::fromJsonValue(m_show_columns, json[QString("show_columns")]);
    m_show_columns_isSet = !json[QString("show_columns")].isNull() && m_show_columns_isValid;

    m_show_title_isValid = ::OpenAPI::fromJsonValue(m_show_title, json[QString("show_title")]);
    m_show_title_isSet = !json[QString("show_title")].isNull() && m_show_title_isValid;
}

QString OAI_database__pk__get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_database__pk__get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_description_columns.isSet()) {
        obj.insert(QString("description_columns"), ::OpenAPI::toJsonValue(m_description_columns));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_label_columns.isSet()) {
        obj.insert(QString("label_columns"), ::OpenAPI::toJsonValue(m_label_columns));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_show_columns.size() > 0) {
        obj.insert(QString("show_columns"), ::OpenAPI::toJsonValue(m_show_columns));
    }
    if (m_show_title_isSet) {
        obj.insert(QString("show_title"), ::OpenAPI::toJsonValue(m_show_title));
    }
    return obj;
}

OAI_annotation_layer__get_200_response_description_columns OAI_database__pk__get_200_response::getDescriptionColumns() const {
    return m_description_columns;
}
void OAI_database__pk__get_200_response::setDescriptionColumns(const OAI_annotation_layer__get_200_response_description_columns &description_columns) {
    m_description_columns = description_columns;
    m_description_columns_isSet = true;
}

bool OAI_database__pk__get_200_response::is_description_columns_Set() const{
    return m_description_columns_isSet;
}

bool OAI_database__pk__get_200_response::is_description_columns_Valid() const{
    return m_description_columns_isValid;
}

QString OAI_database__pk__get_200_response::getId() const {
    return m_id;
}
void OAI_database__pk__get_200_response::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAI_database__pk__get_200_response::is_id_Set() const{
    return m_id_isSet;
}

bool OAI_database__pk__get_200_response::is_id_Valid() const{
    return m_id_isValid;
}

OAI_annotation_layer__get_200_response_label_columns OAI_database__pk__get_200_response::getLabelColumns() const {
    return m_label_columns;
}
void OAI_database__pk__get_200_response::setLabelColumns(const OAI_annotation_layer__get_200_response_label_columns &label_columns) {
    m_label_columns = label_columns;
    m_label_columns_isSet = true;
}

bool OAI_database__pk__get_200_response::is_label_columns_Set() const{
    return m_label_columns_isSet;
}

bool OAI_database__pk__get_200_response::is_label_columns_Valid() const{
    return m_label_columns_isValid;
}

OAIDatabaseRestApi_get OAI_database__pk__get_200_response::getResult() const {
    return m_result;
}
void OAI_database__pk__get_200_response::setResult(const OAIDatabaseRestApi_get &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAI_database__pk__get_200_response::is_result_Set() const{
    return m_result_isSet;
}

bool OAI_database__pk__get_200_response::is_result_Valid() const{
    return m_result_isValid;
}

QList<QString> OAI_database__pk__get_200_response::getShowColumns() const {
    return m_show_columns;
}
void OAI_database__pk__get_200_response::setShowColumns(const QList<QString> &show_columns) {
    m_show_columns = show_columns;
    m_show_columns_isSet = true;
}

bool OAI_database__pk__get_200_response::is_show_columns_Set() const{
    return m_show_columns_isSet;
}

bool OAI_database__pk__get_200_response::is_show_columns_Valid() const{
    return m_show_columns_isValid;
}

QString OAI_database__pk__get_200_response::getShowTitle() const {
    return m_show_title;
}
void OAI_database__pk__get_200_response::setShowTitle(const QString &show_title) {
    m_show_title = show_title;
    m_show_title_isSet = true;
}

bool OAI_database__pk__get_200_response::is_show_title_Set() const{
    return m_show_title_isSet;
}

bool OAI_database__pk__get_200_response::is_show_title_Valid() const{
    return m_show_title_isValid;
}

bool OAI_database__pk__get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_columns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_columns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_database__pk__get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
