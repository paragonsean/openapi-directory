/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDashboardRestApi_get_list.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDashboardRestApi_get_list::OAIDashboardRestApi_get_list(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDashboardRestApi_get_list::OAIDashboardRestApi_get_list() {
    this->initializeModel();
}

OAIDashboardRestApi_get_list::~OAIDashboardRestApi_get_list() {}

void OAIDashboardRestApi_get_list::initializeModel() {

    m_changed_by_isSet = false;
    m_changed_by_isValid = false;

    m_changed_by_name_isSet = false;
    m_changed_by_name_isValid = false;

    m_changed_by_url_isSet = false;
    m_changed_by_url_isValid = false;

    m_changed_on_delta_humanized_isSet = false;
    m_changed_on_delta_humanized_isValid = false;

    m_changed_on_utc_isSet = false;
    m_changed_on_utc_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_css_isSet = false;
    m_css_isValid = false;

    m_dashboard_title_isSet = false;
    m_dashboard_title_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_json_metadata_isSet = false;
    m_json_metadata_isValid = false;

    m_owners_isSet = false;
    m_owners_isValid = false;

    m_position_json_isSet = false;
    m_position_json_isValid = false;

    m_published_isSet = false;
    m_published_isValid = false;

    m_roles_isSet = false;
    m_roles_isValid = false;

    m_slug_isSet = false;
    m_slug_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_thumbnail_url_isSet = false;
    m_thumbnail_url_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIDashboardRestApi_get_list::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDashboardRestApi_get_list::fromJsonObject(QJsonObject json) {

    m_changed_by_isValid = ::OpenAPI::fromJsonValue(m_changed_by, json[QString("changed_by")]);
    m_changed_by_isSet = !json[QString("changed_by")].isNull() && m_changed_by_isValid;

    m_changed_by_name_isValid = ::OpenAPI::fromJsonValue(m_changed_by_name, json[QString("changed_by_name")]);
    m_changed_by_name_isSet = !json[QString("changed_by_name")].isNull() && m_changed_by_name_isValid;

    m_changed_by_url_isValid = ::OpenAPI::fromJsonValue(m_changed_by_url, json[QString("changed_by_url")]);
    m_changed_by_url_isSet = !json[QString("changed_by_url")].isNull() && m_changed_by_url_isValid;

    m_changed_on_delta_humanized_isValid = ::OpenAPI::fromJsonValue(m_changed_on_delta_humanized, json[QString("changed_on_delta_humanized")]);
    m_changed_on_delta_humanized_isSet = !json[QString("changed_on_delta_humanized")].isNull() && m_changed_on_delta_humanized_isValid;

    m_changed_on_utc_isValid = ::OpenAPI::fromJsonValue(m_changed_on_utc, json[QString("changed_on_utc")]);
    m_changed_on_utc_isSet = !json[QString("changed_on_utc")].isNull() && m_changed_on_utc_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_css_isValid = ::OpenAPI::fromJsonValue(m_css, json[QString("css")]);
    m_css_isSet = !json[QString("css")].isNull() && m_css_isValid;

    m_dashboard_title_isValid = ::OpenAPI::fromJsonValue(m_dashboard_title, json[QString("dashboard_title")]);
    m_dashboard_title_isSet = !json[QString("dashboard_title")].isNull() && m_dashboard_title_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_json_metadata_isValid = ::OpenAPI::fromJsonValue(m_json_metadata, json[QString("json_metadata")]);
    m_json_metadata_isSet = !json[QString("json_metadata")].isNull() && m_json_metadata_isValid;

    m_owners_isValid = ::OpenAPI::fromJsonValue(m_owners, json[QString("owners")]);
    m_owners_isSet = !json[QString("owners")].isNull() && m_owners_isValid;

    m_position_json_isValid = ::OpenAPI::fromJsonValue(m_position_json, json[QString("position_json")]);
    m_position_json_isSet = !json[QString("position_json")].isNull() && m_position_json_isValid;

    m_published_isValid = ::OpenAPI::fromJsonValue(m_published, json[QString("published")]);
    m_published_isSet = !json[QString("published")].isNull() && m_published_isValid;

    m_roles_isValid = ::OpenAPI::fromJsonValue(m_roles, json[QString("roles")]);
    m_roles_isSet = !json[QString("roles")].isNull() && m_roles_isValid;

    m_slug_isValid = ::OpenAPI::fromJsonValue(m_slug, json[QString("slug")]);
    m_slug_isSet = !json[QString("slug")].isNull() && m_slug_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_thumbnail_url_isValid = ::OpenAPI::fromJsonValue(m_thumbnail_url, json[QString("thumbnail_url")]);
    m_thumbnail_url_isSet = !json[QString("thumbnail_url")].isNull() && m_thumbnail_url_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIDashboardRestApi_get_list::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDashboardRestApi_get_list::asJsonObject() const {
    QJsonObject obj;
    if (m_changed_by.isSet()) {
        obj.insert(QString("changed_by"), ::OpenAPI::toJsonValue(m_changed_by));
    }
    if (m_changed_by_name_isSet) {
        obj.insert(QString("changed_by_name"), ::OpenAPI::toJsonValue(m_changed_by_name));
    }
    if (m_changed_by_url_isSet) {
        obj.insert(QString("changed_by_url"), ::OpenAPI::toJsonValue(m_changed_by_url));
    }
    if (m_changed_on_delta_humanized_isSet) {
        obj.insert(QString("changed_on_delta_humanized"), ::OpenAPI::toJsonValue(m_changed_on_delta_humanized));
    }
    if (m_changed_on_utc_isSet) {
        obj.insert(QString("changed_on_utc"), ::OpenAPI::toJsonValue(m_changed_on_utc));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_css_isSet) {
        obj.insert(QString("css"), ::OpenAPI::toJsonValue(m_css));
    }
    if (m_dashboard_title_isSet) {
        obj.insert(QString("dashboard_title"), ::OpenAPI::toJsonValue(m_dashboard_title));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_json_metadata_isSet) {
        obj.insert(QString("json_metadata"), ::OpenAPI::toJsonValue(m_json_metadata));
    }
    if (m_owners.isSet()) {
        obj.insert(QString("owners"), ::OpenAPI::toJsonValue(m_owners));
    }
    if (m_position_json_isSet) {
        obj.insert(QString("position_json"), ::OpenAPI::toJsonValue(m_position_json));
    }
    if (m_published_isSet) {
        obj.insert(QString("published"), ::OpenAPI::toJsonValue(m_published));
    }
    if (m_roles.isSet()) {
        obj.insert(QString("roles"), ::OpenAPI::toJsonValue(m_roles));
    }
    if (m_slug_isSet) {
        obj.insert(QString("slug"), ::OpenAPI::toJsonValue(m_slug));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_thumbnail_url_isSet) {
        obj.insert(QString("thumbnail_url"), ::OpenAPI::toJsonValue(m_thumbnail_url));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIMeta15 OAIDashboardRestApi_get_list::getChangedBy() const {
    return m_changed_by;
}
void OAIDashboardRestApi_get_list::setChangedBy(const OAIMeta15 &changed_by) {
    m_changed_by = changed_by;
    m_changed_by_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_changed_by_Set() const{
    return m_changed_by_isSet;
}

bool OAIDashboardRestApi_get_list::is_changed_by_Valid() const{
    return m_changed_by_isValid;
}

QJsonValue OAIDashboardRestApi_get_list::getChangedByName() const {
    return m_changed_by_name;
}
void OAIDashboardRestApi_get_list::setChangedByName(const QJsonValue &changed_by_name) {
    m_changed_by_name = changed_by_name;
    m_changed_by_name_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_changed_by_name_Set() const{
    return m_changed_by_name_isSet;
}

bool OAIDashboardRestApi_get_list::is_changed_by_name_Valid() const{
    return m_changed_by_name_isValid;
}

QJsonValue OAIDashboardRestApi_get_list::getChangedByUrl() const {
    return m_changed_by_url;
}
void OAIDashboardRestApi_get_list::setChangedByUrl(const QJsonValue &changed_by_url) {
    m_changed_by_url = changed_by_url;
    m_changed_by_url_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_changed_by_url_Set() const{
    return m_changed_by_url_isSet;
}

bool OAIDashboardRestApi_get_list::is_changed_by_url_Valid() const{
    return m_changed_by_url_isValid;
}

QJsonValue OAIDashboardRestApi_get_list::getChangedOnDeltaHumanized() const {
    return m_changed_on_delta_humanized;
}
void OAIDashboardRestApi_get_list::setChangedOnDeltaHumanized(const QJsonValue &changed_on_delta_humanized) {
    m_changed_on_delta_humanized = changed_on_delta_humanized;
    m_changed_on_delta_humanized_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_changed_on_delta_humanized_Set() const{
    return m_changed_on_delta_humanized_isSet;
}

bool OAIDashboardRestApi_get_list::is_changed_on_delta_humanized_Valid() const{
    return m_changed_on_delta_humanized_isValid;
}

QJsonValue OAIDashboardRestApi_get_list::getChangedOnUtc() const {
    return m_changed_on_utc;
}
void OAIDashboardRestApi_get_list::setChangedOnUtc(const QJsonValue &changed_on_utc) {
    m_changed_on_utc = changed_on_utc;
    m_changed_on_utc_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_changed_on_utc_Set() const{
    return m_changed_on_utc_isSet;
}

bool OAIDashboardRestApi_get_list::is_changed_on_utc_Valid() const{
    return m_changed_on_utc_isValid;
}

OAIMeta14 OAIDashboardRestApi_get_list::getCreatedBy() const {
    return m_created_by;
}
void OAIDashboardRestApi_get_list::setCreatedBy(const OAIMeta14 &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIDashboardRestApi_get_list::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QString OAIDashboardRestApi_get_list::getCss() const {
    return m_css;
}
void OAIDashboardRestApi_get_list::setCss(const QString &css) {
    m_css = css;
    m_css_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_css_Set() const{
    return m_css_isSet;
}

bool OAIDashboardRestApi_get_list::is_css_Valid() const{
    return m_css_isValid;
}

QString OAIDashboardRestApi_get_list::getDashboardTitle() const {
    return m_dashboard_title;
}
void OAIDashboardRestApi_get_list::setDashboardTitle(const QString &dashboard_title) {
    m_dashboard_title = dashboard_title;
    m_dashboard_title_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_dashboard_title_Set() const{
    return m_dashboard_title_isSet;
}

bool OAIDashboardRestApi_get_list::is_dashboard_title_Valid() const{
    return m_dashboard_title_isValid;
}

qint32 OAIDashboardRestApi_get_list::getId() const {
    return m_id;
}
void OAIDashboardRestApi_get_list::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDashboardRestApi_get_list::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIDashboardRestApi_get_list::getJsonMetadata() const {
    return m_json_metadata;
}
void OAIDashboardRestApi_get_list::setJsonMetadata(const QString &json_metadata) {
    m_json_metadata = json_metadata;
    m_json_metadata_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_json_metadata_Set() const{
    return m_json_metadata_isSet;
}

bool OAIDashboardRestApi_get_list::is_json_metadata_Valid() const{
    return m_json_metadata_isValid;
}

OAIMeta17 OAIDashboardRestApi_get_list::getOwners() const {
    return m_owners;
}
void OAIDashboardRestApi_get_list::setOwners(const OAIMeta17 &owners) {
    m_owners = owners;
    m_owners_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_owners_Set() const{
    return m_owners_isSet;
}

bool OAIDashboardRestApi_get_list::is_owners_Valid() const{
    return m_owners_isValid;
}

QString OAIDashboardRestApi_get_list::getPositionJson() const {
    return m_position_json;
}
void OAIDashboardRestApi_get_list::setPositionJson(const QString &position_json) {
    m_position_json = position_json;
    m_position_json_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_position_json_Set() const{
    return m_position_json_isSet;
}

bool OAIDashboardRestApi_get_list::is_position_json_Valid() const{
    return m_position_json_isValid;
}

bool OAIDashboardRestApi_get_list::isPublished() const {
    return m_published;
}
void OAIDashboardRestApi_get_list::setPublished(const bool &published) {
    m_published = published;
    m_published_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_published_Set() const{
    return m_published_isSet;
}

bool OAIDashboardRestApi_get_list::is_published_Valid() const{
    return m_published_isValid;
}

OAIMeta16 OAIDashboardRestApi_get_list::getRoles() const {
    return m_roles;
}
void OAIDashboardRestApi_get_list::setRoles(const OAIMeta16 &roles) {
    m_roles = roles;
    m_roles_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_roles_Set() const{
    return m_roles_isSet;
}

bool OAIDashboardRestApi_get_list::is_roles_Valid() const{
    return m_roles_isValid;
}

QString OAIDashboardRestApi_get_list::getSlug() const {
    return m_slug;
}
void OAIDashboardRestApi_get_list::setSlug(const QString &slug) {
    m_slug = slug;
    m_slug_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_slug_Set() const{
    return m_slug_isSet;
}

bool OAIDashboardRestApi_get_list::is_slug_Valid() const{
    return m_slug_isValid;
}

QJsonValue OAIDashboardRestApi_get_list::getStatus() const {
    return m_status;
}
void OAIDashboardRestApi_get_list::setStatus(const QJsonValue &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDashboardRestApi_get_list::is_status_Valid() const{
    return m_status_isValid;
}

QJsonValue OAIDashboardRestApi_get_list::getThumbnailUrl() const {
    return m_thumbnail_url;
}
void OAIDashboardRestApi_get_list::setThumbnailUrl(const QJsonValue &thumbnail_url) {
    m_thumbnail_url = thumbnail_url;
    m_thumbnail_url_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_thumbnail_url_Set() const{
    return m_thumbnail_url_isSet;
}

bool OAIDashboardRestApi_get_list::is_thumbnail_url_Valid() const{
    return m_thumbnail_url_isValid;
}

QJsonValue OAIDashboardRestApi_get_list::getUrl() const {
    return m_url;
}
void OAIDashboardRestApi_get_list::setUrl(const QJsonValue &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIDashboardRestApi_get_list::is_url_Set() const{
    return m_url_isSet;
}

bool OAIDashboardRestApi_get_list::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIDashboardRestApi_get_list::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_changed_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_by_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_by_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_on_delta_humanized_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_on_utc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_css_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dashboard_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_json_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owners.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_json_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_published_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_roles.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_slug_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDashboardRestApi_get_list::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
