/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChartDataRollingOptionsSchema.h
 *
 * 
 */

#ifndef OAIChartDataRollingOptionsSchema_H
#define OAIChartDataRollingOptionsSchema_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChartDataRollingOptionsSchema : public OAIObject {
public:
    OAIChartDataRollingOptionsSchema();
    OAIChartDataRollingOptionsSchema(QString json);
    ~OAIChartDataRollingOptionsSchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCenter() const;
    void setCenter(const bool &center);
    bool is_center_Set() const;
    bool is_center_Valid() const;

    qint32 getMinPeriods() const;
    void setMinPeriods(const qint32 &min_periods);
    bool is_min_periods_Set() const;
    bool is_min_periods_Valid() const;

    QString getRollingType() const;
    void setRollingType(const QString &rolling_type);
    bool is_rolling_type_Set() const;
    bool is_rolling_type_Valid() const;

    OAIObject getRollingTypeOptions() const;
    void setRollingTypeOptions(const OAIObject &rolling_type_options);
    bool is_rolling_type_options_Set() const;
    bool is_rolling_type_options_Valid() const;

    QString getWinType() const;
    void setWinType(const QString &win_type);
    bool is_win_type_Set() const;
    bool is_win_type_Valid() const;

    qint32 getWindow() const;
    void setWindow(const qint32 &window);
    bool is_window_Set() const;
    bool is_window_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_center;
    bool m_center_isSet;
    bool m_center_isValid;

    qint32 m_min_periods;
    bool m_min_periods_isSet;
    bool m_min_periods_isValid;

    QString m_rolling_type;
    bool m_rolling_type_isSet;
    bool m_rolling_type_isValid;

    OAIObject m_rolling_type_options;
    bool m_rolling_type_options_isSet;
    bool m_rolling_type_options_isValid;

    QString m_win_type;
    bool m_win_type_isSet;
    bool m_win_type_isValid;

    qint32 m_window;
    bool m_window_isSet;
    bool m_window_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChartDataRollingOptionsSchema)

#endif // OAIChartDataRollingOptionsSchema_H
