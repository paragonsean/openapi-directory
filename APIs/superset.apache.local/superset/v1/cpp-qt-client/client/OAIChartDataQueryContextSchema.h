/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChartDataQueryContextSchema.h
 *
 * 
 */

#ifndef OAIChartDataQueryContextSchema_H
#define OAIChartDataQueryContextSchema_H

#include <QJsonObject>

#include "OAIChartDataDatasource.h"
#include "OAIChartDataQueryObject.h"
#include <QJsonValue>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChartDataDatasource;
class OAIChartDataQueryObject;

class OAIChartDataQueryContextSchema : public OAIObject {
public:
    OAIChartDataQueryContextSchema();
    OAIChartDataQueryContextSchema(QString json);
    ~OAIChartDataQueryContextSchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChartDataDatasource getDatasource() const;
    void setDatasource(const OAIChartDataDatasource &datasource);
    bool is_datasource_Set() const;
    bool is_datasource_Valid() const;

    bool isForce() const;
    void setForce(const bool &force);
    bool is_force_Set() const;
    bool is_force_Valid() const;

    QList<OAIChartDataQueryObject> getQueries() const;
    void setQueries(const QList<OAIChartDataQueryObject> &queries);
    bool is_queries_Set() const;
    bool is_queries_Valid() const;

    QJsonValue getResultFormat() const;
    void setResultFormat(const QJsonValue &result_format);
    bool is_result_format_Set() const;
    bool is_result_format_Valid() const;

    QJsonValue getResultType() const;
    void setResultType(const QJsonValue &result_type);
    bool is_result_type_Set() const;
    bool is_result_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChartDataDatasource m_datasource;
    bool m_datasource_isSet;
    bool m_datasource_isValid;

    bool m_force;
    bool m_force_isSet;
    bool m_force_isValid;

    QList<OAIChartDataQueryObject> m_queries;
    bool m_queries_isSet;
    bool m_queries_isValid;

    QJsonValue m_result_format;
    bool m_result_format_isSet;
    bool m_result_format_isValid;

    QJsonValue m_result_type;
    bool m_result_type_isSet;
    bool m_result_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChartDataQueryContextSchema)

#endif // OAIChartDataQueryContextSchema_H
