/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMeta22.h
 *
 * 
 */

#ifndef OAIMeta22_H
#define OAIMeta22_H

#include <QJsonObject>

#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMeta22 : public OAIObject {
public:
    OAIMeta22();
    OAIMeta22(QString json);
    ~OAIMeta22() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getChangedOn() const;
    void setChangedOn(const QDateTime &changed_on);
    bool is_changed_on_Set() const;
    bool is_changed_on_Valid() const;

    QString getColumnName() const;
    void setColumnName(const QString &column_name);
    bool is_column_name_Set() const;
    bool is_column_name_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExpression() const;
    void setExpression(const QString &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    bool isFilterable() const;
    void setFilterable(const bool &filterable);
    bool is_filterable_Set() const;
    bool is_filterable_Valid() const;

    bool isGroupby() const;
    void setGroupby(const bool &groupby);
    bool is_groupby_Set() const;
    bool is_groupby_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    bool isIsDttm() const;
    void setIsDttm(const bool &is_dttm);
    bool is_is_dttm_Set() const;
    bool is_is_dttm_Valid() const;

    QString getPythonDateFormat() const;
    void setPythonDateFormat(const QString &python_date_format);
    bool is_python_date_format_Set() const;
    bool is_python_date_format_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QJsonValue getTypeGeneric() const;
    void setTypeGeneric(const QJsonValue &type_generic);
    bool is_type_generic_Set() const;
    bool is_type_generic_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    QString getVerboseName() const;
    void setVerboseName(const QString &verbose_name);
    bool is_verbose_name_Set() const;
    bool is_verbose_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_changed_on;
    bool m_changed_on_isSet;
    bool m_changed_on_isValid;

    QString m_column_name;
    bool m_column_name_isSet;
    bool m_column_name_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    bool m_filterable;
    bool m_filterable_isSet;
    bool m_filterable_isValid;

    bool m_groupby;
    bool m_groupby_isSet;
    bool m_groupby_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    bool m_is_dttm;
    bool m_is_dttm_isSet;
    bool m_is_dttm_isValid;

    QString m_python_date_format;
    bool m_python_date_format_isSet;
    bool m_python_date_format_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QJsonValue m_type_generic;
    bool m_type_generic_isSet;
    bool m_type_generic_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;

    QString m_verbose_name;
    bool m_verbose_name_isSet;
    bool m_verbose_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMeta22)

#endif // OAIMeta22_H
