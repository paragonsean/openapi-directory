/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_annotation_layer__info_get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_annotation_layer__info_get_200_response::OAI_annotation_layer__info_get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_annotation_layer__info_get_200_response::OAI_annotation_layer__info_get_200_response() {
    this->initializeModel();
}

OAI_annotation_layer__info_get_200_response::~OAI_annotation_layer__info_get_200_response() {}

void OAI_annotation_layer__info_get_200_response::initializeModel() {

    m_add_columns_isSet = false;
    m_add_columns_isValid = false;

    m_edit_columns_isSet = false;
    m_edit_columns_isValid = false;

    m_filters_isSet = false;
    m_filters_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;
}

void OAI_annotation_layer__info_get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_annotation_layer__info_get_200_response::fromJsonObject(QJsonObject json) {

    m_add_columns_isValid = ::OpenAPI::fromJsonValue(m_add_columns, json[QString("add_columns")]);
    m_add_columns_isSet = !json[QString("add_columns")].isNull() && m_add_columns_isValid;

    m_edit_columns_isValid = ::OpenAPI::fromJsonValue(m_edit_columns, json[QString("edit_columns")]);
    m_edit_columns_isSet = !json[QString("edit_columns")].isNull() && m_edit_columns_isValid;

    m_filters_isValid = ::OpenAPI::fromJsonValue(m_filters, json[QString("filters")]);
    m_filters_isSet = !json[QString("filters")].isNull() && m_filters_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;
}

QString OAI_annotation_layer__info_get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_annotation_layer__info_get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_add_columns_isSet) {
        obj.insert(QString("add_columns"), ::OpenAPI::toJsonValue(m_add_columns));
    }
    if (m_edit_columns_isSet) {
        obj.insert(QString("edit_columns"), ::OpenAPI::toJsonValue(m_edit_columns));
    }
    if (m_filters.isSet()) {
        obj.insert(QString("filters"), ::OpenAPI::toJsonValue(m_filters));
    }
    if (m_permissions.size() > 0) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    return obj;
}

OAIObject OAI_annotation_layer__info_get_200_response::getAddColumns() const {
    return m_add_columns;
}
void OAI_annotation_layer__info_get_200_response::setAddColumns(const OAIObject &add_columns) {
    m_add_columns = add_columns;
    m_add_columns_isSet = true;
}

bool OAI_annotation_layer__info_get_200_response::is_add_columns_Set() const{
    return m_add_columns_isSet;
}

bool OAI_annotation_layer__info_get_200_response::is_add_columns_Valid() const{
    return m_add_columns_isValid;
}

OAIObject OAI_annotation_layer__info_get_200_response::getEditColumns() const {
    return m_edit_columns;
}
void OAI_annotation_layer__info_get_200_response::setEditColumns(const OAIObject &edit_columns) {
    m_edit_columns = edit_columns;
    m_edit_columns_isSet = true;
}

bool OAI_annotation_layer__info_get_200_response::is_edit_columns_Set() const{
    return m_edit_columns_isSet;
}

bool OAI_annotation_layer__info_get_200_response::is_edit_columns_Valid() const{
    return m_edit_columns_isValid;
}

OAI_annotation_layer__info_get_200_response_filters OAI_annotation_layer__info_get_200_response::getFilters() const {
    return m_filters;
}
void OAI_annotation_layer__info_get_200_response::setFilters(const OAI_annotation_layer__info_get_200_response_filters &filters) {
    m_filters = filters;
    m_filters_isSet = true;
}

bool OAI_annotation_layer__info_get_200_response::is_filters_Set() const{
    return m_filters_isSet;
}

bool OAI_annotation_layer__info_get_200_response::is_filters_Valid() const{
    return m_filters_isValid;
}

QList<QString> OAI_annotation_layer__info_get_200_response::getPermissions() const {
    return m_permissions;
}
void OAI_annotation_layer__info_get_200_response::setPermissions(const QList<QString> &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAI_annotation_layer__info_get_200_response::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAI_annotation_layer__info_get_200_response::is_permissions_Valid() const{
    return m_permissions_isValid;
}

bool OAI_annotation_layer__info_get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_columns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edit_columns_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filters.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_annotation_layer__info_get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
