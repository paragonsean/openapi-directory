/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChartDataQueryObject.h
 *
 * 
 */

#ifndef OAIChartDataQueryObject_H
#define OAIChartDataQueryObject_H

#include <QJsonObject>

#include "OAIAnnotationLayer.h"
#include "OAIChartDataDatasource.h"
#include "OAIChartDataExtras.h"
#include "OAIChartDataFilter.h"
#include "OAIChartDataPostProcessingOperation.h"
#include "OAIObject.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnnotationLayer;
class OAIChartDataDatasource;
class OAIChartDataExtras;
class OAIChartDataFilter;
class OAIChartDataPostProcessingOperation;

class OAIChartDataQueryObject : public OAIObject {
public:
    OAIChartDataQueryObject();
    OAIChartDataQueryObject(QString json);
    ~OAIChartDataQueryObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAnnotationLayer> getAnnotationLayers() const;
    void setAnnotationLayers(const QList<OAIAnnotationLayer> &annotation_layers);
    bool is_annotation_layers_Set() const;
    bool is_annotation_layers_Valid() const;

    OAIObject getAppliedTimeExtras() const;
    void setAppliedTimeExtras(const OAIObject &applied_time_extras);
    bool is_applied_time_extras_Set() const;
    bool is_applied_time_extras_Valid() const;

    bool isApplyFetchValuesPredicate() const;
    void setApplyFetchValuesPredicate(const bool &apply_fetch_values_predicate);
    bool is_apply_fetch_values_predicate_Set() const;
    bool is_apply_fetch_values_predicate_Valid() const;

    QList<QString> getColumns() const;
    void setColumns(const QList<QString> &columns);
    bool is_columns_Set() const;
    bool is_columns_Valid() const;

    OAIChartDataDatasource getDatasource() const;
    void setDatasource(const OAIChartDataDatasource &datasource);
    bool is_datasource_Set() const;
    bool is_datasource_Valid() const;

    QString getDruidTimeOrigin() const;
    void setDruidTimeOrigin(const QString &druid_time_origin);
    bool is_druid_time_origin_Set() const;
    bool is_druid_time_origin_Valid() const;

    OAIChartDataExtras getExtras() const;
    void setExtras(const OAIChartDataExtras &extras);
    bool is_extras_Set() const;
    bool is_extras_Valid() const;

    QList<OAIChartDataFilter> getFilters() const;
    void setFilters(const QList<OAIChartDataFilter> &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    QString getGranularity() const;
    void setGranularity(const QString &granularity);
    bool is_granularity_Set() const;
    bool is_granularity_Valid() const;

    QString getGranularitySqla() const;
    void setGranularitySqla(const QString &granularity_sqla);
    bool is_granularity_sqla_Set() const;
    bool is_granularity_sqla_Valid() const;

    QList<QString> getGroupby() const;
    void setGroupby(const QList<QString> &groupby);
    bool is_groupby_Set() const;
    bool is_groupby_Valid() const;

    QString getHaving() const;
    void setHaving(const QString &having);
    bool is_having_Set() const;
    bool is_having_Valid() const;

    QList<OAIChartDataFilter> getHavingFilters() const;
    void setHavingFilters(const QList<OAIChartDataFilter> &having_filters);
    bool is_having_filters_Set() const;
    bool is_having_filters_Valid() const;

    bool isIsRowcount() const;
    void setIsRowcount(const bool &is_rowcount);
    bool is_is_rowcount_Set() const;
    bool is_is_rowcount_Valid() const;

    bool isIsTimeseries() const;
    void setIsTimeseries(const bool &is_timeseries);
    bool is_is_timeseries_Set() const;
    bool is_is_timeseries_Valid() const;

    QList<QJsonValue> getMetrics() const;
    void setMetrics(const QList<QJsonValue> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    bool isOrderDesc() const;
    void setOrderDesc(const bool &order_desc);
    bool is_order_desc_Set() const;
    bool is_order_desc_Valid() const;

    QList<QJsonValue> getOrderby() const;
    void setOrderby(const QList<QJsonValue> &orderby);
    bool is_orderby_Set() const;
    bool is_orderby_Valid() const;

    QList<OAIChartDataPostProcessingOperation> getPostProcessing() const;
    void setPostProcessing(const QList<OAIChartDataPostProcessingOperation> &post_processing);
    bool is_post_processing_Set() const;
    bool is_post_processing_Valid() const;

    QJsonValue getResultType() const;
    void setResultType(const QJsonValue &result_type);
    bool is_result_type_Set() const;
    bool is_result_type_Valid() const;

    qint32 getRowLimit() const;
    void setRowLimit(const qint32 &row_limit);
    bool is_row_limit_Set() const;
    bool is_row_limit_Valid() const;

    qint32 getRowOffset() const;
    void setRowOffset(const qint32 &row_offset);
    bool is_row_offset_Set() const;
    bool is_row_offset_Valid() const;

    QList<QString> getTimeOffsets() const;
    void setTimeOffsets(const QList<QString> &time_offsets);
    bool is_time_offsets_Set() const;
    bool is_time_offsets_Valid() const;

    QString getTimeRange() const;
    void setTimeRange(const QString &time_range);
    bool is_time_range_Set() const;
    bool is_time_range_Valid() const;

    QString getTimeShift() const;
    void setTimeShift(const QString &time_shift);
    bool is_time_shift_Set() const;
    bool is_time_shift_Valid() const;

    qint32 getTimeseriesLimit() const;
    void setTimeseriesLimit(const qint32 &timeseries_limit);
    bool is_timeseries_limit_Set() const;
    bool is_timeseries_limit_Valid() const;

    QJsonValue getTimeseriesLimitMetric() const;
    void setTimeseriesLimitMetric(const QJsonValue &timeseries_limit_metric);
    bool is_timeseries_limit_metric_Set() const;
    bool is_timeseries_limit_metric_Valid() const;

    QMap<QString, QString> getUrlParams() const;
    void setUrlParams(const QMap<QString, QString> &url_params);
    bool is_url_params_Set() const;
    bool is_url_params_Valid() const;

    QString getWhere() const;
    void setWhere(const QString &where);
    bool is_where_Set() const;
    bool is_where_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAnnotationLayer> m_annotation_layers;
    bool m_annotation_layers_isSet;
    bool m_annotation_layers_isValid;

    OAIObject m_applied_time_extras;
    bool m_applied_time_extras_isSet;
    bool m_applied_time_extras_isValid;

    bool m_apply_fetch_values_predicate;
    bool m_apply_fetch_values_predicate_isSet;
    bool m_apply_fetch_values_predicate_isValid;

    QList<QString> m_columns;
    bool m_columns_isSet;
    bool m_columns_isValid;

    OAIChartDataDatasource m_datasource;
    bool m_datasource_isSet;
    bool m_datasource_isValid;

    QString m_druid_time_origin;
    bool m_druid_time_origin_isSet;
    bool m_druid_time_origin_isValid;

    OAIChartDataExtras m_extras;
    bool m_extras_isSet;
    bool m_extras_isValid;

    QList<OAIChartDataFilter> m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    QString m_granularity;
    bool m_granularity_isSet;
    bool m_granularity_isValid;

    QString m_granularity_sqla;
    bool m_granularity_sqla_isSet;
    bool m_granularity_sqla_isValid;

    QList<QString> m_groupby;
    bool m_groupby_isSet;
    bool m_groupby_isValid;

    QString m_having;
    bool m_having_isSet;
    bool m_having_isValid;

    QList<OAIChartDataFilter> m_having_filters;
    bool m_having_filters_isSet;
    bool m_having_filters_isValid;

    bool m_is_rowcount;
    bool m_is_rowcount_isSet;
    bool m_is_rowcount_isValid;

    bool m_is_timeseries;
    bool m_is_timeseries_isSet;
    bool m_is_timeseries_isValid;

    QList<QJsonValue> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    bool m_order_desc;
    bool m_order_desc_isSet;
    bool m_order_desc_isValid;

    QList<QJsonValue> m_orderby;
    bool m_orderby_isSet;
    bool m_orderby_isValid;

    QList<OAIChartDataPostProcessingOperation> m_post_processing;
    bool m_post_processing_isSet;
    bool m_post_processing_isValid;

    QJsonValue m_result_type;
    bool m_result_type_isSet;
    bool m_result_type_isValid;

    qint32 m_row_limit;
    bool m_row_limit_isSet;
    bool m_row_limit_isValid;

    qint32 m_row_offset;
    bool m_row_offset_isSet;
    bool m_row_offset_isValid;

    QList<QString> m_time_offsets;
    bool m_time_offsets_isSet;
    bool m_time_offsets_isValid;

    QString m_time_range;
    bool m_time_range_isSet;
    bool m_time_range_isValid;

    QString m_time_shift;
    bool m_time_shift_isSet;
    bool m_time_shift_isValid;

    qint32 m_timeseries_limit;
    bool m_timeseries_limit_isSet;
    bool m_timeseries_limit_isValid;

    QJsonValue m_timeseries_limit_metric;
    bool m_timeseries_limit_metric_isSet;
    bool m_timeseries_limit_metric_isValid;

    QMap<QString, QString> m_url_params;
    bool m_url_params_isSet;
    bool m_url_params_isValid;

    QString m_where;
    bool m_where_isSet;
    bool m_where_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChartDataQueryObject)

#endif // OAIChartDataQueryObject_H
