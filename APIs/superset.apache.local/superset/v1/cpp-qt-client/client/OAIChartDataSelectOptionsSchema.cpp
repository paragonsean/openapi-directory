/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChartDataSelectOptionsSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChartDataSelectOptionsSchema::OAIChartDataSelectOptionsSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChartDataSelectOptionsSchema::OAIChartDataSelectOptionsSchema() {
    this->initializeModel();
}

OAIChartDataSelectOptionsSchema::~OAIChartDataSelectOptionsSchema() {}

void OAIChartDataSelectOptionsSchema::initializeModel() {

    m_columns_isSet = false;
    m_columns_isValid = false;

    m_exclude_isSet = false;
    m_exclude_isValid = false;

    m_rename_isSet = false;
    m_rename_isValid = false;
}

void OAIChartDataSelectOptionsSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChartDataSelectOptionsSchema::fromJsonObject(QJsonObject json) {

    m_columns_isValid = ::OpenAPI::fromJsonValue(m_columns, json[QString("columns")]);
    m_columns_isSet = !json[QString("columns")].isNull() && m_columns_isValid;

    m_exclude_isValid = ::OpenAPI::fromJsonValue(m_exclude, json[QString("exclude")]);
    m_exclude_isSet = !json[QString("exclude")].isNull() && m_exclude_isValid;

    m_rename_isValid = ::OpenAPI::fromJsonValue(m_rename, json[QString("rename")]);
    m_rename_isSet = !json[QString("rename")].isNull() && m_rename_isValid;
}

QString OAIChartDataSelectOptionsSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChartDataSelectOptionsSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_columns.size() > 0) {
        obj.insert(QString("columns"), ::OpenAPI::toJsonValue(m_columns));
    }
    if (m_exclude.size() > 0) {
        obj.insert(QString("exclude"), ::OpenAPI::toJsonValue(m_exclude));
    }
    if (m_rename.size() > 0) {
        obj.insert(QString("rename"), ::OpenAPI::toJsonValue(m_rename));
    }
    return obj;
}

QList<QString> OAIChartDataSelectOptionsSchema::getColumns() const {
    return m_columns;
}
void OAIChartDataSelectOptionsSchema::setColumns(const QList<QString> &columns) {
    m_columns = columns;
    m_columns_isSet = true;
}

bool OAIChartDataSelectOptionsSchema::is_columns_Set() const{
    return m_columns_isSet;
}

bool OAIChartDataSelectOptionsSchema::is_columns_Valid() const{
    return m_columns_isValid;
}

QList<QString> OAIChartDataSelectOptionsSchema::getExclude() const {
    return m_exclude;
}
void OAIChartDataSelectOptionsSchema::setExclude(const QList<QString> &exclude) {
    m_exclude = exclude;
    m_exclude_isSet = true;
}

bool OAIChartDataSelectOptionsSchema::is_exclude_Set() const{
    return m_exclude_isSet;
}

bool OAIChartDataSelectOptionsSchema::is_exclude_Valid() const{
    return m_exclude_isValid;
}

QList<OAIObject> OAIChartDataSelectOptionsSchema::getRename() const {
    return m_rename;
}
void OAIChartDataSelectOptionsSchema::setRename(const QList<OAIObject> &rename) {
    m_rename = rename;
    m_rename_isSet = true;
}

bool OAIChartDataSelectOptionsSchema::is_rename_Set() const{
    return m_rename_isSet;
}

bool OAIChartDataSelectOptionsSchema::is_rename_Valid() const{
    return m_rename_isValid;
}

bool OAIChartDataSelectOptionsSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rename.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChartDataSelectOptionsSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
