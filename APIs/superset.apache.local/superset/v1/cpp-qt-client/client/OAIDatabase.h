/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatabase.h
 *
 * 
 */

#ifndef OAIDatabase_H
#define OAIDatabase_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDatabase : public OAIObject {
public:
    OAIDatabase();
    OAIDatabase(QString json);
    ~OAIDatabase() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowMultiSchemaMetadataFetch() const;
    void setAllowMultiSchemaMetadataFetch(const bool &allow_multi_schema_metadata_fetch);
    bool is_allow_multi_schema_metadata_fetch_Set() const;
    bool is_allow_multi_schema_metadata_fetch_Valid() const;

    bool isAllowsCostEstimate() const;
    void setAllowsCostEstimate(const bool &allows_cost_estimate);
    bool is_allows_cost_estimate_Set() const;
    bool is_allows_cost_estimate_Valid() const;

    bool isAllowsSubquery() const;
    void setAllowsSubquery(const bool &allows_subquery);
    bool is_allows_subquery_Set() const;
    bool is_allows_subquery_Valid() const;

    bool isAllowsVirtualTableExplore() const;
    void setAllowsVirtualTableExplore(const bool &allows_virtual_table_explore);
    bool is_allows_virtual_table_explore_Set() const;
    bool is_allows_virtual_table_explore_Valid() const;

    QString getBackend() const;
    void setBackend(const QString &backend);
    bool is_backend_Set() const;
    bool is_backend_Valid() const;

    qint32 getExploreDatabaseId() const;
    void setExploreDatabaseId(const qint32 &explore_database_id);
    bool is_explore_database_id_Set() const;
    bool is_explore_database_id_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_multi_schema_metadata_fetch;
    bool m_allow_multi_schema_metadata_fetch_isSet;
    bool m_allow_multi_schema_metadata_fetch_isValid;

    bool m_allows_cost_estimate;
    bool m_allows_cost_estimate_isSet;
    bool m_allows_cost_estimate_isValid;

    bool m_allows_subquery;
    bool m_allows_subquery_isSet;
    bool m_allows_subquery_isValid;

    bool m_allows_virtual_table_explore;
    bool m_allows_virtual_table_explore_isSet;
    bool m_allows_virtual_table_explore_isValid;

    QString m_backend;
    bool m_backend_isSet;
    bool m_backend_isValid;

    qint32 m_explore_database_id;
    bool m_explore_database_id_isSet;
    bool m_explore_database_id_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatabase)

#endif // OAIDatabase_H
