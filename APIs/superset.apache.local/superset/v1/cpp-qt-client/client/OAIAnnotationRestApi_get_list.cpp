/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnnotationRestApi_get_list.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnnotationRestApi_get_list::OAIAnnotationRestApi_get_list(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnnotationRestApi_get_list::OAIAnnotationRestApi_get_list() {
    this->initializeModel();
}

OAIAnnotationRestApi_get_list::~OAIAnnotationRestApi_get_list() {}

void OAIAnnotationRestApi_get_list::initializeModel() {

    m_changed_by_isSet = false;
    m_changed_by_isValid = false;

    m_changed_on_delta_humanized_isSet = false;
    m_changed_on_delta_humanized_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_end_dttm_isSet = false;
    m_end_dttm_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_long_descr_isSet = false;
    m_long_descr_isValid = false;

    m_short_descr_isSet = false;
    m_short_descr_isValid = false;

    m_start_dttm_isSet = false;
    m_start_dttm_isValid = false;
}

void OAIAnnotationRestApi_get_list::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnnotationRestApi_get_list::fromJsonObject(QJsonObject json) {

    m_changed_by_isValid = ::OpenAPI::fromJsonValue(m_changed_by, json[QString("changed_by")]);
    m_changed_by_isSet = !json[QString("changed_by")].isNull() && m_changed_by_isValid;

    m_changed_on_delta_humanized_isValid = ::OpenAPI::fromJsonValue(m_changed_on_delta_humanized, json[QString("changed_on_delta_humanized")]);
    m_changed_on_delta_humanized_isSet = !json[QString("changed_on_delta_humanized")].isNull() && m_changed_on_delta_humanized_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_end_dttm_isValid = ::OpenAPI::fromJsonValue(m_end_dttm, json[QString("end_dttm")]);
    m_end_dttm_isSet = !json[QString("end_dttm")].isNull() && m_end_dttm_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_long_descr_isValid = ::OpenAPI::fromJsonValue(m_long_descr, json[QString("long_descr")]);
    m_long_descr_isSet = !json[QString("long_descr")].isNull() && m_long_descr_isValid;

    m_short_descr_isValid = ::OpenAPI::fromJsonValue(m_short_descr, json[QString("short_descr")]);
    m_short_descr_isSet = !json[QString("short_descr")].isNull() && m_short_descr_isValid;

    m_start_dttm_isValid = ::OpenAPI::fromJsonValue(m_start_dttm, json[QString("start_dttm")]);
    m_start_dttm_isSet = !json[QString("start_dttm")].isNull() && m_start_dttm_isValid;
}

QString OAIAnnotationRestApi_get_list::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnnotationRestApi_get_list::asJsonObject() const {
    QJsonObject obj;
    if (m_changed_by.isSet()) {
        obj.insert(QString("changed_by"), ::OpenAPI::toJsonValue(m_changed_by));
    }
    if (m_changed_on_delta_humanized_isSet) {
        obj.insert(QString("changed_on_delta_humanized"), ::OpenAPI::toJsonValue(m_changed_on_delta_humanized));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_end_dttm_isSet) {
        obj.insert(QString("end_dttm"), ::OpenAPI::toJsonValue(m_end_dttm));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_long_descr_isSet) {
        obj.insert(QString("long_descr"), ::OpenAPI::toJsonValue(m_long_descr));
    }
    if (m_short_descr_isSet) {
        obj.insert(QString("short_descr"), ::OpenAPI::toJsonValue(m_short_descr));
    }
    if (m_start_dttm_isSet) {
        obj.insert(QString("start_dttm"), ::OpenAPI::toJsonValue(m_start_dttm));
    }
    return obj;
}

OAIMeta1 OAIAnnotationRestApi_get_list::getChangedBy() const {
    return m_changed_by;
}
void OAIAnnotationRestApi_get_list::setChangedBy(const OAIMeta1 &changed_by) {
    m_changed_by = changed_by;
    m_changed_by_isSet = true;
}

bool OAIAnnotationRestApi_get_list::is_changed_by_Set() const{
    return m_changed_by_isSet;
}

bool OAIAnnotationRestApi_get_list::is_changed_by_Valid() const{
    return m_changed_by_isValid;
}

QJsonValue OAIAnnotationRestApi_get_list::getChangedOnDeltaHumanized() const {
    return m_changed_on_delta_humanized;
}
void OAIAnnotationRestApi_get_list::setChangedOnDeltaHumanized(const QJsonValue &changed_on_delta_humanized) {
    m_changed_on_delta_humanized = changed_on_delta_humanized;
    m_changed_on_delta_humanized_isSet = true;
}

bool OAIAnnotationRestApi_get_list::is_changed_on_delta_humanized_Set() const{
    return m_changed_on_delta_humanized_isSet;
}

bool OAIAnnotationRestApi_get_list::is_changed_on_delta_humanized_Valid() const{
    return m_changed_on_delta_humanized_isValid;
}

OAIMeta OAIAnnotationRestApi_get_list::getCreatedBy() const {
    return m_created_by;
}
void OAIAnnotationRestApi_get_list::setCreatedBy(const OAIMeta &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIAnnotationRestApi_get_list::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIAnnotationRestApi_get_list::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIAnnotationRestApi_get_list::getEndDttm() const {
    return m_end_dttm;
}
void OAIAnnotationRestApi_get_list::setEndDttm(const QDateTime &end_dttm) {
    m_end_dttm = end_dttm;
    m_end_dttm_isSet = true;
}

bool OAIAnnotationRestApi_get_list::is_end_dttm_Set() const{
    return m_end_dttm_isSet;
}

bool OAIAnnotationRestApi_get_list::is_end_dttm_Valid() const{
    return m_end_dttm_isValid;
}

qint32 OAIAnnotationRestApi_get_list::getId() const {
    return m_id;
}
void OAIAnnotationRestApi_get_list::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAnnotationRestApi_get_list::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAnnotationRestApi_get_list::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAnnotationRestApi_get_list::getLongDescr() const {
    return m_long_descr;
}
void OAIAnnotationRestApi_get_list::setLongDescr(const QString &long_descr) {
    m_long_descr = long_descr;
    m_long_descr_isSet = true;
}

bool OAIAnnotationRestApi_get_list::is_long_descr_Set() const{
    return m_long_descr_isSet;
}

bool OAIAnnotationRestApi_get_list::is_long_descr_Valid() const{
    return m_long_descr_isValid;
}

QString OAIAnnotationRestApi_get_list::getShortDescr() const {
    return m_short_descr;
}
void OAIAnnotationRestApi_get_list::setShortDescr(const QString &short_descr) {
    m_short_descr = short_descr;
    m_short_descr_isSet = true;
}

bool OAIAnnotationRestApi_get_list::is_short_descr_Set() const{
    return m_short_descr_isSet;
}

bool OAIAnnotationRestApi_get_list::is_short_descr_Valid() const{
    return m_short_descr_isValid;
}

QDateTime OAIAnnotationRestApi_get_list::getStartDttm() const {
    return m_start_dttm;
}
void OAIAnnotationRestApi_get_list::setStartDttm(const QDateTime &start_dttm) {
    m_start_dttm = start_dttm;
    m_start_dttm_isSet = true;
}

bool OAIAnnotationRestApi_get_list::is_start_dttm_Set() const{
    return m_start_dttm_isSet;
}

bool OAIAnnotationRestApi_get_list::is_start_dttm_Valid() const{
    return m_start_dttm_isValid;
}

bool OAIAnnotationRestApi_get_list::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_changed_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_on_delta_humanized_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_dttm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_long_descr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_descr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_dttm_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnnotationRestApi_get_list::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
