/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnnotationLayer.h
 *
 * 
 */

#ifndef OAIAnnotationLayer_H
#define OAIAnnotationLayer_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnnotationLayer : public OAIObject {
public:
    OAIAnnotationLayer();
    OAIAnnotationLayer(QString json);
    ~OAIAnnotationLayer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnnotationType() const;
    void setAnnotationType(const QString &annotation_type);
    bool is_annotation_type_Set() const;
    bool is_annotation_type_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QList<QString> getDescriptionColumns() const;
    void setDescriptionColumns(const QList<QString> &description_columns);
    bool is_description_columns_Set() const;
    bool is_description_columns_Valid() const;

    bool isHideLine() const;
    void setHideLine(const bool &hide_line);
    bool is_hide_line_Set() const;
    bool is_hide_line_Valid() const;

    QString getIntervalEndColumn() const;
    void setIntervalEndColumn(const QString &interval_end_column);
    bool is_interval_end_column_Set() const;
    bool is_interval_end_column_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOpacity() const;
    void setOpacity(const QString &opacity);
    bool is_opacity_Set() const;
    bool is_opacity_Valid() const;

    QMap<QString, QJsonValue> getOverrides() const;
    void setOverrides(const QMap<QString, QJsonValue> &overrides);
    bool is_overrides_Set() const;
    bool is_overrides_Valid() const;

    bool isShow() const;
    void setShow(const bool &show);
    bool is_show_Set() const;
    bool is_show_Valid() const;

    bool isShowMarkers() const;
    void setShowMarkers(const bool &show_markers);
    bool is_show_markers_Set() const;
    bool is_show_markers_Valid() const;

    QString getSourceType() const;
    void setSourceType(const QString &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    QString getStyle() const;
    void setStyle(const QString &style);
    bool is_style_Set() const;
    bool is_style_Valid() const;

    QString getTimeColumn() const;
    void setTimeColumn(const QString &time_column);
    bool is_time_column_Set() const;
    bool is_time_column_Valid() const;

    QString getTitleColumn() const;
    void setTitleColumn(const QString &title_column);
    bool is_title_column_Set() const;
    bool is_title_column_Valid() const;

    QJsonValue getValue() const;
    void setValue(const QJsonValue &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    float getWidth() const;
    void setWidth(const float &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_annotation_type;
    bool m_annotation_type_isSet;
    bool m_annotation_type_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QList<QString> m_description_columns;
    bool m_description_columns_isSet;
    bool m_description_columns_isValid;

    bool m_hide_line;
    bool m_hide_line_isSet;
    bool m_hide_line_isValid;

    QString m_interval_end_column;
    bool m_interval_end_column_isSet;
    bool m_interval_end_column_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_opacity;
    bool m_opacity_isSet;
    bool m_opacity_isValid;

    QMap<QString, QJsonValue> m_overrides;
    bool m_overrides_isSet;
    bool m_overrides_isValid;

    bool m_show;
    bool m_show_isSet;
    bool m_show_isValid;

    bool m_show_markers;
    bool m_show_markers_isSet;
    bool m_show_markers_isValid;

    QString m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    QString m_style;
    bool m_style_isSet;
    bool m_style_isValid;

    QString m_time_column;
    bool m_time_column_isSet;
    bool m_time_column_isValid;

    QString m_title_column;
    bool m_title_column_isSet;
    bool m_title_column_isValid;

    QJsonValue m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    float m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnnotationLayer)

#endif // OAIAnnotationLayer_H
