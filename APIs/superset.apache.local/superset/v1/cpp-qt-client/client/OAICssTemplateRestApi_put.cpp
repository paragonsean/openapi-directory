/**
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICssTemplateRestApi_put.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICssTemplateRestApi_put::OAICssTemplateRestApi_put(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICssTemplateRestApi_put::OAICssTemplateRestApi_put() {
    this->initializeModel();
}

OAICssTemplateRestApi_put::~OAICssTemplateRestApi_put() {}

void OAICssTemplateRestApi_put::initializeModel() {

    m_css_isSet = false;
    m_css_isValid = false;

    m_template_name_isSet = false;
    m_template_name_isValid = false;
}

void OAICssTemplateRestApi_put::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICssTemplateRestApi_put::fromJsonObject(QJsonObject json) {

    m_css_isValid = ::OpenAPI::fromJsonValue(m_css, json[QString("css")]);
    m_css_isSet = !json[QString("css")].isNull() && m_css_isValid;

    m_template_name_isValid = ::OpenAPI::fromJsonValue(m_template_name, json[QString("template_name")]);
    m_template_name_isSet = !json[QString("template_name")].isNull() && m_template_name_isValid;
}

QString OAICssTemplateRestApi_put::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICssTemplateRestApi_put::asJsonObject() const {
    QJsonObject obj;
    if (m_css_isSet) {
        obj.insert(QString("css"), ::OpenAPI::toJsonValue(m_css));
    }
    if (m_template_name_isSet) {
        obj.insert(QString("template_name"), ::OpenAPI::toJsonValue(m_template_name));
    }
    return obj;
}

QString OAICssTemplateRestApi_put::getCss() const {
    return m_css;
}
void OAICssTemplateRestApi_put::setCss(const QString &css) {
    m_css = css;
    m_css_isSet = true;
}

bool OAICssTemplateRestApi_put::is_css_Set() const{
    return m_css_isSet;
}

bool OAICssTemplateRestApi_put::is_css_Valid() const{
    return m_css_isValid;
}

QString OAICssTemplateRestApi_put::getTemplateName() const {
    return m_template_name;
}
void OAICssTemplateRestApi_put::setTemplateName(const QString &template_name) {
    m_template_name = template_name;
    m_template_name_isSet = true;
}

bool OAICssTemplateRestApi_put::is_template_name_Set() const{
    return m_template_name_isSet;
}

bool OAICssTemplateRestApi_put::is_template_name_Valid() const{
    return m_template_name_isValid;
}

bool OAICssTemplateRestApi_put::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_css_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICssTemplateRestApi_put::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
