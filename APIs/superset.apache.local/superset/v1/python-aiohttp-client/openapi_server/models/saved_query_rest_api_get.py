# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.meta31 import Meta31
from openapi_server.models.meta32 import Meta32
from openapi_server import util


class SavedQueryRestApiGet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by: Meta31=None, database: Meta32=None, description: str=None, id: int=None, label: str=None, _schema: str=None, sql: str=None, sql_tables: object=None):
        """SavedQueryRestApiGet - a model defined in OpenAPI

        :param created_by: The created_by of this SavedQueryRestApiGet.
        :param database: The database of this SavedQueryRestApiGet.
        :param description: The description of this SavedQueryRestApiGet.
        :param id: The id of this SavedQueryRestApiGet.
        :param label: The label of this SavedQueryRestApiGet.
        :param _schema: The _schema of this SavedQueryRestApiGet.
        :param sql: The sql of this SavedQueryRestApiGet.
        :param sql_tables: The sql_tables of this SavedQueryRestApiGet.
        """
        self.openapi_types = {
            'created_by': Meta31,
            'database': Meta32,
            'description': str,
            'id': int,
            'label': str,
            '_schema': str,
            'sql': str,
            'sql_tables': object
        }

        self.attribute_map = {
            'created_by': 'created_by',
            'database': 'database',
            'description': 'description',
            'id': 'id',
            'label': 'label',
            '_schema': 'schema',
            'sql': 'sql',
            'sql_tables': 'sql_tables'
        }

        self._created_by = created_by
        self._database = database
        self._description = description
        self._id = id
        self._label = label
        self.__schema = _schema
        self._sql = sql
        self._sql_tables = sql_tables

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavedQueryRestApiGet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavedQueryRestApi.get of this SavedQueryRestApiGet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by(self):
        """Gets the created_by of this SavedQueryRestApiGet.


        :return: The created_by of this SavedQueryRestApiGet.
        :rtype: Meta31
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this SavedQueryRestApiGet.


        :param created_by: The created_by of this SavedQueryRestApiGet.
        :type created_by: Meta31
        """

        self._created_by = created_by

    @property
    def database(self):
        """Gets the database of this SavedQueryRestApiGet.


        :return: The database of this SavedQueryRestApiGet.
        :rtype: Meta32
        """
        return self._database

    @database.setter
    def database(self, database):
        """Sets the database of this SavedQueryRestApiGet.


        :param database: The database of this SavedQueryRestApiGet.
        :type database: Meta32
        """

        self._database = database

    @property
    def description(self):
        """Gets the description of this SavedQueryRestApiGet.


        :return: The description of this SavedQueryRestApiGet.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SavedQueryRestApiGet.


        :param description: The description of this SavedQueryRestApiGet.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this SavedQueryRestApiGet.


        :return: The id of this SavedQueryRestApiGet.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SavedQueryRestApiGet.


        :param id: The id of this SavedQueryRestApiGet.
        :type id: int
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this SavedQueryRestApiGet.


        :return: The label of this SavedQueryRestApiGet.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this SavedQueryRestApiGet.


        :param label: The label of this SavedQueryRestApiGet.
        :type label: str
        """
        if label is not None and len(label) > 256:
            raise ValueError("Invalid value for `label`, length must be less than or equal to `256`")

        self._label = label

    @property
    def _schema(self):
        """Gets the _schema of this SavedQueryRestApiGet.


        :return: The _schema of this SavedQueryRestApiGet.
        :rtype: str
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this SavedQueryRestApiGet.


        :param _schema: The _schema of this SavedQueryRestApiGet.
        :type _schema: str
        """
        if _schema is not None and len(_schema) > 128:
            raise ValueError("Invalid value for `_schema`, length must be less than or equal to `128`")

        self.__schema = _schema

    @property
    def sql(self):
        """Gets the sql of this SavedQueryRestApiGet.


        :return: The sql of this SavedQueryRestApiGet.
        :rtype: str
        """
        return self._sql

    @sql.setter
    def sql(self, sql):
        """Sets the sql of this SavedQueryRestApiGet.


        :param sql: The sql of this SavedQueryRestApiGet.
        :type sql: str
        """

        self._sql = sql

    @property
    def sql_tables(self):
        """Gets the sql_tables of this SavedQueryRestApiGet.


        :return: The sql_tables of this SavedQueryRestApiGet.
        :rtype: object
        """
        return self._sql_tables

    @sql_tables.setter
    def sql_tables(self, sql_tables):
        """Sets the sql_tables of this SavedQueryRestApiGet.


        :param sql_tables: The sql_tables of this SavedQueryRestApiGet.
        :type sql_tables: object
        """

        self._sql_tables = sql_tables
