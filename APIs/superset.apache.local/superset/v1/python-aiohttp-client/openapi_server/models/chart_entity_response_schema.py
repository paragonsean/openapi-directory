# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChartEntityResponseSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_timeout: int=None, changed_on: str=None, datasource: str=None, description: str=None, description_markeddown: str=None, form_data: object=None, modified: str=None, slice_id: int=None, slice_name: str=None, slice_url: str=None):
        """ChartEntityResponseSchema - a model defined in OpenAPI

        :param cache_timeout: The cache_timeout of this ChartEntityResponseSchema.
        :param changed_on: The changed_on of this ChartEntityResponseSchema.
        :param datasource: The datasource of this ChartEntityResponseSchema.
        :param description: The description of this ChartEntityResponseSchema.
        :param description_markeddown: The description_markeddown of this ChartEntityResponseSchema.
        :param form_data: The form_data of this ChartEntityResponseSchema.
        :param modified: The modified of this ChartEntityResponseSchema.
        :param slice_id: The slice_id of this ChartEntityResponseSchema.
        :param slice_name: The slice_name of this ChartEntityResponseSchema.
        :param slice_url: The slice_url of this ChartEntityResponseSchema.
        """
        self.openapi_types = {
            'cache_timeout': int,
            'changed_on': str,
            'datasource': str,
            'description': str,
            'description_markeddown': str,
            'form_data': object,
            'modified': str,
            'slice_id': int,
            'slice_name': str,
            'slice_url': str
        }

        self.attribute_map = {
            'cache_timeout': 'cache_timeout',
            'changed_on': 'changed_on',
            'datasource': 'datasource',
            'description': 'description',
            'description_markeddown': 'description_markeddown',
            'form_data': 'form_data',
            'modified': 'modified',
            'slice_id': 'slice_id',
            'slice_name': 'slice_name',
            'slice_url': 'slice_url'
        }

        self._cache_timeout = cache_timeout
        self._changed_on = changed_on
        self._datasource = datasource
        self._description = description
        self._description_markeddown = description_markeddown
        self._form_data = form_data
        self._modified = modified
        self._slice_id = slice_id
        self._slice_name = slice_name
        self._slice_url = slice_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartEntityResponseSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChartEntityResponseSchema of this ChartEntityResponseSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_timeout(self):
        """Gets the cache_timeout of this ChartEntityResponseSchema.

        Duration (in seconds) of the caching timeout for this chart. Note this defaults to the datasource/table timeout if undefined.

        :return: The cache_timeout of this ChartEntityResponseSchema.
        :rtype: int
        """
        return self._cache_timeout

    @cache_timeout.setter
    def cache_timeout(self, cache_timeout):
        """Sets the cache_timeout of this ChartEntityResponseSchema.

        Duration (in seconds) of the caching timeout for this chart. Note this defaults to the datasource/table timeout if undefined.

        :param cache_timeout: The cache_timeout of this ChartEntityResponseSchema.
        :type cache_timeout: int
        """

        self._cache_timeout = cache_timeout

    @property
    def changed_on(self):
        """Gets the changed_on of this ChartEntityResponseSchema.

        The ISO date that the chart was last changed.

        :return: The changed_on of this ChartEntityResponseSchema.
        :rtype: str
        """
        return self._changed_on

    @changed_on.setter
    def changed_on(self, changed_on):
        """Sets the changed_on of this ChartEntityResponseSchema.

        The ISO date that the chart was last changed.

        :param changed_on: The changed_on of this ChartEntityResponseSchema.
        :type changed_on: str
        """

        self._changed_on = changed_on

    @property
    def datasource(self):
        """Gets the datasource of this ChartEntityResponseSchema.

        The datasource name.

        :return: The datasource of this ChartEntityResponseSchema.
        :rtype: str
        """
        return self._datasource

    @datasource.setter
    def datasource(self, datasource):
        """Sets the datasource of this ChartEntityResponseSchema.

        The datasource name.

        :param datasource: The datasource of this ChartEntityResponseSchema.
        :type datasource: str
        """

        self._datasource = datasource

    @property
    def description(self):
        """Gets the description of this ChartEntityResponseSchema.

        A description of the chart propose.

        :return: The description of this ChartEntityResponseSchema.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ChartEntityResponseSchema.

        A description of the chart propose.

        :param description: The description of this ChartEntityResponseSchema.
        :type description: str
        """

        self._description = description

    @property
    def description_markeddown(self):
        """Gets the description_markeddown of this ChartEntityResponseSchema.

        Sanitized HTML version of the chart description.

        :return: The description_markeddown of this ChartEntityResponseSchema.
        :rtype: str
        """
        return self._description_markeddown

    @description_markeddown.setter
    def description_markeddown(self, description_markeddown):
        """Sets the description_markeddown of this ChartEntityResponseSchema.

        Sanitized HTML version of the chart description.

        :param description_markeddown: The description_markeddown of this ChartEntityResponseSchema.
        :type description_markeddown: str
        """

        self._description_markeddown = description_markeddown

    @property
    def form_data(self):
        """Gets the form_data of this ChartEntityResponseSchema.

        Form data from the Explore controls used to form the chart's data query.

        :return: The form_data of this ChartEntityResponseSchema.
        :rtype: object
        """
        return self._form_data

    @form_data.setter
    def form_data(self, form_data):
        """Sets the form_data of this ChartEntityResponseSchema.

        Form data from the Explore controls used to form the chart's data query.

        :param form_data: The form_data of this ChartEntityResponseSchema.
        :type form_data: object
        """

        self._form_data = form_data

    @property
    def modified(self):
        """Gets the modified of this ChartEntityResponseSchema.


        :return: The modified of this ChartEntityResponseSchema.
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this ChartEntityResponseSchema.


        :param modified: The modified of this ChartEntityResponseSchema.
        :type modified: str
        """

        self._modified = modified

    @property
    def slice_id(self):
        """Gets the slice_id of this ChartEntityResponseSchema.


        :return: The slice_id of this ChartEntityResponseSchema.
        :rtype: int
        """
        return self._slice_id

    @slice_id.setter
    def slice_id(self, slice_id):
        """Sets the slice_id of this ChartEntityResponseSchema.


        :param slice_id: The slice_id of this ChartEntityResponseSchema.
        :type slice_id: int
        """

        self._slice_id = slice_id

    @property
    def slice_name(self):
        """Gets the slice_name of this ChartEntityResponseSchema.

        The name of the chart.

        :return: The slice_name of this ChartEntityResponseSchema.
        :rtype: str
        """
        return self._slice_name

    @slice_name.setter
    def slice_name(self, slice_name):
        """Sets the slice_name of this ChartEntityResponseSchema.

        The name of the chart.

        :param slice_name: The slice_name of this ChartEntityResponseSchema.
        :type slice_name: str
        """

        self._slice_name = slice_name

    @property
    def slice_url(self):
        """Gets the slice_url of this ChartEntityResponseSchema.

        The URL of the chart.

        :return: The slice_url of this ChartEntityResponseSchema.
        :rtype: str
        """
        return self._slice_url

    @slice_url.setter
    def slice_url(self, slice_url):
        """Sets the slice_url of this ChartEntityResponseSchema.

        The URL of the chart.

        :param slice_url: The slice_url of this ChartEntityResponseSchema.
        :type slice_url: str
        """

        self._slice_url = slice_url
