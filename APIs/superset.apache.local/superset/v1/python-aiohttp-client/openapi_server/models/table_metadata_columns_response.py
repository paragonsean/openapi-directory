# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TableMetadataColumnsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duplicates_constraint: str=None, keys: List[str]=None, long_type: str=None, name: str=None, type: str=None):
        """TableMetadataColumnsResponse - a model defined in OpenAPI

        :param duplicates_constraint: The duplicates_constraint of this TableMetadataColumnsResponse.
        :param keys: The keys of this TableMetadataColumnsResponse.
        :param long_type: The long_type of this TableMetadataColumnsResponse.
        :param name: The name of this TableMetadataColumnsResponse.
        :param type: The type of this TableMetadataColumnsResponse.
        """
        self.openapi_types = {
            'duplicates_constraint': str,
            'keys': List[str],
            'long_type': str,
            'name': str,
            'type': str
        }

        self.attribute_map = {
            'duplicates_constraint': 'duplicates_constraint',
            'keys': 'keys',
            'long_type': 'longType',
            'name': 'name',
            'type': 'type'
        }

        self._duplicates_constraint = duplicates_constraint
        self._keys = keys
        self._long_type = long_type
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableMetadataColumnsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableMetadataColumnsResponse of this TableMetadataColumnsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duplicates_constraint(self):
        """Gets the duplicates_constraint of this TableMetadataColumnsResponse.


        :return: The duplicates_constraint of this TableMetadataColumnsResponse.
        :rtype: str
        """
        return self._duplicates_constraint

    @duplicates_constraint.setter
    def duplicates_constraint(self, duplicates_constraint):
        """Sets the duplicates_constraint of this TableMetadataColumnsResponse.


        :param duplicates_constraint: The duplicates_constraint of this TableMetadataColumnsResponse.
        :type duplicates_constraint: str
        """

        self._duplicates_constraint = duplicates_constraint

    @property
    def keys(self):
        """Gets the keys of this TableMetadataColumnsResponse.

        

        :return: The keys of this TableMetadataColumnsResponse.
        :rtype: List[str]
        """
        return self._keys

    @keys.setter
    def keys(self, keys):
        """Sets the keys of this TableMetadataColumnsResponse.

        

        :param keys: The keys of this TableMetadataColumnsResponse.
        :type keys: List[str]
        """

        self._keys = keys

    @property
    def long_type(self):
        """Gets the long_type of this TableMetadataColumnsResponse.

        The actual backend long type for the column

        :return: The long_type of this TableMetadataColumnsResponse.
        :rtype: str
        """
        return self._long_type

    @long_type.setter
    def long_type(self, long_type):
        """Sets the long_type of this TableMetadataColumnsResponse.

        The actual backend long type for the column

        :param long_type: The long_type of this TableMetadataColumnsResponse.
        :type long_type: str
        """

        self._long_type = long_type

    @property
    def name(self):
        """Gets the name of this TableMetadataColumnsResponse.

        The column name

        :return: The name of this TableMetadataColumnsResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TableMetadataColumnsResponse.

        The column name

        :param name: The name of this TableMetadataColumnsResponse.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this TableMetadataColumnsResponse.

        The column type

        :return: The type of this TableMetadataColumnsResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TableMetadataColumnsResponse.

        The column type

        :param type: The type of this TableMetadataColumnsResponse.
        :type type: str
        """

        self._type = type
