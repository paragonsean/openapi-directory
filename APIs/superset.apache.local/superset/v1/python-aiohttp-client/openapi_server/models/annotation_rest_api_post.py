# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnnotationRestApiPost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_dttm: datetime=None, json_metadata: str=None, long_descr: str=None, short_descr: str=None, start_dttm: datetime=None):
        """AnnotationRestApiPost - a model defined in OpenAPI

        :param end_dttm: The end_dttm of this AnnotationRestApiPost.
        :param json_metadata: The json_metadata of this AnnotationRestApiPost.
        :param long_descr: The long_descr of this AnnotationRestApiPost.
        :param short_descr: The short_descr of this AnnotationRestApiPost.
        :param start_dttm: The start_dttm of this AnnotationRestApiPost.
        """
        self.openapi_types = {
            'end_dttm': datetime,
            'json_metadata': str,
            'long_descr': str,
            'short_descr': str,
            'start_dttm': datetime
        }

        self.attribute_map = {
            'end_dttm': 'end_dttm',
            'json_metadata': 'json_metadata',
            'long_descr': 'long_descr',
            'short_descr': 'short_descr',
            'start_dttm': 'start_dttm'
        }

        self._end_dttm = end_dttm
        self._json_metadata = json_metadata
        self._long_descr = long_descr
        self._short_descr = short_descr
        self._start_dttm = start_dttm

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotationRestApiPost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnnotationRestApi.post of this AnnotationRestApiPost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_dttm(self):
        """Gets the end_dttm of this AnnotationRestApiPost.

        The annotation end date time

        :return: The end_dttm of this AnnotationRestApiPost.
        :rtype: datetime
        """
        return self._end_dttm

    @end_dttm.setter
    def end_dttm(self, end_dttm):
        """Sets the end_dttm of this AnnotationRestApiPost.

        The annotation end date time

        :param end_dttm: The end_dttm of this AnnotationRestApiPost.
        :type end_dttm: datetime
        """

        self._end_dttm = end_dttm

    @property
    def json_metadata(self):
        """Gets the json_metadata of this AnnotationRestApiPost.

        JSON metadata

        :return: The json_metadata of this AnnotationRestApiPost.
        :rtype: str
        """
        return self._json_metadata

    @json_metadata.setter
    def json_metadata(self, json_metadata):
        """Sets the json_metadata of this AnnotationRestApiPost.

        JSON metadata

        :param json_metadata: The json_metadata of this AnnotationRestApiPost.
        :type json_metadata: str
        """

        self._json_metadata = json_metadata

    @property
    def long_descr(self):
        """Gets the long_descr of this AnnotationRestApiPost.

        A long description

        :return: The long_descr of this AnnotationRestApiPost.
        :rtype: str
        """
        return self._long_descr

    @long_descr.setter
    def long_descr(self, long_descr):
        """Sets the long_descr of this AnnotationRestApiPost.

        A long description

        :param long_descr: The long_descr of this AnnotationRestApiPost.
        :type long_descr: str
        """

        self._long_descr = long_descr

    @property
    def short_descr(self):
        """Gets the short_descr of this AnnotationRestApiPost.

        A short description

        :return: The short_descr of this AnnotationRestApiPost.
        :rtype: str
        """
        return self._short_descr

    @short_descr.setter
    def short_descr(self, short_descr):
        """Sets the short_descr of this AnnotationRestApiPost.

        A short description

        :param short_descr: The short_descr of this AnnotationRestApiPost.
        :type short_descr: str
        """
        if short_descr is not None and len(short_descr) > 500:
            raise ValueError("Invalid value for `short_descr`, length must be less than or equal to `500`")
        if short_descr is not None and len(short_descr) < 1:
            raise ValueError("Invalid value for `short_descr`, length must be greater than or equal to `1`")

        self._short_descr = short_descr

    @property
    def start_dttm(self):
        """Gets the start_dttm of this AnnotationRestApiPost.

        The annotation start date time

        :return: The start_dttm of this AnnotationRestApiPost.
        :rtype: datetime
        """
        return self._start_dttm

    @start_dttm.setter
    def start_dttm(self, start_dttm):
        """Sets the start_dttm of this AnnotationRestApiPost.

        The annotation start date time

        :param start_dttm: The start_dttm of this AnnotationRestApiPost.
        :type start_dttm: datetime
        """

        self._start_dttm = start_dttm
