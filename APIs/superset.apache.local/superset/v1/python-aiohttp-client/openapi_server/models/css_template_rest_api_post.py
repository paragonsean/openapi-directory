# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CssTemplateRestApiPost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, css: str=None, template_name: str=None):
        """CssTemplateRestApiPost - a model defined in OpenAPI

        :param css: The css of this CssTemplateRestApiPost.
        :param template_name: The template_name of this CssTemplateRestApiPost.
        """
        self.openapi_types = {
            'css': str,
            'template_name': str
        }

        self.attribute_map = {
            'css': 'css',
            'template_name': 'template_name'
        }

        self._css = css
        self._template_name = template_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CssTemplateRestApiPost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CssTemplateRestApi.post of this CssTemplateRestApiPost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def css(self):
        """Gets the css of this CssTemplateRestApiPost.


        :return: The css of this CssTemplateRestApiPost.
        :rtype: str
        """
        return self._css

    @css.setter
    def css(self, css):
        """Sets the css of this CssTemplateRestApiPost.


        :param css: The css of this CssTemplateRestApiPost.
        :type css: str
        """

        self._css = css

    @property
    def template_name(self):
        """Gets the template_name of this CssTemplateRestApiPost.


        :return: The template_name of this CssTemplateRestApiPost.
        :rtype: str
        """
        return self._template_name

    @template_name.setter
    def template_name(self, template_name):
        """Sets the template_name of this CssTemplateRestApiPost.


        :param template_name: The template_name of this CssTemplateRestApiPost.
        :type template_name: str
        """
        if template_name is not None and len(template_name) > 250:
            raise ValueError("Invalid value for `template_name`, length must be less than or equal to `250`")

        self._template_name = template_name
