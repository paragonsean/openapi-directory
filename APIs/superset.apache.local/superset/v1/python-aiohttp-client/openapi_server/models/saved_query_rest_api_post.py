# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SavedQueryRestApiPost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_id: int=None, description: str=None, label: str=None, _schema: str=None, sql: str=None):
        """SavedQueryRestApiPost - a model defined in OpenAPI

        :param db_id: The db_id of this SavedQueryRestApiPost.
        :param description: The description of this SavedQueryRestApiPost.
        :param label: The label of this SavedQueryRestApiPost.
        :param _schema: The _schema of this SavedQueryRestApiPost.
        :param sql: The sql of this SavedQueryRestApiPost.
        """
        self.openapi_types = {
            'db_id': int,
            'description': str,
            'label': str,
            '_schema': str,
            'sql': str
        }

        self.attribute_map = {
            'db_id': 'db_id',
            'description': 'description',
            'label': 'label',
            '_schema': 'schema',
            'sql': 'sql'
        }

        self._db_id = db_id
        self._description = description
        self._label = label
        self.__schema = _schema
        self._sql = sql

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavedQueryRestApiPost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavedQueryRestApi.post of this SavedQueryRestApiPost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_id(self):
        """Gets the db_id of this SavedQueryRestApiPost.


        :return: The db_id of this SavedQueryRestApiPost.
        :rtype: int
        """
        return self._db_id

    @db_id.setter
    def db_id(self, db_id):
        """Sets the db_id of this SavedQueryRestApiPost.


        :param db_id: The db_id of this SavedQueryRestApiPost.
        :type db_id: int
        """

        self._db_id = db_id

    @property
    def description(self):
        """Gets the description of this SavedQueryRestApiPost.


        :return: The description of this SavedQueryRestApiPost.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SavedQueryRestApiPost.


        :param description: The description of this SavedQueryRestApiPost.
        :type description: str
        """

        self._description = description

    @property
    def label(self):
        """Gets the label of this SavedQueryRestApiPost.


        :return: The label of this SavedQueryRestApiPost.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this SavedQueryRestApiPost.


        :param label: The label of this SavedQueryRestApiPost.
        :type label: str
        """
        if label is not None and len(label) > 256:
            raise ValueError("Invalid value for `label`, length must be less than or equal to `256`")

        self._label = label

    @property
    def _schema(self):
        """Gets the _schema of this SavedQueryRestApiPost.


        :return: The _schema of this SavedQueryRestApiPost.
        :rtype: str
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this SavedQueryRestApiPost.


        :param _schema: The _schema of this SavedQueryRestApiPost.
        :type _schema: str
        """
        if _schema is not None and len(_schema) > 128:
            raise ValueError("Invalid value for `_schema`, length must be less than or equal to `128`")

        self.__schema = _schema

    @property
    def sql(self):
        """Gets the sql of this SavedQueryRestApiPost.


        :return: The sql of this SavedQueryRestApiPost.
        :rtype: str
        """
        return self._sql

    @sql.setter
    def sql(self, sql):
        """Sets the sql of this SavedQueryRestApiPost.


        :param sql: The sql of this SavedQueryRestApiPost.
        :type sql: str
        """

        self._sql = sql
