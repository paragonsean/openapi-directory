# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.meta33 import Meta33
from openapi_server.models.meta34 import Meta34
from openapi_server.models.meta35 import Meta35
from openapi_server.models.meta36 import Meta36
from openapi_server import util


class ReportScheduleRestApiGetList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, changed_by: Meta34=None, changed_on: datetime=None, changed_on_delta_humanized: object=None, created_by: Meta33=None, created_on: datetime=None, creation_method: str=None, crontab: str=None, crontab_humanized: object=None, description: str=None, id: int=None, last_eval_dttm: datetime=None, last_state: str=None, name: str=None, owners: Meta36=None, recipients: Meta35=None, timezone: str=None, type: str=None):
        """ReportScheduleRestApiGetList - a model defined in OpenAPI

        :param active: The active of this ReportScheduleRestApiGetList.
        :param changed_by: The changed_by of this ReportScheduleRestApiGetList.
        :param changed_on: The changed_on of this ReportScheduleRestApiGetList.
        :param changed_on_delta_humanized: The changed_on_delta_humanized of this ReportScheduleRestApiGetList.
        :param created_by: The created_by of this ReportScheduleRestApiGetList.
        :param created_on: The created_on of this ReportScheduleRestApiGetList.
        :param creation_method: The creation_method of this ReportScheduleRestApiGetList.
        :param crontab: The crontab of this ReportScheduleRestApiGetList.
        :param crontab_humanized: The crontab_humanized of this ReportScheduleRestApiGetList.
        :param description: The description of this ReportScheduleRestApiGetList.
        :param id: The id of this ReportScheduleRestApiGetList.
        :param last_eval_dttm: The last_eval_dttm of this ReportScheduleRestApiGetList.
        :param last_state: The last_state of this ReportScheduleRestApiGetList.
        :param name: The name of this ReportScheduleRestApiGetList.
        :param owners: The owners of this ReportScheduleRestApiGetList.
        :param recipients: The recipients of this ReportScheduleRestApiGetList.
        :param timezone: The timezone of this ReportScheduleRestApiGetList.
        :param type: The type of this ReportScheduleRestApiGetList.
        """
        self.openapi_types = {
            'active': bool,
            'changed_by': Meta34,
            'changed_on': datetime,
            'changed_on_delta_humanized': object,
            'created_by': Meta33,
            'created_on': datetime,
            'creation_method': str,
            'crontab': str,
            'crontab_humanized': object,
            'description': str,
            'id': int,
            'last_eval_dttm': datetime,
            'last_state': str,
            'name': str,
            'owners': Meta36,
            'recipients': Meta35,
            'timezone': str,
            'type': str
        }

        self.attribute_map = {
            'active': 'active',
            'changed_by': 'changed_by',
            'changed_on': 'changed_on',
            'changed_on_delta_humanized': 'changed_on_delta_humanized',
            'created_by': 'created_by',
            'created_on': 'created_on',
            'creation_method': 'creation_method',
            'crontab': 'crontab',
            'crontab_humanized': 'crontab_humanized',
            'description': 'description',
            'id': 'id',
            'last_eval_dttm': 'last_eval_dttm',
            'last_state': 'last_state',
            'name': 'name',
            'owners': 'owners',
            'recipients': 'recipients',
            'timezone': 'timezone',
            'type': 'type'
        }

        self._active = active
        self._changed_by = changed_by
        self._changed_on = changed_on
        self._changed_on_delta_humanized = changed_on_delta_humanized
        self._created_by = created_by
        self._created_on = created_on
        self._creation_method = creation_method
        self._crontab = crontab
        self._crontab_humanized = crontab_humanized
        self._description = description
        self._id = id
        self._last_eval_dttm = last_eval_dttm
        self._last_state = last_state
        self._name = name
        self._owners = owners
        self._recipients = recipients
        self._timezone = timezone
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportScheduleRestApiGetList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportScheduleRestApi.get_list of this ReportScheduleRestApiGetList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this ReportScheduleRestApiGetList.


        :return: The active of this ReportScheduleRestApiGetList.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this ReportScheduleRestApiGetList.


        :param active: The active of this ReportScheduleRestApiGetList.
        :type active: bool
        """

        self._active = active

    @property
    def changed_by(self):
        """Gets the changed_by of this ReportScheduleRestApiGetList.


        :return: The changed_by of this ReportScheduleRestApiGetList.
        :rtype: Meta34
        """
        return self._changed_by

    @changed_by.setter
    def changed_by(self, changed_by):
        """Sets the changed_by of this ReportScheduleRestApiGetList.


        :param changed_by: The changed_by of this ReportScheduleRestApiGetList.
        :type changed_by: Meta34
        """

        self._changed_by = changed_by

    @property
    def changed_on(self):
        """Gets the changed_on of this ReportScheduleRestApiGetList.


        :return: The changed_on of this ReportScheduleRestApiGetList.
        :rtype: datetime
        """
        return self._changed_on

    @changed_on.setter
    def changed_on(self, changed_on):
        """Sets the changed_on of this ReportScheduleRestApiGetList.


        :param changed_on: The changed_on of this ReportScheduleRestApiGetList.
        :type changed_on: datetime
        """

        self._changed_on = changed_on

    @property
    def changed_on_delta_humanized(self):
        """Gets the changed_on_delta_humanized of this ReportScheduleRestApiGetList.


        :return: The changed_on_delta_humanized of this ReportScheduleRestApiGetList.
        :rtype: object
        """
        return self._changed_on_delta_humanized

    @changed_on_delta_humanized.setter
    def changed_on_delta_humanized(self, changed_on_delta_humanized):
        """Sets the changed_on_delta_humanized of this ReportScheduleRestApiGetList.


        :param changed_on_delta_humanized: The changed_on_delta_humanized of this ReportScheduleRestApiGetList.
        :type changed_on_delta_humanized: object
        """

        self._changed_on_delta_humanized = changed_on_delta_humanized

    @property
    def created_by(self):
        """Gets the created_by of this ReportScheduleRestApiGetList.


        :return: The created_by of this ReportScheduleRestApiGetList.
        :rtype: Meta33
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ReportScheduleRestApiGetList.


        :param created_by: The created_by of this ReportScheduleRestApiGetList.
        :type created_by: Meta33
        """

        self._created_by = created_by

    @property
    def created_on(self):
        """Gets the created_on of this ReportScheduleRestApiGetList.


        :return: The created_on of this ReportScheduleRestApiGetList.
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this ReportScheduleRestApiGetList.


        :param created_on: The created_on of this ReportScheduleRestApiGetList.
        :type created_on: datetime
        """

        self._created_on = created_on

    @property
    def creation_method(self):
        """Gets the creation_method of this ReportScheduleRestApiGetList.


        :return: The creation_method of this ReportScheduleRestApiGetList.
        :rtype: str
        """
        return self._creation_method

    @creation_method.setter
    def creation_method(self, creation_method):
        """Sets the creation_method of this ReportScheduleRestApiGetList.


        :param creation_method: The creation_method of this ReportScheduleRestApiGetList.
        :type creation_method: str
        """
        if creation_method is not None and len(creation_method) > 255:
            raise ValueError("Invalid value for `creation_method`, length must be less than or equal to `255`")

        self._creation_method = creation_method

    @property
    def crontab(self):
        """Gets the crontab of this ReportScheduleRestApiGetList.


        :return: The crontab of this ReportScheduleRestApiGetList.
        :rtype: str
        """
        return self._crontab

    @crontab.setter
    def crontab(self, crontab):
        """Sets the crontab of this ReportScheduleRestApiGetList.


        :param crontab: The crontab of this ReportScheduleRestApiGetList.
        :type crontab: str
        """
        if crontab is None:
            raise ValueError("Invalid value for `crontab`, must not be `None`")
        if crontab is not None and len(crontab) > 1000:
            raise ValueError("Invalid value for `crontab`, length must be less than or equal to `1000`")

        self._crontab = crontab

    @property
    def crontab_humanized(self):
        """Gets the crontab_humanized of this ReportScheduleRestApiGetList.


        :return: The crontab_humanized of this ReportScheduleRestApiGetList.
        :rtype: object
        """
        return self._crontab_humanized

    @crontab_humanized.setter
    def crontab_humanized(self, crontab_humanized):
        """Sets the crontab_humanized of this ReportScheduleRestApiGetList.


        :param crontab_humanized: The crontab_humanized of this ReportScheduleRestApiGetList.
        :type crontab_humanized: object
        """

        self._crontab_humanized = crontab_humanized

    @property
    def description(self):
        """Gets the description of this ReportScheduleRestApiGetList.


        :return: The description of this ReportScheduleRestApiGetList.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ReportScheduleRestApiGetList.


        :param description: The description of this ReportScheduleRestApiGetList.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this ReportScheduleRestApiGetList.


        :return: The id of this ReportScheduleRestApiGetList.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ReportScheduleRestApiGetList.


        :param id: The id of this ReportScheduleRestApiGetList.
        :type id: int
        """

        self._id = id

    @property
    def last_eval_dttm(self):
        """Gets the last_eval_dttm of this ReportScheduleRestApiGetList.


        :return: The last_eval_dttm of this ReportScheduleRestApiGetList.
        :rtype: datetime
        """
        return self._last_eval_dttm

    @last_eval_dttm.setter
    def last_eval_dttm(self, last_eval_dttm):
        """Sets the last_eval_dttm of this ReportScheduleRestApiGetList.


        :param last_eval_dttm: The last_eval_dttm of this ReportScheduleRestApiGetList.
        :type last_eval_dttm: datetime
        """

        self._last_eval_dttm = last_eval_dttm

    @property
    def last_state(self):
        """Gets the last_state of this ReportScheduleRestApiGetList.


        :return: The last_state of this ReportScheduleRestApiGetList.
        :rtype: str
        """
        return self._last_state

    @last_state.setter
    def last_state(self, last_state):
        """Sets the last_state of this ReportScheduleRestApiGetList.


        :param last_state: The last_state of this ReportScheduleRestApiGetList.
        :type last_state: str
        """
        if last_state is not None and len(last_state) > 50:
            raise ValueError("Invalid value for `last_state`, length must be less than or equal to `50`")

        self._last_state = last_state

    @property
    def name(self):
        """Gets the name of this ReportScheduleRestApiGetList.


        :return: The name of this ReportScheduleRestApiGetList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReportScheduleRestApiGetList.


        :param name: The name of this ReportScheduleRestApiGetList.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and len(name) > 150:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `150`")

        self._name = name

    @property
    def owners(self):
        """Gets the owners of this ReportScheduleRestApiGetList.


        :return: The owners of this ReportScheduleRestApiGetList.
        :rtype: Meta36
        """
        return self._owners

    @owners.setter
    def owners(self, owners):
        """Sets the owners of this ReportScheduleRestApiGetList.


        :param owners: The owners of this ReportScheduleRestApiGetList.
        :type owners: Meta36
        """

        self._owners = owners

    @property
    def recipients(self):
        """Gets the recipients of this ReportScheduleRestApiGetList.


        :return: The recipients of this ReportScheduleRestApiGetList.
        :rtype: Meta35
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients):
        """Sets the recipients of this ReportScheduleRestApiGetList.


        :param recipients: The recipients of this ReportScheduleRestApiGetList.
        :type recipients: Meta35
        """
        if recipients is None:
            raise ValueError("Invalid value for `recipients`, must not be `None`")

        self._recipients = recipients

    @property
    def timezone(self):
        """Gets the timezone of this ReportScheduleRestApiGetList.


        :return: The timezone of this ReportScheduleRestApiGetList.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this ReportScheduleRestApiGetList.


        :param timezone: The timezone of this ReportScheduleRestApiGetList.
        :type timezone: str
        """
        if timezone is not None and len(timezone) > 100:
            raise ValueError("Invalid value for `timezone`, length must be less than or equal to `100`")

        self._timezone = timezone

    @property
    def type(self):
        """Gets the type of this ReportScheduleRestApiGetList.


        :return: The type of this ReportScheduleRestApiGetList.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ReportScheduleRestApiGetList.


        :param type: The type of this ReportScheduleRestApiGetList.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")
        if type is not None and len(type) > 50:
            raise ValueError("Invalid value for `type`, length must be less than or equal to `50`")

        self._type = type
