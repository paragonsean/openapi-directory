# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.table_metadata_columns_response import TableMetadataColumnsResponse
from openapi_server.models.table_metadata_foreign_keys_indexes_response import TableMetadataForeignKeysIndexesResponse
from openapi_server.models.table_metadata_primary_key_response import TableMetadataPrimaryKeyResponse
from openapi_server import util


class TableMetadataResponseSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[TableMetadataColumnsResponse]=None, foreign_keys: List[TableMetadataForeignKeysIndexesResponse]=None, indexes: List[TableMetadataForeignKeysIndexesResponse]=None, name: str=None, primary_key: TableMetadataPrimaryKeyResponse=None, select_star: str=None):
        """TableMetadataResponseSchema - a model defined in OpenAPI

        :param columns: The columns of this TableMetadataResponseSchema.
        :param foreign_keys: The foreign_keys of this TableMetadataResponseSchema.
        :param indexes: The indexes of this TableMetadataResponseSchema.
        :param name: The name of this TableMetadataResponseSchema.
        :param primary_key: The primary_key of this TableMetadataResponseSchema.
        :param select_star: The select_star of this TableMetadataResponseSchema.
        """
        self.openapi_types = {
            'columns': List[TableMetadataColumnsResponse],
            'foreign_keys': List[TableMetadataForeignKeysIndexesResponse],
            'indexes': List[TableMetadataForeignKeysIndexesResponse],
            'name': str,
            'primary_key': TableMetadataPrimaryKeyResponse,
            'select_star': str
        }

        self.attribute_map = {
            'columns': 'columns',
            'foreign_keys': 'foreignKeys',
            'indexes': 'indexes',
            'name': 'name',
            'primary_key': 'primaryKey',
            'select_star': 'selectStar'
        }

        self._columns = columns
        self._foreign_keys = foreign_keys
        self._indexes = indexes
        self._name = name
        self._primary_key = primary_key
        self._select_star = select_star

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableMetadataResponseSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableMetadataResponseSchema of this TableMetadataResponseSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this TableMetadataResponseSchema.

        A list of columns and their metadata

        :return: The columns of this TableMetadataResponseSchema.
        :rtype: List[TableMetadataColumnsResponse]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this TableMetadataResponseSchema.

        A list of columns and their metadata

        :param columns: The columns of this TableMetadataResponseSchema.
        :type columns: List[TableMetadataColumnsResponse]
        """

        self._columns = columns

    @property
    def foreign_keys(self):
        """Gets the foreign_keys of this TableMetadataResponseSchema.

        A list of foreign keys and their metadata

        :return: The foreign_keys of this TableMetadataResponseSchema.
        :rtype: List[TableMetadataForeignKeysIndexesResponse]
        """
        return self._foreign_keys

    @foreign_keys.setter
    def foreign_keys(self, foreign_keys):
        """Sets the foreign_keys of this TableMetadataResponseSchema.

        A list of foreign keys and their metadata

        :param foreign_keys: The foreign_keys of this TableMetadataResponseSchema.
        :type foreign_keys: List[TableMetadataForeignKeysIndexesResponse]
        """

        self._foreign_keys = foreign_keys

    @property
    def indexes(self):
        """Gets the indexes of this TableMetadataResponseSchema.

        A list of indexes and their metadata

        :return: The indexes of this TableMetadataResponseSchema.
        :rtype: List[TableMetadataForeignKeysIndexesResponse]
        """
        return self._indexes

    @indexes.setter
    def indexes(self, indexes):
        """Sets the indexes of this TableMetadataResponseSchema.

        A list of indexes and their metadata

        :param indexes: The indexes of this TableMetadataResponseSchema.
        :type indexes: List[TableMetadataForeignKeysIndexesResponse]
        """

        self._indexes = indexes

    @property
    def name(self):
        """Gets the name of this TableMetadataResponseSchema.

        The name of the table

        :return: The name of this TableMetadataResponseSchema.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TableMetadataResponseSchema.

        The name of the table

        :param name: The name of this TableMetadataResponseSchema.
        :type name: str
        """

        self._name = name

    @property
    def primary_key(self):
        """Gets the primary_key of this TableMetadataResponseSchema.

        Primary keys metadata

        :return: The primary_key of this TableMetadataResponseSchema.
        :rtype: TableMetadataPrimaryKeyResponse
        """
        return self._primary_key

    @primary_key.setter
    def primary_key(self, primary_key):
        """Sets the primary_key of this TableMetadataResponseSchema.

        Primary keys metadata

        :param primary_key: The primary_key of this TableMetadataResponseSchema.
        :type primary_key: TableMetadataPrimaryKeyResponse
        """

        self._primary_key = primary_key

    @property
    def select_star(self):
        """Gets the select_star of this TableMetadataResponseSchema.

        SQL select star

        :return: The select_star of this TableMetadataResponseSchema.
        :rtype: str
        """
        return self._select_star

    @select_star.setter
    def select_star(self, select_star):
        """Sets the select_star of this TableMetadataResponseSchema.

        SQL select star

        :param select_star: The select_star of this TableMetadataResponseSchema.
        :type select_star: str
        """

        self._select_star = select_star
