# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.meta import Meta
from openapi_server.models.meta1 import Meta1
from openapi_server import util


class AnnotationRestApiGetList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changed_by: Meta1=None, changed_on_delta_humanized: object=None, created_by: Meta=None, end_dttm: datetime=None, id: int=None, long_descr: str=None, short_descr: str=None, start_dttm: datetime=None):
        """AnnotationRestApiGetList - a model defined in OpenAPI

        :param changed_by: The changed_by of this AnnotationRestApiGetList.
        :param changed_on_delta_humanized: The changed_on_delta_humanized of this AnnotationRestApiGetList.
        :param created_by: The created_by of this AnnotationRestApiGetList.
        :param end_dttm: The end_dttm of this AnnotationRestApiGetList.
        :param id: The id of this AnnotationRestApiGetList.
        :param long_descr: The long_descr of this AnnotationRestApiGetList.
        :param short_descr: The short_descr of this AnnotationRestApiGetList.
        :param start_dttm: The start_dttm of this AnnotationRestApiGetList.
        """
        self.openapi_types = {
            'changed_by': Meta1,
            'changed_on_delta_humanized': object,
            'created_by': Meta,
            'end_dttm': datetime,
            'id': int,
            'long_descr': str,
            'short_descr': str,
            'start_dttm': datetime
        }

        self.attribute_map = {
            'changed_by': 'changed_by',
            'changed_on_delta_humanized': 'changed_on_delta_humanized',
            'created_by': 'created_by',
            'end_dttm': 'end_dttm',
            'id': 'id',
            'long_descr': 'long_descr',
            'short_descr': 'short_descr',
            'start_dttm': 'start_dttm'
        }

        self._changed_by = changed_by
        self._changed_on_delta_humanized = changed_on_delta_humanized
        self._created_by = created_by
        self._end_dttm = end_dttm
        self._id = id
        self._long_descr = long_descr
        self._short_descr = short_descr
        self._start_dttm = start_dttm

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotationRestApiGetList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnnotationRestApi.get_list of this AnnotationRestApiGetList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changed_by(self):
        """Gets the changed_by of this AnnotationRestApiGetList.


        :return: The changed_by of this AnnotationRestApiGetList.
        :rtype: Meta1
        """
        return self._changed_by

    @changed_by.setter
    def changed_by(self, changed_by):
        """Sets the changed_by of this AnnotationRestApiGetList.


        :param changed_by: The changed_by of this AnnotationRestApiGetList.
        :type changed_by: Meta1
        """

        self._changed_by = changed_by

    @property
    def changed_on_delta_humanized(self):
        """Gets the changed_on_delta_humanized of this AnnotationRestApiGetList.


        :return: The changed_on_delta_humanized of this AnnotationRestApiGetList.
        :rtype: object
        """
        return self._changed_on_delta_humanized

    @changed_on_delta_humanized.setter
    def changed_on_delta_humanized(self, changed_on_delta_humanized):
        """Sets the changed_on_delta_humanized of this AnnotationRestApiGetList.


        :param changed_on_delta_humanized: The changed_on_delta_humanized of this AnnotationRestApiGetList.
        :type changed_on_delta_humanized: object
        """

        self._changed_on_delta_humanized = changed_on_delta_humanized

    @property
    def created_by(self):
        """Gets the created_by of this AnnotationRestApiGetList.


        :return: The created_by of this AnnotationRestApiGetList.
        :rtype: Meta
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this AnnotationRestApiGetList.


        :param created_by: The created_by of this AnnotationRestApiGetList.
        :type created_by: Meta
        """

        self._created_by = created_by

    @property
    def end_dttm(self):
        """Gets the end_dttm of this AnnotationRestApiGetList.


        :return: The end_dttm of this AnnotationRestApiGetList.
        :rtype: datetime
        """
        return self._end_dttm

    @end_dttm.setter
    def end_dttm(self, end_dttm):
        """Sets the end_dttm of this AnnotationRestApiGetList.


        :param end_dttm: The end_dttm of this AnnotationRestApiGetList.
        :type end_dttm: datetime
        """

        self._end_dttm = end_dttm

    @property
    def id(self):
        """Gets the id of this AnnotationRestApiGetList.


        :return: The id of this AnnotationRestApiGetList.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AnnotationRestApiGetList.


        :param id: The id of this AnnotationRestApiGetList.
        :type id: int
        """

        self._id = id

    @property
    def long_descr(self):
        """Gets the long_descr of this AnnotationRestApiGetList.


        :return: The long_descr of this AnnotationRestApiGetList.
        :rtype: str
        """
        return self._long_descr

    @long_descr.setter
    def long_descr(self, long_descr):
        """Sets the long_descr of this AnnotationRestApiGetList.


        :param long_descr: The long_descr of this AnnotationRestApiGetList.
        :type long_descr: str
        """

        self._long_descr = long_descr

    @property
    def short_descr(self):
        """Gets the short_descr of this AnnotationRestApiGetList.


        :return: The short_descr of this AnnotationRestApiGetList.
        :rtype: str
        """
        return self._short_descr

    @short_descr.setter
    def short_descr(self, short_descr):
        """Sets the short_descr of this AnnotationRestApiGetList.


        :param short_descr: The short_descr of this AnnotationRestApiGetList.
        :type short_descr: str
        """
        if short_descr is not None and len(short_descr) > 500:
            raise ValueError("Invalid value for `short_descr`, length must be less than or equal to `500`")

        self._short_descr = short_descr

    @property
    def start_dttm(self):
        """Gets the start_dttm of this AnnotationRestApiGetList.


        :return: The start_dttm of this AnnotationRestApiGetList.
        :rtype: datetime
        """
        return self._start_dttm

    @start_dttm.setter
    def start_dttm(self, start_dttm):
        """Sets the start_dttm of this AnnotationRestApiGetList.


        :param start_dttm: The start_dttm of this AnnotationRestApiGetList.
        :type start_dttm: datetime
        """

        self._start_dttm = start_dttm
