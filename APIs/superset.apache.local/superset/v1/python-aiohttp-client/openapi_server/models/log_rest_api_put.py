# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LogRestApiPut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, dttm: datetime=None, _json: str=None, user: object=None):
        """LogRestApiPut - a model defined in OpenAPI

        :param action: The action of this LogRestApiPut.
        :param dttm: The dttm of this LogRestApiPut.
        :param _json: The _json of this LogRestApiPut.
        :param user: The user of this LogRestApiPut.
        """
        self.openapi_types = {
            'action': str,
            'dttm': datetime,
            '_json': str,
            'user': object
        }

        self.attribute_map = {
            'action': 'action',
            'dttm': 'dttm',
            '_json': 'json',
            'user': 'user'
        }

        self._action = action
        self._dttm = dttm
        self.__json = _json
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogRestApiPut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogRestApi.put of this LogRestApiPut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this LogRestApiPut.


        :return: The action of this LogRestApiPut.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this LogRestApiPut.


        :param action: The action of this LogRestApiPut.
        :type action: str
        """
        if action is not None and len(action) > 512:
            raise ValueError("Invalid value for `action`, length must be less than or equal to `512`")

        self._action = action

    @property
    def dttm(self):
        """Gets the dttm of this LogRestApiPut.


        :return: The dttm of this LogRestApiPut.
        :rtype: datetime
        """
        return self._dttm

    @dttm.setter
    def dttm(self, dttm):
        """Sets the dttm of this LogRestApiPut.


        :param dttm: The dttm of this LogRestApiPut.
        :type dttm: datetime
        """

        self._dttm = dttm

    @property
    def _json(self):
        """Gets the _json of this LogRestApiPut.


        :return: The _json of this LogRestApiPut.
        :rtype: str
        """
        return self.__json

    @_json.setter
    def _json(self, _json):
        """Sets the _json of this LogRestApiPut.


        :param _json: The _json of this LogRestApiPut.
        :type _json: str
        """

        self.__json = _json

    @property
    def user(self):
        """Gets the user of this LogRestApiPut.


        :return: The user of this LogRestApiPut.
        :rtype: object
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this LogRestApiPut.


        :param user: The user of this LogRestApiPut.
        :type user: object
        """

        self._user = user
