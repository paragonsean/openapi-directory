# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DatabaseRelatedDashboard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, json_metadata: object=None, slug: str=None, title: str=None):
        """DatabaseRelatedDashboard - a model defined in OpenAPI

        :param id: The id of this DatabaseRelatedDashboard.
        :param json_metadata: The json_metadata of this DatabaseRelatedDashboard.
        :param slug: The slug of this DatabaseRelatedDashboard.
        :param title: The title of this DatabaseRelatedDashboard.
        """
        self.openapi_types = {
            'id': int,
            'json_metadata': object,
            'slug': str,
            'title': str
        }

        self.attribute_map = {
            'id': 'id',
            'json_metadata': 'json_metadata',
            'slug': 'slug',
            'title': 'title'
        }

        self._id = id
        self._json_metadata = json_metadata
        self._slug = slug
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatabaseRelatedDashboard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatabaseRelatedDashboard of this DatabaseRelatedDashboard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DatabaseRelatedDashboard.


        :return: The id of this DatabaseRelatedDashboard.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DatabaseRelatedDashboard.


        :param id: The id of this DatabaseRelatedDashboard.
        :type id: int
        """

        self._id = id

    @property
    def json_metadata(self):
        """Gets the json_metadata of this DatabaseRelatedDashboard.


        :return: The json_metadata of this DatabaseRelatedDashboard.
        :rtype: object
        """
        return self._json_metadata

    @json_metadata.setter
    def json_metadata(self, json_metadata):
        """Sets the json_metadata of this DatabaseRelatedDashboard.


        :param json_metadata: The json_metadata of this DatabaseRelatedDashboard.
        :type json_metadata: object
        """

        self._json_metadata = json_metadata

    @property
    def slug(self):
        """Gets the slug of this DatabaseRelatedDashboard.


        :return: The slug of this DatabaseRelatedDashboard.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this DatabaseRelatedDashboard.


        :param slug: The slug of this DatabaseRelatedDashboard.
        :type slug: str
        """

        self._slug = slug

    @property
    def title(self):
        """Gets the title of this DatabaseRelatedDashboard.


        :return: The title of this DatabaseRelatedDashboard.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this DatabaseRelatedDashboard.


        :param title: The title of this DatabaseRelatedDashboard.
        :type title: str
        """

        self._title = title
