# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.meta5 import Meta5
from openapi_server.models.meta6 import Meta6
from openapi_server.models.meta7 import Meta7
from openapi_server.models.meta8 import Meta8
from openapi_server import util


class ChartRestApiGetList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_timeout: int=None, changed_by: Meta8=None, changed_by_name: object=None, changed_by_url: object=None, changed_on_delta_humanized: object=None, changed_on_utc: object=None, created_by: Meta5=None, datasource_id: int=None, datasource_name_text: object=None, datasource_type: str=None, datasource_url: object=None, description: str=None, description_markeddown: object=None, edit_url: object=None, id: int=None, owners: Meta7=None, params: str=None, slice_name: str=None, table: Meta6=None, thumbnail_url: object=None, url: object=None, viz_type: str=None):
        """ChartRestApiGetList - a model defined in OpenAPI

        :param cache_timeout: The cache_timeout of this ChartRestApiGetList.
        :param changed_by: The changed_by of this ChartRestApiGetList.
        :param changed_by_name: The changed_by_name of this ChartRestApiGetList.
        :param changed_by_url: The changed_by_url of this ChartRestApiGetList.
        :param changed_on_delta_humanized: The changed_on_delta_humanized of this ChartRestApiGetList.
        :param changed_on_utc: The changed_on_utc of this ChartRestApiGetList.
        :param created_by: The created_by of this ChartRestApiGetList.
        :param datasource_id: The datasource_id of this ChartRestApiGetList.
        :param datasource_name_text: The datasource_name_text of this ChartRestApiGetList.
        :param datasource_type: The datasource_type of this ChartRestApiGetList.
        :param datasource_url: The datasource_url of this ChartRestApiGetList.
        :param description: The description of this ChartRestApiGetList.
        :param description_markeddown: The description_markeddown of this ChartRestApiGetList.
        :param edit_url: The edit_url of this ChartRestApiGetList.
        :param id: The id of this ChartRestApiGetList.
        :param owners: The owners of this ChartRestApiGetList.
        :param params: The params of this ChartRestApiGetList.
        :param slice_name: The slice_name of this ChartRestApiGetList.
        :param table: The table of this ChartRestApiGetList.
        :param thumbnail_url: The thumbnail_url of this ChartRestApiGetList.
        :param url: The url of this ChartRestApiGetList.
        :param viz_type: The viz_type of this ChartRestApiGetList.
        """
        self.openapi_types = {
            'cache_timeout': int,
            'changed_by': Meta8,
            'changed_by_name': object,
            'changed_by_url': object,
            'changed_on_delta_humanized': object,
            'changed_on_utc': object,
            'created_by': Meta5,
            'datasource_id': int,
            'datasource_name_text': object,
            'datasource_type': str,
            'datasource_url': object,
            'description': str,
            'description_markeddown': object,
            'edit_url': object,
            'id': int,
            'owners': Meta7,
            'params': str,
            'slice_name': str,
            'table': Meta6,
            'thumbnail_url': object,
            'url': object,
            'viz_type': str
        }

        self.attribute_map = {
            'cache_timeout': 'cache_timeout',
            'changed_by': 'changed_by',
            'changed_by_name': 'changed_by_name',
            'changed_by_url': 'changed_by_url',
            'changed_on_delta_humanized': 'changed_on_delta_humanized',
            'changed_on_utc': 'changed_on_utc',
            'created_by': 'created_by',
            'datasource_id': 'datasource_id',
            'datasource_name_text': 'datasource_name_text',
            'datasource_type': 'datasource_type',
            'datasource_url': 'datasource_url',
            'description': 'description',
            'description_markeddown': 'description_markeddown',
            'edit_url': 'edit_url',
            'id': 'id',
            'owners': 'owners',
            'params': 'params',
            'slice_name': 'slice_name',
            'table': 'table',
            'thumbnail_url': 'thumbnail_url',
            'url': 'url',
            'viz_type': 'viz_type'
        }

        self._cache_timeout = cache_timeout
        self._changed_by = changed_by
        self._changed_by_name = changed_by_name
        self._changed_by_url = changed_by_url
        self._changed_on_delta_humanized = changed_on_delta_humanized
        self._changed_on_utc = changed_on_utc
        self._created_by = created_by
        self._datasource_id = datasource_id
        self._datasource_name_text = datasource_name_text
        self._datasource_type = datasource_type
        self._datasource_url = datasource_url
        self._description = description
        self._description_markeddown = description_markeddown
        self._edit_url = edit_url
        self._id = id
        self._owners = owners
        self._params = params
        self._slice_name = slice_name
        self._table = table
        self._thumbnail_url = thumbnail_url
        self._url = url
        self._viz_type = viz_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartRestApiGetList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChartRestApi.get_list of this ChartRestApiGetList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_timeout(self):
        """Gets the cache_timeout of this ChartRestApiGetList.


        :return: The cache_timeout of this ChartRestApiGetList.
        :rtype: int
        """
        return self._cache_timeout

    @cache_timeout.setter
    def cache_timeout(self, cache_timeout):
        """Sets the cache_timeout of this ChartRestApiGetList.


        :param cache_timeout: The cache_timeout of this ChartRestApiGetList.
        :type cache_timeout: int
        """

        self._cache_timeout = cache_timeout

    @property
    def changed_by(self):
        """Gets the changed_by of this ChartRestApiGetList.


        :return: The changed_by of this ChartRestApiGetList.
        :rtype: Meta8
        """
        return self._changed_by

    @changed_by.setter
    def changed_by(self, changed_by):
        """Sets the changed_by of this ChartRestApiGetList.


        :param changed_by: The changed_by of this ChartRestApiGetList.
        :type changed_by: Meta8
        """

        self._changed_by = changed_by

    @property
    def changed_by_name(self):
        """Gets the changed_by_name of this ChartRestApiGetList.


        :return: The changed_by_name of this ChartRestApiGetList.
        :rtype: object
        """
        return self._changed_by_name

    @changed_by_name.setter
    def changed_by_name(self, changed_by_name):
        """Sets the changed_by_name of this ChartRestApiGetList.


        :param changed_by_name: The changed_by_name of this ChartRestApiGetList.
        :type changed_by_name: object
        """

        self._changed_by_name = changed_by_name

    @property
    def changed_by_url(self):
        """Gets the changed_by_url of this ChartRestApiGetList.


        :return: The changed_by_url of this ChartRestApiGetList.
        :rtype: object
        """
        return self._changed_by_url

    @changed_by_url.setter
    def changed_by_url(self, changed_by_url):
        """Sets the changed_by_url of this ChartRestApiGetList.


        :param changed_by_url: The changed_by_url of this ChartRestApiGetList.
        :type changed_by_url: object
        """

        self._changed_by_url = changed_by_url

    @property
    def changed_on_delta_humanized(self):
        """Gets the changed_on_delta_humanized of this ChartRestApiGetList.


        :return: The changed_on_delta_humanized of this ChartRestApiGetList.
        :rtype: object
        """
        return self._changed_on_delta_humanized

    @changed_on_delta_humanized.setter
    def changed_on_delta_humanized(self, changed_on_delta_humanized):
        """Sets the changed_on_delta_humanized of this ChartRestApiGetList.


        :param changed_on_delta_humanized: The changed_on_delta_humanized of this ChartRestApiGetList.
        :type changed_on_delta_humanized: object
        """

        self._changed_on_delta_humanized = changed_on_delta_humanized

    @property
    def changed_on_utc(self):
        """Gets the changed_on_utc of this ChartRestApiGetList.


        :return: The changed_on_utc of this ChartRestApiGetList.
        :rtype: object
        """
        return self._changed_on_utc

    @changed_on_utc.setter
    def changed_on_utc(self, changed_on_utc):
        """Sets the changed_on_utc of this ChartRestApiGetList.


        :param changed_on_utc: The changed_on_utc of this ChartRestApiGetList.
        :type changed_on_utc: object
        """

        self._changed_on_utc = changed_on_utc

    @property
    def created_by(self):
        """Gets the created_by of this ChartRestApiGetList.


        :return: The created_by of this ChartRestApiGetList.
        :rtype: Meta5
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ChartRestApiGetList.


        :param created_by: The created_by of this ChartRestApiGetList.
        :type created_by: Meta5
        """

        self._created_by = created_by

    @property
    def datasource_id(self):
        """Gets the datasource_id of this ChartRestApiGetList.


        :return: The datasource_id of this ChartRestApiGetList.
        :rtype: int
        """
        return self._datasource_id

    @datasource_id.setter
    def datasource_id(self, datasource_id):
        """Sets the datasource_id of this ChartRestApiGetList.


        :param datasource_id: The datasource_id of this ChartRestApiGetList.
        :type datasource_id: int
        """

        self._datasource_id = datasource_id

    @property
    def datasource_name_text(self):
        """Gets the datasource_name_text of this ChartRestApiGetList.


        :return: The datasource_name_text of this ChartRestApiGetList.
        :rtype: object
        """
        return self._datasource_name_text

    @datasource_name_text.setter
    def datasource_name_text(self, datasource_name_text):
        """Sets the datasource_name_text of this ChartRestApiGetList.


        :param datasource_name_text: The datasource_name_text of this ChartRestApiGetList.
        :type datasource_name_text: object
        """

        self._datasource_name_text = datasource_name_text

    @property
    def datasource_type(self):
        """Gets the datasource_type of this ChartRestApiGetList.


        :return: The datasource_type of this ChartRestApiGetList.
        :rtype: str
        """
        return self._datasource_type

    @datasource_type.setter
    def datasource_type(self, datasource_type):
        """Sets the datasource_type of this ChartRestApiGetList.


        :param datasource_type: The datasource_type of this ChartRestApiGetList.
        :type datasource_type: str
        """
        if datasource_type is not None and len(datasource_type) > 200:
            raise ValueError("Invalid value for `datasource_type`, length must be less than or equal to `200`")

        self._datasource_type = datasource_type

    @property
    def datasource_url(self):
        """Gets the datasource_url of this ChartRestApiGetList.


        :return: The datasource_url of this ChartRestApiGetList.
        :rtype: object
        """
        return self._datasource_url

    @datasource_url.setter
    def datasource_url(self, datasource_url):
        """Sets the datasource_url of this ChartRestApiGetList.


        :param datasource_url: The datasource_url of this ChartRestApiGetList.
        :type datasource_url: object
        """

        self._datasource_url = datasource_url

    @property
    def description(self):
        """Gets the description of this ChartRestApiGetList.


        :return: The description of this ChartRestApiGetList.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ChartRestApiGetList.


        :param description: The description of this ChartRestApiGetList.
        :type description: str
        """

        self._description = description

    @property
    def description_markeddown(self):
        """Gets the description_markeddown of this ChartRestApiGetList.


        :return: The description_markeddown of this ChartRestApiGetList.
        :rtype: object
        """
        return self._description_markeddown

    @description_markeddown.setter
    def description_markeddown(self, description_markeddown):
        """Sets the description_markeddown of this ChartRestApiGetList.


        :param description_markeddown: The description_markeddown of this ChartRestApiGetList.
        :type description_markeddown: object
        """

        self._description_markeddown = description_markeddown

    @property
    def edit_url(self):
        """Gets the edit_url of this ChartRestApiGetList.


        :return: The edit_url of this ChartRestApiGetList.
        :rtype: object
        """
        return self._edit_url

    @edit_url.setter
    def edit_url(self, edit_url):
        """Sets the edit_url of this ChartRestApiGetList.


        :param edit_url: The edit_url of this ChartRestApiGetList.
        :type edit_url: object
        """

        self._edit_url = edit_url

    @property
    def id(self):
        """Gets the id of this ChartRestApiGetList.


        :return: The id of this ChartRestApiGetList.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChartRestApiGetList.


        :param id: The id of this ChartRestApiGetList.
        :type id: int
        """

        self._id = id

    @property
    def owners(self):
        """Gets the owners of this ChartRestApiGetList.


        :return: The owners of this ChartRestApiGetList.
        :rtype: Meta7
        """
        return self._owners

    @owners.setter
    def owners(self, owners):
        """Sets the owners of this ChartRestApiGetList.


        :param owners: The owners of this ChartRestApiGetList.
        :type owners: Meta7
        """

        self._owners = owners

    @property
    def params(self):
        """Gets the params of this ChartRestApiGetList.


        :return: The params of this ChartRestApiGetList.
        :rtype: str
        """
        return self._params

    @params.setter
    def params(self, params):
        """Sets the params of this ChartRestApiGetList.


        :param params: The params of this ChartRestApiGetList.
        :type params: str
        """

        self._params = params

    @property
    def slice_name(self):
        """Gets the slice_name of this ChartRestApiGetList.


        :return: The slice_name of this ChartRestApiGetList.
        :rtype: str
        """
        return self._slice_name

    @slice_name.setter
    def slice_name(self, slice_name):
        """Sets the slice_name of this ChartRestApiGetList.


        :param slice_name: The slice_name of this ChartRestApiGetList.
        :type slice_name: str
        """
        if slice_name is not None and len(slice_name) > 250:
            raise ValueError("Invalid value for `slice_name`, length must be less than or equal to `250`")

        self._slice_name = slice_name

    @property
    def table(self):
        """Gets the table of this ChartRestApiGetList.


        :return: The table of this ChartRestApiGetList.
        :rtype: Meta6
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this ChartRestApiGetList.


        :param table: The table of this ChartRestApiGetList.
        :type table: Meta6
        """

        self._table = table

    @property
    def thumbnail_url(self):
        """Gets the thumbnail_url of this ChartRestApiGetList.


        :return: The thumbnail_url of this ChartRestApiGetList.
        :rtype: object
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url):
        """Sets the thumbnail_url of this ChartRestApiGetList.


        :param thumbnail_url: The thumbnail_url of this ChartRestApiGetList.
        :type thumbnail_url: object
        """

        self._thumbnail_url = thumbnail_url

    @property
    def url(self):
        """Gets the url of this ChartRestApiGetList.


        :return: The url of this ChartRestApiGetList.
        :rtype: object
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ChartRestApiGetList.


        :param url: The url of this ChartRestApiGetList.
        :type url: object
        """

        self._url = url

    @property
    def viz_type(self):
        """Gets the viz_type of this ChartRestApiGetList.


        :return: The viz_type of this ChartRestApiGetList.
        :rtype: str
        """
        return self._viz_type

    @viz_type.setter
    def viz_type(self, viz_type):
        """Sets the viz_type of this ChartRestApiGetList.


        :param viz_type: The viz_type of this ChartRestApiGetList.
        :type viz_type: str
        """
        if viz_type is not None and len(viz_type) > 250:
            raise ValueError("Invalid value for `viz_type`, length must be less than or equal to `250`")

        self._viz_type = viz_type
