# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChartDataSelectOptionsSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[str]=None, exclude: List[str]=None, rename: List[object]=None):
        """ChartDataSelectOptionsSchema - a model defined in OpenAPI

        :param columns: The columns of this ChartDataSelectOptionsSchema.
        :param exclude: The exclude of this ChartDataSelectOptionsSchema.
        :param rename: The rename of this ChartDataSelectOptionsSchema.
        """
        self.openapi_types = {
            'columns': List[str],
            'exclude': List[str],
            'rename': List[object]
        }

        self.attribute_map = {
            'columns': 'columns',
            'exclude': 'exclude',
            'rename': 'rename'
        }

        self._columns = columns
        self._exclude = exclude
        self._rename = rename

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChartDataSelectOptionsSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChartDataSelectOptionsSchema of this ChartDataSelectOptionsSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this ChartDataSelectOptionsSchema.

        Columns which to select from the input data, in the desired order. If columns are renamed, the original column name should be referenced here.

        :return: The columns of this ChartDataSelectOptionsSchema.
        :rtype: List[str]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this ChartDataSelectOptionsSchema.

        Columns which to select from the input data, in the desired order. If columns are renamed, the original column name should be referenced here.

        :param columns: The columns of this ChartDataSelectOptionsSchema.
        :type columns: List[str]
        """

        self._columns = columns

    @property
    def exclude(self):
        """Gets the exclude of this ChartDataSelectOptionsSchema.

        Columns to exclude from selection.

        :return: The exclude of this ChartDataSelectOptionsSchema.
        :rtype: List[str]
        """
        return self._exclude

    @exclude.setter
    def exclude(self, exclude):
        """Sets the exclude of this ChartDataSelectOptionsSchema.

        Columns to exclude from selection.

        :param exclude: The exclude of this ChartDataSelectOptionsSchema.
        :type exclude: List[str]
        """

        self._exclude = exclude

    @property
    def rename(self):
        """Gets the rename of this ChartDataSelectOptionsSchema.

        columns which to rename, mapping source column to target column. For instance, `{'y': 'y2'}` will rename the column `y` to `y2`.

        :return: The rename of this ChartDataSelectOptionsSchema.
        :rtype: List[object]
        """
        return self._rename

    @rename.setter
    def rename(self, rename):
        """Sets the rename of this ChartDataSelectOptionsSchema.

        columns which to rename, mapping source column to target column. For instance, `{'y': 'y2'}` will rename the column `y` to `y2`.

        :param rename: The rename of this ChartDataSelectOptionsSchema.
        :type rename: List[object]
        """

        self._rename = rename
