# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.datasource import Datasource
from openapi_server import util


class CacheInvalidationRequestSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datasource_uids: List[str]=None, datasources: List[Datasource]=None):
        """CacheInvalidationRequestSchema - a model defined in OpenAPI

        :param datasource_uids: The datasource_uids of this CacheInvalidationRequestSchema.
        :param datasources: The datasources of this CacheInvalidationRequestSchema.
        """
        self.openapi_types = {
            'datasource_uids': List[str],
            'datasources': List[Datasource]
        }

        self.attribute_map = {
            'datasource_uids': 'datasource_uids',
            'datasources': 'datasources'
        }

        self._datasource_uids = datasource_uids
        self._datasources = datasources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CacheInvalidationRequestSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CacheInvalidationRequestSchema of this CacheInvalidationRequestSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datasource_uids(self):
        """Gets the datasource_uids of this CacheInvalidationRequestSchema.

        The uid of the dataset/datasource this new chart will use. A complete datasource identification needs `datasouce_uid` 

        :return: The datasource_uids of this CacheInvalidationRequestSchema.
        :rtype: List[str]
        """
        return self._datasource_uids

    @datasource_uids.setter
    def datasource_uids(self, datasource_uids):
        """Sets the datasource_uids of this CacheInvalidationRequestSchema.

        The uid of the dataset/datasource this new chart will use. A complete datasource identification needs `datasouce_uid` 

        :param datasource_uids: The datasource_uids of this CacheInvalidationRequestSchema.
        :type datasource_uids: List[str]
        """

        self._datasource_uids = datasource_uids

    @property
    def datasources(self):
        """Gets the datasources of this CacheInvalidationRequestSchema.

        A list of the data source and database names

        :return: The datasources of this CacheInvalidationRequestSchema.
        :rtype: List[Datasource]
        """
        return self._datasources

    @datasources.setter
    def datasources(self, datasources):
        """Sets the datasources of this CacheInvalidationRequestSchema.

        A list of the data source and database names

        :param datasources: The datasources of this CacheInvalidationRequestSchema.
        :type datasources: List[Datasource]
        """

        self._datasources = datasources
