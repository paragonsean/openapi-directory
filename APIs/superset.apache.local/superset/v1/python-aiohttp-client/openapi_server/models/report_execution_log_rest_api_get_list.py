# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportExecutionLogRestApiGetList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_dttm: datetime=None, error_message: str=None, id: int=None, scheduled_dttm: datetime=None, start_dttm: datetime=None, state: str=None, uuid: str=None, value: float=None, value_row_json: str=None):
        """ReportExecutionLogRestApiGetList - a model defined in OpenAPI

        :param end_dttm: The end_dttm of this ReportExecutionLogRestApiGetList.
        :param error_message: The error_message of this ReportExecutionLogRestApiGetList.
        :param id: The id of this ReportExecutionLogRestApiGetList.
        :param scheduled_dttm: The scheduled_dttm of this ReportExecutionLogRestApiGetList.
        :param start_dttm: The start_dttm of this ReportExecutionLogRestApiGetList.
        :param state: The state of this ReportExecutionLogRestApiGetList.
        :param uuid: The uuid of this ReportExecutionLogRestApiGetList.
        :param value: The value of this ReportExecutionLogRestApiGetList.
        :param value_row_json: The value_row_json of this ReportExecutionLogRestApiGetList.
        """
        self.openapi_types = {
            'end_dttm': datetime,
            'error_message': str,
            'id': int,
            'scheduled_dttm': datetime,
            'start_dttm': datetime,
            'state': str,
            'uuid': str,
            'value': float,
            'value_row_json': str
        }

        self.attribute_map = {
            'end_dttm': 'end_dttm',
            'error_message': 'error_message',
            'id': 'id',
            'scheduled_dttm': 'scheduled_dttm',
            'start_dttm': 'start_dttm',
            'state': 'state',
            'uuid': 'uuid',
            'value': 'value',
            'value_row_json': 'value_row_json'
        }

        self._end_dttm = end_dttm
        self._error_message = error_message
        self._id = id
        self._scheduled_dttm = scheduled_dttm
        self._start_dttm = start_dttm
        self._state = state
        self._uuid = uuid
        self._value = value
        self._value_row_json = value_row_json

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportExecutionLogRestApiGetList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportExecutionLogRestApi.get_list of this ReportExecutionLogRestApiGetList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_dttm(self):
        """Gets the end_dttm of this ReportExecutionLogRestApiGetList.


        :return: The end_dttm of this ReportExecutionLogRestApiGetList.
        :rtype: datetime
        """
        return self._end_dttm

    @end_dttm.setter
    def end_dttm(self, end_dttm):
        """Sets the end_dttm of this ReportExecutionLogRestApiGetList.


        :param end_dttm: The end_dttm of this ReportExecutionLogRestApiGetList.
        :type end_dttm: datetime
        """

        self._end_dttm = end_dttm

    @property
    def error_message(self):
        """Gets the error_message of this ReportExecutionLogRestApiGetList.


        :return: The error_message of this ReportExecutionLogRestApiGetList.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ReportExecutionLogRestApiGetList.


        :param error_message: The error_message of this ReportExecutionLogRestApiGetList.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def id(self):
        """Gets the id of this ReportExecutionLogRestApiGetList.


        :return: The id of this ReportExecutionLogRestApiGetList.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ReportExecutionLogRestApiGetList.


        :param id: The id of this ReportExecutionLogRestApiGetList.
        :type id: int
        """

        self._id = id

    @property
    def scheduled_dttm(self):
        """Gets the scheduled_dttm of this ReportExecutionLogRestApiGetList.


        :return: The scheduled_dttm of this ReportExecutionLogRestApiGetList.
        :rtype: datetime
        """
        return self._scheduled_dttm

    @scheduled_dttm.setter
    def scheduled_dttm(self, scheduled_dttm):
        """Sets the scheduled_dttm of this ReportExecutionLogRestApiGetList.


        :param scheduled_dttm: The scheduled_dttm of this ReportExecutionLogRestApiGetList.
        :type scheduled_dttm: datetime
        """
        if scheduled_dttm is None:
            raise ValueError("Invalid value for `scheduled_dttm`, must not be `None`")

        self._scheduled_dttm = scheduled_dttm

    @property
    def start_dttm(self):
        """Gets the start_dttm of this ReportExecutionLogRestApiGetList.


        :return: The start_dttm of this ReportExecutionLogRestApiGetList.
        :rtype: datetime
        """
        return self._start_dttm

    @start_dttm.setter
    def start_dttm(self, start_dttm):
        """Sets the start_dttm of this ReportExecutionLogRestApiGetList.


        :param start_dttm: The start_dttm of this ReportExecutionLogRestApiGetList.
        :type start_dttm: datetime
        """

        self._start_dttm = start_dttm

    @property
    def state(self):
        """Gets the state of this ReportExecutionLogRestApiGetList.


        :return: The state of this ReportExecutionLogRestApiGetList.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ReportExecutionLogRestApiGetList.


        :param state: The state of this ReportExecutionLogRestApiGetList.
        :type state: str
        """
        if state is None:
            raise ValueError("Invalid value for `state`, must not be `None`")
        if state is not None and len(state) > 50:
            raise ValueError("Invalid value for `state`, length must be less than or equal to `50`")

        self._state = state

    @property
    def uuid(self):
        """Gets the uuid of this ReportExecutionLogRestApiGetList.


        :return: The uuid of this ReportExecutionLogRestApiGetList.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this ReportExecutionLogRestApiGetList.


        :param uuid: The uuid of this ReportExecutionLogRestApiGetList.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def value(self):
        """Gets the value of this ReportExecutionLogRestApiGetList.


        :return: The value of this ReportExecutionLogRestApiGetList.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ReportExecutionLogRestApiGetList.


        :param value: The value of this ReportExecutionLogRestApiGetList.
        :type value: float
        """

        self._value = value

    @property
    def value_row_json(self):
        """Gets the value_row_json of this ReportExecutionLogRestApiGetList.


        :return: The value_row_json of this ReportExecutionLogRestApiGetList.
        :rtype: str
        """
        return self._value_row_json

    @value_row_json.setter
    def value_row_json(self, value_row_json):
        """Sets the value_row_json of this ReportExecutionLogRestApiGetList.


        :param value_row_json: The value_row_json of this ReportExecutionLogRestApiGetList.
        :type value_row_json: str
        """

        self._value_row_json = value_row_json
