# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.meta3 import Meta3
from openapi_server.models.meta4 import Meta4
from openapi_server import util


class AnnotationLayerRestApiGetList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changed_by: Meta4=None, changed_on: datetime=None, changed_on_delta_humanized: object=None, created_by: Meta3=None, created_on: datetime=None, descr: str=None, id: int=None, name: str=None):
        """AnnotationLayerRestApiGetList - a model defined in OpenAPI

        :param changed_by: The changed_by of this AnnotationLayerRestApiGetList.
        :param changed_on: The changed_on of this AnnotationLayerRestApiGetList.
        :param changed_on_delta_humanized: The changed_on_delta_humanized of this AnnotationLayerRestApiGetList.
        :param created_by: The created_by of this AnnotationLayerRestApiGetList.
        :param created_on: The created_on of this AnnotationLayerRestApiGetList.
        :param descr: The descr of this AnnotationLayerRestApiGetList.
        :param id: The id of this AnnotationLayerRestApiGetList.
        :param name: The name of this AnnotationLayerRestApiGetList.
        """
        self.openapi_types = {
            'changed_by': Meta4,
            'changed_on': datetime,
            'changed_on_delta_humanized': object,
            'created_by': Meta3,
            'created_on': datetime,
            'descr': str,
            'id': int,
            'name': str
        }

        self.attribute_map = {
            'changed_by': 'changed_by',
            'changed_on': 'changed_on',
            'changed_on_delta_humanized': 'changed_on_delta_humanized',
            'created_by': 'created_by',
            'created_on': 'created_on',
            'descr': 'descr',
            'id': 'id',
            'name': 'name'
        }

        self._changed_by = changed_by
        self._changed_on = changed_on
        self._changed_on_delta_humanized = changed_on_delta_humanized
        self._created_by = created_by
        self._created_on = created_on
        self._descr = descr
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnnotationLayerRestApiGetList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnnotationLayerRestApi.get_list of this AnnotationLayerRestApiGetList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changed_by(self):
        """Gets the changed_by of this AnnotationLayerRestApiGetList.


        :return: The changed_by of this AnnotationLayerRestApiGetList.
        :rtype: Meta4
        """
        return self._changed_by

    @changed_by.setter
    def changed_by(self, changed_by):
        """Sets the changed_by of this AnnotationLayerRestApiGetList.


        :param changed_by: The changed_by of this AnnotationLayerRestApiGetList.
        :type changed_by: Meta4
        """

        self._changed_by = changed_by

    @property
    def changed_on(self):
        """Gets the changed_on of this AnnotationLayerRestApiGetList.


        :return: The changed_on of this AnnotationLayerRestApiGetList.
        :rtype: datetime
        """
        return self._changed_on

    @changed_on.setter
    def changed_on(self, changed_on):
        """Sets the changed_on of this AnnotationLayerRestApiGetList.


        :param changed_on: The changed_on of this AnnotationLayerRestApiGetList.
        :type changed_on: datetime
        """

        self._changed_on = changed_on

    @property
    def changed_on_delta_humanized(self):
        """Gets the changed_on_delta_humanized of this AnnotationLayerRestApiGetList.


        :return: The changed_on_delta_humanized of this AnnotationLayerRestApiGetList.
        :rtype: object
        """
        return self._changed_on_delta_humanized

    @changed_on_delta_humanized.setter
    def changed_on_delta_humanized(self, changed_on_delta_humanized):
        """Sets the changed_on_delta_humanized of this AnnotationLayerRestApiGetList.


        :param changed_on_delta_humanized: The changed_on_delta_humanized of this AnnotationLayerRestApiGetList.
        :type changed_on_delta_humanized: object
        """

        self._changed_on_delta_humanized = changed_on_delta_humanized

    @property
    def created_by(self):
        """Gets the created_by of this AnnotationLayerRestApiGetList.


        :return: The created_by of this AnnotationLayerRestApiGetList.
        :rtype: Meta3
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this AnnotationLayerRestApiGetList.


        :param created_by: The created_by of this AnnotationLayerRestApiGetList.
        :type created_by: Meta3
        """

        self._created_by = created_by

    @property
    def created_on(self):
        """Gets the created_on of this AnnotationLayerRestApiGetList.


        :return: The created_on of this AnnotationLayerRestApiGetList.
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this AnnotationLayerRestApiGetList.


        :param created_on: The created_on of this AnnotationLayerRestApiGetList.
        :type created_on: datetime
        """

        self._created_on = created_on

    @property
    def descr(self):
        """Gets the descr of this AnnotationLayerRestApiGetList.


        :return: The descr of this AnnotationLayerRestApiGetList.
        :rtype: str
        """
        return self._descr

    @descr.setter
    def descr(self, descr):
        """Sets the descr of this AnnotationLayerRestApiGetList.


        :param descr: The descr of this AnnotationLayerRestApiGetList.
        :type descr: str
        """

        self._descr = descr

    @property
    def id(self):
        """Gets the id of this AnnotationLayerRestApiGetList.


        :return: The id of this AnnotationLayerRestApiGetList.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AnnotationLayerRestApiGetList.


        :param id: The id of this AnnotationLayerRestApiGetList.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this AnnotationLayerRestApiGetList.


        :return: The name of this AnnotationLayerRestApiGetList.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AnnotationLayerRestApiGetList.


        :param name: The name of this AnnotationLayerRestApiGetList.
        :type name: str
        """
        if name is not None and len(name) > 250:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `250`")

        self._name = name
