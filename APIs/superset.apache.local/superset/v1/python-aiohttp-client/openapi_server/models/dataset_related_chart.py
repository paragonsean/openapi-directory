# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DatasetRelatedChart(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, slice_name: str=None, viz_type: str=None):
        """DatasetRelatedChart - a model defined in OpenAPI

        :param id: The id of this DatasetRelatedChart.
        :param slice_name: The slice_name of this DatasetRelatedChart.
        :param viz_type: The viz_type of this DatasetRelatedChart.
        """
        self.openapi_types = {
            'id': int,
            'slice_name': str,
            'viz_type': str
        }

        self.attribute_map = {
            'id': 'id',
            'slice_name': 'slice_name',
            'viz_type': 'viz_type'
        }

        self._id = id
        self._slice_name = slice_name
        self._viz_type = viz_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasetRelatedChart':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasetRelatedChart of this DatasetRelatedChart.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DatasetRelatedChart.


        :return: The id of this DatasetRelatedChart.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DatasetRelatedChart.


        :param id: The id of this DatasetRelatedChart.
        :type id: int
        """

        self._id = id

    @property
    def slice_name(self):
        """Gets the slice_name of this DatasetRelatedChart.


        :return: The slice_name of this DatasetRelatedChart.
        :rtype: str
        """
        return self._slice_name

    @slice_name.setter
    def slice_name(self, slice_name):
        """Sets the slice_name of this DatasetRelatedChart.


        :param slice_name: The slice_name of this DatasetRelatedChart.
        :type slice_name: str
        """

        self._slice_name = slice_name

    @property
    def viz_type(self):
        """Gets the viz_type of this DatasetRelatedChart.


        :return: The viz_type of this DatasetRelatedChart.
        :rtype: str
        """
        return self._viz_type

    @viz_type.setter
    def viz_type(self, viz_type):
        """Sets the viz_type of this DatasetRelatedChart.


        :param viz_type: The viz_type of this DatasetRelatedChart.
        :type viz_type: str
        """

        self._viz_type = viz_type
