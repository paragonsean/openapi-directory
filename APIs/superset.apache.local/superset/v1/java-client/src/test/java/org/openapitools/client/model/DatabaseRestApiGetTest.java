/*
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DatabaseRestApiGet
 */
public class DatabaseRestApiGetTest {
    private final DatabaseRestApiGet model = new DatabaseRestApiGet();

    /**
     * Model tests for DatabaseRestApiGet
     */
    @Test
    public void testDatabaseRestApiGet() {
        // TODO: test DatabaseRestApiGet
    }

    /**
     * Test the property 'allowCsvUpload'
     */
    @Test
    public void allowCsvUploadTest() {
        // TODO: test allowCsvUpload
    }

    /**
     * Test the property 'allowCtas'
     */
    @Test
    public void allowCtasTest() {
        // TODO: test allowCtas
    }

    /**
     * Test the property 'allowCvas'
     */
    @Test
    public void allowCvasTest() {
        // TODO: test allowCvas
    }

    /**
     * Test the property 'allowDml'
     */
    @Test
    public void allowDmlTest() {
        // TODO: test allowDml
    }

    /**
     * Test the property 'allowMultiSchemaMetadataFetch'
     */
    @Test
    public void allowMultiSchemaMetadataFetchTest() {
        // TODO: test allowMultiSchemaMetadataFetch
    }

    /**
     * Test the property 'allowRunAsync'
     */
    @Test
    public void allowRunAsyncTest() {
        // TODO: test allowRunAsync
    }

    /**
     * Test the property 'backend'
     */
    @Test
    public void backendTest() {
        // TODO: test backend
    }

    /**
     * Test the property 'cacheTimeout'
     */
    @Test
    public void cacheTimeoutTest() {
        // TODO: test cacheTimeout
    }

    /**
     * Test the property 'configurationMethod'
     */
    @Test
    public void configurationMethodTest() {
        // TODO: test configurationMethod
    }

    /**
     * Test the property 'databaseName'
     */
    @Test
    public void databaseNameTest() {
        // TODO: test databaseName
    }

    /**
     * Test the property 'encryptedExtra'
     */
    @Test
    public void encryptedExtraTest() {
        // TODO: test encryptedExtra
    }

    /**
     * Test the property 'exposeInSqllab'
     */
    @Test
    public void exposeInSqllabTest() {
        // TODO: test exposeInSqllab
    }

    /**
     * Test the property 'extra'
     */
    @Test
    public void extraTest() {
        // TODO: test extra
    }

    /**
     * Test the property 'forceCtasSchema'
     */
    @Test
    public void forceCtasSchemaTest() {
        // TODO: test forceCtasSchema
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'impersonateUser'
     */
    @Test
    public void impersonateUserTest() {
        // TODO: test impersonateUser
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'serverCert'
     */
    @Test
    public void serverCertTest() {
        // TODO: test serverCert
    }

    /**
     * Test the property 'sqlalchemyUri'
     */
    @Test
    public void sqlalchemyUriTest() {
        // TODO: test sqlalchemyUri
    }

}
