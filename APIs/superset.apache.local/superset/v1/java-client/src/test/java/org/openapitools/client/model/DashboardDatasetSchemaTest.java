/*
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.Database;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DashboardDatasetSchema
 */
public class DashboardDatasetSchemaTest {
    private final DashboardDatasetSchema model = new DashboardDatasetSchema();

    /**
     * Model tests for DashboardDatasetSchema
     */
    @Test
    public void testDashboardDatasetSchema() {
        // TODO: test DashboardDatasetSchema
    }

    /**
     * Test the property 'cacheTimeout'
     */
    @Test
    public void cacheTimeoutTest() {
        // TODO: test cacheTimeout
    }

    /**
     * Test the property 'columnFormats'
     */
    @Test
    public void columnFormatsTest() {
        // TODO: test columnFormats
    }

    /**
     * Test the property 'columnTypes'
     */
    @Test
    public void columnTypesTest() {
        // TODO: test columnTypes
    }

    /**
     * Test the property 'columns'
     */
    @Test
    public void columnsTest() {
        // TODO: test columns
    }

    /**
     * Test the property 'database'
     */
    @Test
    public void databaseTest() {
        // TODO: test database
    }

    /**
     * Test the property 'datasourceName'
     */
    @Test
    public void datasourceNameTest() {
        // TODO: test datasourceName
    }

    /**
     * Test the property 'defaultEndpoint'
     */
    @Test
    public void defaultEndpointTest() {
        // TODO: test defaultEndpoint
    }

    /**
     * Test the property 'editUrl'
     */
    @Test
    public void editUrlTest() {
        // TODO: test editUrl
    }

    /**
     * Test the property 'fetchValuesPredicate'
     */
    @Test
    public void fetchValuesPredicateTest() {
        // TODO: test fetchValuesPredicate
    }

    /**
     * Test the property 'filterSelect'
     */
    @Test
    public void filterSelectTest() {
        // TODO: test filterSelect
    }

    /**
     * Test the property 'filterSelectEnabled'
     */
    @Test
    public void filterSelectEnabledTest() {
        // TODO: test filterSelectEnabled
    }

    /**
     * Test the property 'granularitySqla'
     */
    @Test
    public void granularitySqlaTest() {
        // TODO: test granularitySqla
    }

    /**
     * Test the property 'healthCheckMessage'
     */
    @Test
    public void healthCheckMessageTest() {
        // TODO: test healthCheckMessage
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isSqllabView'
     */
    @Test
    public void isSqllabViewTest() {
        // TODO: test isSqllabView
    }

    /**
     * Test the property 'mainDttmCol'
     */
    @Test
    public void mainDttmColTest() {
        // TODO: test mainDttmCol
    }

    /**
     * Test the property 'metrics'
     */
    @Test
    public void metricsTest() {
        // TODO: test metrics
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'offset'
     */
    @Test
    public void offsetTest() {
        // TODO: test offset
    }

    /**
     * Test the property 'orderByChoices'
     */
    @Test
    public void orderByChoicesTest() {
        // TODO: test orderByChoices
    }

    /**
     * Test the property 'owners'
     */
    @Test
    public void ownersTest() {
        // TODO: test owners
    }

    /**
     * Test the property 'params'
     */
    @Test
    public void paramsTest() {
        // TODO: test params
    }

    /**
     * Test the property 'perm'
     */
    @Test
    public void permTest() {
        // TODO: test perm
    }

    /**
     * Test the property 'schema'
     */
    @Test
    public void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'selectStar'
     */
    @Test
    public void selectStarTest() {
        // TODO: test selectStar
    }

    /**
     * Test the property 'sql'
     */
    @Test
    public void sqlTest() {
        // TODO: test sql
    }

    /**
     * Test the property 'tableName'
     */
    @Test
    public void tableNameTest() {
        // TODO: test tableName
    }

    /**
     * Test the property 'templateParams'
     */
    @Test
    public void templateParamsTest() {
        // TODO: test templateParams
    }

    /**
     * Test the property 'timeGrainSqla'
     */
    @Test
    public void timeGrainSqlaTest() {
        // TODO: test timeGrainSqla
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'uid'
     */
    @Test
    public void uidTest() {
        // TODO: test uid
    }

    /**
     * Test the property 'verboseMap'
     */
    @Test
    public void verboseMapTest() {
        // TODO: test verboseMap
    }

}
