/*
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AnnotationLayerGet400Response;
import org.openapitools.client.model.AnnotationLayerInfoGet200Response;
import org.openapitools.client.model.GetInfoSchema;
import org.openapitools.client.model.GetItemSchema;
import org.openapitools.client.model.GetListSchema;
import org.openapitools.client.model.GetRelatedSchema;
import org.openapitools.client.model.RelatedResponseSchema;
import org.openapitools.client.model.ReportGet200Response;
import org.openapitools.client.model.ReportPkGet200Response;
import org.openapitools.client.model.ReportPkLogGet200Response;
import org.openapitools.client.model.ReportPkLogLogIdGet200Response;
import org.openapitools.client.model.ReportPkPut200Response;
import org.openapitools.client.model.ReportPost201Response;
import org.openapitools.client.model.ReportScheduleRestApiPost;
import org.openapitools.client.model.ReportScheduleRestApiPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportSchedulesApi
 */
@Disabled
public class ReportSchedulesApiTest {

    private final ReportSchedulesApi api = new ReportSchedulesApi();

    /**
     * Deletes multiple report schedules in a bulk operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportDeleteTest() throws ApiException {
        List<Integer> q = null;
        AnnotationLayerGet400Response response = api.reportDelete(q);
        // TODO: test validations
    }

    /**
     * Get a list of report schedules, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportGetTest() throws ApiException {
        GetListSchema q = null;
        ReportGet200Response response = api.reportGet(q);
        // TODO: test validations
    }

    /**
     * Get metadata information about this API resource
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportInfoGetTest() throws ApiException {
        GetInfoSchema q = null;
        AnnotationLayerInfoGet200Response response = api.reportInfoGet(q);
        // TODO: test validations
    }

    /**
     * Delete a report schedule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportPkDeleteTest() throws ApiException {
        Integer pk = null;
        AnnotationLayerGet400Response response = api.reportPkDelete(pk);
        // TODO: test validations
    }

    /**
     * Get a report schedule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportPkGetTest() throws ApiException {
        Integer pk = null;
        GetItemSchema q = null;
        ReportPkGet200Response response = api.reportPkGet(pk, q);
        // TODO: test validations
    }

    /**
     * Get a list of report schedule logs, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportPkLogGetTest() throws ApiException {
        Integer pk = null;
        GetListSchema q = null;
        ReportPkLogGet200Response response = api.reportPkLogGet(pk, q);
        // TODO: test validations
    }

    /**
     * Get a report schedule log
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportPkLogLogIdGetTest() throws ApiException {
        Integer pk = null;
        Integer logId = null;
        GetItemSchema q = null;
        ReportPkLogLogIdGet200Response response = api.reportPkLogLogIdGet(pk, logId, q);
        // TODO: test validations
    }

    /**
     * Update a report schedule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportPkPutTest() throws ApiException {
        Integer pk = null;
        ReportScheduleRestApiPut reportScheduleRestApiPut = null;
        ReportPkPut200Response response = api.reportPkPut(pk, reportScheduleRestApiPut);
        // TODO: test validations
    }

    /**
     * Create a report schedule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportPostTest() throws ApiException {
        ReportScheduleRestApiPost reportScheduleRestApiPost = null;
        ReportPost201Response response = api.reportPost(reportScheduleRestApiPost);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportRelatedColumnNameGetTest() throws ApiException {
        String columnName = null;
        GetRelatedSchema q = null;
        RelatedResponseSchema response = api.reportRelatedColumnNameGet(columnName, q);
        // TODO: test validations
    }

}
