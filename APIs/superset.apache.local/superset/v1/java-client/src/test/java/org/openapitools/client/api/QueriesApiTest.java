/*
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AnnotationLayerGet400Response;
import org.openapitools.client.model.AnnotationLayerInfoGet200Response;
import org.openapitools.client.model.DistincResponseSchema;
import java.io.File;
import org.openapitools.client.model.GetInfoSchema;
import org.openapitools.client.model.GetItemSchema;
import org.openapitools.client.model.GetListSchema;
import org.openapitools.client.model.GetRelatedSchema;
import org.openapitools.client.model.QueryGet200Response;
import org.openapitools.client.model.QueryPkGet200Response;
import org.openapitools.client.model.RelatedResponseSchema;
import org.openapitools.client.model.SavedQueryGet200Response;
import org.openapitools.client.model.SavedQueryPkGet200Response;
import org.openapitools.client.model.SavedQueryPkPut200Response;
import org.openapitools.client.model.SavedQueryPost201Response;
import org.openapitools.client.model.SavedQueryRestApiPost;
import org.openapitools.client.model.SavedQueryRestApiPut;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QueriesApi
 */
@Disabled
public class QueriesApiTest {

    private final QueriesApi api = new QueriesApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryDistinctColumnNameGetTest() throws ApiException {
        String columnName = null;
        GetRelatedSchema q = null;
        DistincResponseSchema response = api.queryDistinctColumnNameGet(columnName, q);
        // TODO: test validations
    }

    /**
     * Get a list of queries, use Rison or JSON query parameters for filtering, sorting, pagination and  for selecting specific columns and metadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryGetTest() throws ApiException {
        GetListSchema q = null;
        QueryGet200Response response = api.queryGet(q);
        // TODO: test validations
    }

    /**
     * Get query detail information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryPkGetTest() throws ApiException {
        Integer pk = null;
        GetItemSchema q = null;
        QueryPkGet200Response response = api.queryPkGet(pk, q);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryRelatedColumnNameGetTest() throws ApiException {
        String columnName = null;
        GetRelatedSchema q = null;
        RelatedResponseSchema response = api.queryRelatedColumnNameGet(columnName, q);
        // TODO: test validations
    }

    /**
     * Deletes multiple saved queries in a bulk operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryDeleteTest() throws ApiException {
        List<Integer> q = null;
        AnnotationLayerGet400Response response = api.savedQueryDelete(q);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryDistinctColumnNameGetTest() throws ApiException {
        String columnName = null;
        GetRelatedSchema q = null;
        DistincResponseSchema response = api.savedQueryDistinctColumnNameGet(columnName, q);
        // TODO: test validations
    }

    /**
     * Exports multiple saved queries and downloads them as YAML files
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryExportGetTest() throws ApiException {
        List<Integer> q = null;
        File response = api.savedQueryExportGet(q);
        // TODO: test validations
    }

    /**
     * Get a list of saved queries, use Rison or JSON query parameters for filtering, sorting, pagination and for selecting specific columns and metadata.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryGetTest() throws ApiException {
        GetListSchema q = null;
        SavedQueryGet200Response response = api.savedQueryGet(q);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryImportPostTest() throws ApiException {
        File formData = null;
        Boolean overwrite = null;
        String passwords = null;
        AnnotationLayerGet400Response response = api.savedQueryImportPost(formData, overwrite, passwords);
        // TODO: test validations
    }

    /**
     * Get metadata information about this API resource
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryInfoGetTest() throws ApiException {
        GetInfoSchema q = null;
        AnnotationLayerInfoGet200Response response = api.savedQueryInfoGet(q);
        // TODO: test validations
    }

    /**
     * Delete saved query
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryPkDeleteTest() throws ApiException {
        Integer pk = null;
        AnnotationLayerGet400Response response = api.savedQueryPkDelete(pk);
        // TODO: test validations
    }

    /**
     * Get a saved query
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryPkGetTest() throws ApiException {
        Integer pk = null;
        GetItemSchema q = null;
        SavedQueryPkGet200Response response = api.savedQueryPkGet(pk, q);
        // TODO: test validations
    }

    /**
     * Update a saved query
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryPkPutTest() throws ApiException {
        Integer pk = null;
        SavedQueryRestApiPut savedQueryRestApiPut = null;
        SavedQueryPkPut200Response response = api.savedQueryPkPut(pk, savedQueryRestApiPut);
        // TODO: test validations
    }

    /**
     * Create a saved query
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryPostTest() throws ApiException {
        SavedQueryRestApiPost savedQueryRestApiPost = null;
        SavedQueryPost201Response response = api.savedQueryPost(savedQueryRestApiPost);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void savedQueryRelatedColumnNameGetTest() throws ApiException {
        String columnName = null;
        GetRelatedSchema q = null;
        RelatedResponseSchema response = api.savedQueryRelatedColumnNameGet(columnName, q);
        // TODO: test validations
    }

}
