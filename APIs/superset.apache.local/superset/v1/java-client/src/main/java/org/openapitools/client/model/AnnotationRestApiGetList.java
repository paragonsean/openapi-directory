/*
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Meta;
import org.openapitools.client.model.Meta1;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AnnotationRestApiGetList
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:28:21.510964-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AnnotationRestApiGetList {
  public static final String SERIALIZED_NAME_CHANGED_BY = "changed_by";
  @SerializedName(SERIALIZED_NAME_CHANGED_BY)
  private Meta1 changedBy;

  public static final String SERIALIZED_NAME_CHANGED_ON_DELTA_HUMANIZED = "changed_on_delta_humanized";
  @SerializedName(SERIALIZED_NAME_CHANGED_ON_DELTA_HUMANIZED)
  private Object changedOnDeltaHumanized = null;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private Meta createdBy;

  public static final String SERIALIZED_NAME_END_DTTM = "end_dttm";
  @SerializedName(SERIALIZED_NAME_END_DTTM)
  private OffsetDateTime endDttm;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LONG_DESCR = "long_descr";
  @SerializedName(SERIALIZED_NAME_LONG_DESCR)
  private String longDescr;

  public static final String SERIALIZED_NAME_SHORT_DESCR = "short_descr";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCR)
  private String shortDescr;

  public static final String SERIALIZED_NAME_START_DTTM = "start_dttm";
  @SerializedName(SERIALIZED_NAME_START_DTTM)
  private OffsetDateTime startDttm;

  public AnnotationRestApiGetList() {
  }

  public AnnotationRestApiGetList(
     Object changedOnDeltaHumanized
  ) {
    this();
    this.changedOnDeltaHumanized = changedOnDeltaHumanized;
  }

  public AnnotationRestApiGetList changedBy(Meta1 changedBy) {
    this.changedBy = changedBy;
    return this;
  }

  /**
   * Get changedBy
   * @return changedBy
   */
  @javax.annotation.Nullable
  public Meta1 getChangedBy() {
    return changedBy;
  }

  public void setChangedBy(Meta1 changedBy) {
    this.changedBy = changedBy;
  }


  /**
   * Get changedOnDeltaHumanized
   * @return changedOnDeltaHumanized
   */
  @javax.annotation.Nullable
  public Object getChangedOnDeltaHumanized() {
    return changedOnDeltaHumanized;
  }



  public AnnotationRestApiGetList createdBy(Meta createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public Meta getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Meta createdBy) {
    this.createdBy = createdBy;
  }


  public AnnotationRestApiGetList endDttm(OffsetDateTime endDttm) {
    this.endDttm = endDttm;
    return this;
  }

  /**
   * Get endDttm
   * @return endDttm
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndDttm() {
    return endDttm;
  }

  public void setEndDttm(OffsetDateTime endDttm) {
    this.endDttm = endDttm;
  }


  public AnnotationRestApiGetList id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public AnnotationRestApiGetList longDescr(String longDescr) {
    this.longDescr = longDescr;
    return this;
  }

  /**
   * Get longDescr
   * @return longDescr
   */
  @javax.annotation.Nullable
  public String getLongDescr() {
    return longDescr;
  }

  public void setLongDescr(String longDescr) {
    this.longDescr = longDescr;
  }


  public AnnotationRestApiGetList shortDescr(String shortDescr) {
    this.shortDescr = shortDescr;
    return this;
  }

  /**
   * Get shortDescr
   * @return shortDescr
   */
  @javax.annotation.Nullable
  public String getShortDescr() {
    return shortDescr;
  }

  public void setShortDescr(String shortDescr) {
    this.shortDescr = shortDescr;
  }


  public AnnotationRestApiGetList startDttm(OffsetDateTime startDttm) {
    this.startDttm = startDttm;
    return this;
  }

  /**
   * Get startDttm
   * @return startDttm
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDttm() {
    return startDttm;
  }

  public void setStartDttm(OffsetDateTime startDttm) {
    this.startDttm = startDttm;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnotationRestApiGetList annotationRestApiGetList = (AnnotationRestApiGetList) o;
    return Objects.equals(this.changedBy, annotationRestApiGetList.changedBy) &&
        Objects.equals(this.changedOnDeltaHumanized, annotationRestApiGetList.changedOnDeltaHumanized) &&
        Objects.equals(this.createdBy, annotationRestApiGetList.createdBy) &&
        Objects.equals(this.endDttm, annotationRestApiGetList.endDttm) &&
        Objects.equals(this.id, annotationRestApiGetList.id) &&
        Objects.equals(this.longDescr, annotationRestApiGetList.longDescr) &&
        Objects.equals(this.shortDescr, annotationRestApiGetList.shortDescr) &&
        Objects.equals(this.startDttm, annotationRestApiGetList.startDttm);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(changedBy, changedOnDeltaHumanized, createdBy, endDttm, id, longDescr, shortDescr, startDttm);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnotationRestApiGetList {\n");
    sb.append("    changedBy: ").append(toIndentedString(changedBy)).append("\n");
    sb.append("    changedOnDeltaHumanized: ").append(toIndentedString(changedOnDeltaHumanized)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    endDttm: ").append(toIndentedString(endDttm)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    longDescr: ").append(toIndentedString(longDescr)).append("\n");
    sb.append("    shortDescr: ").append(toIndentedString(shortDescr)).append("\n");
    sb.append("    startDttm: ").append(toIndentedString(startDttm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("changed_by");
    openapiFields.add("changed_on_delta_humanized");
    openapiFields.add("created_by");
    openapiFields.add("end_dttm");
    openapiFields.add("id");
    openapiFields.add("long_descr");
    openapiFields.add("short_descr");
    openapiFields.add("start_dttm");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AnnotationRestApiGetList
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AnnotationRestApiGetList.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AnnotationRestApiGetList is not found in the empty JSON string", AnnotationRestApiGetList.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AnnotationRestApiGetList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AnnotationRestApiGetList` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `changed_by`
      if (jsonObj.get("changed_by") != null && !jsonObj.get("changed_by").isJsonNull()) {
        Meta1.validateJsonElement(jsonObj.get("changed_by"));
      }
      // validate the optional field `created_by`
      if (jsonObj.get("created_by") != null && !jsonObj.get("created_by").isJsonNull()) {
        Meta.validateJsonElement(jsonObj.get("created_by"));
      }
      if ((jsonObj.get("long_descr") != null && !jsonObj.get("long_descr").isJsonNull()) && !jsonObj.get("long_descr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `long_descr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("long_descr").toString()));
      }
      if ((jsonObj.get("short_descr") != null && !jsonObj.get("short_descr").isJsonNull()) && !jsonObj.get("short_descr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_descr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_descr").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AnnotationRestApiGetList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AnnotationRestApiGetList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AnnotationRestApiGetList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AnnotationRestApiGetList.class));

       return (TypeAdapter<T>) new TypeAdapter<AnnotationRestApiGetList>() {
           @Override
           public void write(JsonWriter out, AnnotationRestApiGetList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AnnotationRestApiGetList read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AnnotationRestApiGetList given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AnnotationRestApiGetList
   * @throws IOException if the JSON string is invalid with respect to AnnotationRestApiGetList
   */
  public static AnnotationRestApiGetList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AnnotationRestApiGetList.class);
  }

  /**
   * Convert an instance of AnnotationRestApiGetList to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

