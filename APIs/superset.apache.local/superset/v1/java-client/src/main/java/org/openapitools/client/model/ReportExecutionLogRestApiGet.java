/*
 * Superset
 * Superset
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ReportExecutionLogRestApiGet
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:28:21.510964-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ReportExecutionLogRestApiGet {
  public static final String SERIALIZED_NAME_END_DTTM = "end_dttm";
  @SerializedName(SERIALIZED_NAME_END_DTTM)
  private OffsetDateTime endDttm;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "error_message";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_SCHEDULED_DTTM = "scheduled_dttm";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_DTTM)
  private OffsetDateTime scheduledDttm;

  public static final String SERIALIZED_NAME_START_DTTM = "start_dttm";
  @SerializedName(SERIALIZED_NAME_START_DTTM)
  private OffsetDateTime startDttm;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private Float value;

  public static final String SERIALIZED_NAME_VALUE_ROW_JSON = "value_row_json";
  @SerializedName(SERIALIZED_NAME_VALUE_ROW_JSON)
  private String valueRowJson;

  public ReportExecutionLogRestApiGet() {
  }

  public ReportExecutionLogRestApiGet endDttm(OffsetDateTime endDttm) {
    this.endDttm = endDttm;
    return this;
  }

  /**
   * Get endDttm
   * @return endDttm
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndDttm() {
    return endDttm;
  }

  public void setEndDttm(OffsetDateTime endDttm) {
    this.endDttm = endDttm;
  }


  public ReportExecutionLogRestApiGet errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Get errorMessage
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public ReportExecutionLogRestApiGet id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public ReportExecutionLogRestApiGet scheduledDttm(OffsetDateTime scheduledDttm) {
    this.scheduledDttm = scheduledDttm;
    return this;
  }

  /**
   * Get scheduledDttm
   * @return scheduledDttm
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getScheduledDttm() {
    return scheduledDttm;
  }

  public void setScheduledDttm(OffsetDateTime scheduledDttm) {
    this.scheduledDttm = scheduledDttm;
  }


  public ReportExecutionLogRestApiGet startDttm(OffsetDateTime startDttm) {
    this.startDttm = startDttm;
    return this;
  }

  /**
   * Get startDttm
   * @return startDttm
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartDttm() {
    return startDttm;
  }

  public void setStartDttm(OffsetDateTime startDttm) {
    this.startDttm = startDttm;
  }


  public ReportExecutionLogRestApiGet state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nonnull
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public ReportExecutionLogRestApiGet uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

  /**
   * Get uuid
   * @return uuid
   */
  @javax.annotation.Nullable
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public ReportExecutionLogRestApiGet value(Float value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public Float getValue() {
    return value;
  }

  public void setValue(Float value) {
    this.value = value;
  }


  public ReportExecutionLogRestApiGet valueRowJson(String valueRowJson) {
    this.valueRowJson = valueRowJson;
    return this;
  }

  /**
   * Get valueRowJson
   * @return valueRowJson
   */
  @javax.annotation.Nullable
  public String getValueRowJson() {
    return valueRowJson;
  }

  public void setValueRowJson(String valueRowJson) {
    this.valueRowJson = valueRowJson;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportExecutionLogRestApiGet reportExecutionLogRestApiGet = (ReportExecutionLogRestApiGet) o;
    return Objects.equals(this.endDttm, reportExecutionLogRestApiGet.endDttm) &&
        Objects.equals(this.errorMessage, reportExecutionLogRestApiGet.errorMessage) &&
        Objects.equals(this.id, reportExecutionLogRestApiGet.id) &&
        Objects.equals(this.scheduledDttm, reportExecutionLogRestApiGet.scheduledDttm) &&
        Objects.equals(this.startDttm, reportExecutionLogRestApiGet.startDttm) &&
        Objects.equals(this.state, reportExecutionLogRestApiGet.state) &&
        Objects.equals(this.uuid, reportExecutionLogRestApiGet.uuid) &&
        Objects.equals(this.value, reportExecutionLogRestApiGet.value) &&
        Objects.equals(this.valueRowJson, reportExecutionLogRestApiGet.valueRowJson);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(endDttm, errorMessage, id, scheduledDttm, startDttm, state, uuid, value, valueRowJson);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportExecutionLogRestApiGet {\n");
    sb.append("    endDttm: ").append(toIndentedString(endDttm)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scheduledDttm: ").append(toIndentedString(scheduledDttm)).append("\n");
    sb.append("    startDttm: ").append(toIndentedString(startDttm)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    valueRowJson: ").append(toIndentedString(valueRowJson)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("end_dttm");
    openapiFields.add("error_message");
    openapiFields.add("id");
    openapiFields.add("scheduled_dttm");
    openapiFields.add("start_dttm");
    openapiFields.add("state");
    openapiFields.add("uuid");
    openapiFields.add("value");
    openapiFields.add("value_row_json");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("scheduled_dttm");
    openapiRequiredFields.add("state");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ReportExecutionLogRestApiGet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ReportExecutionLogRestApiGet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReportExecutionLogRestApiGet is not found in the empty JSON string", ReportExecutionLogRestApiGet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ReportExecutionLogRestApiGet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ReportExecutionLogRestApiGet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ReportExecutionLogRestApiGet.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("error_message") != null && !jsonObj.get("error_message").isJsonNull()) && !jsonObj.get("error_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error_message").toString()));
      }
      if (!jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("uuid") != null && !jsonObj.get("uuid").isJsonNull()) && !jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
      if ((jsonObj.get("value_row_json") != null && !jsonObj.get("value_row_json").isJsonNull()) && !jsonObj.get("value_row_json").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `value_row_json` to be a primitive type in the JSON string but got `%s`", jsonObj.get("value_row_json").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReportExecutionLogRestApiGet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReportExecutionLogRestApiGet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReportExecutionLogRestApiGet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReportExecutionLogRestApiGet.class));

       return (TypeAdapter<T>) new TypeAdapter<ReportExecutionLogRestApiGet>() {
           @Override
           public void write(JsonWriter out, ReportExecutionLogRestApiGet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ReportExecutionLogRestApiGet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ReportExecutionLogRestApiGet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ReportExecutionLogRestApiGet
   * @throws IOException if the JSON string is invalid with respect to ReportExecutionLogRestApiGet
   */
  public static ReportExecutionLogRestApiGet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReportExecutionLogRestApiGet.class);
  }

  /**
   * Convert an instance of ReportExecutionLogRestApiGet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

