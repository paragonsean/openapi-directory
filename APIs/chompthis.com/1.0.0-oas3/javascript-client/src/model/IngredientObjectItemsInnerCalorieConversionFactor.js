/**
 * Chomp Food Database API Documentation
 * ## Important An **[API key](https://chompthis.com/api/)** is required for access to this API. Get yours at **[https://chompthis.com/api](https://chompthis.com/api/)**.  ### Getting Started   * **[Subscribe](https://chompthis.com/api/#pricing)** to the API.   * Scroll down and click the \"**Authorize**\" button.   * Enter your API key into the \"**value**\" input, click the \"**Authorize**\" button, then click the \"**Close**\" button.   * Scroll down to the section titled \"**default**\" and click on the API endpoint you wish to use.   * Click the \"**Try it out**\" button.   * Enter the information the endpoint requires.   * Click the \"**Execute**\" button.  ### Example    * Branded food response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/branded-food-response-object.json)**   * Ingredient response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/ingredient-response-object.json)**   * Error response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/error-response-object.json)**  ### How Do I Find My API Key?   * Your API key was sent to the email address you used to create your subscription.   * You will also find your API key in the **[Client Center](https://chompthis.com/api/manage.php)**.   * Read **[this article](https://desk.zoho.com/portal/chompthis/kb/articles/how-do-i-find-my-api-key)** for more information.  ### Helpful Links   * **Help & Support**     * [Knowledge Base &raquo;](https://desk.zoho.com/portal/chompthis/kb/chomp)     * [Support &raquo;](https://chompthis.com/api/ticket-new.php)     * [Client Center &raquo;](https://chompthis.com/api/manage.php)   * **Pricing**     * [Subscription Options &raquo;](https://chompthis.com/api/)     * [Cost Calculator &raquo;](https://chompthis.com/api/cost-calculator.php)   * **Guidelines**     * [Terms & License &raquo;](https://chompthis.com/api/terms.php)     * [Attribution &raquo;](https://chompthis.com/api/docs/attribution.php) 
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IngredientObjectItemsInnerCalorieConversionFactor model module.
 * @module model/IngredientObjectItemsInnerCalorieConversionFactor
 * @version 1.0.0-oas3
 */
class IngredientObjectItemsInnerCalorieConversionFactor {
    /**
     * Constructs a new <code>IngredientObjectItemsInnerCalorieConversionFactor</code>.
     * An object containing the multiplication factors to be used when calculating energy from macronutrients for a specific food.
     * @alias module:model/IngredientObjectItemsInnerCalorieConversionFactor
     */
    constructor() { 
        
        IngredientObjectItemsInnerCalorieConversionFactor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IngredientObjectItemsInnerCalorieConversionFactor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IngredientObjectItemsInnerCalorieConversionFactor} obj Optional instance to populate.
     * @return {module:model/IngredientObjectItemsInnerCalorieConversionFactor} The populated <code>IngredientObjectItemsInnerCalorieConversionFactor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IngredientObjectItemsInnerCalorieConversionFactor();

            if (data.hasOwnProperty('carbohydrate_value')) {
                obj['carbohydrate_value'] = ApiClient.convertToType(data['carbohydrate_value'], 'Number');
            }
            if (data.hasOwnProperty('fat_value')) {
                obj['fat_value'] = ApiClient.convertToType(data['fat_value'], 'Number');
            }
            if (data.hasOwnProperty('protein_value')) {
                obj['protein_value'] = ApiClient.convertToType(data['protein_value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IngredientObjectItemsInnerCalorieConversionFactor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IngredientObjectItemsInnerCalorieConversionFactor</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The multiplication factor for carbohydrates
 * @member {Number} carbohydrate_value
 */
IngredientObjectItemsInnerCalorieConversionFactor.prototype['carbohydrate_value'] = undefined;

/**
 * The multiplication factor for fat
 * @member {Number} fat_value
 */
IngredientObjectItemsInnerCalorieConversionFactor.prototype['fat_value'] = undefined;

/**
 * The multiplication factor for protein
 * @member {Number} protein_value
 */
IngredientObjectItemsInnerCalorieConversionFactor.prototype['protein_value'] = undefined;






export default IngredientObjectItemsInnerCalorieConversionFactor;

