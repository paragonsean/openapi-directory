openapi: 3.0.0
info:
  contact:
    x-twitter: chomp_this_
  description: "## Important\nAn **[API key](https://chompthis.com/api/)** is required\
    \ for access to this API. Get yours at **[https://chompthis.com/api](https://chompthis.com/api/)**.\n\
    \n### Getting Started\n  * **[Subscribe](https://chompthis.com/api/#pricing)**\
    \ to the API.\n  * Scroll down and click the \"**Authorize**\" button.\n  * Enter\
    \ your API key into the \"**value**\" input, click the \"**Authorize**\" button,\
    \ then click the \"**Close**\" button.\n  * Scroll down to the section titled\
    \ \"**default**\" and click on the API endpoint you wish to use.\n  * Click the\
    \ \"**Try it out**\" button.\n  * Enter the information the endpoint requires.\n\
    \  * Click the \"**Execute**\" button.\n\n### Example \n  * Branded food response\
    \ object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/branded-food-response-object.json)**\n\
    \  * Ingredient response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/ingredient-response-object.json)**\n\
    \  * Error response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/error-response-object.json)**\n\
    \n### How Do I Find My API Key?\n  * Your API key was sent to the email address\
    \ you used to create your subscription.\n  * You will also find your API key in\
    \ the **[Client Center](https://chompthis.com/api/manage.php)**.\n  * Read **[this\
    \ article](https://desk.zoho.com/portal/chompthis/kb/articles/how-do-i-find-my-api-key)**\
    \ for more information.\n\n### Helpful Links\n  * **Help & Support**\n    * [Knowledge\
    \ Base &raquo;](https://desk.zoho.com/portal/chompthis/kb/chomp)\n    * [Support\
    \ &raquo;](https://chompthis.com/api/ticket-new.php)\n    * [Client Center &raquo;](https://chompthis.com/api/manage.php)\n\
    \  * **Pricing**\n    * [Subscription Options &raquo;](https://chompthis.com/api/)\n\
    \    * [Cost Calculator &raquo;](https://chompthis.com/api/cost-calculator.php)\n\
    \  * **Guidelines**\n    * [Terms & License &raquo;](https://chompthis.com/api/terms.php)\n\
    \    * [Attribution &raquo;](https://chompthis.com/api/docs/attribution.php)\n"
  title: Chomp Food Database API Documentation
  version: 1.0.0-oas3
  x-apisguru-categories:
  - tools
  x-logo:
    url: https://twitter.com/chomp_this_/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/chompfoods/examples/master/chomp-Chomp-1.0.0-oas3-swagger.json
    version: "3.0"
  x-providerName: chompthis.com
servers:
- description: Production server (uses live data)
  url: https://chompthis.com/api/v2
paths:
  /food/branded/barcode.php:
    get:
      description: "## Get data for a branded food using the food's UPC/EAN barcode.\n\
        \n**Example** \n> ```https://chompthis.com/api/v2/food/branded/barcode.php?api_key=API_KEY&code=CODE```\n\
        \n**Tips**\n  * Read our **[Knowledge Base article](https://desk.zoho.com/portal/chompthis/kb/articles/im-having-trouble-getting-matches-for-barcodes-what-can-id-do)**\
        \ for helpful tips and tricks.\n"
      operationId: food_branded_barcode_php_get
      parameters:
      - description: |
          #### UPC/EAN barcode

          **Example**
          > ```&code=0842234000988```
        explode: true
        in: query
        name: code
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandedFoodObject'
          description: "**Valid** - Will return an object containing any matching\
            \ foods. \n"
        "400":
          description: |
            **Validation error** - Invalid parameters or request.
        "401":
          description: |
            **Unauthorized** - Invalid API key, unauthorized access, or usage limits exceeded. ***[More information &raquo;](https://desk.zoho.com/portal/chompthis/kb/articles/what-is-a-rate-limit)***
        "404":
          description: |
            **Not found** - No food items were found.
        "500":
          description: |
            **Server error** - Internal server error, request failed, or base error. *Please **[contact us](https://chompthis.com/api/ticket-new.php)** if you see this.*
      security:
      - ApiKeyAuth: []
      summary: Get a branded food item using a barcode
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /food/branded/name.php:
    get:
      description: |
        ## Search for branded food items by name.

        **Example**
        > ```https://chompthis.com/api/v2/food/branded/name.php?api_key=API_KEY&name=NAME```

        **Tips**
          * Get started by using our **[food lookup tool](https://chompthis.com/api/lookup.php)**.

        > This API endpoint is only available to Standard and Premium API subscribers. Please consider upgrading your subscription if you are subscribed to the Limited plan. **[Read this](https://desk.zoho.com/portal/chompthis/kb/articles/can-i-upgrade-downgrade-my-subscription)** if you aren't sure how to upgrade your subscription.
      operationId: food_branded_name_php_get
      parameters:
      - description: |
          #### Search for branded food items using a general food name keyword. This does not have to exactly match the "official" name for the food.

          **Example**
          > ```&name=Starburst```
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: |
          #### Set maximum number of records you want the API to return. The default value is "**10**."

          **Example**
          > ```&limit=10```
        explode: true
        in: query
        name: limit
        required: false
        schema:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          type: integer
        style: form
      - description: |
          #### This is how you paginate the search result. By default, you will see the first 10 records. You must increment the page number to access the next 10 records, and so on. The default value is "**1**."

          **Example**
          > ```&page=1```
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandedFoodObject'
          description: "**Valid** - Will return an object containing any matching\
            \ foods. \n"
        "400":
          description: |
            **Validation error** - Invalid parameters or request.
        "401":
          description: |
            **Unauthorized** - Invalid API key, unauthorized access, or usage limits exceeded. ***[More information &raquo;](https://desk.zoho.com/portal/chompthis/kb/articles/what-is-a-rate-limit)***
        "404":
          description: |
            **Not found** - No food items were found.
        "500":
          description: |
            **Server error** - Internal server error, request failed, or base error. *Please **[contact us](https://chompthis.com/api/ticket-new.php)** if you see this.*
      security:
      - ApiKeyAuth: []
      summary: Get a branded food item by name
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /food/branded/search.php:
    get:
      description: "## Search for branded food items using various parameters.\n\n\
        **Example**\n> ```https://chompthis.com/api/v2/food/branded/search.php?api_key=API_KEY&brand=BRAND&country=COUNTRY&page=1```\n\
        \n**Tips** \n  * Get started by using the **[Query Builder](https://chompthis.com/api/build.php)**.\n\
        \n> This API endpoint is only available to Standard and Premium API subscribers.\
        \ Please consider upgrading your subscription if you are subscribed to the\
        \ Limited plan. **[Read this](https://desk.zoho.com/portal/chompthis/kb/articles/can-i-upgrade-downgrade-my-subscription)**\
        \ if you aren't sure how to upgrade your subscription.\n"
      operationId: food_branded_search_php_get
      parameters:
      - description: |
          #### Filter the search to only include branded foods that contain a specific allergen.

          **Example**
          > ```&allergen=Peanuts```

          **Important Note**: This parameter cannot be used alone. It must be paired with at least 1 additional parameter.
        explode: true
        in: query
        name: allergen
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods that are owned by a specific brand.

          **Example**
          > ```&brand=Starbucks```
        explode: true
        in: query
        name: brand
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods from a specific category.

          **Example**
          > ```&category=Plant Based Foods```
        explode: true
        in: query
        name: category
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods that are sold in a specific country.

          **Example**
          > ```&country=United States```

          **Important Note**: This parameter cannot be used alone. It must be paired with at least 1 additional parameter.
        explode: true
        in: query
        name: country
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods that are considered compatible with a specific diet.

          **Important Note**: This parameter cannot be used alone. It must be paired with at least 1 additional parameter.
        explode: true
        in: query
        name: diet
        required: false
        schema:
          enum:
          - Vegan
          - Vegetarian
          - Gluten Free
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods that contain a specific ingredient.

          **Example**
          > ```&ingredient=Salt```
        explode: true
        in: query
        name: ingredient
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods that are associated with a specific keyword.

          **Example**
          > ```&keyword=Organic```

          **Important Note**: This parameter cannot be used alone. It must be paired with at least 1 additional parameter.
        explode: true
        in: query
        name: keyword
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods that contain a specific mineral.

          **Example**
          > ```&mineral=Potassium```
        explode: true
        in: query
        name: mineral
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods that contain a specific nutrient.

          **Example**
          > ```&nutrient=Caffeine```

          **Important Note**: This parameter cannot be used alone. It must be paired with at least 1 additional parameter.
        explode: true
        in: query
        name: nutrient
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods that contain a specific ingredient made using palm oil.

          **Example**
          > ```&palm_oil=E160a Beta Carotene```
        explode: true
        in: query
        name: palm_oil
        required: false
        schema:
          type: string
        style: form
      - description: |
          ### Filter the search to only include branded foods that contain a specific trace ingredient.

          **Example**
          > ```&trace=Tree Nuts```

          **Important Note**: This parameter cannot be used alone. It must be paired with at least 1 additional parameter.
        explode: true
        in: query
        name: trace
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Filter the search to only include branded foods that contain a specific vitamin.

          **Example**
          > ```&vitamin=Biotin```
        explode: true
        in: query
        name: vitamin
        required: false
        schema:
          type: string
        style: form
      - description: |
          #### Set maximum number of records you want the API to return. The default value is "**10**."

          **Example**
          > ```&limit=10```
        explode: true
        in: query
        name: limit
        required: false
        schema:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          type: integer
        style: form
      - description: |
          #### This is how you paginate the search result. By default, you will see the first 10 records. You must increment the page number to access the next 10 records, and so on. The default value is "**1**."

          **Example**
          > ```&page=1```
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandedFoodObject'
          description: "**Valid** - Will return an object containing any matching\
            \ foods. \n"
        "400":
          description: |
            **Validation error** - Invalid parameters or request.
        "401":
          description: |
            **Unauthorized** - Invalid API key, unauthorized access, or usage limits exceeded. ***[More information &raquo;](https://desk.zoho.com/portal/chompthis/kb/articles/what-is-a-rate-limit)***
        "404":
          description: |
            **Not found** - No food items were found.
        "500":
          description: |
            **Server error** - Internal server error, request failed, or base error. *Please **[contact us](https://chompthis.com/api/ticket-new.php)** if you see this.*
      security:
      - ApiKeyAuth: []
      summary: Get data for branded food items using various search parameters
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /food/ingredient/search.php:
    get:
      description: |
        ## Get data for a specific ingredient or a specific set of ingredients.

        **Example #1: Single Ingredient**
        > ```https://chompthis.com/api/v2/ingredient/search.php?api_key=API_KEY&find=raw broccoli```

        **Example #2: Set of Ingredients**
        > ```https://chompthis.com/api/v2/ingredient/search.php?api_key=API_KEY&find=raw broccoli,mashed potatoes,chicken drumstick```

        **Tips**
          * Expose ingredient endpoints by using our **[food lookup tool](https://chompthis.com/api/lookup.php)**.

        > This API endpoint is only available to Standard and Premium API subscribers. Please consider upgrading your subscription if you are subscribed to the Limited plan. **[Read this](https://desk.zoho.com/portal/chompthis/kb/articles/can-i-upgrade-downgrade-my-subscription)** if you aren't sure how to upgrade your subscription.
      operationId: food_ingredient_search_php_get
      parameters:
      - description: "Search our database for a single ingredient or a specific set\
          \ of ingredients.\n\n**Example #1: Single Ingredient**\n> ```&find=raw broccoli```\n\
          \n**Example #2: Set of Ingredients**\n> ```&find=raw broccoli,buttermilk\
          \ waffle,mashed potatoes```\n\n**Important Notes** \n  * Comma-separated\
          \ lists cannot contain more than **10 ingredients**. You must perform additional\
          \ API calls if you are looking up more than 10 ingredients.\n"
        explode: true
        in: query
        name: find
        required: true
        schema:
          type: string
        style: form
      - description: |
          #### Set maximum number of records you want the API to return, per search term. The default value is "**1**."

          **Example**
          > ```&limit=3```
        explode: true
        in: query
        name: limit
        required: false
        schema:
          enum:
          - 1
          - 2
          - 3
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientObject'
          description: "**Valid** - Will return an object containing any matching\
            \ ingredient foods. \n"
        "400":
          description: |
            **Validation error** - Invalid parameters or request.
        "401":
          description: |
            **Unauthorized** - Invalid API key, unauthorized access, or usage limits exceeded. ***[More information &raquo;](https://desk.zoho.com/portal/chompthis/kb/articles/what-is-a-rate-limit)***
        "404":
          description: |
            **Not found** - No food items were found.
        "500":
          description: |
            **Server error** - Internal server error, request failed, or base error. *Please **[contact us](https://chompthis.com/api/ticket-new.php)** if you see this.*
      security:
      - ApiKeyAuth: []
      summary: Get raw/generic food ingredient item(s)
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  responses:
    "200BrandedResponse":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BrandedFoodObject'
      description: "**Valid** - Will return an object containing any matching foods.\
        \ \n"
    "200IngredientResponse":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IngredientObject'
      description: "**Valid** - Will return an object containing any matching ingredient\
        \ foods. \n"
    "400Error":
      description: |
        **Validation error** - Invalid parameters or request.
    "401Error":
      description: |
        **Unauthorized** - Invalid API key, unauthorized access, or usage limits exceeded. ***[More information &raquo;](https://desk.zoho.com/portal/chompthis/kb/articles/what-is-a-rate-limit)***
    "404Error":
      description: |
        **Not found** - No food items were found.
    "500Error":
      description: |
        **Server error** - Internal server error, request failed, or base error. *Please **[contact us](https://chompthis.com/api/ticket-new.php)** if you see this.*
  schemas:
    BrandedFoodObject:
      description: "Please read the description of each field in this API response\
        \ object example. By default, the value of each field is **null**. This indicates\
        \ an unknown state or that no data exists."
      example:
        items:
        - minerals:
          - minerals
          - minerals
          package:
            quantity: 1
            size: size
          keywords:
          - keywords
          - keywords
          country_details:
            english_speaking: 0
            non_english_speaking: 6
          traces:
          - traces
          - traces
          description: description
          countries:
          - countries
          - countries
          diet_flags:
          - ingredient: ingredient
            is_allergen: true
            ingredient_description: ingredient_description
            compatibility_level: 1
            is_compatible: is_compatible
            diet_label: diet_label
            compatibility_description: compatibility_description
          - ingredient: ingredient
            is_allergen: true
            ingredient_description: ingredient_description
            compatibility_level: 1
            is_compatible: is_compatible
            diet_label: diet_label
            compatibility_description: compatibility_description
          has_english_ingredients: true
          palm_oil_ingredients:
          - palm_oil_ingredients
          - palm_oil_ingredients
          allergens:
          - allergens
          - allergens
          nutrients:
          - data_points: 2
            name: name
            description: description
            measurement_unit: measurement_unit
            rank: 7
            per_100g: 4.145608029883936
          - data_points: 2
            name: name
            description: description
            measurement_unit: measurement_unit
            rank: 7
            per_100g: 4.145608029883936
          serving:
            size_fulltext: size_fulltext
            size: size
            measurement_unit: measurement_unit
          packaging_photos:
            nutrition:
              small: small
              thumb: thumb
              display: display
            ingredients:
              small: small
              thumb: thumb
              display: display
            front:
              small: small
              thumb: thumb
              display: display
          ingredient_list:
          - ingredient_list
          - ingredient_list
          vitamins:
          - vitamins
          - vitamins
          diet_labels:
            vegetarian:
              confidence_description: confidence_description
              confidence: 3
              compatibility_level: 9
              name: name
              is_compatible: true
            vegan:
              confidence_description: confidence_description
              confidence: 7
              compatibility_level: 2
              name: name
              is_compatible: true
            gluten_free:
              confidence_description: confidence_description
              confidence: 5
              compatibility_level: 5
              name: name
              is_compatible: true
          name: name
          ingredients: ingredients
          categories:
          - categories
          - categories
          barcode: barcode
          brand: brand
          brand_list:
          - brand_list
          - brand_list
        - minerals:
          - minerals
          - minerals
          package:
            quantity: 1
            size: size
          keywords:
          - keywords
          - keywords
          country_details:
            english_speaking: 0
            non_english_speaking: 6
          traces:
          - traces
          - traces
          description: description
          countries:
          - countries
          - countries
          diet_flags:
          - ingredient: ingredient
            is_allergen: true
            ingredient_description: ingredient_description
            compatibility_level: 1
            is_compatible: is_compatible
            diet_label: diet_label
            compatibility_description: compatibility_description
          - ingredient: ingredient
            is_allergen: true
            ingredient_description: ingredient_description
            compatibility_level: 1
            is_compatible: is_compatible
            diet_label: diet_label
            compatibility_description: compatibility_description
          has_english_ingredients: true
          palm_oil_ingredients:
          - palm_oil_ingredients
          - palm_oil_ingredients
          allergens:
          - allergens
          - allergens
          nutrients:
          - data_points: 2
            name: name
            description: description
            measurement_unit: measurement_unit
            rank: 7
            per_100g: 4.145608029883936
          - data_points: 2
            name: name
            description: description
            measurement_unit: measurement_unit
            rank: 7
            per_100g: 4.145608029883936
          serving:
            size_fulltext: size_fulltext
            size: size
            measurement_unit: measurement_unit
          packaging_photos:
            nutrition:
              small: small
              thumb: thumb
              display: display
            ingredients:
              small: small
              thumb: thumb
              display: display
            front:
              small: small
              thumb: thumb
              display: display
          ingredient_list:
          - ingredient_list
          - ingredient_list
          vitamins:
          - vitamins
          - vitamins
          diet_labels:
            vegetarian:
              confidence_description: confidence_description
              confidence: 3
              compatibility_level: 9
              name: name
              is_compatible: true
            vegan:
              confidence_description: confidence_description
              confidence: 7
              compatibility_level: 2
              name: name
              is_compatible: true
            gluten_free:
              confidence_description: confidence_description
              confidence: 5
              compatibility_level: 5
              name: name
              is_compatible: true
          name: name
          ingredients: ingredients
          categories:
          - categories
          - categories
          barcode: barcode
          brand: brand
          brand_list:
          - brand_list
          - brand_list
      properties:
        items:
          description: An array containing an object for each individual item returned
            by your API call.
          items:
            $ref: '#/components/schemas/BrandedFoodObject_items_inner'
          title: items
          type: array
      title: BrandedFoodObject
      type: object
    IngredientObject:
      description: "Please read the description of each field in this API response\
        \ object example. By default, the value of each field is **null**. This indicates\
        \ an unknown state or that no data exists."
      example:
        items:
        - protein_conversion_factor: 1.4894159098541704
          score: score
          calorie_conversion_factor:
            carbohydrate_value: 0.8008281904610115
            protein_value: 1.4658129805029452
            fat_value: 6.027456183070403
          components:
          - data_points: 5
            gram_weight: 5.637376656633329
            pct_weight: 2.3021358869347655
            name: name
            is_refuse: true
          - data_points: 5
            gram_weight: 5.637376656633329
            pct_weight: 2.3021358869347655
            name: name
            is_refuse: true
          name: name
          search_term: search_term
          categories:
          - categories
          - categories
          footnote: footnote
          common_name: common_name
          nutrients:
          - data_points: 7
            min: 2.027123023002322
            median: 3.616076749251911
            max: 9.301444243932576
            name: name
            description: description
            measurement_unit: measurement_unit
            rank: 7
            footnote: footnote
            per_100g: 4.145608029883936
          - data_points: 7
            min: 2.027123023002322
            median: 3.616076749251911
            max: 9.301444243932576
            name: name
            description: description
            measurement_unit: measurement_unit
            rank: 7
            footnote: footnote
            per_100g: 4.145608029883936
          portions:
          - data_points: 1
            gram_weight: 1.0246457001441578
            modifier: modifier
            description: description
            measurement_unit: measurement_unit
            footnote: footnote
          - data_points: 1
            gram_weight: 1.0246457001441578
            modifier: modifier
            description: description
            measurement_unit: measurement_unit
            footnote: footnote
        - protein_conversion_factor: 1.4894159098541704
          score: score
          calorie_conversion_factor:
            carbohydrate_value: 0.8008281904610115
            protein_value: 1.4658129805029452
            fat_value: 6.027456183070403
          components:
          - data_points: 5
            gram_weight: 5.637376656633329
            pct_weight: 2.3021358869347655
            name: name
            is_refuse: true
          - data_points: 5
            gram_weight: 5.637376656633329
            pct_weight: 2.3021358869347655
            name: name
            is_refuse: true
          name: name
          search_term: search_term
          categories:
          - categories
          - categories
          footnote: footnote
          common_name: common_name
          nutrients:
          - data_points: 7
            min: 2.027123023002322
            median: 3.616076749251911
            max: 9.301444243932576
            name: name
            description: description
            measurement_unit: measurement_unit
            rank: 7
            footnote: footnote
            per_100g: 4.145608029883936
          - data_points: 7
            min: 2.027123023002322
            median: 3.616076749251911
            max: 9.301444243932576
            name: name
            description: description
            measurement_unit: measurement_unit
            rank: 7
            footnote: footnote
            per_100g: 4.145608029883936
          portions:
          - data_points: 1
            gram_weight: 1.0246457001441578
            modifier: modifier
            description: description
            measurement_unit: measurement_unit
            footnote: footnote
          - data_points: 1
            gram_weight: 1.0246457001441578
            modifier: modifier
            description: description
            measurement_unit: measurement_unit
            footnote: footnote
      properties:
        items:
          description: An array containing an object for each individual item returned
            by your API call.
          items:
            $ref: '#/components/schemas/IngredientObject_items_inner'
          title: items
          type: array
      title: IngredientObject
      type: object
    BrandedFoodObject_items_inner_country_details:
      description: An object containing additional information on the countries where
        this item is found
      example:
        english_speaking: 0
        non_english_speaking: 6
      properties:
        english_speaking:
          description: The number of countries where English is the country's primary
            language
          title: english_speaking
          type: integer
        non_english_speaking:
          description: The number of countries where English is not the country's
            primary language
          title: non_english_speaking
          type: integer
      title: BrandedFoodObject_items_inner_country_details
      type: object
    BrandedFoodObject_items_inner_diet_flags_inner:
      description: An object containing information on an individual ingredient that
        was flagged as potentially not being compatible with a certain diet
      example:
        ingredient: ingredient
        is_allergen: true
        ingredient_description: ingredient_description
        compatibility_level: 1
        is_compatible: is_compatible
        diet_label: diet_label
        compatibility_description: compatibility_description
      properties:
        compatibility_description:
          description: A description of how we graded this ingredient for compatibility
            with the diet
          title: compatibility_description
          type: string
        compatibility_level:
          description: A numeric representation of if we believe this ingredient is
            compatible with the diet. Higher values indicate more compatibility
          title: compatibility_level
          type: integer
        diet_label:
          description: Name of the diet with which this ingredient may not be compatible
          title: diet_label
          type: string
        ingredient:
          description: Ingredient name
          title: ingredient
          type: string
        ingredient_description:
          description: Description of the ingredient
          title: ingredient_description
          type: string
        is_allergen:
          description: Boolean representing if the ingredient is a known allergen
          title: is_allergen
          type: boolean
        is_compatible:
          description: A description of if we believe this ingredient is compatible
            with the diet
          title: is_compatible
          type: string
      title: BrandedFoodObject_items_inner_diet_flags_inner
      type: object
    BrandedFoodObject_items_inner_diet_labels_gluten_free:
      description: An object containing information on this item's compatibility with
        Gluten Free diets
      example:
        confidence_description: confidence_description
        confidence: 5
        compatibility_level: 5
        name: name
        is_compatible: true
      properties:
        compatibility_level:
          description: Numeric representation of how compatible this item is with
            this diet. Higher values indicate more compatibility
          title: compatibility_level
          type: integer
        confidence:
          description: Boolean that indicates if we are confident in how this item
            is graded for this diet
          title: confidence
          type: integer
        confidence_description:
          description: Description of our confidence that this item was graded correctly
          title: confidence_description
          type: string
        is_compatible:
          description: Boolean describing if this item is compatible with this diet
          title: is_compatible
          type: boolean
        name:
          description: Diet name
          title: name
          type: string
      title: BrandedFoodObject_items_inner_diet_labels_gluten_free
      type: object
    BrandedFoodObject_items_inner_diet_labels_vegan:
      description: An object containing information on this item's compatibility with
        the Vegan diets
      example:
        confidence_description: confidence_description
        confidence: 7
        compatibility_level: 2
        name: name
        is_compatible: true
      properties:
        compatibility_level:
          description: Numeric representation of how compatible this item is with
            this diet. Higher values indicate more compatibility
          title: compatibility_level
          type: integer
        confidence:
          description: Boolean that indicates if we are confident in how this item
            is graded for this diet
          title: confidence
          type: integer
        confidence_description:
          description: Description of our confidence that this item was graded correctly
          title: confidence_description
          type: string
        is_compatible:
          description: Boolean describing if this item is compatible with this diet
          title: is_compatible
          type: boolean
        name:
          description: Diet name
          title: name
          type: string
      title: BrandedFoodObject_items_inner_diet_labels_vegan
      type: object
    BrandedFoodObject_items_inner_diet_labels_vegetarian:
      description: An object containing information on this item's compatibility with
        Vegetarian diets
      example:
        confidence_description: confidence_description
        confidence: 3
        compatibility_level: 9
        name: name
        is_compatible: true
      properties:
        compatibility_level:
          description: Numeric representation of how compatible this item is with
            this diet. Higher values indicate more compatibility
          title: compatibility_level
          type: integer
        confidence:
          description: Boolean that indicates if we are confident in how this item
            is graded for this diet
          title: confidence
          type: integer
        confidence_description:
          description: Description of our confidence that this item was graded correctly
          title: confidence_description
          type: string
        is_compatible:
          description: Boolean describing if this item is compatible with this diet
          title: is_compatible
          type: boolean
        name:
          description: Diet name
          title: name
          type: string
      title: BrandedFoodObject_items_inner_diet_labels_vegetarian
      type: object
    BrandedFoodObject_items_inner_diet_labels:
      description: An object containing this item's compatibility grades for each
        supported diet
      example:
        vegetarian:
          confidence_description: confidence_description
          confidence: 3
          compatibility_level: 9
          name: name
          is_compatible: true
        vegan:
          confidence_description: confidence_description
          confidence: 7
          compatibility_level: 2
          name: name
          is_compatible: true
        gluten_free:
          confidence_description: confidence_description
          confidence: 5
          compatibility_level: 5
          name: name
          is_compatible: true
      properties:
        gluten_free:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_diet_labels_gluten_free'
        vegan:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_diet_labels_vegan'
        vegetarian:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_diet_labels_vegetarian'
      title: BrandedFoodObject_items_inner_diet_labels
      type: object
    BrandedFoodObject_items_inner_nutrients_inner:
      description: An object containing information for a specific nutrient found
        in this food item
      example:
        data_points: 2
        name: name
        description: description
        measurement_unit: measurement_unit
        rank: 7
        per_100g: 4.145608029883936
      properties:
        data_points:
          description: Number of observations on which the value is based
          title: data_points
          type: integer
        description:
          description: Description of the nutrient source
          title: description
          type: string
        measurement_unit:
          description: The unit used for the measure of this nutrient
          title: measurement_unit
          type: string
        name:
          description: Nutrient name
          title: name
          type: string
        per_100g:
          description: Amount of the nutrient per 100g of food
          title: per_100g
          type: number
        rank:
          description: Nutrient rank
          title: rank
          type: integer
      title: BrandedFoodObject_items_inner_nutrients_inner
      type: object
    BrandedFoodObject_items_inner_package:
      description: An object containing basic packaging information about this item
      example:
        quantity: 1
        size: size
      properties:
        quantity:
          description: Package quantity
          title: quantity
          type: integer
        size:
          description: Package size
          title: size
          type: string
      title: BrandedFoodObject_items_inner_package
      type: object
    BrandedFoodObject_items_inner_packaging_photos_front:
      description: An object containing photos of the front of this item's packaging
      example:
        small: small
        thumb: thumb
        display: display
      properties:
        display:
          description: Full-sized photo of the front of this item's packaging
          title: display
          type: string
        small:
          description: Small photo of the front of this item's packaging
          title: small
          type: string
        thumb:
          description: Thumbnail photo of the front of this item's packaging
          title: thumb
          type: string
      title: BrandedFoodObject_items_inner_packaging_photos_front
      type: object
    BrandedFoodObject_items_inner_packaging_photos_ingredients:
      description: An object containing photos of the ingredients on this item's packaging
      example:
        small: small
        thumb: thumb
        display: display
      properties:
        display:
          description: Full-sized photo of the ingredients on this item's packaging
          title: display
          type: string
        small:
          description: Small photo of the ingredients on this item's packaging
          title: small
          type: string
        thumb:
          description: Thumbnail photo of the ingredients on this item's packaging
          title: thumb
          type: string
      title: BrandedFoodObject_items_inner_packaging_photos_ingredients
      type: object
    BrandedFoodObject_items_inner_packaging_photos_nutrition:
      description: An object containing photos of this item's nutrition label
      example:
        small: small
        thumb: thumb
        display: display
      properties:
        display:
          description: Full-sized photo of this item's nutrition label
          title: display
          type: string
        small:
          description: Small photo of this item's nutrition label
          title: small
          type: string
        thumb:
          description: Thumbnail photo of this item's nutrition label
          title: thumb
          type: string
      title: BrandedFoodObject_items_inner_packaging_photos_nutrition
      type: object
    BrandedFoodObject_items_inner_packaging_photos:
      description: A object containing a collection of photos of this item's packaging
      example:
        nutrition:
          small: small
          thumb: thumb
          display: display
        ingredients:
          small: small
          thumb: thumb
          display: display
        front:
          small: small
          thumb: thumb
          display: display
      properties:
        front:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_packaging_photos_front'
        ingredients:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_packaging_photos_ingredients'
        nutrition:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_packaging_photos_nutrition'
      title: BrandedFoodObject_items_inner_packaging_photos
      type: object
    BrandedFoodObject_items_inner_serving:
      description: An object containing serving information for this item
      example:
        size_fulltext: size_fulltext
        size: size
        measurement_unit: measurement_unit
      properties:
        measurement_unit:
          description: "Measurement unit for each serving (e.g. if measure is 3 tsp,\
            \ the unit is tsp)"
          title: measurement_unit
          type: string
        size:
          description: Serving size
          title: size
          type: string
        size_fulltext:
          description: Serving size description
          title: size_fulltext
          type: string
      title: BrandedFoodObject_items_inner_serving
      type: object
    BrandedFoodObject_items_inner:
      description: An object containing information for this specific item.
      example:
        minerals:
        - minerals
        - minerals
        package:
          quantity: 1
          size: size
        keywords:
        - keywords
        - keywords
        country_details:
          english_speaking: 0
          non_english_speaking: 6
        traces:
        - traces
        - traces
        description: description
        countries:
        - countries
        - countries
        diet_flags:
        - ingredient: ingredient
          is_allergen: true
          ingredient_description: ingredient_description
          compatibility_level: 1
          is_compatible: is_compatible
          diet_label: diet_label
          compatibility_description: compatibility_description
        - ingredient: ingredient
          is_allergen: true
          ingredient_description: ingredient_description
          compatibility_level: 1
          is_compatible: is_compatible
          diet_label: diet_label
          compatibility_description: compatibility_description
        has_english_ingredients: true
        palm_oil_ingredients:
        - palm_oil_ingredients
        - palm_oil_ingredients
        allergens:
        - allergens
        - allergens
        nutrients:
        - data_points: 2
          name: name
          description: description
          measurement_unit: measurement_unit
          rank: 7
          per_100g: 4.145608029883936
        - data_points: 2
          name: name
          description: description
          measurement_unit: measurement_unit
          rank: 7
          per_100g: 4.145608029883936
        serving:
          size_fulltext: size_fulltext
          size: size
          measurement_unit: measurement_unit
        packaging_photos:
          nutrition:
            small: small
            thumb: thumb
            display: display
          ingredients:
            small: small
            thumb: thumb
            display: display
          front:
            small: small
            thumb: thumb
            display: display
        ingredient_list:
        - ingredient_list
        - ingredient_list
        vitamins:
        - vitamins
        - vitamins
        diet_labels:
          vegetarian:
            confidence_description: confidence_description
            confidence: 3
            compatibility_level: 9
            name: name
            is_compatible: true
          vegan:
            confidence_description: confidence_description
            confidence: 7
            compatibility_level: 2
            name: name
            is_compatible: true
          gluten_free:
            confidence_description: confidence_description
            confidence: 5
            compatibility_level: 5
            name: name
            is_compatible: true
        name: name
        ingredients: ingredients
        categories:
        - categories
        - categories
        barcode: barcode
        brand: brand
        brand_list:
        - brand_list
        - brand_list
      properties:
        allergens:
          description: An array of ingredients in this item that may cause allergic
            reactions in people
          items:
            type: string
          title: allergens
          type: array
        barcode:
          description: EAN/UPC barcode
          title: barcode
          type: string
        brand:
          description: The brand name that owns this item
          title: brand
          type: string
        brand_list:
          description: An array of brands we have associated with this item. Some
            items are sold by more than 1 brand.
          items:
            type: string
          title: brand_list
          type: array
        categories:
          items:
            description: An array of categories for this item
            type: string
          title: categories
          type: array
        countries:
          description: An array of countries where this item is sold
          items:
            type: string
          title: countries
          type: array
        country_details:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_country_details'
        description:
          description: A description of this item
          title: description
          type: string
        diet_flags:
          description: An array of ingredient objects that were flagged while grading
            this item for compatibility with each diet
          items:
            $ref: '#/components/schemas/BrandedFoodObject_items_inner_diet_flags_inner'
          title: diet_flags
          type: array
        diet_labels:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_diet_labels'
        has_english_ingredients:
          description: A boolean indicating if we have English ingredients for this
            item
          title: has_english_ingredients
          type: boolean
        ingredient_list:
          description: An array of this item's ingredients
          items:
            type: string
          title: ingredient_list
          type: array
        ingredients:
          description: This food item's ingredients from greatest quantity to least
          title: ingredients
          type: string
        keywords:
          description: An array of keywords that can be used to describe this item
          items:
            type: string
          title: keywords
          type: array
        minerals:
          description: An array of minerals that this item contains
          items:
            type: string
          title: minerals
          type: array
        name:
          description: Item name as provided by brand owner or as shown on packaging
          title: name
          type: string
        nutrients:
          description: An array containing nutrient informatio objects for this food
            item
          items:
            $ref: '#/components/schemas/BrandedFoodObject_items_inner_nutrients_inner'
          title: nutrients
          type: array
        package:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_package'
        packaging_photos:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_packaging_photos'
        palm_oil_ingredients:
          description: An array of ingredients made from palm oil
          items:
            type: string
          title: palm_oil_ingredients
          type: array
        serving:
          $ref: '#/components/schemas/BrandedFoodObject_items_inner_serving'
        traces:
          description: An array of trace ingredients that may be found in this item
          items:
            type: string
          title: traces
          type: array
        vitamins:
          description: An array of vitamins that are found in this item
          items:
            type: string
          title: vitamins
          type: array
      title: BrandedFoodObject_items_inner
      type: object
    IngredientObject_items_inner_calorie_conversion_factor:
      description: An object containing the multiplication factors to be used when
        calculating energy from macronutrients for a specific food.
      example:
        carbohydrate_value: 0.8008281904610115
        protein_value: 1.4658129805029452
        fat_value: 6.027456183070403
      properties:
        carbohydrate_value:
          description: The multiplication factor for carbohydrates
          title: carbohydrate_value
          type: number
        fat_value:
          description: The multiplication factor for fat
          title: fat_value
          type: number
        protein_value:
          description: The multiplication factor for protein
          title: protein_value
          type: number
      title: IngredientObject_items_inner_calorie_conversion_factor
      type: object
    IngredientObject_items_inner_components_inner:
      description: An object containing information on a specific component of this
        food item
      example:
        data_points: 5
        gram_weight: 5.637376656633329
        pct_weight: 2.3021358869347655
        name: name
        is_refuse: true
      properties:
        data_points:
          description: The number of obersvations on which the measure is based
          title: data_points
          type: integer
        gram_weight:
          description: The weight of the component in grams
          title: gram_weight
          type: number
        is_refuse:
          description: "Whether the component is refuse, i.e. not edible"
          title: is_refuse
          type: boolean
        name:
          description: "The kind of component, e.g. bone"
          title: name
          type: string
        pct_weight:
          description: The weight of the component as a percentage of the total weight
            of the food
          title: pct_weight
          type: number
      title: IngredientObject_items_inner_components_inner
      type: object
    IngredientObject_items_inner_nutrients_inner:
      description: An object containing information for a specific nutrient found
        in this food item
      example:
        data_points: 7
        min: 2.027123023002322
        median: 3.616076749251911
        max: 9.301444243932576
        name: name
        description: description
        measurement_unit: measurement_unit
        rank: 7
        footnote: footnote
        per_100g: 4.145608029883936
      properties:
        data_points:
          description: Number of observations on which the value is based
          title: data_points
          type: integer
        description:
          description: Description of the nutrient source
          title: description
          type: string
        footnote:
          description: Comments on any unusual aspect of the food nutrient. Examples
            might include why a nutrient value is different than typically expected.
          title: footnote
          type: string
        max:
          description: Maximum nutrient value
          title: max
          type: number
        measurement_unit:
          description: The unit used for the measure of this nutrient
          title: measurement_unit
          type: string
        median:
          description: Median nutrient value
          title: median
          type: number
        min:
          description: Minimum nutrient value
          title: min
          type: number
        name:
          description: Nutrient name
          title: name
          type: string
        per_100g:
          description: Amount of the nutrient per 100g of food
          title: per_100g
          type: number
        rank:
          description: Nutrient rank
          title: rank
          type: integer
      title: IngredientObject_items_inner_nutrients_inner
      type: object
    IngredientObject_items_inner_portions_inner:
      description: An object containing information on a specific food portion found
        in this item
      example:
        data_points: 1
        gram_weight: 1.0246457001441578
        modifier: modifier
        description: description
        measurement_unit: measurement_unit
        footnote: footnote
      properties:
        data_points:
          description: The number of observations on which the measure is based
          title: data_points
          type: integer
        description:
          description: "Comments that provide more specificity on the measure. For\
            \ example, for a pizza measure the dissemination text might be 1 slice\
            \ is 1/8th of a 14 inch pizza."
          title: description
          type: string
        footnote:
          description: "Comments on any unusual aspects of the measure. Examples might\
            \ includes caveats on the usage of a measure, or reasons why a measure\
            \ gram weight is an unexpected value."
          title: footnote
          type: string
        gram_weight:
          description: The weight of the measure in grams
          title: gram_weight
          type: number
        measurement_unit:
          description: "The unit used for measure (e.g. if mesure is 3 tsp, the unit\
            \ is tsp)"
          title: measurement_unit
          type: string
        modifier:
          description: "Qualifier of the measure (e.g. related to food shape or form)\
            \ (e.g. melted, crushed, diced)"
          title: modifier
          type: string
      title: IngredientObject_items_inner_portions_inner
      type: object
    IngredientObject_items_inner:
      description: An object containing information for this specific item.
      example:
        protein_conversion_factor: 1.4894159098541704
        score: score
        calorie_conversion_factor:
          carbohydrate_value: 0.8008281904610115
          protein_value: 1.4658129805029452
          fat_value: 6.027456183070403
        components:
        - data_points: 5
          gram_weight: 5.637376656633329
          pct_weight: 2.3021358869347655
          name: name
          is_refuse: true
        - data_points: 5
          gram_weight: 5.637376656633329
          pct_weight: 2.3021358869347655
          name: name
          is_refuse: true
        name: name
        search_term: search_term
        categories:
        - categories
        - categories
        footnote: footnote
        common_name: common_name
        nutrients:
        - data_points: 7
          min: 2.027123023002322
          median: 3.616076749251911
          max: 9.301444243932576
          name: name
          description: description
          measurement_unit: measurement_unit
          rank: 7
          footnote: footnote
          per_100g: 4.145608029883936
        - data_points: 7
          min: 2.027123023002322
          median: 3.616076749251911
          max: 9.301444243932576
          name: name
          description: description
          measurement_unit: measurement_unit
          rank: 7
          footnote: footnote
          per_100g: 4.145608029883936
        portions:
        - data_points: 1
          gram_weight: 1.0246457001441578
          modifier: modifier
          description: description
          measurement_unit: measurement_unit
          footnote: footnote
        - data_points: 1
          gram_weight: 1.0246457001441578
          modifier: modifier
          description: description
          measurement_unit: measurement_unit
          footnote: footnote
      properties:
        calorie_conversion_factor:
          $ref: '#/components/schemas/IngredientObject_items_inner_calorie_conversion_factor'
        categories:
          items:
            description: An array of categories for this item
            type: string
          title: categories
          type: array
        common_name:
          description: Common name associated with this item. These generally clarify
            what the item is (e.g. when the brand name is "BRAND's Spicy Enchilada"
            the common name may be "Chicken enchilada")
          title: common_name
          type: string
        components:
          description: An array of objects containing the constituent parts of a food
            (e.g. bone is a component of meat)
          items:
            $ref: '#/components/schemas/IngredientObject_items_inner_components_inner'
          title: components
          type: array
        footnote:
          description: Comments on any unusual aspects of this item. Examples might
            include unusual aspects of the food overall
          title: footnote
          type: string
        name:
          description: Item name as provided by brand owner or as shown on packaging
          title: name
          type: string
        nutrients:
          description: An array containing nutrient informatio objects for this food
            item
          items:
            $ref: '#/components/schemas/IngredientObject_items_inner_nutrients_inner'
          title: nutrients
          type: array
        portions:
          description: An array of objects containing information on discrete amounts
            of a food found in this item
          items:
            $ref: '#/components/schemas/IngredientObject_items_inner_portions_inner'
          title: portions
          type: array
        protein_conversion_factor:
          description: The multiplication factor used to calculate protein from nitrogen
          title: protein_conversion_factor
          type: number
        score:
          description: A value that represents how similar the name of this food item
            is to the original search term. The lower the value the closer this item's
            name is to the original search term.
          title: score
          type: string
        search_term:
          description: The original search term that found this food item
          title: search_term
          type: string
      title: IngredientObject_items_inner
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: query
      name: api_key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_ApiKeyAuth
