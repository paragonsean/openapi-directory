# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BrandedFoodObjectItemsInnerDietFlagsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, compatibility_description: str=None, compatibility_level: int=None, diet_label: str=None, ingredient: str=None, ingredient_description: str=None, is_allergen: bool=None, is_compatible: str=None):
        """BrandedFoodObjectItemsInnerDietFlagsInner - a model defined in OpenAPI

        :param compatibility_description: The compatibility_description of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :param compatibility_level: The compatibility_level of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :param diet_label: The diet_label of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :param ingredient: The ingredient of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :param ingredient_description: The ingredient_description of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :param is_allergen: The is_allergen of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :param is_compatible: The is_compatible of this BrandedFoodObjectItemsInnerDietFlagsInner.
        """
        self.openapi_types = {
            'compatibility_description': str,
            'compatibility_level': int,
            'diet_label': str,
            'ingredient': str,
            'ingredient_description': str,
            'is_allergen': bool,
            'is_compatible': str
        }

        self.attribute_map = {
            'compatibility_description': 'compatibility_description',
            'compatibility_level': 'compatibility_level',
            'diet_label': 'diet_label',
            'ingredient': 'ingredient',
            'ingredient_description': 'ingredient_description',
            'is_allergen': 'is_allergen',
            'is_compatible': 'is_compatible'
        }

        self._compatibility_description = compatibility_description
        self._compatibility_level = compatibility_level
        self._diet_label = diet_label
        self._ingredient = ingredient
        self._ingredient_description = ingredient_description
        self._is_allergen = is_allergen
        self._is_compatible = is_compatible

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BrandedFoodObjectItemsInnerDietFlagsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BrandedFoodObject_items_inner_diet_flags_inner of this BrandedFoodObjectItemsInnerDietFlagsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compatibility_description(self):
        """Gets the compatibility_description of this BrandedFoodObjectItemsInnerDietFlagsInner.

        A description of how we graded this ingredient for compatibility with the diet

        :return: The compatibility_description of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :rtype: str
        """
        return self._compatibility_description

    @compatibility_description.setter
    def compatibility_description(self, compatibility_description):
        """Sets the compatibility_description of this BrandedFoodObjectItemsInnerDietFlagsInner.

        A description of how we graded this ingredient for compatibility with the diet

        :param compatibility_description: The compatibility_description of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :type compatibility_description: str
        """

        self._compatibility_description = compatibility_description

    @property
    def compatibility_level(self):
        """Gets the compatibility_level of this BrandedFoodObjectItemsInnerDietFlagsInner.

        A numeric representation of if we believe this ingredient is compatible with the diet. Higher values indicate more compatibility

        :return: The compatibility_level of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :rtype: int
        """
        return self._compatibility_level

    @compatibility_level.setter
    def compatibility_level(self, compatibility_level):
        """Sets the compatibility_level of this BrandedFoodObjectItemsInnerDietFlagsInner.

        A numeric representation of if we believe this ingredient is compatible with the diet. Higher values indicate more compatibility

        :param compatibility_level: The compatibility_level of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :type compatibility_level: int
        """

        self._compatibility_level = compatibility_level

    @property
    def diet_label(self):
        """Gets the diet_label of this BrandedFoodObjectItemsInnerDietFlagsInner.

        Name of the diet with which this ingredient may not be compatible

        :return: The diet_label of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :rtype: str
        """
        return self._diet_label

    @diet_label.setter
    def diet_label(self, diet_label):
        """Sets the diet_label of this BrandedFoodObjectItemsInnerDietFlagsInner.

        Name of the diet with which this ingredient may not be compatible

        :param diet_label: The diet_label of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :type diet_label: str
        """

        self._diet_label = diet_label

    @property
    def ingredient(self):
        """Gets the ingredient of this BrandedFoodObjectItemsInnerDietFlagsInner.

        Ingredient name

        :return: The ingredient of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :rtype: str
        """
        return self._ingredient

    @ingredient.setter
    def ingredient(self, ingredient):
        """Sets the ingredient of this BrandedFoodObjectItemsInnerDietFlagsInner.

        Ingredient name

        :param ingredient: The ingredient of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :type ingredient: str
        """

        self._ingredient = ingredient

    @property
    def ingredient_description(self):
        """Gets the ingredient_description of this BrandedFoodObjectItemsInnerDietFlagsInner.

        Description of the ingredient

        :return: The ingredient_description of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :rtype: str
        """
        return self._ingredient_description

    @ingredient_description.setter
    def ingredient_description(self, ingredient_description):
        """Sets the ingredient_description of this BrandedFoodObjectItemsInnerDietFlagsInner.

        Description of the ingredient

        :param ingredient_description: The ingredient_description of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :type ingredient_description: str
        """

        self._ingredient_description = ingredient_description

    @property
    def is_allergen(self):
        """Gets the is_allergen of this BrandedFoodObjectItemsInnerDietFlagsInner.

        Boolean representing if the ingredient is a known allergen

        :return: The is_allergen of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :rtype: bool
        """
        return self._is_allergen

    @is_allergen.setter
    def is_allergen(self, is_allergen):
        """Sets the is_allergen of this BrandedFoodObjectItemsInnerDietFlagsInner.

        Boolean representing if the ingredient is a known allergen

        :param is_allergen: The is_allergen of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :type is_allergen: bool
        """

        self._is_allergen = is_allergen

    @property
    def is_compatible(self):
        """Gets the is_compatible of this BrandedFoodObjectItemsInnerDietFlagsInner.

        A description of if we believe this ingredient is compatible with the diet

        :return: The is_compatible of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :rtype: str
        """
        return self._is_compatible

    @is_compatible.setter
    def is_compatible(self, is_compatible):
        """Sets the is_compatible of this BrandedFoodObjectItemsInnerDietFlagsInner.

        A description of if we believe this ingredient is compatible with the diet

        :param is_compatible: The is_compatible of this BrandedFoodObjectItemsInnerDietFlagsInner.
        :type is_compatible: str
        """

        self._is_compatible = is_compatible
