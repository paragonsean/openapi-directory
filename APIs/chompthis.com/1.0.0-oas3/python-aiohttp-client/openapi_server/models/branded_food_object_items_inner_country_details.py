# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BrandedFoodObjectItemsInnerCountryDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, english_speaking: int=None, non_english_speaking: int=None):
        """BrandedFoodObjectItemsInnerCountryDetails - a model defined in OpenAPI

        :param english_speaking: The english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.
        :param non_english_speaking: The non_english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.
        """
        self.openapi_types = {
            'english_speaking': int,
            'non_english_speaking': int
        }

        self.attribute_map = {
            'english_speaking': 'english_speaking',
            'non_english_speaking': 'non_english_speaking'
        }

        self._english_speaking = english_speaking
        self._non_english_speaking = non_english_speaking

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BrandedFoodObjectItemsInnerCountryDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BrandedFoodObject_items_inner_country_details of this BrandedFoodObjectItemsInnerCountryDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def english_speaking(self):
        """Gets the english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.

        The number of countries where English is the country's primary language

        :return: The english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.
        :rtype: int
        """
        return self._english_speaking

    @english_speaking.setter
    def english_speaking(self, english_speaking):
        """Sets the english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.

        The number of countries where English is the country's primary language

        :param english_speaking: The english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.
        :type english_speaking: int
        """

        self._english_speaking = english_speaking

    @property
    def non_english_speaking(self):
        """Gets the non_english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.

        The number of countries where English is not the country's primary language

        :return: The non_english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.
        :rtype: int
        """
        return self._non_english_speaking

    @non_english_speaking.setter
    def non_english_speaking(self, non_english_speaking):
        """Sets the non_english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.

        The number of countries where English is not the country's primary language

        :param non_english_speaking: The non_english_speaking of this BrandedFoodObjectItemsInnerCountryDetails.
        :type non_english_speaking: int
        """

        self._non_english_speaking = non_english_speaking
