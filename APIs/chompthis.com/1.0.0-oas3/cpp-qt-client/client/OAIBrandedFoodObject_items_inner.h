/**
 * Chomp Food Database API Documentation
 * ## Important An **[API key](https://chompthis.com/api/)** is required for access to this API. Get yours at **[https://chompthis.com/api](https://chompthis.com/api/)**.  ### Getting Started   * **[Subscribe](https://chompthis.com/api/#pricing)** to the API.   * Scroll down and click the \"**Authorize**\" button.   * Enter your API key into the \"**value**\" input, click the \"**Authorize**\" button, then click the \"**Close**\" button.   * Scroll down to the section titled \"**default**\" and click on the API endpoint you wish to use.   * Click the \"**Try it out**\" button.   * Enter the information the endpoint requires.   * Click the \"**Execute**\" button.  ### Example    * Branded food response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/branded-food-response-object.json)**   * Ingredient response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/ingredient-response-object.json)**   * Error response object: **[View example &raquo;](https://raw.githubusercontent.com/chompfoods/examples/master/error-response-object.json)**  ### How Do I Find My API Key?   * Your API key was sent to the email address you used to create your subscription.   * You will also find your API key in the **[Client Center](https://chompthis.com/api/manage.php)**.   * Read **[this article](https://desk.zoho.com/portal/chompthis/kb/articles/how-do-i-find-my-api-key)** for more information.  ### Helpful Links   * **Help & Support**     * [Knowledge Base &raquo;](https://desk.zoho.com/portal/chompthis/kb/chomp)     * [Support &raquo;](https://chompthis.com/api/ticket-new.php)     * [Client Center &raquo;](https://chompthis.com/api/manage.php)   * **Pricing**     * [Subscription Options &raquo;](https://chompthis.com/api/)     * [Cost Calculator &raquo;](https://chompthis.com/api/cost-calculator.php)   * **Guidelines**     * [Terms & License &raquo;](https://chompthis.com/api/terms.php)     * [Attribution &raquo;](https://chompthis.com/api/docs/attribution.php) 
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBrandedFoodObject_items_inner.h
 *
 * An object containing information for this specific item.
 */

#ifndef OAIBrandedFoodObject_items_inner_H
#define OAIBrandedFoodObject_items_inner_H

#include <QJsonObject>

#include "OAIBrandedFoodObject_items_inner_country_details.h"
#include "OAIBrandedFoodObject_items_inner_diet_flags_inner.h"
#include "OAIBrandedFoodObject_items_inner_diet_labels.h"
#include "OAIBrandedFoodObject_items_inner_nutrients_inner.h"
#include "OAIBrandedFoodObject_items_inner_package.h"
#include "OAIBrandedFoodObject_items_inner_packaging_photos.h"
#include "OAIBrandedFoodObject_items_inner_serving.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBrandedFoodObject_items_inner_country_details;
class OAIBrandedFoodObject_items_inner_diet_flags_inner;
class OAIBrandedFoodObject_items_inner_diet_labels;
class OAIBrandedFoodObject_items_inner_nutrients_inner;
class OAIBrandedFoodObject_items_inner_package;
class OAIBrandedFoodObject_items_inner_packaging_photos;
class OAIBrandedFoodObject_items_inner_serving;

class OAIBrandedFoodObject_items_inner : public OAIObject {
public:
    OAIBrandedFoodObject_items_inner();
    OAIBrandedFoodObject_items_inner(QString json);
    ~OAIBrandedFoodObject_items_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllergens() const;
    void setAllergens(const QList<QString> &allergens);
    bool is_allergens_Set() const;
    bool is_allergens_Valid() const;

    QString getBarcode() const;
    void setBarcode(const QString &barcode);
    bool is_barcode_Set() const;
    bool is_barcode_Valid() const;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    QList<QString> getBrandList() const;
    void setBrandList(const QList<QString> &brand_list);
    bool is_brand_list_Set() const;
    bool is_brand_list_Valid() const;

    QList<QString> getCategories() const;
    void setCategories(const QList<QString> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QList<QString> getCountries() const;
    void setCountries(const QList<QString> &countries);
    bool is_countries_Set() const;
    bool is_countries_Valid() const;

    OAIBrandedFoodObject_items_inner_country_details getCountryDetails() const;
    void setCountryDetails(const OAIBrandedFoodObject_items_inner_country_details &country_details);
    bool is_country_details_Set() const;
    bool is_country_details_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIBrandedFoodObject_items_inner_diet_flags_inner> getDietFlags() const;
    void setDietFlags(const QList<OAIBrandedFoodObject_items_inner_diet_flags_inner> &diet_flags);
    bool is_diet_flags_Set() const;
    bool is_diet_flags_Valid() const;

    OAIBrandedFoodObject_items_inner_diet_labels getDietLabels() const;
    void setDietLabels(const OAIBrandedFoodObject_items_inner_diet_labels &diet_labels);
    bool is_diet_labels_Set() const;
    bool is_diet_labels_Valid() const;

    bool isHasEnglishIngredients() const;
    void setHasEnglishIngredients(const bool &has_english_ingredients);
    bool is_has_english_ingredients_Set() const;
    bool is_has_english_ingredients_Valid() const;

    QList<QString> getIngredientList() const;
    void setIngredientList(const QList<QString> &ingredient_list);
    bool is_ingredient_list_Set() const;
    bool is_ingredient_list_Valid() const;

    QString getIngredients() const;
    void setIngredients(const QString &ingredients);
    bool is_ingredients_Set() const;
    bool is_ingredients_Valid() const;

    QList<QString> getKeywords() const;
    void setKeywords(const QList<QString> &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    QList<QString> getMinerals() const;
    void setMinerals(const QList<QString> &minerals);
    bool is_minerals_Set() const;
    bool is_minerals_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIBrandedFoodObject_items_inner_nutrients_inner> getNutrients() const;
    void setNutrients(const QList<OAIBrandedFoodObject_items_inner_nutrients_inner> &nutrients);
    bool is_nutrients_Set() const;
    bool is_nutrients_Valid() const;

    OAIBrandedFoodObject_items_inner_package getPackage() const;
    void setPackage(const OAIBrandedFoodObject_items_inner_package &package);
    bool is_package_Set() const;
    bool is_package_Valid() const;

    OAIBrandedFoodObject_items_inner_packaging_photos getPackagingPhotos() const;
    void setPackagingPhotos(const OAIBrandedFoodObject_items_inner_packaging_photos &packaging_photos);
    bool is_packaging_photos_Set() const;
    bool is_packaging_photos_Valid() const;

    QList<QString> getPalmOilIngredients() const;
    void setPalmOilIngredients(const QList<QString> &palm_oil_ingredients);
    bool is_palm_oil_ingredients_Set() const;
    bool is_palm_oil_ingredients_Valid() const;

    OAIBrandedFoodObject_items_inner_serving getServing() const;
    void setServing(const OAIBrandedFoodObject_items_inner_serving &serving);
    bool is_serving_Set() const;
    bool is_serving_Valid() const;

    QList<QString> getTraces() const;
    void setTraces(const QList<QString> &traces);
    bool is_traces_Set() const;
    bool is_traces_Valid() const;

    QList<QString> getVitamins() const;
    void setVitamins(const QList<QString> &vitamins);
    bool is_vitamins_Set() const;
    bool is_vitamins_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allergens;
    bool m_allergens_isSet;
    bool m_allergens_isValid;

    QString m_barcode;
    bool m_barcode_isSet;
    bool m_barcode_isValid;

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    QList<QString> m_brand_list;
    bool m_brand_list_isSet;
    bool m_brand_list_isValid;

    QList<QString> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QList<QString> m_countries;
    bool m_countries_isSet;
    bool m_countries_isValid;

    OAIBrandedFoodObject_items_inner_country_details m_country_details;
    bool m_country_details_isSet;
    bool m_country_details_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIBrandedFoodObject_items_inner_diet_flags_inner> m_diet_flags;
    bool m_diet_flags_isSet;
    bool m_diet_flags_isValid;

    OAIBrandedFoodObject_items_inner_diet_labels m_diet_labels;
    bool m_diet_labels_isSet;
    bool m_diet_labels_isValid;

    bool m_has_english_ingredients;
    bool m_has_english_ingredients_isSet;
    bool m_has_english_ingredients_isValid;

    QList<QString> m_ingredient_list;
    bool m_ingredient_list_isSet;
    bool m_ingredient_list_isValid;

    QString m_ingredients;
    bool m_ingredients_isSet;
    bool m_ingredients_isValid;

    QList<QString> m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    QList<QString> m_minerals;
    bool m_minerals_isSet;
    bool m_minerals_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIBrandedFoodObject_items_inner_nutrients_inner> m_nutrients;
    bool m_nutrients_isSet;
    bool m_nutrients_isValid;

    OAIBrandedFoodObject_items_inner_package m_package;
    bool m_package_isSet;
    bool m_package_isValid;

    OAIBrandedFoodObject_items_inner_packaging_photos m_packaging_photos;
    bool m_packaging_photos_isSet;
    bool m_packaging_photos_isValid;

    QList<QString> m_palm_oil_ingredients;
    bool m_palm_oil_ingredients_isSet;
    bool m_palm_oil_ingredients_isValid;

    OAIBrandedFoodObject_items_inner_serving m_serving;
    bool m_serving_isSet;
    bool m_serving_isValid;

    QList<QString> m_traces;
    bool m_traces_isSet;
    bool m_traces_isValid;

    QList<QString> m_vitamins;
    bool m_vitamins_isSet;
    bool m_vitamins_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBrandedFoodObject_items_inner)

#endif // OAIBrandedFoodObject_items_inner_H
