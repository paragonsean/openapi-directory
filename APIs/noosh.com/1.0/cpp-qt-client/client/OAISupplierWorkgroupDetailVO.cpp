/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupplierWorkgroupDetailVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupplierWorkgroupDetailVO::OAISupplierWorkgroupDetailVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupplierWorkgroupDetailVO::OAISupplierWorkgroupDetailVO() {
    this->initializeModel();
}

OAISupplierWorkgroupDetailVO::~OAISupplierWorkgroupDetailVO() {}

void OAISupplierWorkgroupDetailVO::initializeModel() {

    m_additional_workgroups_contain_same_supplier_isSet = false;
    m_additional_workgroups_contain_same_supplier_isValid = false;

    m_bu_supplier_workgroup_id_isSet = false;
    m_bu_supplier_workgroup_id_isValid = false;

    m_bu_supplier_workgroup_name_isSet = false;
    m_bu_supplier_workgroup_name_isValid = false;

    m_client_workgroup_id_isSet = false;
    m_client_workgroup_id_isValid = false;

    m_client_workgroup_name_isSet = false;
    m_client_workgroup_name_isValid = false;

    m_is_approved_isSet = false;
    m_is_approved_isValid = false;

    m_supplier_code_isSet = false;
    m_supplier_code_isValid = false;

    m_supplier_workgroup_id_isSet = false;
    m_supplier_workgroup_id_isValid = false;

    m_supplier_workgroup_name_isSet = false;
    m_supplier_workgroup_name_isValid = false;
}

void OAISupplierWorkgroupDetailVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupplierWorkgroupDetailVO::fromJsonObject(QJsonObject json) {

    m_additional_workgroups_contain_same_supplier_isValid = ::OpenAPI::fromJsonValue(m_additional_workgroups_contain_same_supplier, json[QString("additional_workgroups_contain_same_supplier")]);
    m_additional_workgroups_contain_same_supplier_isSet = !json[QString("additional_workgroups_contain_same_supplier")].isNull() && m_additional_workgroups_contain_same_supplier_isValid;

    m_bu_supplier_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_bu_supplier_workgroup_id, json[QString("bu_supplier_workgroup_id")]);
    m_bu_supplier_workgroup_id_isSet = !json[QString("bu_supplier_workgroup_id")].isNull() && m_bu_supplier_workgroup_id_isValid;

    m_bu_supplier_workgroup_name_isValid = ::OpenAPI::fromJsonValue(m_bu_supplier_workgroup_name, json[QString("bu_supplier_workgroup_name")]);
    m_bu_supplier_workgroup_name_isSet = !json[QString("bu_supplier_workgroup_name")].isNull() && m_bu_supplier_workgroup_name_isValid;

    m_client_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_client_workgroup_id, json[QString("client_workgroup_id")]);
    m_client_workgroup_id_isSet = !json[QString("client_workgroup_id")].isNull() && m_client_workgroup_id_isValid;

    m_client_workgroup_name_isValid = ::OpenAPI::fromJsonValue(m_client_workgroup_name, json[QString("client_workgroup_name")]);
    m_client_workgroup_name_isSet = !json[QString("client_workgroup_name")].isNull() && m_client_workgroup_name_isValid;

    m_is_approved_isValid = ::OpenAPI::fromJsonValue(m_is_approved, json[QString("is_approved")]);
    m_is_approved_isSet = !json[QString("is_approved")].isNull() && m_is_approved_isValid;

    m_supplier_code_isValid = ::OpenAPI::fromJsonValue(m_supplier_code, json[QString("supplier_code")]);
    m_supplier_code_isSet = !json[QString("supplier_code")].isNull() && m_supplier_code_isValid;

    m_supplier_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_supplier_workgroup_id, json[QString("supplier_workgroup_id")]);
    m_supplier_workgroup_id_isSet = !json[QString("supplier_workgroup_id")].isNull() && m_supplier_workgroup_id_isValid;

    m_supplier_workgroup_name_isValid = ::OpenAPI::fromJsonValue(m_supplier_workgroup_name, json[QString("supplier_workgroup_name")]);
    m_supplier_workgroup_name_isSet = !json[QString("supplier_workgroup_name")].isNull() && m_supplier_workgroup_name_isValid;
}

QString OAISupplierWorkgroupDetailVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupplierWorkgroupDetailVO::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_workgroups_contain_same_supplier.size() > 0) {
        obj.insert(QString("additional_workgroups_contain_same_supplier"), ::OpenAPI::toJsonValue(m_additional_workgroups_contain_same_supplier));
    }
    if (m_bu_supplier_workgroup_id_isSet) {
        obj.insert(QString("bu_supplier_workgroup_id"), ::OpenAPI::toJsonValue(m_bu_supplier_workgroup_id));
    }
    if (m_bu_supplier_workgroup_name_isSet) {
        obj.insert(QString("bu_supplier_workgroup_name"), ::OpenAPI::toJsonValue(m_bu_supplier_workgroup_name));
    }
    if (m_client_workgroup_id_isSet) {
        obj.insert(QString("client_workgroup_id"), ::OpenAPI::toJsonValue(m_client_workgroup_id));
    }
    if (m_client_workgroup_name_isSet) {
        obj.insert(QString("client_workgroup_name"), ::OpenAPI::toJsonValue(m_client_workgroup_name));
    }
    if (m_is_approved_isSet) {
        obj.insert(QString("is_approved"), ::OpenAPI::toJsonValue(m_is_approved));
    }
    if (m_supplier_code_isSet) {
        obj.insert(QString("supplier_code"), ::OpenAPI::toJsonValue(m_supplier_code));
    }
    if (m_supplier_workgroup_id_isSet) {
        obj.insert(QString("supplier_workgroup_id"), ::OpenAPI::toJsonValue(m_supplier_workgroup_id));
    }
    if (m_supplier_workgroup_name_isSet) {
        obj.insert(QString("supplier_workgroup_name"), ::OpenAPI::toJsonValue(m_supplier_workgroup_name));
    }
    return obj;
}

QList<OAISupplierWorkgroupBasicVO> OAISupplierWorkgroupDetailVO::getAdditionalWorkgroupsContainSameSupplier() const {
    return m_additional_workgroups_contain_same_supplier;
}
void OAISupplierWorkgroupDetailVO::setAdditionalWorkgroupsContainSameSupplier(const QList<OAISupplierWorkgroupBasicVO> &additional_workgroups_contain_same_supplier) {
    m_additional_workgroups_contain_same_supplier = additional_workgroups_contain_same_supplier;
    m_additional_workgroups_contain_same_supplier_isSet = true;
}

bool OAISupplierWorkgroupDetailVO::is_additional_workgroups_contain_same_supplier_Set() const{
    return m_additional_workgroups_contain_same_supplier_isSet;
}

bool OAISupplierWorkgroupDetailVO::is_additional_workgroups_contain_same_supplier_Valid() const{
    return m_additional_workgroups_contain_same_supplier_isValid;
}

qint64 OAISupplierWorkgroupDetailVO::getBuSupplierWorkgroupId() const {
    return m_bu_supplier_workgroup_id;
}
void OAISupplierWorkgroupDetailVO::setBuSupplierWorkgroupId(const qint64 &bu_supplier_workgroup_id) {
    m_bu_supplier_workgroup_id = bu_supplier_workgroup_id;
    m_bu_supplier_workgroup_id_isSet = true;
}

bool OAISupplierWorkgroupDetailVO::is_bu_supplier_workgroup_id_Set() const{
    return m_bu_supplier_workgroup_id_isSet;
}

bool OAISupplierWorkgroupDetailVO::is_bu_supplier_workgroup_id_Valid() const{
    return m_bu_supplier_workgroup_id_isValid;
}

QString OAISupplierWorkgroupDetailVO::getBuSupplierWorkgroupName() const {
    return m_bu_supplier_workgroup_name;
}
void OAISupplierWorkgroupDetailVO::setBuSupplierWorkgroupName(const QString &bu_supplier_workgroup_name) {
    m_bu_supplier_workgroup_name = bu_supplier_workgroup_name;
    m_bu_supplier_workgroup_name_isSet = true;
}

bool OAISupplierWorkgroupDetailVO::is_bu_supplier_workgroup_name_Set() const{
    return m_bu_supplier_workgroup_name_isSet;
}

bool OAISupplierWorkgroupDetailVO::is_bu_supplier_workgroup_name_Valid() const{
    return m_bu_supplier_workgroup_name_isValid;
}

qint64 OAISupplierWorkgroupDetailVO::getClientWorkgroupId() const {
    return m_client_workgroup_id;
}
void OAISupplierWorkgroupDetailVO::setClientWorkgroupId(const qint64 &client_workgroup_id) {
    m_client_workgroup_id = client_workgroup_id;
    m_client_workgroup_id_isSet = true;
}

bool OAISupplierWorkgroupDetailVO::is_client_workgroup_id_Set() const{
    return m_client_workgroup_id_isSet;
}

bool OAISupplierWorkgroupDetailVO::is_client_workgroup_id_Valid() const{
    return m_client_workgroup_id_isValid;
}

QString OAISupplierWorkgroupDetailVO::getClientWorkgroupName() const {
    return m_client_workgroup_name;
}
void OAISupplierWorkgroupDetailVO::setClientWorkgroupName(const QString &client_workgroup_name) {
    m_client_workgroup_name = client_workgroup_name;
    m_client_workgroup_name_isSet = true;
}

bool OAISupplierWorkgroupDetailVO::is_client_workgroup_name_Set() const{
    return m_client_workgroup_name_isSet;
}

bool OAISupplierWorkgroupDetailVO::is_client_workgroup_name_Valid() const{
    return m_client_workgroup_name_isValid;
}

bool OAISupplierWorkgroupDetailVO::isIsApproved() const {
    return m_is_approved;
}
void OAISupplierWorkgroupDetailVO::setIsApproved(const bool &is_approved) {
    m_is_approved = is_approved;
    m_is_approved_isSet = true;
}

bool OAISupplierWorkgroupDetailVO::is_is_approved_Set() const{
    return m_is_approved_isSet;
}

bool OAISupplierWorkgroupDetailVO::is_is_approved_Valid() const{
    return m_is_approved_isValid;
}

QString OAISupplierWorkgroupDetailVO::getSupplierCode() const {
    return m_supplier_code;
}
void OAISupplierWorkgroupDetailVO::setSupplierCode(const QString &supplier_code) {
    m_supplier_code = supplier_code;
    m_supplier_code_isSet = true;
}

bool OAISupplierWorkgroupDetailVO::is_supplier_code_Set() const{
    return m_supplier_code_isSet;
}

bool OAISupplierWorkgroupDetailVO::is_supplier_code_Valid() const{
    return m_supplier_code_isValid;
}

qint64 OAISupplierWorkgroupDetailVO::getSupplierWorkgroupId() const {
    return m_supplier_workgroup_id;
}
void OAISupplierWorkgroupDetailVO::setSupplierWorkgroupId(const qint64 &supplier_workgroup_id) {
    m_supplier_workgroup_id = supplier_workgroup_id;
    m_supplier_workgroup_id_isSet = true;
}

bool OAISupplierWorkgroupDetailVO::is_supplier_workgroup_id_Set() const{
    return m_supplier_workgroup_id_isSet;
}

bool OAISupplierWorkgroupDetailVO::is_supplier_workgroup_id_Valid() const{
    return m_supplier_workgroup_id_isValid;
}

QString OAISupplierWorkgroupDetailVO::getSupplierWorkgroupName() const {
    return m_supplier_workgroup_name;
}
void OAISupplierWorkgroupDetailVO::setSupplierWorkgroupName(const QString &supplier_workgroup_name) {
    m_supplier_workgroup_name = supplier_workgroup_name;
    m_supplier_workgroup_name_isSet = true;
}

bool OAISupplierWorkgroupDetailVO::is_supplier_workgroup_name_Set() const{
    return m_supplier_workgroup_name_isSet;
}

bool OAISupplierWorkgroupDetailVO::is_supplier_workgroup_name_Valid() const{
    return m_supplier_workgroup_name_isValid;
}

bool OAISupplierWorkgroupDetailVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_workgroups_contain_same_supplier.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_bu_supplier_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bu_supplier_workgroup_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_workgroup_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_approved_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier_workgroup_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupplierWorkgroupDetailVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
