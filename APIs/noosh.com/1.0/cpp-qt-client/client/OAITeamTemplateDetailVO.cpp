/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeamTemplateDetailVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeamTemplateDetailVO::OAITeamTemplateDetailVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeamTemplateDetailVO::OAITeamTemplateDetailVO() {
    this->initializeModel();
}

OAITeamTemplateDetailVO::~OAITeamTemplateDetailVO() {}

void OAITeamTemplateDetailVO::initializeModel() {

    m_team_teample_item_isSet = false;
    m_team_teample_item_isValid = false;

    m_team_template_id_isSet = false;
    m_team_template_id_isValid = false;

    m_team_template_name_isSet = false;
    m_team_template_name_isValid = false;
}

void OAITeamTemplateDetailVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeamTemplateDetailVO::fromJsonObject(QJsonObject json) {

    m_team_teample_item_isValid = ::OpenAPI::fromJsonValue(m_team_teample_item, json[QString("team_teample_item")]);
    m_team_teample_item_isSet = !json[QString("team_teample_item")].isNull() && m_team_teample_item_isValid;

    m_team_template_id_isValid = ::OpenAPI::fromJsonValue(m_team_template_id, json[QString("team_template_id")]);
    m_team_template_id_isSet = !json[QString("team_template_id")].isNull() && m_team_template_id_isValid;

    m_team_template_name_isValid = ::OpenAPI::fromJsonValue(m_team_template_name, json[QString("team_template_name")]);
    m_team_template_name_isSet = !json[QString("team_template_name")].isNull() && m_team_template_name_isValid;
}

QString OAITeamTemplateDetailVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeamTemplateDetailVO::asJsonObject() const {
    QJsonObject obj;
    if (m_team_teample_item.size() > 0) {
        obj.insert(QString("team_teample_item"), ::OpenAPI::toJsonValue(m_team_teample_item));
    }
    if (m_team_template_id_isSet) {
        obj.insert(QString("team_template_id"), ::OpenAPI::toJsonValue(m_team_template_id));
    }
    if (m_team_template_name_isSet) {
        obj.insert(QString("team_template_name"), ::OpenAPI::toJsonValue(m_team_template_name));
    }
    return obj;
}

QList<OAITeamTemplateItemVO> OAITeamTemplateDetailVO::getTeamTeampleItem() const {
    return m_team_teample_item;
}
void OAITeamTemplateDetailVO::setTeamTeampleItem(const QList<OAITeamTemplateItemVO> &team_teample_item) {
    m_team_teample_item = team_teample_item;
    m_team_teample_item_isSet = true;
}

bool OAITeamTemplateDetailVO::is_team_teample_item_Set() const{
    return m_team_teample_item_isSet;
}

bool OAITeamTemplateDetailVO::is_team_teample_item_Valid() const{
    return m_team_teample_item_isValid;
}

qint64 OAITeamTemplateDetailVO::getTeamTemplateId() const {
    return m_team_template_id;
}
void OAITeamTemplateDetailVO::setTeamTemplateId(const qint64 &team_template_id) {
    m_team_template_id = team_template_id;
    m_team_template_id_isSet = true;
}

bool OAITeamTemplateDetailVO::is_team_template_id_Set() const{
    return m_team_template_id_isSet;
}

bool OAITeamTemplateDetailVO::is_team_template_id_Valid() const{
    return m_team_template_id_isValid;
}

QString OAITeamTemplateDetailVO::getTeamTemplateName() const {
    return m_team_template_name;
}
void OAITeamTemplateDetailVO::setTeamTemplateName(const QString &team_template_name) {
    m_team_template_name = team_template_name;
    m_team_template_name_isSet = true;
}

bool OAITeamTemplateDetailVO::is_team_template_name_Set() const{
    return m_team_template_name_isSet;
}

bool OAITeamTemplateDetailVO::is_team_template_name_Valid() const{
    return m_team_template_name_isValid;
}

bool OAITeamTemplateDetailVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_team_teample_item.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_template_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeamTemplateDetailVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
