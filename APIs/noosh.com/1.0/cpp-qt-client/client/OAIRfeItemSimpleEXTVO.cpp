/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRfeItemSimpleEXTVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRfeItemSimpleEXTVO::OAIRfeItemSimpleEXTVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRfeItemSimpleEXTVO::OAIRfeItemSimpleEXTVO() {
    this->initializeModel();
}

OAIRfeItemSimpleEXTVO::~OAIRfeItemSimpleEXTVO() {}

void OAIRfeItemSimpleEXTVO::initializeModel() {

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_rfe_item_id_isSet = false;
    m_rfe_item_id_isValid = false;

    m_rfe_item_options_isSet = false;
    m_rfe_item_options_isValid = false;

    m_spec_id_isSet = false;
    m_spec_id_isValid = false;

    m_spec_name_isSet = false;
    m_spec_name_isValid = false;
}

void OAIRfeItemSimpleEXTVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRfeItemSimpleEXTVO::fromJsonObject(QJsonObject json) {

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("job_id")]);
    m_job_id_isSet = !json[QString("job_id")].isNull() && m_job_id_isValid;

    m_rfe_item_id_isValid = ::OpenAPI::fromJsonValue(m_rfe_item_id, json[QString("rfe_item_id")]);
    m_rfe_item_id_isSet = !json[QString("rfe_item_id")].isNull() && m_rfe_item_id_isValid;

    m_rfe_item_options_isValid = ::OpenAPI::fromJsonValue(m_rfe_item_options, json[QString("rfe_item_options")]);
    m_rfe_item_options_isSet = !json[QString("rfe_item_options")].isNull() && m_rfe_item_options_isValid;

    m_spec_id_isValid = ::OpenAPI::fromJsonValue(m_spec_id, json[QString("spec_id")]);
    m_spec_id_isSet = !json[QString("spec_id")].isNull() && m_spec_id_isValid;

    m_spec_name_isValid = ::OpenAPI::fromJsonValue(m_spec_name, json[QString("spec_name")]);
    m_spec_name_isSet = !json[QString("spec_name")].isNull() && m_spec_name_isValid;
}

QString OAIRfeItemSimpleEXTVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRfeItemSimpleEXTVO::asJsonObject() const {
    QJsonObject obj;
    if (m_job_id_isSet) {
        obj.insert(QString("job_id"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_rfe_item_id_isSet) {
        obj.insert(QString("rfe_item_id"), ::OpenAPI::toJsonValue(m_rfe_item_id));
    }
    if (m_rfe_item_options.size() > 0) {
        obj.insert(QString("rfe_item_options"), ::OpenAPI::toJsonValue(m_rfe_item_options));
    }
    if (m_spec_id_isSet) {
        obj.insert(QString("spec_id"), ::OpenAPI::toJsonValue(m_spec_id));
    }
    if (m_spec_name_isSet) {
        obj.insert(QString("spec_name"), ::OpenAPI::toJsonValue(m_spec_name));
    }
    return obj;
}

qint64 OAIRfeItemSimpleEXTVO::getJobId() const {
    return m_job_id;
}
void OAIRfeItemSimpleEXTVO::setJobId(const qint64 &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIRfeItemSimpleEXTVO::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIRfeItemSimpleEXTVO::is_job_id_Valid() const{
    return m_job_id_isValid;
}

qint64 OAIRfeItemSimpleEXTVO::getRfeItemId() const {
    return m_rfe_item_id;
}
void OAIRfeItemSimpleEXTVO::setRfeItemId(const qint64 &rfe_item_id) {
    m_rfe_item_id = rfe_item_id;
    m_rfe_item_id_isSet = true;
}

bool OAIRfeItemSimpleEXTVO::is_rfe_item_id_Set() const{
    return m_rfe_item_id_isSet;
}

bool OAIRfeItemSimpleEXTVO::is_rfe_item_id_Valid() const{
    return m_rfe_item_id_isValid;
}

QList<OAIRfeItemOptionVO> OAIRfeItemSimpleEXTVO::getRfeItemOptions() const {
    return m_rfe_item_options;
}
void OAIRfeItemSimpleEXTVO::setRfeItemOptions(const QList<OAIRfeItemOptionVO> &rfe_item_options) {
    m_rfe_item_options = rfe_item_options;
    m_rfe_item_options_isSet = true;
}

bool OAIRfeItemSimpleEXTVO::is_rfe_item_options_Set() const{
    return m_rfe_item_options_isSet;
}

bool OAIRfeItemSimpleEXTVO::is_rfe_item_options_Valid() const{
    return m_rfe_item_options_isValid;
}

qint64 OAIRfeItemSimpleEXTVO::getSpecId() const {
    return m_spec_id;
}
void OAIRfeItemSimpleEXTVO::setSpecId(const qint64 &spec_id) {
    m_spec_id = spec_id;
    m_spec_id_isSet = true;
}

bool OAIRfeItemSimpleEXTVO::is_spec_id_Set() const{
    return m_spec_id_isSet;
}

bool OAIRfeItemSimpleEXTVO::is_spec_id_Valid() const{
    return m_spec_id_isValid;
}

QString OAIRfeItemSimpleEXTVO::getSpecName() const {
    return m_spec_name;
}
void OAIRfeItemSimpleEXTVO::setSpecName(const QString &spec_name) {
    m_spec_name = spec_name;
    m_spec_name_isSet = true;
}

bool OAIRfeItemSimpleEXTVO::is_spec_name_Set() const{
    return m_spec_name_isSet;
}

bool OAIRfeItemSimpleEXTVO::is_spec_name_Valid() const{
    return m_spec_name_isValid;
}

bool OAIRfeItemSimpleEXTVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rfe_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rfe_item_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRfeItemSimpleEXTVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
