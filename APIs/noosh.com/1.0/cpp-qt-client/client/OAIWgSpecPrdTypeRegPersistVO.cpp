/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWgSpecPrdTypeRegPersistVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWgSpecPrdTypeRegPersistVO::OAIWgSpecPrdTypeRegPersistVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWgSpecPrdTypeRegPersistVO::OAIWgSpecPrdTypeRegPersistVO() {
    this->initializeModel();
}

OAIWgSpecPrdTypeRegPersistVO::~OAIWgSpecPrdTypeRegPersistVO() {}

void OAIWgSpecPrdTypeRegPersistVO::initializeModel() {

    m_enable_differentiate_prd_type_preference_isSet = false;
    m_enable_differentiate_prd_type_preference_isValid = false;

    m_spec_prd_type_list_isSet = false;
    m_spec_prd_type_list_isValid = false;
}

void OAIWgSpecPrdTypeRegPersistVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWgSpecPrdTypeRegPersistVO::fromJsonObject(QJsonObject json) {

    m_enable_differentiate_prd_type_preference_isValid = ::OpenAPI::fromJsonValue(m_enable_differentiate_prd_type_preference, json[QString("enableDifferentiatePrdTypePreference")]);
    m_enable_differentiate_prd_type_preference_isSet = !json[QString("enableDifferentiatePrdTypePreference")].isNull() && m_enable_differentiate_prd_type_preference_isValid;

    m_spec_prd_type_list_isValid = ::OpenAPI::fromJsonValue(m_spec_prd_type_list, json[QString("spec_prdType_list")]);
    m_spec_prd_type_list_isSet = !json[QString("spec_prdType_list")].isNull() && m_spec_prd_type_list_isValid;
}

QString OAIWgSpecPrdTypeRegPersistVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWgSpecPrdTypeRegPersistVO::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_differentiate_prd_type_preference_isSet) {
        obj.insert(QString("enableDifferentiatePrdTypePreference"), ::OpenAPI::toJsonValue(m_enable_differentiate_prd_type_preference));
    }
    if (m_spec_prd_type_list.size() > 0) {
        obj.insert(QString("spec_prdType_list"), ::OpenAPI::toJsonValue(m_spec_prd_type_list));
    }
    return obj;
}

bool OAIWgSpecPrdTypeRegPersistVO::isEnableDifferentiatePrdTypePreference() const {
    return m_enable_differentiate_prd_type_preference;
}
void OAIWgSpecPrdTypeRegPersistVO::setEnableDifferentiatePrdTypePreference(const bool &enable_differentiate_prd_type_preference) {
    m_enable_differentiate_prd_type_preference = enable_differentiate_prd_type_preference;
    m_enable_differentiate_prd_type_preference_isSet = true;
}

bool OAIWgSpecPrdTypeRegPersistVO::is_enable_differentiate_prd_type_preference_Set() const{
    return m_enable_differentiate_prd_type_preference_isSet;
}

bool OAIWgSpecPrdTypeRegPersistVO::is_enable_differentiate_prd_type_preference_Valid() const{
    return m_enable_differentiate_prd_type_preference_isValid;
}

QList<OAISpecTypePersistVO> OAIWgSpecPrdTypeRegPersistVO::getSpecPrdTypeList() const {
    return m_spec_prd_type_list;
}
void OAIWgSpecPrdTypeRegPersistVO::setSpecPrdTypeList(const QList<OAISpecTypePersistVO> &spec_prd_type_list) {
    m_spec_prd_type_list = spec_prd_type_list;
    m_spec_prd_type_list_isSet = true;
}

bool OAIWgSpecPrdTypeRegPersistVO::is_spec_prd_type_list_Set() const{
    return m_spec_prd_type_list_isSet;
}

bool OAIWgSpecPrdTypeRegPersistVO::is_spec_prd_type_list_Valid() const{
    return m_spec_prd_type_list_isValid;
}

bool OAIWgSpecPrdTypeRegPersistVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_differentiate_prd_type_preference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_prd_type_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWgSpecPrdTypeRegPersistVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
