/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRfeItemOptionVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRfeItemOptionVO::OAIRfeItemOptionVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRfeItemOptionVO::OAIRfeItemOptionVO() {
    this->initializeModel();
}

OAIRfeItemOptionVO::~OAIRfeItemOptionVO() {}

void OAIRfeItemOptionVO::initializeModel() {

    m_item_option_id_isSet = false;
    m_item_option_id_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_quantity_index_isSet = false;
    m_quantity_index_isValid = false;
}

void OAIRfeItemOptionVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRfeItemOptionVO::fromJsonObject(QJsonObject json) {

    m_item_option_id_isValid = ::OpenAPI::fromJsonValue(m_item_option_id, json[QString("item_option_id")]);
    m_item_option_id_isSet = !json[QString("item_option_id")].isNull() && m_item_option_id_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_quantity_index_isValid = ::OpenAPI::fromJsonValue(m_quantity_index, json[QString("quantity_index")]);
    m_quantity_index_isSet = !json[QString("quantity_index")].isNull() && m_quantity_index_isValid;
}

QString OAIRfeItemOptionVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRfeItemOptionVO::asJsonObject() const {
    QJsonObject obj;
    if (m_item_option_id_isSet) {
        obj.insert(QString("item_option_id"), ::OpenAPI::toJsonValue(m_item_option_id));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_quantity_index_isSet) {
        obj.insert(QString("quantity_index"), ::OpenAPI::toJsonValue(m_quantity_index));
    }
    return obj;
}

qint64 OAIRfeItemOptionVO::getItemOptionId() const {
    return m_item_option_id;
}
void OAIRfeItemOptionVO::setItemOptionId(const qint64 &item_option_id) {
    m_item_option_id = item_option_id;
    m_item_option_id_isSet = true;
}

bool OAIRfeItemOptionVO::is_item_option_id_Set() const{
    return m_item_option_id_isSet;
}

bool OAIRfeItemOptionVO::is_item_option_id_Valid() const{
    return m_item_option_id_isValid;
}

QJsonValue OAIRfeItemOptionVO::getQuantity() const {
    return m_quantity;
}
void OAIRfeItemOptionVO::setQuantity(const QJsonValue &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIRfeItemOptionVO::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIRfeItemOptionVO::is_quantity_Valid() const{
    return m_quantity_isValid;
}

qint32 OAIRfeItemOptionVO::getQuantityIndex() const {
    return m_quantity_index;
}
void OAIRfeItemOptionVO::setQuantityIndex(const qint32 &quantity_index) {
    m_quantity_index = quantity_index;
    m_quantity_index_isSet = true;
}

bool OAIRfeItemOptionVO::is_quantity_index_Set() const{
    return m_quantity_index_isSet;
}

bool OAIRfeItemOptionVO::is_quantity_index_Valid() const{
    return m_quantity_index_isValid;
}

bool OAIRfeItemOptionVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_item_option_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_index_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRfeItemOptionVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
