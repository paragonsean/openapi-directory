/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderWorkgroupLevelSimpleVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderWorkgroupLevelSimpleVO::OAIOrderWorkgroupLevelSimpleVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderWorkgroupLevelSimpleVO::OAIOrderWorkgroupLevelSimpleVO() {
    this->initializeModel();
}

OAIOrderWorkgroupLevelSimpleVO::~OAIOrderWorkgroupLevelSimpleVO() {}

void OAIOrderWorkgroupLevelSimpleVO::initializeModel() {

    m_buyer_workgroup_isSet = false;
    m_buyer_workgroup_isValid = false;

    m_change_orders_isSet = false;
    m_change_orders_isValid = false;

    m_closing_change_orders_isSet = false;
    m_closing_change_orders_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_completion_date_isSet = false;
    m_completion_date_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_grand_total_isSet = false;
    m_grand_total_isValid = false;

    m_grand_total_with_changes_isSet = false;
    m_grand_total_with_changes_isValid = false;

    m_last_changed_isSet = false;
    m_last_changed_isValid = false;

    m_last_status_change_isSet = false;
    m_last_status_change_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_order_number_isSet = false;
    m_order_number_isValid = false;

    m_order_title_isSet = false;
    m_order_title_isValid = false;

    m_payment_reference_isSet = false;
    m_payment_reference_isValid = false;

    m_print_order_ids_isSet = false;
    m_print_order_ids_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_comments_isSet = false;
    m_status_comments_isValid = false;

    m_supplier_reference_isSet = false;
    m_supplier_reference_isValid = false;

    m_supplier_workgroup_isSet = false;
    m_supplier_workgroup_isValid = false;

    m_transactional_currency_isSet = false;
    m_transactional_currency_isValid = false;

    m_transactional_grand_total_isSet = false;
    m_transactional_grand_total_isValid = false;

    m_transactional_grand_total_with_changes_isSet = false;
    m_transactional_grand_total_with_changes_isValid = false;
}

void OAIOrderWorkgroupLevelSimpleVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderWorkgroupLevelSimpleVO::fromJsonObject(QJsonObject json) {

    m_buyer_workgroup_isValid = ::OpenAPI::fromJsonValue(m_buyer_workgroup, json[QString("buyer_workgroup")]);
    m_buyer_workgroup_isSet = !json[QString("buyer_workgroup")].isNull() && m_buyer_workgroup_isValid;

    m_change_orders_isValid = ::OpenAPI::fromJsonValue(m_change_orders, json[QString("change_orders")]);
    m_change_orders_isSet = !json[QString("change_orders")].isNull() && m_change_orders_isValid;

    m_closing_change_orders_isValid = ::OpenAPI::fromJsonValue(m_closing_change_orders, json[QString("closing_change_orders")]);
    m_closing_change_orders_isSet = !json[QString("closing_change_orders")].isNull() && m_closing_change_orders_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_completion_date_isValid = ::OpenAPI::fromJsonValue(m_completion_date, json[QString("completion_date")]);
    m_completion_date_isSet = !json[QString("completion_date")].isNull() && m_completion_date_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_grand_total_isValid = ::OpenAPI::fromJsonValue(m_grand_total, json[QString("grand_total")]);
    m_grand_total_isSet = !json[QString("grand_total")].isNull() && m_grand_total_isValid;

    m_grand_total_with_changes_isValid = ::OpenAPI::fromJsonValue(m_grand_total_with_changes, json[QString("grand_total_with_changes")]);
    m_grand_total_with_changes_isSet = !json[QString("grand_total_with_changes")].isNull() && m_grand_total_with_changes_isValid;

    m_last_changed_isValid = ::OpenAPI::fromJsonValue(m_last_changed, json[QString("last_changed")]);
    m_last_changed_isSet = !json[QString("last_changed")].isNull() && m_last_changed_isValid;

    m_last_status_change_isValid = ::OpenAPI::fromJsonValue(m_last_status_change, json[QString("last_status_change")]);
    m_last_status_change_isSet = !json[QString("last_status_change")].isNull() && m_last_status_change_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_order_number_isValid = ::OpenAPI::fromJsonValue(m_order_number, json[QString("order_number")]);
    m_order_number_isSet = !json[QString("order_number")].isNull() && m_order_number_isValid;

    m_order_title_isValid = ::OpenAPI::fromJsonValue(m_order_title, json[QString("order_title")]);
    m_order_title_isSet = !json[QString("order_title")].isNull() && m_order_title_isValid;

    m_payment_reference_isValid = ::OpenAPI::fromJsonValue(m_payment_reference, json[QString("payment_reference")]);
    m_payment_reference_isSet = !json[QString("payment_reference")].isNull() && m_payment_reference_isValid;

    m_print_order_ids_isValid = ::OpenAPI::fromJsonValue(m_print_order_ids, json[QString("print_order_ids")]);
    m_print_order_ids_isSet = !json[QString("print_order_ids")].isNull() && m_print_order_ids_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_comments_isValid = ::OpenAPI::fromJsonValue(m_status_comments, json[QString("status_comments")]);
    m_status_comments_isSet = !json[QString("status_comments")].isNull() && m_status_comments_isValid;

    m_supplier_reference_isValid = ::OpenAPI::fromJsonValue(m_supplier_reference, json[QString("supplier_reference")]);
    m_supplier_reference_isSet = !json[QString("supplier_reference")].isNull() && m_supplier_reference_isValid;

    m_supplier_workgroup_isValid = ::OpenAPI::fromJsonValue(m_supplier_workgroup, json[QString("supplier_workgroup")]);
    m_supplier_workgroup_isSet = !json[QString("supplier_workgroup")].isNull() && m_supplier_workgroup_isValid;

    m_transactional_currency_isValid = ::OpenAPI::fromJsonValue(m_transactional_currency, json[QString("transactional_currency")]);
    m_transactional_currency_isSet = !json[QString("transactional_currency")].isNull() && m_transactional_currency_isValid;

    m_transactional_grand_total_isValid = ::OpenAPI::fromJsonValue(m_transactional_grand_total, json[QString("transactional_grand_total")]);
    m_transactional_grand_total_isSet = !json[QString("transactional_grand_total")].isNull() && m_transactional_grand_total_isValid;

    m_transactional_grand_total_with_changes_isValid = ::OpenAPI::fromJsonValue(m_transactional_grand_total_with_changes, json[QString("transactional_grand_total_with_changes")]);
    m_transactional_grand_total_with_changes_isSet = !json[QString("transactional_grand_total_with_changes")].isNull() && m_transactional_grand_total_with_changes_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderWorkgroupLevelSimpleVO::asJsonObject() const {
    QJsonObject obj;
    if (m_buyer_workgroup.isSet()) {
        obj.insert(QString("buyer_workgroup"), ::OpenAPI::toJsonValue(m_buyer_workgroup));
    }
    if (m_change_orders.size() > 0) {
        obj.insert(QString("change_orders"), ::OpenAPI::toJsonValue(m_change_orders));
    }
    if (m_closing_change_orders.size() > 0) {
        obj.insert(QString("closing_change_orders"), ::OpenAPI::toJsonValue(m_closing_change_orders));
    }
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_completion_date_isSet) {
        obj.insert(QString("completion_date"), ::OpenAPI::toJsonValue(m_completion_date));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_grand_total_isSet) {
        obj.insert(QString("grand_total"), ::OpenAPI::toJsonValue(m_grand_total));
    }
    if (m_grand_total_with_changes_isSet) {
        obj.insert(QString("grand_total_with_changes"), ::OpenAPI::toJsonValue(m_grand_total_with_changes));
    }
    if (m_last_changed_isSet) {
        obj.insert(QString("last_changed"), ::OpenAPI::toJsonValue(m_last_changed));
    }
    if (m_last_status_change_isSet) {
        obj.insert(QString("last_status_change"), ::OpenAPI::toJsonValue(m_last_status_change));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_order_number_isSet) {
        obj.insert(QString("order_number"), ::OpenAPI::toJsonValue(m_order_number));
    }
    if (m_order_title_isSet) {
        obj.insert(QString("order_title"), ::OpenAPI::toJsonValue(m_order_title));
    }
    if (m_payment_reference_isSet) {
        obj.insert(QString("payment_reference"), ::OpenAPI::toJsonValue(m_payment_reference));
    }
    if (m_print_order_ids.size() > 0) {
        obj.insert(QString("print_order_ids"), ::OpenAPI::toJsonValue(m_print_order_ids));
    }
    if (m_project.isSet()) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_comments_isSet) {
        obj.insert(QString("status_comments"), ::OpenAPI::toJsonValue(m_status_comments));
    }
    if (m_supplier_reference_isSet) {
        obj.insert(QString("supplier_reference"), ::OpenAPI::toJsonValue(m_supplier_reference));
    }
    if (m_supplier_workgroup.isSet()) {
        obj.insert(QString("supplier_workgroup"), ::OpenAPI::toJsonValue(m_supplier_workgroup));
    }
    if (m_transactional_currency_isSet) {
        obj.insert(QString("transactional_currency"), ::OpenAPI::toJsonValue(m_transactional_currency));
    }
    if (m_transactional_grand_total_isSet) {
        obj.insert(QString("transactional_grand_total"), ::OpenAPI::toJsonValue(m_transactional_grand_total));
    }
    if (m_transactional_grand_total_with_changes_isSet) {
        obj.insert(QString("transactional_grand_total_with_changes"), ::OpenAPI::toJsonValue(m_transactional_grand_total_with_changes));
    }
    return obj;
}

OAIWorkgroupBaseVO OAIOrderWorkgroupLevelSimpleVO::getBuyerWorkgroup() const {
    return m_buyer_workgroup;
}
void OAIOrderWorkgroupLevelSimpleVO::setBuyerWorkgroup(const OAIWorkgroupBaseVO &buyer_workgroup) {
    m_buyer_workgroup = buyer_workgroup;
    m_buyer_workgroup_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_buyer_workgroup_Set() const{
    return m_buyer_workgroup_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_buyer_workgroup_Valid() const{
    return m_buyer_workgroup_isValid;
}

QList<OAIOrderSimpleBaseVO> OAIOrderWorkgroupLevelSimpleVO::getChangeOrders() const {
    return m_change_orders;
}
void OAIOrderWorkgroupLevelSimpleVO::setChangeOrders(const QList<OAIOrderSimpleBaseVO> &change_orders) {
    m_change_orders = change_orders;
    m_change_orders_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_change_orders_Set() const{
    return m_change_orders_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_change_orders_Valid() const{
    return m_change_orders_isValid;
}

QList<OAIOrderSimpleBaseVO> OAIOrderWorkgroupLevelSimpleVO::getClosingChangeOrders() const {
    return m_closing_change_orders;
}
void OAIOrderWorkgroupLevelSimpleVO::setClosingChangeOrders(const QList<OAIOrderSimpleBaseVO> &closing_change_orders) {
    m_closing_change_orders = closing_change_orders;
    m_closing_change_orders_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_closing_change_orders_Set() const{
    return m_closing_change_orders_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_closing_change_orders_Valid() const{
    return m_closing_change_orders_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::getComments() const {
    return m_comments;
}
void OAIOrderWorkgroupLevelSimpleVO::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_comments_Valid() const{
    return m_comments_isValid;
}

QDate OAIOrderWorkgroupLevelSimpleVO::getCompletionDate() const {
    return m_completion_date;
}
void OAIOrderWorkgroupLevelSimpleVO::setCompletionDate(const QDate &completion_date) {
    m_completion_date = completion_date;
    m_completion_date_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_completion_date_Set() const{
    return m_completion_date_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_completion_date_Valid() const{
    return m_completion_date_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::getCurrency() const {
    return m_currency;
}
void OAIOrderWorkgroupLevelSimpleVO::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_currency_Valid() const{
    return m_currency_isValid;
}

QJsonValue OAIOrderWorkgroupLevelSimpleVO::getGrandTotal() const {
    return m_grand_total;
}
void OAIOrderWorkgroupLevelSimpleVO::setGrandTotal(const QJsonValue &grand_total) {
    m_grand_total = grand_total;
    m_grand_total_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_grand_total_Set() const{
    return m_grand_total_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_grand_total_Valid() const{
    return m_grand_total_isValid;
}

QJsonValue OAIOrderWorkgroupLevelSimpleVO::getGrandTotalWithChanges() const {
    return m_grand_total_with_changes;
}
void OAIOrderWorkgroupLevelSimpleVO::setGrandTotalWithChanges(const QJsonValue &grand_total_with_changes) {
    m_grand_total_with_changes = grand_total_with_changes;
    m_grand_total_with_changes_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_grand_total_with_changes_Set() const{
    return m_grand_total_with_changes_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_grand_total_with_changes_Valid() const{
    return m_grand_total_with_changes_isValid;
}

QDate OAIOrderWorkgroupLevelSimpleVO::getLastChanged() const {
    return m_last_changed;
}
void OAIOrderWorkgroupLevelSimpleVO::setLastChanged(const QDate &last_changed) {
    m_last_changed = last_changed;
    m_last_changed_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_last_changed_Set() const{
    return m_last_changed_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_last_changed_Valid() const{
    return m_last_changed_isValid;
}

QDate OAIOrderWorkgroupLevelSimpleVO::getLastStatusChange() const {
    return m_last_status_change;
}
void OAIOrderWorkgroupLevelSimpleVO::setLastStatusChange(const QDate &last_status_change) {
    m_last_status_change = last_status_change;
    m_last_status_change_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_last_status_change_Set() const{
    return m_last_status_change_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_last_status_change_Valid() const{
    return m_last_status_change_isValid;
}

qint64 OAIOrderWorkgroupLevelSimpleVO::getOrderId() const {
    return m_order_id;
}
void OAIOrderWorkgroupLevelSimpleVO::setOrderId(const qint64 &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::getOrderNumber() const {
    return m_order_number;
}
void OAIOrderWorkgroupLevelSimpleVO::setOrderNumber(const QString &order_number) {
    m_order_number = order_number;
    m_order_number_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_order_number_Set() const{
    return m_order_number_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_order_number_Valid() const{
    return m_order_number_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::getOrderTitle() const {
    return m_order_title;
}
void OAIOrderWorkgroupLevelSimpleVO::setOrderTitle(const QString &order_title) {
    m_order_title = order_title;
    m_order_title_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_order_title_Set() const{
    return m_order_title_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_order_title_Valid() const{
    return m_order_title_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::getPaymentReference() const {
    return m_payment_reference;
}
void OAIOrderWorkgroupLevelSimpleVO::setPaymentReference(const QString &payment_reference) {
    m_payment_reference = payment_reference;
    m_payment_reference_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_payment_reference_Set() const{
    return m_payment_reference_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_payment_reference_Valid() const{
    return m_payment_reference_isValid;
}

QList<qint64> OAIOrderWorkgroupLevelSimpleVO::getPrintOrderIds() const {
    return m_print_order_ids;
}
void OAIOrderWorkgroupLevelSimpleVO::setPrintOrderIds(const QList<qint64> &print_order_ids) {
    m_print_order_ids = print_order_ids;
    m_print_order_ids_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_print_order_ids_Set() const{
    return m_print_order_ids_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_print_order_ids_Valid() const{
    return m_print_order_ids_isValid;
}

OAIProjectBaseVO OAIOrderWorkgroupLevelSimpleVO::getProject() const {
    return m_project;
}
void OAIOrderWorkgroupLevelSimpleVO::setProject(const OAIProjectBaseVO &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_project_Set() const{
    return m_project_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_project_Valid() const{
    return m_project_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::getStatus() const {
    return m_status;
}
void OAIOrderWorkgroupLevelSimpleVO::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::getStatusComments() const {
    return m_status_comments;
}
void OAIOrderWorkgroupLevelSimpleVO::setStatusComments(const QString &status_comments) {
    m_status_comments = status_comments;
    m_status_comments_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_status_comments_Set() const{
    return m_status_comments_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_status_comments_Valid() const{
    return m_status_comments_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::getSupplierReference() const {
    return m_supplier_reference;
}
void OAIOrderWorkgroupLevelSimpleVO::setSupplierReference(const QString &supplier_reference) {
    m_supplier_reference = supplier_reference;
    m_supplier_reference_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_supplier_reference_Set() const{
    return m_supplier_reference_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_supplier_reference_Valid() const{
    return m_supplier_reference_isValid;
}

OAIWorkgroupBaseVO OAIOrderWorkgroupLevelSimpleVO::getSupplierWorkgroup() const {
    return m_supplier_workgroup;
}
void OAIOrderWorkgroupLevelSimpleVO::setSupplierWorkgroup(const OAIWorkgroupBaseVO &supplier_workgroup) {
    m_supplier_workgroup = supplier_workgroup;
    m_supplier_workgroup_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_supplier_workgroup_Set() const{
    return m_supplier_workgroup_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_supplier_workgroup_Valid() const{
    return m_supplier_workgroup_isValid;
}

QString OAIOrderWorkgroupLevelSimpleVO::getTransactionalCurrency() const {
    return m_transactional_currency;
}
void OAIOrderWorkgroupLevelSimpleVO::setTransactionalCurrency(const QString &transactional_currency) {
    m_transactional_currency = transactional_currency;
    m_transactional_currency_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_transactional_currency_Set() const{
    return m_transactional_currency_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_transactional_currency_Valid() const{
    return m_transactional_currency_isValid;
}

QJsonValue OAIOrderWorkgroupLevelSimpleVO::getTransactionalGrandTotal() const {
    return m_transactional_grand_total;
}
void OAIOrderWorkgroupLevelSimpleVO::setTransactionalGrandTotal(const QJsonValue &transactional_grand_total) {
    m_transactional_grand_total = transactional_grand_total;
    m_transactional_grand_total_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_transactional_grand_total_Set() const{
    return m_transactional_grand_total_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_transactional_grand_total_Valid() const{
    return m_transactional_grand_total_isValid;
}

QJsonValue OAIOrderWorkgroupLevelSimpleVO::getTransactionalGrandTotalWithChanges() const {
    return m_transactional_grand_total_with_changes;
}
void OAIOrderWorkgroupLevelSimpleVO::setTransactionalGrandTotalWithChanges(const QJsonValue &transactional_grand_total_with_changes) {
    m_transactional_grand_total_with_changes = transactional_grand_total_with_changes;
    m_transactional_grand_total_with_changes_isSet = true;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_transactional_grand_total_with_changes_Set() const{
    return m_transactional_grand_total_with_changes_isSet;
}

bool OAIOrderWorkgroupLevelSimpleVO::is_transactional_grand_total_with_changes_Valid() const{
    return m_transactional_grand_total_with_changes_isValid;
}

bool OAIOrderWorkgroupLevelSimpleVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_buyer_workgroup.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_change_orders.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_closing_change_orders.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grand_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grand_total_with_changes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_changed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_status_change_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_print_order_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_project.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier_workgroup.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_grand_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_grand_total_with_changes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderWorkgroupLevelSimpleVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
