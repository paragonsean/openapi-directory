/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeamMemberSimpleVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeamMemberSimpleVO::OAITeamMemberSimpleVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeamMemberSimpleVO::OAITeamMemberSimpleVO() {
    this->initializeModel();
}

OAITeamMemberSimpleVO::~OAITeamMemberSimpleVO() {}

void OAITeamMemberSimpleVO::initializeModel() {

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;

    m_teammember_id_isSet = false;
    m_teammember_id_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_workgroup_name_isSet = false;
    m_workgroup_name_isValid = false;
}

void OAITeamMemberSimpleVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeamMemberSimpleVO::fromJsonObject(QJsonObject json) {

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;

    m_teammember_id_isValid = ::OpenAPI::fromJsonValue(m_teammember_id, json[QString("teammember_id")]);
    m_teammember_id_isSet = !json[QString("teammember_id")].isNull() && m_teammember_id_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;

    m_workgroup_name_isValid = ::OpenAPI::fromJsonValue(m_workgroup_name, json[QString("workgroup_name")]);
    m_workgroup_name_isSet = !json[QString("workgroup_name")].isNull() && m_workgroup_name_isValid;
}

QString OAITeamMemberSimpleVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeamMemberSimpleVO::asJsonObject() const {
    QJsonObject obj;
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    if (m_teammember_id_isSet) {
        obj.insert(QString("teammember_id"), ::OpenAPI::toJsonValue(m_teammember_id));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_workgroup_name_isSet) {
        obj.insert(QString("workgroup_name"), ::OpenAPI::toJsonValue(m_workgroup_name));
    }
    return obj;
}

QString OAITeamMemberSimpleVO::getCompanyName() const {
    return m_company_name;
}
void OAITeamMemberSimpleVO::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAITeamMemberSimpleVO::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAITeamMemberSimpleVO::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAITeamMemberSimpleVO::getName() const {
    return m_name;
}
void OAITeamMemberSimpleVO::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITeamMemberSimpleVO::is_name_Set() const{
    return m_name_isSet;
}

bool OAITeamMemberSimpleVO::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITeamMemberSimpleVO::getPhone() const {
    return m_phone;
}
void OAITeamMemberSimpleVO::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAITeamMemberSimpleVO::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAITeamMemberSimpleVO::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAITeamMemberSimpleVO::getRole() const {
    return m_role;
}
void OAITeamMemberSimpleVO::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAITeamMemberSimpleVO::is_role_Set() const{
    return m_role_isSet;
}

bool OAITeamMemberSimpleVO::is_role_Valid() const{
    return m_role_isValid;
}

qint64 OAITeamMemberSimpleVO::getTeammemberId() const {
    return m_teammember_id;
}
void OAITeamMemberSimpleVO::setTeammemberId(const qint64 &teammember_id) {
    m_teammember_id = teammember_id;
    m_teammember_id_isSet = true;
}

bool OAITeamMemberSimpleVO::is_teammember_id_Set() const{
    return m_teammember_id_isSet;
}

bool OAITeamMemberSimpleVO::is_teammember_id_Valid() const{
    return m_teammember_id_isValid;
}

qint64 OAITeamMemberSimpleVO::getUserId() const {
    return m_user_id;
}
void OAITeamMemberSimpleVO::setUserId(const qint64 &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAITeamMemberSimpleVO::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAITeamMemberSimpleVO::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAITeamMemberSimpleVO::getWorkgroupName() const {
    return m_workgroup_name;
}
void OAITeamMemberSimpleVO::setWorkgroupName(const QString &workgroup_name) {
    m_workgroup_name = workgroup_name;
    m_workgroup_name_isSet = true;
}

bool OAITeamMemberSimpleVO::is_workgroup_name_Set() const{
    return m_workgroup_name_isSet;
}

bool OAITeamMemberSimpleVO::is_workgroup_name_Valid() const{
    return m_workgroup_name_isValid;
}

bool OAITeamMemberSimpleVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_teammember_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workgroup_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeamMemberSimpleVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
