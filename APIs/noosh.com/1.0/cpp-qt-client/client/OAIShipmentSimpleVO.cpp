/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShipmentSimpleVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShipmentSimpleVO::OAIShipmentSimpleVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShipmentSimpleVO::OAIShipmentSimpleVO() {
    this->initializeModel();
}

OAIShipmentSimpleVO::~OAIShipmentSimpleVO() {}

void OAIShipmentSimpleVO::initializeModel() {

    m_locations_count_isSet = false;
    m_locations_count_isValid = false;

    m_qty_received_isSet = false;
    m_qty_received_isValid = false;

    m_qty_requested_isSet = false;
    m_qty_requested_isValid = false;

    m_qty_shipped_isSet = false;
    m_qty_shipped_isValid = false;

    m_received_date_isSet = false;
    m_received_date_isValid = false;

    m_shipment_id_isSet = false;
    m_shipment_id_isValid = false;

    m_shipment_status_isSet = false;
    m_shipment_status_isValid = false;

    m_shipped_date_isSet = false;
    m_shipped_date_isValid = false;

    m_spec_isSet = false;
    m_spec_isValid = false;
}

void OAIShipmentSimpleVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShipmentSimpleVO::fromJsonObject(QJsonObject json) {

    m_locations_count_isValid = ::OpenAPI::fromJsonValue(m_locations_count, json[QString("locations_count")]);
    m_locations_count_isSet = !json[QString("locations_count")].isNull() && m_locations_count_isValid;

    m_qty_received_isValid = ::OpenAPI::fromJsonValue(m_qty_received, json[QString("qty_received")]);
    m_qty_received_isSet = !json[QString("qty_received")].isNull() && m_qty_received_isValid;

    m_qty_requested_isValid = ::OpenAPI::fromJsonValue(m_qty_requested, json[QString("qty_requested")]);
    m_qty_requested_isSet = !json[QString("qty_requested")].isNull() && m_qty_requested_isValid;

    m_qty_shipped_isValid = ::OpenAPI::fromJsonValue(m_qty_shipped, json[QString("qty_shipped")]);
    m_qty_shipped_isSet = !json[QString("qty_shipped")].isNull() && m_qty_shipped_isValid;

    m_received_date_isValid = ::OpenAPI::fromJsonValue(m_received_date, json[QString("received_date")]);
    m_received_date_isSet = !json[QString("received_date")].isNull() && m_received_date_isValid;

    m_shipment_id_isValid = ::OpenAPI::fromJsonValue(m_shipment_id, json[QString("shipment_id")]);
    m_shipment_id_isSet = !json[QString("shipment_id")].isNull() && m_shipment_id_isValid;

    m_shipment_status_isValid = ::OpenAPI::fromJsonValue(m_shipment_status, json[QString("shipment_status")]);
    m_shipment_status_isSet = !json[QString("shipment_status")].isNull() && m_shipment_status_isValid;

    m_shipped_date_isValid = ::OpenAPI::fromJsonValue(m_shipped_date, json[QString("shipped_date")]);
    m_shipped_date_isSet = !json[QString("shipped_date")].isNull() && m_shipped_date_isValid;

    m_spec_isValid = ::OpenAPI::fromJsonValue(m_spec, json[QString("spec")]);
    m_spec_isSet = !json[QString("spec")].isNull() && m_spec_isValid;
}

QString OAIShipmentSimpleVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShipmentSimpleVO::asJsonObject() const {
    QJsonObject obj;
    if (m_locations_count_isSet) {
        obj.insert(QString("locations_count"), ::OpenAPI::toJsonValue(m_locations_count));
    }
    if (m_qty_received_isSet) {
        obj.insert(QString("qty_received"), ::OpenAPI::toJsonValue(m_qty_received));
    }
    if (m_qty_requested_isSet) {
        obj.insert(QString("qty_requested"), ::OpenAPI::toJsonValue(m_qty_requested));
    }
    if (m_qty_shipped_isSet) {
        obj.insert(QString("qty_shipped"), ::OpenAPI::toJsonValue(m_qty_shipped));
    }
    if (m_received_date_isSet) {
        obj.insert(QString("received_date"), ::OpenAPI::toJsonValue(m_received_date));
    }
    if (m_shipment_id_isSet) {
        obj.insert(QString("shipment_id"), ::OpenAPI::toJsonValue(m_shipment_id));
    }
    if (m_shipment_status_isSet) {
        obj.insert(QString("shipment_status"), ::OpenAPI::toJsonValue(m_shipment_status));
    }
    if (m_shipped_date_isSet) {
        obj.insert(QString("shipped_date"), ::OpenAPI::toJsonValue(m_shipped_date));
    }
    if (m_spec.isSet()) {
        obj.insert(QString("spec"), ::OpenAPI::toJsonValue(m_spec));
    }
    return obj;
}

qint64 OAIShipmentSimpleVO::getLocationsCount() const {
    return m_locations_count;
}
void OAIShipmentSimpleVO::setLocationsCount(const qint64 &locations_count) {
    m_locations_count = locations_count;
    m_locations_count_isSet = true;
}

bool OAIShipmentSimpleVO::is_locations_count_Set() const{
    return m_locations_count_isSet;
}

bool OAIShipmentSimpleVO::is_locations_count_Valid() const{
    return m_locations_count_isValid;
}

qint64 OAIShipmentSimpleVO::getQtyReceived() const {
    return m_qty_received;
}
void OAIShipmentSimpleVO::setQtyReceived(const qint64 &qty_received) {
    m_qty_received = qty_received;
    m_qty_received_isSet = true;
}

bool OAIShipmentSimpleVO::is_qty_received_Set() const{
    return m_qty_received_isSet;
}

bool OAIShipmentSimpleVO::is_qty_received_Valid() const{
    return m_qty_received_isValid;
}

qint64 OAIShipmentSimpleVO::getQtyRequested() const {
    return m_qty_requested;
}
void OAIShipmentSimpleVO::setQtyRequested(const qint64 &qty_requested) {
    m_qty_requested = qty_requested;
    m_qty_requested_isSet = true;
}

bool OAIShipmentSimpleVO::is_qty_requested_Set() const{
    return m_qty_requested_isSet;
}

bool OAIShipmentSimpleVO::is_qty_requested_Valid() const{
    return m_qty_requested_isValid;
}

qint64 OAIShipmentSimpleVO::getQtyShipped() const {
    return m_qty_shipped;
}
void OAIShipmentSimpleVO::setQtyShipped(const qint64 &qty_shipped) {
    m_qty_shipped = qty_shipped;
    m_qty_shipped_isSet = true;
}

bool OAIShipmentSimpleVO::is_qty_shipped_Set() const{
    return m_qty_shipped_isSet;
}

bool OAIShipmentSimpleVO::is_qty_shipped_Valid() const{
    return m_qty_shipped_isValid;
}

QDate OAIShipmentSimpleVO::getReceivedDate() const {
    return m_received_date;
}
void OAIShipmentSimpleVO::setReceivedDate(const QDate &received_date) {
    m_received_date = received_date;
    m_received_date_isSet = true;
}

bool OAIShipmentSimpleVO::is_received_date_Set() const{
    return m_received_date_isSet;
}

bool OAIShipmentSimpleVO::is_received_date_Valid() const{
    return m_received_date_isValid;
}

qint64 OAIShipmentSimpleVO::getShipmentId() const {
    return m_shipment_id;
}
void OAIShipmentSimpleVO::setShipmentId(const qint64 &shipment_id) {
    m_shipment_id = shipment_id;
    m_shipment_id_isSet = true;
}

bool OAIShipmentSimpleVO::is_shipment_id_Set() const{
    return m_shipment_id_isSet;
}

bool OAIShipmentSimpleVO::is_shipment_id_Valid() const{
    return m_shipment_id_isValid;
}

QString OAIShipmentSimpleVO::getShipmentStatus() const {
    return m_shipment_status;
}
void OAIShipmentSimpleVO::setShipmentStatus(const QString &shipment_status) {
    m_shipment_status = shipment_status;
    m_shipment_status_isSet = true;
}

bool OAIShipmentSimpleVO::is_shipment_status_Set() const{
    return m_shipment_status_isSet;
}

bool OAIShipmentSimpleVO::is_shipment_status_Valid() const{
    return m_shipment_status_isValid;
}

QDate OAIShipmentSimpleVO::getShippedDate() const {
    return m_shipped_date;
}
void OAIShipmentSimpleVO::setShippedDate(const QDate &shipped_date) {
    m_shipped_date = shipped_date;
    m_shipped_date_isSet = true;
}

bool OAIShipmentSimpleVO::is_shipped_date_Set() const{
    return m_shipped_date_isSet;
}

bool OAIShipmentSimpleVO::is_shipped_date_Valid() const{
    return m_shipped_date_isValid;
}

OAISpecBaseVO OAIShipmentSimpleVO::getSpec() const {
    return m_spec;
}
void OAIShipmentSimpleVO::setSpec(const OAISpecBaseVO &spec) {
    m_spec = spec;
    m_spec_isSet = true;
}

bool OAIShipmentSimpleVO::is_spec_Set() const{
    return m_spec_isSet;
}

bool OAIShipmentSimpleVO::is_spec_Valid() const{
    return m_spec_isValid;
}

bool OAIShipmentSimpleVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_locations_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qty_received_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qty_requested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qty_shipped_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_received_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipped_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShipmentSimpleVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
