/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectParentVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectParentVO::OAIProjectParentVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectParentVO::OAIProjectParentVO() {
    this->initializeModel();
}

OAIProjectParentVO::~OAIProjectParentVO() {}

void OAIProjectParentVO::initializeModel() {

    m_client_account_isSet = false;
    m_client_account_isValid = false;

    m_client_user_isSet = false;
    m_client_user_isValid = false;

    m_client_user_id_isSet = false;
    m_client_user_id_isValid = false;

    m_client_workgroup_id_isSet = false;
    m_client_workgroup_id_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_project_create_date_isSet = false;
    m_project_create_date_isValid = false;

    m_project_description_isSet = false;
    m_project_description_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_project_name_isSet = false;
    m_project_name_isValid = false;

    m_project_number_isSet = false;
    m_project_number_isValid = false;
}

void OAIProjectParentVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectParentVO::fromJsonObject(QJsonObject json) {

    m_client_account_isValid = ::OpenAPI::fromJsonValue(m_client_account, json[QString("client_account")]);
    m_client_account_isSet = !json[QString("client_account")].isNull() && m_client_account_isValid;

    m_client_user_isValid = ::OpenAPI::fromJsonValue(m_client_user, json[QString("client_user")]);
    m_client_user_isSet = !json[QString("client_user")].isNull() && m_client_user_isValid;

    m_client_user_id_isValid = ::OpenAPI::fromJsonValue(m_client_user_id, json[QString("client_user_id")]);
    m_client_user_id_isSet = !json[QString("client_user_id")].isNull() && m_client_user_id_isValid;

    m_client_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_client_workgroup_id, json[QString("client_workgroup_id")]);
    m_client_workgroup_id_isSet = !json[QString("client_workgroup_id")].isNull() && m_client_workgroup_id_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_project_create_date_isValid = ::OpenAPI::fromJsonValue(m_project_create_date, json[QString("project_create_date")]);
    m_project_create_date_isSet = !json[QString("project_create_date")].isNull() && m_project_create_date_isValid;

    m_project_description_isValid = ::OpenAPI::fromJsonValue(m_project_description, json[QString("project_description")]);
    m_project_description_isSet = !json[QString("project_description")].isNull() && m_project_description_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("project_id")]);
    m_project_id_isSet = !json[QString("project_id")].isNull() && m_project_id_isValid;

    m_project_name_isValid = ::OpenAPI::fromJsonValue(m_project_name, json[QString("project_name")]);
    m_project_name_isSet = !json[QString("project_name")].isNull() && m_project_name_isValid;

    m_project_number_isValid = ::OpenAPI::fromJsonValue(m_project_number, json[QString("project_number")]);
    m_project_number_isSet = !json[QString("project_number")].isNull() && m_project_number_isValid;
}

QString OAIProjectParentVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectParentVO::asJsonObject() const {
    QJsonObject obj;
    if (m_client_account_isSet) {
        obj.insert(QString("client_account"), ::OpenAPI::toJsonValue(m_client_account));
    }
    if (m_client_user_isSet) {
        obj.insert(QString("client_user"), ::OpenAPI::toJsonValue(m_client_user));
    }
    if (m_client_user_id_isSet) {
        obj.insert(QString("client_user_id"), ::OpenAPI::toJsonValue(m_client_user_id));
    }
    if (m_client_workgroup_id_isSet) {
        obj.insert(QString("client_workgroup_id"), ::OpenAPI::toJsonValue(m_client_workgroup_id));
    }
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_project_create_date_isSet) {
        obj.insert(QString("project_create_date"), ::OpenAPI::toJsonValue(m_project_create_date));
    }
    if (m_project_description_isSet) {
        obj.insert(QString("project_description"), ::OpenAPI::toJsonValue(m_project_description));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("project_id"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_project_name_isSet) {
        obj.insert(QString("project_name"), ::OpenAPI::toJsonValue(m_project_name));
    }
    if (m_project_number_isSet) {
        obj.insert(QString("project_number"), ::OpenAPI::toJsonValue(m_project_number));
    }
    return obj;
}

QString OAIProjectParentVO::getClientAccount() const {
    return m_client_account;
}
void OAIProjectParentVO::setClientAccount(const QString &client_account) {
    m_client_account = client_account;
    m_client_account_isSet = true;
}

bool OAIProjectParentVO::is_client_account_Set() const{
    return m_client_account_isSet;
}

bool OAIProjectParentVO::is_client_account_Valid() const{
    return m_client_account_isValid;
}

QString OAIProjectParentVO::getClientUser() const {
    return m_client_user;
}
void OAIProjectParentVO::setClientUser(const QString &client_user) {
    m_client_user = client_user;
    m_client_user_isSet = true;
}

bool OAIProjectParentVO::is_client_user_Set() const{
    return m_client_user_isSet;
}

bool OAIProjectParentVO::is_client_user_Valid() const{
    return m_client_user_isValid;
}

qint64 OAIProjectParentVO::getClientUserId() const {
    return m_client_user_id;
}
void OAIProjectParentVO::setClientUserId(const qint64 &client_user_id) {
    m_client_user_id = client_user_id;
    m_client_user_id_isSet = true;
}

bool OAIProjectParentVO::is_client_user_id_Set() const{
    return m_client_user_id_isSet;
}

bool OAIProjectParentVO::is_client_user_id_Valid() const{
    return m_client_user_id_isValid;
}

qint64 OAIProjectParentVO::getClientWorkgroupId() const {
    return m_client_workgroup_id;
}
void OAIProjectParentVO::setClientWorkgroupId(const qint64 &client_workgroup_id) {
    m_client_workgroup_id = client_workgroup_id;
    m_client_workgroup_id_isSet = true;
}

bool OAIProjectParentVO::is_client_workgroup_id_Set() const{
    return m_client_workgroup_id_isSet;
}

bool OAIProjectParentVO::is_client_workgroup_id_Valid() const{
    return m_client_workgroup_id_isValid;
}

QString OAIProjectParentVO::getComments() const {
    return m_comments;
}
void OAIProjectParentVO::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIProjectParentVO::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIProjectParentVO::is_comments_Valid() const{
    return m_comments_isValid;
}

OAIPersonVO OAIProjectParentVO::getCreatedBy() const {
    return m_created_by;
}
void OAIProjectParentVO::setCreatedBy(const OAIPersonVO &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIProjectParentVO::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIProjectParentVO::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDate OAIProjectParentVO::getProjectCreateDate() const {
    return m_project_create_date;
}
void OAIProjectParentVO::setProjectCreateDate(const QDate &project_create_date) {
    m_project_create_date = project_create_date;
    m_project_create_date_isSet = true;
}

bool OAIProjectParentVO::is_project_create_date_Set() const{
    return m_project_create_date_isSet;
}

bool OAIProjectParentVO::is_project_create_date_Valid() const{
    return m_project_create_date_isValid;
}

QString OAIProjectParentVO::getProjectDescription() const {
    return m_project_description;
}
void OAIProjectParentVO::setProjectDescription(const QString &project_description) {
    m_project_description = project_description;
    m_project_description_isSet = true;
}

bool OAIProjectParentVO::is_project_description_Set() const{
    return m_project_description_isSet;
}

bool OAIProjectParentVO::is_project_description_Valid() const{
    return m_project_description_isValid;
}

qint64 OAIProjectParentVO::getProjectId() const {
    return m_project_id;
}
void OAIProjectParentVO::setProjectId(const qint64 &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIProjectParentVO::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIProjectParentVO::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIProjectParentVO::getProjectName() const {
    return m_project_name;
}
void OAIProjectParentVO::setProjectName(const QString &project_name) {
    m_project_name = project_name;
    m_project_name_isSet = true;
}

bool OAIProjectParentVO::is_project_name_Set() const{
    return m_project_name_isSet;
}

bool OAIProjectParentVO::is_project_name_Valid() const{
    return m_project_name_isValid;
}

QString OAIProjectParentVO::getProjectNumber() const {
    return m_project_number;
}
void OAIProjectParentVO::setProjectNumber(const QString &project_number) {
    m_project_number = project_number;
    m_project_number_isSet = true;
}

bool OAIProjectParentVO::is_project_number_Set() const{
    return m_project_number_isSet;
}

bool OAIProjectParentVO::is_project_number_Valid() const{
    return m_project_number_isValid;
}

bool OAIProjectParentVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_create_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectParentVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
