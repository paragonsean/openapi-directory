/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceItemDetailVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceItemDetailVO::OAIInvoiceItemDetailVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceItemDetailVO::OAIInvoiceItemDetailVO() {
    this->initializeModel();
}

OAIInvoiceItemDetailVO::~OAIInvoiceItemDetailVO() {}

void OAIInvoiceItemDetailVO::initializeModel() {

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_invoice_item_id_isSet = false;
    m_invoice_item_id_isValid = false;

    m_item_cost_isSet = false;
    m_item_cost_isValid = false;

    m_item_quantity_isSet = false;
    m_item_quantity_isValid = false;

    m_item_shipping_isSet = false;
    m_item_shipping_isValid = false;

    m_item_sub_total_isSet = false;
    m_item_sub_total_isValid = false;

    m_item_tax_isSet = false;
    m_item_tax_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_shipment_id_isSet = false;
    m_shipment_id_isValid = false;

    m_spec_name_isSet = false;
    m_spec_name_isValid = false;

    m_transactional_item_cost_isSet = false;
    m_transactional_item_cost_isValid = false;

    m_transactional_item_shipping_isSet = false;
    m_transactional_item_shipping_isValid = false;

    m_transactional_item_sub_total_isSet = false;
    m_transactional_item_sub_total_isValid = false;

    m_transactional_item_tax_isSet = false;
    m_transactional_item_tax_isValid = false;
}

void OAIInvoiceItemDetailVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceItemDetailVO::fromJsonObject(QJsonObject json) {

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_invoice_item_id_isValid = ::OpenAPI::fromJsonValue(m_invoice_item_id, json[QString("invoice_item_id")]);
    m_invoice_item_id_isSet = !json[QString("invoice_item_id")].isNull() && m_invoice_item_id_isValid;

    m_item_cost_isValid = ::OpenAPI::fromJsonValue(m_item_cost, json[QString("item_cost")]);
    m_item_cost_isSet = !json[QString("item_cost")].isNull() && m_item_cost_isValid;

    m_item_quantity_isValid = ::OpenAPI::fromJsonValue(m_item_quantity, json[QString("item_quantity")]);
    m_item_quantity_isSet = !json[QString("item_quantity")].isNull() && m_item_quantity_isValid;

    m_item_shipping_isValid = ::OpenAPI::fromJsonValue(m_item_shipping, json[QString("item_shipping")]);
    m_item_shipping_isSet = !json[QString("item_shipping")].isNull() && m_item_shipping_isValid;

    m_item_sub_total_isValid = ::OpenAPI::fromJsonValue(m_item_sub_total, json[QString("item_sub_total")]);
    m_item_sub_total_isSet = !json[QString("item_sub_total")].isNull() && m_item_sub_total_isValid;

    m_item_tax_isValid = ::OpenAPI::fromJsonValue(m_item_tax, json[QString("item_tax")]);
    m_item_tax_isSet = !json[QString("item_tax")].isNull() && m_item_tax_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("job_id")]);
    m_job_id_isSet = !json[QString("job_id")].isNull() && m_job_id_isValid;

    m_shipment_id_isValid = ::OpenAPI::fromJsonValue(m_shipment_id, json[QString("shipment_id")]);
    m_shipment_id_isSet = !json[QString("shipment_id")].isNull() && m_shipment_id_isValid;

    m_spec_name_isValid = ::OpenAPI::fromJsonValue(m_spec_name, json[QString("spec_name")]);
    m_spec_name_isSet = !json[QString("spec_name")].isNull() && m_spec_name_isValid;

    m_transactional_item_cost_isValid = ::OpenAPI::fromJsonValue(m_transactional_item_cost, json[QString("transactional_item_cost")]);
    m_transactional_item_cost_isSet = !json[QString("transactional_item_cost")].isNull() && m_transactional_item_cost_isValid;

    m_transactional_item_shipping_isValid = ::OpenAPI::fromJsonValue(m_transactional_item_shipping, json[QString("transactional_item_shipping")]);
    m_transactional_item_shipping_isSet = !json[QString("transactional_item_shipping")].isNull() && m_transactional_item_shipping_isValid;

    m_transactional_item_sub_total_isValid = ::OpenAPI::fromJsonValue(m_transactional_item_sub_total, json[QString("transactional_item_sub_total")]);
    m_transactional_item_sub_total_isSet = !json[QString("transactional_item_sub_total")].isNull() && m_transactional_item_sub_total_isValid;

    m_transactional_item_tax_isValid = ::OpenAPI::fromJsonValue(m_transactional_item_tax, json[QString("transactional_item_tax")]);
    m_transactional_item_tax_isSet = !json[QString("transactional_item_tax")].isNull() && m_transactional_item_tax_isValid;
}

QString OAIInvoiceItemDetailVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceItemDetailVO::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_invoice_item_id_isSet) {
        obj.insert(QString("invoice_item_id"), ::OpenAPI::toJsonValue(m_invoice_item_id));
    }
    if (m_item_cost_isSet) {
        obj.insert(QString("item_cost"), ::OpenAPI::toJsonValue(m_item_cost));
    }
    if (m_item_quantity_isSet) {
        obj.insert(QString("item_quantity"), ::OpenAPI::toJsonValue(m_item_quantity));
    }
    if (m_item_shipping_isSet) {
        obj.insert(QString("item_shipping"), ::OpenAPI::toJsonValue(m_item_shipping));
    }
    if (m_item_sub_total_isSet) {
        obj.insert(QString("item_sub_total"), ::OpenAPI::toJsonValue(m_item_sub_total));
    }
    if (m_item_tax_isSet) {
        obj.insert(QString("item_tax"), ::OpenAPI::toJsonValue(m_item_tax));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("job_id"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_shipment_id_isSet) {
        obj.insert(QString("shipment_id"), ::OpenAPI::toJsonValue(m_shipment_id));
    }
    if (m_spec_name_isSet) {
        obj.insert(QString("spec_name"), ::OpenAPI::toJsonValue(m_spec_name));
    }
    if (m_transactional_item_cost_isSet) {
        obj.insert(QString("transactional_item_cost"), ::OpenAPI::toJsonValue(m_transactional_item_cost));
    }
    if (m_transactional_item_shipping_isSet) {
        obj.insert(QString("transactional_item_shipping"), ::OpenAPI::toJsonValue(m_transactional_item_shipping));
    }
    if (m_transactional_item_sub_total_isSet) {
        obj.insert(QString("transactional_item_sub_total"), ::OpenAPI::toJsonValue(m_transactional_item_sub_total));
    }
    if (m_transactional_item_tax_isSet) {
        obj.insert(QString("transactional_item_tax"), ::OpenAPI::toJsonValue(m_transactional_item_tax));
    }
    return obj;
}

QList<OAIPropertyPaAndAttVO> OAIInvoiceItemDetailVO::getCustomFields() const {
    return m_custom_fields;
}
void OAIInvoiceItemDetailVO::setCustomFields(const QList<OAIPropertyPaAndAttVO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIInvoiceItemDetailVO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

qint64 OAIInvoiceItemDetailVO::getInvoiceItemId() const {
    return m_invoice_item_id;
}
void OAIInvoiceItemDetailVO::setInvoiceItemId(const qint64 &invoice_item_id) {
    m_invoice_item_id = invoice_item_id;
    m_invoice_item_id_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_invoice_item_id_Set() const{
    return m_invoice_item_id_isSet;
}

bool OAIInvoiceItemDetailVO::is_invoice_item_id_Valid() const{
    return m_invoice_item_id_isValid;
}

QJsonValue OAIInvoiceItemDetailVO::getItemCost() const {
    return m_item_cost;
}
void OAIInvoiceItemDetailVO::setItemCost(const QJsonValue &item_cost) {
    m_item_cost = item_cost;
    m_item_cost_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_item_cost_Set() const{
    return m_item_cost_isSet;
}

bool OAIInvoiceItemDetailVO::is_item_cost_Valid() const{
    return m_item_cost_isValid;
}

qint64 OAIInvoiceItemDetailVO::getItemQuantity() const {
    return m_item_quantity;
}
void OAIInvoiceItemDetailVO::setItemQuantity(const qint64 &item_quantity) {
    m_item_quantity = item_quantity;
    m_item_quantity_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_item_quantity_Set() const{
    return m_item_quantity_isSet;
}

bool OAIInvoiceItemDetailVO::is_item_quantity_Valid() const{
    return m_item_quantity_isValid;
}

QJsonValue OAIInvoiceItemDetailVO::getItemShipping() const {
    return m_item_shipping;
}
void OAIInvoiceItemDetailVO::setItemShipping(const QJsonValue &item_shipping) {
    m_item_shipping = item_shipping;
    m_item_shipping_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_item_shipping_Set() const{
    return m_item_shipping_isSet;
}

bool OAIInvoiceItemDetailVO::is_item_shipping_Valid() const{
    return m_item_shipping_isValid;
}

QJsonValue OAIInvoiceItemDetailVO::getItemSubTotal() const {
    return m_item_sub_total;
}
void OAIInvoiceItemDetailVO::setItemSubTotal(const QJsonValue &item_sub_total) {
    m_item_sub_total = item_sub_total;
    m_item_sub_total_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_item_sub_total_Set() const{
    return m_item_sub_total_isSet;
}

bool OAIInvoiceItemDetailVO::is_item_sub_total_Valid() const{
    return m_item_sub_total_isValid;
}

QJsonValue OAIInvoiceItemDetailVO::getItemTax() const {
    return m_item_tax;
}
void OAIInvoiceItemDetailVO::setItemTax(const QJsonValue &item_tax) {
    m_item_tax = item_tax;
    m_item_tax_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_item_tax_Set() const{
    return m_item_tax_isSet;
}

bool OAIInvoiceItemDetailVO::is_item_tax_Valid() const{
    return m_item_tax_isValid;
}

qint64 OAIInvoiceItemDetailVO::getJobId() const {
    return m_job_id;
}
void OAIInvoiceItemDetailVO::setJobId(const qint64 &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIInvoiceItemDetailVO::is_job_id_Valid() const{
    return m_job_id_isValid;
}

qint64 OAIInvoiceItemDetailVO::getShipmentId() const {
    return m_shipment_id;
}
void OAIInvoiceItemDetailVO::setShipmentId(const qint64 &shipment_id) {
    m_shipment_id = shipment_id;
    m_shipment_id_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_shipment_id_Set() const{
    return m_shipment_id_isSet;
}

bool OAIInvoiceItemDetailVO::is_shipment_id_Valid() const{
    return m_shipment_id_isValid;
}

QString OAIInvoiceItemDetailVO::getSpecName() const {
    return m_spec_name;
}
void OAIInvoiceItemDetailVO::setSpecName(const QString &spec_name) {
    m_spec_name = spec_name;
    m_spec_name_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_spec_name_Set() const{
    return m_spec_name_isSet;
}

bool OAIInvoiceItemDetailVO::is_spec_name_Valid() const{
    return m_spec_name_isValid;
}

QJsonValue OAIInvoiceItemDetailVO::getTransactionalItemCost() const {
    return m_transactional_item_cost;
}
void OAIInvoiceItemDetailVO::setTransactionalItemCost(const QJsonValue &transactional_item_cost) {
    m_transactional_item_cost = transactional_item_cost;
    m_transactional_item_cost_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_transactional_item_cost_Set() const{
    return m_transactional_item_cost_isSet;
}

bool OAIInvoiceItemDetailVO::is_transactional_item_cost_Valid() const{
    return m_transactional_item_cost_isValid;
}

QJsonValue OAIInvoiceItemDetailVO::getTransactionalItemShipping() const {
    return m_transactional_item_shipping;
}
void OAIInvoiceItemDetailVO::setTransactionalItemShipping(const QJsonValue &transactional_item_shipping) {
    m_transactional_item_shipping = transactional_item_shipping;
    m_transactional_item_shipping_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_transactional_item_shipping_Set() const{
    return m_transactional_item_shipping_isSet;
}

bool OAIInvoiceItemDetailVO::is_transactional_item_shipping_Valid() const{
    return m_transactional_item_shipping_isValid;
}

QJsonValue OAIInvoiceItemDetailVO::getTransactionalItemSubTotal() const {
    return m_transactional_item_sub_total;
}
void OAIInvoiceItemDetailVO::setTransactionalItemSubTotal(const QJsonValue &transactional_item_sub_total) {
    m_transactional_item_sub_total = transactional_item_sub_total;
    m_transactional_item_sub_total_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_transactional_item_sub_total_Set() const{
    return m_transactional_item_sub_total_isSet;
}

bool OAIInvoiceItemDetailVO::is_transactional_item_sub_total_Valid() const{
    return m_transactional_item_sub_total_isValid;
}

QJsonValue OAIInvoiceItemDetailVO::getTransactionalItemTax() const {
    return m_transactional_item_tax;
}
void OAIInvoiceItemDetailVO::setTransactionalItemTax(const QJsonValue &transactional_item_tax) {
    m_transactional_item_tax = transactional_item_tax;
    m_transactional_item_tax_isSet = true;
}

bool OAIInvoiceItemDetailVO::is_transactional_item_tax_Set() const{
    return m_transactional_item_tax_isSet;
}

bool OAIInvoiceItemDetailVO::is_transactional_item_tax_Valid() const{
    return m_transactional_item_tax_isValid;
}

bool OAIInvoiceItemDetailVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_sub_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_item_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_item_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_item_sub_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_item_tax_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceItemDetailVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
