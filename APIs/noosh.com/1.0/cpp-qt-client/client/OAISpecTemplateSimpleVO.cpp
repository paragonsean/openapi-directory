/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISpecTemplateSimpleVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISpecTemplateSimpleVO::OAISpecTemplateSimpleVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISpecTemplateSimpleVO::OAISpecTemplateSimpleVO() {
    this->initializeModel();
}

OAISpecTemplateSimpleVO::~OAISpecTemplateSimpleVO() {}

void OAISpecTemplateSimpleVO::initializeModel() {

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_is_externally_published_isSet = false;
    m_is_externally_published_isValid = false;

    m_is_locked_isSet = false;
    m_is_locked_isValid = false;

    m_last_updated_date_isSet = false;
    m_last_updated_date_isValid = false;

    m_spec_template_id_isSet = false;
    m_spec_template_id_isValid = false;

    m_spec_template_name_isSet = false;
    m_spec_template_name_isValid = false;
}

void OAISpecTemplateSimpleVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISpecTemplateSimpleVO::fromJsonObject(QJsonObject json) {

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("created_date")]);
    m_created_date_isSet = !json[QString("created_date")].isNull() && m_created_date_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("is_active")]);
    m_is_active_isSet = !json[QString("is_active")].isNull() && m_is_active_isValid;

    m_is_externally_published_isValid = ::OpenAPI::fromJsonValue(m_is_externally_published, json[QString("is_externally_published")]);
    m_is_externally_published_isSet = !json[QString("is_externally_published")].isNull() && m_is_externally_published_isValid;

    m_is_locked_isValid = ::OpenAPI::fromJsonValue(m_is_locked, json[QString("is_locked")]);
    m_is_locked_isSet = !json[QString("is_locked")].isNull() && m_is_locked_isValid;

    m_last_updated_date_isValid = ::OpenAPI::fromJsonValue(m_last_updated_date, json[QString("last_updated_date")]);
    m_last_updated_date_isSet = !json[QString("last_updated_date")].isNull() && m_last_updated_date_isValid;

    m_spec_template_id_isValid = ::OpenAPI::fromJsonValue(m_spec_template_id, json[QString("spec_template_id")]);
    m_spec_template_id_isSet = !json[QString("spec_template_id")].isNull() && m_spec_template_id_isValid;

    m_spec_template_name_isValid = ::OpenAPI::fromJsonValue(m_spec_template_name, json[QString("spec_template_name")]);
    m_spec_template_name_isSet = !json[QString("spec_template_name")].isNull() && m_spec_template_name_isValid;
}

QString OAISpecTemplateSimpleVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISpecTemplateSimpleVO::asJsonObject() const {
    QJsonObject obj;
    if (m_created_by.isSet()) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("created_date"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("is_active"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_is_externally_published_isSet) {
        obj.insert(QString("is_externally_published"), ::OpenAPI::toJsonValue(m_is_externally_published));
    }
    if (m_is_locked_isSet) {
        obj.insert(QString("is_locked"), ::OpenAPI::toJsonValue(m_is_locked));
    }
    if (m_last_updated_date_isSet) {
        obj.insert(QString("last_updated_date"), ::OpenAPI::toJsonValue(m_last_updated_date));
    }
    if (m_spec_template_id_isSet) {
        obj.insert(QString("spec_template_id"), ::OpenAPI::toJsonValue(m_spec_template_id));
    }
    if (m_spec_template_name_isSet) {
        obj.insert(QString("spec_template_name"), ::OpenAPI::toJsonValue(m_spec_template_name));
    }
    return obj;
}

OAIPersonVO OAISpecTemplateSimpleVO::getCreatedBy() const {
    return m_created_by;
}
void OAISpecTemplateSimpleVO::setCreatedBy(const OAIPersonVO &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAISpecTemplateSimpleVO::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAISpecTemplateSimpleVO::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDate OAISpecTemplateSimpleVO::getCreatedDate() const {
    return m_created_date;
}
void OAISpecTemplateSimpleVO::setCreatedDate(const QDate &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAISpecTemplateSimpleVO::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAISpecTemplateSimpleVO::is_created_date_Valid() const{
    return m_created_date_isValid;
}

bool OAISpecTemplateSimpleVO::isIsActive() const {
    return m_is_active;
}
void OAISpecTemplateSimpleVO::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAISpecTemplateSimpleVO::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAISpecTemplateSimpleVO::is_is_active_Valid() const{
    return m_is_active_isValid;
}

bool OAISpecTemplateSimpleVO::isIsExternallyPublished() const {
    return m_is_externally_published;
}
void OAISpecTemplateSimpleVO::setIsExternallyPublished(const bool &is_externally_published) {
    m_is_externally_published = is_externally_published;
    m_is_externally_published_isSet = true;
}

bool OAISpecTemplateSimpleVO::is_is_externally_published_Set() const{
    return m_is_externally_published_isSet;
}

bool OAISpecTemplateSimpleVO::is_is_externally_published_Valid() const{
    return m_is_externally_published_isValid;
}

bool OAISpecTemplateSimpleVO::isIsLocked() const {
    return m_is_locked;
}
void OAISpecTemplateSimpleVO::setIsLocked(const bool &is_locked) {
    m_is_locked = is_locked;
    m_is_locked_isSet = true;
}

bool OAISpecTemplateSimpleVO::is_is_locked_Set() const{
    return m_is_locked_isSet;
}

bool OAISpecTemplateSimpleVO::is_is_locked_Valid() const{
    return m_is_locked_isValid;
}

QDate OAISpecTemplateSimpleVO::getLastUpdatedDate() const {
    return m_last_updated_date;
}
void OAISpecTemplateSimpleVO::setLastUpdatedDate(const QDate &last_updated_date) {
    m_last_updated_date = last_updated_date;
    m_last_updated_date_isSet = true;
}

bool OAISpecTemplateSimpleVO::is_last_updated_date_Set() const{
    return m_last_updated_date_isSet;
}

bool OAISpecTemplateSimpleVO::is_last_updated_date_Valid() const{
    return m_last_updated_date_isValid;
}

qint64 OAISpecTemplateSimpleVO::getSpecTemplateId() const {
    return m_spec_template_id;
}
void OAISpecTemplateSimpleVO::setSpecTemplateId(const qint64 &spec_template_id) {
    m_spec_template_id = spec_template_id;
    m_spec_template_id_isSet = true;
}

bool OAISpecTemplateSimpleVO::is_spec_template_id_Set() const{
    return m_spec_template_id_isSet;
}

bool OAISpecTemplateSimpleVO::is_spec_template_id_Valid() const{
    return m_spec_template_id_isValid;
}

QString OAISpecTemplateSimpleVO::getSpecTemplateName() const {
    return m_spec_template_name;
}
void OAISpecTemplateSimpleVO::setSpecTemplateName(const QString &spec_template_name) {
    m_spec_template_name = spec_template_name;
    m_spec_template_name_isSet = true;
}

bool OAISpecTemplateSimpleVO::is_spec_template_name_Set() const{
    return m_spec_template_name_isSet;
}

bool OAISpecTemplateSimpleVO::is_spec_template_name_Valid() const{
    return m_spec_template_name_isValid;
}

bool OAISpecTemplateSimpleVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_externally_published_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_locked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_template_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISpecTemplateSimpleVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
