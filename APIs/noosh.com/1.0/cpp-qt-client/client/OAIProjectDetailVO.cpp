/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectDetailVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectDetailVO::OAIProjectDetailVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectDetailVO::OAIProjectDetailVO() {
    this->initializeModel();
}

OAIProjectDetailVO::~OAIProjectDetailVO() {}

void OAIProjectDetailVO::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_client_account_isSet = false;
    m_client_account_isValid = false;

    m_client_user_isSet = false;
    m_client_user_isValid = false;

    m_client_user_id_isSet = false;
    m_client_user_id_isValid = false;

    m_client_workgroup_id_isSet = false;
    m_client_workgroup_id_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_completion_date_isSet = false;
    m_completion_date_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_deactivation_reason_isSet = false;
    m_deactivation_reason_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_is_hot_isSet = false;
    m_is_hot_isValid = false;

    m_last_spec_update_isSet = false;
    m_last_spec_update_isValid = false;

    m_mod_date_isSet = false;
    m_mod_date_isValid = false;

    m_owner_workgroup_isSet = false;
    m_owner_workgroup_isValid = false;

    m_parent_project_isSet = false;
    m_parent_project_isValid = false;

    m_project_create_date_isSet = false;
    m_project_create_date_isValid = false;

    m_project_description_isSet = false;
    m_project_description_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_project_name_isSet = false;
    m_project_name_isValid = false;

    m_project_number_isSet = false;
    m_project_number_isValid = false;

    m_project_status_isSet = false;
    m_project_status_isValid = false;

    m_team_owners_isSet = false;
    m_team_owners_isValid = false;
}

void OAIProjectDetailVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectDetailVO::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_client_account_isValid = ::OpenAPI::fromJsonValue(m_client_account, json[QString("client_account")]);
    m_client_account_isSet = !json[QString("client_account")].isNull() && m_client_account_isValid;

    m_client_user_isValid = ::OpenAPI::fromJsonValue(m_client_user, json[QString("client_user")]);
    m_client_user_isSet = !json[QString("client_user")].isNull() && m_client_user_isValid;

    m_client_user_id_isValid = ::OpenAPI::fromJsonValue(m_client_user_id, json[QString("client_user_id")]);
    m_client_user_id_isSet = !json[QString("client_user_id")].isNull() && m_client_user_id_isValid;

    m_client_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_client_workgroup_id, json[QString("client_workgroup_id")]);
    m_client_workgroup_id_isSet = !json[QString("client_workgroup_id")].isNull() && m_client_workgroup_id_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_completion_date_isValid = ::OpenAPI::fromJsonValue(m_completion_date, json[QString("completion_date")]);
    m_completion_date_isSet = !json[QString("completion_date")].isNull() && m_completion_date_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_deactivation_reason_isValid = ::OpenAPI::fromJsonValue(m_deactivation_reason, json[QString("deactivation_reason")]);
    m_deactivation_reason_isSet = !json[QString("deactivation_reason")].isNull() && m_deactivation_reason_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("is_active")]);
    m_is_active_isSet = !json[QString("is_active")].isNull() && m_is_active_isValid;

    m_is_hot_isValid = ::OpenAPI::fromJsonValue(m_is_hot, json[QString("is_hot")]);
    m_is_hot_isSet = !json[QString("is_hot")].isNull() && m_is_hot_isValid;

    m_last_spec_update_isValid = ::OpenAPI::fromJsonValue(m_last_spec_update, json[QString("last_spec_update")]);
    m_last_spec_update_isSet = !json[QString("last_spec_update")].isNull() && m_last_spec_update_isValid;

    m_mod_date_isValid = ::OpenAPI::fromJsonValue(m_mod_date, json[QString("mod_date")]);
    m_mod_date_isSet = !json[QString("mod_date")].isNull() && m_mod_date_isValid;

    m_owner_workgroup_isValid = ::OpenAPI::fromJsonValue(m_owner_workgroup, json[QString("owner_workgroup")]);
    m_owner_workgroup_isSet = !json[QString("owner_workgroup")].isNull() && m_owner_workgroup_isValid;

    m_parent_project_isValid = ::OpenAPI::fromJsonValue(m_parent_project, json[QString("parent_project")]);
    m_parent_project_isSet = !json[QString("parent_project")].isNull() && m_parent_project_isValid;

    m_project_create_date_isValid = ::OpenAPI::fromJsonValue(m_project_create_date, json[QString("project_create_date")]);
    m_project_create_date_isSet = !json[QString("project_create_date")].isNull() && m_project_create_date_isValid;

    m_project_description_isValid = ::OpenAPI::fromJsonValue(m_project_description, json[QString("project_description")]);
    m_project_description_isSet = !json[QString("project_description")].isNull() && m_project_description_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("project_id")]);
    m_project_id_isSet = !json[QString("project_id")].isNull() && m_project_id_isValid;

    m_project_name_isValid = ::OpenAPI::fromJsonValue(m_project_name, json[QString("project_name")]);
    m_project_name_isSet = !json[QString("project_name")].isNull() && m_project_name_isValid;

    m_project_number_isValid = ::OpenAPI::fromJsonValue(m_project_number, json[QString("project_number")]);
    m_project_number_isSet = !json[QString("project_number")].isNull() && m_project_number_isValid;

    m_project_status_isValid = ::OpenAPI::fromJsonValue(m_project_status, json[QString("project_status")]);
    m_project_status_isSet = !json[QString("project_status")].isNull() && m_project_status_isValid;

    m_team_owners_isValid = ::OpenAPI::fromJsonValue(m_team_owners, json[QString("team_owners")]);
    m_team_owners_isSet = !json[QString("team_owners")].isNull() && m_team_owners_isValid;
}

QString OAIProjectDetailVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectDetailVO::asJsonObject() const {
    QJsonObject obj;
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_client_account_isSet) {
        obj.insert(QString("client_account"), ::OpenAPI::toJsonValue(m_client_account));
    }
    if (m_client_user_isSet) {
        obj.insert(QString("client_user"), ::OpenAPI::toJsonValue(m_client_user));
    }
    if (m_client_user_id_isSet) {
        obj.insert(QString("client_user_id"), ::OpenAPI::toJsonValue(m_client_user_id));
    }
    if (m_client_workgroup_id_isSet) {
        obj.insert(QString("client_workgroup_id"), ::OpenAPI::toJsonValue(m_client_workgroup_id));
    }
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_completion_date_isSet) {
        obj.insert(QString("completion_date"), ::OpenAPI::toJsonValue(m_completion_date));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_deactivation_reason_isSet) {
        obj.insert(QString("deactivation_reason"), ::OpenAPI::toJsonValue(m_deactivation_reason));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("is_active"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_is_hot_isSet) {
        obj.insert(QString("is_hot"), ::OpenAPI::toJsonValue(m_is_hot));
    }
    if (m_last_spec_update_isSet) {
        obj.insert(QString("last_spec_update"), ::OpenAPI::toJsonValue(m_last_spec_update));
    }
    if (m_mod_date_isSet) {
        obj.insert(QString("mod_date"), ::OpenAPI::toJsonValue(m_mod_date));
    }
    if (m_owner_workgroup_isSet) {
        obj.insert(QString("owner_workgroup"), ::OpenAPI::toJsonValue(m_owner_workgroup));
    }
    if (m_parent_project.isSet()) {
        obj.insert(QString("parent_project"), ::OpenAPI::toJsonValue(m_parent_project));
    }
    if (m_project_create_date_isSet) {
        obj.insert(QString("project_create_date"), ::OpenAPI::toJsonValue(m_project_create_date));
    }
    if (m_project_description_isSet) {
        obj.insert(QString("project_description"), ::OpenAPI::toJsonValue(m_project_description));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("project_id"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_project_name_isSet) {
        obj.insert(QString("project_name"), ::OpenAPI::toJsonValue(m_project_name));
    }
    if (m_project_number_isSet) {
        obj.insert(QString("project_number"), ::OpenAPI::toJsonValue(m_project_number));
    }
    if (m_project_status_isSet) {
        obj.insert(QString("project_status"), ::OpenAPI::toJsonValue(m_project_status));
    }
    if (m_team_owners_isSet) {
        obj.insert(QString("team_owners"), ::OpenAPI::toJsonValue(m_team_owners));
    }
    return obj;
}

QString OAIProjectDetailVO::getCategory() const {
    return m_category;
}
void OAIProjectDetailVO::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIProjectDetailVO::is_category_Set() const{
    return m_category_isSet;
}

bool OAIProjectDetailVO::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIProjectDetailVO::getClientAccount() const {
    return m_client_account;
}
void OAIProjectDetailVO::setClientAccount(const QString &client_account) {
    m_client_account = client_account;
    m_client_account_isSet = true;
}

bool OAIProjectDetailVO::is_client_account_Set() const{
    return m_client_account_isSet;
}

bool OAIProjectDetailVO::is_client_account_Valid() const{
    return m_client_account_isValid;
}

QString OAIProjectDetailVO::getClientUser() const {
    return m_client_user;
}
void OAIProjectDetailVO::setClientUser(const QString &client_user) {
    m_client_user = client_user;
    m_client_user_isSet = true;
}

bool OAIProjectDetailVO::is_client_user_Set() const{
    return m_client_user_isSet;
}

bool OAIProjectDetailVO::is_client_user_Valid() const{
    return m_client_user_isValid;
}

qint64 OAIProjectDetailVO::getClientUserId() const {
    return m_client_user_id;
}
void OAIProjectDetailVO::setClientUserId(const qint64 &client_user_id) {
    m_client_user_id = client_user_id;
    m_client_user_id_isSet = true;
}

bool OAIProjectDetailVO::is_client_user_id_Set() const{
    return m_client_user_id_isSet;
}

bool OAIProjectDetailVO::is_client_user_id_Valid() const{
    return m_client_user_id_isValid;
}

qint64 OAIProjectDetailVO::getClientWorkgroupId() const {
    return m_client_workgroup_id;
}
void OAIProjectDetailVO::setClientWorkgroupId(const qint64 &client_workgroup_id) {
    m_client_workgroup_id = client_workgroup_id;
    m_client_workgroup_id_isSet = true;
}

bool OAIProjectDetailVO::is_client_workgroup_id_Set() const{
    return m_client_workgroup_id_isSet;
}

bool OAIProjectDetailVO::is_client_workgroup_id_Valid() const{
    return m_client_workgroup_id_isValid;
}

QString OAIProjectDetailVO::getComments() const {
    return m_comments;
}
void OAIProjectDetailVO::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIProjectDetailVO::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIProjectDetailVO::is_comments_Valid() const{
    return m_comments_isValid;
}

QDate OAIProjectDetailVO::getCompletionDate() const {
    return m_completion_date;
}
void OAIProjectDetailVO::setCompletionDate(const QDate &completion_date) {
    m_completion_date = completion_date;
    m_completion_date_isSet = true;
}

bool OAIProjectDetailVO::is_completion_date_Set() const{
    return m_completion_date_isSet;
}

bool OAIProjectDetailVO::is_completion_date_Valid() const{
    return m_completion_date_isValid;
}

QList<OAIPropertyPaAndAttVO> OAIProjectDetailVO::getCustomFields() const {
    return m_custom_fields;
}
void OAIProjectDetailVO::setCustomFields(const QList<OAIPropertyPaAndAttVO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIProjectDetailVO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIProjectDetailVO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QString OAIProjectDetailVO::getDeactivationReason() const {
    return m_deactivation_reason;
}
void OAIProjectDetailVO::setDeactivationReason(const QString &deactivation_reason) {
    m_deactivation_reason = deactivation_reason;
    m_deactivation_reason_isSet = true;
}

bool OAIProjectDetailVO::is_deactivation_reason_Set() const{
    return m_deactivation_reason_isSet;
}

bool OAIProjectDetailVO::is_deactivation_reason_Valid() const{
    return m_deactivation_reason_isValid;
}

bool OAIProjectDetailVO::isIsActive() const {
    return m_is_active;
}
void OAIProjectDetailVO::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIProjectDetailVO::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIProjectDetailVO::is_is_active_Valid() const{
    return m_is_active_isValid;
}

bool OAIProjectDetailVO::isIsHot() const {
    return m_is_hot;
}
void OAIProjectDetailVO::setIsHot(const bool &is_hot) {
    m_is_hot = is_hot;
    m_is_hot_isSet = true;
}

bool OAIProjectDetailVO::is_is_hot_Set() const{
    return m_is_hot_isSet;
}

bool OAIProjectDetailVO::is_is_hot_Valid() const{
    return m_is_hot_isValid;
}

QDate OAIProjectDetailVO::getLastSpecUpdate() const {
    return m_last_spec_update;
}
void OAIProjectDetailVO::setLastSpecUpdate(const QDate &last_spec_update) {
    m_last_spec_update = last_spec_update;
    m_last_spec_update_isSet = true;
}

bool OAIProjectDetailVO::is_last_spec_update_Set() const{
    return m_last_spec_update_isSet;
}

bool OAIProjectDetailVO::is_last_spec_update_Valid() const{
    return m_last_spec_update_isValid;
}

QDate OAIProjectDetailVO::getModDate() const {
    return m_mod_date;
}
void OAIProjectDetailVO::setModDate(const QDate &mod_date) {
    m_mod_date = mod_date;
    m_mod_date_isSet = true;
}

bool OAIProjectDetailVO::is_mod_date_Set() const{
    return m_mod_date_isSet;
}

bool OAIProjectDetailVO::is_mod_date_Valid() const{
    return m_mod_date_isValid;
}

QString OAIProjectDetailVO::getOwnerWorkgroup() const {
    return m_owner_workgroup;
}
void OAIProjectDetailVO::setOwnerWorkgroup(const QString &owner_workgroup) {
    m_owner_workgroup = owner_workgroup;
    m_owner_workgroup_isSet = true;
}

bool OAIProjectDetailVO::is_owner_workgroup_Set() const{
    return m_owner_workgroup_isSet;
}

bool OAIProjectDetailVO::is_owner_workgroup_Valid() const{
    return m_owner_workgroup_isValid;
}

OAIProjectParentVO OAIProjectDetailVO::getParentProject() const {
    return m_parent_project;
}
void OAIProjectDetailVO::setParentProject(const OAIProjectParentVO &parent_project) {
    m_parent_project = parent_project;
    m_parent_project_isSet = true;
}

bool OAIProjectDetailVO::is_parent_project_Set() const{
    return m_parent_project_isSet;
}

bool OAIProjectDetailVO::is_parent_project_Valid() const{
    return m_parent_project_isValid;
}

QDate OAIProjectDetailVO::getProjectCreateDate() const {
    return m_project_create_date;
}
void OAIProjectDetailVO::setProjectCreateDate(const QDate &project_create_date) {
    m_project_create_date = project_create_date;
    m_project_create_date_isSet = true;
}

bool OAIProjectDetailVO::is_project_create_date_Set() const{
    return m_project_create_date_isSet;
}

bool OAIProjectDetailVO::is_project_create_date_Valid() const{
    return m_project_create_date_isValid;
}

QString OAIProjectDetailVO::getProjectDescription() const {
    return m_project_description;
}
void OAIProjectDetailVO::setProjectDescription(const QString &project_description) {
    m_project_description = project_description;
    m_project_description_isSet = true;
}

bool OAIProjectDetailVO::is_project_description_Set() const{
    return m_project_description_isSet;
}

bool OAIProjectDetailVO::is_project_description_Valid() const{
    return m_project_description_isValid;
}

qint64 OAIProjectDetailVO::getProjectId() const {
    return m_project_id;
}
void OAIProjectDetailVO::setProjectId(const qint64 &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIProjectDetailVO::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIProjectDetailVO::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIProjectDetailVO::getProjectName() const {
    return m_project_name;
}
void OAIProjectDetailVO::setProjectName(const QString &project_name) {
    m_project_name = project_name;
    m_project_name_isSet = true;
}

bool OAIProjectDetailVO::is_project_name_Set() const{
    return m_project_name_isSet;
}

bool OAIProjectDetailVO::is_project_name_Valid() const{
    return m_project_name_isValid;
}

QString OAIProjectDetailVO::getProjectNumber() const {
    return m_project_number;
}
void OAIProjectDetailVO::setProjectNumber(const QString &project_number) {
    m_project_number = project_number;
    m_project_number_isSet = true;
}

bool OAIProjectDetailVO::is_project_number_Set() const{
    return m_project_number_isSet;
}

bool OAIProjectDetailVO::is_project_number_Valid() const{
    return m_project_number_isValid;
}

QString OAIProjectDetailVO::getProjectStatus() const {
    return m_project_status;
}
void OAIProjectDetailVO::setProjectStatus(const QString &project_status) {
    m_project_status = project_status;
    m_project_status_isSet = true;
}

bool OAIProjectDetailVO::is_project_status_Set() const{
    return m_project_status_isSet;
}

bool OAIProjectDetailVO::is_project_status_Valid() const{
    return m_project_status_isValid;
}

QString OAIProjectDetailVO::getTeamOwners() const {
    return m_team_owners;
}
void OAIProjectDetailVO::setTeamOwners(const QString &team_owners) {
    m_team_owners = team_owners;
    m_team_owners_isSet = true;
}

bool OAIProjectDetailVO::is_team_owners_Set() const{
    return m_team_owners_isSet;
}

bool OAIProjectDetailVO::is_team_owners_Valid() const{
    return m_team_owners_isValid;
}

bool OAIProjectDetailVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deactivation_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_hot_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_spec_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mod_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_workgroup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_project.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_create_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_owners_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectDetailVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
