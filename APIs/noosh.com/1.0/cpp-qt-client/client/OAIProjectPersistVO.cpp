/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectPersistVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectPersistVO::OAIProjectPersistVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectPersistVO::OAIProjectPersistVO() {
    this->initializeModel();
}

OAIProjectPersistVO::~OAIProjectPersistVO() {}

void OAIProjectPersistVO::initializeModel() {

    m_client_account_isSet = false;
    m_client_account_isValid = false;

    m_client_user_id_isSet = false;
    m_client_user_id_isValid = false;

    m_client_workgroup_id_isSet = false;
    m_client_workgroup_id_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_completion_date_isSet = false;
    m_completion_date_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_deactivation_reason_id_isSet = false;
    m_deactivation_reason_id_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_is_hot_isSet = false;
    m_is_hot_isValid = false;

    m_is_paper_direct_isSet = false;
    m_is_paper_direct_isValid = false;

    m_project_category_id_isSet = false;
    m_project_category_id_isValid = false;

    m_project_description_isSet = false;
    m_project_description_isValid = false;

    m_project_name_isSet = false;
    m_project_name_isValid = false;

    m_project_number_isSet = false;
    m_project_number_isValid = false;

    m_project_owner_user_id_isSet = false;
    m_project_owner_user_id_isValid = false;

    m_project_status_id_isSet = false;
    m_project_status_id_isValid = false;
}

void OAIProjectPersistVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectPersistVO::fromJsonObject(QJsonObject json) {

    m_client_account_isValid = ::OpenAPI::fromJsonValue(m_client_account, json[QString("client_account")]);
    m_client_account_isSet = !json[QString("client_account")].isNull() && m_client_account_isValid;

    m_client_user_id_isValid = ::OpenAPI::fromJsonValue(m_client_user_id, json[QString("client_user_id")]);
    m_client_user_id_isSet = !json[QString("client_user_id")].isNull() && m_client_user_id_isValid;

    m_client_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_client_workgroup_id, json[QString("client_workgroup_id")]);
    m_client_workgroup_id_isSet = !json[QString("client_workgroup_id")].isNull() && m_client_workgroup_id_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_completion_date_isValid = ::OpenAPI::fromJsonValue(m_completion_date, json[QString("completion_date")]);
    m_completion_date_isSet = !json[QString("completion_date")].isNull() && m_completion_date_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_deactivation_reason_id_isValid = ::OpenAPI::fromJsonValue(m_deactivation_reason_id, json[QString("deactivation_reason_id")]);
    m_deactivation_reason_id_isSet = !json[QString("deactivation_reason_id")].isNull() && m_deactivation_reason_id_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("is_active")]);
    m_is_active_isSet = !json[QString("is_active")].isNull() && m_is_active_isValid;

    m_is_hot_isValid = ::OpenAPI::fromJsonValue(m_is_hot, json[QString("is_hot")]);
    m_is_hot_isSet = !json[QString("is_hot")].isNull() && m_is_hot_isValid;

    m_is_paper_direct_isValid = ::OpenAPI::fromJsonValue(m_is_paper_direct, json[QString("is_paper_direct")]);
    m_is_paper_direct_isSet = !json[QString("is_paper_direct")].isNull() && m_is_paper_direct_isValid;

    m_project_category_id_isValid = ::OpenAPI::fromJsonValue(m_project_category_id, json[QString("project_category_id")]);
    m_project_category_id_isSet = !json[QString("project_category_id")].isNull() && m_project_category_id_isValid;

    m_project_description_isValid = ::OpenAPI::fromJsonValue(m_project_description, json[QString("project_description")]);
    m_project_description_isSet = !json[QString("project_description")].isNull() && m_project_description_isValid;

    m_project_name_isValid = ::OpenAPI::fromJsonValue(m_project_name, json[QString("project_name")]);
    m_project_name_isSet = !json[QString("project_name")].isNull() && m_project_name_isValid;

    m_project_number_isValid = ::OpenAPI::fromJsonValue(m_project_number, json[QString("project_number")]);
    m_project_number_isSet = !json[QString("project_number")].isNull() && m_project_number_isValid;

    m_project_owner_user_id_isValid = ::OpenAPI::fromJsonValue(m_project_owner_user_id, json[QString("project_owner_user_id")]);
    m_project_owner_user_id_isSet = !json[QString("project_owner_user_id")].isNull() && m_project_owner_user_id_isValid;

    m_project_status_id_isValid = ::OpenAPI::fromJsonValue(m_project_status_id, json[QString("project_status_id")]);
    m_project_status_id_isSet = !json[QString("project_status_id")].isNull() && m_project_status_id_isValid;
}

QString OAIProjectPersistVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectPersistVO::asJsonObject() const {
    QJsonObject obj;
    if (m_client_account_isSet) {
        obj.insert(QString("client_account"), ::OpenAPI::toJsonValue(m_client_account));
    }
    if (m_client_user_id_isSet) {
        obj.insert(QString("client_user_id"), ::OpenAPI::toJsonValue(m_client_user_id));
    }
    if (m_client_workgroup_id_isSet) {
        obj.insert(QString("client_workgroup_id"), ::OpenAPI::toJsonValue(m_client_workgroup_id));
    }
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_completion_date_isSet) {
        obj.insert(QString("completion_date"), ::OpenAPI::toJsonValue(m_completion_date));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_deactivation_reason_id_isSet) {
        obj.insert(QString("deactivation_reason_id"), ::OpenAPI::toJsonValue(m_deactivation_reason_id));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("is_active"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_is_hot_isSet) {
        obj.insert(QString("is_hot"), ::OpenAPI::toJsonValue(m_is_hot));
    }
    if (m_is_paper_direct_isSet) {
        obj.insert(QString("is_paper_direct"), ::OpenAPI::toJsonValue(m_is_paper_direct));
    }
    if (m_project_category_id_isSet) {
        obj.insert(QString("project_category_id"), ::OpenAPI::toJsonValue(m_project_category_id));
    }
    if (m_project_description_isSet) {
        obj.insert(QString("project_description"), ::OpenAPI::toJsonValue(m_project_description));
    }
    if (m_project_name_isSet) {
        obj.insert(QString("project_name"), ::OpenAPI::toJsonValue(m_project_name));
    }
    if (m_project_number_isSet) {
        obj.insert(QString("project_number"), ::OpenAPI::toJsonValue(m_project_number));
    }
    if (m_project_owner_user_id_isSet) {
        obj.insert(QString("project_owner_user_id"), ::OpenAPI::toJsonValue(m_project_owner_user_id));
    }
    if (m_project_status_id_isSet) {
        obj.insert(QString("project_status_id"), ::OpenAPI::toJsonValue(m_project_status_id));
    }
    return obj;
}

QString OAIProjectPersistVO::getClientAccount() const {
    return m_client_account;
}
void OAIProjectPersistVO::setClientAccount(const QString &client_account) {
    m_client_account = client_account;
    m_client_account_isSet = true;
}

bool OAIProjectPersistVO::is_client_account_Set() const{
    return m_client_account_isSet;
}

bool OAIProjectPersistVO::is_client_account_Valid() const{
    return m_client_account_isValid;
}

qint64 OAIProjectPersistVO::getClientUserId() const {
    return m_client_user_id;
}
void OAIProjectPersistVO::setClientUserId(const qint64 &client_user_id) {
    m_client_user_id = client_user_id;
    m_client_user_id_isSet = true;
}

bool OAIProjectPersistVO::is_client_user_id_Set() const{
    return m_client_user_id_isSet;
}

bool OAIProjectPersistVO::is_client_user_id_Valid() const{
    return m_client_user_id_isValid;
}

qint64 OAIProjectPersistVO::getClientWorkgroupId() const {
    return m_client_workgroup_id;
}
void OAIProjectPersistVO::setClientWorkgroupId(const qint64 &client_workgroup_id) {
    m_client_workgroup_id = client_workgroup_id;
    m_client_workgroup_id_isSet = true;
}

bool OAIProjectPersistVO::is_client_workgroup_id_Set() const{
    return m_client_workgroup_id_isSet;
}

bool OAIProjectPersistVO::is_client_workgroup_id_Valid() const{
    return m_client_workgroup_id_isValid;
}

QString OAIProjectPersistVO::getComments() const {
    return m_comments;
}
void OAIProjectPersistVO::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIProjectPersistVO::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIProjectPersistVO::is_comments_Valid() const{
    return m_comments_isValid;
}

QDate OAIProjectPersistVO::getCompletionDate() const {
    return m_completion_date;
}
void OAIProjectPersistVO::setCompletionDate(const QDate &completion_date) {
    m_completion_date = completion_date;
    m_completion_date_isSet = true;
}

bool OAIProjectPersistVO::is_completion_date_Set() const{
    return m_completion_date_isSet;
}

bool OAIProjectPersistVO::is_completion_date_Valid() const{
    return m_completion_date_isValid;
}

QList<OAICustomFieldPersistVO> OAIProjectPersistVO::getCustomFields() const {
    return m_custom_fields;
}
void OAIProjectPersistVO::setCustomFields(const QList<OAICustomFieldPersistVO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIProjectPersistVO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIProjectPersistVO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

qint64 OAIProjectPersistVO::getDeactivationReasonId() const {
    return m_deactivation_reason_id;
}
void OAIProjectPersistVO::setDeactivationReasonId(const qint64 &deactivation_reason_id) {
    m_deactivation_reason_id = deactivation_reason_id;
    m_deactivation_reason_id_isSet = true;
}

bool OAIProjectPersistVO::is_deactivation_reason_id_Set() const{
    return m_deactivation_reason_id_isSet;
}

bool OAIProjectPersistVO::is_deactivation_reason_id_Valid() const{
    return m_deactivation_reason_id_isValid;
}

bool OAIProjectPersistVO::isIsActive() const {
    return m_is_active;
}
void OAIProjectPersistVO::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIProjectPersistVO::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIProjectPersistVO::is_is_active_Valid() const{
    return m_is_active_isValid;
}

bool OAIProjectPersistVO::isIsHot() const {
    return m_is_hot;
}
void OAIProjectPersistVO::setIsHot(const bool &is_hot) {
    m_is_hot = is_hot;
    m_is_hot_isSet = true;
}

bool OAIProjectPersistVO::is_is_hot_Set() const{
    return m_is_hot_isSet;
}

bool OAIProjectPersistVO::is_is_hot_Valid() const{
    return m_is_hot_isValid;
}

bool OAIProjectPersistVO::isIsPaperDirect() const {
    return m_is_paper_direct;
}
void OAIProjectPersistVO::setIsPaperDirect(const bool &is_paper_direct) {
    m_is_paper_direct = is_paper_direct;
    m_is_paper_direct_isSet = true;
}

bool OAIProjectPersistVO::is_is_paper_direct_Set() const{
    return m_is_paper_direct_isSet;
}

bool OAIProjectPersistVO::is_is_paper_direct_Valid() const{
    return m_is_paper_direct_isValid;
}

qint64 OAIProjectPersistVO::getProjectCategoryId() const {
    return m_project_category_id;
}
void OAIProjectPersistVO::setProjectCategoryId(const qint64 &project_category_id) {
    m_project_category_id = project_category_id;
    m_project_category_id_isSet = true;
}

bool OAIProjectPersistVO::is_project_category_id_Set() const{
    return m_project_category_id_isSet;
}

bool OAIProjectPersistVO::is_project_category_id_Valid() const{
    return m_project_category_id_isValid;
}

QString OAIProjectPersistVO::getProjectDescription() const {
    return m_project_description;
}
void OAIProjectPersistVO::setProjectDescription(const QString &project_description) {
    m_project_description = project_description;
    m_project_description_isSet = true;
}

bool OAIProjectPersistVO::is_project_description_Set() const{
    return m_project_description_isSet;
}

bool OAIProjectPersistVO::is_project_description_Valid() const{
    return m_project_description_isValid;
}

QString OAIProjectPersistVO::getProjectName() const {
    return m_project_name;
}
void OAIProjectPersistVO::setProjectName(const QString &project_name) {
    m_project_name = project_name;
    m_project_name_isSet = true;
}

bool OAIProjectPersistVO::is_project_name_Set() const{
    return m_project_name_isSet;
}

bool OAIProjectPersistVO::is_project_name_Valid() const{
    return m_project_name_isValid;
}

QString OAIProjectPersistVO::getProjectNumber() const {
    return m_project_number;
}
void OAIProjectPersistVO::setProjectNumber(const QString &project_number) {
    m_project_number = project_number;
    m_project_number_isSet = true;
}

bool OAIProjectPersistVO::is_project_number_Set() const{
    return m_project_number_isSet;
}

bool OAIProjectPersistVO::is_project_number_Valid() const{
    return m_project_number_isValid;
}

qint64 OAIProjectPersistVO::getProjectOwnerUserId() const {
    return m_project_owner_user_id;
}
void OAIProjectPersistVO::setProjectOwnerUserId(const qint64 &project_owner_user_id) {
    m_project_owner_user_id = project_owner_user_id;
    m_project_owner_user_id_isSet = true;
}

bool OAIProjectPersistVO::is_project_owner_user_id_Set() const{
    return m_project_owner_user_id_isSet;
}

bool OAIProjectPersistVO::is_project_owner_user_id_Valid() const{
    return m_project_owner_user_id_isValid;
}

qint64 OAIProjectPersistVO::getProjectStatusId() const {
    return m_project_status_id;
}
void OAIProjectPersistVO::setProjectStatusId(const qint64 &project_status_id) {
    m_project_status_id = project_status_id;
    m_project_status_id_isSet = true;
}

bool OAIProjectPersistVO::is_project_status_id_Set() const{
    return m_project_status_id_isSet;
}

bool OAIProjectPersistVO::is_project_status_id_Valid() const{
    return m_project_status_id_isValid;
}

bool OAIProjectPersistVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deactivation_reason_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_hot_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_paper_direct_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_owner_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_status_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectPersistVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_project_status_id_isValid && true;
}

} // namespace OpenAPI
