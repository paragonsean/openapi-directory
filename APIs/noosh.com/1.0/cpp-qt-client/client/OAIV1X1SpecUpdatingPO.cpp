/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1X1SpecUpdatingPO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1X1SpecUpdatingPO::OAIV1X1SpecUpdatingPO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1X1SpecUpdatingPO::OAIV1X1SpecUpdatingPO() {
    this->initializeModel();
}

OAIV1X1SpecUpdatingPO::~OAIV1X1SpecUpdatingPO() {}

void OAIV1X1SpecUpdatingPO::initializeModel() {

    m_first_level_custom_fields_isSet = false;
    m_first_level_custom_fields_isValid = false;

    m_header_custom_fields_isSet = false;
    m_header_custom_fields_isValid = false;

    m_product_type_id_isSet = false;
    m_product_type_id_isValid = false;

    m_quantity_1_isSet = false;
    m_quantity_1_isValid = false;

    m_quantity_2_isSet = false;
    m_quantity_2_isValid = false;

    m_quantity_3_isSet = false;
    m_quantity_3_isValid = false;

    m_quantity_4_isSet = false;
    m_quantity_4_isValid = false;

    m_quantity_5_isSet = false;
    m_quantity_5_isValid = false;

    m_second_level_custom_fields_isSet = false;
    m_second_level_custom_fields_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_spec_name_isSet = false;
    m_spec_name_isValid = false;

    m_spec_type_id_isSet = false;
    m_spec_type_id_isValid = false;

    m_versions_isSet = false;
    m_versions_isValid = false;
}

void OAIV1X1SpecUpdatingPO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1X1SpecUpdatingPO::fromJsonObject(QJsonObject json) {

    m_first_level_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_first_level_custom_fields, json[QString("first_level_custom_fields")]);
    m_first_level_custom_fields_isSet = !json[QString("first_level_custom_fields")].isNull() && m_first_level_custom_fields_isValid;

    m_header_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_header_custom_fields, json[QString("header_custom_fields")]);
    m_header_custom_fields_isSet = !json[QString("header_custom_fields")].isNull() && m_header_custom_fields_isValid;

    m_product_type_id_isValid = ::OpenAPI::fromJsonValue(m_product_type_id, json[QString("product_type_id")]);
    m_product_type_id_isSet = !json[QString("product_type_id")].isNull() && m_product_type_id_isValid;

    m_quantity_1_isValid = ::OpenAPI::fromJsonValue(m_quantity_1, json[QString("quantity_1")]);
    m_quantity_1_isSet = !json[QString("quantity_1")].isNull() && m_quantity_1_isValid;

    m_quantity_2_isValid = ::OpenAPI::fromJsonValue(m_quantity_2, json[QString("quantity_2")]);
    m_quantity_2_isSet = !json[QString("quantity_2")].isNull() && m_quantity_2_isValid;

    m_quantity_3_isValid = ::OpenAPI::fromJsonValue(m_quantity_3, json[QString("quantity_3")]);
    m_quantity_3_isSet = !json[QString("quantity_3")].isNull() && m_quantity_3_isValid;

    m_quantity_4_isValid = ::OpenAPI::fromJsonValue(m_quantity_4, json[QString("quantity_4")]);
    m_quantity_4_isSet = !json[QString("quantity_4")].isNull() && m_quantity_4_isValid;

    m_quantity_5_isValid = ::OpenAPI::fromJsonValue(m_quantity_5, json[QString("quantity_5")]);
    m_quantity_5_isSet = !json[QString("quantity_5")].isNull() && m_quantity_5_isValid;

    m_second_level_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_second_level_custom_fields, json[QString("second_level_custom_fields")]);
    m_second_level_custom_fields_isSet = !json[QString("second_level_custom_fields")].isNull() && m_second_level_custom_fields_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_spec_name_isValid = ::OpenAPI::fromJsonValue(m_spec_name, json[QString("spec_name")]);
    m_spec_name_isSet = !json[QString("spec_name")].isNull() && m_spec_name_isValid;

    m_spec_type_id_isValid = ::OpenAPI::fromJsonValue(m_spec_type_id, json[QString("spec_type_id")]);
    m_spec_type_id_isSet = !json[QString("spec_type_id")].isNull() && m_spec_type_id_isValid;

    m_versions_isValid = ::OpenAPI::fromJsonValue(m_versions, json[QString("versions")]);
    m_versions_isSet = !json[QString("versions")].isNull() && m_versions_isValid;
}

QString OAIV1X1SpecUpdatingPO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1X1SpecUpdatingPO::asJsonObject() const {
    QJsonObject obj;
    if (m_first_level_custom_fields.isSet()) {
        obj.insert(QString("first_level_custom_fields"), ::OpenAPI::toJsonValue(m_first_level_custom_fields));
    }
    if (m_header_custom_fields.isSet()) {
        obj.insert(QString("header_custom_fields"), ::OpenAPI::toJsonValue(m_header_custom_fields));
    }
    if (m_product_type_id_isSet) {
        obj.insert(QString("product_type_id"), ::OpenAPI::toJsonValue(m_product_type_id));
    }
    if (m_quantity_1_isSet) {
        obj.insert(QString("quantity_1"), ::OpenAPI::toJsonValue(m_quantity_1));
    }
    if (m_quantity_2_isSet) {
        obj.insert(QString("quantity_2"), ::OpenAPI::toJsonValue(m_quantity_2));
    }
    if (m_quantity_3_isSet) {
        obj.insert(QString("quantity_3"), ::OpenAPI::toJsonValue(m_quantity_3));
    }
    if (m_quantity_4_isSet) {
        obj.insert(QString("quantity_4"), ::OpenAPI::toJsonValue(m_quantity_4));
    }
    if (m_quantity_5_isSet) {
        obj.insert(QString("quantity_5"), ::OpenAPI::toJsonValue(m_quantity_5));
    }
    if (m_second_level_custom_fields.size() > 0) {
        obj.insert(QString("second_level_custom_fields"), ::OpenAPI::toJsonValue(m_second_level_custom_fields));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_spec_name_isSet) {
        obj.insert(QString("spec_name"), ::OpenAPI::toJsonValue(m_spec_name));
    }
    if (m_spec_type_id_isSet) {
        obj.insert(QString("spec_type_id"), ::OpenAPI::toJsonValue(m_spec_type_id));
    }
    if (m_versions.size() > 0) {
        obj.insert(QString("versions"), ::OpenAPI::toJsonValue(m_versions));
    }
    return obj;
}

OAIV1x1ProperyPO OAIV1X1SpecUpdatingPO::getFirstLevelCustomFields() const {
    return m_first_level_custom_fields;
}
void OAIV1X1SpecUpdatingPO::setFirstLevelCustomFields(const OAIV1x1ProperyPO &first_level_custom_fields) {
    m_first_level_custom_fields = first_level_custom_fields;
    m_first_level_custom_fields_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_first_level_custom_fields_Set() const{
    return m_first_level_custom_fields_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_first_level_custom_fields_Valid() const{
    return m_first_level_custom_fields_isValid;
}

OAIV1x1ProperyPO OAIV1X1SpecUpdatingPO::getHeaderCustomFields() const {
    return m_header_custom_fields;
}
void OAIV1X1SpecUpdatingPO::setHeaderCustomFields(const OAIV1x1ProperyPO &header_custom_fields) {
    m_header_custom_fields = header_custom_fields;
    m_header_custom_fields_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_header_custom_fields_Set() const{
    return m_header_custom_fields_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_header_custom_fields_Valid() const{
    return m_header_custom_fields_isValid;
}

qint64 OAIV1X1SpecUpdatingPO::getProductTypeId() const {
    return m_product_type_id;
}
void OAIV1X1SpecUpdatingPO::setProductTypeId(const qint64 &product_type_id) {
    m_product_type_id = product_type_id;
    m_product_type_id_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_product_type_id_Set() const{
    return m_product_type_id_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_product_type_id_Valid() const{
    return m_product_type_id_isValid;
}

qint64 OAIV1X1SpecUpdatingPO::getQuantity1() const {
    return m_quantity_1;
}
void OAIV1X1SpecUpdatingPO::setQuantity1(const qint64 &quantity_1) {
    m_quantity_1 = quantity_1;
    m_quantity_1_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_1_Set() const{
    return m_quantity_1_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_1_Valid() const{
    return m_quantity_1_isValid;
}

qint64 OAIV1X1SpecUpdatingPO::getQuantity2() const {
    return m_quantity_2;
}
void OAIV1X1SpecUpdatingPO::setQuantity2(const qint64 &quantity_2) {
    m_quantity_2 = quantity_2;
    m_quantity_2_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_2_Set() const{
    return m_quantity_2_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_2_Valid() const{
    return m_quantity_2_isValid;
}

qint64 OAIV1X1SpecUpdatingPO::getQuantity3() const {
    return m_quantity_3;
}
void OAIV1X1SpecUpdatingPO::setQuantity3(const qint64 &quantity_3) {
    m_quantity_3 = quantity_3;
    m_quantity_3_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_3_Set() const{
    return m_quantity_3_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_3_Valid() const{
    return m_quantity_3_isValid;
}

qint64 OAIV1X1SpecUpdatingPO::getQuantity4() const {
    return m_quantity_4;
}
void OAIV1X1SpecUpdatingPO::setQuantity4(const qint64 &quantity_4) {
    m_quantity_4 = quantity_4;
    m_quantity_4_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_4_Set() const{
    return m_quantity_4_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_4_Valid() const{
    return m_quantity_4_isValid;
}

qint64 OAIV1X1SpecUpdatingPO::getQuantity5() const {
    return m_quantity_5;
}
void OAIV1X1SpecUpdatingPO::setQuantity5(const qint64 &quantity_5) {
    m_quantity_5 = quantity_5;
    m_quantity_5_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_5_Set() const{
    return m_quantity_5_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_quantity_5_Valid() const{
    return m_quantity_5_isValid;
}

QList<OAIV1x1ProperyPO> OAIV1X1SpecUpdatingPO::getSecondLevelCustomFields() const {
    return m_second_level_custom_fields;
}
void OAIV1X1SpecUpdatingPO::setSecondLevelCustomFields(const QList<OAIV1x1ProperyPO> &second_level_custom_fields) {
    m_second_level_custom_fields = second_level_custom_fields;
    m_second_level_custom_fields_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_second_level_custom_fields_Set() const{
    return m_second_level_custom_fields_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_second_level_custom_fields_Valid() const{
    return m_second_level_custom_fields_isValid;
}

QString OAIV1X1SpecUpdatingPO::getSku() const {
    return m_sku;
}
void OAIV1X1SpecUpdatingPO::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_sku_Valid() const{
    return m_sku_isValid;
}

QString OAIV1X1SpecUpdatingPO::getSpecName() const {
    return m_spec_name;
}
void OAIV1X1SpecUpdatingPO::setSpecName(const QString &spec_name) {
    m_spec_name = spec_name;
    m_spec_name_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_spec_name_Set() const{
    return m_spec_name_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_spec_name_Valid() const{
    return m_spec_name_isValid;
}

qint64 OAIV1X1SpecUpdatingPO::getSpecTypeId() const {
    return m_spec_type_id;
}
void OAIV1X1SpecUpdatingPO::setSpecTypeId(const qint64 &spec_type_id) {
    m_spec_type_id = spec_type_id;
    m_spec_type_id_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_spec_type_id_Set() const{
    return m_spec_type_id_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_spec_type_id_Valid() const{
    return m_spec_type_id_isValid;
}

QList<OAISpecVersionPersistVO> OAIV1X1SpecUpdatingPO::getVersions() const {
    return m_versions;
}
void OAIV1X1SpecUpdatingPO::setVersions(const QList<OAISpecVersionPersistVO> &versions) {
    m_versions = versions;
    m_versions_isSet = true;
}

bool OAIV1X1SpecUpdatingPO::is_versions_Set() const{
    return m_versions_isSet;
}

bool OAIV1X1SpecUpdatingPO::is_versions_Valid() const{
    return m_versions_isValid;
}

bool OAIV1X1SpecUpdatingPO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_level_custom_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_custom_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_second_level_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_versions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1X1SpecUpdatingPO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
