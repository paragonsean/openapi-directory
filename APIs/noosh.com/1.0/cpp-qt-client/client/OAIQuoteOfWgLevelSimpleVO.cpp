/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuoteOfWgLevelSimpleVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuoteOfWgLevelSimpleVO::OAIQuoteOfWgLevelSimpleVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuoteOfWgLevelSimpleVO::OAIQuoteOfWgLevelSimpleVO() {
    this->initializeModel();
}

OAIQuoteOfWgLevelSimpleVO::~OAIQuoteOfWgLevelSimpleVO() {}

void OAIQuoteOfWgLevelSimpleVO::initializeModel() {

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_grand_total_isSet = false;
    m_grand_total_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_quote_id_isSet = false;
    m_quote_id_isValid = false;

    m_quote_title_isSet = false;
    m_quote_title_isValid = false;

    m_rfq_isSet = false;
    m_rfq_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_submit_date_isSet = false;
    m_submit_date_isValid = false;

    m_transactional_currency_isSet = false;
    m_transactional_currency_isValid = false;

    m_transactional_grand_total_isSet = false;
    m_transactional_grand_total_isValid = false;
}

void OAIQuoteOfWgLevelSimpleVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQuoteOfWgLevelSimpleVO::fromJsonObject(QJsonObject json) {

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_grand_total_isValid = ::OpenAPI::fromJsonValue(m_grand_total, json[QString("grand_total")]);
    m_grand_total_isSet = !json[QString("grand_total")].isNull() && m_grand_total_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_quote_id_isValid = ::OpenAPI::fromJsonValue(m_quote_id, json[QString("quote_id")]);
    m_quote_id_isSet = !json[QString("quote_id")].isNull() && m_quote_id_isValid;

    m_quote_title_isValid = ::OpenAPI::fromJsonValue(m_quote_title, json[QString("quote_title")]);
    m_quote_title_isSet = !json[QString("quote_title")].isNull() && m_quote_title_isValid;

    m_rfq_isValid = ::OpenAPI::fromJsonValue(m_rfq, json[QString("rfq")]);
    m_rfq_isSet = !json[QString("rfq")].isNull() && m_rfq_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_submit_date_isValid = ::OpenAPI::fromJsonValue(m_submit_date, json[QString("submit_date")]);
    m_submit_date_isSet = !json[QString("submit_date")].isNull() && m_submit_date_isValid;

    m_transactional_currency_isValid = ::OpenAPI::fromJsonValue(m_transactional_currency, json[QString("transactional_currency")]);
    m_transactional_currency_isSet = !json[QString("transactional_currency")].isNull() && m_transactional_currency_isValid;

    m_transactional_grand_total_isValid = ::OpenAPI::fromJsonValue(m_transactional_grand_total, json[QString("transactional_grand_total")]);
    m_transactional_grand_total_isSet = !json[QString("transactional_grand_total")].isNull() && m_transactional_grand_total_isValid;
}

QString OAIQuoteOfWgLevelSimpleVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQuoteOfWgLevelSimpleVO::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_grand_total_isSet) {
        obj.insert(QString("grand_total"), ::OpenAPI::toJsonValue(m_grand_total));
    }
    if (m_project.isSet()) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_quote_id_isSet) {
        obj.insert(QString("quote_id"), ::OpenAPI::toJsonValue(m_quote_id));
    }
    if (m_quote_title_isSet) {
        obj.insert(QString("quote_title"), ::OpenAPI::toJsonValue(m_quote_title));
    }
    if (m_rfq.isSet()) {
        obj.insert(QString("rfq"), ::OpenAPI::toJsonValue(m_rfq));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_submit_date_isSet) {
        obj.insert(QString("submit_date"), ::OpenAPI::toJsonValue(m_submit_date));
    }
    if (m_transactional_currency_isSet) {
        obj.insert(QString("transactional_currency"), ::OpenAPI::toJsonValue(m_transactional_currency));
    }
    if (m_transactional_grand_total_isSet) {
        obj.insert(QString("transactional_grand_total"), ::OpenAPI::toJsonValue(m_transactional_grand_total));
    }
    return obj;
}

QString OAIQuoteOfWgLevelSimpleVO::getCurrency() const {
    return m_currency;
}
void OAIQuoteOfWgLevelSimpleVO::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_currency_Valid() const{
    return m_currency_isValid;
}

QJsonValue OAIQuoteOfWgLevelSimpleVO::getGrandTotal() const {
    return m_grand_total;
}
void OAIQuoteOfWgLevelSimpleVO::setGrandTotal(const QJsonValue &grand_total) {
    m_grand_total = grand_total;
    m_grand_total_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_grand_total_Set() const{
    return m_grand_total_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_grand_total_Valid() const{
    return m_grand_total_isValid;
}

OAIProjectBaseVO OAIQuoteOfWgLevelSimpleVO::getProject() const {
    return m_project;
}
void OAIQuoteOfWgLevelSimpleVO::setProject(const OAIProjectBaseVO &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_project_Set() const{
    return m_project_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_project_Valid() const{
    return m_project_isValid;
}

qint64 OAIQuoteOfWgLevelSimpleVO::getQuoteId() const {
    return m_quote_id;
}
void OAIQuoteOfWgLevelSimpleVO::setQuoteId(const qint64 &quote_id) {
    m_quote_id = quote_id;
    m_quote_id_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_quote_id_Set() const{
    return m_quote_id_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_quote_id_Valid() const{
    return m_quote_id_isValid;
}

QString OAIQuoteOfWgLevelSimpleVO::getQuoteTitle() const {
    return m_quote_title;
}
void OAIQuoteOfWgLevelSimpleVO::setQuoteTitle(const QString &quote_title) {
    m_quote_title = quote_title;
    m_quote_title_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_quote_title_Set() const{
    return m_quote_title_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_quote_title_Valid() const{
    return m_quote_title_isValid;
}

OAIRfqBaseVO OAIQuoteOfWgLevelSimpleVO::getRfq() const {
    return m_rfq;
}
void OAIQuoteOfWgLevelSimpleVO::setRfq(const OAIRfqBaseVO &rfq) {
    m_rfq = rfq;
    m_rfq_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_rfq_Set() const{
    return m_rfq_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_rfq_Valid() const{
    return m_rfq_isValid;
}

QString OAIQuoteOfWgLevelSimpleVO::getStatus() const {
    return m_status;
}
void OAIQuoteOfWgLevelSimpleVO::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_status_Set() const{
    return m_status_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_status_Valid() const{
    return m_status_isValid;
}

QDate OAIQuoteOfWgLevelSimpleVO::getSubmitDate() const {
    return m_submit_date;
}
void OAIQuoteOfWgLevelSimpleVO::setSubmitDate(const QDate &submit_date) {
    m_submit_date = submit_date;
    m_submit_date_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_submit_date_Set() const{
    return m_submit_date_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_submit_date_Valid() const{
    return m_submit_date_isValid;
}

QString OAIQuoteOfWgLevelSimpleVO::getTransactionalCurrency() const {
    return m_transactional_currency;
}
void OAIQuoteOfWgLevelSimpleVO::setTransactionalCurrency(const QString &transactional_currency) {
    m_transactional_currency = transactional_currency;
    m_transactional_currency_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_transactional_currency_Set() const{
    return m_transactional_currency_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_transactional_currency_Valid() const{
    return m_transactional_currency_isValid;
}

QJsonValue OAIQuoteOfWgLevelSimpleVO::getTransactionalGrandTotal() const {
    return m_transactional_grand_total;
}
void OAIQuoteOfWgLevelSimpleVO::setTransactionalGrandTotal(const QJsonValue &transactional_grand_total) {
    m_transactional_grand_total = transactional_grand_total;
    m_transactional_grand_total_isSet = true;
}

bool OAIQuoteOfWgLevelSimpleVO::is_transactional_grand_total_Set() const{
    return m_transactional_grand_total_isSet;
}

bool OAIQuoteOfWgLevelSimpleVO::is_transactional_grand_total_Valid() const{
    return m_transactional_grand_total_isValid;
}

bool OAIQuoteOfWgLevelSimpleVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grand_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_quote_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quote_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rfq.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submit_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_grand_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQuoteOfWgLevelSimpleVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
