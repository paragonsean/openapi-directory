/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEstimateItemDetailsVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEstimateItemDetailsVO::OAIEstimateItemDetailsVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEstimateItemDetailsVO::OAIEstimateItemDetailsVO() {
    this->initializeModel();
}

OAIEstimateItemDetailsVO::~OAIEstimateItemDetailsVO() {}

void OAIEstimateItemDetailsVO::initializeModel() {

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_estimate_item_id_isSet = false;
    m_estimate_item_id_isValid = false;

    m_option_prices_isSet = false;
    m_option_prices_isValid = false;

    m_pc_job_id_isSet = false;
    m_pc_job_id_isValid = false;

    m_spec_name_isSet = false;
    m_spec_name_isValid = false;

    m_spec_reference_isSet = false;
    m_spec_reference_isValid = false;

    m_spec_reference_id_isSet = false;
    m_spec_reference_id_isValid = false;
}

void OAIEstimateItemDetailsVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEstimateItemDetailsVO::fromJsonObject(QJsonObject json) {

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_estimate_item_id_isValid = ::OpenAPI::fromJsonValue(m_estimate_item_id, json[QString("estimate_item_id")]);
    m_estimate_item_id_isSet = !json[QString("estimate_item_id")].isNull() && m_estimate_item_id_isValid;

    m_option_prices_isValid = ::OpenAPI::fromJsonValue(m_option_prices, json[QString("option_prices")]);
    m_option_prices_isSet = !json[QString("option_prices")].isNull() && m_option_prices_isValid;

    m_pc_job_id_isValid = ::OpenAPI::fromJsonValue(m_pc_job_id, json[QString("pc_job_id")]);
    m_pc_job_id_isSet = !json[QString("pc_job_id")].isNull() && m_pc_job_id_isValid;

    m_spec_name_isValid = ::OpenAPI::fromJsonValue(m_spec_name, json[QString("spec_name")]);
    m_spec_name_isSet = !json[QString("spec_name")].isNull() && m_spec_name_isValid;

    m_spec_reference_isValid = ::OpenAPI::fromJsonValue(m_spec_reference, json[QString("spec_reference")]);
    m_spec_reference_isSet = !json[QString("spec_reference")].isNull() && m_spec_reference_isValid;

    m_spec_reference_id_isValid = ::OpenAPI::fromJsonValue(m_spec_reference_id, json[QString("spec_reference_id")]);
    m_spec_reference_id_isSet = !json[QString("spec_reference_id")].isNull() && m_spec_reference_id_isValid;
}

QString OAIEstimateItemDetailsVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEstimateItemDetailsVO::asJsonObject() const {
    QJsonObject obj;
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_estimate_item_id_isSet) {
        obj.insert(QString("estimate_item_id"), ::OpenAPI::toJsonValue(m_estimate_item_id));
    }
    if (m_option_prices.size() > 0) {
        obj.insert(QString("option_prices"), ::OpenAPI::toJsonValue(m_option_prices));
    }
    if (m_pc_job_id_isSet) {
        obj.insert(QString("pc_job_id"), ::OpenAPI::toJsonValue(m_pc_job_id));
    }
    if (m_spec_name_isSet) {
        obj.insert(QString("spec_name"), ::OpenAPI::toJsonValue(m_spec_name));
    }
    if (m_spec_reference_isSet) {
        obj.insert(QString("spec_reference"), ::OpenAPI::toJsonValue(m_spec_reference));
    }
    if (m_spec_reference_id_isSet) {
        obj.insert(QString("spec_reference_id"), ::OpenAPI::toJsonValue(m_spec_reference_id));
    }
    return obj;
}

QString OAIEstimateItemDetailsVO::getComments() const {
    return m_comments;
}
void OAIEstimateItemDetailsVO::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIEstimateItemDetailsVO::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIEstimateItemDetailsVO::is_comments_Valid() const{
    return m_comments_isValid;
}

QList<OAIPropertyPaAndAttVO> OAIEstimateItemDetailsVO::getCustomFields() const {
    return m_custom_fields;
}
void OAIEstimateItemDetailsVO::setCustomFields(const QList<OAIPropertyPaAndAttVO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIEstimateItemDetailsVO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIEstimateItemDetailsVO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

qint64 OAIEstimateItemDetailsVO::getEstimateItemId() const {
    return m_estimate_item_id;
}
void OAIEstimateItemDetailsVO::setEstimateItemId(const qint64 &estimate_item_id) {
    m_estimate_item_id = estimate_item_id;
    m_estimate_item_id_isSet = true;
}

bool OAIEstimateItemDetailsVO::is_estimate_item_id_Set() const{
    return m_estimate_item_id_isSet;
}

bool OAIEstimateItemDetailsVO::is_estimate_item_id_Valid() const{
    return m_estimate_item_id_isValid;
}

QList<OAIEstimateItemPriceVO> OAIEstimateItemDetailsVO::getOptionPrices() const {
    return m_option_prices;
}
void OAIEstimateItemDetailsVO::setOptionPrices(const QList<OAIEstimateItemPriceVO> &option_prices) {
    m_option_prices = option_prices;
    m_option_prices_isSet = true;
}

bool OAIEstimateItemDetailsVO::is_option_prices_Set() const{
    return m_option_prices_isSet;
}

bool OAIEstimateItemDetailsVO::is_option_prices_Valid() const{
    return m_option_prices_isValid;
}

qint64 OAIEstimateItemDetailsVO::getPcJobId() const {
    return m_pc_job_id;
}
void OAIEstimateItemDetailsVO::setPcJobId(const qint64 &pc_job_id) {
    m_pc_job_id = pc_job_id;
    m_pc_job_id_isSet = true;
}

bool OAIEstimateItemDetailsVO::is_pc_job_id_Set() const{
    return m_pc_job_id_isSet;
}

bool OAIEstimateItemDetailsVO::is_pc_job_id_Valid() const{
    return m_pc_job_id_isValid;
}

QString OAIEstimateItemDetailsVO::getSpecName() const {
    return m_spec_name;
}
void OAIEstimateItemDetailsVO::setSpecName(const QString &spec_name) {
    m_spec_name = spec_name;
    m_spec_name_isSet = true;
}

bool OAIEstimateItemDetailsVO::is_spec_name_Set() const{
    return m_spec_name_isSet;
}

bool OAIEstimateItemDetailsVO::is_spec_name_Valid() const{
    return m_spec_name_isValid;
}

QString OAIEstimateItemDetailsVO::getSpecReference() const {
    return m_spec_reference;
}
void OAIEstimateItemDetailsVO::setSpecReference(const QString &spec_reference) {
    m_spec_reference = spec_reference;
    m_spec_reference_isSet = true;
}

bool OAIEstimateItemDetailsVO::is_spec_reference_Set() const{
    return m_spec_reference_isSet;
}

bool OAIEstimateItemDetailsVO::is_spec_reference_Valid() const{
    return m_spec_reference_isValid;
}

qint64 OAIEstimateItemDetailsVO::getSpecReferenceId() const {
    return m_spec_reference_id;
}
void OAIEstimateItemDetailsVO::setSpecReferenceId(const qint64 &spec_reference_id) {
    m_spec_reference_id = spec_reference_id;
    m_spec_reference_id_isSet = true;
}

bool OAIEstimateItemDetailsVO::is_spec_reference_id_Set() const{
    return m_spec_reference_id_isSet;
}

bool OAIEstimateItemDetailsVO::is_spec_reference_id_Valid() const{
    return m_spec_reference_id_isValid;
}

bool OAIEstimateItemDetailsVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimate_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_option_prices.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pc_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEstimateItemDetailsVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
