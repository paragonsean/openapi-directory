/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientWorkgroupDetailVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientWorkgroupDetailVO::OAIClientWorkgroupDetailVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientWorkgroupDetailVO::OAIClientWorkgroupDetailVO() {
    this->initializeModel();
}

OAIClientWorkgroupDetailVO::~OAIClientWorkgroupDetailVO() {}

void OAIClientWorkgroupDetailVO::initializeModel() {

    m_client_ac_workgroup_id_isSet = false;
    m_client_ac_workgroup_id_isValid = false;

    m_client_workgroup_id_isSet = false;
    m_client_workgroup_id_isValid = false;

    m_client_workgroup_name_isSet = false;
    m_client_workgroup_name_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_margin_percent_isSet = false;
    m_margin_percent_isValid = false;

    m_markup_isSet = false;
    m_markup_isValid = false;

    m_markup_percent_isSet = false;
    m_markup_percent_isValid = false;
}

void OAIClientWorkgroupDetailVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientWorkgroupDetailVO::fromJsonObject(QJsonObject json) {

    m_client_ac_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_client_ac_workgroup_id, json[QString("client_ac_workgroup_id")]);
    m_client_ac_workgroup_id_isSet = !json[QString("client_ac_workgroup_id")].isNull() && m_client_ac_workgroup_id_isValid;

    m_client_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_client_workgroup_id, json[QString("client_workgroup_id")]);
    m_client_workgroup_id_isSet = !json[QString("client_workgroup_id")].isNull() && m_client_workgroup_id_isValid;

    m_client_workgroup_name_isValid = ::OpenAPI::fromJsonValue(m_client_workgroup_name, json[QString("client_workgroup_name")]);
    m_client_workgroup_name_isSet = !json[QString("client_workgroup_name")].isNull() && m_client_workgroup_name_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_margin_percent_isValid = ::OpenAPI::fromJsonValue(m_margin_percent, json[QString("margin_percent")]);
    m_margin_percent_isSet = !json[QString("margin_percent")].isNull() && m_margin_percent_isValid;

    m_markup_isValid = ::OpenAPI::fromJsonValue(m_markup, json[QString("markup")]);
    m_markup_isSet = !json[QString("markup")].isNull() && m_markup_isValid;

    m_markup_percent_isValid = ::OpenAPI::fromJsonValue(m_markup_percent, json[QString("markup_percent")]);
    m_markup_percent_isSet = !json[QString("markup_percent")].isNull() && m_markup_percent_isValid;
}

QString OAIClientWorkgroupDetailVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientWorkgroupDetailVO::asJsonObject() const {
    QJsonObject obj;
    if (m_client_ac_workgroup_id_isSet) {
        obj.insert(QString("client_ac_workgroup_id"), ::OpenAPI::toJsonValue(m_client_ac_workgroup_id));
    }
    if (m_client_workgroup_id_isSet) {
        obj.insert(QString("client_workgroup_id"), ::OpenAPI::toJsonValue(m_client_workgroup_id));
    }
    if (m_client_workgroup_name_isSet) {
        obj.insert(QString("client_workgroup_name"), ::OpenAPI::toJsonValue(m_client_workgroup_name));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_margin_percent_isSet) {
        obj.insert(QString("margin_percent"), ::OpenAPI::toJsonValue(m_margin_percent));
    }
    if (m_markup_isSet) {
        obj.insert(QString("markup"), ::OpenAPI::toJsonValue(m_markup));
    }
    if (m_markup_percent_isSet) {
        obj.insert(QString("markup_percent"), ::OpenAPI::toJsonValue(m_markup_percent));
    }
    return obj;
}

qint64 OAIClientWorkgroupDetailVO::getClientAcWorkgroupId() const {
    return m_client_ac_workgroup_id;
}
void OAIClientWorkgroupDetailVO::setClientAcWorkgroupId(const qint64 &client_ac_workgroup_id) {
    m_client_ac_workgroup_id = client_ac_workgroup_id;
    m_client_ac_workgroup_id_isSet = true;
}

bool OAIClientWorkgroupDetailVO::is_client_ac_workgroup_id_Set() const{
    return m_client_ac_workgroup_id_isSet;
}

bool OAIClientWorkgroupDetailVO::is_client_ac_workgroup_id_Valid() const{
    return m_client_ac_workgroup_id_isValid;
}

qint64 OAIClientWorkgroupDetailVO::getClientWorkgroupId() const {
    return m_client_workgroup_id;
}
void OAIClientWorkgroupDetailVO::setClientWorkgroupId(const qint64 &client_workgroup_id) {
    m_client_workgroup_id = client_workgroup_id;
    m_client_workgroup_id_isSet = true;
}

bool OAIClientWorkgroupDetailVO::is_client_workgroup_id_Set() const{
    return m_client_workgroup_id_isSet;
}

bool OAIClientWorkgroupDetailVO::is_client_workgroup_id_Valid() const{
    return m_client_workgroup_id_isValid;
}

QString OAIClientWorkgroupDetailVO::getClientWorkgroupName() const {
    return m_client_workgroup_name;
}
void OAIClientWorkgroupDetailVO::setClientWorkgroupName(const QString &client_workgroup_name) {
    m_client_workgroup_name = client_workgroup_name;
    m_client_workgroup_name_isSet = true;
}

bool OAIClientWorkgroupDetailVO::is_client_workgroup_name_Set() const{
    return m_client_workgroup_name_isSet;
}

bool OAIClientWorkgroupDetailVO::is_client_workgroup_name_Valid() const{
    return m_client_workgroup_name_isValid;
}

QList<OAIPropertyPaAndAttVO> OAIClientWorkgroupDetailVO::getCustomFields() const {
    return m_custom_fields;
}
void OAIClientWorkgroupDetailVO::setCustomFields(const QList<OAIPropertyPaAndAttVO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIClientWorkgroupDetailVO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIClientWorkgroupDetailVO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QJsonValue OAIClientWorkgroupDetailVO::getMarginPercent() const {
    return m_margin_percent;
}
void OAIClientWorkgroupDetailVO::setMarginPercent(const QJsonValue &margin_percent) {
    m_margin_percent = margin_percent;
    m_margin_percent_isSet = true;
}

bool OAIClientWorkgroupDetailVO::is_margin_percent_Set() const{
    return m_margin_percent_isSet;
}

bool OAIClientWorkgroupDetailVO::is_margin_percent_Valid() const{
    return m_margin_percent_isValid;
}

QJsonValue OAIClientWorkgroupDetailVO::getMarkup() const {
    return m_markup;
}
void OAIClientWorkgroupDetailVO::setMarkup(const QJsonValue &markup) {
    m_markup = markup;
    m_markup_isSet = true;
}

bool OAIClientWorkgroupDetailVO::is_markup_Set() const{
    return m_markup_isSet;
}

bool OAIClientWorkgroupDetailVO::is_markup_Valid() const{
    return m_markup_isValid;
}

QJsonValue OAIClientWorkgroupDetailVO::getMarkupPercent() const {
    return m_markup_percent;
}
void OAIClientWorkgroupDetailVO::setMarkupPercent(const QJsonValue &markup_percent) {
    m_markup_percent = markup_percent;
    m_markup_percent_isSet = true;
}

bool OAIClientWorkgroupDetailVO::is_markup_percent_Set() const{
    return m_markup_percent_isSet;
}

bool OAIClientWorkgroupDetailVO::is_markup_percent_Valid() const{
    return m_markup_percent_isValid;
}

bool OAIClientWorkgroupDetailVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_ac_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_workgroup_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_margin_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_markup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_markup_percent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientWorkgroupDetailVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
