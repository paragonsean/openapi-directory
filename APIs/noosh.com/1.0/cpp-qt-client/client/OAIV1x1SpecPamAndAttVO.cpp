/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1x1SpecPamAndAttVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1x1SpecPamAndAttVO::OAIV1x1SpecPamAndAttVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1x1SpecPamAndAttVO::OAIV1x1SpecPamAndAttVO() {
    this->initializeModel();
}

OAIV1x1SpecPamAndAttVO::~OAIV1x1SpecPamAndAttVO() {}

void OAIV1x1SpecPamAndAttVO::initializeModel() {

    m_attribute_id_isSet = false;
    m_attribute_id_isValid = false;

    m_attribute_value_isSet = false;
    m_attribute_value_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_param_id_isSet = false;
    m_param_id_isValid = false;

    m_param_name_isSet = false;
    m_param_name_isValid = false;
}

void OAIV1x1SpecPamAndAttVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1x1SpecPamAndAttVO::fromJsonObject(QJsonObject json) {

    m_attribute_id_isValid = ::OpenAPI::fromJsonValue(m_attribute_id, json[QString("attribute_id")]);
    m_attribute_id_isSet = !json[QString("attribute_id")].isNull() && m_attribute_id_isValid;

    m_attribute_value_isValid = ::OpenAPI::fromJsonValue(m_attribute_value, json[QString("attribute_value")]);
    m_attribute_value_isSet = !json[QString("attribute_value")].isNull() && m_attribute_value_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_param_id_isValid = ::OpenAPI::fromJsonValue(m_param_id, json[QString("param_id")]);
    m_param_id_isSet = !json[QString("param_id")].isNull() && m_param_id_isValid;

    m_param_name_isValid = ::OpenAPI::fromJsonValue(m_param_name, json[QString("param_name")]);
    m_param_name_isSet = !json[QString("param_name")].isNull() && m_param_name_isValid;
}

QString OAIV1x1SpecPamAndAttVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1x1SpecPamAndAttVO::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_id_isSet) {
        obj.insert(QString("attribute_id"), ::OpenAPI::toJsonValue(m_attribute_id));
    }
    if (m_attribute_value_isSet) {
        obj.insert(QString("attribute_value"), ::OpenAPI::toJsonValue(m_attribute_value));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_param_id_isSet) {
        obj.insert(QString("param_id"), ::OpenAPI::toJsonValue(m_param_id));
    }
    if (m_param_name_isSet) {
        obj.insert(QString("param_name"), ::OpenAPI::toJsonValue(m_param_name));
    }
    return obj;
}

qint64 OAIV1x1SpecPamAndAttVO::getAttributeId() const {
    return m_attribute_id;
}
void OAIV1x1SpecPamAndAttVO::setAttributeId(const qint64 &attribute_id) {
    m_attribute_id = attribute_id;
    m_attribute_id_isSet = true;
}

bool OAIV1x1SpecPamAndAttVO::is_attribute_id_Set() const{
    return m_attribute_id_isSet;
}

bool OAIV1x1SpecPamAndAttVO::is_attribute_id_Valid() const{
    return m_attribute_id_isValid;
}

QJsonValue OAIV1x1SpecPamAndAttVO::getAttributeValue() const {
    return m_attribute_value;
}
void OAIV1x1SpecPamAndAttVO::setAttributeValue(const QJsonValue &attribute_value) {
    m_attribute_value = attribute_value;
    m_attribute_value_isSet = true;
}

bool OAIV1x1SpecPamAndAttVO::is_attribute_value_Set() const{
    return m_attribute_value_isSet;
}

bool OAIV1x1SpecPamAndAttVO::is_attribute_value_Valid() const{
    return m_attribute_value_isValid;
}

QString OAIV1x1SpecPamAndAttVO::getLabel() const {
    return m_label;
}
void OAIV1x1SpecPamAndAttVO::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIV1x1SpecPamAndAttVO::is_label_Set() const{
    return m_label_isSet;
}

bool OAIV1x1SpecPamAndAttVO::is_label_Valid() const{
    return m_label_isValid;
}

qint64 OAIV1x1SpecPamAndAttVO::getParamId() const {
    return m_param_id;
}
void OAIV1x1SpecPamAndAttVO::setParamId(const qint64 &param_id) {
    m_param_id = param_id;
    m_param_id_isSet = true;
}

bool OAIV1x1SpecPamAndAttVO::is_param_id_Set() const{
    return m_param_id_isSet;
}

bool OAIV1x1SpecPamAndAttVO::is_param_id_Valid() const{
    return m_param_id_isValid;
}

QString OAIV1x1SpecPamAndAttVO::getParamName() const {
    return m_param_name;
}
void OAIV1x1SpecPamAndAttVO::setParamName(const QString &param_name) {
    m_param_name = param_name;
    m_param_name_isSet = true;
}

bool OAIV1x1SpecPamAndAttVO::is_param_name_Set() const{
    return m_param_name_isSet;
}

bool OAIV1x1SpecPamAndAttVO::is_param_name_Valid() const{
    return m_param_name_isValid;
}

bool OAIV1x1SpecPamAndAttVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_param_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_param_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1x1SpecPamAndAttVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
