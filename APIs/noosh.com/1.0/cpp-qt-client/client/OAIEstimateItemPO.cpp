/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEstimateItemPO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEstimateItemPO::OAIEstimateItemPO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEstimateItemPO::OAIEstimateItemPO() {
    this->initializeModel();
}

OAIEstimateItemPO::~OAIEstimateItemPO() {}

void OAIEstimateItemPO::initializeModel() {

    m_paper_items_isSet = false;
    m_paper_items_isValid = false;

    m_quantity_1_price_isSet = false;
    m_quantity_1_price_isValid = false;

    m_quantity_1_shipping_isSet = false;
    m_quantity_1_shipping_isValid = false;

    m_quantity_1_tax_isSet = false;
    m_quantity_1_tax_isValid = false;

    m_quantity_2_price_isSet = false;
    m_quantity_2_price_isValid = false;

    m_quantity_2_shipping_isSet = false;
    m_quantity_2_shipping_isValid = false;

    m_quantity_2_tax_isSet = false;
    m_quantity_2_tax_isValid = false;

    m_quantity_3_price_isSet = false;
    m_quantity_3_price_isValid = false;

    m_quantity_3_shipping_isSet = false;
    m_quantity_3_shipping_isValid = false;

    m_quantity_3_tax_isSet = false;
    m_quantity_3_tax_isValid = false;

    m_quantity_4_price_isSet = false;
    m_quantity_4_price_isValid = false;

    m_quantity_4_shipping_isSet = false;
    m_quantity_4_shipping_isValid = false;

    m_quantity_4_tax_isSet = false;
    m_quantity_4_tax_isValid = false;

    m_quantity_5_price_isSet = false;
    m_quantity_5_price_isValid = false;

    m_quantity_5_shipping_isSet = false;
    m_quantity_5_shipping_isValid = false;

    m_quantity_5_tax_isSet = false;
    m_quantity_5_tax_isValid = false;

    m_rfe_item_id_isSet = false;
    m_rfe_item_id_isValid = false;
}

void OAIEstimateItemPO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEstimateItemPO::fromJsonObject(QJsonObject json) {

    m_paper_items_isValid = ::OpenAPI::fromJsonValue(m_paper_items, json[QString("paper_items")]);
    m_paper_items_isSet = !json[QString("paper_items")].isNull() && m_paper_items_isValid;

    m_quantity_1_price_isValid = ::OpenAPI::fromJsonValue(m_quantity_1_price, json[QString("quantity_1_price")]);
    m_quantity_1_price_isSet = !json[QString("quantity_1_price")].isNull() && m_quantity_1_price_isValid;

    m_quantity_1_shipping_isValid = ::OpenAPI::fromJsonValue(m_quantity_1_shipping, json[QString("quantity_1_shipping")]);
    m_quantity_1_shipping_isSet = !json[QString("quantity_1_shipping")].isNull() && m_quantity_1_shipping_isValid;

    m_quantity_1_tax_isValid = ::OpenAPI::fromJsonValue(m_quantity_1_tax, json[QString("quantity_1_tax")]);
    m_quantity_1_tax_isSet = !json[QString("quantity_1_tax")].isNull() && m_quantity_1_tax_isValid;

    m_quantity_2_price_isValid = ::OpenAPI::fromJsonValue(m_quantity_2_price, json[QString("quantity_2_price")]);
    m_quantity_2_price_isSet = !json[QString("quantity_2_price")].isNull() && m_quantity_2_price_isValid;

    m_quantity_2_shipping_isValid = ::OpenAPI::fromJsonValue(m_quantity_2_shipping, json[QString("quantity_2_shipping")]);
    m_quantity_2_shipping_isSet = !json[QString("quantity_2_shipping")].isNull() && m_quantity_2_shipping_isValid;

    m_quantity_2_tax_isValid = ::OpenAPI::fromJsonValue(m_quantity_2_tax, json[QString("quantity_2_tax")]);
    m_quantity_2_tax_isSet = !json[QString("quantity_2_tax")].isNull() && m_quantity_2_tax_isValid;

    m_quantity_3_price_isValid = ::OpenAPI::fromJsonValue(m_quantity_3_price, json[QString("quantity_3_price")]);
    m_quantity_3_price_isSet = !json[QString("quantity_3_price")].isNull() && m_quantity_3_price_isValid;

    m_quantity_3_shipping_isValid = ::OpenAPI::fromJsonValue(m_quantity_3_shipping, json[QString("quantity_3_shipping")]);
    m_quantity_3_shipping_isSet = !json[QString("quantity_3_shipping")].isNull() && m_quantity_3_shipping_isValid;

    m_quantity_3_tax_isValid = ::OpenAPI::fromJsonValue(m_quantity_3_tax, json[QString("quantity_3_tax")]);
    m_quantity_3_tax_isSet = !json[QString("quantity_3_tax")].isNull() && m_quantity_3_tax_isValid;

    m_quantity_4_price_isValid = ::OpenAPI::fromJsonValue(m_quantity_4_price, json[QString("quantity_4_price")]);
    m_quantity_4_price_isSet = !json[QString("quantity_4_price")].isNull() && m_quantity_4_price_isValid;

    m_quantity_4_shipping_isValid = ::OpenAPI::fromJsonValue(m_quantity_4_shipping, json[QString("quantity_4_shipping")]);
    m_quantity_4_shipping_isSet = !json[QString("quantity_4_shipping")].isNull() && m_quantity_4_shipping_isValid;

    m_quantity_4_tax_isValid = ::OpenAPI::fromJsonValue(m_quantity_4_tax, json[QString("quantity_4_tax")]);
    m_quantity_4_tax_isSet = !json[QString("quantity_4_tax")].isNull() && m_quantity_4_tax_isValid;

    m_quantity_5_price_isValid = ::OpenAPI::fromJsonValue(m_quantity_5_price, json[QString("quantity_5_price")]);
    m_quantity_5_price_isSet = !json[QString("quantity_5_price")].isNull() && m_quantity_5_price_isValid;

    m_quantity_5_shipping_isValid = ::OpenAPI::fromJsonValue(m_quantity_5_shipping, json[QString("quantity_5_shipping")]);
    m_quantity_5_shipping_isSet = !json[QString("quantity_5_shipping")].isNull() && m_quantity_5_shipping_isValid;

    m_quantity_5_tax_isValid = ::OpenAPI::fromJsonValue(m_quantity_5_tax, json[QString("quantity_5_tax")]);
    m_quantity_5_tax_isSet = !json[QString("quantity_5_tax")].isNull() && m_quantity_5_tax_isValid;

    m_rfe_item_id_isValid = ::OpenAPI::fromJsonValue(m_rfe_item_id, json[QString("rfe_item_id")]);
    m_rfe_item_id_isSet = !json[QString("rfe_item_id")].isNull() && m_rfe_item_id_isValid;
}

QString OAIEstimateItemPO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEstimateItemPO::asJsonObject() const {
    QJsonObject obj;
    if (m_paper_items.size() > 0) {
        obj.insert(QString("paper_items"), ::OpenAPI::toJsonValue(m_paper_items));
    }
    if (m_quantity_1_price_isSet) {
        obj.insert(QString("quantity_1_price"), ::OpenAPI::toJsonValue(m_quantity_1_price));
    }
    if (m_quantity_1_shipping_isSet) {
        obj.insert(QString("quantity_1_shipping"), ::OpenAPI::toJsonValue(m_quantity_1_shipping));
    }
    if (m_quantity_1_tax_isSet) {
        obj.insert(QString("quantity_1_tax"), ::OpenAPI::toJsonValue(m_quantity_1_tax));
    }
    if (m_quantity_2_price_isSet) {
        obj.insert(QString("quantity_2_price"), ::OpenAPI::toJsonValue(m_quantity_2_price));
    }
    if (m_quantity_2_shipping_isSet) {
        obj.insert(QString("quantity_2_shipping"), ::OpenAPI::toJsonValue(m_quantity_2_shipping));
    }
    if (m_quantity_2_tax_isSet) {
        obj.insert(QString("quantity_2_tax"), ::OpenAPI::toJsonValue(m_quantity_2_tax));
    }
    if (m_quantity_3_price_isSet) {
        obj.insert(QString("quantity_3_price"), ::OpenAPI::toJsonValue(m_quantity_3_price));
    }
    if (m_quantity_3_shipping_isSet) {
        obj.insert(QString("quantity_3_shipping"), ::OpenAPI::toJsonValue(m_quantity_3_shipping));
    }
    if (m_quantity_3_tax_isSet) {
        obj.insert(QString("quantity_3_tax"), ::OpenAPI::toJsonValue(m_quantity_3_tax));
    }
    if (m_quantity_4_price_isSet) {
        obj.insert(QString("quantity_4_price"), ::OpenAPI::toJsonValue(m_quantity_4_price));
    }
    if (m_quantity_4_shipping_isSet) {
        obj.insert(QString("quantity_4_shipping"), ::OpenAPI::toJsonValue(m_quantity_4_shipping));
    }
    if (m_quantity_4_tax_isSet) {
        obj.insert(QString("quantity_4_tax"), ::OpenAPI::toJsonValue(m_quantity_4_tax));
    }
    if (m_quantity_5_price_isSet) {
        obj.insert(QString("quantity_5_price"), ::OpenAPI::toJsonValue(m_quantity_5_price));
    }
    if (m_quantity_5_shipping_isSet) {
        obj.insert(QString("quantity_5_shipping"), ::OpenAPI::toJsonValue(m_quantity_5_shipping));
    }
    if (m_quantity_5_tax_isSet) {
        obj.insert(QString("quantity_5_tax"), ::OpenAPI::toJsonValue(m_quantity_5_tax));
    }
    if (m_rfe_item_id_isSet) {
        obj.insert(QString("rfe_item_id"), ::OpenAPI::toJsonValue(m_rfe_item_id));
    }
    return obj;
}

QList<OAIPaperItemPO> OAIEstimateItemPO::getPaperItems() const {
    return m_paper_items;
}
void OAIEstimateItemPO::setPaperItems(const QList<OAIPaperItemPO> &paper_items) {
    m_paper_items = paper_items;
    m_paper_items_isSet = true;
}

bool OAIEstimateItemPO::is_paper_items_Set() const{
    return m_paper_items_isSet;
}

bool OAIEstimateItemPO::is_paper_items_Valid() const{
    return m_paper_items_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity1Price() const {
    return m_quantity_1_price;
}
void OAIEstimateItemPO::setQuantity1Price(const QJsonValue &quantity_1_price) {
    m_quantity_1_price = quantity_1_price;
    m_quantity_1_price_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_1_price_Set() const{
    return m_quantity_1_price_isSet;
}

bool OAIEstimateItemPO::is_quantity_1_price_Valid() const{
    return m_quantity_1_price_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity1Shipping() const {
    return m_quantity_1_shipping;
}
void OAIEstimateItemPO::setQuantity1Shipping(const QJsonValue &quantity_1_shipping) {
    m_quantity_1_shipping = quantity_1_shipping;
    m_quantity_1_shipping_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_1_shipping_Set() const{
    return m_quantity_1_shipping_isSet;
}

bool OAIEstimateItemPO::is_quantity_1_shipping_Valid() const{
    return m_quantity_1_shipping_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity1Tax() const {
    return m_quantity_1_tax;
}
void OAIEstimateItemPO::setQuantity1Tax(const QJsonValue &quantity_1_tax) {
    m_quantity_1_tax = quantity_1_tax;
    m_quantity_1_tax_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_1_tax_Set() const{
    return m_quantity_1_tax_isSet;
}

bool OAIEstimateItemPO::is_quantity_1_tax_Valid() const{
    return m_quantity_1_tax_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity2Price() const {
    return m_quantity_2_price;
}
void OAIEstimateItemPO::setQuantity2Price(const QJsonValue &quantity_2_price) {
    m_quantity_2_price = quantity_2_price;
    m_quantity_2_price_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_2_price_Set() const{
    return m_quantity_2_price_isSet;
}

bool OAIEstimateItemPO::is_quantity_2_price_Valid() const{
    return m_quantity_2_price_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity2Shipping() const {
    return m_quantity_2_shipping;
}
void OAIEstimateItemPO::setQuantity2Shipping(const QJsonValue &quantity_2_shipping) {
    m_quantity_2_shipping = quantity_2_shipping;
    m_quantity_2_shipping_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_2_shipping_Set() const{
    return m_quantity_2_shipping_isSet;
}

bool OAIEstimateItemPO::is_quantity_2_shipping_Valid() const{
    return m_quantity_2_shipping_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity2Tax() const {
    return m_quantity_2_tax;
}
void OAIEstimateItemPO::setQuantity2Tax(const QJsonValue &quantity_2_tax) {
    m_quantity_2_tax = quantity_2_tax;
    m_quantity_2_tax_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_2_tax_Set() const{
    return m_quantity_2_tax_isSet;
}

bool OAIEstimateItemPO::is_quantity_2_tax_Valid() const{
    return m_quantity_2_tax_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity3Price() const {
    return m_quantity_3_price;
}
void OAIEstimateItemPO::setQuantity3Price(const QJsonValue &quantity_3_price) {
    m_quantity_3_price = quantity_3_price;
    m_quantity_3_price_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_3_price_Set() const{
    return m_quantity_3_price_isSet;
}

bool OAIEstimateItemPO::is_quantity_3_price_Valid() const{
    return m_quantity_3_price_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity3Shipping() const {
    return m_quantity_3_shipping;
}
void OAIEstimateItemPO::setQuantity3Shipping(const QJsonValue &quantity_3_shipping) {
    m_quantity_3_shipping = quantity_3_shipping;
    m_quantity_3_shipping_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_3_shipping_Set() const{
    return m_quantity_3_shipping_isSet;
}

bool OAIEstimateItemPO::is_quantity_3_shipping_Valid() const{
    return m_quantity_3_shipping_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity3Tax() const {
    return m_quantity_3_tax;
}
void OAIEstimateItemPO::setQuantity3Tax(const QJsonValue &quantity_3_tax) {
    m_quantity_3_tax = quantity_3_tax;
    m_quantity_3_tax_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_3_tax_Set() const{
    return m_quantity_3_tax_isSet;
}

bool OAIEstimateItemPO::is_quantity_3_tax_Valid() const{
    return m_quantity_3_tax_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity4Price() const {
    return m_quantity_4_price;
}
void OAIEstimateItemPO::setQuantity4Price(const QJsonValue &quantity_4_price) {
    m_quantity_4_price = quantity_4_price;
    m_quantity_4_price_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_4_price_Set() const{
    return m_quantity_4_price_isSet;
}

bool OAIEstimateItemPO::is_quantity_4_price_Valid() const{
    return m_quantity_4_price_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity4Shipping() const {
    return m_quantity_4_shipping;
}
void OAIEstimateItemPO::setQuantity4Shipping(const QJsonValue &quantity_4_shipping) {
    m_quantity_4_shipping = quantity_4_shipping;
    m_quantity_4_shipping_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_4_shipping_Set() const{
    return m_quantity_4_shipping_isSet;
}

bool OAIEstimateItemPO::is_quantity_4_shipping_Valid() const{
    return m_quantity_4_shipping_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity4Tax() const {
    return m_quantity_4_tax;
}
void OAIEstimateItemPO::setQuantity4Tax(const QJsonValue &quantity_4_tax) {
    m_quantity_4_tax = quantity_4_tax;
    m_quantity_4_tax_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_4_tax_Set() const{
    return m_quantity_4_tax_isSet;
}

bool OAIEstimateItemPO::is_quantity_4_tax_Valid() const{
    return m_quantity_4_tax_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity5Price() const {
    return m_quantity_5_price;
}
void OAIEstimateItemPO::setQuantity5Price(const QJsonValue &quantity_5_price) {
    m_quantity_5_price = quantity_5_price;
    m_quantity_5_price_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_5_price_Set() const{
    return m_quantity_5_price_isSet;
}

bool OAIEstimateItemPO::is_quantity_5_price_Valid() const{
    return m_quantity_5_price_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity5Shipping() const {
    return m_quantity_5_shipping;
}
void OAIEstimateItemPO::setQuantity5Shipping(const QJsonValue &quantity_5_shipping) {
    m_quantity_5_shipping = quantity_5_shipping;
    m_quantity_5_shipping_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_5_shipping_Set() const{
    return m_quantity_5_shipping_isSet;
}

bool OAIEstimateItemPO::is_quantity_5_shipping_Valid() const{
    return m_quantity_5_shipping_isValid;
}

QJsonValue OAIEstimateItemPO::getQuantity5Tax() const {
    return m_quantity_5_tax;
}
void OAIEstimateItemPO::setQuantity5Tax(const QJsonValue &quantity_5_tax) {
    m_quantity_5_tax = quantity_5_tax;
    m_quantity_5_tax_isSet = true;
}

bool OAIEstimateItemPO::is_quantity_5_tax_Set() const{
    return m_quantity_5_tax_isSet;
}

bool OAIEstimateItemPO::is_quantity_5_tax_Valid() const{
    return m_quantity_5_tax_isValid;
}

qint64 OAIEstimateItemPO::getRfeItemId() const {
    return m_rfe_item_id;
}
void OAIEstimateItemPO::setRfeItemId(const qint64 &rfe_item_id) {
    m_rfe_item_id = rfe_item_id;
    m_rfe_item_id_isSet = true;
}

bool OAIEstimateItemPO::is_rfe_item_id_Set() const{
    return m_rfe_item_id_isSet;
}

bool OAIEstimateItemPO::is_rfe_item_id_Valid() const{
    return m_rfe_item_id_isValid;
}

bool OAIEstimateItemPO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_paper_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_1_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_1_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_1_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_2_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_2_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_2_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_3_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_3_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_3_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_4_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_4_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_4_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_5_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_5_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_5_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rfe_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEstimateItemPO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
