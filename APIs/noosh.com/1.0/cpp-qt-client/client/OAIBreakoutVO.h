/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBreakoutVO.h
 *
 * Java type: com.noosh.nooshapi.vo.BreakoutVO
 */

#ifndef OAIBreakoutVO_H
#define OAIBreakoutVO_H

#include <QJsonObject>

#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBreakoutVO : public OAIObject {
public:
    OAIBreakoutVO();
    OAIBreakoutVO(QString json);
    ~OAIBreakoutVO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBreakoutId() const;
    void setBreakoutId(const qint64 &breakout_id);
    bool is_breakout_id_Set() const;
    bool is_breakout_id_Valid() const;

    QString getBreakoutName() const;
    void setBreakoutName(const QString &breakout_name);
    bool is_breakout_name_Set() const;
    bool is_breakout_name_Valid() const;

    QJsonValue getBreakoutPreMarkup() const;
    void setBreakoutPreMarkup(const QJsonValue &breakout_pre_markup);
    bool is_breakout_pre_markup_Set() const;
    bool is_breakout_pre_markup_Valid() const;

    QJsonValue getBreakoutPrice() const;
    void setBreakoutPrice(const QJsonValue &breakout_price);
    bool is_breakout_price_Set() const;
    bool is_breakout_price_Valid() const;

    QJsonValue getTransactionalBreakoutPreMarkup() const;
    void setTransactionalBreakoutPreMarkup(const QJsonValue &transactional_breakout_pre_markup);
    bool is_transactional_breakout_pre_markup_Set() const;
    bool is_transactional_breakout_pre_markup_Valid() const;

    QJsonValue getTransactionalBreakoutPrice() const;
    void setTransactionalBreakoutPrice(const QJsonValue &transactional_breakout_price);
    bool is_transactional_breakout_price_Set() const;
    bool is_transactional_breakout_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_breakout_id;
    bool m_breakout_id_isSet;
    bool m_breakout_id_isValid;

    QString m_breakout_name;
    bool m_breakout_name_isSet;
    bool m_breakout_name_isValid;

    QJsonValue m_breakout_pre_markup;
    bool m_breakout_pre_markup_isSet;
    bool m_breakout_pre_markup_isValid;

    QJsonValue m_breakout_price;
    bool m_breakout_price_isSet;
    bool m_breakout_price_isValid;

    QJsonValue m_transactional_breakout_pre_markup;
    bool m_transactional_breakout_pre_markup_isSet;
    bool m_transactional_breakout_pre_markup_isValid;

    QJsonValue m_transactional_breakout_price;
    bool m_transactional_breakout_price_isSet;
    bool m_transactional_breakout_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBreakoutVO)

#endif // OAIBreakoutVO_H
