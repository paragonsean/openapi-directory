/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMultiExchangeRatePersisitVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMultiExchangeRatePersisitVO::OAIMultiExchangeRatePersisitVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMultiExchangeRatePersisitVO::OAIMultiExchangeRatePersisitVO() {
    this->initializeModel();
}

OAIMultiExchangeRatePersisitVO::~OAIMultiExchangeRatePersisitVO() {}

void OAIMultiExchangeRatePersisitVO::initializeModel() {

    m_activate_date_isSet = false;
    m_activate_date_isValid = false;

    m_bu_client_workgroup_id_isSet = false;
    m_bu_client_workgroup_id_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_rate_isSet = false;
    m_rate_isValid = false;

    m_target_isSet = false;
    m_target_isValid = false;
}

void OAIMultiExchangeRatePersisitVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMultiExchangeRatePersisitVO::fromJsonObject(QJsonObject json) {

    m_activate_date_isValid = ::OpenAPI::fromJsonValue(m_activate_date, json[QString("activate_date")]);
    m_activate_date_isSet = !json[QString("activate_date")].isNull() && m_activate_date_isValid;

    m_bu_client_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_bu_client_workgroup_id, json[QString("buClientWorkgroupId")]);
    m_bu_client_workgroup_id_isSet = !json[QString("buClientWorkgroupId")].isNull() && m_bu_client_workgroup_id_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_rate_isValid = ::OpenAPI::fromJsonValue(m_rate, json[QString("rate")]);
    m_rate_isSet = !json[QString("rate")].isNull() && m_rate_isValid;

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("target")]);
    m_target_isSet = !json[QString("target")].isNull() && m_target_isValid;
}

QString OAIMultiExchangeRatePersisitVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMultiExchangeRatePersisitVO::asJsonObject() const {
    QJsonObject obj;
    if (m_activate_date_isSet) {
        obj.insert(QString("activate_date"), ::OpenAPI::toJsonValue(m_activate_date));
    }
    if (m_bu_client_workgroup_id_isSet) {
        obj.insert(QString("buClientWorkgroupId"), ::OpenAPI::toJsonValue(m_bu_client_workgroup_id));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_rate_isSet) {
        obj.insert(QString("rate"), ::OpenAPI::toJsonValue(m_rate));
    }
    if (m_target_isSet) {
        obj.insert(QString("target"), ::OpenAPI::toJsonValue(m_target));
    }
    return obj;
}

QDate OAIMultiExchangeRatePersisitVO::getActivateDate() const {
    return m_activate_date;
}
void OAIMultiExchangeRatePersisitVO::setActivateDate(const QDate &activate_date) {
    m_activate_date = activate_date;
    m_activate_date_isSet = true;
}

bool OAIMultiExchangeRatePersisitVO::is_activate_date_Set() const{
    return m_activate_date_isSet;
}

bool OAIMultiExchangeRatePersisitVO::is_activate_date_Valid() const{
    return m_activate_date_isValid;
}

qint64 OAIMultiExchangeRatePersisitVO::getBuClientWorkgroupId() const {
    return m_bu_client_workgroup_id;
}
void OAIMultiExchangeRatePersisitVO::setBuClientWorkgroupId(const qint64 &bu_client_workgroup_id) {
    m_bu_client_workgroup_id = bu_client_workgroup_id;
    m_bu_client_workgroup_id_isSet = true;
}

bool OAIMultiExchangeRatePersisitVO::is_bu_client_workgroup_id_Set() const{
    return m_bu_client_workgroup_id_isSet;
}

bool OAIMultiExchangeRatePersisitVO::is_bu_client_workgroup_id_Valid() const{
    return m_bu_client_workgroup_id_isValid;
}

QString OAIMultiExchangeRatePersisitVO::getCurrency() const {
    return m_currency;
}
void OAIMultiExchangeRatePersisitVO::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIMultiExchangeRatePersisitVO::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIMultiExchangeRatePersisitVO::is_currency_Valid() const{
    return m_currency_isValid;
}

QJsonValue OAIMultiExchangeRatePersisitVO::getRate() const {
    return m_rate;
}
void OAIMultiExchangeRatePersisitVO::setRate(const QJsonValue &rate) {
    m_rate = rate;
    m_rate_isSet = true;
}

bool OAIMultiExchangeRatePersisitVO::is_rate_Set() const{
    return m_rate_isSet;
}

bool OAIMultiExchangeRatePersisitVO::is_rate_Valid() const{
    return m_rate_isValid;
}

QString OAIMultiExchangeRatePersisitVO::getTarget() const {
    return m_target;
}
void OAIMultiExchangeRatePersisitVO::setTarget(const QString &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAIMultiExchangeRatePersisitVO::is_target_Set() const{
    return m_target_isSet;
}

bool OAIMultiExchangeRatePersisitVO::is_target_Valid() const{
    return m_target_isValid;
}

bool OAIMultiExchangeRatePersisitVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activate_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bu_client_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMultiExchangeRatePersisitVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
