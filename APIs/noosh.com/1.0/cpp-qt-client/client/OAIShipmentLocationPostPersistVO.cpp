/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShipmentLocationPostPersistVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShipmentLocationPostPersistVO::OAIShipmentLocationPostPersistVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShipmentLocationPostPersistVO::OAIShipmentLocationPostPersistVO() {
    this->initializeModel();
}

OAIShipmentLocationPostPersistVO::~OAIShipmentLocationPostPersistVO() {}

void OAIShipmentLocationPostPersistVO::initializeModel() {

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_address_line3_isSet = false;
    m_address_line3_isValid = false;

    m_batch_label_isSet = false;
    m_batch_label_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_country_iso_code_isSet = false;
    m_country_iso_code_isValid = false;

    m_delivery_date_isSet = false;
    m_delivery_date_isValid = false;

    m_description_or_title_isSet = false;
    m_description_or_title_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_inner_carton_label_isSet = false;
    m_inner_carton_label_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_outer_carton_label_isSet = false;
    m_outer_carton_label_isValid = false;

    m_pallet_lablel_isSet = false;
    m_pallet_lablel_isValid = false;

    m_poof_type_isSet = false;
    m_poof_type_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_request_type_isSet = false;
    m_request_type_isValid = false;

    m_requested_quantity_isSet = false;
    m_requested_quantity_isValid = false;

    m_shipment_custom_fields_isSet = false;
    m_shipment_custom_fields_isValid = false;

    m_shipment_request_custom_fields_isSet = false;
    m_shipment_request_custom_fields_isValid = false;

    m_shipping_carrier_isSet = false;
    m_shipping_carrier_isValid = false;

    m_shipping_instruction_isSet = false;
    m_shipping_instruction_isValid = false;

    m_shpping_method_isSet = false;
    m_shpping_method_isValid = false;

    m_spec_ids_isSet = false;
    m_spec_ids_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_work_phone_number_isSet = false;
    m_work_phone_number_isValid = false;

    m_workgroup_name_isSet = false;
    m_workgroup_name_isValid = false;
}

void OAIShipmentLocationPostPersistVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShipmentLocationPostPersistVO::fromJsonObject(QJsonObject json) {

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("address_line1")]);
    m_address_line1_isSet = !json[QString("address_line1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("address_line2")]);
    m_address_line2_isSet = !json[QString("address_line2")].isNull() && m_address_line2_isValid;

    m_address_line3_isValid = ::OpenAPI::fromJsonValue(m_address_line3, json[QString("address_line3")]);
    m_address_line3_isSet = !json[QString("address_line3")].isNull() && m_address_line3_isValid;

    m_batch_label_isValid = ::OpenAPI::fromJsonValue(m_batch_label, json[QString("batch_label")]);
    m_batch_label_isSet = !json[QString("batch_label")].isNull() && m_batch_label_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_country_iso_code_isValid = ::OpenAPI::fromJsonValue(m_country_iso_code, json[QString("country_iso_code")]);
    m_country_iso_code_isSet = !json[QString("country_iso_code")].isNull() && m_country_iso_code_isValid;

    m_delivery_date_isValid = ::OpenAPI::fromJsonValue(m_delivery_date, json[QString("delivery_date")]);
    m_delivery_date_isSet = !json[QString("delivery_date")].isNull() && m_delivery_date_isValid;

    m_description_or_title_isValid = ::OpenAPI::fromJsonValue(m_description_or_title, json[QString("description_or_title")]);
    m_description_or_title_isSet = !json[QString("description_or_title")].isNull() && m_description_or_title_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_inner_carton_label_isValid = ::OpenAPI::fromJsonValue(m_inner_carton_label, json[QString("inner_carton_label")]);
    m_inner_carton_label_isSet = !json[QString("inner_carton_label")].isNull() && m_inner_carton_label_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middle_name")]);
    m_middle_name_isSet = !json[QString("middle_name")].isNull() && m_middle_name_isValid;

    m_outer_carton_label_isValid = ::OpenAPI::fromJsonValue(m_outer_carton_label, json[QString("outer_carton_label")]);
    m_outer_carton_label_isSet = !json[QString("outer_carton_label")].isNull() && m_outer_carton_label_isValid;

    m_pallet_lablel_isValid = ::OpenAPI::fromJsonValue(m_pallet_lablel, json[QString("pallet_lablel")]);
    m_pallet_lablel_isSet = !json[QString("pallet_lablel")].isNull() && m_pallet_lablel_isValid;

    m_poof_type_isValid = ::OpenAPI::fromJsonValue(m_poof_type, json[QString("poof_type")]);
    m_poof_type_isSet = !json[QString("poof_type")].isNull() && m_poof_type_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postal_code")]);
    m_postal_code_isSet = !json[QString("postal_code")].isNull() && m_postal_code_isValid;

    m_request_type_isValid = ::OpenAPI::fromJsonValue(m_request_type, json[QString("request_type")]);
    m_request_type_isSet = !json[QString("request_type")].isNull() && m_request_type_isValid;

    m_requested_quantity_isValid = ::OpenAPI::fromJsonValue(m_requested_quantity, json[QString("requested_quantity")]);
    m_requested_quantity_isSet = !json[QString("requested_quantity")].isNull() && m_requested_quantity_isValid;

    m_shipment_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_shipment_custom_fields, json[QString("shipment_custom_fields")]);
    m_shipment_custom_fields_isSet = !json[QString("shipment_custom_fields")].isNull() && m_shipment_custom_fields_isValid;

    m_shipment_request_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_shipment_request_custom_fields, json[QString("shipment_request_custom_fields")]);
    m_shipment_request_custom_fields_isSet = !json[QString("shipment_request_custom_fields")].isNull() && m_shipment_request_custom_fields_isValid;

    m_shipping_carrier_isValid = ::OpenAPI::fromJsonValue(m_shipping_carrier, json[QString("shipping_carrier")]);
    m_shipping_carrier_isSet = !json[QString("shipping_carrier")].isNull() && m_shipping_carrier_isValid;

    m_shipping_instruction_isValid = ::OpenAPI::fromJsonValue(m_shipping_instruction, json[QString("shipping_instruction")]);
    m_shipping_instruction_isSet = !json[QString("shipping_instruction")].isNull() && m_shipping_instruction_isValid;

    m_shpping_method_isValid = ::OpenAPI::fromJsonValue(m_shpping_method, json[QString("shpping_method")]);
    m_shpping_method_isSet = !json[QString("shpping_method")].isNull() && m_shpping_method_isValid;

    m_spec_ids_isValid = ::OpenAPI::fromJsonValue(m_spec_ids, json[QString("spec_ids")]);
    m_spec_ids_isSet = !json[QString("spec_ids")].isNull() && m_spec_ids_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_work_phone_number_isValid = ::OpenAPI::fromJsonValue(m_work_phone_number, json[QString("work_phone_number")]);
    m_work_phone_number_isSet = !json[QString("work_phone_number")].isNull() && m_work_phone_number_isValid;

    m_workgroup_name_isValid = ::OpenAPI::fromJsonValue(m_workgroup_name, json[QString("workgroup_name")]);
    m_workgroup_name_isSet = !json[QString("workgroup_name")].isNull() && m_workgroup_name_isValid;
}

QString OAIShipmentLocationPostPersistVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShipmentLocationPostPersistVO::asJsonObject() const {
    QJsonObject obj;
    if (m_address_line1_isSet) {
        obj.insert(QString("address_line1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("address_line2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_address_line3_isSet) {
        obj.insert(QString("address_line3"), ::OpenAPI::toJsonValue(m_address_line3));
    }
    if (m_batch_label_isSet) {
        obj.insert(QString("batch_label"), ::OpenAPI::toJsonValue(m_batch_label));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_country_iso_code_isSet) {
        obj.insert(QString("country_iso_code"), ::OpenAPI::toJsonValue(m_country_iso_code));
    }
    if (m_delivery_date_isSet) {
        obj.insert(QString("delivery_date"), ::OpenAPI::toJsonValue(m_delivery_date));
    }
    if (m_description_or_title_isSet) {
        obj.insert(QString("description_or_title"), ::OpenAPI::toJsonValue(m_description_or_title));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_inner_carton_label_isSet) {
        obj.insert(QString("inner_carton_label"), ::OpenAPI::toJsonValue(m_inner_carton_label));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middle_name"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_outer_carton_label_isSet) {
        obj.insert(QString("outer_carton_label"), ::OpenAPI::toJsonValue(m_outer_carton_label));
    }
    if (m_pallet_lablel_isSet) {
        obj.insert(QString("pallet_lablel"), ::OpenAPI::toJsonValue(m_pallet_lablel));
    }
    if (m_poof_type_isSet) {
        obj.insert(QString("poof_type"), ::OpenAPI::toJsonValue(m_poof_type));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postal_code"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_request_type_isSet) {
        obj.insert(QString("request_type"), ::OpenAPI::toJsonValue(m_request_type));
    }
    if (m_requested_quantity_isSet) {
        obj.insert(QString("requested_quantity"), ::OpenAPI::toJsonValue(m_requested_quantity));
    }
    if (m_shipment_custom_fields.size() > 0) {
        obj.insert(QString("shipment_custom_fields"), ::OpenAPI::toJsonValue(m_shipment_custom_fields));
    }
    if (m_shipment_request_custom_fields.size() > 0) {
        obj.insert(QString("shipment_request_custom_fields"), ::OpenAPI::toJsonValue(m_shipment_request_custom_fields));
    }
    if (m_shipping_carrier_isSet) {
        obj.insert(QString("shipping_carrier"), ::OpenAPI::toJsonValue(m_shipping_carrier));
    }
    if (m_shipping_instruction_isSet) {
        obj.insert(QString("shipping_instruction"), ::OpenAPI::toJsonValue(m_shipping_instruction));
    }
    if (m_shpping_method_isSet) {
        obj.insert(QString("shpping_method"), ::OpenAPI::toJsonValue(m_shpping_method));
    }
    if (m_spec_ids_isSet) {
        obj.insert(QString("spec_ids"), ::OpenAPI::toJsonValue(m_spec_ids));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_work_phone_number_isSet) {
        obj.insert(QString("work_phone_number"), ::OpenAPI::toJsonValue(m_work_phone_number));
    }
    if (m_workgroup_name_isSet) {
        obj.insert(QString("workgroup_name"), ::OpenAPI::toJsonValue(m_workgroup_name));
    }
    return obj;
}

QString OAIShipmentLocationPostPersistVO::getAddressLine1() const {
    return m_address_line1;
}
void OAIShipmentLocationPostPersistVO::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAIShipmentLocationPostPersistVO::getAddressLine2() const {
    return m_address_line2;
}
void OAIShipmentLocationPostPersistVO::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAIShipmentLocationPostPersistVO::getAddressLine3() const {
    return m_address_line3;
}
void OAIShipmentLocationPostPersistVO::setAddressLine3(const QString &address_line3) {
    m_address_line3 = address_line3;
    m_address_line3_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_address_line3_Set() const{
    return m_address_line3_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_address_line3_Valid() const{
    return m_address_line3_isValid;
}

QString OAIShipmentLocationPostPersistVO::getBatchLabel() const {
    return m_batch_label;
}
void OAIShipmentLocationPostPersistVO::setBatchLabel(const QString &batch_label) {
    m_batch_label = batch_label;
    m_batch_label_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_batch_label_Set() const{
    return m_batch_label_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_batch_label_Valid() const{
    return m_batch_label_isValid;
}

QString OAIShipmentLocationPostPersistVO::getCity() const {
    return m_city;
}
void OAIShipmentLocationPostPersistVO::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_city_Set() const{
    return m_city_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIShipmentLocationPostPersistVO::getCompanyName() const {
    return m_company_name;
}
void OAIShipmentLocationPostPersistVO::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAIShipmentLocationPostPersistVO::getCountryIsoCode() const {
    return m_country_iso_code;
}
void OAIShipmentLocationPostPersistVO::setCountryIsoCode(const QString &country_iso_code) {
    m_country_iso_code = country_iso_code;
    m_country_iso_code_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_country_iso_code_Set() const{
    return m_country_iso_code_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_country_iso_code_Valid() const{
    return m_country_iso_code_isValid;
}

QDate OAIShipmentLocationPostPersistVO::getDeliveryDate() const {
    return m_delivery_date;
}
void OAIShipmentLocationPostPersistVO::setDeliveryDate(const QDate &delivery_date) {
    m_delivery_date = delivery_date;
    m_delivery_date_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_delivery_date_Set() const{
    return m_delivery_date_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_delivery_date_Valid() const{
    return m_delivery_date_isValid;
}

QString OAIShipmentLocationPostPersistVO::getDescriptionOrTitle() const {
    return m_description_or_title;
}
void OAIShipmentLocationPostPersistVO::setDescriptionOrTitle(const QString &description_or_title) {
    m_description_or_title = description_or_title;
    m_description_or_title_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_description_or_title_Set() const{
    return m_description_or_title_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_description_or_title_Valid() const{
    return m_description_or_title_isValid;
}

QString OAIShipmentLocationPostPersistVO::getEmail() const {
    return m_email;
}
void OAIShipmentLocationPostPersistVO::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_email_Set() const{
    return m_email_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIShipmentLocationPostPersistVO::getFirstName() const {
    return m_first_name;
}
void OAIShipmentLocationPostPersistVO::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIShipmentLocationPostPersistVO::getInnerCartonLabel() const {
    return m_inner_carton_label;
}
void OAIShipmentLocationPostPersistVO::setInnerCartonLabel(const QString &inner_carton_label) {
    m_inner_carton_label = inner_carton_label;
    m_inner_carton_label_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_inner_carton_label_Set() const{
    return m_inner_carton_label_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_inner_carton_label_Valid() const{
    return m_inner_carton_label_isValid;
}

QString OAIShipmentLocationPostPersistVO::getLastName() const {
    return m_last_name;
}
void OAIShipmentLocationPostPersistVO::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIShipmentLocationPostPersistVO::getMiddleName() const {
    return m_middle_name;
}
void OAIShipmentLocationPostPersistVO::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAIShipmentLocationPostPersistVO::getOuterCartonLabel() const {
    return m_outer_carton_label;
}
void OAIShipmentLocationPostPersistVO::setOuterCartonLabel(const QString &outer_carton_label) {
    m_outer_carton_label = outer_carton_label;
    m_outer_carton_label_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_outer_carton_label_Set() const{
    return m_outer_carton_label_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_outer_carton_label_Valid() const{
    return m_outer_carton_label_isValid;
}

QString OAIShipmentLocationPostPersistVO::getPalletLablel() const {
    return m_pallet_lablel;
}
void OAIShipmentLocationPostPersistVO::setPalletLablel(const QString &pallet_lablel) {
    m_pallet_lablel = pallet_lablel;
    m_pallet_lablel_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_pallet_lablel_Set() const{
    return m_pallet_lablel_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_pallet_lablel_Valid() const{
    return m_pallet_lablel_isValid;
}

QString OAIShipmentLocationPostPersistVO::getPoofType() const {
    return m_poof_type;
}
void OAIShipmentLocationPostPersistVO::setPoofType(const QString &poof_type) {
    m_poof_type = poof_type;
    m_poof_type_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_poof_type_Set() const{
    return m_poof_type_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_poof_type_Valid() const{
    return m_poof_type_isValid;
}

QString OAIShipmentLocationPostPersistVO::getPostalCode() const {
    return m_postal_code;
}
void OAIShipmentLocationPostPersistVO::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIShipmentLocationPostPersistVO::getRequestType() const {
    return m_request_type;
}
void OAIShipmentLocationPostPersistVO::setRequestType(const QString &request_type) {
    m_request_type = request_type;
    m_request_type_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_request_type_Set() const{
    return m_request_type_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_request_type_Valid() const{
    return m_request_type_isValid;
}

qint64 OAIShipmentLocationPostPersistVO::getRequestedQuantity() const {
    return m_requested_quantity;
}
void OAIShipmentLocationPostPersistVO::setRequestedQuantity(const qint64 &requested_quantity) {
    m_requested_quantity = requested_quantity;
    m_requested_quantity_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_requested_quantity_Set() const{
    return m_requested_quantity_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_requested_quantity_Valid() const{
    return m_requested_quantity_isValid;
}

QList<OAICustomFieldPersistVO> OAIShipmentLocationPostPersistVO::getShipmentCustomFields() const {
    return m_shipment_custom_fields;
}
void OAIShipmentLocationPostPersistVO::setShipmentCustomFields(const QList<OAICustomFieldPersistVO> &shipment_custom_fields) {
    m_shipment_custom_fields = shipment_custom_fields;
    m_shipment_custom_fields_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_shipment_custom_fields_Set() const{
    return m_shipment_custom_fields_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_shipment_custom_fields_Valid() const{
    return m_shipment_custom_fields_isValid;
}

QList<OAICustomFieldPersistVO> OAIShipmentLocationPostPersistVO::getShipmentRequestCustomFields() const {
    return m_shipment_request_custom_fields;
}
void OAIShipmentLocationPostPersistVO::setShipmentRequestCustomFields(const QList<OAICustomFieldPersistVO> &shipment_request_custom_fields) {
    m_shipment_request_custom_fields = shipment_request_custom_fields;
    m_shipment_request_custom_fields_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_shipment_request_custom_fields_Set() const{
    return m_shipment_request_custom_fields_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_shipment_request_custom_fields_Valid() const{
    return m_shipment_request_custom_fields_isValid;
}

QString OAIShipmentLocationPostPersistVO::getShippingCarrier() const {
    return m_shipping_carrier;
}
void OAIShipmentLocationPostPersistVO::setShippingCarrier(const QString &shipping_carrier) {
    m_shipping_carrier = shipping_carrier;
    m_shipping_carrier_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_shipping_carrier_Set() const{
    return m_shipping_carrier_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_shipping_carrier_Valid() const{
    return m_shipping_carrier_isValid;
}

QString OAIShipmentLocationPostPersistVO::getShippingInstruction() const {
    return m_shipping_instruction;
}
void OAIShipmentLocationPostPersistVO::setShippingInstruction(const QString &shipping_instruction) {
    m_shipping_instruction = shipping_instruction;
    m_shipping_instruction_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_shipping_instruction_Set() const{
    return m_shipping_instruction_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_shipping_instruction_Valid() const{
    return m_shipping_instruction_isValid;
}

QString OAIShipmentLocationPostPersistVO::getShppingMethod() const {
    return m_shpping_method;
}
void OAIShipmentLocationPostPersistVO::setShppingMethod(const QString &shpping_method) {
    m_shpping_method = shpping_method;
    m_shpping_method_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_shpping_method_Set() const{
    return m_shpping_method_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_shpping_method_Valid() const{
    return m_shpping_method_isValid;
}

QString OAIShipmentLocationPostPersistVO::getSpecIds() const {
    return m_spec_ids;
}
void OAIShipmentLocationPostPersistVO::setSpecIds(const QString &spec_ids) {
    m_spec_ids = spec_ids;
    m_spec_ids_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_spec_ids_Set() const{
    return m_spec_ids_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_spec_ids_Valid() const{
    return m_spec_ids_isValid;
}

QString OAIShipmentLocationPostPersistVO::getState() const {
    return m_state;
}
void OAIShipmentLocationPostPersistVO::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_state_Set() const{
    return m_state_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIShipmentLocationPostPersistVO::getWorkPhoneNumber() const {
    return m_work_phone_number;
}
void OAIShipmentLocationPostPersistVO::setWorkPhoneNumber(const QString &work_phone_number) {
    m_work_phone_number = work_phone_number;
    m_work_phone_number_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_work_phone_number_Set() const{
    return m_work_phone_number_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_work_phone_number_Valid() const{
    return m_work_phone_number_isValid;
}

QString OAIShipmentLocationPostPersistVO::getWorkgroupName() const {
    return m_workgroup_name;
}
void OAIShipmentLocationPostPersistVO::setWorkgroupName(const QString &workgroup_name) {
    m_workgroup_name = workgroup_name;
    m_workgroup_name_isSet = true;
}

bool OAIShipmentLocationPostPersistVO::is_workgroup_name_Set() const{
    return m_workgroup_name_isSet;
}

bool OAIShipmentLocationPostPersistVO::is_workgroup_name_Valid() const{
    return m_workgroup_name_isValid;
}

bool OAIShipmentLocationPostPersistVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_batch_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_iso_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_or_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inner_carton_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outer_carton_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pallet_lablel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_poof_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_requested_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_request_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_carrier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_instruction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shpping_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_ids_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_workgroup_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShipmentLocationPostPersistVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
