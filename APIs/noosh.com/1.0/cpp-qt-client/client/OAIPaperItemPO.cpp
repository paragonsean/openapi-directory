/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaperItemPO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaperItemPO::OAIPaperItemPO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaperItemPO::OAIPaperItemPO() {
    this->initializeModel();
}

OAIPaperItemPO::~OAIPaperItemPO() {}

void OAIPaperItemPO::initializeModel() {

    m_min_uom_qty_isSet = false;
    m_min_uom_qty_isValid = false;

    m_paper_id_isSet = false;
    m_paper_id_isValid = false;

    m_price_1_isSet = false;
    m_price_1_isValid = false;

    m_price_2_isSet = false;
    m_price_2_isValid = false;

    m_price_3_isSet = false;
    m_price_3_isValid = false;

    m_price_4_isSet = false;
    m_price_4_isValid = false;

    m_price_5_isSet = false;
    m_price_5_isValid = false;

    m_price_per_tonne_isSet = false;
    m_price_per_tonne_isValid = false;

    m_qty_uom_isSet = false;
    m_qty_uom_isValid = false;

    m_quantity_1_isSet = false;
    m_quantity_1_isValid = false;

    m_quantity_2_isSet = false;
    m_quantity_2_isValid = false;

    m_quantity_3_isSet = false;
    m_quantity_3_isValid = false;

    m_quantity_4_isSet = false;
    m_quantity_4_isValid = false;

    m_quantity_5_isSet = false;
    m_quantity_5_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_unit_price_1_isSet = false;
    m_unit_price_1_isValid = false;

    m_unit_price_2_isSet = false;
    m_unit_price_2_isValid = false;

    m_unit_price_3_isSet = false;
    m_unit_price_3_isValid = false;

    m_unit_price_4_isSet = false;
    m_unit_price_4_isValid = false;

    m_unit_price_5_isSet = false;
    m_unit_price_5_isValid = false;
}

void OAIPaperItemPO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaperItemPO::fromJsonObject(QJsonObject json) {

    m_min_uom_qty_isValid = ::OpenAPI::fromJsonValue(m_min_uom_qty, json[QString("min_uom_qty")]);
    m_min_uom_qty_isSet = !json[QString("min_uom_qty")].isNull() && m_min_uom_qty_isValid;

    m_paper_id_isValid = ::OpenAPI::fromJsonValue(m_paper_id, json[QString("paper_id")]);
    m_paper_id_isSet = !json[QString("paper_id")].isNull() && m_paper_id_isValid;

    m_price_1_isValid = ::OpenAPI::fromJsonValue(m_price_1, json[QString("price_1")]);
    m_price_1_isSet = !json[QString("price_1")].isNull() && m_price_1_isValid;

    m_price_2_isValid = ::OpenAPI::fromJsonValue(m_price_2, json[QString("price_2")]);
    m_price_2_isSet = !json[QString("price_2")].isNull() && m_price_2_isValid;

    m_price_3_isValid = ::OpenAPI::fromJsonValue(m_price_3, json[QString("price_3")]);
    m_price_3_isSet = !json[QString("price_3")].isNull() && m_price_3_isValid;

    m_price_4_isValid = ::OpenAPI::fromJsonValue(m_price_4, json[QString("price_4")]);
    m_price_4_isSet = !json[QString("price_4")].isNull() && m_price_4_isValid;

    m_price_5_isValid = ::OpenAPI::fromJsonValue(m_price_5, json[QString("price_5")]);
    m_price_5_isSet = !json[QString("price_5")].isNull() && m_price_5_isValid;

    m_price_per_tonne_isValid = ::OpenAPI::fromJsonValue(m_price_per_tonne, json[QString("price_per_tonne")]);
    m_price_per_tonne_isSet = !json[QString("price_per_tonne")].isNull() && m_price_per_tonne_isValid;

    m_qty_uom_isValid = ::OpenAPI::fromJsonValue(m_qty_uom, json[QString("qty_uom")]);
    m_qty_uom_isSet = !json[QString("qty_uom")].isNull() && m_qty_uom_isValid;

    m_quantity_1_isValid = ::OpenAPI::fromJsonValue(m_quantity_1, json[QString("quantity_1")]);
    m_quantity_1_isSet = !json[QString("quantity_1")].isNull() && m_quantity_1_isValid;

    m_quantity_2_isValid = ::OpenAPI::fromJsonValue(m_quantity_2, json[QString("quantity_2")]);
    m_quantity_2_isSet = !json[QString("quantity_2")].isNull() && m_quantity_2_isValid;

    m_quantity_3_isValid = ::OpenAPI::fromJsonValue(m_quantity_3, json[QString("quantity_3")]);
    m_quantity_3_isSet = !json[QString("quantity_3")].isNull() && m_quantity_3_isValid;

    m_quantity_4_isValid = ::OpenAPI::fromJsonValue(m_quantity_4, json[QString("quantity_4")]);
    m_quantity_4_isSet = !json[QString("quantity_4")].isNull() && m_quantity_4_isValid;

    m_quantity_5_isValid = ::OpenAPI::fromJsonValue(m_quantity_5, json[QString("quantity_5")]);
    m_quantity_5_isSet = !json[QString("quantity_5")].isNull() && m_quantity_5_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_unit_price_1_isValid = ::OpenAPI::fromJsonValue(m_unit_price_1, json[QString("unit_price_1")]);
    m_unit_price_1_isSet = !json[QString("unit_price_1")].isNull() && m_unit_price_1_isValid;

    m_unit_price_2_isValid = ::OpenAPI::fromJsonValue(m_unit_price_2, json[QString("unit_price_2")]);
    m_unit_price_2_isSet = !json[QString("unit_price_2")].isNull() && m_unit_price_2_isValid;

    m_unit_price_3_isValid = ::OpenAPI::fromJsonValue(m_unit_price_3, json[QString("unit_price_3")]);
    m_unit_price_3_isSet = !json[QString("unit_price_3")].isNull() && m_unit_price_3_isValid;

    m_unit_price_4_isValid = ::OpenAPI::fromJsonValue(m_unit_price_4, json[QString("unit_price_4")]);
    m_unit_price_4_isSet = !json[QString("unit_price_4")].isNull() && m_unit_price_4_isValid;

    m_unit_price_5_isValid = ::OpenAPI::fromJsonValue(m_unit_price_5, json[QString("unit_price_5")]);
    m_unit_price_5_isSet = !json[QString("unit_price_5")].isNull() && m_unit_price_5_isValid;
}

QString OAIPaperItemPO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaperItemPO::asJsonObject() const {
    QJsonObject obj;
    if (m_min_uom_qty_isSet) {
        obj.insert(QString("min_uom_qty"), ::OpenAPI::toJsonValue(m_min_uom_qty));
    }
    if (m_paper_id_isSet) {
        obj.insert(QString("paper_id"), ::OpenAPI::toJsonValue(m_paper_id));
    }
    if (m_price_1_isSet) {
        obj.insert(QString("price_1"), ::OpenAPI::toJsonValue(m_price_1));
    }
    if (m_price_2_isSet) {
        obj.insert(QString("price_2"), ::OpenAPI::toJsonValue(m_price_2));
    }
    if (m_price_3_isSet) {
        obj.insert(QString("price_3"), ::OpenAPI::toJsonValue(m_price_3));
    }
    if (m_price_4_isSet) {
        obj.insert(QString("price_4"), ::OpenAPI::toJsonValue(m_price_4));
    }
    if (m_price_5_isSet) {
        obj.insert(QString("price_5"), ::OpenAPI::toJsonValue(m_price_5));
    }
    if (m_price_per_tonne_isSet) {
        obj.insert(QString("price_per_tonne"), ::OpenAPI::toJsonValue(m_price_per_tonne));
    }
    if (m_qty_uom_isSet) {
        obj.insert(QString("qty_uom"), ::OpenAPI::toJsonValue(m_qty_uom));
    }
    if (m_quantity_1_isSet) {
        obj.insert(QString("quantity_1"), ::OpenAPI::toJsonValue(m_quantity_1));
    }
    if (m_quantity_2_isSet) {
        obj.insert(QString("quantity_2"), ::OpenAPI::toJsonValue(m_quantity_2));
    }
    if (m_quantity_3_isSet) {
        obj.insert(QString("quantity_3"), ::OpenAPI::toJsonValue(m_quantity_3));
    }
    if (m_quantity_4_isSet) {
        obj.insert(QString("quantity_4"), ::OpenAPI::toJsonValue(m_quantity_4));
    }
    if (m_quantity_5_isSet) {
        obj.insert(QString("quantity_5"), ::OpenAPI::toJsonValue(m_quantity_5));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_unit_price_1_isSet) {
        obj.insert(QString("unit_price_1"), ::OpenAPI::toJsonValue(m_unit_price_1));
    }
    if (m_unit_price_2_isSet) {
        obj.insert(QString("unit_price_2"), ::OpenAPI::toJsonValue(m_unit_price_2));
    }
    if (m_unit_price_3_isSet) {
        obj.insert(QString("unit_price_3"), ::OpenAPI::toJsonValue(m_unit_price_3));
    }
    if (m_unit_price_4_isSet) {
        obj.insert(QString("unit_price_4"), ::OpenAPI::toJsonValue(m_unit_price_4));
    }
    if (m_unit_price_5_isSet) {
        obj.insert(QString("unit_price_5"), ::OpenAPI::toJsonValue(m_unit_price_5));
    }
    return obj;
}

qint64 OAIPaperItemPO::getMinUomQty() const {
    return m_min_uom_qty;
}
void OAIPaperItemPO::setMinUomQty(const qint64 &min_uom_qty) {
    m_min_uom_qty = min_uom_qty;
    m_min_uom_qty_isSet = true;
}

bool OAIPaperItemPO::is_min_uom_qty_Set() const{
    return m_min_uom_qty_isSet;
}

bool OAIPaperItemPO::is_min_uom_qty_Valid() const{
    return m_min_uom_qty_isValid;
}

qint64 OAIPaperItemPO::getPaperId() const {
    return m_paper_id;
}
void OAIPaperItemPO::setPaperId(const qint64 &paper_id) {
    m_paper_id = paper_id;
    m_paper_id_isSet = true;
}

bool OAIPaperItemPO::is_paper_id_Set() const{
    return m_paper_id_isSet;
}

bool OAIPaperItemPO::is_paper_id_Valid() const{
    return m_paper_id_isValid;
}

QJsonValue OAIPaperItemPO::getPrice1() const {
    return m_price_1;
}
void OAIPaperItemPO::setPrice1(const QJsonValue &price_1) {
    m_price_1 = price_1;
    m_price_1_isSet = true;
}

bool OAIPaperItemPO::is_price_1_Set() const{
    return m_price_1_isSet;
}

bool OAIPaperItemPO::is_price_1_Valid() const{
    return m_price_1_isValid;
}

QJsonValue OAIPaperItemPO::getPrice2() const {
    return m_price_2;
}
void OAIPaperItemPO::setPrice2(const QJsonValue &price_2) {
    m_price_2 = price_2;
    m_price_2_isSet = true;
}

bool OAIPaperItemPO::is_price_2_Set() const{
    return m_price_2_isSet;
}

bool OAIPaperItemPO::is_price_2_Valid() const{
    return m_price_2_isValid;
}

QJsonValue OAIPaperItemPO::getPrice3() const {
    return m_price_3;
}
void OAIPaperItemPO::setPrice3(const QJsonValue &price_3) {
    m_price_3 = price_3;
    m_price_3_isSet = true;
}

bool OAIPaperItemPO::is_price_3_Set() const{
    return m_price_3_isSet;
}

bool OAIPaperItemPO::is_price_3_Valid() const{
    return m_price_3_isValid;
}

QJsonValue OAIPaperItemPO::getPrice4() const {
    return m_price_4;
}
void OAIPaperItemPO::setPrice4(const QJsonValue &price_4) {
    m_price_4 = price_4;
    m_price_4_isSet = true;
}

bool OAIPaperItemPO::is_price_4_Set() const{
    return m_price_4_isSet;
}

bool OAIPaperItemPO::is_price_4_Valid() const{
    return m_price_4_isValid;
}

QJsonValue OAIPaperItemPO::getPrice5() const {
    return m_price_5;
}
void OAIPaperItemPO::setPrice5(const QJsonValue &price_5) {
    m_price_5 = price_5;
    m_price_5_isSet = true;
}

bool OAIPaperItemPO::is_price_5_Set() const{
    return m_price_5_isSet;
}

bool OAIPaperItemPO::is_price_5_Valid() const{
    return m_price_5_isValid;
}

QJsonValue OAIPaperItemPO::getPricePerTonne() const {
    return m_price_per_tonne;
}
void OAIPaperItemPO::setPricePerTonne(const QJsonValue &price_per_tonne) {
    m_price_per_tonne = price_per_tonne;
    m_price_per_tonne_isSet = true;
}

bool OAIPaperItemPO::is_price_per_tonne_Set() const{
    return m_price_per_tonne_isSet;
}

bool OAIPaperItemPO::is_price_per_tonne_Valid() const{
    return m_price_per_tonne_isValid;
}

QString OAIPaperItemPO::getQtyUom() const {
    return m_qty_uom;
}
void OAIPaperItemPO::setQtyUom(const QString &qty_uom) {
    m_qty_uom = qty_uom;
    m_qty_uom_isSet = true;
}

bool OAIPaperItemPO::is_qty_uom_Set() const{
    return m_qty_uom_isSet;
}

bool OAIPaperItemPO::is_qty_uom_Valid() const{
    return m_qty_uom_isValid;
}

qint64 OAIPaperItemPO::getQuantity1() const {
    return m_quantity_1;
}
void OAIPaperItemPO::setQuantity1(const qint64 &quantity_1) {
    m_quantity_1 = quantity_1;
    m_quantity_1_isSet = true;
}

bool OAIPaperItemPO::is_quantity_1_Set() const{
    return m_quantity_1_isSet;
}

bool OAIPaperItemPO::is_quantity_1_Valid() const{
    return m_quantity_1_isValid;
}

qint64 OAIPaperItemPO::getQuantity2() const {
    return m_quantity_2;
}
void OAIPaperItemPO::setQuantity2(const qint64 &quantity_2) {
    m_quantity_2 = quantity_2;
    m_quantity_2_isSet = true;
}

bool OAIPaperItemPO::is_quantity_2_Set() const{
    return m_quantity_2_isSet;
}

bool OAIPaperItemPO::is_quantity_2_Valid() const{
    return m_quantity_2_isValid;
}

qint64 OAIPaperItemPO::getQuantity3() const {
    return m_quantity_3;
}
void OAIPaperItemPO::setQuantity3(const qint64 &quantity_3) {
    m_quantity_3 = quantity_3;
    m_quantity_3_isSet = true;
}

bool OAIPaperItemPO::is_quantity_3_Set() const{
    return m_quantity_3_isSet;
}

bool OAIPaperItemPO::is_quantity_3_Valid() const{
    return m_quantity_3_isValid;
}

qint64 OAIPaperItemPO::getQuantity4() const {
    return m_quantity_4;
}
void OAIPaperItemPO::setQuantity4(const qint64 &quantity_4) {
    m_quantity_4 = quantity_4;
    m_quantity_4_isSet = true;
}

bool OAIPaperItemPO::is_quantity_4_Set() const{
    return m_quantity_4_isSet;
}

bool OAIPaperItemPO::is_quantity_4_Valid() const{
    return m_quantity_4_isValid;
}

qint64 OAIPaperItemPO::getQuantity5() const {
    return m_quantity_5;
}
void OAIPaperItemPO::setQuantity5(const qint64 &quantity_5) {
    m_quantity_5 = quantity_5;
    m_quantity_5_isSet = true;
}

bool OAIPaperItemPO::is_quantity_5_Set() const{
    return m_quantity_5_isSet;
}

bool OAIPaperItemPO::is_quantity_5_Valid() const{
    return m_quantity_5_isValid;
}

QString OAIPaperItemPO::getSize() const {
    return m_size;
}
void OAIPaperItemPO::setSize(const QString &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIPaperItemPO::is_size_Set() const{
    return m_size_isSet;
}

bool OAIPaperItemPO::is_size_Valid() const{
    return m_size_isValid;
}

QString OAIPaperItemPO::getSku() const {
    return m_sku;
}
void OAIPaperItemPO::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIPaperItemPO::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIPaperItemPO::is_sku_Valid() const{
    return m_sku_isValid;
}

QJsonValue OAIPaperItemPO::getUnitPrice1() const {
    return m_unit_price_1;
}
void OAIPaperItemPO::setUnitPrice1(const QJsonValue &unit_price_1) {
    m_unit_price_1 = unit_price_1;
    m_unit_price_1_isSet = true;
}

bool OAIPaperItemPO::is_unit_price_1_Set() const{
    return m_unit_price_1_isSet;
}

bool OAIPaperItemPO::is_unit_price_1_Valid() const{
    return m_unit_price_1_isValid;
}

QJsonValue OAIPaperItemPO::getUnitPrice2() const {
    return m_unit_price_2;
}
void OAIPaperItemPO::setUnitPrice2(const QJsonValue &unit_price_2) {
    m_unit_price_2 = unit_price_2;
    m_unit_price_2_isSet = true;
}

bool OAIPaperItemPO::is_unit_price_2_Set() const{
    return m_unit_price_2_isSet;
}

bool OAIPaperItemPO::is_unit_price_2_Valid() const{
    return m_unit_price_2_isValid;
}

QJsonValue OAIPaperItemPO::getUnitPrice3() const {
    return m_unit_price_3;
}
void OAIPaperItemPO::setUnitPrice3(const QJsonValue &unit_price_3) {
    m_unit_price_3 = unit_price_3;
    m_unit_price_3_isSet = true;
}

bool OAIPaperItemPO::is_unit_price_3_Set() const{
    return m_unit_price_3_isSet;
}

bool OAIPaperItemPO::is_unit_price_3_Valid() const{
    return m_unit_price_3_isValid;
}

QJsonValue OAIPaperItemPO::getUnitPrice4() const {
    return m_unit_price_4;
}
void OAIPaperItemPO::setUnitPrice4(const QJsonValue &unit_price_4) {
    m_unit_price_4 = unit_price_4;
    m_unit_price_4_isSet = true;
}

bool OAIPaperItemPO::is_unit_price_4_Set() const{
    return m_unit_price_4_isSet;
}

bool OAIPaperItemPO::is_unit_price_4_Valid() const{
    return m_unit_price_4_isValid;
}

QJsonValue OAIPaperItemPO::getUnitPrice5() const {
    return m_unit_price_5;
}
void OAIPaperItemPO::setUnitPrice5(const QJsonValue &unit_price_5) {
    m_unit_price_5 = unit_price_5;
    m_unit_price_5_isSet = true;
}

bool OAIPaperItemPO::is_unit_price_5_Set() const{
    return m_unit_price_5_isSet;
}

bool OAIPaperItemPO::is_unit_price_5_Valid() const{
    return m_unit_price_5_isValid;
}

bool OAIPaperItemPO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_min_uom_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paper_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_per_tonne_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qty_uom_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_price_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_price_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_price_3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_price_4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_price_5_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaperItemPO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
