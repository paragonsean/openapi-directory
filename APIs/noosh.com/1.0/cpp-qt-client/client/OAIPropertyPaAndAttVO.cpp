/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPropertyPaAndAttVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPropertyPaAndAttVO::OAIPropertyPaAndAttVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPropertyPaAndAttVO::OAIPropertyPaAndAttVO() {
    this->initializeModel();
}

OAIPropertyPaAndAttVO::~OAIPropertyPaAndAttVO() {}

void OAIPropertyPaAndAttVO::initializeModel() {

    m_date_value_isSet = false;
    m_date_value_isValid = false;

    m_number_value_isSet = false;
    m_number_value_isValid = false;

    m_param_id_isSet = false;
    m_param_id_isValid = false;

    m_param_name_isSet = false;
    m_param_name_isValid = false;

    m_property_attribute_id_isSet = false;
    m_property_attribute_id_isValid = false;

    m_string_value_isSet = false;
    m_string_value_isValid = false;
}

void OAIPropertyPaAndAttVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPropertyPaAndAttVO::fromJsonObject(QJsonObject json) {

    m_date_value_isValid = ::OpenAPI::fromJsonValue(m_date_value, json[QString("date_value")]);
    m_date_value_isSet = !json[QString("date_value")].isNull() && m_date_value_isValid;

    m_number_value_isValid = ::OpenAPI::fromJsonValue(m_number_value, json[QString("number_value")]);
    m_number_value_isSet = !json[QString("number_value")].isNull() && m_number_value_isValid;

    m_param_id_isValid = ::OpenAPI::fromJsonValue(m_param_id, json[QString("param_id")]);
    m_param_id_isSet = !json[QString("param_id")].isNull() && m_param_id_isValid;

    m_param_name_isValid = ::OpenAPI::fromJsonValue(m_param_name, json[QString("param_name")]);
    m_param_name_isSet = !json[QString("param_name")].isNull() && m_param_name_isValid;

    m_property_attribute_id_isValid = ::OpenAPI::fromJsonValue(m_property_attribute_id, json[QString("property_attribute_id")]);
    m_property_attribute_id_isSet = !json[QString("property_attribute_id")].isNull() && m_property_attribute_id_isValid;

    m_string_value_isValid = ::OpenAPI::fromJsonValue(m_string_value, json[QString("string_value")]);
    m_string_value_isSet = !json[QString("string_value")].isNull() && m_string_value_isValid;
}

QString OAIPropertyPaAndAttVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPropertyPaAndAttVO::asJsonObject() const {
    QJsonObject obj;
    if (m_date_value_isSet) {
        obj.insert(QString("date_value"), ::OpenAPI::toJsonValue(m_date_value));
    }
    if (m_number_value_isSet) {
        obj.insert(QString("number_value"), ::OpenAPI::toJsonValue(m_number_value));
    }
    if (m_param_id_isSet) {
        obj.insert(QString("param_id"), ::OpenAPI::toJsonValue(m_param_id));
    }
    if (m_param_name_isSet) {
        obj.insert(QString("param_name"), ::OpenAPI::toJsonValue(m_param_name));
    }
    if (m_property_attribute_id_isSet) {
        obj.insert(QString("property_attribute_id"), ::OpenAPI::toJsonValue(m_property_attribute_id));
    }
    if (m_string_value_isSet) {
        obj.insert(QString("string_value"), ::OpenAPI::toJsonValue(m_string_value));
    }
    return obj;
}

QDate OAIPropertyPaAndAttVO::getDateValue() const {
    return m_date_value;
}
void OAIPropertyPaAndAttVO::setDateValue(const QDate &date_value) {
    m_date_value = date_value;
    m_date_value_isSet = true;
}

bool OAIPropertyPaAndAttVO::is_date_value_Set() const{
    return m_date_value_isSet;
}

bool OAIPropertyPaAndAttVO::is_date_value_Valid() const{
    return m_date_value_isValid;
}

QJsonValue OAIPropertyPaAndAttVO::getNumberValue() const {
    return m_number_value;
}
void OAIPropertyPaAndAttVO::setNumberValue(const QJsonValue &number_value) {
    m_number_value = number_value;
    m_number_value_isSet = true;
}

bool OAIPropertyPaAndAttVO::is_number_value_Set() const{
    return m_number_value_isSet;
}

bool OAIPropertyPaAndAttVO::is_number_value_Valid() const{
    return m_number_value_isValid;
}

qint64 OAIPropertyPaAndAttVO::getParamId() const {
    return m_param_id;
}
void OAIPropertyPaAndAttVO::setParamId(const qint64 &param_id) {
    m_param_id = param_id;
    m_param_id_isSet = true;
}

bool OAIPropertyPaAndAttVO::is_param_id_Set() const{
    return m_param_id_isSet;
}

bool OAIPropertyPaAndAttVO::is_param_id_Valid() const{
    return m_param_id_isValid;
}

QString OAIPropertyPaAndAttVO::getParamName() const {
    return m_param_name;
}
void OAIPropertyPaAndAttVO::setParamName(const QString &param_name) {
    m_param_name = param_name;
    m_param_name_isSet = true;
}

bool OAIPropertyPaAndAttVO::is_param_name_Set() const{
    return m_param_name_isSet;
}

bool OAIPropertyPaAndAttVO::is_param_name_Valid() const{
    return m_param_name_isValid;
}

qint64 OAIPropertyPaAndAttVO::getPropertyAttributeId() const {
    return m_property_attribute_id;
}
void OAIPropertyPaAndAttVO::setPropertyAttributeId(const qint64 &property_attribute_id) {
    m_property_attribute_id = property_attribute_id;
    m_property_attribute_id_isSet = true;
}

bool OAIPropertyPaAndAttVO::is_property_attribute_id_Set() const{
    return m_property_attribute_id_isSet;
}

bool OAIPropertyPaAndAttVO::is_property_attribute_id_Valid() const{
    return m_property_attribute_id_isValid;
}

QString OAIPropertyPaAndAttVO::getStringValue() const {
    return m_string_value;
}
void OAIPropertyPaAndAttVO::setStringValue(const QString &string_value) {
    m_string_value = string_value;
    m_string_value_isSet = true;
}

bool OAIPropertyPaAndAttVO::is_string_value_Set() const{
    return m_string_value_isSet;
}

bool OAIPropertyPaAndAttVO::is_string_value_Valid() const{
    return m_string_value_isValid;
}

bool OAIPropertyPaAndAttVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_param_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_param_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_attribute_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_string_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPropertyPaAndAttVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
