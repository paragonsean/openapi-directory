/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderUpdPersistVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderUpdPersistVO::OAIOrderUpdPersistVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderUpdPersistVO::OAIOrderUpdPersistVO() {
    this->initializeModel();
}

OAIOrderUpdPersistVO::~OAIOrderUpdPersistVO() {}

void OAIOrderUpdPersistVO::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_budget_type_field_id_isSet = false;
    m_budget_type_field_id_isValid = false;

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_order_completion_date_isSet = false;
    m_order_completion_date_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_other_selection_reason_isSet = false;
    m_other_selection_reason_isValid = false;

    m_overs_percent_isSet = false;
    m_overs_percent_isValid = false;

    m_payment_method_id_isSet = false;
    m_payment_method_id_isValid = false;

    m_payment_reference_no_isSet = false;
    m_payment_reference_no_isValid = false;

    m_reject_reason_isSet = false;
    m_reject_reason_isValid = false;

    m_supplier_selection_reason_id_isSet = false;
    m_supplier_selection_reason_id_isValid = false;

    m_unders_percent_isSet = false;
    m_unders_percent_isValid = false;
}

void OAIOrderUpdPersistVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderUpdPersistVO::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_budget_type_field_id_isValid = ::OpenAPI::fromJsonValue(m_budget_type_field_id, json[QString("budget_type_field_id")]);
    m_budget_type_field_id_isSet = !json[QString("budget_type_field_id")].isNull() && m_budget_type_field_id_isValid;

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_order_completion_date_isValid = ::OpenAPI::fromJsonValue(m_order_completion_date, json[QString("order_completion_date")]);
    m_order_completion_date_isSet = !json[QString("order_completion_date")].isNull() && m_order_completion_date_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_other_selection_reason_isValid = ::OpenAPI::fromJsonValue(m_other_selection_reason, json[QString("other_selection_reason")]);
    m_other_selection_reason_isSet = !json[QString("other_selection_reason")].isNull() && m_other_selection_reason_isValid;

    m_overs_percent_isValid = ::OpenAPI::fromJsonValue(m_overs_percent, json[QString("overs_percent")]);
    m_overs_percent_isSet = !json[QString("overs_percent")].isNull() && m_overs_percent_isValid;

    m_payment_method_id_isValid = ::OpenAPI::fromJsonValue(m_payment_method_id, json[QString("payment_method_id")]);
    m_payment_method_id_isSet = !json[QString("payment_method_id")].isNull() && m_payment_method_id_isValid;

    m_payment_reference_no_isValid = ::OpenAPI::fromJsonValue(m_payment_reference_no, json[QString("payment_reference_no")]);
    m_payment_reference_no_isSet = !json[QString("payment_reference_no")].isNull() && m_payment_reference_no_isValid;

    m_reject_reason_isValid = ::OpenAPI::fromJsonValue(m_reject_reason, json[QString("reject_reason")]);
    m_reject_reason_isSet = !json[QString("reject_reason")].isNull() && m_reject_reason_isValid;

    m_supplier_selection_reason_id_isValid = ::OpenAPI::fromJsonValue(m_supplier_selection_reason_id, json[QString("supplier_selection_reason_id")]);
    m_supplier_selection_reason_id_isSet = !json[QString("supplier_selection_reason_id")].isNull() && m_supplier_selection_reason_id_isValid;

    m_unders_percent_isValid = ::OpenAPI::fromJsonValue(m_unders_percent, json[QString("unders_percent")]);
    m_unders_percent_isSet = !json[QString("unders_percent")].isNull() && m_unders_percent_isValid;
}

QString OAIOrderUpdPersistVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderUpdPersistVO::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_budget_type_field_id_isSet) {
        obj.insert(QString("budget_type_field_id"), ::OpenAPI::toJsonValue(m_budget_type_field_id));
    }
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_order_completion_date_isSet) {
        obj.insert(QString("order_completion_date"), ::OpenAPI::toJsonValue(m_order_completion_date));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_other_selection_reason_isSet) {
        obj.insert(QString("other_selection_reason"), ::OpenAPI::toJsonValue(m_other_selection_reason));
    }
    if (m_overs_percent_isSet) {
        obj.insert(QString("overs_percent"), ::OpenAPI::toJsonValue(m_overs_percent));
    }
    if (m_payment_method_id_isSet) {
        obj.insert(QString("payment_method_id"), ::OpenAPI::toJsonValue(m_payment_method_id));
    }
    if (m_payment_reference_no_isSet) {
        obj.insert(QString("payment_reference_no"), ::OpenAPI::toJsonValue(m_payment_reference_no));
    }
    if (m_reject_reason_isSet) {
        obj.insert(QString("reject_reason"), ::OpenAPI::toJsonValue(m_reject_reason));
    }
    if (m_supplier_selection_reason_id_isSet) {
        obj.insert(QString("supplier_selection_reason_id"), ::OpenAPI::toJsonValue(m_supplier_selection_reason_id));
    }
    if (m_unders_percent_isSet) {
        obj.insert(QString("unders_percent"), ::OpenAPI::toJsonValue(m_unders_percent));
    }
    return obj;
}

QString OAIOrderUpdPersistVO::getAction() const {
    return m_action;
}
void OAIOrderUpdPersistVO::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIOrderUpdPersistVO::is_action_Set() const{
    return m_action_isSet;
}

bool OAIOrderUpdPersistVO::is_action_Valid() const{
    return m_action_isValid;
}

qint64 OAIOrderUpdPersistVO::getBudgetTypeFieldId() const {
    return m_budget_type_field_id;
}
void OAIOrderUpdPersistVO::setBudgetTypeFieldId(const qint64 &budget_type_field_id) {
    m_budget_type_field_id = budget_type_field_id;
    m_budget_type_field_id_isSet = true;
}

bool OAIOrderUpdPersistVO::is_budget_type_field_id_Set() const{
    return m_budget_type_field_id_isSet;
}

bool OAIOrderUpdPersistVO::is_budget_type_field_id_Valid() const{
    return m_budget_type_field_id_isValid;
}

QString OAIOrderUpdPersistVO::getComments() const {
    return m_comments;
}
void OAIOrderUpdPersistVO::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIOrderUpdPersistVO::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIOrderUpdPersistVO::is_comments_Valid() const{
    return m_comments_isValid;
}

QList<OAICustomFieldPersistVO> OAIOrderUpdPersistVO::getCustomFields() const {
    return m_custom_fields;
}
void OAIOrderUpdPersistVO::setCustomFields(const QList<OAICustomFieldPersistVO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIOrderUpdPersistVO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIOrderUpdPersistVO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QDate OAIOrderUpdPersistVO::getOrderCompletionDate() const {
    return m_order_completion_date;
}
void OAIOrderUpdPersistVO::setOrderCompletionDate(const QDate &order_completion_date) {
    m_order_completion_date = order_completion_date;
    m_order_completion_date_isSet = true;
}

bool OAIOrderUpdPersistVO::is_order_completion_date_Set() const{
    return m_order_completion_date_isSet;
}

bool OAIOrderUpdPersistVO::is_order_completion_date_Valid() const{
    return m_order_completion_date_isValid;
}

qint64 OAIOrderUpdPersistVO::getOrderId() const {
    return m_order_id;
}
void OAIOrderUpdPersistVO::setOrderId(const qint64 &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrderUpdPersistVO::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrderUpdPersistVO::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIOrderUpdPersistVO::getOtherSelectionReason() const {
    return m_other_selection_reason;
}
void OAIOrderUpdPersistVO::setOtherSelectionReason(const QString &other_selection_reason) {
    m_other_selection_reason = other_selection_reason;
    m_other_selection_reason_isSet = true;
}

bool OAIOrderUpdPersistVO::is_other_selection_reason_Set() const{
    return m_other_selection_reason_isSet;
}

bool OAIOrderUpdPersistVO::is_other_selection_reason_Valid() const{
    return m_other_selection_reason_isValid;
}

QJsonValue OAIOrderUpdPersistVO::getOversPercent() const {
    return m_overs_percent;
}
void OAIOrderUpdPersistVO::setOversPercent(const QJsonValue &overs_percent) {
    m_overs_percent = overs_percent;
    m_overs_percent_isSet = true;
}

bool OAIOrderUpdPersistVO::is_overs_percent_Set() const{
    return m_overs_percent_isSet;
}

bool OAIOrderUpdPersistVO::is_overs_percent_Valid() const{
    return m_overs_percent_isValid;
}

qint64 OAIOrderUpdPersistVO::getPaymentMethodId() const {
    return m_payment_method_id;
}
void OAIOrderUpdPersistVO::setPaymentMethodId(const qint64 &payment_method_id) {
    m_payment_method_id = payment_method_id;
    m_payment_method_id_isSet = true;
}

bool OAIOrderUpdPersistVO::is_payment_method_id_Set() const{
    return m_payment_method_id_isSet;
}

bool OAIOrderUpdPersistVO::is_payment_method_id_Valid() const{
    return m_payment_method_id_isValid;
}

QString OAIOrderUpdPersistVO::getPaymentReferenceNo() const {
    return m_payment_reference_no;
}
void OAIOrderUpdPersistVO::setPaymentReferenceNo(const QString &payment_reference_no) {
    m_payment_reference_no = payment_reference_no;
    m_payment_reference_no_isSet = true;
}

bool OAIOrderUpdPersistVO::is_payment_reference_no_Set() const{
    return m_payment_reference_no_isSet;
}

bool OAIOrderUpdPersistVO::is_payment_reference_no_Valid() const{
    return m_payment_reference_no_isValid;
}

QString OAIOrderUpdPersistVO::getRejectReason() const {
    return m_reject_reason;
}
void OAIOrderUpdPersistVO::setRejectReason(const QString &reject_reason) {
    m_reject_reason = reject_reason;
    m_reject_reason_isSet = true;
}

bool OAIOrderUpdPersistVO::is_reject_reason_Set() const{
    return m_reject_reason_isSet;
}

bool OAIOrderUpdPersistVO::is_reject_reason_Valid() const{
    return m_reject_reason_isValid;
}

qint64 OAIOrderUpdPersistVO::getSupplierSelectionReasonId() const {
    return m_supplier_selection_reason_id;
}
void OAIOrderUpdPersistVO::setSupplierSelectionReasonId(const qint64 &supplier_selection_reason_id) {
    m_supplier_selection_reason_id = supplier_selection_reason_id;
    m_supplier_selection_reason_id_isSet = true;
}

bool OAIOrderUpdPersistVO::is_supplier_selection_reason_id_Set() const{
    return m_supplier_selection_reason_id_isSet;
}

bool OAIOrderUpdPersistVO::is_supplier_selection_reason_id_Valid() const{
    return m_supplier_selection_reason_id_isValid;
}

QJsonValue OAIOrderUpdPersistVO::getUndersPercent() const {
    return m_unders_percent;
}
void OAIOrderUpdPersistVO::setUndersPercent(const QJsonValue &unders_percent) {
    m_unders_percent = unders_percent;
    m_unders_percent_isSet = true;
}

bool OAIOrderUpdPersistVO::is_unders_percent_Set() const{
    return m_unders_percent_isSet;
}

bool OAIOrderUpdPersistVO::is_unders_percent_Valid() const{
    return m_unders_percent_isValid;
}

bool OAIOrderUpdPersistVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_budget_type_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_completion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_selection_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overs_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_method_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_reference_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reject_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier_selection_reason_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unders_percent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderUpdPersistVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
