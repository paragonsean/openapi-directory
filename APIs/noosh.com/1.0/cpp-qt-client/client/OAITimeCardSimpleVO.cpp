/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeCardSimpleVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeCardSimpleVO::OAITimeCardSimpleVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeCardSimpleVO::OAITimeCardSimpleVO() {
    this->initializeModel();
}

OAITimeCardSimpleVO::~OAITimeCardSimpleVO() {}

void OAITimeCardSimpleVO::initializeModel() {

    m_is_submit_isSet = false;
    m_is_submit_isValid = false;

    m_last_updated_date_isSet = false;
    m_last_updated_date_isValid = false;

    m_no_of_workdays_isSet = false;
    m_no_of_workdays_isValid = false;

    m_submit_date_isSet = false;
    m_submit_date_isValid = false;

    m_timecard_id_isSet = false;
    m_timecard_id_isValid = false;

    m_total_hours_isSet = false;
    m_total_hours_isValid = false;

    m_week_beginning_isSet = false;
    m_week_beginning_isValid = false;
}

void OAITimeCardSimpleVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeCardSimpleVO::fromJsonObject(QJsonObject json) {

    m_is_submit_isValid = ::OpenAPI::fromJsonValue(m_is_submit, json[QString("is_submit")]);
    m_is_submit_isSet = !json[QString("is_submit")].isNull() && m_is_submit_isValid;

    m_last_updated_date_isValid = ::OpenAPI::fromJsonValue(m_last_updated_date, json[QString("last_updated_date")]);
    m_last_updated_date_isSet = !json[QString("last_updated_date")].isNull() && m_last_updated_date_isValid;

    m_no_of_workdays_isValid = ::OpenAPI::fromJsonValue(m_no_of_workdays, json[QString("no_of_workdays")]);
    m_no_of_workdays_isSet = !json[QString("no_of_workdays")].isNull() && m_no_of_workdays_isValid;

    m_submit_date_isValid = ::OpenAPI::fromJsonValue(m_submit_date, json[QString("submit_date")]);
    m_submit_date_isSet = !json[QString("submit_date")].isNull() && m_submit_date_isValid;

    m_timecard_id_isValid = ::OpenAPI::fromJsonValue(m_timecard_id, json[QString("timecard_id")]);
    m_timecard_id_isSet = !json[QString("timecard_id")].isNull() && m_timecard_id_isValid;

    m_total_hours_isValid = ::OpenAPI::fromJsonValue(m_total_hours, json[QString("total_hours")]);
    m_total_hours_isSet = !json[QString("total_hours")].isNull() && m_total_hours_isValid;

    m_week_beginning_isValid = ::OpenAPI::fromJsonValue(m_week_beginning, json[QString("week_beginning")]);
    m_week_beginning_isSet = !json[QString("week_beginning")].isNull() && m_week_beginning_isValid;
}

QString OAITimeCardSimpleVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeCardSimpleVO::asJsonObject() const {
    QJsonObject obj;
    if (m_is_submit_isSet) {
        obj.insert(QString("is_submit"), ::OpenAPI::toJsonValue(m_is_submit));
    }
    if (m_last_updated_date_isSet) {
        obj.insert(QString("last_updated_date"), ::OpenAPI::toJsonValue(m_last_updated_date));
    }
    if (m_no_of_workdays_isSet) {
        obj.insert(QString("no_of_workdays"), ::OpenAPI::toJsonValue(m_no_of_workdays));
    }
    if (m_submit_date_isSet) {
        obj.insert(QString("submit_date"), ::OpenAPI::toJsonValue(m_submit_date));
    }
    if (m_timecard_id_isSet) {
        obj.insert(QString("timecard_id"), ::OpenAPI::toJsonValue(m_timecard_id));
    }
    if (m_total_hours_isSet) {
        obj.insert(QString("total_hours"), ::OpenAPI::toJsonValue(m_total_hours));
    }
    if (m_week_beginning_isSet) {
        obj.insert(QString("week_beginning"), ::OpenAPI::toJsonValue(m_week_beginning));
    }
    return obj;
}

bool OAITimeCardSimpleVO::isIsSubmit() const {
    return m_is_submit;
}
void OAITimeCardSimpleVO::setIsSubmit(const bool &is_submit) {
    m_is_submit = is_submit;
    m_is_submit_isSet = true;
}

bool OAITimeCardSimpleVO::is_is_submit_Set() const{
    return m_is_submit_isSet;
}

bool OAITimeCardSimpleVO::is_is_submit_Valid() const{
    return m_is_submit_isValid;
}

QDate OAITimeCardSimpleVO::getLastUpdatedDate() const {
    return m_last_updated_date;
}
void OAITimeCardSimpleVO::setLastUpdatedDate(const QDate &last_updated_date) {
    m_last_updated_date = last_updated_date;
    m_last_updated_date_isSet = true;
}

bool OAITimeCardSimpleVO::is_last_updated_date_Set() const{
    return m_last_updated_date_isSet;
}

bool OAITimeCardSimpleVO::is_last_updated_date_Valid() const{
    return m_last_updated_date_isValid;
}

qint32 OAITimeCardSimpleVO::getNoOfWorkdays() const {
    return m_no_of_workdays;
}
void OAITimeCardSimpleVO::setNoOfWorkdays(const qint32 &no_of_workdays) {
    m_no_of_workdays = no_of_workdays;
    m_no_of_workdays_isSet = true;
}

bool OAITimeCardSimpleVO::is_no_of_workdays_Set() const{
    return m_no_of_workdays_isSet;
}

bool OAITimeCardSimpleVO::is_no_of_workdays_Valid() const{
    return m_no_of_workdays_isValid;
}

QDate OAITimeCardSimpleVO::getSubmitDate() const {
    return m_submit_date;
}
void OAITimeCardSimpleVO::setSubmitDate(const QDate &submit_date) {
    m_submit_date = submit_date;
    m_submit_date_isSet = true;
}

bool OAITimeCardSimpleVO::is_submit_date_Set() const{
    return m_submit_date_isSet;
}

bool OAITimeCardSimpleVO::is_submit_date_Valid() const{
    return m_submit_date_isValid;
}

qint64 OAITimeCardSimpleVO::getTimecardId() const {
    return m_timecard_id;
}
void OAITimeCardSimpleVO::setTimecardId(const qint64 &timecard_id) {
    m_timecard_id = timecard_id;
    m_timecard_id_isSet = true;
}

bool OAITimeCardSimpleVO::is_timecard_id_Set() const{
    return m_timecard_id_isSet;
}

bool OAITimeCardSimpleVO::is_timecard_id_Valid() const{
    return m_timecard_id_isValid;
}

QJsonValue OAITimeCardSimpleVO::getTotalHours() const {
    return m_total_hours;
}
void OAITimeCardSimpleVO::setTotalHours(const QJsonValue &total_hours) {
    m_total_hours = total_hours;
    m_total_hours_isSet = true;
}

bool OAITimeCardSimpleVO::is_total_hours_Set() const{
    return m_total_hours_isSet;
}

bool OAITimeCardSimpleVO::is_total_hours_Valid() const{
    return m_total_hours_isValid;
}

QDate OAITimeCardSimpleVO::getWeekBeginning() const {
    return m_week_beginning;
}
void OAITimeCardSimpleVO::setWeekBeginning(const QDate &week_beginning) {
    m_week_beginning = week_beginning;
    m_week_beginning_isSet = true;
}

bool OAITimeCardSimpleVO::is_week_beginning_Set() const{
    return m_week_beginning_isSet;
}

bool OAITimeCardSimpleVO::is_week_beginning_Valid() const{
    return m_week_beginning_isValid;
}

bool OAITimeCardSimpleVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_submit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_no_of_workdays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submit_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timecard_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_hours_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_week_beginning_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeCardSimpleVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
