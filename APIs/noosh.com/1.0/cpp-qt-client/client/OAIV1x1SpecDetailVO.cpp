/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1x1SpecDetailVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1x1SpecDetailVO::OAIV1x1SpecDetailVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1x1SpecDetailVO::OAIV1x1SpecDetailVO() {
    this->initializeModel();
}

OAIV1x1SpecDetailVO::~OAIV1x1SpecDetailVO() {}

void OAIV1x1SpecDetailVO::initializeModel() {

    m_client_status_isSet = false;
    m_client_status_isValid = false;

    m_create_date_isSet = false;
    m_create_date_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_first_level_custom_fields_isSet = false;
    m_first_level_custom_fields_isValid = false;

    m_header_custom_fields_isSet = false;
    m_header_custom_fields_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_last_updated_isSet = false;
    m_last_updated_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_product_type_info_isSet = false;
    m_product_type_info_isValid = false;

    m_quantity_1_isSet = false;
    m_quantity_1_isValid = false;

    m_quantity_2_isSet = false;
    m_quantity_2_isValid = false;

    m_quantity_3_isSet = false;
    m_quantity_3_isValid = false;

    m_quantity_4_isSet = false;
    m_quantity_4_isValid = false;

    m_quantity_5_isSet = false;
    m_quantity_5_isValid = false;

    m_reference_number_isSet = false;
    m_reference_number_isValid = false;

    m_second_level_custom_fields_isSet = false;
    m_second_level_custom_fields_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_spec_id_isSet = false;
    m_spec_id_isValid = false;

    m_spec_name_isSet = false;
    m_spec_name_isValid = false;

    m_spec_options_isSet = false;
    m_spec_options_isValid = false;

    m_spec_options_complete_isSet = false;
    m_spec_options_complete_isValid = false;

    m_spec_original_isSet = false;
    m_spec_original_isValid = false;

    m_spec_type_isSet = false;
    m_spec_type_isValid = false;

    m_supplier_status_isSet = false;
    m_supplier_status_isValid = false;

    m_uofms_isSet = false;
    m_uofms_isValid = false;

    m_user_state_isSet = false;
    m_user_state_isValid = false;
}

void OAIV1x1SpecDetailVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1x1SpecDetailVO::fromJsonObject(QJsonObject json) {

    m_client_status_isValid = ::OpenAPI::fromJsonValue(m_client_status, json[QString("client_status")]);
    m_client_status_isSet = !json[QString("client_status")].isNull() && m_client_status_isValid;

    m_create_date_isValid = ::OpenAPI::fromJsonValue(m_create_date, json[QString("create_date")]);
    m_create_date_isSet = !json[QString("create_date")].isNull() && m_create_date_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_first_level_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_first_level_custom_fields, json[QString("first_level_custom_fields")]);
    m_first_level_custom_fields_isSet = !json[QString("first_level_custom_fields")].isNull() && m_first_level_custom_fields_isValid;

    m_header_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_header_custom_fields, json[QString("header_custom_fields")]);
    m_header_custom_fields_isSet = !json[QString("header_custom_fields")].isNull() && m_header_custom_fields_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("job_id")]);
    m_job_id_isSet = !json[QString("job_id")].isNull() && m_job_id_isValid;

    m_last_updated_isValid = ::OpenAPI::fromJsonValue(m_last_updated, json[QString("last_updated")]);
    m_last_updated_isSet = !json[QString("last_updated")].isNull() && m_last_updated_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("product_type")]);
    m_product_type_isSet = !json[QString("product_type")].isNull() && m_product_type_isValid;

    m_product_type_info_isValid = ::OpenAPI::fromJsonValue(m_product_type_info, json[QString("product_type_info")]);
    m_product_type_info_isSet = !json[QString("product_type_info")].isNull() && m_product_type_info_isValid;

    m_quantity_1_isValid = ::OpenAPI::fromJsonValue(m_quantity_1, json[QString("quantity_1")]);
    m_quantity_1_isSet = !json[QString("quantity_1")].isNull() && m_quantity_1_isValid;

    m_quantity_2_isValid = ::OpenAPI::fromJsonValue(m_quantity_2, json[QString("quantity_2")]);
    m_quantity_2_isSet = !json[QString("quantity_2")].isNull() && m_quantity_2_isValid;

    m_quantity_3_isValid = ::OpenAPI::fromJsonValue(m_quantity_3, json[QString("quantity_3")]);
    m_quantity_3_isSet = !json[QString("quantity_3")].isNull() && m_quantity_3_isValid;

    m_quantity_4_isValid = ::OpenAPI::fromJsonValue(m_quantity_4, json[QString("quantity_4")]);
    m_quantity_4_isSet = !json[QString("quantity_4")].isNull() && m_quantity_4_isValid;

    m_quantity_5_isValid = ::OpenAPI::fromJsonValue(m_quantity_5, json[QString("quantity_5")]);
    m_quantity_5_isSet = !json[QString("quantity_5")].isNull() && m_quantity_5_isValid;

    m_reference_number_isValid = ::OpenAPI::fromJsonValue(m_reference_number, json[QString("reference_number")]);
    m_reference_number_isSet = !json[QString("reference_number")].isNull() && m_reference_number_isValid;

    m_second_level_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_second_level_custom_fields, json[QString("second_level_custom_fields")]);
    m_second_level_custom_fields_isSet = !json[QString("second_level_custom_fields")].isNull() && m_second_level_custom_fields_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;

    m_spec_id_isValid = ::OpenAPI::fromJsonValue(m_spec_id, json[QString("spec_id")]);
    m_spec_id_isSet = !json[QString("spec_id")].isNull() && m_spec_id_isValid;

    m_spec_name_isValid = ::OpenAPI::fromJsonValue(m_spec_name, json[QString("spec_name")]);
    m_spec_name_isSet = !json[QString("spec_name")].isNull() && m_spec_name_isValid;

    m_spec_options_isValid = ::OpenAPI::fromJsonValue(m_spec_options, json[QString("spec_options")]);
    m_spec_options_isSet = !json[QString("spec_options")].isNull() && m_spec_options_isValid;

    m_spec_options_complete_isValid = ::OpenAPI::fromJsonValue(m_spec_options_complete, json[QString("spec_options_complete")]);
    m_spec_options_complete_isSet = !json[QString("spec_options_complete")].isNull() && m_spec_options_complete_isValid;

    m_spec_original_isValid = ::OpenAPI::fromJsonValue(m_spec_original, json[QString("spec_original")]);
    m_spec_original_isSet = !json[QString("spec_original")].isNull() && m_spec_original_isValid;

    m_spec_type_isValid = ::OpenAPI::fromJsonValue(m_spec_type, json[QString("spec_type")]);
    m_spec_type_isSet = !json[QString("spec_type")].isNull() && m_spec_type_isValid;

    m_supplier_status_isValid = ::OpenAPI::fromJsonValue(m_supplier_status, json[QString("supplier_status")]);
    m_supplier_status_isSet = !json[QString("supplier_status")].isNull() && m_supplier_status_isValid;

    m_uofms_isValid = ::OpenAPI::fromJsonValue(m_uofms, json[QString("uofms")]);
    m_uofms_isSet = !json[QString("uofms")].isNull() && m_uofms_isValid;

    m_user_state_isValid = ::OpenAPI::fromJsonValue(m_user_state, json[QString("user_state")]);
    m_user_state_isSet = !json[QString("user_state")].isNull() && m_user_state_isValid;
}

QString OAIV1x1SpecDetailVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1x1SpecDetailVO::asJsonObject() const {
    QJsonObject obj;
    if (m_client_status_isSet) {
        obj.insert(QString("client_status"), ::OpenAPI::toJsonValue(m_client_status));
    }
    if (m_create_date_isSet) {
        obj.insert(QString("create_date"), ::OpenAPI::toJsonValue(m_create_date));
    }
    if (m_created_by.isSet()) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_first_level_custom_fields.isSet()) {
        obj.insert(QString("first_level_custom_fields"), ::OpenAPI::toJsonValue(m_first_level_custom_fields));
    }
    if (m_header_custom_fields.isSet()) {
        obj.insert(QString("header_custom_fields"), ::OpenAPI::toJsonValue(m_header_custom_fields));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("job_id"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_last_updated_isSet) {
        obj.insert(QString("last_updated"), ::OpenAPI::toJsonValue(m_last_updated));
    }
    if (m_product_type_isSet) {
        obj.insert(QString("product_type"), ::OpenAPI::toJsonValue(m_product_type));
    }
    if (m_product_type_info.isSet()) {
        obj.insert(QString("product_type_info"), ::OpenAPI::toJsonValue(m_product_type_info));
    }
    if (m_quantity_1_isSet) {
        obj.insert(QString("quantity_1"), ::OpenAPI::toJsonValue(m_quantity_1));
    }
    if (m_quantity_2_isSet) {
        obj.insert(QString("quantity_2"), ::OpenAPI::toJsonValue(m_quantity_2));
    }
    if (m_quantity_3_isSet) {
        obj.insert(QString("quantity_3"), ::OpenAPI::toJsonValue(m_quantity_3));
    }
    if (m_quantity_4_isSet) {
        obj.insert(QString("quantity_4"), ::OpenAPI::toJsonValue(m_quantity_4));
    }
    if (m_quantity_5_isSet) {
        obj.insert(QString("quantity_5"), ::OpenAPI::toJsonValue(m_quantity_5));
    }
    if (m_reference_number_isSet) {
        obj.insert(QString("reference_number"), ::OpenAPI::toJsonValue(m_reference_number));
    }
    if (m_second_level_custom_fields.size() > 0) {
        obj.insert(QString("second_level_custom_fields"), ::OpenAPI::toJsonValue(m_second_level_custom_fields));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_spec_id_isSet) {
        obj.insert(QString("spec_id"), ::OpenAPI::toJsonValue(m_spec_id));
    }
    if (m_spec_name_isSet) {
        obj.insert(QString("spec_name"), ::OpenAPI::toJsonValue(m_spec_name));
    }
    if (m_spec_options.size() > 0) {
        obj.insert(QString("spec_options"), ::OpenAPI::toJsonValue(m_spec_options));
    }
    if (m_spec_options_complete.size() > 0) {
        obj.insert(QString("spec_options_complete"), ::OpenAPI::toJsonValue(m_spec_options_complete));
    }
    if (m_spec_original.isSet()) {
        obj.insert(QString("spec_original"), ::OpenAPI::toJsonValue(m_spec_original));
    }
    if (m_spec_type.isSet()) {
        obj.insert(QString("spec_type"), ::OpenAPI::toJsonValue(m_spec_type));
    }
    if (m_supplier_status_isSet) {
        obj.insert(QString("supplier_status"), ::OpenAPI::toJsonValue(m_supplier_status));
    }
    if (m_uofms.size() > 0) {
        obj.insert(QString("uofms"), ::OpenAPI::toJsonValue(m_uofms));
    }
    if (m_user_state_isSet) {
        obj.insert(QString("user_state"), ::OpenAPI::toJsonValue(m_user_state));
    }
    return obj;
}

QString OAIV1x1SpecDetailVO::getClientStatus() const {
    return m_client_status;
}
void OAIV1x1SpecDetailVO::setClientStatus(const QString &client_status) {
    m_client_status = client_status;
    m_client_status_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_client_status_Set() const{
    return m_client_status_isSet;
}

bool OAIV1x1SpecDetailVO::is_client_status_Valid() const{
    return m_client_status_isValid;
}

QDate OAIV1x1SpecDetailVO::getCreateDate() const {
    return m_create_date;
}
void OAIV1x1SpecDetailVO::setCreateDate(const QDate &create_date) {
    m_create_date = create_date;
    m_create_date_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_create_date_Set() const{
    return m_create_date_isSet;
}

bool OAIV1x1SpecDetailVO::is_create_date_Valid() const{
    return m_create_date_isValid;
}

OAIPersonVO OAIV1x1SpecDetailVO::getCreatedBy() const {
    return m_created_by;
}
void OAIV1x1SpecDetailVO::setCreatedBy(const OAIPersonVO &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIV1x1SpecDetailVO::is_created_by_Valid() const{
    return m_created_by_isValid;
}

OAIV1x1ProperyVO OAIV1x1SpecDetailVO::getFirstLevelCustomFields() const {
    return m_first_level_custom_fields;
}
void OAIV1x1SpecDetailVO::setFirstLevelCustomFields(const OAIV1x1ProperyVO &first_level_custom_fields) {
    m_first_level_custom_fields = first_level_custom_fields;
    m_first_level_custom_fields_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_first_level_custom_fields_Set() const{
    return m_first_level_custom_fields_isSet;
}

bool OAIV1x1SpecDetailVO::is_first_level_custom_fields_Valid() const{
    return m_first_level_custom_fields_isValid;
}

OAIV1x1ProperyVO OAIV1x1SpecDetailVO::getHeaderCustomFields() const {
    return m_header_custom_fields;
}
void OAIV1x1SpecDetailVO::setHeaderCustomFields(const OAIV1x1ProperyVO &header_custom_fields) {
    m_header_custom_fields = header_custom_fields;
    m_header_custom_fields_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_header_custom_fields_Set() const{
    return m_header_custom_fields_isSet;
}

bool OAIV1x1SpecDetailVO::is_header_custom_fields_Valid() const{
    return m_header_custom_fields_isValid;
}

qint64 OAIV1x1SpecDetailVO::getJobId() const {
    return m_job_id;
}
void OAIV1x1SpecDetailVO::setJobId(const qint64 &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIV1x1SpecDetailVO::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QDate OAIV1x1SpecDetailVO::getLastUpdated() const {
    return m_last_updated;
}
void OAIV1x1SpecDetailVO::setLastUpdated(const QDate &last_updated) {
    m_last_updated = last_updated;
    m_last_updated_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_last_updated_Set() const{
    return m_last_updated_isSet;
}

bool OAIV1x1SpecDetailVO::is_last_updated_Valid() const{
    return m_last_updated_isValid;
}

QString OAIV1x1SpecDetailVO::getProductType() const {
    return m_product_type;
}
void OAIV1x1SpecDetailVO::setProductType(const QString &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIV1x1SpecDetailVO::is_product_type_Valid() const{
    return m_product_type_isValid;
}

OAIProductTypeVO OAIV1x1SpecDetailVO::getProductTypeInfo() const {
    return m_product_type_info;
}
void OAIV1x1SpecDetailVO::setProductTypeInfo(const OAIProductTypeVO &product_type_info) {
    m_product_type_info = product_type_info;
    m_product_type_info_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_product_type_info_Set() const{
    return m_product_type_info_isSet;
}

bool OAIV1x1SpecDetailVO::is_product_type_info_Valid() const{
    return m_product_type_info_isValid;
}

qint64 OAIV1x1SpecDetailVO::getQuantity1() const {
    return m_quantity_1;
}
void OAIV1x1SpecDetailVO::setQuantity1(const qint64 &quantity_1) {
    m_quantity_1 = quantity_1;
    m_quantity_1_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_quantity_1_Set() const{
    return m_quantity_1_isSet;
}

bool OAIV1x1SpecDetailVO::is_quantity_1_Valid() const{
    return m_quantity_1_isValid;
}

qint64 OAIV1x1SpecDetailVO::getQuantity2() const {
    return m_quantity_2;
}
void OAIV1x1SpecDetailVO::setQuantity2(const qint64 &quantity_2) {
    m_quantity_2 = quantity_2;
    m_quantity_2_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_quantity_2_Set() const{
    return m_quantity_2_isSet;
}

bool OAIV1x1SpecDetailVO::is_quantity_2_Valid() const{
    return m_quantity_2_isValid;
}

qint64 OAIV1x1SpecDetailVO::getQuantity3() const {
    return m_quantity_3;
}
void OAIV1x1SpecDetailVO::setQuantity3(const qint64 &quantity_3) {
    m_quantity_3 = quantity_3;
    m_quantity_3_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_quantity_3_Set() const{
    return m_quantity_3_isSet;
}

bool OAIV1x1SpecDetailVO::is_quantity_3_Valid() const{
    return m_quantity_3_isValid;
}

qint64 OAIV1x1SpecDetailVO::getQuantity4() const {
    return m_quantity_4;
}
void OAIV1x1SpecDetailVO::setQuantity4(const qint64 &quantity_4) {
    m_quantity_4 = quantity_4;
    m_quantity_4_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_quantity_4_Set() const{
    return m_quantity_4_isSet;
}

bool OAIV1x1SpecDetailVO::is_quantity_4_Valid() const{
    return m_quantity_4_isValid;
}

qint64 OAIV1x1SpecDetailVO::getQuantity5() const {
    return m_quantity_5;
}
void OAIV1x1SpecDetailVO::setQuantity5(const qint64 &quantity_5) {
    m_quantity_5 = quantity_5;
    m_quantity_5_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_quantity_5_Set() const{
    return m_quantity_5_isSet;
}

bool OAIV1x1SpecDetailVO::is_quantity_5_Valid() const{
    return m_quantity_5_isValid;
}

QString OAIV1x1SpecDetailVO::getReferenceNumber() const {
    return m_reference_number;
}
void OAIV1x1SpecDetailVO::setReferenceNumber(const QString &reference_number) {
    m_reference_number = reference_number;
    m_reference_number_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_reference_number_Set() const{
    return m_reference_number_isSet;
}

bool OAIV1x1SpecDetailVO::is_reference_number_Valid() const{
    return m_reference_number_isValid;
}

QList<OAIV1x1ProperyVO> OAIV1x1SpecDetailVO::getSecondLevelCustomFields() const {
    return m_second_level_custom_fields;
}
void OAIV1x1SpecDetailVO::setSecondLevelCustomFields(const QList<OAIV1x1ProperyVO> &second_level_custom_fields) {
    m_second_level_custom_fields = second_level_custom_fields;
    m_second_level_custom_fields_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_second_level_custom_fields_Set() const{
    return m_second_level_custom_fields_isSet;
}

bool OAIV1x1SpecDetailVO::is_second_level_custom_fields_Valid() const{
    return m_second_level_custom_fields_isValid;
}

QString OAIV1x1SpecDetailVO::getSku() const {
    return m_sku;
}
void OAIV1x1SpecDetailVO::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIV1x1SpecDetailVO::is_sku_Valid() const{
    return m_sku_isValid;
}

qint64 OAIV1x1SpecDetailVO::getSpecId() const {
    return m_spec_id;
}
void OAIV1x1SpecDetailVO::setSpecId(const qint64 &spec_id) {
    m_spec_id = spec_id;
    m_spec_id_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_spec_id_Set() const{
    return m_spec_id_isSet;
}

bool OAIV1x1SpecDetailVO::is_spec_id_Valid() const{
    return m_spec_id_isValid;
}

QString OAIV1x1SpecDetailVO::getSpecName() const {
    return m_spec_name;
}
void OAIV1x1SpecDetailVO::setSpecName(const QString &spec_name) {
    m_spec_name = spec_name;
    m_spec_name_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_spec_name_Set() const{
    return m_spec_name_isSet;
}

bool OAIV1x1SpecDetailVO::is_spec_name_Valid() const{
    return m_spec_name_isValid;
}

QList<OAISpecSimplestVO> OAIV1x1SpecDetailVO::getSpecOptions() const {
    return m_spec_options;
}
void OAIV1x1SpecDetailVO::setSpecOptions(const QList<OAISpecSimplestVO> &spec_options) {
    m_spec_options = spec_options;
    m_spec_options_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_spec_options_Set() const{
    return m_spec_options_isSet;
}

bool OAIV1x1SpecDetailVO::is_spec_options_Valid() const{
    return m_spec_options_isValid;
}

QList<OAISpecSimpleVO> OAIV1x1SpecDetailVO::getSpecOptionsComplete() const {
    return m_spec_options_complete;
}
void OAIV1x1SpecDetailVO::setSpecOptionsComplete(const QList<OAISpecSimpleVO> &spec_options_complete) {
    m_spec_options_complete = spec_options_complete;
    m_spec_options_complete_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_spec_options_complete_Set() const{
    return m_spec_options_complete_isSet;
}

bool OAIV1x1SpecDetailVO::is_spec_options_complete_Valid() const{
    return m_spec_options_complete_isValid;
}

OAISpecSimplestVO OAIV1x1SpecDetailVO::getSpecOriginal() const {
    return m_spec_original;
}
void OAIV1x1SpecDetailVO::setSpecOriginal(const OAISpecSimplestVO &spec_original) {
    m_spec_original = spec_original;
    m_spec_original_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_spec_original_Set() const{
    return m_spec_original_isSet;
}

bool OAIV1x1SpecDetailVO::is_spec_original_Valid() const{
    return m_spec_original_isValid;
}

OAISpecTypeVO OAIV1x1SpecDetailVO::getSpecType() const {
    return m_spec_type;
}
void OAIV1x1SpecDetailVO::setSpecType(const OAISpecTypeVO &spec_type) {
    m_spec_type = spec_type;
    m_spec_type_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_spec_type_Set() const{
    return m_spec_type_isSet;
}

bool OAIV1x1SpecDetailVO::is_spec_type_Valid() const{
    return m_spec_type_isValid;
}

QString OAIV1x1SpecDetailVO::getSupplierStatus() const {
    return m_supplier_status;
}
void OAIV1x1SpecDetailVO::setSupplierStatus(const QString &supplier_status) {
    m_supplier_status = supplier_status;
    m_supplier_status_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_supplier_status_Set() const{
    return m_supplier_status_isSet;
}

bool OAIV1x1SpecDetailVO::is_supplier_status_Valid() const{
    return m_supplier_status_isValid;
}

QList<OAIUofmSimpleVO> OAIV1x1SpecDetailVO::getUofms() const {
    return m_uofms;
}
void OAIV1x1SpecDetailVO::setUofms(const QList<OAIUofmSimpleVO> &uofms) {
    m_uofms = uofms;
    m_uofms_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_uofms_Set() const{
    return m_uofms_isSet;
}

bool OAIV1x1SpecDetailVO::is_uofms_Valid() const{
    return m_uofms_isValid;
}

QString OAIV1x1SpecDetailVO::getUserState() const {
    return m_user_state;
}
void OAIV1x1SpecDetailVO::setUserState(const QString &user_state) {
    m_user_state = user_state;
    m_user_state_isSet = true;
}

bool OAIV1x1SpecDetailVO::is_user_state_Set() const{
    return m_user_state_isSet;
}

bool OAIV1x1SpecDetailVO::is_user_state_Valid() const{
    return m_user_state_isValid;
}

bool OAIV1x1SpecDetailVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_level_custom_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_custom_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_second_level_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_options_complete.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_original.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uofms.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1x1SpecDetailVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
