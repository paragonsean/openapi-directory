/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEstimateItemPriceVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEstimateItemPriceVO::OAIEstimateItemPriceVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEstimateItemPriceVO::OAIEstimateItemPriceVO() {
    this->initializeModel();
}

OAIEstimateItemPriceVO::~OAIEstimateItemPriceVO() {}

void OAIEstimateItemPriceVO::initializeModel() {

    m_add_price_isSet = false;
    m_add_price_isValid = false;

    m_breakouts_isSet = false;
    m_breakouts_isValid = false;

    m_em_estimate_item_price_id_isSet = false;
    m_em_estimate_item_price_id_isValid = false;

    m_item_option_isSet = false;
    m_item_option_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_shipping_isSet = false;
    m_shipping_isValid = false;

    m_tax_isSet = false;
    m_tax_isValid = false;

    m_total_price_isSet = false;
    m_total_price_isValid = false;

    m_transactional_add_price_isSet = false;
    m_transactional_add_price_isValid = false;

    m_transactional_price_isSet = false;
    m_transactional_price_isValid = false;

    m_transactional_shipping_isSet = false;
    m_transactional_shipping_isValid = false;

    m_transactional_tax_isSet = false;
    m_transactional_tax_isValid = false;

    m_transactional_total_price_isSet = false;
    m_transactional_total_price_isValid = false;
}

void OAIEstimateItemPriceVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEstimateItemPriceVO::fromJsonObject(QJsonObject json) {

    m_add_price_isValid = ::OpenAPI::fromJsonValue(m_add_price, json[QString("add_price")]);
    m_add_price_isSet = !json[QString("add_price")].isNull() && m_add_price_isValid;

    m_breakouts_isValid = ::OpenAPI::fromJsonValue(m_breakouts, json[QString("breakouts")]);
    m_breakouts_isSet = !json[QString("breakouts")].isNull() && m_breakouts_isValid;

    m_em_estimate_item_price_id_isValid = ::OpenAPI::fromJsonValue(m_em_estimate_item_price_id, json[QString("em_estimate_item_price_id")]);
    m_em_estimate_item_price_id_isSet = !json[QString("em_estimate_item_price_id")].isNull() && m_em_estimate_item_price_id_isValid;

    m_item_option_isValid = ::OpenAPI::fromJsonValue(m_item_option, json[QString("item_option")]);
    m_item_option_isSet = !json[QString("item_option")].isNull() && m_item_option_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_shipping_isValid = ::OpenAPI::fromJsonValue(m_shipping, json[QString("shipping")]);
    m_shipping_isSet = !json[QString("shipping")].isNull() && m_shipping_isValid;

    m_tax_isValid = ::OpenAPI::fromJsonValue(m_tax, json[QString("tax")]);
    m_tax_isSet = !json[QString("tax")].isNull() && m_tax_isValid;

    m_total_price_isValid = ::OpenAPI::fromJsonValue(m_total_price, json[QString("total_price")]);
    m_total_price_isSet = !json[QString("total_price")].isNull() && m_total_price_isValid;

    m_transactional_add_price_isValid = ::OpenAPI::fromJsonValue(m_transactional_add_price, json[QString("transactional_add_price")]);
    m_transactional_add_price_isSet = !json[QString("transactional_add_price")].isNull() && m_transactional_add_price_isValid;

    m_transactional_price_isValid = ::OpenAPI::fromJsonValue(m_transactional_price, json[QString("transactional_price")]);
    m_transactional_price_isSet = !json[QString("transactional_price")].isNull() && m_transactional_price_isValid;

    m_transactional_shipping_isValid = ::OpenAPI::fromJsonValue(m_transactional_shipping, json[QString("transactional_shipping")]);
    m_transactional_shipping_isSet = !json[QString("transactional_shipping")].isNull() && m_transactional_shipping_isValid;

    m_transactional_tax_isValid = ::OpenAPI::fromJsonValue(m_transactional_tax, json[QString("transactional_tax")]);
    m_transactional_tax_isSet = !json[QString("transactional_tax")].isNull() && m_transactional_tax_isValid;

    m_transactional_total_price_isValid = ::OpenAPI::fromJsonValue(m_transactional_total_price, json[QString("transactional_total_price")]);
    m_transactional_total_price_isSet = !json[QString("transactional_total_price")].isNull() && m_transactional_total_price_isValid;
}

QString OAIEstimateItemPriceVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEstimateItemPriceVO::asJsonObject() const {
    QJsonObject obj;
    if (m_add_price_isSet) {
        obj.insert(QString("add_price"), ::OpenAPI::toJsonValue(m_add_price));
    }
    if (m_breakouts.size() > 0) {
        obj.insert(QString("breakouts"), ::OpenAPI::toJsonValue(m_breakouts));
    }
    if (m_em_estimate_item_price_id_isSet) {
        obj.insert(QString("em_estimate_item_price_id"), ::OpenAPI::toJsonValue(m_em_estimate_item_price_id));
    }
    if (m_item_option.isSet()) {
        obj.insert(QString("item_option"), ::OpenAPI::toJsonValue(m_item_option));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_shipping_isSet) {
        obj.insert(QString("shipping"), ::OpenAPI::toJsonValue(m_shipping));
    }
    if (m_tax_isSet) {
        obj.insert(QString("tax"), ::OpenAPI::toJsonValue(m_tax));
    }
    if (m_total_price_isSet) {
        obj.insert(QString("total_price"), ::OpenAPI::toJsonValue(m_total_price));
    }
    if (m_transactional_add_price_isSet) {
        obj.insert(QString("transactional_add_price"), ::OpenAPI::toJsonValue(m_transactional_add_price));
    }
    if (m_transactional_price_isSet) {
        obj.insert(QString("transactional_price"), ::OpenAPI::toJsonValue(m_transactional_price));
    }
    if (m_transactional_shipping_isSet) {
        obj.insert(QString("transactional_shipping"), ::OpenAPI::toJsonValue(m_transactional_shipping));
    }
    if (m_transactional_tax_isSet) {
        obj.insert(QString("transactional_tax"), ::OpenAPI::toJsonValue(m_transactional_tax));
    }
    if (m_transactional_total_price_isSet) {
        obj.insert(QString("transactional_total_price"), ::OpenAPI::toJsonValue(m_transactional_total_price));
    }
    return obj;
}

QJsonValue OAIEstimateItemPriceVO::getAddPrice() const {
    return m_add_price;
}
void OAIEstimateItemPriceVO::setAddPrice(const QJsonValue &add_price) {
    m_add_price = add_price;
    m_add_price_isSet = true;
}

bool OAIEstimateItemPriceVO::is_add_price_Set() const{
    return m_add_price_isSet;
}

bool OAIEstimateItemPriceVO::is_add_price_Valid() const{
    return m_add_price_isValid;
}

QList<OAIBreakoutVO> OAIEstimateItemPriceVO::getBreakouts() const {
    return m_breakouts;
}
void OAIEstimateItemPriceVO::setBreakouts(const QList<OAIBreakoutVO> &breakouts) {
    m_breakouts = breakouts;
    m_breakouts_isSet = true;
}

bool OAIEstimateItemPriceVO::is_breakouts_Set() const{
    return m_breakouts_isSet;
}

bool OAIEstimateItemPriceVO::is_breakouts_Valid() const{
    return m_breakouts_isValid;
}

qint64 OAIEstimateItemPriceVO::getEmEstimateItemPriceId() const {
    return m_em_estimate_item_price_id;
}
void OAIEstimateItemPriceVO::setEmEstimateItemPriceId(const qint64 &em_estimate_item_price_id) {
    m_em_estimate_item_price_id = em_estimate_item_price_id;
    m_em_estimate_item_price_id_isSet = true;
}

bool OAIEstimateItemPriceVO::is_em_estimate_item_price_id_Set() const{
    return m_em_estimate_item_price_id_isSet;
}

bool OAIEstimateItemPriceVO::is_em_estimate_item_price_id_Valid() const{
    return m_em_estimate_item_price_id_isValid;
}

OAIItemOptionVO OAIEstimateItemPriceVO::getItemOption() const {
    return m_item_option;
}
void OAIEstimateItemPriceVO::setItemOption(const OAIItemOptionVO &item_option) {
    m_item_option = item_option;
    m_item_option_isSet = true;
}

bool OAIEstimateItemPriceVO::is_item_option_Set() const{
    return m_item_option_isSet;
}

bool OAIEstimateItemPriceVO::is_item_option_Valid() const{
    return m_item_option_isValid;
}

QJsonValue OAIEstimateItemPriceVO::getPrice() const {
    return m_price;
}
void OAIEstimateItemPriceVO::setPrice(const QJsonValue &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIEstimateItemPriceVO::is_price_Set() const{
    return m_price_isSet;
}

bool OAIEstimateItemPriceVO::is_price_Valid() const{
    return m_price_isValid;
}

QJsonValue OAIEstimateItemPriceVO::getShipping() const {
    return m_shipping;
}
void OAIEstimateItemPriceVO::setShipping(const QJsonValue &shipping) {
    m_shipping = shipping;
    m_shipping_isSet = true;
}

bool OAIEstimateItemPriceVO::is_shipping_Set() const{
    return m_shipping_isSet;
}

bool OAIEstimateItemPriceVO::is_shipping_Valid() const{
    return m_shipping_isValid;
}

QJsonValue OAIEstimateItemPriceVO::getTax() const {
    return m_tax;
}
void OAIEstimateItemPriceVO::setTax(const QJsonValue &tax) {
    m_tax = tax;
    m_tax_isSet = true;
}

bool OAIEstimateItemPriceVO::is_tax_Set() const{
    return m_tax_isSet;
}

bool OAIEstimateItemPriceVO::is_tax_Valid() const{
    return m_tax_isValid;
}

QJsonValue OAIEstimateItemPriceVO::getTotalPrice() const {
    return m_total_price;
}
void OAIEstimateItemPriceVO::setTotalPrice(const QJsonValue &total_price) {
    m_total_price = total_price;
    m_total_price_isSet = true;
}

bool OAIEstimateItemPriceVO::is_total_price_Set() const{
    return m_total_price_isSet;
}

bool OAIEstimateItemPriceVO::is_total_price_Valid() const{
    return m_total_price_isValid;
}

QJsonValue OAIEstimateItemPriceVO::getTransactionalAddPrice() const {
    return m_transactional_add_price;
}
void OAIEstimateItemPriceVO::setTransactionalAddPrice(const QJsonValue &transactional_add_price) {
    m_transactional_add_price = transactional_add_price;
    m_transactional_add_price_isSet = true;
}

bool OAIEstimateItemPriceVO::is_transactional_add_price_Set() const{
    return m_transactional_add_price_isSet;
}

bool OAIEstimateItemPriceVO::is_transactional_add_price_Valid() const{
    return m_transactional_add_price_isValid;
}

QJsonValue OAIEstimateItemPriceVO::getTransactionalPrice() const {
    return m_transactional_price;
}
void OAIEstimateItemPriceVO::setTransactionalPrice(const QJsonValue &transactional_price) {
    m_transactional_price = transactional_price;
    m_transactional_price_isSet = true;
}

bool OAIEstimateItemPriceVO::is_transactional_price_Set() const{
    return m_transactional_price_isSet;
}

bool OAIEstimateItemPriceVO::is_transactional_price_Valid() const{
    return m_transactional_price_isValid;
}

QJsonValue OAIEstimateItemPriceVO::getTransactionalShipping() const {
    return m_transactional_shipping;
}
void OAIEstimateItemPriceVO::setTransactionalShipping(const QJsonValue &transactional_shipping) {
    m_transactional_shipping = transactional_shipping;
    m_transactional_shipping_isSet = true;
}

bool OAIEstimateItemPriceVO::is_transactional_shipping_Set() const{
    return m_transactional_shipping_isSet;
}

bool OAIEstimateItemPriceVO::is_transactional_shipping_Valid() const{
    return m_transactional_shipping_isValid;
}

QJsonValue OAIEstimateItemPriceVO::getTransactionalTax() const {
    return m_transactional_tax;
}
void OAIEstimateItemPriceVO::setTransactionalTax(const QJsonValue &transactional_tax) {
    m_transactional_tax = transactional_tax;
    m_transactional_tax_isSet = true;
}

bool OAIEstimateItemPriceVO::is_transactional_tax_Set() const{
    return m_transactional_tax_isSet;
}

bool OAIEstimateItemPriceVO::is_transactional_tax_Valid() const{
    return m_transactional_tax_isValid;
}

QJsonValue OAIEstimateItemPriceVO::getTransactionalTotalPrice() const {
    return m_transactional_total_price;
}
void OAIEstimateItemPriceVO::setTransactionalTotalPrice(const QJsonValue &transactional_total_price) {
    m_transactional_total_price = transactional_total_price;
    m_transactional_total_price_isSet = true;
}

bool OAIEstimateItemPriceVO::is_transactional_total_price_Set() const{
    return m_transactional_total_price_isSet;
}

bool OAIEstimateItemPriceVO::is_transactional_total_price_Valid() const{
    return m_transactional_total_price_isValid;
}

bool OAIEstimateItemPriceVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_breakouts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_em_estimate_item_price_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_add_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEstimateItemPriceVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
