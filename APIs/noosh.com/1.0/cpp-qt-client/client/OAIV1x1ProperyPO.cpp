/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIV1x1ProperyPO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIV1x1ProperyPO::OAIV1x1ProperyPO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIV1x1ProperyPO::OAIV1x1ProperyPO() {
    this->initializeModel();
}

OAIV1x1ProperyPO::~OAIV1x1ProperyPO() {}

void OAIV1x1ProperyPO::initializeModel() {

    m_property_attributes_isSet = false;
    m_property_attributes_isValid = false;

    m_property_id_isSet = false;
    m_property_id_isValid = false;

    m_property_name_isSet = false;
    m_property_name_isValid = false;
}

void OAIV1x1ProperyPO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIV1x1ProperyPO::fromJsonObject(QJsonObject json) {

    m_property_attributes_isValid = ::OpenAPI::fromJsonValue(m_property_attributes, json[QString("property_attributes")]);
    m_property_attributes_isSet = !json[QString("property_attributes")].isNull() && m_property_attributes_isValid;

    m_property_id_isValid = ::OpenAPI::fromJsonValue(m_property_id, json[QString("property_id")]);
    m_property_id_isSet = !json[QString("property_id")].isNull() && m_property_id_isValid;

    m_property_name_isValid = ::OpenAPI::fromJsonValue(m_property_name, json[QString("property_name")]);
    m_property_name_isSet = !json[QString("property_name")].isNull() && m_property_name_isValid;
}

QString OAIV1x1ProperyPO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIV1x1ProperyPO::asJsonObject() const {
    QJsonObject obj;
    if (m_property_attributes.size() > 0) {
        obj.insert(QString("property_attributes"), ::OpenAPI::toJsonValue(m_property_attributes));
    }
    if (m_property_id_isSet) {
        obj.insert(QString("property_id"), ::OpenAPI::toJsonValue(m_property_id));
    }
    if (m_property_name_isSet) {
        obj.insert(QString("property_name"), ::OpenAPI::toJsonValue(m_property_name));
    }
    return obj;
}

QList<OAIV1x1SpecPamAndAttPO> OAIV1x1ProperyPO::getPropertyAttributes() const {
    return m_property_attributes;
}
void OAIV1x1ProperyPO::setPropertyAttributes(const QList<OAIV1x1SpecPamAndAttPO> &property_attributes) {
    m_property_attributes = property_attributes;
    m_property_attributes_isSet = true;
}

bool OAIV1x1ProperyPO::is_property_attributes_Set() const{
    return m_property_attributes_isSet;
}

bool OAIV1x1ProperyPO::is_property_attributes_Valid() const{
    return m_property_attributes_isValid;
}

qint64 OAIV1x1ProperyPO::getPropertyId() const {
    return m_property_id;
}
void OAIV1x1ProperyPO::setPropertyId(const qint64 &property_id) {
    m_property_id = property_id;
    m_property_id_isSet = true;
}

bool OAIV1x1ProperyPO::is_property_id_Set() const{
    return m_property_id_isSet;
}

bool OAIV1x1ProperyPO::is_property_id_Valid() const{
    return m_property_id_isValid;
}

QString OAIV1x1ProperyPO::getPropertyName() const {
    return m_property_name;
}
void OAIV1x1ProperyPO::setPropertyName(const QString &property_name) {
    m_property_name = property_name;
    m_property_name_isSet = true;
}

bool OAIV1x1ProperyPO::is_property_name_Set() const{
    return m_property_name_isSet;
}

bool OAIV1x1ProperyPO::is_property_name_Valid() const{
    return m_property_name_isValid;
}

bool OAIV1x1ProperyPO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_property_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIV1x1ProperyPO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
