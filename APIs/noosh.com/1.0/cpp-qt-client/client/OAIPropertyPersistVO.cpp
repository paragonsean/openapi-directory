/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPropertyPersistVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPropertyPersistVO::OAIPropertyPersistVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPropertyPersistVO::OAIPropertyPersistVO() {
    this->initializeModel();
}

OAIPropertyPersistVO::~OAIPropertyPersistVO() {}

void OAIPropertyPersistVO::initializeModel() {

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_paper_id_isSet = false;
    m_paper_id_isValid = false;
}

void OAIPropertyPersistVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPropertyPersistVO::fromJsonObject(QJsonObject json) {

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_paper_id_isValid = ::OpenAPI::fromJsonValue(m_paper_id, json[QString("paper_id")]);
    m_paper_id_isSet = !json[QString("paper_id")].isNull() && m_paper_id_isValid;
}

QString OAIPropertyPersistVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPropertyPersistVO::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_paper_id_isSet) {
        obj.insert(QString("paper_id"), ::OpenAPI::toJsonValue(m_paper_id));
    }
    return obj;
}

QList<OAICustomFieldPersistVO> OAIPropertyPersistVO::getCustomFields() const {
    return m_custom_fields;
}
void OAIPropertyPersistVO::setCustomFields(const QList<OAICustomFieldPersistVO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIPropertyPersistVO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIPropertyPersistVO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

qint64 OAIPropertyPersistVO::getPaperId() const {
    return m_paper_id;
}
void OAIPropertyPersistVO::setPaperId(const qint64 &paper_id) {
    m_paper_id = paper_id;
    m_paper_id_isSet = true;
}

bool OAIPropertyPersistVO::is_paper_id_Set() const{
    return m_paper_id_isSet;
}

bool OAIPropertyPersistVO::is_paper_id_Valid() const{
    return m_paper_id_isValid;
}

bool OAIPropertyPersistVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_paper_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPropertyPersistVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
