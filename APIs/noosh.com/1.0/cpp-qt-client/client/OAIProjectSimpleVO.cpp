/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectSimpleVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectSimpleVO::OAIProjectSimpleVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectSimpleVO::OAIProjectSimpleVO() {
    this->initializeModel();
}

OAIProjectSimpleVO::~OAIProjectSimpleVO() {}

void OAIProjectSimpleVO::initializeModel() {

    m_client_account_isSet = false;
    m_client_account_isValid = false;

    m_client_workgroup_id_isSet = false;
    m_client_workgroup_id_isValid = false;

    m_completion_date_isSet = false;
    m_completion_date_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_is_hot_isSet = false;
    m_is_hot_isValid = false;

    m_last_spec_update_isSet = false;
    m_last_spec_update_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_project_name_isSet = false;
    m_project_name_isValid = false;

    m_project_number_isSet = false;
    m_project_number_isValid = false;

    m_project_status_isSet = false;
    m_project_status_isValid = false;
}

void OAIProjectSimpleVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectSimpleVO::fromJsonObject(QJsonObject json) {

    m_client_account_isValid = ::OpenAPI::fromJsonValue(m_client_account, json[QString("client_account")]);
    m_client_account_isSet = !json[QString("client_account")].isNull() && m_client_account_isValid;

    m_client_workgroup_id_isValid = ::OpenAPI::fromJsonValue(m_client_workgroup_id, json[QString("client_workgroup_id")]);
    m_client_workgroup_id_isSet = !json[QString("client_workgroup_id")].isNull() && m_client_workgroup_id_isValid;

    m_completion_date_isValid = ::OpenAPI::fromJsonValue(m_completion_date, json[QString("completion_date")]);
    m_completion_date_isSet = !json[QString("completion_date")].isNull() && m_completion_date_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("is_active")]);
    m_is_active_isSet = !json[QString("is_active")].isNull() && m_is_active_isValid;

    m_is_hot_isValid = ::OpenAPI::fromJsonValue(m_is_hot, json[QString("is_hot")]);
    m_is_hot_isSet = !json[QString("is_hot")].isNull() && m_is_hot_isValid;

    m_last_spec_update_isValid = ::OpenAPI::fromJsonValue(m_last_spec_update, json[QString("last_spec_update")]);
    m_last_spec_update_isSet = !json[QString("last_spec_update")].isNull() && m_last_spec_update_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("project_id")]);
    m_project_id_isSet = !json[QString("project_id")].isNull() && m_project_id_isValid;

    m_project_name_isValid = ::OpenAPI::fromJsonValue(m_project_name, json[QString("project_name")]);
    m_project_name_isSet = !json[QString("project_name")].isNull() && m_project_name_isValid;

    m_project_number_isValid = ::OpenAPI::fromJsonValue(m_project_number, json[QString("project_number")]);
    m_project_number_isSet = !json[QString("project_number")].isNull() && m_project_number_isValid;

    m_project_status_isValid = ::OpenAPI::fromJsonValue(m_project_status, json[QString("project_status")]);
    m_project_status_isSet = !json[QString("project_status")].isNull() && m_project_status_isValid;
}

QString OAIProjectSimpleVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectSimpleVO::asJsonObject() const {
    QJsonObject obj;
    if (m_client_account_isSet) {
        obj.insert(QString("client_account"), ::OpenAPI::toJsonValue(m_client_account));
    }
    if (m_client_workgroup_id_isSet) {
        obj.insert(QString("client_workgroup_id"), ::OpenAPI::toJsonValue(m_client_workgroup_id));
    }
    if (m_completion_date_isSet) {
        obj.insert(QString("completion_date"), ::OpenAPI::toJsonValue(m_completion_date));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("is_active"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_is_hot_isSet) {
        obj.insert(QString("is_hot"), ::OpenAPI::toJsonValue(m_is_hot));
    }
    if (m_last_spec_update_isSet) {
        obj.insert(QString("last_spec_update"), ::OpenAPI::toJsonValue(m_last_spec_update));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("project_id"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_project_name_isSet) {
        obj.insert(QString("project_name"), ::OpenAPI::toJsonValue(m_project_name));
    }
    if (m_project_number_isSet) {
        obj.insert(QString("project_number"), ::OpenAPI::toJsonValue(m_project_number));
    }
    if (m_project_status_isSet) {
        obj.insert(QString("project_status"), ::OpenAPI::toJsonValue(m_project_status));
    }
    return obj;
}

QString OAIProjectSimpleVO::getClientAccount() const {
    return m_client_account;
}
void OAIProjectSimpleVO::setClientAccount(const QString &client_account) {
    m_client_account = client_account;
    m_client_account_isSet = true;
}

bool OAIProjectSimpleVO::is_client_account_Set() const{
    return m_client_account_isSet;
}

bool OAIProjectSimpleVO::is_client_account_Valid() const{
    return m_client_account_isValid;
}

qint64 OAIProjectSimpleVO::getClientWorkgroupId() const {
    return m_client_workgroup_id;
}
void OAIProjectSimpleVO::setClientWorkgroupId(const qint64 &client_workgroup_id) {
    m_client_workgroup_id = client_workgroup_id;
    m_client_workgroup_id_isSet = true;
}

bool OAIProjectSimpleVO::is_client_workgroup_id_Set() const{
    return m_client_workgroup_id_isSet;
}

bool OAIProjectSimpleVO::is_client_workgroup_id_Valid() const{
    return m_client_workgroup_id_isValid;
}

QDate OAIProjectSimpleVO::getCompletionDate() const {
    return m_completion_date;
}
void OAIProjectSimpleVO::setCompletionDate(const QDate &completion_date) {
    m_completion_date = completion_date;
    m_completion_date_isSet = true;
}

bool OAIProjectSimpleVO::is_completion_date_Set() const{
    return m_completion_date_isSet;
}

bool OAIProjectSimpleVO::is_completion_date_Valid() const{
    return m_completion_date_isValid;
}

bool OAIProjectSimpleVO::isIsActive() const {
    return m_is_active;
}
void OAIProjectSimpleVO::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAIProjectSimpleVO::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAIProjectSimpleVO::is_is_active_Valid() const{
    return m_is_active_isValid;
}

bool OAIProjectSimpleVO::isIsHot() const {
    return m_is_hot;
}
void OAIProjectSimpleVO::setIsHot(const bool &is_hot) {
    m_is_hot = is_hot;
    m_is_hot_isSet = true;
}

bool OAIProjectSimpleVO::is_is_hot_Set() const{
    return m_is_hot_isSet;
}

bool OAIProjectSimpleVO::is_is_hot_Valid() const{
    return m_is_hot_isValid;
}

QDate OAIProjectSimpleVO::getLastSpecUpdate() const {
    return m_last_spec_update;
}
void OAIProjectSimpleVO::setLastSpecUpdate(const QDate &last_spec_update) {
    m_last_spec_update = last_spec_update;
    m_last_spec_update_isSet = true;
}

bool OAIProjectSimpleVO::is_last_spec_update_Set() const{
    return m_last_spec_update_isSet;
}

bool OAIProjectSimpleVO::is_last_spec_update_Valid() const{
    return m_last_spec_update_isValid;
}

qint64 OAIProjectSimpleVO::getProjectId() const {
    return m_project_id;
}
void OAIProjectSimpleVO::setProjectId(const qint64 &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIProjectSimpleVO::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIProjectSimpleVO::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIProjectSimpleVO::getProjectName() const {
    return m_project_name;
}
void OAIProjectSimpleVO::setProjectName(const QString &project_name) {
    m_project_name = project_name;
    m_project_name_isSet = true;
}

bool OAIProjectSimpleVO::is_project_name_Set() const{
    return m_project_name_isSet;
}

bool OAIProjectSimpleVO::is_project_name_Valid() const{
    return m_project_name_isValid;
}

QString OAIProjectSimpleVO::getProjectNumber() const {
    return m_project_number;
}
void OAIProjectSimpleVO::setProjectNumber(const QString &project_number) {
    m_project_number = project_number;
    m_project_number_isSet = true;
}

bool OAIProjectSimpleVO::is_project_number_Set() const{
    return m_project_number_isSet;
}

bool OAIProjectSimpleVO::is_project_number_Valid() const{
    return m_project_number_isValid;
}

QString OAIProjectSimpleVO::getProjectStatus() const {
    return m_project_status;
}
void OAIProjectSimpleVO::setProjectStatus(const QString &project_status) {
    m_project_status = project_status;
    m_project_status_isSet = true;
}

bool OAIProjectSimpleVO::is_project_status_Set() const{
    return m_project_status_isSet;
}

bool OAIProjectSimpleVO::is_project_status_Valid() const{
    return m_project_status_isValid;
}

bool OAIProjectSimpleVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_workgroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_hot_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_spec_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectSimpleVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
