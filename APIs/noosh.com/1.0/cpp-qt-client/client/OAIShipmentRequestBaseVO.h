/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShipmentRequestBaseVO.h
 *
 * Java type: com.noosh.nooshapi.vo.ShipmentRequestBaseVO
 */

#ifndef OAIShipmentRequestBaseVO_H
#define OAIShipmentRequestBaseVO_H

#include <QJsonObject>

#include "OAIPropertyPaAndAttVO.h"
#include <QDate>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPropertyPaAndAttVO;

class OAIShipmentRequestBaseVO : public OAIObject {
public:
    OAIShipmentRequestBaseVO();
    OAIShipmentRequestBaseVO(QString json);
    ~OAIShipmentRequestBaseVO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCompanyName() const;
    void setCompanyName(const QString &company_name);
    bool is_company_name_Set() const;
    bool is_company_name_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QList<OAIPropertyPaAndAttVO> getCustomFields() const;
    void setCustomFields(const QList<OAIPropertyPaAndAttVO> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescriptionOrTitle() const;
    void setDescriptionOrTitle(const QString &description_or_title);
    bool is_description_or_title_Set() const;
    bool is_description_or_title_Valid() const;

    QDate getDueDate() const;
    void setDueDate(const QDate &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    bool isIsUseSpecPackaging() const;
    void setIsUseSpecPackaging(const bool &is_use_spec_packaging);
    bool is_is_use_spec_packaging_Set() const;
    bool is_is_use_spec_packaging_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getLine1() const;
    void setLine1(const QString &line_1);
    bool is_line_1_Set() const;
    bool is_line_1_Valid() const;

    QString getLine2() const;
    void setLine2(const QString &line_2);
    bool is_line_2_Set() const;
    bool is_line_2_Valid() const;

    QString getLine3() const;
    void setLine3(const QString &line_3);
    bool is_line_3_Set() const;
    bool is_line_3_Valid() const;

    qint64 getLocationId() const;
    void setLocationId(const qint64 &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    QString getMiddleName() const;
    void setMiddleName(const QString &middle_name);
    bool is_middle_name_Set() const;
    bool is_middle_name_Valid() const;

    QString getPostal() const;
    void setPostal(const QString &postal);
    bool is_postal_Set() const;
    bool is_postal_Valid() const;

    QString getProofType() const;
    void setProofType(const QString &proof_type);
    bool is_proof_type_Set() const;
    bool is_proof_type_Valid() const;

    qint64 getQtyReceived() const;
    void setQtyReceived(const qint64 &qty_received);
    bool is_qty_received_Set() const;
    bool is_qty_received_Valid() const;

    qint64 getQtyRequested() const;
    void setQtyRequested(const qint64 &qty_requested);
    bool is_qty_requested_Set() const;
    bool is_qty_requested_Valid() const;

    qint64 getQtyShipped() const;
    void setQtyShipped(const qint64 &qty_shipped);
    bool is_qty_shipped_Set() const;
    bool is_qty_shipped_Valid() const;

    QString getReceivedComments() const;
    void setReceivedComments(const QString &received_comments);
    bool is_received_comments_Set() const;
    bool is_received_comments_Valid() const;

    QDate getReceivedDate() const;
    void setReceivedDate(const QDate &received_date);
    bool is_received_date_Set() const;
    bool is_received_date_Valid() const;

    QString getRequestedShippingCarrier() const;
    void setRequestedShippingCarrier(const QString &requested_shipping_carrier);
    bool is_requested_shipping_carrier_Set() const;
    bool is_requested_shipping_carrier_Valid() const;

    QString getRequestedShippingMethod() const;
    void setRequestedShippingMethod(const QString &requested_shipping_method);
    bool is_requested_shipping_method_Set() const;
    bool is_requested_shipping_method_Valid() const;

    QString getShippedComments() const;
    void setShippedComments(const QString &shipped_comments);
    bool is_shipped_comments_Set() const;
    bool is_shipped_comments_Valid() const;

    QDate getShippedDate() const;
    void setShippedDate(const QDate &shipped_date);
    bool is_shipped_date_Set() const;
    bool is_shipped_date_Valid() const;

    qint64 getShippedInUnits() const;
    void setShippedInUnits(const qint64 &shipped_in_units);
    bool is_shipped_in_units_Set() const;
    bool is_shipped_in_units_Valid() const;

    QString getShippedInUofm() const;
    void setShippedInUofm(const QString &shipped_in_uofm);
    bool is_shipped_in_uofm_Set() const;
    bool is_shipped_in_uofm_Valid() const;

    QString getShippedShippingCarrier() const;
    void setShippedShippingCarrier(const QString &shipped_shipping_carrier);
    bool is_shipped_shipping_carrier_Set() const;
    bool is_shipped_shipping_carrier_Valid() const;

    QString getShippedShippingMethod() const;
    void setShippedShippingMethod(const QString &shipped_shipping_method);
    bool is_shipped_shipping_method_Set() const;
    bool is_shipped_shipping_method_Valid() const;

    QJsonValue getShippingCost() const;
    void setShippingCost(const QJsonValue &shipping_cost);
    bool is_shipping_cost_Set() const;
    bool is_shipping_cost_Valid() const;

    QString getShippingInstruction() const;
    void setShippingInstruction(const QString &shipping_instruction);
    bool is_shipping_instruction_Set() const;
    bool is_shipping_instruction_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QJsonValue getTax() const;
    void setTax(const QJsonValue &tax);
    bool is_tax_Set() const;
    bool is_tax_Valid() const;

    QString getTrackingNumber() const;
    void setTrackingNumber(const QString &tracking_number);
    bool is_tracking_number_Set() const;
    bool is_tracking_number_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QJsonValue getWeight() const;
    void setWeight(const QJsonValue &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    QString getWeightUofm() const;
    void setWeightUofm(const QString &weight_uofm);
    bool is_weight_uofm_Set() const;
    bool is_weight_uofm_Valid() const;

    QString getWorkPhoneNumber() const;
    void setWorkPhoneNumber(const QString &work_phone_number);
    bool is_work_phone_number_Set() const;
    bool is_work_phone_number_Valid() const;

    QString getWorkgroupName() const;
    void setWorkgroupName(const QString &workgroup_name);
    bool is_workgroup_name_Set() const;
    bool is_workgroup_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_company_name;
    bool m_company_name_isSet;
    bool m_company_name_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QList<OAIPropertyPaAndAttVO> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description_or_title;
    bool m_description_or_title_isSet;
    bool m_description_or_title_isValid;

    QDate m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    bool m_is_use_spec_packaging;
    bool m_is_use_spec_packaging_isSet;
    bool m_is_use_spec_packaging_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_line_1;
    bool m_line_1_isSet;
    bool m_line_1_isValid;

    QString m_line_2;
    bool m_line_2_isSet;
    bool m_line_2_isValid;

    QString m_line_3;
    bool m_line_3_isSet;
    bool m_line_3_isValid;

    qint64 m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    QString m_middle_name;
    bool m_middle_name_isSet;
    bool m_middle_name_isValid;

    QString m_postal;
    bool m_postal_isSet;
    bool m_postal_isValid;

    QString m_proof_type;
    bool m_proof_type_isSet;
    bool m_proof_type_isValid;

    qint64 m_qty_received;
    bool m_qty_received_isSet;
    bool m_qty_received_isValid;

    qint64 m_qty_requested;
    bool m_qty_requested_isSet;
    bool m_qty_requested_isValid;

    qint64 m_qty_shipped;
    bool m_qty_shipped_isSet;
    bool m_qty_shipped_isValid;

    QString m_received_comments;
    bool m_received_comments_isSet;
    bool m_received_comments_isValid;

    QDate m_received_date;
    bool m_received_date_isSet;
    bool m_received_date_isValid;

    QString m_requested_shipping_carrier;
    bool m_requested_shipping_carrier_isSet;
    bool m_requested_shipping_carrier_isValid;

    QString m_requested_shipping_method;
    bool m_requested_shipping_method_isSet;
    bool m_requested_shipping_method_isValid;

    QString m_shipped_comments;
    bool m_shipped_comments_isSet;
    bool m_shipped_comments_isValid;

    QDate m_shipped_date;
    bool m_shipped_date_isSet;
    bool m_shipped_date_isValid;

    qint64 m_shipped_in_units;
    bool m_shipped_in_units_isSet;
    bool m_shipped_in_units_isValid;

    QString m_shipped_in_uofm;
    bool m_shipped_in_uofm_isSet;
    bool m_shipped_in_uofm_isValid;

    QString m_shipped_shipping_carrier;
    bool m_shipped_shipping_carrier_isSet;
    bool m_shipped_shipping_carrier_isValid;

    QString m_shipped_shipping_method;
    bool m_shipped_shipping_method_isSet;
    bool m_shipped_shipping_method_isValid;

    QJsonValue m_shipping_cost;
    bool m_shipping_cost_isSet;
    bool m_shipping_cost_isValid;

    QString m_shipping_instruction;
    bool m_shipping_instruction_isSet;
    bool m_shipping_instruction_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QJsonValue m_tax;
    bool m_tax_isSet;
    bool m_tax_isValid;

    QString m_tracking_number;
    bool m_tracking_number_isSet;
    bool m_tracking_number_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QJsonValue m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;

    QString m_weight_uofm;
    bool m_weight_uofm_isSet;
    bool m_weight_uofm_isValid;

    QString m_work_phone_number;
    bool m_work_phone_number_isSet;
    bool m_work_phone_number_isValid;

    QString m_workgroup_name;
    bool m_workgroup_name_isSet;
    bool m_workgroup_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShipmentRequestBaseVO)

#endif // OAIShipmentRequestBaseVO_H
