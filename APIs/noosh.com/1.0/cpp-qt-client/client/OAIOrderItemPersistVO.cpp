/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderItemPersistVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderItemPersistVO::OAIOrderItemPersistVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderItemPersistVO::OAIOrderItemPersistVO() {
    this->initializeModel();
}

OAIOrderItemPersistVO::~OAIOrderItemPersistVO() {}

void OAIOrderItemPersistVO::initializeModel() {

    m_completion_date_isSet = false;
    m_completion_date_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_ex_tax_value_calculated_isSet = false;
    m_ex_tax_value_calculated_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_per_isSet = false;
    m_per_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_shipping_isSet = false;
    m_shipping_isValid = false;

    m_spec_id_isSet = false;
    m_spec_id_isValid = false;

    m_spec_reference_id_isSet = false;
    m_spec_reference_id_isValid = false;

    m_tax_isSet = false;
    m_tax_isValid = false;
}

void OAIOrderItemPersistVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderItemPersistVO::fromJsonObject(QJsonObject json) {

    m_completion_date_isValid = ::OpenAPI::fromJsonValue(m_completion_date, json[QString("completion_date")]);
    m_completion_date_isSet = !json[QString("completion_date")].isNull() && m_completion_date_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_ex_tax_value_calculated_isValid = ::OpenAPI::fromJsonValue(m_ex_tax_value_calculated, json[QString("ex_tax_value_calculated")]);
    m_ex_tax_value_calculated_isSet = !json[QString("ex_tax_value_calculated")].isNull() && m_ex_tax_value_calculated_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;

    m_per_isValid = ::OpenAPI::fromJsonValue(m_per, json[QString("per")]);
    m_per_isSet = !json[QString("per")].isNull() && m_per_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_shipping_isValid = ::OpenAPI::fromJsonValue(m_shipping, json[QString("shipping")]);
    m_shipping_isSet = !json[QString("shipping")].isNull() && m_shipping_isValid;

    m_spec_id_isValid = ::OpenAPI::fromJsonValue(m_spec_id, json[QString("spec_id")]);
    m_spec_id_isSet = !json[QString("spec_id")].isNull() && m_spec_id_isValid;

    m_spec_reference_id_isValid = ::OpenAPI::fromJsonValue(m_spec_reference_id, json[QString("spec_reference_id")]);
    m_spec_reference_id_isSet = !json[QString("spec_reference_id")].isNull() && m_spec_reference_id_isValid;

    m_tax_isValid = ::OpenAPI::fromJsonValue(m_tax, json[QString("tax")]);
    m_tax_isSet = !json[QString("tax")].isNull() && m_tax_isValid;
}

QString OAIOrderItemPersistVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderItemPersistVO::asJsonObject() const {
    QJsonObject obj;
    if (m_completion_date_isSet) {
        obj.insert(QString("completion_date"), ::OpenAPI::toJsonValue(m_completion_date));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_ex_tax_value_calculated_isSet) {
        obj.insert(QString("ex_tax_value_calculated"), ::OpenAPI::toJsonValue(m_ex_tax_value_calculated));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_per_isSet) {
        obj.insert(QString("per"), ::OpenAPI::toJsonValue(m_per));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_shipping_isSet) {
        obj.insert(QString("shipping"), ::OpenAPI::toJsonValue(m_shipping));
    }
    if (m_spec_id_isSet) {
        obj.insert(QString("spec_id"), ::OpenAPI::toJsonValue(m_spec_id));
    }
    if (m_spec_reference_id_isSet) {
        obj.insert(QString("spec_reference_id"), ::OpenAPI::toJsonValue(m_spec_reference_id));
    }
    if (m_tax_isSet) {
        obj.insert(QString("tax"), ::OpenAPI::toJsonValue(m_tax));
    }
    return obj;
}

QDate OAIOrderItemPersistVO::getCompletionDate() const {
    return m_completion_date;
}
void OAIOrderItemPersistVO::setCompletionDate(const QDate &completion_date) {
    m_completion_date = completion_date;
    m_completion_date_isSet = true;
}

bool OAIOrderItemPersistVO::is_completion_date_Set() const{
    return m_completion_date_isSet;
}

bool OAIOrderItemPersistVO::is_completion_date_Valid() const{
    return m_completion_date_isValid;
}

QList<OAICustomFieldPersistVO> OAIOrderItemPersistVO::getCustomFields() const {
    return m_custom_fields;
}
void OAIOrderItemPersistVO::setCustomFields(const QList<OAICustomFieldPersistVO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIOrderItemPersistVO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIOrderItemPersistVO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

QJsonValue OAIOrderItemPersistVO::getExTaxValueCalculated() const {
    return m_ex_tax_value_calculated;
}
void OAIOrderItemPersistVO::setExTaxValueCalculated(const QJsonValue &ex_tax_value_calculated) {
    m_ex_tax_value_calculated = ex_tax_value_calculated;
    m_ex_tax_value_calculated_isSet = true;
}

bool OAIOrderItemPersistVO::is_ex_tax_value_calculated_Set() const{
    return m_ex_tax_value_calculated_isSet;
}

bool OAIOrderItemPersistVO::is_ex_tax_value_calculated_Valid() const{
    return m_ex_tax_value_calculated_isValid;
}

QString OAIOrderItemPersistVO::getNotes() const {
    return m_notes;
}
void OAIOrderItemPersistVO::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIOrderItemPersistVO::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIOrderItemPersistVO::is_notes_Valid() const{
    return m_notes_isValid;
}

qint64 OAIOrderItemPersistVO::getPer() const {
    return m_per;
}
void OAIOrderItemPersistVO::setPer(const qint64 &per) {
    m_per = per;
    m_per_isSet = true;
}

bool OAIOrderItemPersistVO::is_per_Set() const{
    return m_per_isSet;
}

bool OAIOrderItemPersistVO::is_per_Valid() const{
    return m_per_isValid;
}

QJsonValue OAIOrderItemPersistVO::getPrice() const {
    return m_price;
}
void OAIOrderItemPersistVO::setPrice(const QJsonValue &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIOrderItemPersistVO::is_price_Set() const{
    return m_price_isSet;
}

bool OAIOrderItemPersistVO::is_price_Valid() const{
    return m_price_isValid;
}

QJsonValue OAIOrderItemPersistVO::getQuantity() const {
    return m_quantity;
}
void OAIOrderItemPersistVO::setQuantity(const QJsonValue &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIOrderItemPersistVO::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIOrderItemPersistVO::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QJsonValue OAIOrderItemPersistVO::getShipping() const {
    return m_shipping;
}
void OAIOrderItemPersistVO::setShipping(const QJsonValue &shipping) {
    m_shipping = shipping;
    m_shipping_isSet = true;
}

bool OAIOrderItemPersistVO::is_shipping_Set() const{
    return m_shipping_isSet;
}

bool OAIOrderItemPersistVO::is_shipping_Valid() const{
    return m_shipping_isValid;
}

qint64 OAIOrderItemPersistVO::getSpecId() const {
    return m_spec_id;
}
void OAIOrderItemPersistVO::setSpecId(const qint64 &spec_id) {
    m_spec_id = spec_id;
    m_spec_id_isSet = true;
}

bool OAIOrderItemPersistVO::is_spec_id_Set() const{
    return m_spec_id_isSet;
}

bool OAIOrderItemPersistVO::is_spec_id_Valid() const{
    return m_spec_id_isValid;
}

qint64 OAIOrderItemPersistVO::getSpecReferenceId() const {
    return m_spec_reference_id;
}
void OAIOrderItemPersistVO::setSpecReferenceId(const qint64 &spec_reference_id) {
    m_spec_reference_id = spec_reference_id;
    m_spec_reference_id_isSet = true;
}

bool OAIOrderItemPersistVO::is_spec_reference_id_Set() const{
    return m_spec_reference_id_isSet;
}

bool OAIOrderItemPersistVO::is_spec_reference_id_Valid() const{
    return m_spec_reference_id_isValid;
}

QString OAIOrderItemPersistVO::getTax() const {
    return m_tax;
}
void OAIOrderItemPersistVO::setTax(const QString &tax) {
    m_tax = tax;
    m_tax_isSet = true;
}

bool OAIOrderItemPersistVO::is_tax_Set() const{
    return m_tax_isSet;
}

bool OAIOrderItemPersistVO::is_tax_Valid() const{
    return m_tax_isValid;
}

bool OAIOrderItemPersistVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_completion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ex_tax_value_calculated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_per_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderItemPersistVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
