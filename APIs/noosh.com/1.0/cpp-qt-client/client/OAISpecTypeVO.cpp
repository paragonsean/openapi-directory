/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISpecTypeVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISpecTypeVO::OAISpecTypeVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISpecTypeVO::OAISpecTypeVO() {
    this->initializeModel();
}

OAISpecTypeVO::~OAISpecTypeVO() {}

void OAISpecTypeVO::initializeModel() {

    m_spec_type_id_isSet = false;
    m_spec_type_id_isValid = false;

    m_spec_type_name_isSet = false;
    m_spec_type_name_isValid = false;
}

void OAISpecTypeVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISpecTypeVO::fromJsonObject(QJsonObject json) {

    m_spec_type_id_isValid = ::OpenAPI::fromJsonValue(m_spec_type_id, json[QString("spec_type_id")]);
    m_spec_type_id_isSet = !json[QString("spec_type_id")].isNull() && m_spec_type_id_isValid;

    m_spec_type_name_isValid = ::OpenAPI::fromJsonValue(m_spec_type_name, json[QString("spec_type_name")]);
    m_spec_type_name_isSet = !json[QString("spec_type_name")].isNull() && m_spec_type_name_isValid;
}

QString OAISpecTypeVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISpecTypeVO::asJsonObject() const {
    QJsonObject obj;
    if (m_spec_type_id_isSet) {
        obj.insert(QString("spec_type_id"), ::OpenAPI::toJsonValue(m_spec_type_id));
    }
    if (m_spec_type_name_isSet) {
        obj.insert(QString("spec_type_name"), ::OpenAPI::toJsonValue(m_spec_type_name));
    }
    return obj;
}

qint64 OAISpecTypeVO::getSpecTypeId() const {
    return m_spec_type_id;
}
void OAISpecTypeVO::setSpecTypeId(const qint64 &spec_type_id) {
    m_spec_type_id = spec_type_id;
    m_spec_type_id_isSet = true;
}

bool OAISpecTypeVO::is_spec_type_id_Set() const{
    return m_spec_type_id_isSet;
}

bool OAISpecTypeVO::is_spec_type_id_Valid() const{
    return m_spec_type_id_isValid;
}

QString OAISpecTypeVO::getSpecTypeName() const {
    return m_spec_type_name;
}
void OAISpecTypeVO::setSpecTypeName(const QString &spec_type_name) {
    m_spec_type_name = spec_type_name;
    m_spec_type_name_isSet = true;
}

bool OAISpecTypeVO::is_spec_type_name_Set() const{
    return m_spec_type_name_isSet;
}

bool OAISpecTypeVO::is_spec_type_name_Valid() const{
    return m_spec_type_name_isValid;
}

bool OAISpecTypeVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_spec_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_type_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISpecTypeVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
