/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskSimpleVO.h
 *
 * Java type: com.noosh.nooshapi.vo.TaskSimpleVO
 */

#ifndef OAITaskSimpleVO_H
#define OAITaskSimpleVO_H

#include <QJsonObject>

#include "OAIPersonVO.h"
#include <QDate>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPersonVO;

class OAITaskSimpleVO : public OAIObject {
public:
    OAITaskSimpleVO();
    OAITaskSimpleVO(QString json);
    ~OAITaskSimpleVO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getActualEnd() const;
    void setActualEnd(const QDate &actual_end);
    bool is_actual_end_Set() const;
    bool is_actual_end_Valid() const;

    QJsonValue getActualHours() const;
    void setActualHours(const QJsonValue &actual_hours);
    bool is_actual_hours_Set() const;
    bool is_actual_hours_Valid() const;

    QDate getActualStart() const;
    void setActualStart(const QDate &actual_start);
    bool is_actual_start_Set() const;
    bool is_actual_start_Valid() const;

    OAIPersonVO getAssignTo() const;
    void setAssignTo(const OAIPersonVO &assign_to);
    bool is_assign_to_Set() const;
    bool is_assign_to_Valid() const;

    QJsonValue getBaselineDuration() const;
    void setBaselineDuration(const QJsonValue &baseline_duration);
    bool is_baseline_duration_Set() const;
    bool is_baseline_duration_Valid() const;

    QDate getBaselineEndDate() const;
    void setBaselineEndDate(const QDate &baseline_end_date);
    bool is_baseline_end_date_Set() const;
    bool is_baseline_end_date_Valid() const;

    QDate getBaselineStartDate() const;
    void setBaselineStartDate(const QDate &baseline_start_date);
    bool is_baseline_start_date_Set() const;
    bool is_baseline_start_date_Valid() const;

    QJsonValue getCurrentDuration() const;
    void setCurrentDuration(const QJsonValue &current_duration);
    bool is_current_duration_Set() const;
    bool is_current_duration_Valid() const;

    bool isIsMilestone() const;
    void setIsMilestone(const bool &is_milestone);
    bool is_is_milestone_Set() const;
    bool is_is_milestone_Valid() const;

    QDate getModDate() const;
    void setModDate(const QDate &mod_date);
    bool is_mod_date_Set() const;
    bool is_mod_date_Valid() const;

    QDate getPlanEnd() const;
    void setPlanEnd(const QDate &plan_end);
    bool is_plan_end_Set() const;
    bool is_plan_end_Valid() const;

    QDate getPlanStart() const;
    void setPlanStart(const QDate &plan_start);
    bool is_plan_start_Set() const;
    bool is_plan_start_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getScheduleCode() const;
    void setScheduleCode(const QString &schedule_code);
    bool is_schedule_code_Set() const;
    bool is_schedule_code_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint64 getTaskId() const;
    void setTaskId(const qint64 &task_id);
    bool is_task_id_Set() const;
    bool is_task_id_Valid() const;

    QString getTaskName() const;
    void setTaskName(const QString &task_name);
    bool is_task_name_Set() const;
    bool is_task_name_Valid() const;

    QString getTaskType() const;
    void setTaskType(const QString &task_type);
    bool is_task_type_Set() const;
    bool is_task_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_actual_end;
    bool m_actual_end_isSet;
    bool m_actual_end_isValid;

    QJsonValue m_actual_hours;
    bool m_actual_hours_isSet;
    bool m_actual_hours_isValid;

    QDate m_actual_start;
    bool m_actual_start_isSet;
    bool m_actual_start_isValid;

    OAIPersonVO m_assign_to;
    bool m_assign_to_isSet;
    bool m_assign_to_isValid;

    QJsonValue m_baseline_duration;
    bool m_baseline_duration_isSet;
    bool m_baseline_duration_isValid;

    QDate m_baseline_end_date;
    bool m_baseline_end_date_isSet;
    bool m_baseline_end_date_isValid;

    QDate m_baseline_start_date;
    bool m_baseline_start_date_isSet;
    bool m_baseline_start_date_isValid;

    QJsonValue m_current_duration;
    bool m_current_duration_isSet;
    bool m_current_duration_isValid;

    bool m_is_milestone;
    bool m_is_milestone_isSet;
    bool m_is_milestone_isValid;

    QDate m_mod_date;
    bool m_mod_date_isSet;
    bool m_mod_date_isValid;

    QDate m_plan_end;
    bool m_plan_end_isSet;
    bool m_plan_end_isValid;

    QDate m_plan_start;
    bool m_plan_start_isSet;
    bool m_plan_start_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_schedule_code;
    bool m_schedule_code_isSet;
    bool m_schedule_code_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint64 m_task_id;
    bool m_task_id_isSet;
    bool m_task_id_isValid;

    QString m_task_name;
    bool m_task_name_isSet;
    bool m_task_name_isValid;

    QString m_task_type;
    bool m_task_type_isSet;
    bool m_task_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskSimpleVO)

#endif // OAITaskSimpleVO_H
