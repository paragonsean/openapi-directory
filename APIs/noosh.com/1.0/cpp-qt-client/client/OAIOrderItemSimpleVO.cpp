/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderItemSimpleVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderItemSimpleVO::OAIOrderItemSimpleVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderItemSimpleVO::OAIOrderItemSimpleVO() {
    this->initializeModel();
}

OAIOrderItemSimpleVO::~OAIOrderItemSimpleVO() {}

void OAIOrderItemSimpleVO::initializeModel() {

    m_comments_isSet = false;
    m_comments_isValid = false;

    m_completion_date_isSet = false;
    m_completion_date_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_item_price_isSet = false;
    m_item_price_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_shipping_isSet = false;
    m_shipping_isValid = false;

    m_spec_isSet = false;
    m_spec_isValid = false;

    m_tax_isSet = false;
    m_tax_isValid = false;

    m_transactional_item_price_isSet = false;
    m_transactional_item_price_isValid = false;

    m_transactional_shipping_isSet = false;
    m_transactional_shipping_isValid = false;

    m_transactional_tax_isSet = false;
    m_transactional_tax_isValid = false;

    m_transactional_unit_price_isSet = false;
    m_transactional_unit_price_isValid = false;

    m_unit_description_isSet = false;
    m_unit_description_isValid = false;

    m_unit_price_isSet = false;
    m_unit_price_isValid = false;
}

void OAIOrderItemSimpleVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderItemSimpleVO::fromJsonObject(QJsonObject json) {

    m_comments_isValid = ::OpenAPI::fromJsonValue(m_comments, json[QString("comments")]);
    m_comments_isSet = !json[QString("comments")].isNull() && m_comments_isValid;

    m_completion_date_isValid = ::OpenAPI::fromJsonValue(m_completion_date, json[QString("completion_date")]);
    m_completion_date_isSet = !json[QString("completion_date")].isNull() && m_completion_date_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("item_id")]);
    m_item_id_isSet = !json[QString("item_id")].isNull() && m_item_id_isValid;

    m_item_price_isValid = ::OpenAPI::fromJsonValue(m_item_price, json[QString("item_price")]);
    m_item_price_isSet = !json[QString("item_price")].isNull() && m_item_price_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_shipping_isValid = ::OpenAPI::fromJsonValue(m_shipping, json[QString("shipping")]);
    m_shipping_isSet = !json[QString("shipping")].isNull() && m_shipping_isValid;

    m_spec_isValid = ::OpenAPI::fromJsonValue(m_spec, json[QString("spec")]);
    m_spec_isSet = !json[QString("spec")].isNull() && m_spec_isValid;

    m_tax_isValid = ::OpenAPI::fromJsonValue(m_tax, json[QString("tax")]);
    m_tax_isSet = !json[QString("tax")].isNull() && m_tax_isValid;

    m_transactional_item_price_isValid = ::OpenAPI::fromJsonValue(m_transactional_item_price, json[QString("transactional_item_price")]);
    m_transactional_item_price_isSet = !json[QString("transactional_item_price")].isNull() && m_transactional_item_price_isValid;

    m_transactional_shipping_isValid = ::OpenAPI::fromJsonValue(m_transactional_shipping, json[QString("transactional_shipping")]);
    m_transactional_shipping_isSet = !json[QString("transactional_shipping")].isNull() && m_transactional_shipping_isValid;

    m_transactional_tax_isValid = ::OpenAPI::fromJsonValue(m_transactional_tax, json[QString("transactional_tax")]);
    m_transactional_tax_isSet = !json[QString("transactional_tax")].isNull() && m_transactional_tax_isValid;

    m_transactional_unit_price_isValid = ::OpenAPI::fromJsonValue(m_transactional_unit_price, json[QString("transactional_unit_price")]);
    m_transactional_unit_price_isSet = !json[QString("transactional_unit_price")].isNull() && m_transactional_unit_price_isValid;

    m_unit_description_isValid = ::OpenAPI::fromJsonValue(m_unit_description, json[QString("unit_description")]);
    m_unit_description_isSet = !json[QString("unit_description")].isNull() && m_unit_description_isValid;

    m_unit_price_isValid = ::OpenAPI::fromJsonValue(m_unit_price, json[QString("unit_price")]);
    m_unit_price_isSet = !json[QString("unit_price")].isNull() && m_unit_price_isValid;
}

QString OAIOrderItemSimpleVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderItemSimpleVO::asJsonObject() const {
    QJsonObject obj;
    if (m_comments_isSet) {
        obj.insert(QString("comments"), ::OpenAPI::toJsonValue(m_comments));
    }
    if (m_completion_date_isSet) {
        obj.insert(QString("completion_date"), ::OpenAPI::toJsonValue(m_completion_date));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_item_id_isSet) {
        obj.insert(QString("item_id"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_item_price_isSet) {
        obj.insert(QString("item_price"), ::OpenAPI::toJsonValue(m_item_price));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_shipping_isSet) {
        obj.insert(QString("shipping"), ::OpenAPI::toJsonValue(m_shipping));
    }
    if (m_spec.isSet()) {
        obj.insert(QString("spec"), ::OpenAPI::toJsonValue(m_spec));
    }
    if (m_tax_isSet) {
        obj.insert(QString("tax"), ::OpenAPI::toJsonValue(m_tax));
    }
    if (m_transactional_item_price_isSet) {
        obj.insert(QString("transactional_item_price"), ::OpenAPI::toJsonValue(m_transactional_item_price));
    }
    if (m_transactional_shipping_isSet) {
        obj.insert(QString("transactional_shipping"), ::OpenAPI::toJsonValue(m_transactional_shipping));
    }
    if (m_transactional_tax_isSet) {
        obj.insert(QString("transactional_tax"), ::OpenAPI::toJsonValue(m_transactional_tax));
    }
    if (m_transactional_unit_price_isSet) {
        obj.insert(QString("transactional_unit_price"), ::OpenAPI::toJsonValue(m_transactional_unit_price));
    }
    if (m_unit_description_isSet) {
        obj.insert(QString("unit_description"), ::OpenAPI::toJsonValue(m_unit_description));
    }
    if (m_unit_price_isSet) {
        obj.insert(QString("unit_price"), ::OpenAPI::toJsonValue(m_unit_price));
    }
    return obj;
}

QString OAIOrderItemSimpleVO::getComments() const {
    return m_comments;
}
void OAIOrderItemSimpleVO::setComments(const QString &comments) {
    m_comments = comments;
    m_comments_isSet = true;
}

bool OAIOrderItemSimpleVO::is_comments_Set() const{
    return m_comments_isSet;
}

bool OAIOrderItemSimpleVO::is_comments_Valid() const{
    return m_comments_isValid;
}

QDate OAIOrderItemSimpleVO::getCompletionDate() const {
    return m_completion_date;
}
void OAIOrderItemSimpleVO::setCompletionDate(const QDate &completion_date) {
    m_completion_date = completion_date;
    m_completion_date_isSet = true;
}

bool OAIOrderItemSimpleVO::is_completion_date_Set() const{
    return m_completion_date_isSet;
}

bool OAIOrderItemSimpleVO::is_completion_date_Valid() const{
    return m_completion_date_isValid;
}

QList<OAIPropertyPaAndAttVO> OAIOrderItemSimpleVO::getCustomFields() const {
    return m_custom_fields;
}
void OAIOrderItemSimpleVO::setCustomFields(const QList<OAIPropertyPaAndAttVO> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIOrderItemSimpleVO::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIOrderItemSimpleVO::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

qint64 OAIOrderItemSimpleVO::getItemId() const {
    return m_item_id;
}
void OAIOrderItemSimpleVO::setItemId(const qint64 &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAIOrderItemSimpleVO::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAIOrderItemSimpleVO::is_item_id_Valid() const{
    return m_item_id_isValid;
}

double OAIOrderItemSimpleVO::getItemPrice() const {
    return m_item_price;
}
void OAIOrderItemSimpleVO::setItemPrice(const double &item_price) {
    m_item_price = item_price;
    m_item_price_isSet = true;
}

bool OAIOrderItemSimpleVO::is_item_price_Set() const{
    return m_item_price_isSet;
}

bool OAIOrderItemSimpleVO::is_item_price_Valid() const{
    return m_item_price_isValid;
}

double OAIOrderItemSimpleVO::getQuantity() const {
    return m_quantity;
}
void OAIOrderItemSimpleVO::setQuantity(const double &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIOrderItemSimpleVO::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIOrderItemSimpleVO::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QJsonValue OAIOrderItemSimpleVO::getShipping() const {
    return m_shipping;
}
void OAIOrderItemSimpleVO::setShipping(const QJsonValue &shipping) {
    m_shipping = shipping;
    m_shipping_isSet = true;
}

bool OAIOrderItemSimpleVO::is_shipping_Set() const{
    return m_shipping_isSet;
}

bool OAIOrderItemSimpleVO::is_shipping_Valid() const{
    return m_shipping_isValid;
}

OAISpecBaseVO OAIOrderItemSimpleVO::getSpec() const {
    return m_spec;
}
void OAIOrderItemSimpleVO::setSpec(const OAISpecBaseVO &spec) {
    m_spec = spec;
    m_spec_isSet = true;
}

bool OAIOrderItemSimpleVO::is_spec_Set() const{
    return m_spec_isSet;
}

bool OAIOrderItemSimpleVO::is_spec_Valid() const{
    return m_spec_isValid;
}

QJsonValue OAIOrderItemSimpleVO::getTax() const {
    return m_tax;
}
void OAIOrderItemSimpleVO::setTax(const QJsonValue &tax) {
    m_tax = tax;
    m_tax_isSet = true;
}

bool OAIOrderItemSimpleVO::is_tax_Set() const{
    return m_tax_isSet;
}

bool OAIOrderItemSimpleVO::is_tax_Valid() const{
    return m_tax_isValid;
}

double OAIOrderItemSimpleVO::getTransactionalItemPrice() const {
    return m_transactional_item_price;
}
void OAIOrderItemSimpleVO::setTransactionalItemPrice(const double &transactional_item_price) {
    m_transactional_item_price = transactional_item_price;
    m_transactional_item_price_isSet = true;
}

bool OAIOrderItemSimpleVO::is_transactional_item_price_Set() const{
    return m_transactional_item_price_isSet;
}

bool OAIOrderItemSimpleVO::is_transactional_item_price_Valid() const{
    return m_transactional_item_price_isValid;
}

QJsonValue OAIOrderItemSimpleVO::getTransactionalShipping() const {
    return m_transactional_shipping;
}
void OAIOrderItemSimpleVO::setTransactionalShipping(const QJsonValue &transactional_shipping) {
    m_transactional_shipping = transactional_shipping;
    m_transactional_shipping_isSet = true;
}

bool OAIOrderItemSimpleVO::is_transactional_shipping_Set() const{
    return m_transactional_shipping_isSet;
}

bool OAIOrderItemSimpleVO::is_transactional_shipping_Valid() const{
    return m_transactional_shipping_isValid;
}

QJsonValue OAIOrderItemSimpleVO::getTransactionalTax() const {
    return m_transactional_tax;
}
void OAIOrderItemSimpleVO::setTransactionalTax(const QJsonValue &transactional_tax) {
    m_transactional_tax = transactional_tax;
    m_transactional_tax_isSet = true;
}

bool OAIOrderItemSimpleVO::is_transactional_tax_Set() const{
    return m_transactional_tax_isSet;
}

bool OAIOrderItemSimpleVO::is_transactional_tax_Valid() const{
    return m_transactional_tax_isValid;
}

QJsonValue OAIOrderItemSimpleVO::getTransactionalUnitPrice() const {
    return m_transactional_unit_price;
}
void OAIOrderItemSimpleVO::setTransactionalUnitPrice(const QJsonValue &transactional_unit_price) {
    m_transactional_unit_price = transactional_unit_price;
    m_transactional_unit_price_isSet = true;
}

bool OAIOrderItemSimpleVO::is_transactional_unit_price_Set() const{
    return m_transactional_unit_price_isSet;
}

bool OAIOrderItemSimpleVO::is_transactional_unit_price_Valid() const{
    return m_transactional_unit_price_isValid;
}

QString OAIOrderItemSimpleVO::getUnitDescription() const {
    return m_unit_description;
}
void OAIOrderItemSimpleVO::setUnitDescription(const QString &unit_description) {
    m_unit_description = unit_description;
    m_unit_description_isSet = true;
}

bool OAIOrderItemSimpleVO::is_unit_description_Set() const{
    return m_unit_description_isSet;
}

bool OAIOrderItemSimpleVO::is_unit_description_Valid() const{
    return m_unit_description_isValid;
}

QJsonValue OAIOrderItemSimpleVO::getUnitPrice() const {
    return m_unit_price;
}
void OAIOrderItemSimpleVO::setUnitPrice(const QJsonValue &unit_price) {
    m_unit_price = unit_price;
    m_unit_price_isSet = true;
}

bool OAIOrderItemSimpleVO::is_unit_price_Set() const{
    return m_unit_price_isSet;
}

bool OAIOrderItemSimpleVO::is_unit_price_Valid() const{
    return m_unit_price_isValid;
}

bool OAIOrderItemSimpleVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_item_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactional_unit_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderItemSimpleVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
