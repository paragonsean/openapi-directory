/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeCardLineVO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeCardLineVO::OAITimeCardLineVO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeCardLineVO::OAITimeCardLineVO() {
    this->initializeModel();
}

OAITimeCardLineVO::~OAITimeCardLineVO() {}

void OAITimeCardLineVO::initializeModel() {

    m_activity_name_isSet = false;
    m_activity_name_isValid = false;

    m_day1_hours_spent_isSet = false;
    m_day1_hours_spent_isValid = false;

    m_day2_hours_spent_isSet = false;
    m_day2_hours_spent_isValid = false;

    m_day3_hours_spent_isSet = false;
    m_day3_hours_spent_isValid = false;

    m_day4_hours_spent_isSet = false;
    m_day4_hours_spent_isValid = false;

    m_day5_hours_spent_isSet = false;
    m_day5_hours_spent_isValid = false;

    m_day6_hours_spent_isSet = false;
    m_day6_hours_spent_isValid = false;

    m_day7_hours_spent_isSet = false;
    m_day7_hours_spent_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_task_isSet = false;
    m_task_isValid = false;

    m_time_card_line_id_isSet = false;
    m_time_card_line_id_isValid = false;

    m_total_hours_spent_isSet = false;
    m_total_hours_spent_isValid = false;
}

void OAITimeCardLineVO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeCardLineVO::fromJsonObject(QJsonObject json) {

    m_activity_name_isValid = ::OpenAPI::fromJsonValue(m_activity_name, json[QString("activity_name")]);
    m_activity_name_isSet = !json[QString("activity_name")].isNull() && m_activity_name_isValid;

    m_day1_hours_spent_isValid = ::OpenAPI::fromJsonValue(m_day1_hours_spent, json[QString("day1_hours_spent")]);
    m_day1_hours_spent_isSet = !json[QString("day1_hours_spent")].isNull() && m_day1_hours_spent_isValid;

    m_day2_hours_spent_isValid = ::OpenAPI::fromJsonValue(m_day2_hours_spent, json[QString("day2_hours_spent")]);
    m_day2_hours_spent_isSet = !json[QString("day2_hours_spent")].isNull() && m_day2_hours_spent_isValid;

    m_day3_hours_spent_isValid = ::OpenAPI::fromJsonValue(m_day3_hours_spent, json[QString("day3_hours_spent")]);
    m_day3_hours_spent_isSet = !json[QString("day3_hours_spent")].isNull() && m_day3_hours_spent_isValid;

    m_day4_hours_spent_isValid = ::OpenAPI::fromJsonValue(m_day4_hours_spent, json[QString("day4_hours_spent")]);
    m_day4_hours_spent_isSet = !json[QString("day4_hours_spent")].isNull() && m_day4_hours_spent_isValid;

    m_day5_hours_spent_isValid = ::OpenAPI::fromJsonValue(m_day5_hours_spent, json[QString("day5_hours_spent")]);
    m_day5_hours_spent_isSet = !json[QString("day5_hours_spent")].isNull() && m_day5_hours_spent_isValid;

    m_day6_hours_spent_isValid = ::OpenAPI::fromJsonValue(m_day6_hours_spent, json[QString("day6_hours_spent")]);
    m_day6_hours_spent_isSet = !json[QString("day6_hours_spent")].isNull() && m_day6_hours_spent_isValid;

    m_day7_hours_spent_isValid = ::OpenAPI::fromJsonValue(m_day7_hours_spent, json[QString("day7_hours_spent")]);
    m_day7_hours_spent_isSet = !json[QString("day7_hours_spent")].isNull() && m_day7_hours_spent_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_task_isValid = ::OpenAPI::fromJsonValue(m_task, json[QString("task")]);
    m_task_isSet = !json[QString("task")].isNull() && m_task_isValid;

    m_time_card_line_id_isValid = ::OpenAPI::fromJsonValue(m_time_card_line_id, json[QString("time_card_line_id")]);
    m_time_card_line_id_isSet = !json[QString("time_card_line_id")].isNull() && m_time_card_line_id_isValid;

    m_total_hours_spent_isValid = ::OpenAPI::fromJsonValue(m_total_hours_spent, json[QString("total_hours_spent")]);
    m_total_hours_spent_isSet = !json[QString("total_hours_spent")].isNull() && m_total_hours_spent_isValid;
}

QString OAITimeCardLineVO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeCardLineVO::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_name_isSet) {
        obj.insert(QString("activity_name"), ::OpenAPI::toJsonValue(m_activity_name));
    }
    if (m_day1_hours_spent_isSet) {
        obj.insert(QString("day1_hours_spent"), ::OpenAPI::toJsonValue(m_day1_hours_spent));
    }
    if (m_day2_hours_spent_isSet) {
        obj.insert(QString("day2_hours_spent"), ::OpenAPI::toJsonValue(m_day2_hours_spent));
    }
    if (m_day3_hours_spent_isSet) {
        obj.insert(QString("day3_hours_spent"), ::OpenAPI::toJsonValue(m_day3_hours_spent));
    }
    if (m_day4_hours_spent_isSet) {
        obj.insert(QString("day4_hours_spent"), ::OpenAPI::toJsonValue(m_day4_hours_spent));
    }
    if (m_day5_hours_spent_isSet) {
        obj.insert(QString("day5_hours_spent"), ::OpenAPI::toJsonValue(m_day5_hours_spent));
    }
    if (m_day6_hours_spent_isSet) {
        obj.insert(QString("day6_hours_spent"), ::OpenAPI::toJsonValue(m_day6_hours_spent));
    }
    if (m_day7_hours_spent_isSet) {
        obj.insert(QString("day7_hours_spent"), ::OpenAPI::toJsonValue(m_day7_hours_spent));
    }
    if (m_project.isSet()) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_task.isSet()) {
        obj.insert(QString("task"), ::OpenAPI::toJsonValue(m_task));
    }
    if (m_time_card_line_id_isSet) {
        obj.insert(QString("time_card_line_id"), ::OpenAPI::toJsonValue(m_time_card_line_id));
    }
    if (m_total_hours_spent_isSet) {
        obj.insert(QString("total_hours_spent"), ::OpenAPI::toJsonValue(m_total_hours_spent));
    }
    return obj;
}

QString OAITimeCardLineVO::getActivityName() const {
    return m_activity_name;
}
void OAITimeCardLineVO::setActivityName(const QString &activity_name) {
    m_activity_name = activity_name;
    m_activity_name_isSet = true;
}

bool OAITimeCardLineVO::is_activity_name_Set() const{
    return m_activity_name_isSet;
}

bool OAITimeCardLineVO::is_activity_name_Valid() const{
    return m_activity_name_isValid;
}

QJsonValue OAITimeCardLineVO::getDay1HoursSpent() const {
    return m_day1_hours_spent;
}
void OAITimeCardLineVO::setDay1HoursSpent(const QJsonValue &day1_hours_spent) {
    m_day1_hours_spent = day1_hours_spent;
    m_day1_hours_spent_isSet = true;
}

bool OAITimeCardLineVO::is_day1_hours_spent_Set() const{
    return m_day1_hours_spent_isSet;
}

bool OAITimeCardLineVO::is_day1_hours_spent_Valid() const{
    return m_day1_hours_spent_isValid;
}

QJsonValue OAITimeCardLineVO::getDay2HoursSpent() const {
    return m_day2_hours_spent;
}
void OAITimeCardLineVO::setDay2HoursSpent(const QJsonValue &day2_hours_spent) {
    m_day2_hours_spent = day2_hours_spent;
    m_day2_hours_spent_isSet = true;
}

bool OAITimeCardLineVO::is_day2_hours_spent_Set() const{
    return m_day2_hours_spent_isSet;
}

bool OAITimeCardLineVO::is_day2_hours_spent_Valid() const{
    return m_day2_hours_spent_isValid;
}

QJsonValue OAITimeCardLineVO::getDay3HoursSpent() const {
    return m_day3_hours_spent;
}
void OAITimeCardLineVO::setDay3HoursSpent(const QJsonValue &day3_hours_spent) {
    m_day3_hours_spent = day3_hours_spent;
    m_day3_hours_spent_isSet = true;
}

bool OAITimeCardLineVO::is_day3_hours_spent_Set() const{
    return m_day3_hours_spent_isSet;
}

bool OAITimeCardLineVO::is_day3_hours_spent_Valid() const{
    return m_day3_hours_spent_isValid;
}

QJsonValue OAITimeCardLineVO::getDay4HoursSpent() const {
    return m_day4_hours_spent;
}
void OAITimeCardLineVO::setDay4HoursSpent(const QJsonValue &day4_hours_spent) {
    m_day4_hours_spent = day4_hours_spent;
    m_day4_hours_spent_isSet = true;
}

bool OAITimeCardLineVO::is_day4_hours_spent_Set() const{
    return m_day4_hours_spent_isSet;
}

bool OAITimeCardLineVO::is_day4_hours_spent_Valid() const{
    return m_day4_hours_spent_isValid;
}

QJsonValue OAITimeCardLineVO::getDay5HoursSpent() const {
    return m_day5_hours_spent;
}
void OAITimeCardLineVO::setDay5HoursSpent(const QJsonValue &day5_hours_spent) {
    m_day5_hours_spent = day5_hours_spent;
    m_day5_hours_spent_isSet = true;
}

bool OAITimeCardLineVO::is_day5_hours_spent_Set() const{
    return m_day5_hours_spent_isSet;
}

bool OAITimeCardLineVO::is_day5_hours_spent_Valid() const{
    return m_day5_hours_spent_isValid;
}

QJsonValue OAITimeCardLineVO::getDay6HoursSpent() const {
    return m_day6_hours_spent;
}
void OAITimeCardLineVO::setDay6HoursSpent(const QJsonValue &day6_hours_spent) {
    m_day6_hours_spent = day6_hours_spent;
    m_day6_hours_spent_isSet = true;
}

bool OAITimeCardLineVO::is_day6_hours_spent_Set() const{
    return m_day6_hours_spent_isSet;
}

bool OAITimeCardLineVO::is_day6_hours_spent_Valid() const{
    return m_day6_hours_spent_isValid;
}

QJsonValue OAITimeCardLineVO::getDay7HoursSpent() const {
    return m_day7_hours_spent;
}
void OAITimeCardLineVO::setDay7HoursSpent(const QJsonValue &day7_hours_spent) {
    m_day7_hours_spent = day7_hours_spent;
    m_day7_hours_spent_isSet = true;
}

bool OAITimeCardLineVO::is_day7_hours_spent_Set() const{
    return m_day7_hours_spent_isSet;
}

bool OAITimeCardLineVO::is_day7_hours_spent_Valid() const{
    return m_day7_hours_spent_isValid;
}

OAIProjectTimeCardVO OAITimeCardLineVO::getProject() const {
    return m_project;
}
void OAITimeCardLineVO::setProject(const OAIProjectTimeCardVO &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAITimeCardLineVO::is_project_Set() const{
    return m_project_isSet;
}

bool OAITimeCardLineVO::is_project_Valid() const{
    return m_project_isValid;
}

OAITaskTimeCardVO OAITimeCardLineVO::getTask() const {
    return m_task;
}
void OAITimeCardLineVO::setTask(const OAITaskTimeCardVO &task) {
    m_task = task;
    m_task_isSet = true;
}

bool OAITimeCardLineVO::is_task_Set() const{
    return m_task_isSet;
}

bool OAITimeCardLineVO::is_task_Valid() const{
    return m_task_isValid;
}

qint64 OAITimeCardLineVO::getTimeCardLineId() const {
    return m_time_card_line_id;
}
void OAITimeCardLineVO::setTimeCardLineId(const qint64 &time_card_line_id) {
    m_time_card_line_id = time_card_line_id;
    m_time_card_line_id_isSet = true;
}

bool OAITimeCardLineVO::is_time_card_line_id_Set() const{
    return m_time_card_line_id_isSet;
}

bool OAITimeCardLineVO::is_time_card_line_id_Valid() const{
    return m_time_card_line_id_isValid;
}

QJsonValue OAITimeCardLineVO::getTotalHoursSpent() const {
    return m_total_hours_spent;
}
void OAITimeCardLineVO::setTotalHoursSpent(const QJsonValue &total_hours_spent) {
    m_total_hours_spent = total_hours_spent;
    m_total_hours_spent_isSet = true;
}

bool OAITimeCardLineVO::is_total_hours_spent_Set() const{
    return m_total_hours_spent_isSet;
}

bool OAITimeCardLineVO::is_total_hours_spent_Valid() const{
    return m_total_hours_spent_isValid;
}

bool OAITimeCardLineVO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day1_hours_spent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day2_hours_spent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day3_hours_spent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day4_hours_spent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day5_hours_spent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day6_hours_spent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day7_hours_spent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_task.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_card_line_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_hours_spent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeCardLineVO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
