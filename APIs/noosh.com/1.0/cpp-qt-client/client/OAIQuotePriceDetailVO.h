/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuotePriceDetailVO.h
 *
 * Java type: com.noosh.nooshapi.vo.QuotePriceDetailVO
 */

#ifndef OAIQuotePriceDetailVO_H
#define OAIQuotePriceDetailVO_H

#include <QJsonObject>

#include "OAIBreakoutVO.h"
#include "OAIPropertyPaAndAttVO.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBreakoutVO;
class OAIPropertyPaAndAttVO;

class OAIQuotePriceDetailVO : public OAIObject {
public:
    OAIQuotePriceDetailVO();
    OAIQuotePriceDetailVO(QString json);
    ~OAIQuotePriceDetailVO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBreakoutVO> getBreakouts() const;
    void setBreakouts(const QList<OAIBreakoutVO> &breakouts);
    bool is_breakouts_Set() const;
    bool is_breakouts_Valid() const;

    QJsonValue getCost() const;
    void setCost(const QJsonValue &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    QList<OAIPropertyPaAndAttVO> getCustomFields() const;
    void setCustomFields(const QList<OAIPropertyPaAndAttVO> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QJsonValue getFixed() const;
    void setFixed(const QJsonValue &fixed);
    bool is_fixed_Set() const;
    bool is_fixed_Valid() const;

    bool isIsChosen() const;
    void setIsChosen(const bool &is_chosen);
    bool is_is_chosen_Set() const;
    bool is_is_chosen_Valid() const;

    bool isIsIncluded() const;
    void setIsIncluded(const bool &is_included);
    bool is_is_included_Set() const;
    bool is_is_included_Valid() const;

    bool isIsQuoted() const;
    void setIsQuoted(const bool &is_quoted);
    bool is_is_quoted_Set() const;
    bool is_is_quoted_Valid() const;

    qint64 getParentPriceId() const;
    void setParentPriceId(const qint64 &parent_price_id);
    bool is_parent_price_id_Set() const;
    bool is_parent_price_id_Valid() const;

    qint64 getPriceId() const;
    void setPriceId(const qint64 &price_id);
    bool is_price_id_Set() const;
    bool is_price_id_Valid() const;

    QJsonValue getQuantity() const;
    void setQuantity(const QJsonValue &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QJsonValue getSellPrice() const;
    void setSellPrice(const QJsonValue &sell_price);
    bool is_sell_price_Set() const;
    bool is_sell_price_Valid() const;

    QJsonValue getShipping() const;
    void setShipping(const QJsonValue &shipping);
    bool is_shipping_Set() const;
    bool is_shipping_Valid() const;

    QJsonValue getSource() const;
    void setSource(const QJsonValue &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSupplier() const;
    void setSupplier(const QString &supplier);
    bool is_supplier_Set() const;
    bool is_supplier_Valid() const;

    QJsonValue getTax() const;
    void setTax(const QJsonValue &tax);
    bool is_tax_Set() const;
    bool is_tax_Valid() const;

    QJsonValue getTotal() const;
    void setTotal(const QJsonValue &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    QJsonValue getTransactionalCost() const;
    void setTransactionalCost(const QJsonValue &transactional_cost);
    bool is_transactional_cost_Set() const;
    bool is_transactional_cost_Valid() const;

    QJsonValue getTransactionalFixed() const;
    void setTransactionalFixed(const QJsonValue &transactional_fixed);
    bool is_transactional_fixed_Set() const;
    bool is_transactional_fixed_Valid() const;

    QJsonValue getTransactionalSellPrice() const;
    void setTransactionalSellPrice(const QJsonValue &transactional_sell_price);
    bool is_transactional_sell_price_Set() const;
    bool is_transactional_sell_price_Valid() const;

    QJsonValue getTransactionalShipping() const;
    void setTransactionalShipping(const QJsonValue &transactional_shipping);
    bool is_transactional_shipping_Set() const;
    bool is_transactional_shipping_Valid() const;

    QJsonValue getTransactionalTax() const;
    void setTransactionalTax(const QJsonValue &transactional_tax);
    bool is_transactional_tax_Set() const;
    bool is_transactional_tax_Valid() const;

    QJsonValue getTransactionalTotal() const;
    void setTransactionalTotal(const QJsonValue &transactional_total);
    bool is_transactional_total_Set() const;
    bool is_transactional_total_Valid() const;

    QJsonValue getTransactionalVariable() const;
    void setTransactionalVariable(const QJsonValue &transactional_variable);
    bool is_transactional_variable_Set() const;
    bool is_transactional_variable_Valid() const;

    QJsonValue getVariable() const;
    void setVariable(const QJsonValue &variable);
    bool is_variable_Set() const;
    bool is_variable_Valid() const;

    QJsonValue getVariablePercent() const;
    void setVariablePercent(const QJsonValue &variable_percent);
    bool is_variable_percent_Set() const;
    bool is_variable_percent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBreakoutVO> m_breakouts;
    bool m_breakouts_isSet;
    bool m_breakouts_isValid;

    QJsonValue m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    QList<OAIPropertyPaAndAttVO> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QJsonValue m_fixed;
    bool m_fixed_isSet;
    bool m_fixed_isValid;

    bool m_is_chosen;
    bool m_is_chosen_isSet;
    bool m_is_chosen_isValid;

    bool m_is_included;
    bool m_is_included_isSet;
    bool m_is_included_isValid;

    bool m_is_quoted;
    bool m_is_quoted_isSet;
    bool m_is_quoted_isValid;

    qint64 m_parent_price_id;
    bool m_parent_price_id_isSet;
    bool m_parent_price_id_isValid;

    qint64 m_price_id;
    bool m_price_id_isSet;
    bool m_price_id_isValid;

    QJsonValue m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QJsonValue m_sell_price;
    bool m_sell_price_isSet;
    bool m_sell_price_isValid;

    QJsonValue m_shipping;
    bool m_shipping_isSet;
    bool m_shipping_isValid;

    QJsonValue m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_supplier;
    bool m_supplier_isSet;
    bool m_supplier_isValid;

    QJsonValue m_tax;
    bool m_tax_isSet;
    bool m_tax_isValid;

    QJsonValue m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    QJsonValue m_transactional_cost;
    bool m_transactional_cost_isSet;
    bool m_transactional_cost_isValid;

    QJsonValue m_transactional_fixed;
    bool m_transactional_fixed_isSet;
    bool m_transactional_fixed_isValid;

    QJsonValue m_transactional_sell_price;
    bool m_transactional_sell_price_isSet;
    bool m_transactional_sell_price_isValid;

    QJsonValue m_transactional_shipping;
    bool m_transactional_shipping_isSet;
    bool m_transactional_shipping_isValid;

    QJsonValue m_transactional_tax;
    bool m_transactional_tax_isSet;
    bool m_transactional_tax_isValid;

    QJsonValue m_transactional_total;
    bool m_transactional_total_isSet;
    bool m_transactional_total_isValid;

    QJsonValue m_transactional_variable;
    bool m_transactional_variable_isSet;
    bool m_transactional_variable_isValid;

    QJsonValue m_variable;
    bool m_variable_isSet;
    bool m_variable_isValid;

    QJsonValue m_variable_percent;
    bool m_variable_percent_isSet;
    bool m_variable_percent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuotePriceDetailVO)

#endif // OAIQuotePriceDetailVO_H
