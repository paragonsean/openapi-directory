/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HTTPStatusVO;
import org.openapitools.client.model.ObjectStateListVO;
import org.openapitools.client.model.QuoteExpandVO;
import org.openapitools.client.model.QuoteListVO;
import org.openapitools.client.model.QuoteOfWgLevelSimpleVO;
import org.openapitools.client.model.QuotePutPersistVO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QuoteApi
 */
@Disabled
public class QuoteApiTest {

    private final QuoteApi api = new QuoteApi();

    /**
     * Get a specific quote of project
     *
     * Get a specific quote of project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuoteTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        String quoteId = null;
        QuoteExpandVO response = api.getQuote(workgroupId, projectId, quoteId);
        // TODO: test validations
    }

    /**
     * List the quotes
     *
     * List the quotes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuoteListTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        String quoteStateIdCommaUseFiltersEqualLeftCurlyBracketDoubleQuoteQuoteStateIdDoubleQuoteColon111111RightCurlyBracket = null;
        QuoteListVO response = api.getQuoteList(workgroupId, projectId, quoteStateIdCommaUseFiltersEqualLeftCurlyBracketDoubleQuoteQuoteStateIdDoubleQuoteColon111111RightCurlyBracket);
        // TODO: test validations
    }

    /**
     * List the quote states
     *
     * List the quote states
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuoteStateListTest() throws ApiException {
        String workgroupId = null;
        ObjectStateListVO response = api.getQuoteStateList(workgroupId);
        // TODO: test validations
    }

    /**
     * Accept / Reject a Quote
     *
     * Accept / Reject a Quote
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putQuoteTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        String quoteId = null;
        QuotePutPersistVO quotePutPersistVO = null;
        HTTPStatusVO response = api.putQuote(workgroupId, projectId, quoteId, quotePutPersistVO);
        // TODO: test validations
    }

    /**
     * List the quotes of workgroup level
     *
     * List the quotes of workgroup level
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1WorkgroupsWorkgroupIdQuotesGetTest() throws ApiException {
        String workgroupId = null;
        String quoteStateIdCommaUseFiltersEqualLeftCurlyBracketDoubleQuoteQuoteStateIdDoubleQuoteColon111111RightCurlyBracket = null;
        QuoteOfWgLevelSimpleVO response = api.v1WorkgroupsWorkgroupIdQuotesGet(workgroupId, quoteStateIdCommaUseFiltersEqualLeftCurlyBracketDoubleQuoteQuoteStateIdDoubleQuoteColon111111RightCurlyBracket);
        // TODO: test validations
    }

}
