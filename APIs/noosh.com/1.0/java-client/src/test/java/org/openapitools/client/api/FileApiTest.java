/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FileResponseVO;
import org.openapitools.client.model.FileTagResponseVO;
import org.openapitools.client.model.HTTPStatusVO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FileApi
 */
@Disabled
public class FileApiTest {

    private final FileApi api = new FileApi();

    /**
     * Get File from Project.  Works for Regular and Remote Files
     *
     * Get File from Project.  Works for Regular and Remote Files
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFileTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        String fileId = null;
        FileResponseVO response = api.getFile(workgroupId, projectId, fileId);
        // TODO: test validations
    }

    /**
     * List Tags from Workgroup and Project.
     *
     * List Tags from Workgroup and Project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFileTagsTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        FileTagResponseVO response = api.getFileTags(workgroupId, projectId);
        // TODO: test validations
    }

    /**
     * List Files from Project.  Works for Regular and Remote Files
     *
     * List Files from Project.  Works for Regular and Remote Files
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFilesTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        FileResponseVO response = api.getFiles(workgroupId, projectId);
        // TODO: test validations
    }

    /**
     * Upload File to Project.  A multipart/form-data request with a name \&quot;file\&quot;
     *
     * Upload File to Project.  A multipart/form-data request with a name \&quot;file\&quot;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadFileTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        FileResponseVO response = api.uploadFile(workgroupId, projectId);
        // TODO: test validations
    }

}
