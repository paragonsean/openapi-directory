/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HTTPStatusVO;
import org.openapitools.client.model.TaskCreatedVO;
import org.openapitools.client.model.TaskExpandVO;
import org.openapitools.client.model.TaskExpandWorkgroupLevelVO;
import org.openapitools.client.model.TaskListVO;
import org.openapitools.client.model.TaskPersistVO;
import org.openapitools.client.model.TaskPriorityListVO;
import org.openapitools.client.model.TaskStatusListVO;
import org.openapitools.client.model.TaskTypeListVO;
import org.openapitools.client.model.TaskWorkgroupLevelListVO;
import org.openapitools.client.model.WgTaskStatusListVO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskApi
 */
@Disabled
public class TaskApiTest {

    private final TaskApi api = new TaskApi();

    /**
     * Get custom task types of workgroup level
     *
     * Get custom task types of workgroup level
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomTaskTypesOfWgTest() throws ApiException {
        String workgroupId = null;
        TaskTypeListVO response = api.getCustomTaskTypesOfWg(workgroupId);
        // TODO: test validations
    }

    /**
     * Get default task status list
     *
     * Get default task status list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefaultTaskStatusListTest() throws ApiException {
        String workgroupId = null;
        TaskStatusListVO response = api.getDefaultTaskStatusList(workgroupId);
        // TODO: test validations
    }

    /**
     * Get task list of project level
     *
     * Get task list of project level
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTaskListOfProjectTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        TaskListVO response = api.getTaskListOfProject(workgroupId, projectId);
        // TODO: test validations
    }

    /**
     * Get task list of workgroup level
     *
     * Get task list of workgroup level
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTaskListOfWorkgroupTest() throws ApiException {
        String workgroupId = null;
        TaskWorkgroupLevelListVO response = api.getTaskListOfWorkgroup(workgroupId);
        // TODO: test validations
    }

    /**
     * Get a sepcific task of project level
     *
     * Get a sepcific task of project level
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTaskOfProjectTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        String taskId = null;
        TaskExpandVO response = api.getTaskOfProject(workgroupId, projectId, taskId);
        // TODO: test validations
    }

    /**
     * Get a sepcific task of workgroup level
     *
     * Get a sepcific task of workgroup level
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTaskOfWorkgroupTest() throws ApiException {
        String workgroupId = null;
        String taskId = null;
        TaskExpandWorkgroupLevelVO response = api.getTaskOfWorkgroup(workgroupId, taskId);
        // TODO: test validations
    }

    /**
     * Get task types of workgroup level
     *
     * Get task types of workgroup level
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTaskTypesOfWorkgroupTest() throws ApiException {
        String workgroupId = null;
        TaskTypeListVO response = api.getTaskTypesOfWorkgroup(workgroupId);
        // TODO: test validations
    }

    /**
     * Get custom task status of workgroup level
     *
     * Get custom task status of workgroup level
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWgTaskStatusListOfWorkgroupTest() throws ApiException {
        String workgroupId = null;
        WgTaskStatusListVO response = api.getWgTaskStatusListOfWorkgroup(workgroupId);
        // TODO: test validations
    }

    /**
     * Create a new task
     *
     * Create a new task
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postTaskForProjectTest() throws ApiException {
        String workgroupId = null;
        String projectId = null;
        TaskPersistVO taskPersistVO = null;
        TaskCreatedVO response = api.postTaskForProject(workgroupId, projectId, taskPersistVO);
        // TODO: test validations
    }

    /**
     * Get default task priority list
     *
     * Get default task priority list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void taskPriorityListTest() throws ApiException {
        String workgroupId = null;
        TaskPriorityListVO response = api.taskPriorityList(workgroupId);
        // TODO: test validations
    }

}
