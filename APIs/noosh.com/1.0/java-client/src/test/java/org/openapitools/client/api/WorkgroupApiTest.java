/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ClientWorkgroupExpandVO;
import org.openapitools.client.model.ClientWorkgroupListVO;
import org.openapitools.client.model.HTTPStatusVO;
import org.openapitools.client.model.SupplierWorkgroupExpandVO;
import org.openapitools.client.model.SupplierWorkgroupListVO;
import org.openapitools.client.model.WorkgroupExpandVO;
import org.openapitools.client.model.WorkgroupHTTPStatusVO;
import org.openapitools.client.model.WorkgroupListVO;
import org.openapitools.client.model.WorkgroupUpdPersistVO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkgroupApi
 */
@Disabled
public class WorkgroupApiTest {

    private final WorkgroupApi api = new WorkgroupApi();

    /**
     * List client workgroups
     *
     * List client workgroups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClientWorkgroupListTest() throws ApiException {
        String workgroupId = null;
        ClientWorkgroupListVO response = api.getClientWorkgroupList(workgroupId);
        // TODO: test validations
    }

    /**
     * Get a specific client workgroups
     *
     * Get a specific client workgroups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSpecificClientWorkgroupTest() throws ApiException {
        String workgroupId = null;
        String clientWorkgroupId = null;
        ClientWorkgroupExpandVO response = api.getSpecificClientWorkgroup(workgroupId, clientWorkgroupId);
        // TODO: test validations
    }

    /**
     * Get the specific supplier of My Group
     *
     * Get the specific supplier of My Group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSupplierWorkgroupDetailTest() throws ApiException {
        String workgroupId = null;
        String buSupplierWorkgroupId = null;
        SupplierWorkgroupExpandVO response = api.getSupplierWorkgroupDetail(workgroupId, buSupplierWorkgroupId);
        // TODO: test validations
    }

    /**
     * List supplier workgroups
     *
     * List supplier workgroups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSupplierWorkgroupListTest() throws ApiException {
        String workgroupId = null;
        SupplierWorkgroupListVO response = api.getSupplierWorkgroupList(workgroupId);
        // TODO: test validations
    }

    /**
     * Detail workgroup info
     *
     * Detail workgroup info
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkgroupDetailTest() throws ApiException {
        String workgroupId = null;
        WorkgroupExpandVO response = api.getWorkgroupDetail(workgroupId);
        // TODO: test validations
    }

    /**
     * List the workgroups
     *
     * List the workgroups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkgroupListTest() throws ApiException {
        String workgroupName = null;
        List<String> workgroupTypes = null;
        WorkgroupListVO response = api.getWorkgroupList(workgroupName, workgroupTypes);
        // TODO: test validations
    }

    /**
     * Update a specific Workgroup
     *
     * Update a specific Workgroup
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putWorkgroupTest() throws ApiException {
        String workgroupId = null;
        WorkgroupUpdPersistVO workgroupUpdPersistVO = null;
        WorkgroupHTTPStatusVO response = api.putWorkgroup(workgroupId, workgroupUpdPersistVO);
        // TODO: test validations
    }

}
