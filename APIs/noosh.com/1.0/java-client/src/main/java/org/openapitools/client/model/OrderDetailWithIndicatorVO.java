/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OrderDetailBaseVO;
import org.openapitools.client.model.OrderItemSimpleVO;
import org.openapitools.client.model.PropertyPaAndAttVO;
import org.openapitools.client.model.UserVO;
import org.openapitools.client.model.WorkgroupBaseVO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.nooshapi.vo.OrderDetailWithIndicatorVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderDetailWithIndicatorVO {
  public static final String SERIALIZED_NAME_ACCEPTED_DATE = "accepted_date";
  @SerializedName(SERIALIZED_NAME_ACCEPTED_DATE)
  private LocalDate acceptedDate;

  public static final String SERIALIZED_NAME_ANNULLED_DATE = "annulled_date";
  @SerializedName(SERIALIZED_NAME_ANNULLED_DATE)
  private LocalDate annulledDate;

  public static final String SERIALIZED_NAME_APPROVED_DATE = "approved_date";
  @SerializedName(SERIALIZED_NAME_APPROVED_DATE)
  private LocalDate approvedDate;

  public static final String SERIALIZED_NAME_AWARDED_DATE = "awarded_date";
  @SerializedName(SERIALIZED_NAME_AWARDED_DATE)
  private LocalDate awardedDate;

  public static final String SERIALIZED_NAME_BUDGET_TYPE = "budget_type";
  @SerializedName(SERIALIZED_NAME_BUDGET_TYPE)
  private String budgetType;

  public static final String SERIALIZED_NAME_BUYER = "buyer";
  @SerializedName(SERIALIZED_NAME_BUYER)
  private UserVO buyer;

  public static final String SERIALIZED_NAME_BUYER_WORKGROUP = "buyer_workgroup";
  @SerializedName(SERIALIZED_NAME_BUYER_WORKGROUP)
  private WorkgroupBaseVO buyerWorkgroup;

  public static final String SERIALIZED_NAME_CHANGE_ORDERS = "change_orders";
  @SerializedName(SERIALIZED_NAME_CHANGE_ORDERS)
  private List<OrderDetailBaseVO> changeOrders = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLASSIFICATION = "classification";
  @SerializedName(SERIALIZED_NAME_CLASSIFICATION)
  private String classification;

  public static final String SERIALIZED_NAME_CLOSED_DATE = "closed_date";
  @SerializedName(SERIALIZED_NAME_CLOSED_DATE)
  private LocalDate closedDate;

  public static final String SERIALIZED_NAME_CLOSING_CHANGE_ORDERS = "closing_change_orders";
  @SerializedName(SERIALIZED_NAME_CLOSING_CHANGE_ORDERS)
  private List<OrderDetailBaseVO> closingChangeOrders = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_COMPLETION_DATE = "completion_date";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private LocalDate completionDate;

  public static final String SERIALIZED_NAME_CREATOR_USER_ID = "creator_user_id";
  @SerializedName(SERIALIZED_NAME_CREATOR_USER_ID)
  private Long creatorUserId;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<PropertyPaAndAttVO> customFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_GRAND_TOTAL = "grand_total";
  @SerializedName(SERIALIZED_NAME_GRAND_TOTAL)
  private Object grandTotal = null;

  public static final String SERIALIZED_NAME_GRAND_TOTAL_WITH_CHANGES = "grand_total_with_changes";
  @SerializedName(SERIALIZED_NAME_GRAND_TOTAL_WITH_CHANGES)
  private Object grandTotalWithChanges = null;

  public static final String SERIALIZED_NAME_IS_SELL_ORDER = "is_sell_order";
  @SerializedName(SERIALIZED_NAME_IS_SELL_ORDER)
  private Boolean isSellOrder;

  public static final String SERIALIZED_NAME_ITEM_COUNT = "item_count";
  @SerializedName(SERIALIZED_NAME_ITEM_COUNT)
  private Integer itemCount;

  public static final String SERIALIZED_NAME_LAST_ACTIVITY_DATE = "last_activity_date";
  @SerializedName(SERIALIZED_NAME_LAST_ACTIVITY_DATE)
  private LocalDate lastActivityDate;

  public static final String SERIALIZED_NAME_LAST_CHANGED = "last_changed";
  @SerializedName(SERIALIZED_NAME_LAST_CHANGED)
  private LocalDate lastChanged;

  public static final String SERIALIZED_NAME_LAST_STATUS_CHANGE = "last_status_change";
  @SerializedName(SERIALIZED_NAME_LAST_STATUS_CHANGE)
  private LocalDate lastStatusChange;

  public static final String SERIALIZED_NAME_MISC_COST = "misc_cost";
  @SerializedName(SERIALIZED_NAME_MISC_COST)
  private Double miscCost;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private Long orderId;

  public static final String SERIALIZED_NAME_ORDER_ITEMS = "order_items";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEMS)
  private List<OrderItemSimpleVO> orderItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "order_number";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_ORDER_TITLE = "order_title";
  @SerializedName(SERIALIZED_NAME_ORDER_TITLE)
  private String orderTitle;

  public static final String SERIALIZED_NAME_ORDER_TOTAL = "order_total";
  @SerializedName(SERIALIZED_NAME_ORDER_TOTAL)
  private Object orderTotal = null;

  public static final String SERIALIZED_NAME_OVERS_PERCENT = "overs_percent";
  @SerializedName(SERIALIZED_NAME_OVERS_PERCENT)
  private Double oversPercent;

  public static final String SERIALIZED_NAME_PARENT_ORDER_ID = "parent_order_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ORDER_ID)
  private Long parentOrderId;

  public static final String SERIALIZED_NAME_PAYMENT_REFERENCE = "payment_reference";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REFERENCE)
  private String paymentReference;

  public static final String SERIALIZED_NAME_PRINT_ORDER_IDS = "print_order_ids";
  @SerializedName(SERIALIZED_NAME_PRINT_ORDER_IDS)
  private List<Long> printOrderIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUOTE_ID = "quote_id";
  @SerializedName(SERIALIZED_NAME_QUOTE_ID)
  private Long quoteId;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private Object shipping = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_COMMENTS = "status_comments";
  @SerializedName(SERIALIZED_NAME_STATUS_COMMENTS)
  private String statusComments;

  public static final String SERIALIZED_NAME_SUPPLIER = "supplier";
  @SerializedName(SERIALIZED_NAME_SUPPLIER)
  private UserVO supplier;

  public static final String SERIALIZED_NAME_SUPPLIER_REFERENCE = "supplier_reference";
  @SerializedName(SERIALIZED_NAME_SUPPLIER_REFERENCE)
  private String supplierReference;

  public static final String SERIALIZED_NAME_SUPPLIER_SELECTION_REASON = "supplier_selection_reason";
  @SerializedName(SERIALIZED_NAME_SUPPLIER_SELECTION_REASON)
  private String supplierSelectionReason;

  public static final String SERIALIZED_NAME_SUPPLIER_WORKGROUP = "supplier_workgroup";
  @SerializedName(SERIALIZED_NAME_SUPPLIER_WORKGROUP)
  private WorkgroupBaseVO supplierWorkgroup;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private Object tax = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_CURRENCY = "transactional_currency";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_CURRENCY)
  private String transactionalCurrency;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_GRAND_TOTAL = "transactional_grand_total";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_GRAND_TOTAL)
  private Object transactionalGrandTotal = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_GRAND_TOTAL_WITH_CHANGES = "transactional_grand_total_with_changes";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_GRAND_TOTAL_WITH_CHANGES)
  private Object transactionalGrandTotalWithChanges = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ORDER_TOTAL = "transactional_order_total";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ORDER_TOTAL)
  private Object transactionalOrderTotal = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_SHIPPING = "transactional_shipping";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_SHIPPING)
  private Object transactionalShipping = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_TAX = "transactional_tax";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_TAX)
  private Object transactionalTax = null;

  public static final String SERIALIZED_NAME_UNDERS_PERCENT = "unders_percent";
  @SerializedName(SERIALIZED_NAME_UNDERS_PERCENT)
  private Double undersPercent;

  public OrderDetailWithIndicatorVO() {
  }

  public OrderDetailWithIndicatorVO acceptedDate(LocalDate acceptedDate) {
    this.acceptedDate = acceptedDate;
    return this;
  }

  /**
   * 
   * @return acceptedDate
   */
  @javax.annotation.Nullable
  public LocalDate getAcceptedDate() {
    return acceptedDate;
  }

  public void setAcceptedDate(LocalDate acceptedDate) {
    this.acceptedDate = acceptedDate;
  }


  public OrderDetailWithIndicatorVO annulledDate(LocalDate annulledDate) {
    this.annulledDate = annulledDate;
    return this;
  }

  /**
   * 
   * @return annulledDate
   */
  @javax.annotation.Nullable
  public LocalDate getAnnulledDate() {
    return annulledDate;
  }

  public void setAnnulledDate(LocalDate annulledDate) {
    this.annulledDate = annulledDate;
  }


  public OrderDetailWithIndicatorVO approvedDate(LocalDate approvedDate) {
    this.approvedDate = approvedDate;
    return this;
  }

  /**
   * 
   * @return approvedDate
   */
  @javax.annotation.Nullable
  public LocalDate getApprovedDate() {
    return approvedDate;
  }

  public void setApprovedDate(LocalDate approvedDate) {
    this.approvedDate = approvedDate;
  }


  public OrderDetailWithIndicatorVO awardedDate(LocalDate awardedDate) {
    this.awardedDate = awardedDate;
    return this;
  }

  /**
   * 
   * @return awardedDate
   */
  @javax.annotation.Nullable
  public LocalDate getAwardedDate() {
    return awardedDate;
  }

  public void setAwardedDate(LocalDate awardedDate) {
    this.awardedDate = awardedDate;
  }


  public OrderDetailWithIndicatorVO budgetType(String budgetType) {
    this.budgetType = budgetType;
    return this;
  }

  /**
   * 
   * @return budgetType
   */
  @javax.annotation.Nullable
  public String getBudgetType() {
    return budgetType;
  }

  public void setBudgetType(String budgetType) {
    this.budgetType = budgetType;
  }


  public OrderDetailWithIndicatorVO buyer(UserVO buyer) {
    this.buyer = buyer;
    return this;
  }

  /**
   * Get buyer
   * @return buyer
   */
  @javax.annotation.Nullable
  public UserVO getBuyer() {
    return buyer;
  }

  public void setBuyer(UserVO buyer) {
    this.buyer = buyer;
  }


  public OrderDetailWithIndicatorVO buyerWorkgroup(WorkgroupBaseVO buyerWorkgroup) {
    this.buyerWorkgroup = buyerWorkgroup;
    return this;
  }

  /**
   * Get buyerWorkgroup
   * @return buyerWorkgroup
   */
  @javax.annotation.Nullable
  public WorkgroupBaseVO getBuyerWorkgroup() {
    return buyerWorkgroup;
  }

  public void setBuyerWorkgroup(WorkgroupBaseVO buyerWorkgroup) {
    this.buyerWorkgroup = buyerWorkgroup;
  }


  public OrderDetailWithIndicatorVO changeOrders(List<OrderDetailBaseVO> changeOrders) {
    this.changeOrders = changeOrders;
    return this;
  }

  public OrderDetailWithIndicatorVO addChangeOrdersItem(OrderDetailBaseVO changeOrdersItem) {
    if (this.changeOrders == null) {
      this.changeOrders = new ArrayList<>();
    }
    this.changeOrders.add(changeOrdersItem);
    return this;
  }

  /**
   * 
   * @return changeOrders
   */
  @javax.annotation.Nullable
  public List<OrderDetailBaseVO> getChangeOrders() {
    return changeOrders;
  }

  public void setChangeOrders(List<OrderDetailBaseVO> changeOrders) {
    this.changeOrders = changeOrders;
  }


  public OrderDetailWithIndicatorVO classification(String classification) {
    this.classification = classification;
    return this;
  }

  /**
   * 
   * @return classification
   */
  @javax.annotation.Nullable
  public String getClassification() {
    return classification;
  }

  public void setClassification(String classification) {
    this.classification = classification;
  }


  public OrderDetailWithIndicatorVO closedDate(LocalDate closedDate) {
    this.closedDate = closedDate;
    return this;
  }

  /**
   * 
   * @return closedDate
   */
  @javax.annotation.Nullable
  public LocalDate getClosedDate() {
    return closedDate;
  }

  public void setClosedDate(LocalDate closedDate) {
    this.closedDate = closedDate;
  }


  public OrderDetailWithIndicatorVO closingChangeOrders(List<OrderDetailBaseVO> closingChangeOrders) {
    this.closingChangeOrders = closingChangeOrders;
    return this;
  }

  public OrderDetailWithIndicatorVO addClosingChangeOrdersItem(OrderDetailBaseVO closingChangeOrdersItem) {
    if (this.closingChangeOrders == null) {
      this.closingChangeOrders = new ArrayList<>();
    }
    this.closingChangeOrders.add(closingChangeOrdersItem);
    return this;
  }

  /**
   * 
   * @return closingChangeOrders
   */
  @javax.annotation.Nullable
  public List<OrderDetailBaseVO> getClosingChangeOrders() {
    return closingChangeOrders;
  }

  public void setClosingChangeOrders(List<OrderDetailBaseVO> closingChangeOrders) {
    this.closingChangeOrders = closingChangeOrders;
  }


  public OrderDetailWithIndicatorVO comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * 
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public OrderDetailWithIndicatorVO completionDate(LocalDate completionDate) {
    this.completionDate = completionDate;
    return this;
  }

  /**
   * 
   * @return completionDate
   */
  @javax.annotation.Nullable
  public LocalDate getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(LocalDate completionDate) {
    this.completionDate = completionDate;
  }


  public OrderDetailWithIndicatorVO creatorUserId(Long creatorUserId) {
    this.creatorUserId = creatorUserId;
    return this;
  }

  /**
   * 
   * @return creatorUserId
   */
  @javax.annotation.Nullable
  public Long getCreatorUserId() {
    return creatorUserId;
  }

  public void setCreatorUserId(Long creatorUserId) {
    this.creatorUserId = creatorUserId;
  }


  public OrderDetailWithIndicatorVO currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * 
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public OrderDetailWithIndicatorVO customFields(List<PropertyPaAndAttVO> customFields) {
    this.customFields = customFields;
    return this;
  }

  public OrderDetailWithIndicatorVO addCustomFieldsItem(PropertyPaAndAttVO customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

  /**
   * 
   * @return customFields
   */
  @javax.annotation.Nullable
  public List<PropertyPaAndAttVO> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<PropertyPaAndAttVO> customFields) {
    this.customFields = customFields;
  }


  public OrderDetailWithIndicatorVO grandTotal(Object grandTotal) {
    this.grandTotal = grandTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return grandTotal
   */
  @javax.annotation.Nullable
  public Object getGrandTotal() {
    return grandTotal;
  }

  public void setGrandTotal(Object grandTotal) {
    this.grandTotal = grandTotal;
  }


  public OrderDetailWithIndicatorVO grandTotalWithChanges(Object grandTotalWithChanges) {
    this.grandTotalWithChanges = grandTotalWithChanges;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return grandTotalWithChanges
   */
  @javax.annotation.Nullable
  public Object getGrandTotalWithChanges() {
    return grandTotalWithChanges;
  }

  public void setGrandTotalWithChanges(Object grandTotalWithChanges) {
    this.grandTotalWithChanges = grandTotalWithChanges;
  }


  public OrderDetailWithIndicatorVO isSellOrder(Boolean isSellOrder) {
    this.isSellOrder = isSellOrder;
    return this;
  }

  /**
   * 
   * @return isSellOrder
   */
  @javax.annotation.Nullable
  public Boolean getIsSellOrder() {
    return isSellOrder;
  }

  public void setIsSellOrder(Boolean isSellOrder) {
    this.isSellOrder = isSellOrder;
  }


  public OrderDetailWithIndicatorVO itemCount(Integer itemCount) {
    this.itemCount = itemCount;
    return this;
  }

  /**
   * 
   * @return itemCount
   */
  @javax.annotation.Nullable
  public Integer getItemCount() {
    return itemCount;
  }

  public void setItemCount(Integer itemCount) {
    this.itemCount = itemCount;
  }


  public OrderDetailWithIndicatorVO lastActivityDate(LocalDate lastActivityDate) {
    this.lastActivityDate = lastActivityDate;
    return this;
  }

  /**
   * 
   * @return lastActivityDate
   */
  @javax.annotation.Nullable
  public LocalDate getLastActivityDate() {
    return lastActivityDate;
  }

  public void setLastActivityDate(LocalDate lastActivityDate) {
    this.lastActivityDate = lastActivityDate;
  }


  public OrderDetailWithIndicatorVO lastChanged(LocalDate lastChanged) {
    this.lastChanged = lastChanged;
    return this;
  }

  /**
   * 
   * @return lastChanged
   */
  @javax.annotation.Nullable
  public LocalDate getLastChanged() {
    return lastChanged;
  }

  public void setLastChanged(LocalDate lastChanged) {
    this.lastChanged = lastChanged;
  }


  public OrderDetailWithIndicatorVO lastStatusChange(LocalDate lastStatusChange) {
    this.lastStatusChange = lastStatusChange;
    return this;
  }

  /**
   * 
   * @return lastStatusChange
   */
  @javax.annotation.Nullable
  public LocalDate getLastStatusChange() {
    return lastStatusChange;
  }

  public void setLastStatusChange(LocalDate lastStatusChange) {
    this.lastStatusChange = lastStatusChange;
  }


  public OrderDetailWithIndicatorVO miscCost(Double miscCost) {
    this.miscCost = miscCost;
    return this;
  }

  /**
   * 
   * @return miscCost
   */
  @javax.annotation.Nullable
  public Double getMiscCost() {
    return miscCost;
  }

  public void setMiscCost(Double miscCost) {
    this.miscCost = miscCost;
  }


  public OrderDetailWithIndicatorVO orderId(Long orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * 
   * @return orderId
   */
  @javax.annotation.Nullable
  public Long getOrderId() {
    return orderId;
  }

  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }


  public OrderDetailWithIndicatorVO orderItems(List<OrderItemSimpleVO> orderItems) {
    this.orderItems = orderItems;
    return this;
  }

  public OrderDetailWithIndicatorVO addOrderItemsItem(OrderItemSimpleVO orderItemsItem) {
    if (this.orderItems == null) {
      this.orderItems = new ArrayList<>();
    }
    this.orderItems.add(orderItemsItem);
    return this;
  }

  /**
   * 
   * @return orderItems
   */
  @javax.annotation.Nullable
  public List<OrderItemSimpleVO> getOrderItems() {
    return orderItems;
  }

  public void setOrderItems(List<OrderItemSimpleVO> orderItems) {
    this.orderItems = orderItems;
  }


  public OrderDetailWithIndicatorVO orderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

  /**
   * 
   * @return orderNumber
   */
  @javax.annotation.Nullable
  public String getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
  }


  public OrderDetailWithIndicatorVO orderTitle(String orderTitle) {
    this.orderTitle = orderTitle;
    return this;
  }

  /**
   * 
   * @return orderTitle
   */
  @javax.annotation.Nullable
  public String getOrderTitle() {
    return orderTitle;
  }

  public void setOrderTitle(String orderTitle) {
    this.orderTitle = orderTitle;
  }


  public OrderDetailWithIndicatorVO orderTotal(Object orderTotal) {
    this.orderTotal = orderTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return orderTotal
   */
  @javax.annotation.Nullable
  public Object getOrderTotal() {
    return orderTotal;
  }

  public void setOrderTotal(Object orderTotal) {
    this.orderTotal = orderTotal;
  }


  public OrderDetailWithIndicatorVO oversPercent(Double oversPercent) {
    this.oversPercent = oversPercent;
    return this;
  }

  /**
   * 
   * @return oversPercent
   */
  @javax.annotation.Nullable
  public Double getOversPercent() {
    return oversPercent;
  }

  public void setOversPercent(Double oversPercent) {
    this.oversPercent = oversPercent;
  }


  public OrderDetailWithIndicatorVO parentOrderId(Long parentOrderId) {
    this.parentOrderId = parentOrderId;
    return this;
  }

  /**
   * 
   * @return parentOrderId
   */
  @javax.annotation.Nullable
  public Long getParentOrderId() {
    return parentOrderId;
  }

  public void setParentOrderId(Long parentOrderId) {
    this.parentOrderId = parentOrderId;
  }


  public OrderDetailWithIndicatorVO paymentReference(String paymentReference) {
    this.paymentReference = paymentReference;
    return this;
  }

  /**
   * 
   * @return paymentReference
   */
  @javax.annotation.Nullable
  public String getPaymentReference() {
    return paymentReference;
  }

  public void setPaymentReference(String paymentReference) {
    this.paymentReference = paymentReference;
  }


  public OrderDetailWithIndicatorVO printOrderIds(List<Long> printOrderIds) {
    this.printOrderIds = printOrderIds;
    return this;
  }

  public OrderDetailWithIndicatorVO addPrintOrderIdsItem(Long printOrderIdsItem) {
    if (this.printOrderIds == null) {
      this.printOrderIds = new ArrayList<>();
    }
    this.printOrderIds.add(printOrderIdsItem);
    return this;
  }

  /**
   * 
   * @return printOrderIds
   */
  @javax.annotation.Nullable
  public List<Long> getPrintOrderIds() {
    return printOrderIds;
  }

  public void setPrintOrderIds(List<Long> printOrderIds) {
    this.printOrderIds = printOrderIds;
  }


  public OrderDetailWithIndicatorVO quoteId(Long quoteId) {
    this.quoteId = quoteId;
    return this;
  }

  /**
   * 
   * @return quoteId
   */
  @javax.annotation.Nullable
  public Long getQuoteId() {
    return quoteId;
  }

  public void setQuoteId(Long quoteId) {
    this.quoteId = quoteId;
  }


  public OrderDetailWithIndicatorVO shipping(Object shipping) {
    this.shipping = shipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return shipping
   */
  @javax.annotation.Nullable
  public Object getShipping() {
    return shipping;
  }

  public void setShipping(Object shipping) {
    this.shipping = shipping;
  }


  public OrderDetailWithIndicatorVO status(String status) {
    this.status = status;
    return this;
  }

  /**
   * 
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public OrderDetailWithIndicatorVO statusComments(String statusComments) {
    this.statusComments = statusComments;
    return this;
  }

  /**
   * 
   * @return statusComments
   */
  @javax.annotation.Nullable
  public String getStatusComments() {
    return statusComments;
  }

  public void setStatusComments(String statusComments) {
    this.statusComments = statusComments;
  }


  public OrderDetailWithIndicatorVO supplier(UserVO supplier) {
    this.supplier = supplier;
    return this;
  }

  /**
   * Get supplier
   * @return supplier
   */
  @javax.annotation.Nullable
  public UserVO getSupplier() {
    return supplier;
  }

  public void setSupplier(UserVO supplier) {
    this.supplier = supplier;
  }


  public OrderDetailWithIndicatorVO supplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
    return this;
  }

  /**
   * 
   * @return supplierReference
   */
  @javax.annotation.Nullable
  public String getSupplierReference() {
    return supplierReference;
  }

  public void setSupplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
  }


  public OrderDetailWithIndicatorVO supplierSelectionReason(String supplierSelectionReason) {
    this.supplierSelectionReason = supplierSelectionReason;
    return this;
  }

  /**
   * 
   * @return supplierSelectionReason
   */
  @javax.annotation.Nullable
  public String getSupplierSelectionReason() {
    return supplierSelectionReason;
  }

  public void setSupplierSelectionReason(String supplierSelectionReason) {
    this.supplierSelectionReason = supplierSelectionReason;
  }


  public OrderDetailWithIndicatorVO supplierWorkgroup(WorkgroupBaseVO supplierWorkgroup) {
    this.supplierWorkgroup = supplierWorkgroup;
    return this;
  }

  /**
   * Get supplierWorkgroup
   * @return supplierWorkgroup
   */
  @javax.annotation.Nullable
  public WorkgroupBaseVO getSupplierWorkgroup() {
    return supplierWorkgroup;
  }

  public void setSupplierWorkgroup(WorkgroupBaseVO supplierWorkgroup) {
    this.supplierWorkgroup = supplierWorkgroup;
  }


  public OrderDetailWithIndicatorVO tax(Object tax) {
    this.tax = tax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return tax
   */
  @javax.annotation.Nullable
  public Object getTax() {
    return tax;
  }

  public void setTax(Object tax) {
    this.tax = tax;
  }


  public OrderDetailWithIndicatorVO transactionalCurrency(String transactionalCurrency) {
    this.transactionalCurrency = transactionalCurrency;
    return this;
  }

  /**
   * 
   * @return transactionalCurrency
   */
  @javax.annotation.Nullable
  public String getTransactionalCurrency() {
    return transactionalCurrency;
  }

  public void setTransactionalCurrency(String transactionalCurrency) {
    this.transactionalCurrency = transactionalCurrency;
  }


  public OrderDetailWithIndicatorVO transactionalGrandTotal(Object transactionalGrandTotal) {
    this.transactionalGrandTotal = transactionalGrandTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalGrandTotal
   */
  @javax.annotation.Nullable
  public Object getTransactionalGrandTotal() {
    return transactionalGrandTotal;
  }

  public void setTransactionalGrandTotal(Object transactionalGrandTotal) {
    this.transactionalGrandTotal = transactionalGrandTotal;
  }


  public OrderDetailWithIndicatorVO transactionalGrandTotalWithChanges(Object transactionalGrandTotalWithChanges) {
    this.transactionalGrandTotalWithChanges = transactionalGrandTotalWithChanges;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalGrandTotalWithChanges
   */
  @javax.annotation.Nullable
  public Object getTransactionalGrandTotalWithChanges() {
    return transactionalGrandTotalWithChanges;
  }

  public void setTransactionalGrandTotalWithChanges(Object transactionalGrandTotalWithChanges) {
    this.transactionalGrandTotalWithChanges = transactionalGrandTotalWithChanges;
  }


  public OrderDetailWithIndicatorVO transactionalOrderTotal(Object transactionalOrderTotal) {
    this.transactionalOrderTotal = transactionalOrderTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalOrderTotal
   */
  @javax.annotation.Nullable
  public Object getTransactionalOrderTotal() {
    return transactionalOrderTotal;
  }

  public void setTransactionalOrderTotal(Object transactionalOrderTotal) {
    this.transactionalOrderTotal = transactionalOrderTotal;
  }


  public OrderDetailWithIndicatorVO transactionalShipping(Object transactionalShipping) {
    this.transactionalShipping = transactionalShipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalShipping
   */
  @javax.annotation.Nullable
  public Object getTransactionalShipping() {
    return transactionalShipping;
  }

  public void setTransactionalShipping(Object transactionalShipping) {
    this.transactionalShipping = transactionalShipping;
  }


  public OrderDetailWithIndicatorVO transactionalTax(Object transactionalTax) {
    this.transactionalTax = transactionalTax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalTax
   */
  @javax.annotation.Nullable
  public Object getTransactionalTax() {
    return transactionalTax;
  }

  public void setTransactionalTax(Object transactionalTax) {
    this.transactionalTax = transactionalTax;
  }


  public OrderDetailWithIndicatorVO undersPercent(Double undersPercent) {
    this.undersPercent = undersPercent;
    return this;
  }

  /**
   * 
   * @return undersPercent
   */
  @javax.annotation.Nullable
  public Double getUndersPercent() {
    return undersPercent;
  }

  public void setUndersPercent(Double undersPercent) {
    this.undersPercent = undersPercent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderDetailWithIndicatorVO orderDetailWithIndicatorVO = (OrderDetailWithIndicatorVO) o;
    return Objects.equals(this.acceptedDate, orderDetailWithIndicatorVO.acceptedDate) &&
        Objects.equals(this.annulledDate, orderDetailWithIndicatorVO.annulledDate) &&
        Objects.equals(this.approvedDate, orderDetailWithIndicatorVO.approvedDate) &&
        Objects.equals(this.awardedDate, orderDetailWithIndicatorVO.awardedDate) &&
        Objects.equals(this.budgetType, orderDetailWithIndicatorVO.budgetType) &&
        Objects.equals(this.buyer, orderDetailWithIndicatorVO.buyer) &&
        Objects.equals(this.buyerWorkgroup, orderDetailWithIndicatorVO.buyerWorkgroup) &&
        Objects.equals(this.changeOrders, orderDetailWithIndicatorVO.changeOrders) &&
        Objects.equals(this.classification, orderDetailWithIndicatorVO.classification) &&
        Objects.equals(this.closedDate, orderDetailWithIndicatorVO.closedDate) &&
        Objects.equals(this.closingChangeOrders, orderDetailWithIndicatorVO.closingChangeOrders) &&
        Objects.equals(this.comments, orderDetailWithIndicatorVO.comments) &&
        Objects.equals(this.completionDate, orderDetailWithIndicatorVO.completionDate) &&
        Objects.equals(this.creatorUserId, orderDetailWithIndicatorVO.creatorUserId) &&
        Objects.equals(this.currency, orderDetailWithIndicatorVO.currency) &&
        Objects.equals(this.customFields, orderDetailWithIndicatorVO.customFields) &&
        Objects.equals(this.grandTotal, orderDetailWithIndicatorVO.grandTotal) &&
        Objects.equals(this.grandTotalWithChanges, orderDetailWithIndicatorVO.grandTotalWithChanges) &&
        Objects.equals(this.isSellOrder, orderDetailWithIndicatorVO.isSellOrder) &&
        Objects.equals(this.itemCount, orderDetailWithIndicatorVO.itemCount) &&
        Objects.equals(this.lastActivityDate, orderDetailWithIndicatorVO.lastActivityDate) &&
        Objects.equals(this.lastChanged, orderDetailWithIndicatorVO.lastChanged) &&
        Objects.equals(this.lastStatusChange, orderDetailWithIndicatorVO.lastStatusChange) &&
        Objects.equals(this.miscCost, orderDetailWithIndicatorVO.miscCost) &&
        Objects.equals(this.orderId, orderDetailWithIndicatorVO.orderId) &&
        Objects.equals(this.orderItems, orderDetailWithIndicatorVO.orderItems) &&
        Objects.equals(this.orderNumber, orderDetailWithIndicatorVO.orderNumber) &&
        Objects.equals(this.orderTitle, orderDetailWithIndicatorVO.orderTitle) &&
        Objects.equals(this.orderTotal, orderDetailWithIndicatorVO.orderTotal) &&
        Objects.equals(this.oversPercent, orderDetailWithIndicatorVO.oversPercent) &&
        Objects.equals(this.parentOrderId, orderDetailWithIndicatorVO.parentOrderId) &&
        Objects.equals(this.paymentReference, orderDetailWithIndicatorVO.paymentReference) &&
        Objects.equals(this.printOrderIds, orderDetailWithIndicatorVO.printOrderIds) &&
        Objects.equals(this.quoteId, orderDetailWithIndicatorVO.quoteId) &&
        Objects.equals(this.shipping, orderDetailWithIndicatorVO.shipping) &&
        Objects.equals(this.status, orderDetailWithIndicatorVO.status) &&
        Objects.equals(this.statusComments, orderDetailWithIndicatorVO.statusComments) &&
        Objects.equals(this.supplier, orderDetailWithIndicatorVO.supplier) &&
        Objects.equals(this.supplierReference, orderDetailWithIndicatorVO.supplierReference) &&
        Objects.equals(this.supplierSelectionReason, orderDetailWithIndicatorVO.supplierSelectionReason) &&
        Objects.equals(this.supplierWorkgroup, orderDetailWithIndicatorVO.supplierWorkgroup) &&
        Objects.equals(this.tax, orderDetailWithIndicatorVO.tax) &&
        Objects.equals(this.transactionalCurrency, orderDetailWithIndicatorVO.transactionalCurrency) &&
        Objects.equals(this.transactionalGrandTotal, orderDetailWithIndicatorVO.transactionalGrandTotal) &&
        Objects.equals(this.transactionalGrandTotalWithChanges, orderDetailWithIndicatorVO.transactionalGrandTotalWithChanges) &&
        Objects.equals(this.transactionalOrderTotal, orderDetailWithIndicatorVO.transactionalOrderTotal) &&
        Objects.equals(this.transactionalShipping, orderDetailWithIndicatorVO.transactionalShipping) &&
        Objects.equals(this.transactionalTax, orderDetailWithIndicatorVO.transactionalTax) &&
        Objects.equals(this.undersPercent, orderDetailWithIndicatorVO.undersPercent);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptedDate, annulledDate, approvedDate, awardedDate, budgetType, buyer, buyerWorkgroup, changeOrders, classification, closedDate, closingChangeOrders, comments, completionDate, creatorUserId, currency, customFields, grandTotal, grandTotalWithChanges, isSellOrder, itemCount, lastActivityDate, lastChanged, lastStatusChange, miscCost, orderId, orderItems, orderNumber, orderTitle, orderTotal, oversPercent, parentOrderId, paymentReference, printOrderIds, quoteId, shipping, status, statusComments, supplier, supplierReference, supplierSelectionReason, supplierWorkgroup, tax, transactionalCurrency, transactionalGrandTotal, transactionalGrandTotalWithChanges, transactionalOrderTotal, transactionalShipping, transactionalTax, undersPercent);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderDetailWithIndicatorVO {\n");
    sb.append("    acceptedDate: ").append(toIndentedString(acceptedDate)).append("\n");
    sb.append("    annulledDate: ").append(toIndentedString(annulledDate)).append("\n");
    sb.append("    approvedDate: ").append(toIndentedString(approvedDate)).append("\n");
    sb.append("    awardedDate: ").append(toIndentedString(awardedDate)).append("\n");
    sb.append("    budgetType: ").append(toIndentedString(budgetType)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("    buyerWorkgroup: ").append(toIndentedString(buyerWorkgroup)).append("\n");
    sb.append("    changeOrders: ").append(toIndentedString(changeOrders)).append("\n");
    sb.append("    classification: ").append(toIndentedString(classification)).append("\n");
    sb.append("    closedDate: ").append(toIndentedString(closedDate)).append("\n");
    sb.append("    closingChangeOrders: ").append(toIndentedString(closingChangeOrders)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    creatorUserId: ").append(toIndentedString(creatorUserId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    grandTotal: ").append(toIndentedString(grandTotal)).append("\n");
    sb.append("    grandTotalWithChanges: ").append(toIndentedString(grandTotalWithChanges)).append("\n");
    sb.append("    isSellOrder: ").append(toIndentedString(isSellOrder)).append("\n");
    sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
    sb.append("    lastActivityDate: ").append(toIndentedString(lastActivityDate)).append("\n");
    sb.append("    lastChanged: ").append(toIndentedString(lastChanged)).append("\n");
    sb.append("    lastStatusChange: ").append(toIndentedString(lastStatusChange)).append("\n");
    sb.append("    miscCost: ").append(toIndentedString(miscCost)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderItems: ").append(toIndentedString(orderItems)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    orderTitle: ").append(toIndentedString(orderTitle)).append("\n");
    sb.append("    orderTotal: ").append(toIndentedString(orderTotal)).append("\n");
    sb.append("    oversPercent: ").append(toIndentedString(oversPercent)).append("\n");
    sb.append("    parentOrderId: ").append(toIndentedString(parentOrderId)).append("\n");
    sb.append("    paymentReference: ").append(toIndentedString(paymentReference)).append("\n");
    sb.append("    printOrderIds: ").append(toIndentedString(printOrderIds)).append("\n");
    sb.append("    quoteId: ").append(toIndentedString(quoteId)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusComments: ").append(toIndentedString(statusComments)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("    supplierReference: ").append(toIndentedString(supplierReference)).append("\n");
    sb.append("    supplierSelectionReason: ").append(toIndentedString(supplierSelectionReason)).append("\n");
    sb.append("    supplierWorkgroup: ").append(toIndentedString(supplierWorkgroup)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    transactionalCurrency: ").append(toIndentedString(transactionalCurrency)).append("\n");
    sb.append("    transactionalGrandTotal: ").append(toIndentedString(transactionalGrandTotal)).append("\n");
    sb.append("    transactionalGrandTotalWithChanges: ").append(toIndentedString(transactionalGrandTotalWithChanges)).append("\n");
    sb.append("    transactionalOrderTotal: ").append(toIndentedString(transactionalOrderTotal)).append("\n");
    sb.append("    transactionalShipping: ").append(toIndentedString(transactionalShipping)).append("\n");
    sb.append("    transactionalTax: ").append(toIndentedString(transactionalTax)).append("\n");
    sb.append("    undersPercent: ").append(toIndentedString(undersPercent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accepted_date");
    openapiFields.add("annulled_date");
    openapiFields.add("approved_date");
    openapiFields.add("awarded_date");
    openapiFields.add("budget_type");
    openapiFields.add("buyer");
    openapiFields.add("buyer_workgroup");
    openapiFields.add("change_orders");
    openapiFields.add("classification");
    openapiFields.add("closed_date");
    openapiFields.add("closing_change_orders");
    openapiFields.add("comments");
    openapiFields.add("completion_date");
    openapiFields.add("creator_user_id");
    openapiFields.add("currency");
    openapiFields.add("custom_fields");
    openapiFields.add("grand_total");
    openapiFields.add("grand_total_with_changes");
    openapiFields.add("is_sell_order");
    openapiFields.add("item_count");
    openapiFields.add("last_activity_date");
    openapiFields.add("last_changed");
    openapiFields.add("last_status_change");
    openapiFields.add("misc_cost");
    openapiFields.add("order_id");
    openapiFields.add("order_items");
    openapiFields.add("order_number");
    openapiFields.add("order_title");
    openapiFields.add("order_total");
    openapiFields.add("overs_percent");
    openapiFields.add("parent_order_id");
    openapiFields.add("payment_reference");
    openapiFields.add("print_order_ids");
    openapiFields.add("quote_id");
    openapiFields.add("shipping");
    openapiFields.add("status");
    openapiFields.add("status_comments");
    openapiFields.add("supplier");
    openapiFields.add("supplier_reference");
    openapiFields.add("supplier_selection_reason");
    openapiFields.add("supplier_workgroup");
    openapiFields.add("tax");
    openapiFields.add("transactional_currency");
    openapiFields.add("transactional_grand_total");
    openapiFields.add("transactional_grand_total_with_changes");
    openapiFields.add("transactional_order_total");
    openapiFields.add("transactional_shipping");
    openapiFields.add("transactional_tax");
    openapiFields.add("unders_percent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderDetailWithIndicatorVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderDetailWithIndicatorVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderDetailWithIndicatorVO is not found in the empty JSON string", OrderDetailWithIndicatorVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderDetailWithIndicatorVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderDetailWithIndicatorVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("budget_type") != null && !jsonObj.get("budget_type").isJsonNull()) && !jsonObj.get("budget_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `budget_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("budget_type").toString()));
      }
      // validate the optional field `buyer`
      if (jsonObj.get("buyer") != null && !jsonObj.get("buyer").isJsonNull()) {
        UserVO.validateJsonElement(jsonObj.get("buyer"));
      }
      // validate the optional field `buyer_workgroup`
      if (jsonObj.get("buyer_workgroup") != null && !jsonObj.get("buyer_workgroup").isJsonNull()) {
        WorkgroupBaseVO.validateJsonElement(jsonObj.get("buyer_workgroup"));
      }
      if (jsonObj.get("change_orders") != null && !jsonObj.get("change_orders").isJsonNull()) {
        JsonArray jsonArraychangeOrders = jsonObj.getAsJsonArray("change_orders");
        if (jsonArraychangeOrders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("change_orders").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `change_orders` to be an array in the JSON string but got `%s`", jsonObj.get("change_orders").toString()));
          }

          // validate the optional field `change_orders` (array)
          for (int i = 0; i < jsonArraychangeOrders.size(); i++) {
            OrderDetailBaseVO.validateJsonElement(jsonArraychangeOrders.get(i));
          };
        }
      }
      if ((jsonObj.get("classification") != null && !jsonObj.get("classification").isJsonNull()) && !jsonObj.get("classification").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `classification` to be a primitive type in the JSON string but got `%s`", jsonObj.get("classification").toString()));
      }
      if (jsonObj.get("closing_change_orders") != null && !jsonObj.get("closing_change_orders").isJsonNull()) {
        JsonArray jsonArrayclosingChangeOrders = jsonObj.getAsJsonArray("closing_change_orders");
        if (jsonArrayclosingChangeOrders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("closing_change_orders").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `closing_change_orders` to be an array in the JSON string but got `%s`", jsonObj.get("closing_change_orders").toString()));
          }

          // validate the optional field `closing_change_orders` (array)
          for (int i = 0; i < jsonArrayclosingChangeOrders.size(); i++) {
            OrderDetailBaseVO.validateJsonElement(jsonArrayclosingChangeOrders.get(i));
          };
        }
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
          }

          // validate the optional field `custom_fields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            PropertyPaAndAttVO.validateJsonElement(jsonArraycustomFields.get(i));
          };
        }
      }
      if (jsonObj.get("order_items") != null && !jsonObj.get("order_items").isJsonNull()) {
        JsonArray jsonArrayorderItems = jsonObj.getAsJsonArray("order_items");
        if (jsonArrayorderItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("order_items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `order_items` to be an array in the JSON string but got `%s`", jsonObj.get("order_items").toString()));
          }

          // validate the optional field `order_items` (array)
          for (int i = 0; i < jsonArrayorderItems.size(); i++) {
            OrderItemSimpleVO.validateJsonElement(jsonArrayorderItems.get(i));
          };
        }
      }
      if ((jsonObj.get("order_number") != null && !jsonObj.get("order_number").isJsonNull()) && !jsonObj.get("order_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_number").toString()));
      }
      if ((jsonObj.get("order_title") != null && !jsonObj.get("order_title").isJsonNull()) && !jsonObj.get("order_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_title").toString()));
      }
      if ((jsonObj.get("payment_reference") != null && !jsonObj.get("payment_reference").isJsonNull()) && !jsonObj.get("payment_reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_reference").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("print_order_ids") != null && !jsonObj.get("print_order_ids").isJsonNull() && !jsonObj.get("print_order_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `print_order_ids` to be an array in the JSON string but got `%s`", jsonObj.get("print_order_ids").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("status_comments") != null && !jsonObj.get("status_comments").isJsonNull()) && !jsonObj.get("status_comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_comments").toString()));
      }
      // validate the optional field `supplier`
      if (jsonObj.get("supplier") != null && !jsonObj.get("supplier").isJsonNull()) {
        UserVO.validateJsonElement(jsonObj.get("supplier"));
      }
      if ((jsonObj.get("supplier_reference") != null && !jsonObj.get("supplier_reference").isJsonNull()) && !jsonObj.get("supplier_reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supplier_reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supplier_reference").toString()));
      }
      if ((jsonObj.get("supplier_selection_reason") != null && !jsonObj.get("supplier_selection_reason").isJsonNull()) && !jsonObj.get("supplier_selection_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supplier_selection_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supplier_selection_reason").toString()));
      }
      // validate the optional field `supplier_workgroup`
      if (jsonObj.get("supplier_workgroup") != null && !jsonObj.get("supplier_workgroup").isJsonNull()) {
        WorkgroupBaseVO.validateJsonElement(jsonObj.get("supplier_workgroup"));
      }
      if ((jsonObj.get("transactional_currency") != null && !jsonObj.get("transactional_currency").isJsonNull()) && !jsonObj.get("transactional_currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactional_currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactional_currency").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderDetailWithIndicatorVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderDetailWithIndicatorVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderDetailWithIndicatorVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderDetailWithIndicatorVO.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderDetailWithIndicatorVO>() {
           @Override
           public void write(JsonWriter out, OrderDetailWithIndicatorVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderDetailWithIndicatorVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderDetailWithIndicatorVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderDetailWithIndicatorVO
   * @throws IOException if the JSON string is invalid with respect to OrderDetailWithIndicatorVO
   */
  public static OrderDetailWithIndicatorVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderDetailWithIndicatorVO.class);
  }

  /**
   * Convert an instance of OrderDetailWithIndicatorVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

