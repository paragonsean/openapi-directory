/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.domain.nooshapi.persist.vo.TaskPersistVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskPersistVO {
  public static final String SERIALIZED_NAME_ACTUAL_DURATION = "actual_duration";
  @SerializedName(SERIALIZED_NAME_ACTUAL_DURATION)
  private Double actualDuration;

  public static final String SERIALIZED_NAME_ACTUAL_DURATION_HOUR = "actual_duration_hour";
  @SerializedName(SERIALIZED_NAME_ACTUAL_DURATION_HOUR)
  private Double actualDurationHour;

  public static final String SERIALIZED_NAME_ACTUAL_END_DATE = "actual_end_date";
  @SerializedName(SERIALIZED_NAME_ACTUAL_END_DATE)
  private LocalDate actualEndDate;

  public static final String SERIALIZED_NAME_ACTUAL_START_DATE = "actual_start_date";
  @SerializedName(SERIALIZED_NAME_ACTUAL_START_DATE)
  private LocalDate actualStartDate;

  public static final String SERIALIZED_NAME_ASSIGN_TO_USER_ID = "assign_to_user_id";
  @SerializedName(SERIALIZED_NAME_ASSIGN_TO_USER_ID)
  private Long assignToUserId;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CONTRIBUTORS = "contributors";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTORS)
  private String contributors;

  public static final String SERIALIZED_NAME_CUSTOM_STATUS_ID = "custom_status_id";
  @SerializedName(SERIALIZED_NAME_CUSTOM_STATUS_ID)
  private Long customStatusId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERCENTAGE_COMPLETE = "percentage_complete";
  @SerializedName(SERIALIZED_NAME_PERCENTAGE_COMPLETE)
  private Long percentageComplete;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Long priority;

  public static final String SERIALIZED_NAME_REVISED_DURATION = "revised_duration";
  @SerializedName(SERIALIZED_NAME_REVISED_DURATION)
  private Double revisedDuration;

  public static final String SERIALIZED_NAME_REVISED_DURATION_HOUR = "revised_duration_hour";
  @SerializedName(SERIALIZED_NAME_REVISED_DURATION_HOUR)
  private Double revisedDurationHour;

  public static final String SERIALIZED_NAME_REVISED_END_DATE = "revised_end_date";
  @SerializedName(SERIALIZED_NAME_REVISED_END_DATE)
  private LocalDate revisedEndDate;

  public static final String SERIALIZED_NAME_REVISED_START_DATE = "revised_start_date";
  @SerializedName(SERIALIZED_NAME_REVISED_START_DATE)
  private LocalDate revisedStartDate;

  public static final String SERIALIZED_NAME_STATUS_ID = "status_id";
  @SerializedName(SERIALIZED_NAME_STATUS_ID)
  private Long statusId;

  public static final String SERIALIZED_NAME_TASK_ID = "task_id";
  @SerializedName(SERIALIZED_NAME_TASK_ID)
  private Long taskId;

  public static final String SERIALIZED_NAME_TASK_TYPE_ID = "task_type_id";
  @SerializedName(SERIALIZED_NAME_TASK_TYPE_ID)
  private Long taskTypeId;

  public TaskPersistVO() {
  }

  public TaskPersistVO actualDuration(Double actualDuration) {
    this.actualDuration = actualDuration;
    return this;
  }

  /**
   * 
   * @return actualDuration
   */
  @javax.annotation.Nullable
  public Double getActualDuration() {
    return actualDuration;
  }

  public void setActualDuration(Double actualDuration) {
    this.actualDuration = actualDuration;
  }


  public TaskPersistVO actualDurationHour(Double actualDurationHour) {
    this.actualDurationHour = actualDurationHour;
    return this;
  }

  /**
   * 
   * @return actualDurationHour
   */
  @javax.annotation.Nullable
  public Double getActualDurationHour() {
    return actualDurationHour;
  }

  public void setActualDurationHour(Double actualDurationHour) {
    this.actualDurationHour = actualDurationHour;
  }


  public TaskPersistVO actualEndDate(LocalDate actualEndDate) {
    this.actualEndDate = actualEndDate;
    return this;
  }

  /**
   * 
   * @return actualEndDate
   */
  @javax.annotation.Nullable
  public LocalDate getActualEndDate() {
    return actualEndDate;
  }

  public void setActualEndDate(LocalDate actualEndDate) {
    this.actualEndDate = actualEndDate;
  }


  public TaskPersistVO actualStartDate(LocalDate actualStartDate) {
    this.actualStartDate = actualStartDate;
    return this;
  }

  /**
   * 
   * @return actualStartDate
   */
  @javax.annotation.Nullable
  public LocalDate getActualStartDate() {
    return actualStartDate;
  }

  public void setActualStartDate(LocalDate actualStartDate) {
    this.actualStartDate = actualStartDate;
  }


  public TaskPersistVO assignToUserId(Long assignToUserId) {
    this.assignToUserId = assignToUserId;
    return this;
  }

  /**
   * 
   * @return assignToUserId
   */
  @javax.annotation.Nullable
  public Long getAssignToUserId() {
    return assignToUserId;
  }

  public void setAssignToUserId(Long assignToUserId) {
    this.assignToUserId = assignToUserId;
  }


  public TaskPersistVO comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * 
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public TaskPersistVO contributors(String contributors) {
    this.contributors = contributors;
    return this;
  }

  /**
   * 
   * @return contributors
   */
  @javax.annotation.Nullable
  public String getContributors() {
    return contributors;
  }

  public void setContributors(String contributors) {
    this.contributors = contributors;
  }


  public TaskPersistVO customStatusId(Long customStatusId) {
    this.customStatusId = customStatusId;
    return this;
  }

  /**
   * 
   * @return customStatusId
   */
  @javax.annotation.Nullable
  public Long getCustomStatusId() {
    return customStatusId;
  }

  public void setCustomStatusId(Long customStatusId) {
    this.customStatusId = customStatusId;
  }


  public TaskPersistVO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * 
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public TaskPersistVO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * 
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TaskPersistVO percentageComplete(Long percentageComplete) {
    this.percentageComplete = percentageComplete;
    return this;
  }

  /**
   * 
   * @return percentageComplete
   */
  @javax.annotation.Nullable
  public Long getPercentageComplete() {
    return percentageComplete;
  }

  public void setPercentageComplete(Long percentageComplete) {
    this.percentageComplete = percentageComplete;
  }


  public TaskPersistVO priority(Long priority) {
    this.priority = priority;
    return this;
  }

  /**
   * 
   * @return priority
   */
  @javax.annotation.Nullable
  public Long getPriority() {
    return priority;
  }

  public void setPriority(Long priority) {
    this.priority = priority;
  }


  public TaskPersistVO revisedDuration(Double revisedDuration) {
    this.revisedDuration = revisedDuration;
    return this;
  }

  /**
   * 
   * @return revisedDuration
   */
  @javax.annotation.Nullable
  public Double getRevisedDuration() {
    return revisedDuration;
  }

  public void setRevisedDuration(Double revisedDuration) {
    this.revisedDuration = revisedDuration;
  }


  public TaskPersistVO revisedDurationHour(Double revisedDurationHour) {
    this.revisedDurationHour = revisedDurationHour;
    return this;
  }

  /**
   * 
   * @return revisedDurationHour
   */
  @javax.annotation.Nullable
  public Double getRevisedDurationHour() {
    return revisedDurationHour;
  }

  public void setRevisedDurationHour(Double revisedDurationHour) {
    this.revisedDurationHour = revisedDurationHour;
  }


  public TaskPersistVO revisedEndDate(LocalDate revisedEndDate) {
    this.revisedEndDate = revisedEndDate;
    return this;
  }

  /**
   * 
   * @return revisedEndDate
   */
  @javax.annotation.Nullable
  public LocalDate getRevisedEndDate() {
    return revisedEndDate;
  }

  public void setRevisedEndDate(LocalDate revisedEndDate) {
    this.revisedEndDate = revisedEndDate;
  }


  public TaskPersistVO revisedStartDate(LocalDate revisedStartDate) {
    this.revisedStartDate = revisedStartDate;
    return this;
  }

  /**
   * 
   * @return revisedStartDate
   */
  @javax.annotation.Nullable
  public LocalDate getRevisedStartDate() {
    return revisedStartDate;
  }

  public void setRevisedStartDate(LocalDate revisedStartDate) {
    this.revisedStartDate = revisedStartDate;
  }


  public TaskPersistVO statusId(Long statusId) {
    this.statusId = statusId;
    return this;
  }

  /**
   * 
   * @return statusId
   */
  @javax.annotation.Nullable
  public Long getStatusId() {
    return statusId;
  }

  public void setStatusId(Long statusId) {
    this.statusId = statusId;
  }


  public TaskPersistVO taskId(Long taskId) {
    this.taskId = taskId;
    return this;
  }

  /**
   * 
   * @return taskId
   */
  @javax.annotation.Nullable
  public Long getTaskId() {
    return taskId;
  }

  public void setTaskId(Long taskId) {
    this.taskId = taskId;
  }


  public TaskPersistVO taskTypeId(Long taskTypeId) {
    this.taskTypeId = taskTypeId;
    return this;
  }

  /**
   * 
   * @return taskTypeId
   */
  @javax.annotation.Nullable
  public Long getTaskTypeId() {
    return taskTypeId;
  }

  public void setTaskTypeId(Long taskTypeId) {
    this.taskTypeId = taskTypeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskPersistVO taskPersistVO = (TaskPersistVO) o;
    return Objects.equals(this.actualDuration, taskPersistVO.actualDuration) &&
        Objects.equals(this.actualDurationHour, taskPersistVO.actualDurationHour) &&
        Objects.equals(this.actualEndDate, taskPersistVO.actualEndDate) &&
        Objects.equals(this.actualStartDate, taskPersistVO.actualStartDate) &&
        Objects.equals(this.assignToUserId, taskPersistVO.assignToUserId) &&
        Objects.equals(this.comments, taskPersistVO.comments) &&
        Objects.equals(this.contributors, taskPersistVO.contributors) &&
        Objects.equals(this.customStatusId, taskPersistVO.customStatusId) &&
        Objects.equals(this.description, taskPersistVO.description) &&
        Objects.equals(this.name, taskPersistVO.name) &&
        Objects.equals(this.percentageComplete, taskPersistVO.percentageComplete) &&
        Objects.equals(this.priority, taskPersistVO.priority) &&
        Objects.equals(this.revisedDuration, taskPersistVO.revisedDuration) &&
        Objects.equals(this.revisedDurationHour, taskPersistVO.revisedDurationHour) &&
        Objects.equals(this.revisedEndDate, taskPersistVO.revisedEndDate) &&
        Objects.equals(this.revisedStartDate, taskPersistVO.revisedStartDate) &&
        Objects.equals(this.statusId, taskPersistVO.statusId) &&
        Objects.equals(this.taskId, taskPersistVO.taskId) &&
        Objects.equals(this.taskTypeId, taskPersistVO.taskTypeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualDuration, actualDurationHour, actualEndDate, actualStartDate, assignToUserId, comments, contributors, customStatusId, description, name, percentageComplete, priority, revisedDuration, revisedDurationHour, revisedEndDate, revisedStartDate, statusId, taskId, taskTypeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskPersistVO {\n");
    sb.append("    actualDuration: ").append(toIndentedString(actualDuration)).append("\n");
    sb.append("    actualDurationHour: ").append(toIndentedString(actualDurationHour)).append("\n");
    sb.append("    actualEndDate: ").append(toIndentedString(actualEndDate)).append("\n");
    sb.append("    actualStartDate: ").append(toIndentedString(actualStartDate)).append("\n");
    sb.append("    assignToUserId: ").append(toIndentedString(assignToUserId)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    contributors: ").append(toIndentedString(contributors)).append("\n");
    sb.append("    customStatusId: ").append(toIndentedString(customStatusId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    percentageComplete: ").append(toIndentedString(percentageComplete)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    revisedDuration: ").append(toIndentedString(revisedDuration)).append("\n");
    sb.append("    revisedDurationHour: ").append(toIndentedString(revisedDurationHour)).append("\n");
    sb.append("    revisedEndDate: ").append(toIndentedString(revisedEndDate)).append("\n");
    sb.append("    revisedStartDate: ").append(toIndentedString(revisedStartDate)).append("\n");
    sb.append("    statusId: ").append(toIndentedString(statusId)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskTypeId: ").append(toIndentedString(taskTypeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actual_duration");
    openapiFields.add("actual_duration_hour");
    openapiFields.add("actual_end_date");
    openapiFields.add("actual_start_date");
    openapiFields.add("assign_to_user_id");
    openapiFields.add("comments");
    openapiFields.add("contributors");
    openapiFields.add("custom_status_id");
    openapiFields.add("description");
    openapiFields.add("name");
    openapiFields.add("percentage_complete");
    openapiFields.add("priority");
    openapiFields.add("revised_duration");
    openapiFields.add("revised_duration_hour");
    openapiFields.add("revised_end_date");
    openapiFields.add("revised_start_date");
    openapiFields.add("status_id");
    openapiFields.add("task_id");
    openapiFields.add("task_type_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskPersistVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskPersistVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskPersistVO is not found in the empty JSON string", TaskPersistVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskPersistVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskPersistVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if ((jsonObj.get("contributors") != null && !jsonObj.get("contributors").isJsonNull()) && !jsonObj.get("contributors").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contributors` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contributors").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskPersistVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskPersistVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskPersistVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskPersistVO.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskPersistVO>() {
           @Override
           public void write(JsonWriter out, TaskPersistVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskPersistVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskPersistVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskPersistVO
   * @throws IOException if the JSON string is invalid with respect to TaskPersistVO
   */
  public static TaskPersistVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskPersistVO.class);
  }

  /**
   * Convert an instance of TaskPersistVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

