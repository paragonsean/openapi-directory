/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PropertyPaAndAttVO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.nooshapi.vo.InvoiceItemSimpleVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InvoiceItemSimpleVO {
  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<PropertyPaAndAttVO> customFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_INVOICE_ITEM_ID = "invoice_item_id";
  @SerializedName(SERIALIZED_NAME_INVOICE_ITEM_ID)
  private Long invoiceItemId;

  public static final String SERIALIZED_NAME_ITEM_COST = "item_cost";
  @SerializedName(SERIALIZED_NAME_ITEM_COST)
  private Object itemCost = null;

  public static final String SERIALIZED_NAME_ITEM_QUANTITY = "item_quantity";
  @SerializedName(SERIALIZED_NAME_ITEM_QUANTITY)
  private Long itemQuantity;

  public static final String SERIALIZED_NAME_ITEM_SHIPPING = "item_shipping";
  @SerializedName(SERIALIZED_NAME_ITEM_SHIPPING)
  private Object itemShipping = null;

  public static final String SERIALIZED_NAME_ITEM_SUB_TOTAL = "item_sub_total";
  @SerializedName(SERIALIZED_NAME_ITEM_SUB_TOTAL)
  private Object itemSubTotal = null;

  public static final String SERIALIZED_NAME_ITEM_TAX = "item_tax";
  @SerializedName(SERIALIZED_NAME_ITEM_TAX)
  private Object itemTax = null;

  public static final String SERIALIZED_NAME_JOB_ID = "job_id";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private Long jobId;

  public static final String SERIALIZED_NAME_SPEC_NAME = "spec_name";
  @SerializedName(SERIALIZED_NAME_SPEC_NAME)
  private String specName;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ITEM_COST = "transactional_item_cost";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ITEM_COST)
  private Object transactionalItemCost = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ITEM_SHIPPING = "transactional_item_shipping";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ITEM_SHIPPING)
  private Object transactionalItemShipping = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ITEM_SUB_TOTAL = "transactional_item_sub_total";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ITEM_SUB_TOTAL)
  private Object transactionalItemSubTotal = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ITEM_TAX = "transactional_item_tax";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ITEM_TAX)
  private Object transactionalItemTax = null;

  public InvoiceItemSimpleVO() {
  }

  public InvoiceItemSimpleVO customFields(List<PropertyPaAndAttVO> customFields) {
    this.customFields = customFields;
    return this;
  }

  public InvoiceItemSimpleVO addCustomFieldsItem(PropertyPaAndAttVO customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

  /**
   * 
   * @return customFields
   */
  @javax.annotation.Nullable
  public List<PropertyPaAndAttVO> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<PropertyPaAndAttVO> customFields) {
    this.customFields = customFields;
  }


  public InvoiceItemSimpleVO invoiceItemId(Long invoiceItemId) {
    this.invoiceItemId = invoiceItemId;
    return this;
  }

  /**
   * 
   * @return invoiceItemId
   */
  @javax.annotation.Nullable
  public Long getInvoiceItemId() {
    return invoiceItemId;
  }

  public void setInvoiceItemId(Long invoiceItemId) {
    this.invoiceItemId = invoiceItemId;
  }


  public InvoiceItemSimpleVO itemCost(Object itemCost) {
    this.itemCost = itemCost;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return itemCost
   */
  @javax.annotation.Nullable
  public Object getItemCost() {
    return itemCost;
  }

  public void setItemCost(Object itemCost) {
    this.itemCost = itemCost;
  }


  public InvoiceItemSimpleVO itemQuantity(Long itemQuantity) {
    this.itemQuantity = itemQuantity;
    return this;
  }

  /**
   * 
   * @return itemQuantity
   */
  @javax.annotation.Nullable
  public Long getItemQuantity() {
    return itemQuantity;
  }

  public void setItemQuantity(Long itemQuantity) {
    this.itemQuantity = itemQuantity;
  }


  public InvoiceItemSimpleVO itemShipping(Object itemShipping) {
    this.itemShipping = itemShipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return itemShipping
   */
  @javax.annotation.Nullable
  public Object getItemShipping() {
    return itemShipping;
  }

  public void setItemShipping(Object itemShipping) {
    this.itemShipping = itemShipping;
  }


  public InvoiceItemSimpleVO itemSubTotal(Object itemSubTotal) {
    this.itemSubTotal = itemSubTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return itemSubTotal
   */
  @javax.annotation.Nullable
  public Object getItemSubTotal() {
    return itemSubTotal;
  }

  public void setItemSubTotal(Object itemSubTotal) {
    this.itemSubTotal = itemSubTotal;
  }


  public InvoiceItemSimpleVO itemTax(Object itemTax) {
    this.itemTax = itemTax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return itemTax
   */
  @javax.annotation.Nullable
  public Object getItemTax() {
    return itemTax;
  }

  public void setItemTax(Object itemTax) {
    this.itemTax = itemTax;
  }


  public InvoiceItemSimpleVO jobId(Long jobId) {
    this.jobId = jobId;
    return this;
  }

  /**
   * 
   * @return jobId
   */
  @javax.annotation.Nullable
  public Long getJobId() {
    return jobId;
  }

  public void setJobId(Long jobId) {
    this.jobId = jobId;
  }


  public InvoiceItemSimpleVO specName(String specName) {
    this.specName = specName;
    return this;
  }

  /**
   * 
   * @return specName
   */
  @javax.annotation.Nullable
  public String getSpecName() {
    return specName;
  }

  public void setSpecName(String specName) {
    this.specName = specName;
  }


  public InvoiceItemSimpleVO transactionalItemCost(Object transactionalItemCost) {
    this.transactionalItemCost = transactionalItemCost;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalItemCost
   */
  @javax.annotation.Nullable
  public Object getTransactionalItemCost() {
    return transactionalItemCost;
  }

  public void setTransactionalItemCost(Object transactionalItemCost) {
    this.transactionalItemCost = transactionalItemCost;
  }


  public InvoiceItemSimpleVO transactionalItemShipping(Object transactionalItemShipping) {
    this.transactionalItemShipping = transactionalItemShipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalItemShipping
   */
  @javax.annotation.Nullable
  public Object getTransactionalItemShipping() {
    return transactionalItemShipping;
  }

  public void setTransactionalItemShipping(Object transactionalItemShipping) {
    this.transactionalItemShipping = transactionalItemShipping;
  }


  public InvoiceItemSimpleVO transactionalItemSubTotal(Object transactionalItemSubTotal) {
    this.transactionalItemSubTotal = transactionalItemSubTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalItemSubTotal
   */
  @javax.annotation.Nullable
  public Object getTransactionalItemSubTotal() {
    return transactionalItemSubTotal;
  }

  public void setTransactionalItemSubTotal(Object transactionalItemSubTotal) {
    this.transactionalItemSubTotal = transactionalItemSubTotal;
  }


  public InvoiceItemSimpleVO transactionalItemTax(Object transactionalItemTax) {
    this.transactionalItemTax = transactionalItemTax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalItemTax
   */
  @javax.annotation.Nullable
  public Object getTransactionalItemTax() {
    return transactionalItemTax;
  }

  public void setTransactionalItemTax(Object transactionalItemTax) {
    this.transactionalItemTax = transactionalItemTax;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceItemSimpleVO invoiceItemSimpleVO = (InvoiceItemSimpleVO) o;
    return Objects.equals(this.customFields, invoiceItemSimpleVO.customFields) &&
        Objects.equals(this.invoiceItemId, invoiceItemSimpleVO.invoiceItemId) &&
        Objects.equals(this.itemCost, invoiceItemSimpleVO.itemCost) &&
        Objects.equals(this.itemQuantity, invoiceItemSimpleVO.itemQuantity) &&
        Objects.equals(this.itemShipping, invoiceItemSimpleVO.itemShipping) &&
        Objects.equals(this.itemSubTotal, invoiceItemSimpleVO.itemSubTotal) &&
        Objects.equals(this.itemTax, invoiceItemSimpleVO.itemTax) &&
        Objects.equals(this.jobId, invoiceItemSimpleVO.jobId) &&
        Objects.equals(this.specName, invoiceItemSimpleVO.specName) &&
        Objects.equals(this.transactionalItemCost, invoiceItemSimpleVO.transactionalItemCost) &&
        Objects.equals(this.transactionalItemShipping, invoiceItemSimpleVO.transactionalItemShipping) &&
        Objects.equals(this.transactionalItemSubTotal, invoiceItemSimpleVO.transactionalItemSubTotal) &&
        Objects.equals(this.transactionalItemTax, invoiceItemSimpleVO.transactionalItemTax);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(customFields, invoiceItemId, itemCost, itemQuantity, itemShipping, itemSubTotal, itemTax, jobId, specName, transactionalItemCost, transactionalItemShipping, transactionalItemSubTotal, transactionalItemTax);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceItemSimpleVO {\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    invoiceItemId: ").append(toIndentedString(invoiceItemId)).append("\n");
    sb.append("    itemCost: ").append(toIndentedString(itemCost)).append("\n");
    sb.append("    itemQuantity: ").append(toIndentedString(itemQuantity)).append("\n");
    sb.append("    itemShipping: ").append(toIndentedString(itemShipping)).append("\n");
    sb.append("    itemSubTotal: ").append(toIndentedString(itemSubTotal)).append("\n");
    sb.append("    itemTax: ").append(toIndentedString(itemTax)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    specName: ").append(toIndentedString(specName)).append("\n");
    sb.append("    transactionalItemCost: ").append(toIndentedString(transactionalItemCost)).append("\n");
    sb.append("    transactionalItemShipping: ").append(toIndentedString(transactionalItemShipping)).append("\n");
    sb.append("    transactionalItemSubTotal: ").append(toIndentedString(transactionalItemSubTotal)).append("\n");
    sb.append("    transactionalItemTax: ").append(toIndentedString(transactionalItemTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("custom_fields");
    openapiFields.add("invoice_item_id");
    openapiFields.add("item_cost");
    openapiFields.add("item_quantity");
    openapiFields.add("item_shipping");
    openapiFields.add("item_sub_total");
    openapiFields.add("item_tax");
    openapiFields.add("job_id");
    openapiFields.add("spec_name");
    openapiFields.add("transactional_item_cost");
    openapiFields.add("transactional_item_shipping");
    openapiFields.add("transactional_item_sub_total");
    openapiFields.add("transactional_item_tax");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InvoiceItemSimpleVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InvoiceItemSimpleVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceItemSimpleVO is not found in the empty JSON string", InvoiceItemSimpleVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InvoiceItemSimpleVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InvoiceItemSimpleVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
          }

          // validate the optional field `custom_fields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            PropertyPaAndAttVO.validateJsonElement(jsonArraycustomFields.get(i));
          };
        }
      }
      if ((jsonObj.get("spec_name") != null && !jsonObj.get("spec_name").isJsonNull()) && !jsonObj.get("spec_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spec_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spec_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceItemSimpleVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceItemSimpleVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceItemSimpleVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceItemSimpleVO.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceItemSimpleVO>() {
           @Override
           public void write(JsonWriter out, InvoiceItemSimpleVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceItemSimpleVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InvoiceItemSimpleVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InvoiceItemSimpleVO
   * @throws IOException if the JSON string is invalid with respect to InvoiceItemSimpleVO
   */
  public static InvoiceItemSimpleVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceItemSimpleVO.class);
  }

  /**
   * Convert an instance of InvoiceItemSimpleVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

