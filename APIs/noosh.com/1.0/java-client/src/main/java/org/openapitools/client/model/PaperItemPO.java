/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.domain.nooshapi.persist.po.PaperItemPO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PaperItemPO {
  public static final String SERIALIZED_NAME_MIN_UOM_QTY = "min_uom_qty";
  @SerializedName(SERIALIZED_NAME_MIN_UOM_QTY)
  private Long minUomQty;

  public static final String SERIALIZED_NAME_PAPER_ID = "paper_id";
  @SerializedName(SERIALIZED_NAME_PAPER_ID)
  private Long paperId;

  public static final String SERIALIZED_NAME_PRICE1 = "price_1";
  @SerializedName(SERIALIZED_NAME_PRICE1)
  private Object price1 = null;

  public static final String SERIALIZED_NAME_PRICE2 = "price_2";
  @SerializedName(SERIALIZED_NAME_PRICE2)
  private Object price2 = null;

  public static final String SERIALIZED_NAME_PRICE3 = "price_3";
  @SerializedName(SERIALIZED_NAME_PRICE3)
  private Object price3 = null;

  public static final String SERIALIZED_NAME_PRICE4 = "price_4";
  @SerializedName(SERIALIZED_NAME_PRICE4)
  private Object price4 = null;

  public static final String SERIALIZED_NAME_PRICE5 = "price_5";
  @SerializedName(SERIALIZED_NAME_PRICE5)
  private Object price5 = null;

  public static final String SERIALIZED_NAME_PRICE_PER_TONNE = "price_per_tonne";
  @SerializedName(SERIALIZED_NAME_PRICE_PER_TONNE)
  private Object pricePerTonne = null;

  public static final String SERIALIZED_NAME_QTY_UOM = "qty_uom";
  @SerializedName(SERIALIZED_NAME_QTY_UOM)
  private String qtyUom;

  public static final String SERIALIZED_NAME_QUANTITY1 = "quantity_1";
  @SerializedName(SERIALIZED_NAME_QUANTITY1)
  private Long quantity1;

  public static final String SERIALIZED_NAME_QUANTITY2 = "quantity_2";
  @SerializedName(SERIALIZED_NAME_QUANTITY2)
  private Long quantity2;

  public static final String SERIALIZED_NAME_QUANTITY3 = "quantity_3";
  @SerializedName(SERIALIZED_NAME_QUANTITY3)
  private Long quantity3;

  public static final String SERIALIZED_NAME_QUANTITY4 = "quantity_4";
  @SerializedName(SERIALIZED_NAME_QUANTITY4)
  private Long quantity4;

  public static final String SERIALIZED_NAME_QUANTITY5 = "quantity_5";
  @SerializedName(SERIALIZED_NAME_QUANTITY5)
  private Long quantity5;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private String size;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_UNIT_PRICE1 = "unit_price_1";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE1)
  private Object unitPrice1 = null;

  public static final String SERIALIZED_NAME_UNIT_PRICE2 = "unit_price_2";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE2)
  private Object unitPrice2 = null;

  public static final String SERIALIZED_NAME_UNIT_PRICE3 = "unit_price_3";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE3)
  private Object unitPrice3 = null;

  public static final String SERIALIZED_NAME_UNIT_PRICE4 = "unit_price_4";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE4)
  private Object unitPrice4 = null;

  public static final String SERIALIZED_NAME_UNIT_PRICE5 = "unit_price_5";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE5)
  private Object unitPrice5 = null;

  public PaperItemPO() {
  }

  public PaperItemPO minUomQty(Long minUomQty) {
    this.minUomQty = minUomQty;
    return this;
  }

  /**
   * 
   * @return minUomQty
   */
  @javax.annotation.Nullable
  public Long getMinUomQty() {
    return minUomQty;
  }

  public void setMinUomQty(Long minUomQty) {
    this.minUomQty = minUomQty;
  }


  public PaperItemPO paperId(Long paperId) {
    this.paperId = paperId;
    return this;
  }

  /**
   * 
   * @return paperId
   */
  @javax.annotation.Nullable
  public Long getPaperId() {
    return paperId;
  }

  public void setPaperId(Long paperId) {
    this.paperId = paperId;
  }


  public PaperItemPO price1(Object price1) {
    this.price1 = price1;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return price1
   */
  @javax.annotation.Nullable
  public Object getPrice1() {
    return price1;
  }

  public void setPrice1(Object price1) {
    this.price1 = price1;
  }


  public PaperItemPO price2(Object price2) {
    this.price2 = price2;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return price2
   */
  @javax.annotation.Nullable
  public Object getPrice2() {
    return price2;
  }

  public void setPrice2(Object price2) {
    this.price2 = price2;
  }


  public PaperItemPO price3(Object price3) {
    this.price3 = price3;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return price3
   */
  @javax.annotation.Nullable
  public Object getPrice3() {
    return price3;
  }

  public void setPrice3(Object price3) {
    this.price3 = price3;
  }


  public PaperItemPO price4(Object price4) {
    this.price4 = price4;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return price4
   */
  @javax.annotation.Nullable
  public Object getPrice4() {
    return price4;
  }

  public void setPrice4(Object price4) {
    this.price4 = price4;
  }


  public PaperItemPO price5(Object price5) {
    this.price5 = price5;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return price5
   */
  @javax.annotation.Nullable
  public Object getPrice5() {
    return price5;
  }

  public void setPrice5(Object price5) {
    this.price5 = price5;
  }


  public PaperItemPO pricePerTonne(Object pricePerTonne) {
    this.pricePerTonne = pricePerTonne;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return pricePerTonne
   */
  @javax.annotation.Nullable
  public Object getPricePerTonne() {
    return pricePerTonne;
  }

  public void setPricePerTonne(Object pricePerTonne) {
    this.pricePerTonne = pricePerTonne;
  }


  public PaperItemPO qtyUom(String qtyUom) {
    this.qtyUom = qtyUom;
    return this;
  }

  /**
   * 
   * @return qtyUom
   */
  @javax.annotation.Nullable
  public String getQtyUom() {
    return qtyUom;
  }

  public void setQtyUom(String qtyUom) {
    this.qtyUom = qtyUom;
  }


  public PaperItemPO quantity1(Long quantity1) {
    this.quantity1 = quantity1;
    return this;
  }

  /**
   * 
   * @return quantity1
   */
  @javax.annotation.Nullable
  public Long getQuantity1() {
    return quantity1;
  }

  public void setQuantity1(Long quantity1) {
    this.quantity1 = quantity1;
  }


  public PaperItemPO quantity2(Long quantity2) {
    this.quantity2 = quantity2;
    return this;
  }

  /**
   * 
   * @return quantity2
   */
  @javax.annotation.Nullable
  public Long getQuantity2() {
    return quantity2;
  }

  public void setQuantity2(Long quantity2) {
    this.quantity2 = quantity2;
  }


  public PaperItemPO quantity3(Long quantity3) {
    this.quantity3 = quantity3;
    return this;
  }

  /**
   * 
   * @return quantity3
   */
  @javax.annotation.Nullable
  public Long getQuantity3() {
    return quantity3;
  }

  public void setQuantity3(Long quantity3) {
    this.quantity3 = quantity3;
  }


  public PaperItemPO quantity4(Long quantity4) {
    this.quantity4 = quantity4;
    return this;
  }

  /**
   * 
   * @return quantity4
   */
  @javax.annotation.Nullable
  public Long getQuantity4() {
    return quantity4;
  }

  public void setQuantity4(Long quantity4) {
    this.quantity4 = quantity4;
  }


  public PaperItemPO quantity5(Long quantity5) {
    this.quantity5 = quantity5;
    return this;
  }

  /**
   * 
   * @return quantity5
   */
  @javax.annotation.Nullable
  public Long getQuantity5() {
    return quantity5;
  }

  public void setQuantity5(Long quantity5) {
    this.quantity5 = quantity5;
  }


  public PaperItemPO size(String size) {
    this.size = size;
    return this;
  }

  /**
   * 
   * @return size
   */
  @javax.annotation.Nullable
  public String getSize() {
    return size;
  }

  public void setSize(String size) {
    this.size = size;
  }


  public PaperItemPO sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * 
   * @return sku
   */
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  public PaperItemPO unitPrice1(Object unitPrice1) {
    this.unitPrice1 = unitPrice1;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return unitPrice1
   */
  @javax.annotation.Nullable
  public Object getUnitPrice1() {
    return unitPrice1;
  }

  public void setUnitPrice1(Object unitPrice1) {
    this.unitPrice1 = unitPrice1;
  }


  public PaperItemPO unitPrice2(Object unitPrice2) {
    this.unitPrice2 = unitPrice2;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return unitPrice2
   */
  @javax.annotation.Nullable
  public Object getUnitPrice2() {
    return unitPrice2;
  }

  public void setUnitPrice2(Object unitPrice2) {
    this.unitPrice2 = unitPrice2;
  }


  public PaperItemPO unitPrice3(Object unitPrice3) {
    this.unitPrice3 = unitPrice3;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return unitPrice3
   */
  @javax.annotation.Nullable
  public Object getUnitPrice3() {
    return unitPrice3;
  }

  public void setUnitPrice3(Object unitPrice3) {
    this.unitPrice3 = unitPrice3;
  }


  public PaperItemPO unitPrice4(Object unitPrice4) {
    this.unitPrice4 = unitPrice4;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return unitPrice4
   */
  @javax.annotation.Nullable
  public Object getUnitPrice4() {
    return unitPrice4;
  }

  public void setUnitPrice4(Object unitPrice4) {
    this.unitPrice4 = unitPrice4;
  }


  public PaperItemPO unitPrice5(Object unitPrice5) {
    this.unitPrice5 = unitPrice5;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return unitPrice5
   */
  @javax.annotation.Nullable
  public Object getUnitPrice5() {
    return unitPrice5;
  }

  public void setUnitPrice5(Object unitPrice5) {
    this.unitPrice5 = unitPrice5;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaperItemPO paperItemPO = (PaperItemPO) o;
    return Objects.equals(this.minUomQty, paperItemPO.minUomQty) &&
        Objects.equals(this.paperId, paperItemPO.paperId) &&
        Objects.equals(this.price1, paperItemPO.price1) &&
        Objects.equals(this.price2, paperItemPO.price2) &&
        Objects.equals(this.price3, paperItemPO.price3) &&
        Objects.equals(this.price4, paperItemPO.price4) &&
        Objects.equals(this.price5, paperItemPO.price5) &&
        Objects.equals(this.pricePerTonne, paperItemPO.pricePerTonne) &&
        Objects.equals(this.qtyUom, paperItemPO.qtyUom) &&
        Objects.equals(this.quantity1, paperItemPO.quantity1) &&
        Objects.equals(this.quantity2, paperItemPO.quantity2) &&
        Objects.equals(this.quantity3, paperItemPO.quantity3) &&
        Objects.equals(this.quantity4, paperItemPO.quantity4) &&
        Objects.equals(this.quantity5, paperItemPO.quantity5) &&
        Objects.equals(this.size, paperItemPO.size) &&
        Objects.equals(this.sku, paperItemPO.sku) &&
        Objects.equals(this.unitPrice1, paperItemPO.unitPrice1) &&
        Objects.equals(this.unitPrice2, paperItemPO.unitPrice2) &&
        Objects.equals(this.unitPrice3, paperItemPO.unitPrice3) &&
        Objects.equals(this.unitPrice4, paperItemPO.unitPrice4) &&
        Objects.equals(this.unitPrice5, paperItemPO.unitPrice5);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(minUomQty, paperId, price1, price2, price3, price4, price5, pricePerTonne, qtyUom, quantity1, quantity2, quantity3, quantity4, quantity5, size, sku, unitPrice1, unitPrice2, unitPrice3, unitPrice4, unitPrice5);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaperItemPO {\n");
    sb.append("    minUomQty: ").append(toIndentedString(minUomQty)).append("\n");
    sb.append("    paperId: ").append(toIndentedString(paperId)).append("\n");
    sb.append("    price1: ").append(toIndentedString(price1)).append("\n");
    sb.append("    price2: ").append(toIndentedString(price2)).append("\n");
    sb.append("    price3: ").append(toIndentedString(price3)).append("\n");
    sb.append("    price4: ").append(toIndentedString(price4)).append("\n");
    sb.append("    price5: ").append(toIndentedString(price5)).append("\n");
    sb.append("    pricePerTonne: ").append(toIndentedString(pricePerTonne)).append("\n");
    sb.append("    qtyUom: ").append(toIndentedString(qtyUom)).append("\n");
    sb.append("    quantity1: ").append(toIndentedString(quantity1)).append("\n");
    sb.append("    quantity2: ").append(toIndentedString(quantity2)).append("\n");
    sb.append("    quantity3: ").append(toIndentedString(quantity3)).append("\n");
    sb.append("    quantity4: ").append(toIndentedString(quantity4)).append("\n");
    sb.append("    quantity5: ").append(toIndentedString(quantity5)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    unitPrice1: ").append(toIndentedString(unitPrice1)).append("\n");
    sb.append("    unitPrice2: ").append(toIndentedString(unitPrice2)).append("\n");
    sb.append("    unitPrice3: ").append(toIndentedString(unitPrice3)).append("\n");
    sb.append("    unitPrice4: ").append(toIndentedString(unitPrice4)).append("\n");
    sb.append("    unitPrice5: ").append(toIndentedString(unitPrice5)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("min_uom_qty");
    openapiFields.add("paper_id");
    openapiFields.add("price_1");
    openapiFields.add("price_2");
    openapiFields.add("price_3");
    openapiFields.add("price_4");
    openapiFields.add("price_5");
    openapiFields.add("price_per_tonne");
    openapiFields.add("qty_uom");
    openapiFields.add("quantity_1");
    openapiFields.add("quantity_2");
    openapiFields.add("quantity_3");
    openapiFields.add("quantity_4");
    openapiFields.add("quantity_5");
    openapiFields.add("size");
    openapiFields.add("sku");
    openapiFields.add("unit_price_1");
    openapiFields.add("unit_price_2");
    openapiFields.add("unit_price_3");
    openapiFields.add("unit_price_4");
    openapiFields.add("unit_price_5");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PaperItemPO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PaperItemPO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaperItemPO is not found in the empty JSON string", PaperItemPO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PaperItemPO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PaperItemPO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("qty_uom") != null && !jsonObj.get("qty_uom").isJsonNull()) && !jsonObj.get("qty_uom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qty_uom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qty_uom").toString()));
      }
      if ((jsonObj.get("size") != null && !jsonObj.get("size").isJsonNull()) && !jsonObj.get("size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("size").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaperItemPO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaperItemPO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaperItemPO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaperItemPO.class));

       return (TypeAdapter<T>) new TypeAdapter<PaperItemPO>() {
           @Override
           public void write(JsonWriter out, PaperItemPO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PaperItemPO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PaperItemPO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaperItemPO
   * @throws IOException if the JSON string is invalid with respect to PaperItemPO
   */
  public static PaperItemPO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaperItemPO.class);
  }

  /**
   * Convert an instance of PaperItemPO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

