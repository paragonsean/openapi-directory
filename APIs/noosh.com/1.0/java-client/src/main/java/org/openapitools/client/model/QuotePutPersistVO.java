/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.domain.nooshapi.persist.vo.QuotePutPersistVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QuotePutPersistVO {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_PO_NUMBER = "po_number";
  @SerializedName(SERIALIZED_NAME_PO_NUMBER)
  private String poNumber;

  public static final String SERIALIZED_NAME_QUOTE_ID = "quote_id";
  @SerializedName(SERIALIZED_NAME_QUOTE_ID)
  private Long quoteId;

  public static final String SERIALIZED_NAME_STATE_CHANGE_COMMENTS = "state_change_comments";
  @SerializedName(SERIALIZED_NAME_STATE_CHANGE_COMMENTS)
  private String stateChangeComments;

  public QuotePutPersistVO() {
  }

  public QuotePutPersistVO action(String action) {
    this.action = action;
    return this;
  }

  /**
   * 
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public QuotePutPersistVO poNumber(String poNumber) {
    this.poNumber = poNumber;
    return this;
  }

  /**
   * 
   * @return poNumber
   */
  @javax.annotation.Nullable
  public String getPoNumber() {
    return poNumber;
  }

  public void setPoNumber(String poNumber) {
    this.poNumber = poNumber;
  }


  public QuotePutPersistVO quoteId(Long quoteId) {
    this.quoteId = quoteId;
    return this;
  }

  /**
   * 
   * @return quoteId
   */
  @javax.annotation.Nullable
  public Long getQuoteId() {
    return quoteId;
  }

  public void setQuoteId(Long quoteId) {
    this.quoteId = quoteId;
  }


  public QuotePutPersistVO stateChangeComments(String stateChangeComments) {
    this.stateChangeComments = stateChangeComments;
    return this;
  }

  /**
   * 
   * @return stateChangeComments
   */
  @javax.annotation.Nullable
  public String getStateChangeComments() {
    return stateChangeComments;
  }

  public void setStateChangeComments(String stateChangeComments) {
    this.stateChangeComments = stateChangeComments;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuotePutPersistVO quotePutPersistVO = (QuotePutPersistVO) o;
    return Objects.equals(this.action, quotePutPersistVO.action) &&
        Objects.equals(this.poNumber, quotePutPersistVO.poNumber) &&
        Objects.equals(this.quoteId, quotePutPersistVO.quoteId) &&
        Objects.equals(this.stateChangeComments, quotePutPersistVO.stateChangeComments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, poNumber, quoteId, stateChangeComments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuotePutPersistVO {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    poNumber: ").append(toIndentedString(poNumber)).append("\n");
    sb.append("    quoteId: ").append(toIndentedString(quoteId)).append("\n");
    sb.append("    stateChangeComments: ").append(toIndentedString(stateChangeComments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("po_number");
    openapiFields.add("quote_id");
    openapiFields.add("state_change_comments");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuotePutPersistVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuotePutPersistVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuotePutPersistVO is not found in the empty JSON string", QuotePutPersistVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuotePutPersistVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuotePutPersistVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("po_number") != null && !jsonObj.get("po_number").isJsonNull()) && !jsonObj.get("po_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `po_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("po_number").toString()));
      }
      if ((jsonObj.get("state_change_comments") != null && !jsonObj.get("state_change_comments").isJsonNull()) && !jsonObj.get("state_change_comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state_change_comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state_change_comments").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuotePutPersistVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuotePutPersistVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuotePutPersistVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuotePutPersistVO.class));

       return (TypeAdapter<T>) new TypeAdapter<QuotePutPersistVO>() {
           @Override
           public void write(JsonWriter out, QuotePutPersistVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuotePutPersistVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuotePutPersistVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuotePutPersistVO
   * @throws IOException if the JSON string is invalid with respect to QuotePutPersistVO
   */
  public static QuotePutPersistVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuotePutPersistVO.class);
  }

  /**
   * Convert an instance of QuotePutPersistVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

