/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CustomFieldPersistVO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.nooshapi.vo.OrderUpdPersistVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderUpdPersistVO {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_BUDGET_TYPE_FIELD_ID = "budget_type_field_id";
  @SerializedName(SERIALIZED_NAME_BUDGET_TYPE_FIELD_ID)
  private Long budgetTypeFieldId;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<CustomFieldPersistVO> customFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORDER_COMPLETION_DATE = "order_completion_date";
  @SerializedName(SERIALIZED_NAME_ORDER_COMPLETION_DATE)
  private LocalDate orderCompletionDate;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private Long orderId;

  public static final String SERIALIZED_NAME_OTHER_SELECTION_REASON = "other_selection_reason";
  @SerializedName(SERIALIZED_NAME_OTHER_SELECTION_REASON)
  private String otherSelectionReason;

  public static final String SERIALIZED_NAME_OVERS_PERCENT = "overs_percent";
  @SerializedName(SERIALIZED_NAME_OVERS_PERCENT)
  private Object oversPercent = null;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_ID = "payment_method_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_ID)
  private Long paymentMethodId;

  public static final String SERIALIZED_NAME_PAYMENT_REFERENCE_NO = "payment_reference_no";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REFERENCE_NO)
  private String paymentReferenceNo;

  public static final String SERIALIZED_NAME_REJECT_REASON = "reject_reason";
  @SerializedName(SERIALIZED_NAME_REJECT_REASON)
  private String rejectReason;

  public static final String SERIALIZED_NAME_SUPPLIER_SELECTION_REASON_ID = "supplier_selection_reason_id";
  @SerializedName(SERIALIZED_NAME_SUPPLIER_SELECTION_REASON_ID)
  private Long supplierSelectionReasonId;

  public static final String SERIALIZED_NAME_UNDERS_PERCENT = "unders_percent";
  @SerializedName(SERIALIZED_NAME_UNDERS_PERCENT)
  private Object undersPercent = null;

  public OrderUpdPersistVO() {
  }

  public OrderUpdPersistVO action(String action) {
    this.action = action;
    return this;
  }

  /**
   * accept or reject
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public OrderUpdPersistVO budgetTypeFieldId(Long budgetTypeFieldId) {
    this.budgetTypeFieldId = budgetTypeFieldId;
    return this;
  }

  /**
   * 
   * @return budgetTypeFieldId
   */
  @javax.annotation.Nullable
  public Long getBudgetTypeFieldId() {
    return budgetTypeFieldId;
  }

  public void setBudgetTypeFieldId(Long budgetTypeFieldId) {
    this.budgetTypeFieldId = budgetTypeFieldId;
  }


  public OrderUpdPersistVO comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * 
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public OrderUpdPersistVO customFields(List<CustomFieldPersistVO> customFields) {
    this.customFields = customFields;
    return this;
  }

  public OrderUpdPersistVO addCustomFieldsItem(CustomFieldPersistVO customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

  /**
   * 
   * @return customFields
   */
  @javax.annotation.Nullable
  public List<CustomFieldPersistVO> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<CustomFieldPersistVO> customFields) {
    this.customFields = customFields;
  }


  public OrderUpdPersistVO orderCompletionDate(LocalDate orderCompletionDate) {
    this.orderCompletionDate = orderCompletionDate;
    return this;
  }

  /**
   * 
   * @return orderCompletionDate
   */
  @javax.annotation.Nullable
  public LocalDate getOrderCompletionDate() {
    return orderCompletionDate;
  }

  public void setOrderCompletionDate(LocalDate orderCompletionDate) {
    this.orderCompletionDate = orderCompletionDate;
  }


  public OrderUpdPersistVO orderId(Long orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * 
   * @return orderId
   */
  @javax.annotation.Nullable
  public Long getOrderId() {
    return orderId;
  }

  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }


  public OrderUpdPersistVO otherSelectionReason(String otherSelectionReason) {
    this.otherSelectionReason = otherSelectionReason;
    return this;
  }

  /**
   * 
   * @return otherSelectionReason
   */
  @javax.annotation.Nullable
  public String getOtherSelectionReason() {
    return otherSelectionReason;
  }

  public void setOtherSelectionReason(String otherSelectionReason) {
    this.otherSelectionReason = otherSelectionReason;
  }


  public OrderUpdPersistVO oversPercent(Object oversPercent) {
    this.oversPercent = oversPercent;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return oversPercent
   */
  @javax.annotation.Nullable
  public Object getOversPercent() {
    return oversPercent;
  }

  public void setOversPercent(Object oversPercent) {
    this.oversPercent = oversPercent;
  }


  public OrderUpdPersistVO paymentMethodId(Long paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

  /**
   * 
   * @return paymentMethodId
   */
  @javax.annotation.Nullable
  public Long getPaymentMethodId() {
    return paymentMethodId;
  }

  public void setPaymentMethodId(Long paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }


  public OrderUpdPersistVO paymentReferenceNo(String paymentReferenceNo) {
    this.paymentReferenceNo = paymentReferenceNo;
    return this;
  }

  /**
   * 
   * @return paymentReferenceNo
   */
  @javax.annotation.Nullable
  public String getPaymentReferenceNo() {
    return paymentReferenceNo;
  }

  public void setPaymentReferenceNo(String paymentReferenceNo) {
    this.paymentReferenceNo = paymentReferenceNo;
  }


  public OrderUpdPersistVO rejectReason(String rejectReason) {
    this.rejectReason = rejectReason;
    return this;
  }

  /**
   * 
   * @return rejectReason
   */
  @javax.annotation.Nullable
  public String getRejectReason() {
    return rejectReason;
  }

  public void setRejectReason(String rejectReason) {
    this.rejectReason = rejectReason;
  }


  public OrderUpdPersistVO supplierSelectionReasonId(Long supplierSelectionReasonId) {
    this.supplierSelectionReasonId = supplierSelectionReasonId;
    return this;
  }

  /**
   * 
   * @return supplierSelectionReasonId
   */
  @javax.annotation.Nullable
  public Long getSupplierSelectionReasonId() {
    return supplierSelectionReasonId;
  }

  public void setSupplierSelectionReasonId(Long supplierSelectionReasonId) {
    this.supplierSelectionReasonId = supplierSelectionReasonId;
  }


  public OrderUpdPersistVO undersPercent(Object undersPercent) {
    this.undersPercent = undersPercent;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return undersPercent
   */
  @javax.annotation.Nullable
  public Object getUndersPercent() {
    return undersPercent;
  }

  public void setUndersPercent(Object undersPercent) {
    this.undersPercent = undersPercent;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderUpdPersistVO orderUpdPersistVO = (OrderUpdPersistVO) o;
    return Objects.equals(this.action, orderUpdPersistVO.action) &&
        Objects.equals(this.budgetTypeFieldId, orderUpdPersistVO.budgetTypeFieldId) &&
        Objects.equals(this.comments, orderUpdPersistVO.comments) &&
        Objects.equals(this.customFields, orderUpdPersistVO.customFields) &&
        Objects.equals(this.orderCompletionDate, orderUpdPersistVO.orderCompletionDate) &&
        Objects.equals(this.orderId, orderUpdPersistVO.orderId) &&
        Objects.equals(this.otherSelectionReason, orderUpdPersistVO.otherSelectionReason) &&
        Objects.equals(this.oversPercent, orderUpdPersistVO.oversPercent) &&
        Objects.equals(this.paymentMethodId, orderUpdPersistVO.paymentMethodId) &&
        Objects.equals(this.paymentReferenceNo, orderUpdPersistVO.paymentReferenceNo) &&
        Objects.equals(this.rejectReason, orderUpdPersistVO.rejectReason) &&
        Objects.equals(this.supplierSelectionReasonId, orderUpdPersistVO.supplierSelectionReasonId) &&
        Objects.equals(this.undersPercent, orderUpdPersistVO.undersPercent);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, budgetTypeFieldId, comments, customFields, orderCompletionDate, orderId, otherSelectionReason, oversPercent, paymentMethodId, paymentReferenceNo, rejectReason, supplierSelectionReasonId, undersPercent);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderUpdPersistVO {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    budgetTypeFieldId: ").append(toIndentedString(budgetTypeFieldId)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    orderCompletionDate: ").append(toIndentedString(orderCompletionDate)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    otherSelectionReason: ").append(toIndentedString(otherSelectionReason)).append("\n");
    sb.append("    oversPercent: ").append(toIndentedString(oversPercent)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    paymentReferenceNo: ").append(toIndentedString(paymentReferenceNo)).append("\n");
    sb.append("    rejectReason: ").append(toIndentedString(rejectReason)).append("\n");
    sb.append("    supplierSelectionReasonId: ").append(toIndentedString(supplierSelectionReasonId)).append("\n");
    sb.append("    undersPercent: ").append(toIndentedString(undersPercent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action");
    openapiFields.add("budget_type_field_id");
    openapiFields.add("comments");
    openapiFields.add("custom_fields");
    openapiFields.add("order_completion_date");
    openapiFields.add("order_id");
    openapiFields.add("other_selection_reason");
    openapiFields.add("overs_percent");
    openapiFields.add("payment_method_id");
    openapiFields.add("payment_reference_no");
    openapiFields.add("reject_reason");
    openapiFields.add("supplier_selection_reason_id");
    openapiFields.add("unders_percent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderUpdPersistVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderUpdPersistVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderUpdPersistVO is not found in the empty JSON string", OrderUpdPersistVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderUpdPersistVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderUpdPersistVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
          }

          // validate the optional field `custom_fields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            CustomFieldPersistVO.validateJsonElement(jsonArraycustomFields.get(i));
          };
        }
      }
      if ((jsonObj.get("other_selection_reason") != null && !jsonObj.get("other_selection_reason").isJsonNull()) && !jsonObj.get("other_selection_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `other_selection_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("other_selection_reason").toString()));
      }
      if ((jsonObj.get("payment_reference_no") != null && !jsonObj.get("payment_reference_no").isJsonNull()) && !jsonObj.get("payment_reference_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_reference_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_reference_no").toString()));
      }
      if ((jsonObj.get("reject_reason") != null && !jsonObj.get("reject_reason").isJsonNull()) && !jsonObj.get("reject_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reject_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reject_reason").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderUpdPersistVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderUpdPersistVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderUpdPersistVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderUpdPersistVO.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderUpdPersistVO>() {
           @Override
           public void write(JsonWriter out, OrderUpdPersistVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderUpdPersistVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderUpdPersistVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderUpdPersistVO
   * @throws IOException if the JSON string is invalid with respect to OrderUpdPersistVO
   */
  public static OrderUpdPersistVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderUpdPersistVO.class);
  }

  /**
   * Convert an instance of OrderUpdPersistVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

