/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PaperItemPO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.domain.nooshapi.persist.po.EstimateItemPO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EstimateItemPO {
  public static final String SERIALIZED_NAME_PAPER_ITEMS = "paper_items";
  @SerializedName(SERIALIZED_NAME_PAPER_ITEMS)
  private List<PaperItemPO> paperItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUANTITY1_PRICE = "quantity_1_price";
  @SerializedName(SERIALIZED_NAME_QUANTITY1_PRICE)
  private Object quantity1Price = null;

  public static final String SERIALIZED_NAME_QUANTITY1_SHIPPING = "quantity_1_shipping";
  @SerializedName(SERIALIZED_NAME_QUANTITY1_SHIPPING)
  private Object quantity1Shipping = null;

  public static final String SERIALIZED_NAME_QUANTITY1_TAX = "quantity_1_tax";
  @SerializedName(SERIALIZED_NAME_QUANTITY1_TAX)
  private Object quantity1Tax = null;

  public static final String SERIALIZED_NAME_QUANTITY2_PRICE = "quantity_2_price";
  @SerializedName(SERIALIZED_NAME_QUANTITY2_PRICE)
  private Object quantity2Price = null;

  public static final String SERIALIZED_NAME_QUANTITY2_SHIPPING = "quantity_2_shipping";
  @SerializedName(SERIALIZED_NAME_QUANTITY2_SHIPPING)
  private Object quantity2Shipping = null;

  public static final String SERIALIZED_NAME_QUANTITY2_TAX = "quantity_2_tax";
  @SerializedName(SERIALIZED_NAME_QUANTITY2_TAX)
  private Object quantity2Tax = null;

  public static final String SERIALIZED_NAME_QUANTITY3_PRICE = "quantity_3_price";
  @SerializedName(SERIALIZED_NAME_QUANTITY3_PRICE)
  private Object quantity3Price = null;

  public static final String SERIALIZED_NAME_QUANTITY3_SHIPPING = "quantity_3_shipping";
  @SerializedName(SERIALIZED_NAME_QUANTITY3_SHIPPING)
  private Object quantity3Shipping = null;

  public static final String SERIALIZED_NAME_QUANTITY3_TAX = "quantity_3_tax";
  @SerializedName(SERIALIZED_NAME_QUANTITY3_TAX)
  private Object quantity3Tax = null;

  public static final String SERIALIZED_NAME_QUANTITY4_PRICE = "quantity_4_price";
  @SerializedName(SERIALIZED_NAME_QUANTITY4_PRICE)
  private Object quantity4Price = null;

  public static final String SERIALIZED_NAME_QUANTITY4_SHIPPING = "quantity_4_shipping";
  @SerializedName(SERIALIZED_NAME_QUANTITY4_SHIPPING)
  private Object quantity4Shipping = null;

  public static final String SERIALIZED_NAME_QUANTITY4_TAX = "quantity_4_tax";
  @SerializedName(SERIALIZED_NAME_QUANTITY4_TAX)
  private Object quantity4Tax = null;

  public static final String SERIALIZED_NAME_QUANTITY5_PRICE = "quantity_5_price";
  @SerializedName(SERIALIZED_NAME_QUANTITY5_PRICE)
  private Object quantity5Price = null;

  public static final String SERIALIZED_NAME_QUANTITY5_SHIPPING = "quantity_5_shipping";
  @SerializedName(SERIALIZED_NAME_QUANTITY5_SHIPPING)
  private Object quantity5Shipping = null;

  public static final String SERIALIZED_NAME_QUANTITY5_TAX = "quantity_5_tax";
  @SerializedName(SERIALIZED_NAME_QUANTITY5_TAX)
  private Object quantity5Tax = null;

  public static final String SERIALIZED_NAME_RFE_ITEM_ID = "rfe_item_id";
  @SerializedName(SERIALIZED_NAME_RFE_ITEM_ID)
  private Long rfeItemId;

  public EstimateItemPO() {
  }

  public EstimateItemPO paperItems(List<PaperItemPO> paperItems) {
    this.paperItems = paperItems;
    return this;
  }

  public EstimateItemPO addPaperItemsItem(PaperItemPO paperItemsItem) {
    if (this.paperItems == null) {
      this.paperItems = new ArrayList<>();
    }
    this.paperItems.add(paperItemsItem);
    return this;
  }

  /**
   * 
   * @return paperItems
   */
  @javax.annotation.Nullable
  public List<PaperItemPO> getPaperItems() {
    return paperItems;
  }

  public void setPaperItems(List<PaperItemPO> paperItems) {
    this.paperItems = paperItems;
  }


  public EstimateItemPO quantity1Price(Object quantity1Price) {
    this.quantity1Price = quantity1Price;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity1Price
   */
  @javax.annotation.Nullable
  public Object getQuantity1Price() {
    return quantity1Price;
  }

  public void setQuantity1Price(Object quantity1Price) {
    this.quantity1Price = quantity1Price;
  }


  public EstimateItemPO quantity1Shipping(Object quantity1Shipping) {
    this.quantity1Shipping = quantity1Shipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity1Shipping
   */
  @javax.annotation.Nullable
  public Object getQuantity1Shipping() {
    return quantity1Shipping;
  }

  public void setQuantity1Shipping(Object quantity1Shipping) {
    this.quantity1Shipping = quantity1Shipping;
  }


  public EstimateItemPO quantity1Tax(Object quantity1Tax) {
    this.quantity1Tax = quantity1Tax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity1Tax
   */
  @javax.annotation.Nullable
  public Object getQuantity1Tax() {
    return quantity1Tax;
  }

  public void setQuantity1Tax(Object quantity1Tax) {
    this.quantity1Tax = quantity1Tax;
  }


  public EstimateItemPO quantity2Price(Object quantity2Price) {
    this.quantity2Price = quantity2Price;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity2Price
   */
  @javax.annotation.Nullable
  public Object getQuantity2Price() {
    return quantity2Price;
  }

  public void setQuantity2Price(Object quantity2Price) {
    this.quantity2Price = quantity2Price;
  }


  public EstimateItemPO quantity2Shipping(Object quantity2Shipping) {
    this.quantity2Shipping = quantity2Shipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity2Shipping
   */
  @javax.annotation.Nullable
  public Object getQuantity2Shipping() {
    return quantity2Shipping;
  }

  public void setQuantity2Shipping(Object quantity2Shipping) {
    this.quantity2Shipping = quantity2Shipping;
  }


  public EstimateItemPO quantity2Tax(Object quantity2Tax) {
    this.quantity2Tax = quantity2Tax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity2Tax
   */
  @javax.annotation.Nullable
  public Object getQuantity2Tax() {
    return quantity2Tax;
  }

  public void setQuantity2Tax(Object quantity2Tax) {
    this.quantity2Tax = quantity2Tax;
  }


  public EstimateItemPO quantity3Price(Object quantity3Price) {
    this.quantity3Price = quantity3Price;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity3Price
   */
  @javax.annotation.Nullable
  public Object getQuantity3Price() {
    return quantity3Price;
  }

  public void setQuantity3Price(Object quantity3Price) {
    this.quantity3Price = quantity3Price;
  }


  public EstimateItemPO quantity3Shipping(Object quantity3Shipping) {
    this.quantity3Shipping = quantity3Shipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity3Shipping
   */
  @javax.annotation.Nullable
  public Object getQuantity3Shipping() {
    return quantity3Shipping;
  }

  public void setQuantity3Shipping(Object quantity3Shipping) {
    this.quantity3Shipping = quantity3Shipping;
  }


  public EstimateItemPO quantity3Tax(Object quantity3Tax) {
    this.quantity3Tax = quantity3Tax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity3Tax
   */
  @javax.annotation.Nullable
  public Object getQuantity3Tax() {
    return quantity3Tax;
  }

  public void setQuantity3Tax(Object quantity3Tax) {
    this.quantity3Tax = quantity3Tax;
  }


  public EstimateItemPO quantity4Price(Object quantity4Price) {
    this.quantity4Price = quantity4Price;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity4Price
   */
  @javax.annotation.Nullable
  public Object getQuantity4Price() {
    return quantity4Price;
  }

  public void setQuantity4Price(Object quantity4Price) {
    this.quantity4Price = quantity4Price;
  }


  public EstimateItemPO quantity4Shipping(Object quantity4Shipping) {
    this.quantity4Shipping = quantity4Shipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity4Shipping
   */
  @javax.annotation.Nullable
  public Object getQuantity4Shipping() {
    return quantity4Shipping;
  }

  public void setQuantity4Shipping(Object quantity4Shipping) {
    this.quantity4Shipping = quantity4Shipping;
  }


  public EstimateItemPO quantity4Tax(Object quantity4Tax) {
    this.quantity4Tax = quantity4Tax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity4Tax
   */
  @javax.annotation.Nullable
  public Object getQuantity4Tax() {
    return quantity4Tax;
  }

  public void setQuantity4Tax(Object quantity4Tax) {
    this.quantity4Tax = quantity4Tax;
  }


  public EstimateItemPO quantity5Price(Object quantity5Price) {
    this.quantity5Price = quantity5Price;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity5Price
   */
  @javax.annotation.Nullable
  public Object getQuantity5Price() {
    return quantity5Price;
  }

  public void setQuantity5Price(Object quantity5Price) {
    this.quantity5Price = quantity5Price;
  }


  public EstimateItemPO quantity5Shipping(Object quantity5Shipping) {
    this.quantity5Shipping = quantity5Shipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity5Shipping
   */
  @javax.annotation.Nullable
  public Object getQuantity5Shipping() {
    return quantity5Shipping;
  }

  public void setQuantity5Shipping(Object quantity5Shipping) {
    this.quantity5Shipping = quantity5Shipping;
  }


  public EstimateItemPO quantity5Tax(Object quantity5Tax) {
    this.quantity5Tax = quantity5Tax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity5Tax
   */
  @javax.annotation.Nullable
  public Object getQuantity5Tax() {
    return quantity5Tax;
  }

  public void setQuantity5Tax(Object quantity5Tax) {
    this.quantity5Tax = quantity5Tax;
  }


  public EstimateItemPO rfeItemId(Long rfeItemId) {
    this.rfeItemId = rfeItemId;
    return this;
  }

  /**
   * 
   * @return rfeItemId
   */
  @javax.annotation.Nullable
  public Long getRfeItemId() {
    return rfeItemId;
  }

  public void setRfeItemId(Long rfeItemId) {
    this.rfeItemId = rfeItemId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimateItemPO estimateItemPO = (EstimateItemPO) o;
    return Objects.equals(this.paperItems, estimateItemPO.paperItems) &&
        Objects.equals(this.quantity1Price, estimateItemPO.quantity1Price) &&
        Objects.equals(this.quantity1Shipping, estimateItemPO.quantity1Shipping) &&
        Objects.equals(this.quantity1Tax, estimateItemPO.quantity1Tax) &&
        Objects.equals(this.quantity2Price, estimateItemPO.quantity2Price) &&
        Objects.equals(this.quantity2Shipping, estimateItemPO.quantity2Shipping) &&
        Objects.equals(this.quantity2Tax, estimateItemPO.quantity2Tax) &&
        Objects.equals(this.quantity3Price, estimateItemPO.quantity3Price) &&
        Objects.equals(this.quantity3Shipping, estimateItemPO.quantity3Shipping) &&
        Objects.equals(this.quantity3Tax, estimateItemPO.quantity3Tax) &&
        Objects.equals(this.quantity4Price, estimateItemPO.quantity4Price) &&
        Objects.equals(this.quantity4Shipping, estimateItemPO.quantity4Shipping) &&
        Objects.equals(this.quantity4Tax, estimateItemPO.quantity4Tax) &&
        Objects.equals(this.quantity5Price, estimateItemPO.quantity5Price) &&
        Objects.equals(this.quantity5Shipping, estimateItemPO.quantity5Shipping) &&
        Objects.equals(this.quantity5Tax, estimateItemPO.quantity5Tax) &&
        Objects.equals(this.rfeItemId, estimateItemPO.rfeItemId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(paperItems, quantity1Price, quantity1Shipping, quantity1Tax, quantity2Price, quantity2Shipping, quantity2Tax, quantity3Price, quantity3Shipping, quantity3Tax, quantity4Price, quantity4Shipping, quantity4Tax, quantity5Price, quantity5Shipping, quantity5Tax, rfeItemId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimateItemPO {\n");
    sb.append("    paperItems: ").append(toIndentedString(paperItems)).append("\n");
    sb.append("    quantity1Price: ").append(toIndentedString(quantity1Price)).append("\n");
    sb.append("    quantity1Shipping: ").append(toIndentedString(quantity1Shipping)).append("\n");
    sb.append("    quantity1Tax: ").append(toIndentedString(quantity1Tax)).append("\n");
    sb.append("    quantity2Price: ").append(toIndentedString(quantity2Price)).append("\n");
    sb.append("    quantity2Shipping: ").append(toIndentedString(quantity2Shipping)).append("\n");
    sb.append("    quantity2Tax: ").append(toIndentedString(quantity2Tax)).append("\n");
    sb.append("    quantity3Price: ").append(toIndentedString(quantity3Price)).append("\n");
    sb.append("    quantity3Shipping: ").append(toIndentedString(quantity3Shipping)).append("\n");
    sb.append("    quantity3Tax: ").append(toIndentedString(quantity3Tax)).append("\n");
    sb.append("    quantity4Price: ").append(toIndentedString(quantity4Price)).append("\n");
    sb.append("    quantity4Shipping: ").append(toIndentedString(quantity4Shipping)).append("\n");
    sb.append("    quantity4Tax: ").append(toIndentedString(quantity4Tax)).append("\n");
    sb.append("    quantity5Price: ").append(toIndentedString(quantity5Price)).append("\n");
    sb.append("    quantity5Shipping: ").append(toIndentedString(quantity5Shipping)).append("\n");
    sb.append("    quantity5Tax: ").append(toIndentedString(quantity5Tax)).append("\n");
    sb.append("    rfeItemId: ").append(toIndentedString(rfeItemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("paper_items");
    openapiFields.add("quantity_1_price");
    openapiFields.add("quantity_1_shipping");
    openapiFields.add("quantity_1_tax");
    openapiFields.add("quantity_2_price");
    openapiFields.add("quantity_2_shipping");
    openapiFields.add("quantity_2_tax");
    openapiFields.add("quantity_3_price");
    openapiFields.add("quantity_3_shipping");
    openapiFields.add("quantity_3_tax");
    openapiFields.add("quantity_4_price");
    openapiFields.add("quantity_4_shipping");
    openapiFields.add("quantity_4_tax");
    openapiFields.add("quantity_5_price");
    openapiFields.add("quantity_5_shipping");
    openapiFields.add("quantity_5_tax");
    openapiFields.add("rfe_item_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EstimateItemPO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EstimateItemPO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EstimateItemPO is not found in the empty JSON string", EstimateItemPO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EstimateItemPO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EstimateItemPO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("paper_items") != null && !jsonObj.get("paper_items").isJsonNull()) {
        JsonArray jsonArraypaperItems = jsonObj.getAsJsonArray("paper_items");
        if (jsonArraypaperItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("paper_items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `paper_items` to be an array in the JSON string but got `%s`", jsonObj.get("paper_items").toString()));
          }

          // validate the optional field `paper_items` (array)
          for (int i = 0; i < jsonArraypaperItems.size(); i++) {
            PaperItemPO.validateJsonElement(jsonArraypaperItems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EstimateItemPO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EstimateItemPO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EstimateItemPO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EstimateItemPO.class));

       return (TypeAdapter<T>) new TypeAdapter<EstimateItemPO>() {
           @Override
           public void write(JsonWriter out, EstimateItemPO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EstimateItemPO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EstimateItemPO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EstimateItemPO
   * @throws IOException if the JSON string is invalid with respect to EstimateItemPO
   */
  public static EstimateItemPO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EstimateItemPO.class);
  }

  /**
   * Convert an instance of EstimateItemPO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

