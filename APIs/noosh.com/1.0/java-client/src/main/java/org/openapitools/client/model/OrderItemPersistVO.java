/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CustomFieldPersistVO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.domain.nooshapi.persist.vo.OrderItemPersistVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderItemPersistVO {
  public static final String SERIALIZED_NAME_COMPLETION_DATE = "completion_date";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private LocalDate completionDate;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<CustomFieldPersistVO> customFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_EX_TAX_VALUE_CALCULATED = "ex_tax_value_calculated";
  @SerializedName(SERIALIZED_NAME_EX_TAX_VALUE_CALCULATED)
  private Object exTaxValueCalculated = null;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PER = "per";
  @SerializedName(SERIALIZED_NAME_PER)
  private Long per;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Object price = null;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Object quantity = null;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private Object shipping = null;

  public static final String SERIALIZED_NAME_SPEC_ID = "spec_id";
  @SerializedName(SERIALIZED_NAME_SPEC_ID)
  private Long specId;

  public static final String SERIALIZED_NAME_SPEC_REFERENCE_ID = "spec_reference_id";
  @SerializedName(SERIALIZED_NAME_SPEC_REFERENCE_ID)
  private Long specReferenceId;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private String tax;

  public OrderItemPersistVO() {
  }

  public OrderItemPersistVO completionDate(LocalDate completionDate) {
    this.completionDate = completionDate;
    return this;
  }

  /**
   * 
   * @return completionDate
   */
  @javax.annotation.Nullable
  public LocalDate getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(LocalDate completionDate) {
    this.completionDate = completionDate;
  }


  public OrderItemPersistVO customFields(List<CustomFieldPersistVO> customFields) {
    this.customFields = customFields;
    return this;
  }

  public OrderItemPersistVO addCustomFieldsItem(CustomFieldPersistVO customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

  /**
   * 
   * @return customFields
   */
  @javax.annotation.Nullable
  public List<CustomFieldPersistVO> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<CustomFieldPersistVO> customFields) {
    this.customFields = customFields;
  }


  public OrderItemPersistVO exTaxValueCalculated(Object exTaxValueCalculated) {
    this.exTaxValueCalculated = exTaxValueCalculated;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return exTaxValueCalculated
   */
  @javax.annotation.Nullable
  public Object getExTaxValueCalculated() {
    return exTaxValueCalculated;
  }

  public void setExTaxValueCalculated(Object exTaxValueCalculated) {
    this.exTaxValueCalculated = exTaxValueCalculated;
  }


  public OrderItemPersistVO notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * 
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public OrderItemPersistVO per(Long per) {
    this.per = per;
    return this;
  }

  /**
   * 
   * @return per
   */
  @javax.annotation.Nullable
  public Long getPer() {
    return per;
  }

  public void setPer(Long per) {
    this.per = per;
  }


  public OrderItemPersistVO price(Object price) {
    this.price = price;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return price
   */
  @javax.annotation.Nullable
  public Object getPrice() {
    return price;
  }

  public void setPrice(Object price) {
    this.price = price;
  }


  public OrderItemPersistVO quantity(Object quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return quantity
   */
  @javax.annotation.Nullable
  public Object getQuantity() {
    return quantity;
  }

  public void setQuantity(Object quantity) {
    this.quantity = quantity;
  }


  public OrderItemPersistVO shipping(Object shipping) {
    this.shipping = shipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return shipping
   */
  @javax.annotation.Nullable
  public Object getShipping() {
    return shipping;
  }

  public void setShipping(Object shipping) {
    this.shipping = shipping;
  }


  public OrderItemPersistVO specId(Long specId) {
    this.specId = specId;
    return this;
  }

  /**
   * 
   * @return specId
   */
  @javax.annotation.Nullable
  public Long getSpecId() {
    return specId;
  }

  public void setSpecId(Long specId) {
    this.specId = specId;
  }


  public OrderItemPersistVO specReferenceId(Long specReferenceId) {
    this.specReferenceId = specReferenceId;
    return this;
  }

  /**
   * 
   * @return specReferenceId
   */
  @javax.annotation.Nullable
  public Long getSpecReferenceId() {
    return specReferenceId;
  }

  public void setSpecReferenceId(Long specReferenceId) {
    this.specReferenceId = specReferenceId;
  }


  public OrderItemPersistVO tax(String tax) {
    this.tax = tax;
    return this;
  }

  /**
   * 
   * @return tax
   */
  @javax.annotation.Nullable
  public String getTax() {
    return tax;
  }

  public void setTax(String tax) {
    this.tax = tax;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderItemPersistVO orderItemPersistVO = (OrderItemPersistVO) o;
    return Objects.equals(this.completionDate, orderItemPersistVO.completionDate) &&
        Objects.equals(this.customFields, orderItemPersistVO.customFields) &&
        Objects.equals(this.exTaxValueCalculated, orderItemPersistVO.exTaxValueCalculated) &&
        Objects.equals(this.notes, orderItemPersistVO.notes) &&
        Objects.equals(this.per, orderItemPersistVO.per) &&
        Objects.equals(this.price, orderItemPersistVO.price) &&
        Objects.equals(this.quantity, orderItemPersistVO.quantity) &&
        Objects.equals(this.shipping, orderItemPersistVO.shipping) &&
        Objects.equals(this.specId, orderItemPersistVO.specId) &&
        Objects.equals(this.specReferenceId, orderItemPersistVO.specReferenceId) &&
        Objects.equals(this.tax, orderItemPersistVO.tax);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(completionDate, customFields, exTaxValueCalculated, notes, per, price, quantity, shipping, specId, specReferenceId, tax);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderItemPersistVO {\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    exTaxValueCalculated: ").append(toIndentedString(exTaxValueCalculated)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    per: ").append(toIndentedString(per)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    specId: ").append(toIndentedString(specId)).append("\n");
    sb.append("    specReferenceId: ").append(toIndentedString(specReferenceId)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("completion_date");
    openapiFields.add("custom_fields");
    openapiFields.add("ex_tax_value_calculated");
    openapiFields.add("notes");
    openapiFields.add("per");
    openapiFields.add("price");
    openapiFields.add("quantity");
    openapiFields.add("shipping");
    openapiFields.add("spec_id");
    openapiFields.add("spec_reference_id");
    openapiFields.add("tax");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderItemPersistVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderItemPersistVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderItemPersistVO is not found in the empty JSON string", OrderItemPersistVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderItemPersistVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderItemPersistVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
          }

          // validate the optional field `custom_fields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            CustomFieldPersistVO.validateJsonElement(jsonArraycustomFields.get(i));
          };
        }
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("tax") != null && !jsonObj.get("tax").isJsonNull()) && !jsonObj.get("tax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderItemPersistVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderItemPersistVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderItemPersistVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderItemPersistVO.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderItemPersistVO>() {
           @Override
           public void write(JsonWriter out, OrderItemPersistVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderItemPersistVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderItemPersistVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderItemPersistVO
   * @throws IOException if the JSON string is invalid with respect to OrderItemPersistVO
   */
  public static OrderItemPersistVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderItemPersistVO.class);
  }

  /**
   * Convert an instance of OrderItemPersistVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

