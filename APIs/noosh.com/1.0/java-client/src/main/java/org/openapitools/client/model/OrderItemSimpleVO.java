/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PropertyPaAndAttVO;
import org.openapitools.client.model.SpecBaseVO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.nooshapi.vo.OrderItemSimpleVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderItemSimpleVO {
  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_COMPLETION_DATE = "completion_date";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private LocalDate completionDate;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<PropertyPaAndAttVO> customFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private Long itemId;

  public static final String SERIALIZED_NAME_ITEM_PRICE = "item_price";
  @SerializedName(SERIALIZED_NAME_ITEM_PRICE)
  private Double itemPrice;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Double quantity;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private Object shipping = null;

  public static final String SERIALIZED_NAME_SPEC = "spec";
  @SerializedName(SERIALIZED_NAME_SPEC)
  private SpecBaseVO spec;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private Object tax = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ITEM_PRICE = "transactional_item_price";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ITEM_PRICE)
  private Double transactionalItemPrice;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_SHIPPING = "transactional_shipping";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_SHIPPING)
  private Object transactionalShipping = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_TAX = "transactional_tax";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_TAX)
  private Object transactionalTax = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_UNIT_PRICE = "transactional_unit_price";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_UNIT_PRICE)
  private Object transactionalUnitPrice = null;

  public static final String SERIALIZED_NAME_UNIT_DESCRIPTION = "unit_description";
  @SerializedName(SERIALIZED_NAME_UNIT_DESCRIPTION)
  private String unitDescription;

  public static final String SERIALIZED_NAME_UNIT_PRICE = "unit_price";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE)
  private Object unitPrice = null;

  public OrderItemSimpleVO() {
  }

  public OrderItemSimpleVO comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * 
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public OrderItemSimpleVO completionDate(LocalDate completionDate) {
    this.completionDate = completionDate;
    return this;
  }

  /**
   * 
   * @return completionDate
   */
  @javax.annotation.Nullable
  public LocalDate getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(LocalDate completionDate) {
    this.completionDate = completionDate;
  }


  public OrderItemSimpleVO customFields(List<PropertyPaAndAttVO> customFields) {
    this.customFields = customFields;
    return this;
  }

  public OrderItemSimpleVO addCustomFieldsItem(PropertyPaAndAttVO customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

  /**
   * 
   * @return customFields
   */
  @javax.annotation.Nullable
  public List<PropertyPaAndAttVO> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<PropertyPaAndAttVO> customFields) {
    this.customFields = customFields;
  }


  public OrderItemSimpleVO itemId(Long itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * 
   * @return itemId
   */
  @javax.annotation.Nullable
  public Long getItemId() {
    return itemId;
  }

  public void setItemId(Long itemId) {
    this.itemId = itemId;
  }


  public OrderItemSimpleVO itemPrice(Double itemPrice) {
    this.itemPrice = itemPrice;
    return this;
  }

  /**
   * 
   * @return itemPrice
   */
  @javax.annotation.Nullable
  public Double getItemPrice() {
    return itemPrice;
  }

  public void setItemPrice(Double itemPrice) {
    this.itemPrice = itemPrice;
  }


  public OrderItemSimpleVO quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * 
   * @return quantity
   */
  @javax.annotation.Nullable
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  public OrderItemSimpleVO shipping(Object shipping) {
    this.shipping = shipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return shipping
   */
  @javax.annotation.Nullable
  public Object getShipping() {
    return shipping;
  }

  public void setShipping(Object shipping) {
    this.shipping = shipping;
  }


  public OrderItemSimpleVO spec(SpecBaseVO spec) {
    this.spec = spec;
    return this;
  }

  /**
   * Get spec
   * @return spec
   */
  @javax.annotation.Nullable
  public SpecBaseVO getSpec() {
    return spec;
  }

  public void setSpec(SpecBaseVO spec) {
    this.spec = spec;
  }


  public OrderItemSimpleVO tax(Object tax) {
    this.tax = tax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return tax
   */
  @javax.annotation.Nullable
  public Object getTax() {
    return tax;
  }

  public void setTax(Object tax) {
    this.tax = tax;
  }


  public OrderItemSimpleVO transactionalItemPrice(Double transactionalItemPrice) {
    this.transactionalItemPrice = transactionalItemPrice;
    return this;
  }

  /**
   * 
   * @return transactionalItemPrice
   */
  @javax.annotation.Nullable
  public Double getTransactionalItemPrice() {
    return transactionalItemPrice;
  }

  public void setTransactionalItemPrice(Double transactionalItemPrice) {
    this.transactionalItemPrice = transactionalItemPrice;
  }


  public OrderItemSimpleVO transactionalShipping(Object transactionalShipping) {
    this.transactionalShipping = transactionalShipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalShipping
   */
  @javax.annotation.Nullable
  public Object getTransactionalShipping() {
    return transactionalShipping;
  }

  public void setTransactionalShipping(Object transactionalShipping) {
    this.transactionalShipping = transactionalShipping;
  }


  public OrderItemSimpleVO transactionalTax(Object transactionalTax) {
    this.transactionalTax = transactionalTax;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalTax
   */
  @javax.annotation.Nullable
  public Object getTransactionalTax() {
    return transactionalTax;
  }

  public void setTransactionalTax(Object transactionalTax) {
    this.transactionalTax = transactionalTax;
  }


  public OrderItemSimpleVO transactionalUnitPrice(Object transactionalUnitPrice) {
    this.transactionalUnitPrice = transactionalUnitPrice;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalUnitPrice
   */
  @javax.annotation.Nullable
  public Object getTransactionalUnitPrice() {
    return transactionalUnitPrice;
  }

  public void setTransactionalUnitPrice(Object transactionalUnitPrice) {
    this.transactionalUnitPrice = transactionalUnitPrice;
  }


  public OrderItemSimpleVO unitDescription(String unitDescription) {
    this.unitDescription = unitDescription;
    return this;
  }

  /**
   * 
   * @return unitDescription
   */
  @javax.annotation.Nullable
  public String getUnitDescription() {
    return unitDescription;
  }

  public void setUnitDescription(String unitDescription) {
    this.unitDescription = unitDescription;
  }


  public OrderItemSimpleVO unitPrice(Object unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return unitPrice
   */
  @javax.annotation.Nullable
  public Object getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(Object unitPrice) {
    this.unitPrice = unitPrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderItemSimpleVO orderItemSimpleVO = (OrderItemSimpleVO) o;
    return Objects.equals(this.comments, orderItemSimpleVO.comments) &&
        Objects.equals(this.completionDate, orderItemSimpleVO.completionDate) &&
        Objects.equals(this.customFields, orderItemSimpleVO.customFields) &&
        Objects.equals(this.itemId, orderItemSimpleVO.itemId) &&
        Objects.equals(this.itemPrice, orderItemSimpleVO.itemPrice) &&
        Objects.equals(this.quantity, orderItemSimpleVO.quantity) &&
        Objects.equals(this.shipping, orderItemSimpleVO.shipping) &&
        Objects.equals(this.spec, orderItemSimpleVO.spec) &&
        Objects.equals(this.tax, orderItemSimpleVO.tax) &&
        Objects.equals(this.transactionalItemPrice, orderItemSimpleVO.transactionalItemPrice) &&
        Objects.equals(this.transactionalShipping, orderItemSimpleVO.transactionalShipping) &&
        Objects.equals(this.transactionalTax, orderItemSimpleVO.transactionalTax) &&
        Objects.equals(this.transactionalUnitPrice, orderItemSimpleVO.transactionalUnitPrice) &&
        Objects.equals(this.unitDescription, orderItemSimpleVO.unitDescription) &&
        Objects.equals(this.unitPrice, orderItemSimpleVO.unitPrice);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(comments, completionDate, customFields, itemId, itemPrice, quantity, shipping, spec, tax, transactionalItemPrice, transactionalShipping, transactionalTax, transactionalUnitPrice, unitDescription, unitPrice);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderItemSimpleVO {\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    itemPrice: ").append(toIndentedString(itemPrice)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    spec: ").append(toIndentedString(spec)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    transactionalItemPrice: ").append(toIndentedString(transactionalItemPrice)).append("\n");
    sb.append("    transactionalShipping: ").append(toIndentedString(transactionalShipping)).append("\n");
    sb.append("    transactionalTax: ").append(toIndentedString(transactionalTax)).append("\n");
    sb.append("    transactionalUnitPrice: ").append(toIndentedString(transactionalUnitPrice)).append("\n");
    sb.append("    unitDescription: ").append(toIndentedString(unitDescription)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("comments");
    openapiFields.add("completion_date");
    openapiFields.add("custom_fields");
    openapiFields.add("item_id");
    openapiFields.add("item_price");
    openapiFields.add("quantity");
    openapiFields.add("shipping");
    openapiFields.add("spec");
    openapiFields.add("tax");
    openapiFields.add("transactional_item_price");
    openapiFields.add("transactional_shipping");
    openapiFields.add("transactional_tax");
    openapiFields.add("transactional_unit_price");
    openapiFields.add("unit_description");
    openapiFields.add("unit_price");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderItemSimpleVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderItemSimpleVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderItemSimpleVO is not found in the empty JSON string", OrderItemSimpleVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderItemSimpleVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderItemSimpleVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
          }

          // validate the optional field `custom_fields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            PropertyPaAndAttVO.validateJsonElement(jsonArraycustomFields.get(i));
          };
        }
      }
      // validate the optional field `spec`
      if (jsonObj.get("spec") != null && !jsonObj.get("spec").isJsonNull()) {
        SpecBaseVO.validateJsonElement(jsonObj.get("spec"));
      }
      if ((jsonObj.get("unit_description") != null && !jsonObj.get("unit_description").isJsonNull()) && !jsonObj.get("unit_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unit_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unit_description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderItemSimpleVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderItemSimpleVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderItemSimpleVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderItemSimpleVO.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderItemSimpleVO>() {
           @Override
           public void write(JsonWriter out, OrderItemSimpleVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderItemSimpleVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderItemSimpleVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderItemSimpleVO
   * @throws IOException if the JSON string is invalid with respect to OrderItemSimpleVO
   */
  public static OrderItemSimpleVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderItemSimpleVO.class);
  }

  /**
   * Convert an instance of OrderItemSimpleVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

