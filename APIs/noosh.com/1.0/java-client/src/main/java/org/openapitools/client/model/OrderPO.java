/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CustomFieldPersistVO;
import org.openapitools.client.model.OrderItemPersistVO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.domain.nooshapi.persist.po.OrderPO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderPO {
  public static final String SERIALIZED_NAME_BUYER_USER_ID = "buyer_user_id";
  @SerializedName(SERIALIZED_NAME_BUYER_USER_ID)
  private Long buyerUserId;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<CustomFieldPersistVO> customFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_INVOICE_OR_BILLING_RECIPIENT = "invoice_or_billing_recipient";
  @SerializedName(SERIALIZED_NAME_INVOICE_OR_BILLING_RECIPIENT)
  private Long invoiceOrBillingRecipient;

  public static final String SERIALIZED_NAME_ORDER_COMPLETION_DATE = "order_completion_date";
  @SerializedName(SERIALIZED_NAME_ORDER_COMPLETION_DATE)
  private LocalDate orderCompletionDate;

  public static final String SERIALIZED_NAME_ORDER_ITEMS = "order_items";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEMS)
  private List<OrderItemPersistVO> orderItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_OTHER_SELECTION_REASON = "other_selection_reason";
  @SerializedName(SERIALIZED_NAME_OTHER_SELECTION_REASON)
  private String otherSelectionReason;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_ID = "payment_method_id";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_ID)
  private Long paymentMethodId;

  public static final String SERIALIZED_NAME_PAYMENT_REFERENCE_NO = "payment_reference_no";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REFERENCE_NO)
  private String paymentReferenceNo;

  public static final String SERIALIZED_NAME_SELL_ORDER = "sellOrder";
  @SerializedName(SERIALIZED_NAME_SELL_ORDER)
  private Boolean sellOrder;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private Object shipping = null;

  public static final String SERIALIZED_NAME_SUPPLIER_REFERENCE = "supplier_reference";
  @SerializedName(SERIALIZED_NAME_SUPPLIER_REFERENCE)
  private String supplierReference;

  public static final String SERIALIZED_NAME_SUPPLIER_SELECTION_REASON_ID = "supplier_selection_reason_id";
  @SerializedName(SERIALIZED_NAME_SUPPLIER_SELECTION_REASON_ID)
  private Long supplierSelectionReasonId;

  public static final String SERIALIZED_NAME_SUPPLIER_USER_ID = "supplier_user_id";
  @SerializedName(SERIALIZED_NAME_SUPPLIER_USER_ID)
  private Long supplierUserId;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private String tax;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public OrderPO() {
  }

  public OrderPO buyerUserId(Long buyerUserId) {
    this.buyerUserId = buyerUserId;
    return this;
  }

  /**
   * 
   * @return buyerUserId
   */
  @javax.annotation.Nullable
  public Long getBuyerUserId() {
    return buyerUserId;
  }

  public void setBuyerUserId(Long buyerUserId) {
    this.buyerUserId = buyerUserId;
  }


  public OrderPO comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * 
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public OrderPO customFields(List<CustomFieldPersistVO> customFields) {
    this.customFields = customFields;
    return this;
  }

  public OrderPO addCustomFieldsItem(CustomFieldPersistVO customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

  /**
   * 
   * @return customFields
   */
  @javax.annotation.Nullable
  public List<CustomFieldPersistVO> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<CustomFieldPersistVO> customFields) {
    this.customFields = customFields;
  }


  public OrderPO invoiceOrBillingRecipient(Long invoiceOrBillingRecipient) {
    this.invoiceOrBillingRecipient = invoiceOrBillingRecipient;
    return this;
  }

  /**
   * 
   * @return invoiceOrBillingRecipient
   */
  @javax.annotation.Nullable
  public Long getInvoiceOrBillingRecipient() {
    return invoiceOrBillingRecipient;
  }

  public void setInvoiceOrBillingRecipient(Long invoiceOrBillingRecipient) {
    this.invoiceOrBillingRecipient = invoiceOrBillingRecipient;
  }


  public OrderPO orderCompletionDate(LocalDate orderCompletionDate) {
    this.orderCompletionDate = orderCompletionDate;
    return this;
  }

  /**
   * 
   * @return orderCompletionDate
   */
  @javax.annotation.Nullable
  public LocalDate getOrderCompletionDate() {
    return orderCompletionDate;
  }

  public void setOrderCompletionDate(LocalDate orderCompletionDate) {
    this.orderCompletionDate = orderCompletionDate;
  }


  public OrderPO orderItems(List<OrderItemPersistVO> orderItems) {
    this.orderItems = orderItems;
    return this;
  }

  public OrderPO addOrderItemsItem(OrderItemPersistVO orderItemsItem) {
    if (this.orderItems == null) {
      this.orderItems = new ArrayList<>();
    }
    this.orderItems.add(orderItemsItem);
    return this;
  }

  /**
   * 
   * @return orderItems
   */
  @javax.annotation.Nullable
  public List<OrderItemPersistVO> getOrderItems() {
    return orderItems;
  }

  public void setOrderItems(List<OrderItemPersistVO> orderItems) {
    this.orderItems = orderItems;
  }


  public OrderPO otherSelectionReason(String otherSelectionReason) {
    this.otherSelectionReason = otherSelectionReason;
    return this;
  }

  /**
   * 
   * @return otherSelectionReason
   */
  @javax.annotation.Nullable
  public String getOtherSelectionReason() {
    return otherSelectionReason;
  }

  public void setOtherSelectionReason(String otherSelectionReason) {
    this.otherSelectionReason = otherSelectionReason;
  }


  public OrderPO paymentMethodId(Long paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

  /**
   * 
   * @return paymentMethodId
   */
  @javax.annotation.Nullable
  public Long getPaymentMethodId() {
    return paymentMethodId;
  }

  public void setPaymentMethodId(Long paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }


  public OrderPO paymentReferenceNo(String paymentReferenceNo) {
    this.paymentReferenceNo = paymentReferenceNo;
    return this;
  }

  /**
   * 
   * @return paymentReferenceNo
   */
  @javax.annotation.Nullable
  public String getPaymentReferenceNo() {
    return paymentReferenceNo;
  }

  public void setPaymentReferenceNo(String paymentReferenceNo) {
    this.paymentReferenceNo = paymentReferenceNo;
  }


  public OrderPO sellOrder(Boolean sellOrder) {
    this.sellOrder = sellOrder;
    return this;
  }

  /**
   * 
   * @return sellOrder
   */
  @javax.annotation.Nullable
  public Boolean getSellOrder() {
    return sellOrder;
  }

  public void setSellOrder(Boolean sellOrder) {
    this.sellOrder = sellOrder;
  }


  public OrderPO shipping(Object shipping) {
    this.shipping = shipping;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return shipping
   */
  @javax.annotation.Nullable
  public Object getShipping() {
    return shipping;
  }

  public void setShipping(Object shipping) {
    this.shipping = shipping;
  }


  public OrderPO supplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
    return this;
  }

  /**
   * 
   * @return supplierReference
   */
  @javax.annotation.Nullable
  public String getSupplierReference() {
    return supplierReference;
  }

  public void setSupplierReference(String supplierReference) {
    this.supplierReference = supplierReference;
  }


  public OrderPO supplierSelectionReasonId(Long supplierSelectionReasonId) {
    this.supplierSelectionReasonId = supplierSelectionReasonId;
    return this;
  }

  /**
   * 
   * @return supplierSelectionReasonId
   */
  @javax.annotation.Nullable
  public Long getSupplierSelectionReasonId() {
    return supplierSelectionReasonId;
  }

  public void setSupplierSelectionReasonId(Long supplierSelectionReasonId) {
    this.supplierSelectionReasonId = supplierSelectionReasonId;
  }


  public OrderPO supplierUserId(Long supplierUserId) {
    this.supplierUserId = supplierUserId;
    return this;
  }

  /**
   * 
   * @return supplierUserId
   */
  @javax.annotation.Nullable
  public Long getSupplierUserId() {
    return supplierUserId;
  }

  public void setSupplierUserId(Long supplierUserId) {
    this.supplierUserId = supplierUserId;
  }


  public OrderPO tax(String tax) {
    this.tax = tax;
    return this;
  }

  /**
   * 
   * @return tax
   */
  @javax.annotation.Nullable
  public String getTax() {
    return tax;
  }

  public void setTax(String tax) {
    this.tax = tax;
  }


  public OrderPO title(String title) {
    this.title = title;
    return this;
  }

  /**
   * 
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderPO orderPO = (OrderPO) o;
    return Objects.equals(this.buyerUserId, orderPO.buyerUserId) &&
        Objects.equals(this.comments, orderPO.comments) &&
        Objects.equals(this.customFields, orderPO.customFields) &&
        Objects.equals(this.invoiceOrBillingRecipient, orderPO.invoiceOrBillingRecipient) &&
        Objects.equals(this.orderCompletionDate, orderPO.orderCompletionDate) &&
        Objects.equals(this.orderItems, orderPO.orderItems) &&
        Objects.equals(this.otherSelectionReason, orderPO.otherSelectionReason) &&
        Objects.equals(this.paymentMethodId, orderPO.paymentMethodId) &&
        Objects.equals(this.paymentReferenceNo, orderPO.paymentReferenceNo) &&
        Objects.equals(this.sellOrder, orderPO.sellOrder) &&
        Objects.equals(this.shipping, orderPO.shipping) &&
        Objects.equals(this.supplierReference, orderPO.supplierReference) &&
        Objects.equals(this.supplierSelectionReasonId, orderPO.supplierSelectionReasonId) &&
        Objects.equals(this.supplierUserId, orderPO.supplierUserId) &&
        Objects.equals(this.tax, orderPO.tax) &&
        Objects.equals(this.title, orderPO.title);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(buyerUserId, comments, customFields, invoiceOrBillingRecipient, orderCompletionDate, orderItems, otherSelectionReason, paymentMethodId, paymentReferenceNo, sellOrder, shipping, supplierReference, supplierSelectionReasonId, supplierUserId, tax, title);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderPO {\n");
    sb.append("    buyerUserId: ").append(toIndentedString(buyerUserId)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    invoiceOrBillingRecipient: ").append(toIndentedString(invoiceOrBillingRecipient)).append("\n");
    sb.append("    orderCompletionDate: ").append(toIndentedString(orderCompletionDate)).append("\n");
    sb.append("    orderItems: ").append(toIndentedString(orderItems)).append("\n");
    sb.append("    otherSelectionReason: ").append(toIndentedString(otherSelectionReason)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    paymentReferenceNo: ").append(toIndentedString(paymentReferenceNo)).append("\n");
    sb.append("    sellOrder: ").append(toIndentedString(sellOrder)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    supplierReference: ").append(toIndentedString(supplierReference)).append("\n");
    sb.append("    supplierSelectionReasonId: ").append(toIndentedString(supplierSelectionReasonId)).append("\n");
    sb.append("    supplierUserId: ").append(toIndentedString(supplierUserId)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("buyer_user_id");
    openapiFields.add("comments");
    openapiFields.add("custom_fields");
    openapiFields.add("invoice_or_billing_recipient");
    openapiFields.add("order_completion_date");
    openapiFields.add("order_items");
    openapiFields.add("other_selection_reason");
    openapiFields.add("payment_method_id");
    openapiFields.add("payment_reference_no");
    openapiFields.add("sellOrder");
    openapiFields.add("shipping");
    openapiFields.add("supplier_reference");
    openapiFields.add("supplier_selection_reason_id");
    openapiFields.add("supplier_user_id");
    openapiFields.add("tax");
    openapiFields.add("title");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderPO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderPO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderPO is not found in the empty JSON string", OrderPO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderPO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderPO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
          }

          // validate the optional field `custom_fields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            CustomFieldPersistVO.validateJsonElement(jsonArraycustomFields.get(i));
          };
        }
      }
      if (jsonObj.get("order_items") != null && !jsonObj.get("order_items").isJsonNull()) {
        JsonArray jsonArrayorderItems = jsonObj.getAsJsonArray("order_items");
        if (jsonArrayorderItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("order_items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `order_items` to be an array in the JSON string but got `%s`", jsonObj.get("order_items").toString()));
          }

          // validate the optional field `order_items` (array)
          for (int i = 0; i < jsonArrayorderItems.size(); i++) {
            OrderItemPersistVO.validateJsonElement(jsonArrayorderItems.get(i));
          };
        }
      }
      if ((jsonObj.get("other_selection_reason") != null && !jsonObj.get("other_selection_reason").isJsonNull()) && !jsonObj.get("other_selection_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `other_selection_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("other_selection_reason").toString()));
      }
      if ((jsonObj.get("payment_reference_no") != null && !jsonObj.get("payment_reference_no").isJsonNull()) && !jsonObj.get("payment_reference_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_reference_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_reference_no").toString()));
      }
      if ((jsonObj.get("supplier_reference") != null && !jsonObj.get("supplier_reference").isJsonNull()) && !jsonObj.get("supplier_reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supplier_reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supplier_reference").toString()));
      }
      if ((jsonObj.get("tax") != null && !jsonObj.get("tax").isJsonNull()) && !jsonObj.get("tax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderPO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderPO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderPO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderPO.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderPO>() {
           @Override
           public void write(JsonWriter out, OrderPO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderPO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderPO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderPO
   * @throws IOException if the JSON string is invalid with respect to OrderPO
   */
  public static OrderPO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderPO.class);
  }

  /**
   * Convert an instance of OrderPO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

