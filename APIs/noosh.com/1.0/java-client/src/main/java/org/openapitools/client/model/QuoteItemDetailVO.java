/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PropertyPaAndAttVO;
import org.openapitools.client.model.QuotePriceDetailVO;
import org.openapitools.client.model.SpecBaseVO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.nooshapi.vo.QuoteItemDetailVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QuoteItemDetailVO {
  public static final String SERIALIZED_NAME_CHOSEN_QUANTITY = "chosen_quantity";
  @SerializedName(SERIALIZED_NAME_CHOSEN_QUANTITY)
  private Object chosenQuantity = null;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_COMPLETION_DATE = "completion_date";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private LocalDate completionDate;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<PropertyPaAndAttVO> customFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private Long itemId;

  public static final String SERIALIZED_NAME_ITEM_PRICES = "item_prices";
  @SerializedName(SERIALIZED_NAME_ITEM_PRICES)
  private List<QuotePriceDetailVO> itemPrices = new ArrayList<>();

  public static final String SERIALIZED_NAME_ITEM_SHIPPING_TOTAL = "item_shipping_total";
  @SerializedName(SERIALIZED_NAME_ITEM_SHIPPING_TOTAL)
  private Object itemShippingTotal = null;

  public static final String SERIALIZED_NAME_ITEM_TAX_TOTAL = "item_tax_total";
  @SerializedName(SERIALIZED_NAME_ITEM_TAX_TOTAL)
  private Object itemTaxTotal = null;

  public static final String SERIALIZED_NAME_ITEM_TOTAL = "item_total";
  @SerializedName(SERIALIZED_NAME_ITEM_TOTAL)
  private Object itemTotal = null;

  public static final String SERIALIZED_NAME_REASON_FOR_QUOTE_SELECTION = "reason_for_quote_selection";
  @SerializedName(SERIALIZED_NAME_REASON_FOR_QUOTE_SELECTION)
  private String reasonForQuoteSelection;

  public static final String SERIALIZED_NAME_SHOW_COST_PRICES_AND_MARKUP = "show_cost_prices_and_markup";
  @SerializedName(SERIALIZED_NAME_SHOW_COST_PRICES_AND_MARKUP)
  private Boolean showCostPricesAndMarkup;

  public static final String SERIALIZED_NAME_SPEC = "spec";
  @SerializedName(SERIALIZED_NAME_SPEC)
  private SpecBaseVO spec;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ITEM_SHIPPING_TOTAL = "transactional_item_shipping_total";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ITEM_SHIPPING_TOTAL)
  private Object transactionalItemShippingTotal = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ITEM_TAX_TOTAL = "transactional_item_tax_total";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ITEM_TAX_TOTAL)
  private Object transactionalItemTaxTotal = null;

  public static final String SERIALIZED_NAME_TRANSACTIONAL_ITEM_TOTAL = "transactional_item_total";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONAL_ITEM_TOTAL)
  private Object transactionalItemTotal = null;

  public static final String SERIALIZED_NAME_VAT_CODE = "vat_code";
  @SerializedName(SERIALIZED_NAME_VAT_CODE)
  private String vatCode;

  public static final String SERIALIZED_NAME_VAT_RATE = "vat_rate";
  @SerializedName(SERIALIZED_NAME_VAT_RATE)
  private Object vatRate = null;

  public QuoteItemDetailVO() {
  }

  public QuoteItemDetailVO chosenQuantity(Object chosenQuantity) {
    this.chosenQuantity = chosenQuantity;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return chosenQuantity
   */
  @javax.annotation.Nullable
  public Object getChosenQuantity() {
    return chosenQuantity;
  }

  public void setChosenQuantity(Object chosenQuantity) {
    this.chosenQuantity = chosenQuantity;
  }


  public QuoteItemDetailVO comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * 
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public QuoteItemDetailVO completionDate(LocalDate completionDate) {
    this.completionDate = completionDate;
    return this;
  }

  /**
   * 
   * @return completionDate
   */
  @javax.annotation.Nullable
  public LocalDate getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(LocalDate completionDate) {
    this.completionDate = completionDate;
  }


  public QuoteItemDetailVO customFields(List<PropertyPaAndAttVO> customFields) {
    this.customFields = customFields;
    return this;
  }

  public QuoteItemDetailVO addCustomFieldsItem(PropertyPaAndAttVO customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

  /**
   * 
   * @return customFields
   */
  @javax.annotation.Nullable
  public List<PropertyPaAndAttVO> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<PropertyPaAndAttVO> customFields) {
    this.customFields = customFields;
  }


  public QuoteItemDetailVO itemId(Long itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * 
   * @return itemId
   */
  @javax.annotation.Nullable
  public Long getItemId() {
    return itemId;
  }

  public void setItemId(Long itemId) {
    this.itemId = itemId;
  }


  public QuoteItemDetailVO itemPrices(List<QuotePriceDetailVO> itemPrices) {
    this.itemPrices = itemPrices;
    return this;
  }

  public QuoteItemDetailVO addItemPricesItem(QuotePriceDetailVO itemPricesItem) {
    if (this.itemPrices == null) {
      this.itemPrices = new ArrayList<>();
    }
    this.itemPrices.add(itemPricesItem);
    return this;
  }

  /**
   * 
   * @return itemPrices
   */
  @javax.annotation.Nullable
  public List<QuotePriceDetailVO> getItemPrices() {
    return itemPrices;
  }

  public void setItemPrices(List<QuotePriceDetailVO> itemPrices) {
    this.itemPrices = itemPrices;
  }


  public QuoteItemDetailVO itemShippingTotal(Object itemShippingTotal) {
    this.itemShippingTotal = itemShippingTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return itemShippingTotal
   */
  @javax.annotation.Nullable
  public Object getItemShippingTotal() {
    return itemShippingTotal;
  }

  public void setItemShippingTotal(Object itemShippingTotal) {
    this.itemShippingTotal = itemShippingTotal;
  }


  public QuoteItemDetailVO itemTaxTotal(Object itemTaxTotal) {
    this.itemTaxTotal = itemTaxTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return itemTaxTotal
   */
  @javax.annotation.Nullable
  public Object getItemTaxTotal() {
    return itemTaxTotal;
  }

  public void setItemTaxTotal(Object itemTaxTotal) {
    this.itemTaxTotal = itemTaxTotal;
  }


  public QuoteItemDetailVO itemTotal(Object itemTotal) {
    this.itemTotal = itemTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return itemTotal
   */
  @javax.annotation.Nullable
  public Object getItemTotal() {
    return itemTotal;
  }

  public void setItemTotal(Object itemTotal) {
    this.itemTotal = itemTotal;
  }


  public QuoteItemDetailVO reasonForQuoteSelection(String reasonForQuoteSelection) {
    this.reasonForQuoteSelection = reasonForQuoteSelection;
    return this;
  }

  /**
   * 
   * @return reasonForQuoteSelection
   */
  @javax.annotation.Nullable
  public String getReasonForQuoteSelection() {
    return reasonForQuoteSelection;
  }

  public void setReasonForQuoteSelection(String reasonForQuoteSelection) {
    this.reasonForQuoteSelection = reasonForQuoteSelection;
  }


  public QuoteItemDetailVO showCostPricesAndMarkup(Boolean showCostPricesAndMarkup) {
    this.showCostPricesAndMarkup = showCostPricesAndMarkup;
    return this;
  }

  /**
   * 
   * @return showCostPricesAndMarkup
   */
  @javax.annotation.Nullable
  public Boolean getShowCostPricesAndMarkup() {
    return showCostPricesAndMarkup;
  }

  public void setShowCostPricesAndMarkup(Boolean showCostPricesAndMarkup) {
    this.showCostPricesAndMarkup = showCostPricesAndMarkup;
  }


  public QuoteItemDetailVO spec(SpecBaseVO spec) {
    this.spec = spec;
    return this;
  }

  /**
   * Get spec
   * @return spec
   */
  @javax.annotation.Nullable
  public SpecBaseVO getSpec() {
    return spec;
  }

  public void setSpec(SpecBaseVO spec) {
    this.spec = spec;
  }


  public QuoteItemDetailVO transactionalItemShippingTotal(Object transactionalItemShippingTotal) {
    this.transactionalItemShippingTotal = transactionalItemShippingTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalItemShippingTotal
   */
  @javax.annotation.Nullable
  public Object getTransactionalItemShippingTotal() {
    return transactionalItemShippingTotal;
  }

  public void setTransactionalItemShippingTotal(Object transactionalItemShippingTotal) {
    this.transactionalItemShippingTotal = transactionalItemShippingTotal;
  }


  public QuoteItemDetailVO transactionalItemTaxTotal(Object transactionalItemTaxTotal) {
    this.transactionalItemTaxTotal = transactionalItemTaxTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalItemTaxTotal
   */
  @javax.annotation.Nullable
  public Object getTransactionalItemTaxTotal() {
    return transactionalItemTaxTotal;
  }

  public void setTransactionalItemTaxTotal(Object transactionalItemTaxTotal) {
    this.transactionalItemTaxTotal = transactionalItemTaxTotal;
  }


  public QuoteItemDetailVO transactionalItemTotal(Object transactionalItemTotal) {
    this.transactionalItemTotal = transactionalItemTotal;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return transactionalItemTotal
   */
  @javax.annotation.Nullable
  public Object getTransactionalItemTotal() {
    return transactionalItemTotal;
  }

  public void setTransactionalItemTotal(Object transactionalItemTotal) {
    this.transactionalItemTotal = transactionalItemTotal;
  }


  public QuoteItemDetailVO vatCode(String vatCode) {
    this.vatCode = vatCode;
    return this;
  }

  /**
   * 
   * @return vatCode
   */
  @javax.annotation.Nullable
  public String getVatCode() {
    return vatCode;
  }

  public void setVatCode(String vatCode) {
    this.vatCode = vatCode;
  }


  public QuoteItemDetailVO vatRate(Object vatRate) {
    this.vatRate = vatRate;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return vatRate
   */
  @javax.annotation.Nullable
  public Object getVatRate() {
    return vatRate;
  }

  public void setVatRate(Object vatRate) {
    this.vatRate = vatRate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteItemDetailVO quoteItemDetailVO = (QuoteItemDetailVO) o;
    return Objects.equals(this.chosenQuantity, quoteItemDetailVO.chosenQuantity) &&
        Objects.equals(this.comments, quoteItemDetailVO.comments) &&
        Objects.equals(this.completionDate, quoteItemDetailVO.completionDate) &&
        Objects.equals(this.customFields, quoteItemDetailVO.customFields) &&
        Objects.equals(this.itemId, quoteItemDetailVO.itemId) &&
        Objects.equals(this.itemPrices, quoteItemDetailVO.itemPrices) &&
        Objects.equals(this.itemShippingTotal, quoteItemDetailVO.itemShippingTotal) &&
        Objects.equals(this.itemTaxTotal, quoteItemDetailVO.itemTaxTotal) &&
        Objects.equals(this.itemTotal, quoteItemDetailVO.itemTotal) &&
        Objects.equals(this.reasonForQuoteSelection, quoteItemDetailVO.reasonForQuoteSelection) &&
        Objects.equals(this.showCostPricesAndMarkup, quoteItemDetailVO.showCostPricesAndMarkup) &&
        Objects.equals(this.spec, quoteItemDetailVO.spec) &&
        Objects.equals(this.transactionalItemShippingTotal, quoteItemDetailVO.transactionalItemShippingTotal) &&
        Objects.equals(this.transactionalItemTaxTotal, quoteItemDetailVO.transactionalItemTaxTotal) &&
        Objects.equals(this.transactionalItemTotal, quoteItemDetailVO.transactionalItemTotal) &&
        Objects.equals(this.vatCode, quoteItemDetailVO.vatCode) &&
        Objects.equals(this.vatRate, quoteItemDetailVO.vatRate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(chosenQuantity, comments, completionDate, customFields, itemId, itemPrices, itemShippingTotal, itemTaxTotal, itemTotal, reasonForQuoteSelection, showCostPricesAndMarkup, spec, transactionalItemShippingTotal, transactionalItemTaxTotal, transactionalItemTotal, vatCode, vatRate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteItemDetailVO {\n");
    sb.append("    chosenQuantity: ").append(toIndentedString(chosenQuantity)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    itemPrices: ").append(toIndentedString(itemPrices)).append("\n");
    sb.append("    itemShippingTotal: ").append(toIndentedString(itemShippingTotal)).append("\n");
    sb.append("    itemTaxTotal: ").append(toIndentedString(itemTaxTotal)).append("\n");
    sb.append("    itemTotal: ").append(toIndentedString(itemTotal)).append("\n");
    sb.append("    reasonForQuoteSelection: ").append(toIndentedString(reasonForQuoteSelection)).append("\n");
    sb.append("    showCostPricesAndMarkup: ").append(toIndentedString(showCostPricesAndMarkup)).append("\n");
    sb.append("    spec: ").append(toIndentedString(spec)).append("\n");
    sb.append("    transactionalItemShippingTotal: ").append(toIndentedString(transactionalItemShippingTotal)).append("\n");
    sb.append("    transactionalItemTaxTotal: ").append(toIndentedString(transactionalItemTaxTotal)).append("\n");
    sb.append("    transactionalItemTotal: ").append(toIndentedString(transactionalItemTotal)).append("\n");
    sb.append("    vatCode: ").append(toIndentedString(vatCode)).append("\n");
    sb.append("    vatRate: ").append(toIndentedString(vatRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chosen_quantity");
    openapiFields.add("comments");
    openapiFields.add("completion_date");
    openapiFields.add("custom_fields");
    openapiFields.add("item_id");
    openapiFields.add("item_prices");
    openapiFields.add("item_shipping_total");
    openapiFields.add("item_tax_total");
    openapiFields.add("item_total");
    openapiFields.add("reason_for_quote_selection");
    openapiFields.add("show_cost_prices_and_markup");
    openapiFields.add("spec");
    openapiFields.add("transactional_item_shipping_total");
    openapiFields.add("transactional_item_tax_total");
    openapiFields.add("transactional_item_total");
    openapiFields.add("vat_code");
    openapiFields.add("vat_rate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuoteItemDetailVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuoteItemDetailVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuoteItemDetailVO is not found in the empty JSON string", QuoteItemDetailVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuoteItemDetailVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuoteItemDetailVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if (jsonObj.get("custom_fields") != null && !jsonObj.get("custom_fields").isJsonNull()) {
        JsonArray jsonArraycustomFields = jsonObj.getAsJsonArray("custom_fields");
        if (jsonArraycustomFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_fields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_fields` to be an array in the JSON string but got `%s`", jsonObj.get("custom_fields").toString()));
          }

          // validate the optional field `custom_fields` (array)
          for (int i = 0; i < jsonArraycustomFields.size(); i++) {
            PropertyPaAndAttVO.validateJsonElement(jsonArraycustomFields.get(i));
          };
        }
      }
      if (jsonObj.get("item_prices") != null && !jsonObj.get("item_prices").isJsonNull()) {
        JsonArray jsonArrayitemPrices = jsonObj.getAsJsonArray("item_prices");
        if (jsonArrayitemPrices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("item_prices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `item_prices` to be an array in the JSON string but got `%s`", jsonObj.get("item_prices").toString()));
          }

          // validate the optional field `item_prices` (array)
          for (int i = 0; i < jsonArrayitemPrices.size(); i++) {
            QuotePriceDetailVO.validateJsonElement(jsonArrayitemPrices.get(i));
          };
        }
      }
      if ((jsonObj.get("reason_for_quote_selection") != null && !jsonObj.get("reason_for_quote_selection").isJsonNull()) && !jsonObj.get("reason_for_quote_selection").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reason_for_quote_selection` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reason_for_quote_selection").toString()));
      }
      // validate the optional field `spec`
      if (jsonObj.get("spec") != null && !jsonObj.get("spec").isJsonNull()) {
        SpecBaseVO.validateJsonElement(jsonObj.get("spec"));
      }
      if ((jsonObj.get("vat_code") != null && !jsonObj.get("vat_code").isJsonNull()) && !jsonObj.get("vat_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vat_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vat_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuoteItemDetailVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuoteItemDetailVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuoteItemDetailVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuoteItemDetailVO.class));

       return (TypeAdapter<T>) new TypeAdapter<QuoteItemDetailVO>() {
           @Override
           public void write(JsonWriter out, QuoteItemDetailVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuoteItemDetailVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuoteItemDetailVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuoteItemDetailVO
   * @throws IOException if the JSON string is invalid with respect to QuoteItemDetailVO
   */
  public static QuoteItemDetailVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuoteItemDetailVO.class);
  }

  /**
   * Convert an instance of QuoteItemDetailVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

