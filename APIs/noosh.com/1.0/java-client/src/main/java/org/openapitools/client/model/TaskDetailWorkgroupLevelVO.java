/*
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.PersonVO;
import org.openapitools.client.model.ProjectBaseVO;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Java type: com.noosh.nooshapi.vo.TaskDetailWorkgroupLevelVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:23.742517-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TaskDetailWorkgroupLevelVO {
  public static final String SERIALIZED_NAME_ACTUAL_DURATION = "actual_duration";
  @SerializedName(SERIALIZED_NAME_ACTUAL_DURATION)
  private Object actualDuration = null;

  public static final String SERIALIZED_NAME_ACTUAL_END = "actual_end";
  @SerializedName(SERIALIZED_NAME_ACTUAL_END)
  private LocalDate actualEnd;

  public static final String SERIALIZED_NAME_ACTUAL_HOURS = "actual_hours";
  @SerializedName(SERIALIZED_NAME_ACTUAL_HOURS)
  private Object actualHours = null;

  public static final String SERIALIZED_NAME_ACTUAL_START = "actual_start";
  @SerializedName(SERIALIZED_NAME_ACTUAL_START)
  private LocalDate actualStart;

  public static final String SERIALIZED_NAME_ASSIGN_TO = "assign_to";
  @SerializedName(SERIALIZED_NAME_ASSIGN_TO)
  private PersonVO assignTo;

  public static final String SERIALIZED_NAME_BASELINE_DURATION = "baseline_duration";
  @SerializedName(SERIALIZED_NAME_BASELINE_DURATION)
  private Object baselineDuration = null;

  public static final String SERIALIZED_NAME_BASELINE_END_DATE = "baseline_end_date";
  @SerializedName(SERIALIZED_NAME_BASELINE_END_DATE)
  private LocalDate baselineEndDate;

  public static final String SERIALIZED_NAME_BASELINE_START_DATE = "baseline_start_date";
  @SerializedName(SERIALIZED_NAME_BASELINE_START_DATE)
  private LocalDate baselineStartDate;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CREATE_DATE = "create_date";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private LocalDate createDate;

  public static final String SERIALIZED_NAME_CREATOR_WORKGROUP_NAME = "creator_workgroup_name";
  @SerializedName(SERIALIZED_NAME_CREATOR_WORKGROUP_NAME)
  private String creatorWorkgroupName;

  public static final String SERIALIZED_NAME_CURRENT_DURATION = "current_duration";
  @SerializedName(SERIALIZED_NAME_CURRENT_DURATION)
  private Object currentDuration = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IS_MILESTONE = "is_milestone";
  @SerializedName(SERIALIZED_NAME_IS_MILESTONE)
  private Boolean isMilestone;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY = "last_updated_by";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY)
  private PersonVO lastUpdatedBy;

  public static final String SERIALIZED_NAME_MOD_DATE = "mod_date";
  @SerializedName(SERIALIZED_NAME_MOD_DATE)
  private LocalDate modDate;

  public static final String SERIALIZED_NAME_PERCENT_COMPLETE = "percent_complete";
  @SerializedName(SERIALIZED_NAME_PERCENT_COMPLETE)
  private Integer percentComplete;

  public static final String SERIALIZED_NAME_PLAN_DURATION = "plan_duration";
  @SerializedName(SERIALIZED_NAME_PLAN_DURATION)
  private Object planDuration = null;

  public static final String SERIALIZED_NAME_PLAN_END = "plan_end";
  @SerializedName(SERIALIZED_NAME_PLAN_END)
  private LocalDate planEnd;

  public static final String SERIALIZED_NAME_PLAN_START = "plan_start";
  @SerializedName(SERIALIZED_NAME_PLAN_START)
  private LocalDate planStart;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private String priority;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private ProjectBaseVO project;

  public static final String SERIALIZED_NAME_REQUESTED_BY = "requested_by";
  @SerializedName(SERIALIZED_NAME_REQUESTED_BY)
  private PersonVO requestedBy;

  public static final String SERIALIZED_NAME_SCHEDULE_CODE = "schedule_code";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_CODE)
  private String scheduleCode;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TASK_ID = "task_id";
  @SerializedName(SERIALIZED_NAME_TASK_ID)
  private Long taskId;

  public static final String SERIALIZED_NAME_TASK_NAME = "task_name";
  @SerializedName(SERIALIZED_NAME_TASK_NAME)
  private String taskName;

  public static final String SERIALIZED_NAME_TASK_TYPE = "task_type";
  @SerializedName(SERIALIZED_NAME_TASK_TYPE)
  private String taskType;

  public TaskDetailWorkgroupLevelVO() {
  }

  public TaskDetailWorkgroupLevelVO actualDuration(Object actualDuration) {
    this.actualDuration = actualDuration;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return actualDuration
   */
  @javax.annotation.Nullable
  public Object getActualDuration() {
    return actualDuration;
  }

  public void setActualDuration(Object actualDuration) {
    this.actualDuration = actualDuration;
  }


  public TaskDetailWorkgroupLevelVO actualEnd(LocalDate actualEnd) {
    this.actualEnd = actualEnd;
    return this;
  }

  /**
   * 
   * @return actualEnd
   */
  @javax.annotation.Nullable
  public LocalDate getActualEnd() {
    return actualEnd;
  }

  public void setActualEnd(LocalDate actualEnd) {
    this.actualEnd = actualEnd;
  }


  public TaskDetailWorkgroupLevelVO actualHours(Object actualHours) {
    this.actualHours = actualHours;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return actualHours
   */
  @javax.annotation.Nullable
  public Object getActualHours() {
    return actualHours;
  }

  public void setActualHours(Object actualHours) {
    this.actualHours = actualHours;
  }


  public TaskDetailWorkgroupLevelVO actualStart(LocalDate actualStart) {
    this.actualStart = actualStart;
    return this;
  }

  /**
   * 
   * @return actualStart
   */
  @javax.annotation.Nullable
  public LocalDate getActualStart() {
    return actualStart;
  }

  public void setActualStart(LocalDate actualStart) {
    this.actualStart = actualStart;
  }


  public TaskDetailWorkgroupLevelVO assignTo(PersonVO assignTo) {
    this.assignTo = assignTo;
    return this;
  }

  /**
   * Get assignTo
   * @return assignTo
   */
  @javax.annotation.Nullable
  public PersonVO getAssignTo() {
    return assignTo;
  }

  public void setAssignTo(PersonVO assignTo) {
    this.assignTo = assignTo;
  }


  public TaskDetailWorkgroupLevelVO baselineDuration(Object baselineDuration) {
    this.baselineDuration = baselineDuration;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return baselineDuration
   */
  @javax.annotation.Nullable
  public Object getBaselineDuration() {
    return baselineDuration;
  }

  public void setBaselineDuration(Object baselineDuration) {
    this.baselineDuration = baselineDuration;
  }


  public TaskDetailWorkgroupLevelVO baselineEndDate(LocalDate baselineEndDate) {
    this.baselineEndDate = baselineEndDate;
    return this;
  }

  /**
   * 
   * @return baselineEndDate
   */
  @javax.annotation.Nullable
  public LocalDate getBaselineEndDate() {
    return baselineEndDate;
  }

  public void setBaselineEndDate(LocalDate baselineEndDate) {
    this.baselineEndDate = baselineEndDate;
  }


  public TaskDetailWorkgroupLevelVO baselineStartDate(LocalDate baselineStartDate) {
    this.baselineStartDate = baselineStartDate;
    return this;
  }

  /**
   * 
   * @return baselineStartDate
   */
  @javax.annotation.Nullable
  public LocalDate getBaselineStartDate() {
    return baselineStartDate;
  }

  public void setBaselineStartDate(LocalDate baselineStartDate) {
    this.baselineStartDate = baselineStartDate;
  }


  public TaskDetailWorkgroupLevelVO comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * 
   * @return comments
   */
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public TaskDetailWorkgroupLevelVO createDate(LocalDate createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * 
   * @return createDate
   */
  @javax.annotation.Nullable
  public LocalDate getCreateDate() {
    return createDate;
  }

  public void setCreateDate(LocalDate createDate) {
    this.createDate = createDate;
  }


  public TaskDetailWorkgroupLevelVO creatorWorkgroupName(String creatorWorkgroupName) {
    this.creatorWorkgroupName = creatorWorkgroupName;
    return this;
  }

  /**
   * 
   * @return creatorWorkgroupName
   */
  @javax.annotation.Nullable
  public String getCreatorWorkgroupName() {
    return creatorWorkgroupName;
  }

  public void setCreatorWorkgroupName(String creatorWorkgroupName) {
    this.creatorWorkgroupName = creatorWorkgroupName;
  }


  public TaskDetailWorkgroupLevelVO currentDuration(Object currentDuration) {
    this.currentDuration = currentDuration;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return currentDuration
   */
  @javax.annotation.Nullable
  public Object getCurrentDuration() {
    return currentDuration;
  }

  public void setCurrentDuration(Object currentDuration) {
    this.currentDuration = currentDuration;
  }


  public TaskDetailWorkgroupLevelVO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * 
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public TaskDetailWorkgroupLevelVO isMilestone(Boolean isMilestone) {
    this.isMilestone = isMilestone;
    return this;
  }

  /**
   * 
   * @return isMilestone
   */
  @javax.annotation.Nullable
  public Boolean getIsMilestone() {
    return isMilestone;
  }

  public void setIsMilestone(Boolean isMilestone) {
    this.isMilestone = isMilestone;
  }


  public TaskDetailWorkgroupLevelVO lastUpdatedBy(PersonVO lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

  /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
   */
  @javax.annotation.Nullable
  public PersonVO getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(PersonVO lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }


  public TaskDetailWorkgroupLevelVO modDate(LocalDate modDate) {
    this.modDate = modDate;
    return this;
  }

  /**
   * 
   * @return modDate
   */
  @javax.annotation.Nullable
  public LocalDate getModDate() {
    return modDate;
  }

  public void setModDate(LocalDate modDate) {
    this.modDate = modDate;
  }


  public TaskDetailWorkgroupLevelVO percentComplete(Integer percentComplete) {
    this.percentComplete = percentComplete;
    return this;
  }

  /**
   * 
   * @return percentComplete
   */
  @javax.annotation.Nullable
  public Integer getPercentComplete() {
    return percentComplete;
  }

  public void setPercentComplete(Integer percentComplete) {
    this.percentComplete = percentComplete;
  }


  public TaskDetailWorkgroupLevelVO planDuration(Object planDuration) {
    this.planDuration = planDuration;
    return this;
  }

  /**
   * Java type: java.math.BigDecimal
   * @return planDuration
   */
  @javax.annotation.Nullable
  public Object getPlanDuration() {
    return planDuration;
  }

  public void setPlanDuration(Object planDuration) {
    this.planDuration = planDuration;
  }


  public TaskDetailWorkgroupLevelVO planEnd(LocalDate planEnd) {
    this.planEnd = planEnd;
    return this;
  }

  /**
   * 
   * @return planEnd
   */
  @javax.annotation.Nullable
  public LocalDate getPlanEnd() {
    return planEnd;
  }

  public void setPlanEnd(LocalDate planEnd) {
    this.planEnd = planEnd;
  }


  public TaskDetailWorkgroupLevelVO planStart(LocalDate planStart) {
    this.planStart = planStart;
    return this;
  }

  /**
   * 
   * @return planStart
   */
  @javax.annotation.Nullable
  public LocalDate getPlanStart() {
    return planStart;
  }

  public void setPlanStart(LocalDate planStart) {
    this.planStart = planStart;
  }


  public TaskDetailWorkgroupLevelVO priority(String priority) {
    this.priority = priority;
    return this;
  }

  /**
   * 
   * @return priority
   */
  @javax.annotation.Nullable
  public String getPriority() {
    return priority;
  }

  public void setPriority(String priority) {
    this.priority = priority;
  }


  public TaskDetailWorkgroupLevelVO project(ProjectBaseVO project) {
    this.project = project;
    return this;
  }

  /**
   * Get project
   * @return project
   */
  @javax.annotation.Nullable
  public ProjectBaseVO getProject() {
    return project;
  }

  public void setProject(ProjectBaseVO project) {
    this.project = project;
  }


  public TaskDetailWorkgroupLevelVO requestedBy(PersonVO requestedBy) {
    this.requestedBy = requestedBy;
    return this;
  }

  /**
   * Get requestedBy
   * @return requestedBy
   */
  @javax.annotation.Nullable
  public PersonVO getRequestedBy() {
    return requestedBy;
  }

  public void setRequestedBy(PersonVO requestedBy) {
    this.requestedBy = requestedBy;
  }


  public TaskDetailWorkgroupLevelVO scheduleCode(String scheduleCode) {
    this.scheduleCode = scheduleCode;
    return this;
  }

  /**
   * 
   * @return scheduleCode
   */
  @javax.annotation.Nullable
  public String getScheduleCode() {
    return scheduleCode;
  }

  public void setScheduleCode(String scheduleCode) {
    this.scheduleCode = scheduleCode;
  }


  public TaskDetailWorkgroupLevelVO status(String status) {
    this.status = status;
    return this;
  }

  /**
   * 
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TaskDetailWorkgroupLevelVO taskId(Long taskId) {
    this.taskId = taskId;
    return this;
  }

  /**
   * 
   * @return taskId
   */
  @javax.annotation.Nullable
  public Long getTaskId() {
    return taskId;
  }

  public void setTaskId(Long taskId) {
    this.taskId = taskId;
  }


  public TaskDetailWorkgroupLevelVO taskName(String taskName) {
    this.taskName = taskName;
    return this;
  }

  /**
   * 
   * @return taskName
   */
  @javax.annotation.Nullable
  public String getTaskName() {
    return taskName;
  }

  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }


  public TaskDetailWorkgroupLevelVO taskType(String taskType) {
    this.taskType = taskType;
    return this;
  }

  /**
   * 
   * @return taskType
   */
  @javax.annotation.Nullable
  public String getTaskType() {
    return taskType;
  }

  public void setTaskType(String taskType) {
    this.taskType = taskType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskDetailWorkgroupLevelVO taskDetailWorkgroupLevelVO = (TaskDetailWorkgroupLevelVO) o;
    return Objects.equals(this.actualDuration, taskDetailWorkgroupLevelVO.actualDuration) &&
        Objects.equals(this.actualEnd, taskDetailWorkgroupLevelVO.actualEnd) &&
        Objects.equals(this.actualHours, taskDetailWorkgroupLevelVO.actualHours) &&
        Objects.equals(this.actualStart, taskDetailWorkgroupLevelVO.actualStart) &&
        Objects.equals(this.assignTo, taskDetailWorkgroupLevelVO.assignTo) &&
        Objects.equals(this.baselineDuration, taskDetailWorkgroupLevelVO.baselineDuration) &&
        Objects.equals(this.baselineEndDate, taskDetailWorkgroupLevelVO.baselineEndDate) &&
        Objects.equals(this.baselineStartDate, taskDetailWorkgroupLevelVO.baselineStartDate) &&
        Objects.equals(this.comments, taskDetailWorkgroupLevelVO.comments) &&
        Objects.equals(this.createDate, taskDetailWorkgroupLevelVO.createDate) &&
        Objects.equals(this.creatorWorkgroupName, taskDetailWorkgroupLevelVO.creatorWorkgroupName) &&
        Objects.equals(this.currentDuration, taskDetailWorkgroupLevelVO.currentDuration) &&
        Objects.equals(this.description, taskDetailWorkgroupLevelVO.description) &&
        Objects.equals(this.isMilestone, taskDetailWorkgroupLevelVO.isMilestone) &&
        Objects.equals(this.lastUpdatedBy, taskDetailWorkgroupLevelVO.lastUpdatedBy) &&
        Objects.equals(this.modDate, taskDetailWorkgroupLevelVO.modDate) &&
        Objects.equals(this.percentComplete, taskDetailWorkgroupLevelVO.percentComplete) &&
        Objects.equals(this.planDuration, taskDetailWorkgroupLevelVO.planDuration) &&
        Objects.equals(this.planEnd, taskDetailWorkgroupLevelVO.planEnd) &&
        Objects.equals(this.planStart, taskDetailWorkgroupLevelVO.planStart) &&
        Objects.equals(this.priority, taskDetailWorkgroupLevelVO.priority) &&
        Objects.equals(this.project, taskDetailWorkgroupLevelVO.project) &&
        Objects.equals(this.requestedBy, taskDetailWorkgroupLevelVO.requestedBy) &&
        Objects.equals(this.scheduleCode, taskDetailWorkgroupLevelVO.scheduleCode) &&
        Objects.equals(this.status, taskDetailWorkgroupLevelVO.status) &&
        Objects.equals(this.taskId, taskDetailWorkgroupLevelVO.taskId) &&
        Objects.equals(this.taskName, taskDetailWorkgroupLevelVO.taskName) &&
        Objects.equals(this.taskType, taskDetailWorkgroupLevelVO.taskType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualDuration, actualEnd, actualHours, actualStart, assignTo, baselineDuration, baselineEndDate, baselineStartDate, comments, createDate, creatorWorkgroupName, currentDuration, description, isMilestone, lastUpdatedBy, modDate, percentComplete, planDuration, planEnd, planStart, priority, project, requestedBy, scheduleCode, status, taskId, taskName, taskType);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskDetailWorkgroupLevelVO {\n");
    sb.append("    actualDuration: ").append(toIndentedString(actualDuration)).append("\n");
    sb.append("    actualEnd: ").append(toIndentedString(actualEnd)).append("\n");
    sb.append("    actualHours: ").append(toIndentedString(actualHours)).append("\n");
    sb.append("    actualStart: ").append(toIndentedString(actualStart)).append("\n");
    sb.append("    assignTo: ").append(toIndentedString(assignTo)).append("\n");
    sb.append("    baselineDuration: ").append(toIndentedString(baselineDuration)).append("\n");
    sb.append("    baselineEndDate: ").append(toIndentedString(baselineEndDate)).append("\n");
    sb.append("    baselineStartDate: ").append(toIndentedString(baselineStartDate)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    creatorWorkgroupName: ").append(toIndentedString(creatorWorkgroupName)).append("\n");
    sb.append("    currentDuration: ").append(toIndentedString(currentDuration)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isMilestone: ").append(toIndentedString(isMilestone)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    modDate: ").append(toIndentedString(modDate)).append("\n");
    sb.append("    percentComplete: ").append(toIndentedString(percentComplete)).append("\n");
    sb.append("    planDuration: ").append(toIndentedString(planDuration)).append("\n");
    sb.append("    planEnd: ").append(toIndentedString(planEnd)).append("\n");
    sb.append("    planStart: ").append(toIndentedString(planStart)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    requestedBy: ").append(toIndentedString(requestedBy)).append("\n");
    sb.append("    scheduleCode: ").append(toIndentedString(scheduleCode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actual_duration");
    openapiFields.add("actual_end");
    openapiFields.add("actual_hours");
    openapiFields.add("actual_start");
    openapiFields.add("assign_to");
    openapiFields.add("baseline_duration");
    openapiFields.add("baseline_end_date");
    openapiFields.add("baseline_start_date");
    openapiFields.add("comments");
    openapiFields.add("create_date");
    openapiFields.add("creator_workgroup_name");
    openapiFields.add("current_duration");
    openapiFields.add("description");
    openapiFields.add("is_milestone");
    openapiFields.add("last_updated_by");
    openapiFields.add("mod_date");
    openapiFields.add("percent_complete");
    openapiFields.add("plan_duration");
    openapiFields.add("plan_end");
    openapiFields.add("plan_start");
    openapiFields.add("priority");
    openapiFields.add("project");
    openapiFields.add("requested_by");
    openapiFields.add("schedule_code");
    openapiFields.add("status");
    openapiFields.add("task_id");
    openapiFields.add("task_name");
    openapiFields.add("task_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TaskDetailWorkgroupLevelVO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TaskDetailWorkgroupLevelVO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskDetailWorkgroupLevelVO is not found in the empty JSON string", TaskDetailWorkgroupLevelVO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TaskDetailWorkgroupLevelVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskDetailWorkgroupLevelVO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `assign_to`
      if (jsonObj.get("assign_to") != null && !jsonObj.get("assign_to").isJsonNull()) {
        PersonVO.validateJsonElement(jsonObj.get("assign_to"));
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if ((jsonObj.get("creator_workgroup_name") != null && !jsonObj.get("creator_workgroup_name").isJsonNull()) && !jsonObj.get("creator_workgroup_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creator_workgroup_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creator_workgroup_name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `last_updated_by`
      if (jsonObj.get("last_updated_by") != null && !jsonObj.get("last_updated_by").isJsonNull()) {
        PersonVO.validateJsonElement(jsonObj.get("last_updated_by"));
      }
      if ((jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) && !jsonObj.get("priority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priority").toString()));
      }
      // validate the optional field `project`
      if (jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) {
        ProjectBaseVO.validateJsonElement(jsonObj.get("project"));
      }
      // validate the optional field `requested_by`
      if (jsonObj.get("requested_by") != null && !jsonObj.get("requested_by").isJsonNull()) {
        PersonVO.validateJsonElement(jsonObj.get("requested_by"));
      }
      if ((jsonObj.get("schedule_code") != null && !jsonObj.get("schedule_code").isJsonNull()) && !jsonObj.get("schedule_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schedule_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schedule_code").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("task_name") != null && !jsonObj.get("task_name").isJsonNull()) && !jsonObj.get("task_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `task_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("task_name").toString()));
      }
      if ((jsonObj.get("task_type") != null && !jsonObj.get("task_type").isJsonNull()) && !jsonObj.get("task_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `task_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("task_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskDetailWorkgroupLevelVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskDetailWorkgroupLevelVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskDetailWorkgroupLevelVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskDetailWorkgroupLevelVO.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskDetailWorkgroupLevelVO>() {
           @Override
           public void write(JsonWriter out, TaskDetailWorkgroupLevelVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskDetailWorkgroupLevelVO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TaskDetailWorkgroupLevelVO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TaskDetailWorkgroupLevelVO
   * @throws IOException if the JSON string is invalid with respect to TaskDetailWorkgroupLevelVO
   */
  public static TaskDetailWorkgroupLevelVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskDetailWorkgroupLevelVO.class);
  }

  /**
   * Convert an instance of TaskDetailWorkgroupLevelVO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

