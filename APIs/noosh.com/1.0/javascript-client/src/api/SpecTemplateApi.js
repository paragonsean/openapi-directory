/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HTTPStatusVO from '../model/HTTPStatusVO';
import SpecTemplateExpandVO from '../model/SpecTemplateExpandVO';
import SpecTemplateListVO from '../model/SpecTemplateListVO';

/**
* SpecTemplate service.
* @module api/SpecTemplateApi
* @version 1.0
*/
export default class SpecTemplateApi {

    /**
    * Constructs a new SpecTemplateApi. 
    * @alias module:api/SpecTemplateApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getSpecTemplate operation.
     * @callback module:api/SpecTemplateApi~getSpecTemplateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpecTemplateExpandVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a specific Spec Template
     * Get a specific Spec Template
     * @param {String} workgroupId 
     * @param {String} specTemplateId 
     * @param {module:api/SpecTemplateApi~getSpecTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpecTemplateExpandVO}
     */
    getSpecTemplate(workgroupId, specTemplateId, callback) {
      let postBody = null;
      // verify the required parameter 'workgroupId' is set
      if (workgroupId === undefined || workgroupId === null) {
        throw new Error("Missing the required parameter 'workgroupId' when calling getSpecTemplate");
      }
      // verify the required parameter 'specTemplateId' is set
      if (specTemplateId === undefined || specTemplateId === null) {
        throw new Error("Missing the required parameter 'specTemplateId' when calling getSpecTemplate");
      }

      let pathParams = {
        'workgroup_id': workgroupId,
        'spec_template_id': specTemplateId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json', 'application/x-json-smile', 'application/x-yaml', 'application/xml', 'text/csv', 'text/x-yaml', 'text/xml'];
      let returnType = SpecTemplateExpandVO;
      return this.apiClient.callApi(
        '/v1/workgroups/{workgroup_id}/specTemplates/{spec_template_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSpecTemplateList operation.
     * @callback module:api/SpecTemplateApi~getSpecTemplateListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpecTemplateListVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Spec Templates of Workgroup Level 
     * List Spec Templates of Workgroup Level 
     * @param {String} workgroupId 
     * @param {module:api/SpecTemplateApi~getSpecTemplateListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpecTemplateListVO}
     */
    getSpecTemplateList(workgroupId, callback) {
      let postBody = null;
      // verify the required parameter 'workgroupId' is set
      if (workgroupId === undefined || workgroupId === null) {
        throw new Error("Missing the required parameter 'workgroupId' when calling getSpecTemplateList");
      }

      let pathParams = {
        'workgroup_id': workgroupId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'application/json', 'application/x-json-smile', 'application/x-yaml', 'application/xml', 'text/csv', 'text/x-yaml', 'text/xml'];
      let returnType = SpecTemplateListVO;
      return this.apiClient.callApi(
        '/v1/workgroups/{workgroup_id}/specTemplates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
