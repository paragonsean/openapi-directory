/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimeCardLineVO from './TimeCardLineVO';

/**
 * The TimeCardDetailVO model module.
 * @module model/TimeCardDetailVO
 * @version 1.0
 */
class TimeCardDetailVO {
    /**
     * Constructs a new <code>TimeCardDetailVO</code>.
     * Java type: com.noosh.nooshapi.vo.TimeCardDetailVO
     * @alias module:model/TimeCardDetailVO
     */
    constructor() { 
        
        TimeCardDetailVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimeCardDetailVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeCardDetailVO} obj Optional instance to populate.
     * @return {module:model/TimeCardDetailVO} The populated <code>TimeCardDetailVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeCardDetailVO();

            if (data.hasOwnProperty('billable_hours')) {
                obj['billable_hours'] = ApiClient.convertToType(data['billable_hours'], Object);
            }
            if (data.hasOwnProperty('is_submit')) {
                obj['is_submit'] = ApiClient.convertToType(data['is_submit'], 'Boolean');
            }
            if (data.hasOwnProperty('last_updated_date')) {
                obj['last_updated_date'] = ApiClient.convertToType(data['last_updated_date'], 'Date');
            }
            if (data.hasOwnProperty('no_of_workdays')) {
                obj['no_of_workdays'] = ApiClient.convertToType(data['no_of_workdays'], 'Number');
            }
            if (data.hasOwnProperty('nonbillable_hours')) {
                obj['nonbillable_hours'] = ApiClient.convertToType(data['nonbillable_hours'], Object);
            }
            if (data.hasOwnProperty('submit_date')) {
                obj['submit_date'] = ApiClient.convertToType(data['submit_date'], 'Date');
            }
            if (data.hasOwnProperty('time_card_line')) {
                obj['time_card_line'] = ApiClient.convertToType(data['time_card_line'], [TimeCardLineVO]);
            }
            if (data.hasOwnProperty('timecard_id')) {
                obj['timecard_id'] = ApiClient.convertToType(data['timecard_id'], 'Number');
            }
            if (data.hasOwnProperty('total_hours')) {
                obj['total_hours'] = ApiClient.convertToType(data['total_hours'], Object);
            }
            if (data.hasOwnProperty('week_beginning')) {
                obj['week_beginning'] = ApiClient.convertToType(data['week_beginning'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeCardDetailVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeCardDetailVO</code>.
     */
    static validateJSON(data) {
        if (data['time_card_line']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['time_card_line'])) {
                throw new Error("Expected the field `time_card_line` to be an array in the JSON data but got " + data['time_card_line']);
            }
            // validate the optional field `time_card_line` (array)
            for (const item of data['time_card_line']) {
                TimeCardLineVO.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Java type: java.math.BigDecimal
 * @member {Object} billable_hours
 */
TimeCardDetailVO.prototype['billable_hours'] = undefined;

/**
 * 
 * @member {Boolean} is_submit
 */
TimeCardDetailVO.prototype['is_submit'] = undefined;

/**
 * 
 * @member {Date} last_updated_date
 */
TimeCardDetailVO.prototype['last_updated_date'] = undefined;

/**
 * 
 * @member {Number} no_of_workdays
 */
TimeCardDetailVO.prototype['no_of_workdays'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} nonbillable_hours
 */
TimeCardDetailVO.prototype['nonbillable_hours'] = undefined;

/**
 * 
 * @member {Date} submit_date
 */
TimeCardDetailVO.prototype['submit_date'] = undefined;

/**
 * 
 * @member {Array.<module:model/TimeCardLineVO>} time_card_line
 */
TimeCardDetailVO.prototype['time_card_line'] = undefined;

/**
 * 
 * @member {Number} timecard_id
 */
TimeCardDetailVO.prototype['timecard_id'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} total_hours
 */
TimeCardDetailVO.prototype['total_hours'] = undefined;

/**
 * 
 * @member {Date} week_beginning
 */
TimeCardDetailVO.prototype['week_beginning'] = undefined;






export default TimeCardDetailVO;

