/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PropertyPaAndAttVO from './PropertyPaAndAttVO';

/**
 * The WorkgroupDetailVO model module.
 * @module model/WorkgroupDetailVO
 * @version 1.0
 */
class WorkgroupDetailVO {
    /**
     * Constructs a new <code>WorkgroupDetailVO</code>.
     * Java type: com.noosh.nooshapi.vo.WorkgroupDetailVO
     * @alias module:model/WorkgroupDetailVO
     */
    constructor() { 
        
        WorkgroupDetailVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkgroupDetailVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkgroupDetailVO} obj Optional instance to populate.
     * @return {module:model/WorkgroupDetailVO} The populated <code>WorkgroupDetailVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkgroupDetailVO();

            if (data.hasOwnProperty('address_line1')) {
                obj['address_line1'] = ApiClient.convertToType(data['address_line1'], 'String');
            }
            if (data.hasOwnProperty('address_line2')) {
                obj['address_line2'] = ApiClient.convertToType(data['address_line2'], 'String');
            }
            if (data.hasOwnProperty('address_line3')) {
                obj['address_line3'] = ApiClient.convertToType(data['address_line3'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('country_code')) {
                obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], [PropertyPaAndAttVO]);
            }
            if (data.hasOwnProperty('default_currency')) {
                obj['default_currency'] = ApiClient.convertToType(data['default_currency'], 'String');
            }
            if (data.hasOwnProperty('portal')) {
                obj['portal'] = ApiClient.convertToType(data['portal'], 'String');
            }
            if (data.hasOwnProperty('postal')) {
                obj['postal'] = ApiClient.convertToType(data['postal'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('workgroup_id')) {
                obj['workgroup_id'] = ApiClient.convertToType(data['workgroup_id'], 'Number');
            }
            if (data.hasOwnProperty('workgroup_name')) {
                obj['workgroup_name'] = ApiClient.convertToType(data['workgroup_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkgroupDetailVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkgroupDetailVO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address_line1'] && !(typeof data['address_line1'] === 'string' || data['address_line1'] instanceof String)) {
            throw new Error("Expected the field `address_line1` to be a primitive type in the JSON string but got " + data['address_line1']);
        }
        // ensure the json data is a string
        if (data['address_line2'] && !(typeof data['address_line2'] === 'string' || data['address_line2'] instanceof String)) {
            throw new Error("Expected the field `address_line2` to be a primitive type in the JSON string but got " + data['address_line2']);
        }
        // ensure the json data is a string
        if (data['address_line3'] && !(typeof data['address_line3'] === 'string' || data['address_line3'] instanceof String)) {
            throw new Error("Expected the field `address_line3` to be a primitive type in the JSON string but got " + data['address_line3']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['country_code'] && !(typeof data['country_code'] === 'string' || data['country_code'] instanceof String)) {
            throw new Error("Expected the field `country_code` to be a primitive type in the JSON string but got " + data['country_code']);
        }
        if (data['custom_fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_fields'])) {
                throw new Error("Expected the field `custom_fields` to be an array in the JSON data but got " + data['custom_fields']);
            }
            // validate the optional field `custom_fields` (array)
            for (const item of data['custom_fields']) {
                PropertyPaAndAttVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['default_currency'] && !(typeof data['default_currency'] === 'string' || data['default_currency'] instanceof String)) {
            throw new Error("Expected the field `default_currency` to be a primitive type in the JSON string but got " + data['default_currency']);
        }
        // ensure the json data is a string
        if (data['portal'] && !(typeof data['portal'] === 'string' || data['portal'] instanceof String)) {
            throw new Error("Expected the field `portal` to be a primitive type in the JSON string but got " + data['portal']);
        }
        // ensure the json data is a string
        if (data['postal'] && !(typeof data['postal'] === 'string' || data['postal'] instanceof String)) {
            throw new Error("Expected the field `postal` to be a primitive type in the JSON string but got " + data['postal']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['workgroup_name'] && !(typeof data['workgroup_name'] === 'string' || data['workgroup_name'] instanceof String)) {
            throw new Error("Expected the field `workgroup_name` to be a primitive type in the JSON string but got " + data['workgroup_name']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} address_line1
 */
WorkgroupDetailVO.prototype['address_line1'] = undefined;

/**
 * 
 * @member {String} address_line2
 */
WorkgroupDetailVO.prototype['address_line2'] = undefined;

/**
 * 
 * @member {String} address_line3
 */
WorkgroupDetailVO.prototype['address_line3'] = undefined;

/**
 * 
 * @member {String} city
 */
WorkgroupDetailVO.prototype['city'] = undefined;

/**
 * 
 * @member {String} country
 */
WorkgroupDetailVO.prototype['country'] = undefined;

/**
 * 
 * @member {String} country_code
 */
WorkgroupDetailVO.prototype['country_code'] = undefined;

/**
 * 
 * @member {Array.<module:model/PropertyPaAndAttVO>} custom_fields
 */
WorkgroupDetailVO.prototype['custom_fields'] = undefined;

/**
 * 
 * @member {String} default_currency
 */
WorkgroupDetailVO.prototype['default_currency'] = undefined;

/**
 * 
 * @member {String} portal
 */
WorkgroupDetailVO.prototype['portal'] = undefined;

/**
 * 
 * @member {String} postal
 */
WorkgroupDetailVO.prototype['postal'] = undefined;

/**
 * 
 * @member {String} state
 */
WorkgroupDetailVO.prototype['state'] = undefined;

/**
 * 
 * @member {Number} workgroup_id
 */
WorkgroupDetailVO.prototype['workgroup_id'] = undefined;

/**
 * 
 * @member {String} workgroup_name
 */
WorkgroupDetailVO.prototype['workgroup_name'] = undefined;






export default WorkgroupDetailVO;

