/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RfeSpecPO from './RfeSpecPO';

/**
 * The RfePO model module.
 * @module model/RfePO
 * @version 1.0
 */
class RfePO {
    /**
     * Constructs a new <code>RfePO</code>.
     * Java type: com.noosh.domain.nooshapi.persist.po.RfePO
     * @alias module:model/RfePO
     */
    constructor() { 
        
        RfePO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RfePO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RfePO} obj Optional instance to populate.
     * @return {module:model/RfePO} The populated <code>RfePO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RfePO();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], 'String');
            }
            if (data.hasOwnProperty('estimate_due_date')) {
                obj['estimate_due_date'] = ApiClient.convertToType(data['estimate_due_date'], 'Date');
            }
            if (data.hasOwnProperty('proposed_order_completion_date')) {
                obj['proposed_order_completion_date'] = ApiClient.convertToType(data['proposed_order_completion_date'], 'Date');
            }
            if (data.hasOwnProperty('rfe_number')) {
                obj['rfe_number'] = ApiClient.convertToType(data['rfe_number'], 'String');
            }
            if (data.hasOwnProperty('rfe_title')) {
                obj['rfe_title'] = ApiClient.convertToType(data['rfe_title'], 'String');
            }
            if (data.hasOwnProperty('specs')) {
                obj['specs'] = ApiClient.convertToType(data['specs'], [RfeSpecPO]);
            }
            if (data.hasOwnProperty('supplier_user_ids')) {
                obj['supplier_user_ids'] = ApiClient.convertToType(data['supplier_user_ids'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RfePO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RfePO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['details'] && !(typeof data['details'] === 'string' || data['details'] instanceof String)) {
            throw new Error("Expected the field `details` to be a primitive type in the JSON string but got " + data['details']);
        }
        // ensure the json data is a string
        if (data['rfe_number'] && !(typeof data['rfe_number'] === 'string' || data['rfe_number'] instanceof String)) {
            throw new Error("Expected the field `rfe_number` to be a primitive type in the JSON string but got " + data['rfe_number']);
        }
        // ensure the json data is a string
        if (data['rfe_title'] && !(typeof data['rfe_title'] === 'string' || data['rfe_title'] instanceof String)) {
            throw new Error("Expected the field `rfe_title` to be a primitive type in the JSON string but got " + data['rfe_title']);
        }
        if (data['specs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['specs'])) {
                throw new Error("Expected the field `specs` to be an array in the JSON data but got " + data['specs']);
            }
            // validate the optional field `specs` (array)
            for (const item of data['specs']) {
                RfeSpecPO.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supplier_user_ids'])) {
            throw new Error("Expected the field `supplier_user_ids` to be an array in the JSON data but got " + data['supplier_user_ids']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} description
 */
RfePO.prototype['description'] = undefined;

/**
 * 
 * @member {String} details
 */
RfePO.prototype['details'] = undefined;

/**
 * 
 * @member {Date} estimate_due_date
 */
RfePO.prototype['estimate_due_date'] = undefined;

/**
 * 
 * @member {Date} proposed_order_completion_date
 */
RfePO.prototype['proposed_order_completion_date'] = undefined;

/**
 * 
 * @member {String} rfe_number
 */
RfePO.prototype['rfe_number'] = undefined;

/**
 * 
 * @member {String} rfe_title
 */
RfePO.prototype['rfe_title'] = undefined;

/**
 * 
 * @member {Array.<module:model/RfeSpecPO>} specs
 */
RfePO.prototype['specs'] = undefined;

/**
 * 
 * @member {Array.<Number>} supplier_user_ids
 */
RfePO.prototype['supplier_user_ids'] = undefined;






export default RfePO;

