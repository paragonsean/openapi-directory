/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PersonVO from './PersonVO';
import UofmSimpleVO from './UofmSimpleVO';

/**
 * The SpecSimpleVO model module.
 * @module model/SpecSimpleVO
 * @version 1.0
 */
class SpecSimpleVO {
    /**
     * Constructs a new <code>SpecSimpleVO</code>.
     * Java type: com.noosh.nooshapi.vo.SpecSimpleVO
     * @alias module:model/SpecSimpleVO
     */
    constructor() { 
        
        SpecSimpleVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SpecSimpleVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpecSimpleVO} obj Optional instance to populate.
     * @return {module:model/SpecSimpleVO} The populated <code>SpecSimpleVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpecSimpleVO();

            if (data.hasOwnProperty('client_status')) {
                obj['client_status'] = ApiClient.convertToType(data['client_status'], 'String');
            }
            if (data.hasOwnProperty('create_date')) {
                obj['create_date'] = ApiClient.convertToType(data['create_date'], 'Date');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = PersonVO.constructFromObject(data['created_by']);
            }
            if (data.hasOwnProperty('job_id')) {
                obj['job_id'] = ApiClient.convertToType(data['job_id'], 'Number');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('reference_number')) {
                obj['reference_number'] = ApiClient.convertToType(data['reference_number'], 'String');
            }
            if (data.hasOwnProperty('spec_id')) {
                obj['spec_id'] = ApiClient.convertToType(data['spec_id'], 'Number');
            }
            if (data.hasOwnProperty('spec_name')) {
                obj['spec_name'] = ApiClient.convertToType(data['spec_name'], 'String');
            }
            if (data.hasOwnProperty('spec_options_complete')) {
                obj['spec_options_complete'] = ApiClient.convertToType(data['spec_options_complete'], [SpecSimpleVO]);
            }
            if (data.hasOwnProperty('supplier_status')) {
                obj['supplier_status'] = ApiClient.convertToType(data['supplier_status'], 'String');
            }
            if (data.hasOwnProperty('uofms')) {
                obj['uofms'] = ApiClient.convertToType(data['uofms'], [UofmSimpleVO]);
            }
            if (data.hasOwnProperty('user_state')) {
                obj['user_state'] = ApiClient.convertToType(data['user_state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpecSimpleVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpecSimpleVO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['client_status'] && !(typeof data['client_status'] === 'string' || data['client_status'] instanceof String)) {
            throw new Error("Expected the field `client_status` to be a primitive type in the JSON string but got " + data['client_status']);
        }
        // validate the optional field `created_by`
        if (data['created_by']) { // data not null
          PersonVO.validateJSON(data['created_by']);
        }
        // ensure the json data is a string
        if (data['reference_number'] && !(typeof data['reference_number'] === 'string' || data['reference_number'] instanceof String)) {
            throw new Error("Expected the field `reference_number` to be a primitive type in the JSON string but got " + data['reference_number']);
        }
        // ensure the json data is a string
        if (data['spec_name'] && !(typeof data['spec_name'] === 'string' || data['spec_name'] instanceof String)) {
            throw new Error("Expected the field `spec_name` to be a primitive type in the JSON string but got " + data['spec_name']);
        }
        if (data['spec_options_complete']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['spec_options_complete'])) {
                throw new Error("Expected the field `spec_options_complete` to be an array in the JSON data but got " + data['spec_options_complete']);
            }
            // validate the optional field `spec_options_complete` (array)
            for (const item of data['spec_options_complete']) {
                SpecSimpleVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['supplier_status'] && !(typeof data['supplier_status'] === 'string' || data['supplier_status'] instanceof String)) {
            throw new Error("Expected the field `supplier_status` to be a primitive type in the JSON string but got " + data['supplier_status']);
        }
        if (data['uofms']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['uofms'])) {
                throw new Error("Expected the field `uofms` to be an array in the JSON data but got " + data['uofms']);
            }
            // validate the optional field `uofms` (array)
            for (const item of data['uofms']) {
                UofmSimpleVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['user_state'] && !(typeof data['user_state'] === 'string' || data['user_state'] instanceof String)) {
            throw new Error("Expected the field `user_state` to be a primitive type in the JSON string but got " + data['user_state']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} client_status
 */
SpecSimpleVO.prototype['client_status'] = undefined;

/**
 * 
 * @member {Date} create_date
 */
SpecSimpleVO.prototype['create_date'] = undefined;

/**
 * @member {module:model/PersonVO} created_by
 */
SpecSimpleVO.prototype['created_by'] = undefined;

/**
 * 
 * @member {Number} job_id
 */
SpecSimpleVO.prototype['job_id'] = undefined;

/**
 * 
 * @member {Date} last_updated
 */
SpecSimpleVO.prototype['last_updated'] = undefined;

/**
 * 
 * @member {String} reference_number
 */
SpecSimpleVO.prototype['reference_number'] = undefined;

/**
 * 
 * @member {Number} spec_id
 */
SpecSimpleVO.prototype['spec_id'] = undefined;

/**
 * 
 * @member {String} spec_name
 */
SpecSimpleVO.prototype['spec_name'] = undefined;

/**
 * 
 * @member {Array.<module:model/SpecSimpleVO>} spec_options_complete
 */
SpecSimpleVO.prototype['spec_options_complete'] = undefined;

/**
 * 
 * @member {String} supplier_status
 */
SpecSimpleVO.prototype['supplier_status'] = undefined;

/**
 * 
 * @member {Array.<module:model/UofmSimpleVO>} uofms
 */
SpecSimpleVO.prototype['uofms'] = undefined;

/**
 * 
 * @member {String} user_state
 */
SpecSimpleVO.prototype['user_state'] = undefined;






export default SpecSimpleVO;

