/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PersonVO from './PersonVO';

/**
 * The ProjectParentVO model module.
 * @module model/ProjectParentVO
 * @version 1.0
 */
class ProjectParentVO {
    /**
     * Constructs a new <code>ProjectParentVO</code>.
     * Java type: com.noosh.nooshapi.vo.ProjectParentVO
     * @alias module:model/ProjectParentVO
     */
    constructor() { 
        
        ProjectParentVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectParentVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectParentVO} obj Optional instance to populate.
     * @return {module:model/ProjectParentVO} The populated <code>ProjectParentVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectParentVO();

            if (data.hasOwnProperty('client_account')) {
                obj['client_account'] = ApiClient.convertToType(data['client_account'], 'String');
            }
            if (data.hasOwnProperty('client_user')) {
                obj['client_user'] = ApiClient.convertToType(data['client_user'], 'String');
            }
            if (data.hasOwnProperty('client_user_id')) {
                obj['client_user_id'] = ApiClient.convertToType(data['client_user_id'], 'Number');
            }
            if (data.hasOwnProperty('client_workgroup_id')) {
                obj['client_workgroup_id'] = ApiClient.convertToType(data['client_workgroup_id'], 'Number');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = PersonVO.constructFromObject(data['created_by']);
            }
            if (data.hasOwnProperty('project_create_date')) {
                obj['project_create_date'] = ApiClient.convertToType(data['project_create_date'], 'Date');
            }
            if (data.hasOwnProperty('project_description')) {
                obj['project_description'] = ApiClient.convertToType(data['project_description'], 'String');
            }
            if (data.hasOwnProperty('project_id')) {
                obj['project_id'] = ApiClient.convertToType(data['project_id'], 'Number');
            }
            if (data.hasOwnProperty('project_name')) {
                obj['project_name'] = ApiClient.convertToType(data['project_name'], 'String');
            }
            if (data.hasOwnProperty('project_number')) {
                obj['project_number'] = ApiClient.convertToType(data['project_number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectParentVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectParentVO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['client_account'] && !(typeof data['client_account'] === 'string' || data['client_account'] instanceof String)) {
            throw new Error("Expected the field `client_account` to be a primitive type in the JSON string but got " + data['client_account']);
        }
        // ensure the json data is a string
        if (data['client_user'] && !(typeof data['client_user'] === 'string' || data['client_user'] instanceof String)) {
            throw new Error("Expected the field `client_user` to be a primitive type in the JSON string but got " + data['client_user']);
        }
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // validate the optional field `created_by`
        if (data['created_by']) { // data not null
          PersonVO.validateJSON(data['created_by']);
        }
        // ensure the json data is a string
        if (data['project_description'] && !(typeof data['project_description'] === 'string' || data['project_description'] instanceof String)) {
            throw new Error("Expected the field `project_description` to be a primitive type in the JSON string but got " + data['project_description']);
        }
        // ensure the json data is a string
        if (data['project_name'] && !(typeof data['project_name'] === 'string' || data['project_name'] instanceof String)) {
            throw new Error("Expected the field `project_name` to be a primitive type in the JSON string but got " + data['project_name']);
        }
        // ensure the json data is a string
        if (data['project_number'] && !(typeof data['project_number'] === 'string' || data['project_number'] instanceof String)) {
            throw new Error("Expected the field `project_number` to be a primitive type in the JSON string but got " + data['project_number']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} client_account
 */
ProjectParentVO.prototype['client_account'] = undefined;

/**
 * 
 * @member {String} client_user
 */
ProjectParentVO.prototype['client_user'] = undefined;

/**
 * 
 * @member {Number} client_user_id
 */
ProjectParentVO.prototype['client_user_id'] = undefined;

/**
 * 
 * @member {Number} client_workgroup_id
 */
ProjectParentVO.prototype['client_workgroup_id'] = undefined;

/**
 * 
 * @member {String} comments
 */
ProjectParentVO.prototype['comments'] = undefined;

/**
 * @member {module:model/PersonVO} created_by
 */
ProjectParentVO.prototype['created_by'] = undefined;

/**
 * 
 * @member {Date} project_create_date
 */
ProjectParentVO.prototype['project_create_date'] = undefined;

/**
 * 
 * @member {String} project_description
 */
ProjectParentVO.prototype['project_description'] = undefined;

/**
 * 
 * @member {Number} project_id
 */
ProjectParentVO.prototype['project_id'] = undefined;

/**
 * 
 * @member {String} project_name
 */
ProjectParentVO.prototype['project_name'] = undefined;

/**
 * 
 * @member {String} project_number
 */
ProjectParentVO.prototype['project_number'] = undefined;






export default ProjectParentVO;

