/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvoiceItemDetailVO from './InvoiceItemDetailVO';
import PropertyPaAndAttVO from './PropertyPaAndAttVO';

/**
 * The InvoiceDetailVO model module.
 * @module model/InvoiceDetailVO
 * @version 1.0
 */
class InvoiceDetailVO {
    /**
     * Constructs a new <code>InvoiceDetailVO</code>.
     * Java type: com.noosh.nooshapi.vo.InvoiceDetailVO
     * @alias module:model/InvoiceDetailVO
     */
    constructor() { 
        
        InvoiceDetailVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceDetailVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceDetailVO} obj Optional instance to populate.
     * @return {module:model/InvoiceDetailVO} The populated <code>InvoiceDetailVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceDetailVO();

            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], [PropertyPaAndAttVO]);
            }
            if (data.hasOwnProperty('grand_total')) {
                obj['grand_total'] = ApiClient.convertToType(data['grand_total'], Object);
            }
            if (data.hasOwnProperty('invoice_date')) {
                obj['invoice_date'] = ApiClient.convertToType(data['invoice_date'], 'Date');
            }
            if (data.hasOwnProperty('invoice_due_date')) {
                obj['invoice_due_date'] = ApiClient.convertToType(data['invoice_due_date'], 'Date');
            }
            if (data.hasOwnProperty('invoice_id')) {
                obj['invoice_id'] = ApiClient.convertToType(data['invoice_id'], 'Number');
            }
            if (data.hasOwnProperty('invoice_number')) {
                obj['invoice_number'] = ApiClient.convertToType(data['invoice_number'], 'String');
            }
            if (data.hasOwnProperty('invoice_to')) {
                obj['invoice_to'] = ApiClient.convertToType(data['invoice_to'], 'String');
            }
            if (data.hasOwnProperty('is_final')) {
                obj['is_final'] = ApiClient.convertToType(data['is_final'], 'Number');
            }
            if (data.hasOwnProperty('is_nonBillable')) {
                obj['is_nonBillable'] = ApiClient.convertToType(data['is_nonBillable'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [InvoiceItemDetailVO]);
            }
            if (data.hasOwnProperty('order_reference')) {
                obj['order_reference'] = ApiClient.convertToType(data['order_reference'], 'String');
            }
            if (data.hasOwnProperty('order_title')) {
                obj['order_title'] = ApiClient.convertToType(data['order_title'], 'String');
            }
            if (data.hasOwnProperty('payment_method')) {
                obj['payment_method'] = ApiClient.convertToType(data['payment_method'], 'String');
            }
            if (data.hasOwnProperty('prepared_by')) {
                obj['prepared_by'] = ApiClient.convertToType(data['prepared_by'], 'String');
            }
            if (data.hasOwnProperty('project_number')) {
                obj['project_number'] = ApiClient.convertToType(data['project_number'], 'Number');
            }
            if (data.hasOwnProperty('reference_number')) {
                obj['reference_number'] = ApiClient.convertToType(data['reference_number'], 'String');
            }
            if (data.hasOwnProperty('shipping')) {
                obj['shipping'] = ApiClient.convertToType(data['shipping'], Object);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('sub_total')) {
                obj['sub_total'] = ApiClient.convertToType(data['sub_total'], Object);
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = ApiClient.convertToType(data['tax'], Object);
            }
            if (data.hasOwnProperty('transactional_currency')) {
                obj['transactional_currency'] = ApiClient.convertToType(data['transactional_currency'], 'String');
            }
            if (data.hasOwnProperty('transactional_grand_total')) {
                obj['transactional_grand_total'] = ApiClient.convertToType(data['transactional_grand_total'], Object);
            }
            if (data.hasOwnProperty('transactional_shipping')) {
                obj['transactional_shipping'] = ApiClient.convertToType(data['transactional_shipping'], Object);
            }
            if (data.hasOwnProperty('transactional_sub_total')) {
                obj['transactional_sub_total'] = ApiClient.convertToType(data['transactional_sub_total'], Object);
            }
            if (data.hasOwnProperty('transactional_tax')) {
                obj['transactional_tax'] = ApiClient.convertToType(data['transactional_tax'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceDetailVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceDetailVO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        if (data['custom_fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_fields'])) {
                throw new Error("Expected the field `custom_fields` to be an array in the JSON data but got " + data['custom_fields']);
            }
            // validate the optional field `custom_fields` (array)
            for (const item of data['custom_fields']) {
                PropertyPaAndAttVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['invoice_number'] && !(typeof data['invoice_number'] === 'string' || data['invoice_number'] instanceof String)) {
            throw new Error("Expected the field `invoice_number` to be a primitive type in the JSON string but got " + data['invoice_number']);
        }
        // ensure the json data is a string
        if (data['invoice_to'] && !(typeof data['invoice_to'] === 'string' || data['invoice_to'] instanceof String)) {
            throw new Error("Expected the field `invoice_to` to be a primitive type in the JSON string but got " + data['invoice_to']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                InvoiceItemDetailVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['order_reference'] && !(typeof data['order_reference'] === 'string' || data['order_reference'] instanceof String)) {
            throw new Error("Expected the field `order_reference` to be a primitive type in the JSON string but got " + data['order_reference']);
        }
        // ensure the json data is a string
        if (data['order_title'] && !(typeof data['order_title'] === 'string' || data['order_title'] instanceof String)) {
            throw new Error("Expected the field `order_title` to be a primitive type in the JSON string but got " + data['order_title']);
        }
        // ensure the json data is a string
        if (data['payment_method'] && !(typeof data['payment_method'] === 'string' || data['payment_method'] instanceof String)) {
            throw new Error("Expected the field `payment_method` to be a primitive type in the JSON string but got " + data['payment_method']);
        }
        // ensure the json data is a string
        if (data['prepared_by'] && !(typeof data['prepared_by'] === 'string' || data['prepared_by'] instanceof String)) {
            throw new Error("Expected the field `prepared_by` to be a primitive type in the JSON string but got " + data['prepared_by']);
        }
        // ensure the json data is a string
        if (data['reference_number'] && !(typeof data['reference_number'] === 'string' || data['reference_number'] instanceof String)) {
            throw new Error("Expected the field `reference_number` to be a primitive type in the JSON string but got " + data['reference_number']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['transactional_currency'] && !(typeof data['transactional_currency'] === 'string' || data['transactional_currency'] instanceof String)) {
            throw new Error("Expected the field `transactional_currency` to be a primitive type in the JSON string but got " + data['transactional_currency']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} comments
 */
InvoiceDetailVO.prototype['comments'] = undefined;

/**
 * 
 * @member {String} currency
 */
InvoiceDetailVO.prototype['currency'] = undefined;

/**
 * 
 * @member {Array.<module:model/PropertyPaAndAttVO>} custom_fields
 */
InvoiceDetailVO.prototype['custom_fields'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} grand_total
 */
InvoiceDetailVO.prototype['grand_total'] = undefined;

/**
 * 
 * @member {Date} invoice_date
 */
InvoiceDetailVO.prototype['invoice_date'] = undefined;

/**
 * 
 * @member {Date} invoice_due_date
 */
InvoiceDetailVO.prototype['invoice_due_date'] = undefined;

/**
 * 
 * @member {Number} invoice_id
 */
InvoiceDetailVO.prototype['invoice_id'] = undefined;

/**
 * 
 * @member {String} invoice_number
 */
InvoiceDetailVO.prototype['invoice_number'] = undefined;

/**
 * 
 * @member {String} invoice_to
 */
InvoiceDetailVO.prototype['invoice_to'] = undefined;

/**
 * 
 * @member {Number} is_final
 */
InvoiceDetailVO.prototype['is_final'] = undefined;

/**
 * 
 * @member {Number} is_nonBillable
 */
InvoiceDetailVO.prototype['is_nonBillable'] = undefined;

/**
 * 
 * @member {Array.<module:model/InvoiceItemDetailVO>} items
 */
InvoiceDetailVO.prototype['items'] = undefined;

/**
 * 
 * @member {String} order_reference
 */
InvoiceDetailVO.prototype['order_reference'] = undefined;

/**
 * 
 * @member {String} order_title
 */
InvoiceDetailVO.prototype['order_title'] = undefined;

/**
 * 
 * @member {String} payment_method
 */
InvoiceDetailVO.prototype['payment_method'] = undefined;

/**
 * 
 * @member {String} prepared_by
 */
InvoiceDetailVO.prototype['prepared_by'] = undefined;

/**
 * 
 * @member {Number} project_number
 */
InvoiceDetailVO.prototype['project_number'] = undefined;

/**
 * 
 * @member {String} reference_number
 */
InvoiceDetailVO.prototype['reference_number'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} shipping
 */
InvoiceDetailVO.prototype['shipping'] = undefined;

/**
 * 
 * @member {String} status
 */
InvoiceDetailVO.prototype['status'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} sub_total
 */
InvoiceDetailVO.prototype['sub_total'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} tax
 */
InvoiceDetailVO.prototype['tax'] = undefined;

/**
 * 
 * @member {String} transactional_currency
 */
InvoiceDetailVO.prototype['transactional_currency'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_grand_total
 */
InvoiceDetailVO.prototype['transactional_grand_total'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_shipping
 */
InvoiceDetailVO.prototype['transactional_shipping'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_sub_total
 */
InvoiceDetailVO.prototype['transactional_sub_total'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_tax
 */
InvoiceDetailVO.prototype['transactional_tax'] = undefined;






export default InvoiceDetailVO;

