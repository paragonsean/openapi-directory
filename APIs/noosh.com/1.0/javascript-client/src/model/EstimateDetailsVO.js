/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EstimateItemDetailsVO from './EstimateItemDetailsVO';
import ProjectBaseVO from './ProjectBaseVO';
import PropertyPaAndAttVO from './PropertyPaAndAttVO';
import RfeBaseVO from './RfeBaseVO';
import WorkgroupBaseVO from './WorkgroupBaseVO';

/**
 * The EstimateDetailsVO model module.
 * @module model/EstimateDetailsVO
 * @version 1.0
 */
class EstimateDetailsVO {
    /**
     * Constructs a new <code>EstimateDetailsVO</code>.
     * Java type: com.noosh.nooshapi.vo.EstimateDetailsVO
     * @alias module:model/EstimateDetailsVO
     */
    constructor() { 
        
        EstimateDetailsVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EstimateDetailsVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EstimateDetailsVO} obj Optional instance to populate.
     * @return {module:model/EstimateDetailsVO} The populated <code>EstimateDetailsVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EstimateDetailsVO();

            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('create_date')) {
                obj['create_date'] = ApiClient.convertToType(data['create_date'], 'Date');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], [PropertyPaAndAttVO]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('estimate_id')) {
                obj['estimate_id'] = ApiClient.convertToType(data['estimate_id'], 'Number');
            }
            if (data.hasOwnProperty('estimate_title')) {
                obj['estimate_title'] = ApiClient.convertToType(data['estimate_title'], 'String');
            }
            if (data.hasOwnProperty('expiration_date')) {
                obj['expiration_date'] = ApiClient.convertToType(data['expiration_date'], 'Date');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [EstimateItemDetailsVO]);
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ProjectBaseVO.constructFromObject(data['project']);
            }
            if (data.hasOwnProperty('reference_number')) {
                obj['reference_number'] = ApiClient.convertToType(data['reference_number'], 'String');
            }
            if (data.hasOwnProperty('rfe')) {
                obj['rfe'] = RfeBaseVO.constructFromObject(data['rfe']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('submit_date')) {
                obj['submit_date'] = ApiClient.convertToType(data['submit_date'], 'Date');
            }
            if (data.hasOwnProperty('submitted_by')) {
                obj['submitted_by'] = ApiClient.convertToType(data['submitted_by'], 'String');
            }
            if (data.hasOwnProperty('submitted_by_user_id')) {
                obj['submitted_by_user_id'] = ApiClient.convertToType(data['submitted_by_user_id'], 'Number');
            }
            if (data.hasOwnProperty('supplier_workgroup')) {
                obj['supplier_workgroup'] = WorkgroupBaseVO.constructFromObject(data['supplier_workgroup']);
            }
            if (data.hasOwnProperty('transactional_currency')) {
                obj['transactional_currency'] = ApiClient.convertToType(data['transactional_currency'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EstimateDetailsVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EstimateDetailsVO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        if (data['custom_fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_fields'])) {
                throw new Error("Expected the field `custom_fields` to be an array in the JSON data but got " + data['custom_fields']);
            }
            // validate the optional field `custom_fields` (array)
            for (const item of data['custom_fields']) {
                PropertyPaAndAttVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['estimate_title'] && !(typeof data['estimate_title'] === 'string' || data['estimate_title'] instanceof String)) {
            throw new Error("Expected the field `estimate_title` to be a primitive type in the JSON string but got " + data['estimate_title']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                EstimateItemDetailsVO.validateJSON(item);
            };
        }
        // validate the optional field `project`
        if (data['project']) { // data not null
          ProjectBaseVO.validateJSON(data['project']);
        }
        // ensure the json data is a string
        if (data['reference_number'] && !(typeof data['reference_number'] === 'string' || data['reference_number'] instanceof String)) {
            throw new Error("Expected the field `reference_number` to be a primitive type in the JSON string but got " + data['reference_number']);
        }
        // validate the optional field `rfe`
        if (data['rfe']) { // data not null
          RfeBaseVO.validateJSON(data['rfe']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['submitted_by'] && !(typeof data['submitted_by'] === 'string' || data['submitted_by'] instanceof String)) {
            throw new Error("Expected the field `submitted_by` to be a primitive type in the JSON string but got " + data['submitted_by']);
        }
        // validate the optional field `supplier_workgroup`
        if (data['supplier_workgroup']) { // data not null
          WorkgroupBaseVO.validateJSON(data['supplier_workgroup']);
        }
        // ensure the json data is a string
        if (data['transactional_currency'] && !(typeof data['transactional_currency'] === 'string' || data['transactional_currency'] instanceof String)) {
            throw new Error("Expected the field `transactional_currency` to be a primitive type in the JSON string but got " + data['transactional_currency']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} comments
 */
EstimateDetailsVO.prototype['comments'] = undefined;

/**
 * 
 * @member {Date} create_date
 */
EstimateDetailsVO.prototype['create_date'] = undefined;

/**
 * 
 * @member {String} currency
 */
EstimateDetailsVO.prototype['currency'] = undefined;

/**
 * 
 * @member {Array.<module:model/PropertyPaAndAttVO>} custom_fields
 */
EstimateDetailsVO.prototype['custom_fields'] = undefined;

/**
 * 
 * @member {String} description
 */
EstimateDetailsVO.prototype['description'] = undefined;

/**
 * 
 * @member {Number} estimate_id
 */
EstimateDetailsVO.prototype['estimate_id'] = undefined;

/**
 * 
 * @member {String} estimate_title
 */
EstimateDetailsVO.prototype['estimate_title'] = undefined;

/**
 * 
 * @member {Date} expiration_date
 */
EstimateDetailsVO.prototype['expiration_date'] = undefined;

/**
 * 
 * @member {Array.<module:model/EstimateItemDetailsVO>} items
 */
EstimateDetailsVO.prototype['items'] = undefined;

/**
 * @member {module:model/ProjectBaseVO} project
 */
EstimateDetailsVO.prototype['project'] = undefined;

/**
 * 
 * @member {String} reference_number
 */
EstimateDetailsVO.prototype['reference_number'] = undefined;

/**
 * @member {module:model/RfeBaseVO} rfe
 */
EstimateDetailsVO.prototype['rfe'] = undefined;

/**
 * 
 * @member {String} status
 */
EstimateDetailsVO.prototype['status'] = undefined;

/**
 * 
 * @member {Date} submit_date
 */
EstimateDetailsVO.prototype['submit_date'] = undefined;

/**
 * 
 * @member {String} submitted_by
 */
EstimateDetailsVO.prototype['submitted_by'] = undefined;

/**
 * 
 * @member {Number} submitted_by_user_id
 */
EstimateDetailsVO.prototype['submitted_by_user_id'] = undefined;

/**
 * @member {module:model/WorkgroupBaseVO} supplier_workgroup
 */
EstimateDetailsVO.prototype['supplier_workgroup'] = undefined;

/**
 * 
 * @member {String} transactional_currency
 */
EstimateDetailsVO.prototype['transactional_currency'] = undefined;






export default EstimateDetailsVO;

