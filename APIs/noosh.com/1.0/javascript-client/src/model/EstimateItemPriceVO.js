/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BreakoutVO from './BreakoutVO';
import ItemOptionVO from './ItemOptionVO';

/**
 * The EstimateItemPriceVO model module.
 * @module model/EstimateItemPriceVO
 * @version 1.0
 */
class EstimateItemPriceVO {
    /**
     * Constructs a new <code>EstimateItemPriceVO</code>.
     * Java type: com.noosh.nooshapi.vo.EstimateItemPriceVO
     * @alias module:model/EstimateItemPriceVO
     */
    constructor() { 
        
        EstimateItemPriceVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EstimateItemPriceVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EstimateItemPriceVO} obj Optional instance to populate.
     * @return {module:model/EstimateItemPriceVO} The populated <code>EstimateItemPriceVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EstimateItemPriceVO();

            if (data.hasOwnProperty('add_price')) {
                obj['add_price'] = ApiClient.convertToType(data['add_price'], Object);
            }
            if (data.hasOwnProperty('breakouts')) {
                obj['breakouts'] = ApiClient.convertToType(data['breakouts'], [BreakoutVO]);
            }
            if (data.hasOwnProperty('em_estimate_item_price_id')) {
                obj['em_estimate_item_price_id'] = ApiClient.convertToType(data['em_estimate_item_price_id'], 'Number');
            }
            if (data.hasOwnProperty('item_option')) {
                obj['item_option'] = ItemOptionVO.constructFromObject(data['item_option']);
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], Object);
            }
            if (data.hasOwnProperty('shipping')) {
                obj['shipping'] = ApiClient.convertToType(data['shipping'], Object);
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = ApiClient.convertToType(data['tax'], Object);
            }
            if (data.hasOwnProperty('total_price')) {
                obj['total_price'] = ApiClient.convertToType(data['total_price'], Object);
            }
            if (data.hasOwnProperty('transactional_add_price')) {
                obj['transactional_add_price'] = ApiClient.convertToType(data['transactional_add_price'], Object);
            }
            if (data.hasOwnProperty('transactional_price')) {
                obj['transactional_price'] = ApiClient.convertToType(data['transactional_price'], Object);
            }
            if (data.hasOwnProperty('transactional_shipping')) {
                obj['transactional_shipping'] = ApiClient.convertToType(data['transactional_shipping'], Object);
            }
            if (data.hasOwnProperty('transactional_tax')) {
                obj['transactional_tax'] = ApiClient.convertToType(data['transactional_tax'], Object);
            }
            if (data.hasOwnProperty('transactional_total_price')) {
                obj['transactional_total_price'] = ApiClient.convertToType(data['transactional_total_price'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EstimateItemPriceVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EstimateItemPriceVO</code>.
     */
    static validateJSON(data) {
        if (data['breakouts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['breakouts'])) {
                throw new Error("Expected the field `breakouts` to be an array in the JSON data but got " + data['breakouts']);
            }
            // validate the optional field `breakouts` (array)
            for (const item of data['breakouts']) {
                BreakoutVO.validateJSON(item);
            };
        }
        // validate the optional field `item_option`
        if (data['item_option']) { // data not null
          ItemOptionVO.validateJSON(data['item_option']);
        }

        return true;
    }


}



/**
 * Java type: java.math.BigDecimal
 * @member {Object} add_price
 */
EstimateItemPriceVO.prototype['add_price'] = undefined;

/**
 * 
 * @member {Array.<module:model/BreakoutVO>} breakouts
 */
EstimateItemPriceVO.prototype['breakouts'] = undefined;

/**
 * 
 * @member {Number} em_estimate_item_price_id
 */
EstimateItemPriceVO.prototype['em_estimate_item_price_id'] = undefined;

/**
 * @member {module:model/ItemOptionVO} item_option
 */
EstimateItemPriceVO.prototype['item_option'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} price
 */
EstimateItemPriceVO.prototype['price'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} shipping
 */
EstimateItemPriceVO.prototype['shipping'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} tax
 */
EstimateItemPriceVO.prototype['tax'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} total_price
 */
EstimateItemPriceVO.prototype['total_price'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_add_price
 */
EstimateItemPriceVO.prototype['transactional_add_price'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_price
 */
EstimateItemPriceVO.prototype['transactional_price'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_shipping
 */
EstimateItemPriceVO.prototype['transactional_shipping'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_tax
 */
EstimateItemPriceVO.prototype['transactional_tax'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_total_price
 */
EstimateItemPriceVO.prototype['transactional_total_price'] = undefined;






export default EstimateItemPriceVO;

