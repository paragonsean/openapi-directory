/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RfeSpecPO model module.
 * @module model/RfeSpecPO
 * @version 1.0
 */
class RfeSpecPO {
    /**
     * Constructs a new <code>RfeSpecPO</code>.
     * Java type: com.noosh.domain.nooshapi.persist.po.RfeSpecPO
     * @alias module:model/RfeSpecPO
     */
    constructor() { 
        
        RfeSpecPO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RfeSpecPO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RfeSpecPO} obj Optional instance to populate.
     * @return {module:model/RfeSpecPO} The populated <code>RfeSpecPO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RfeSpecPO();

            if (data.hasOwnProperty('quantity_1')) {
                obj['quantity_1'] = ApiClient.convertToType(data['quantity_1'], 'Number');
            }
            if (data.hasOwnProperty('quantity_2')) {
                obj['quantity_2'] = ApiClient.convertToType(data['quantity_2'], 'Number');
            }
            if (data.hasOwnProperty('quantity_3')) {
                obj['quantity_3'] = ApiClient.convertToType(data['quantity_3'], 'Number');
            }
            if (data.hasOwnProperty('quantity_4')) {
                obj['quantity_4'] = ApiClient.convertToType(data['quantity_4'], 'Number');
            }
            if (data.hasOwnProperty('quantity_5')) {
                obj['quantity_5'] = ApiClient.convertToType(data['quantity_5'], 'Number');
            }
            if (data.hasOwnProperty('spec_id')) {
                obj['spec_id'] = ApiClient.convertToType(data['spec_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RfeSpecPO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RfeSpecPO</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * 
 * @member {Number} quantity_1
 */
RfeSpecPO.prototype['quantity_1'] = undefined;

/**
 * 
 * @member {Number} quantity_2
 */
RfeSpecPO.prototype['quantity_2'] = undefined;

/**
 * 
 * @member {Number} quantity_3
 */
RfeSpecPO.prototype['quantity_3'] = undefined;

/**
 * 
 * @member {Number} quantity_4
 */
RfeSpecPO.prototype['quantity_4'] = undefined;

/**
 * 
 * @member {Number} quantity_5
 */
RfeSpecPO.prototype['quantity_5'] = undefined;

/**
 * 
 * @member {Number} spec_id
 */
RfeSpecPO.prototype['spec_id'] = undefined;






export default RfeSpecPO;

