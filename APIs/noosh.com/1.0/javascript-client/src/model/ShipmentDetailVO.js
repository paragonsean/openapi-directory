/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShipmentRequestBaseVO from './ShipmentRequestBaseVO';
import SpecBaseVO from './SpecBaseVO';

/**
 * The ShipmentDetailVO model module.
 * @module model/ShipmentDetailVO
 * @version 1.0
 */
class ShipmentDetailVO {
    /**
     * Constructs a new <code>ShipmentDetailVO</code>.
     * Java type: com.noosh.nooshapi.vo.ShipmentDetailVO
     * @alias module:model/ShipmentDetailVO
     */
    constructor() { 
        
        ShipmentDetailVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShipmentDetailVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShipmentDetailVO} obj Optional instance to populate.
     * @return {module:model/ShipmentDetailVO} The populated <code>ShipmentDetailVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShipmentDetailVO();

            if (data.hasOwnProperty('locations')) {
                obj['locations'] = ApiClient.convertToType(data['locations'], [ShipmentRequestBaseVO]);
            }
            if (data.hasOwnProperty('locations_count')) {
                obj['locations_count'] = ApiClient.convertToType(data['locations_count'], 'Number');
            }
            if (data.hasOwnProperty('qty_received')) {
                obj['qty_received'] = ApiClient.convertToType(data['qty_received'], 'Number');
            }
            if (data.hasOwnProperty('qty_requested')) {
                obj['qty_requested'] = ApiClient.convertToType(data['qty_requested'], 'Number');
            }
            if (data.hasOwnProperty('qty_shipped')) {
                obj['qty_shipped'] = ApiClient.convertToType(data['qty_shipped'], 'Number');
            }
            if (data.hasOwnProperty('received_date')) {
                obj['received_date'] = ApiClient.convertToType(data['received_date'], 'Date');
            }
            if (data.hasOwnProperty('shipment_id')) {
                obj['shipment_id'] = ApiClient.convertToType(data['shipment_id'], 'Number');
            }
            if (data.hasOwnProperty('shipment_status')) {
                obj['shipment_status'] = ApiClient.convertToType(data['shipment_status'], 'String');
            }
            if (data.hasOwnProperty('shipped_date')) {
                obj['shipped_date'] = ApiClient.convertToType(data['shipped_date'], 'Date');
            }
            if (data.hasOwnProperty('spec')) {
                obj['spec'] = SpecBaseVO.constructFromObject(data['spec']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShipmentDetailVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShipmentDetailVO</code>.
     */
    static validateJSON(data) {
        if (data['locations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['locations'])) {
                throw new Error("Expected the field `locations` to be an array in the JSON data but got " + data['locations']);
            }
            // validate the optional field `locations` (array)
            for (const item of data['locations']) {
                ShipmentRequestBaseVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['shipment_status'] && !(typeof data['shipment_status'] === 'string' || data['shipment_status'] instanceof String)) {
            throw new Error("Expected the field `shipment_status` to be a primitive type in the JSON string but got " + data['shipment_status']);
        }
        // validate the optional field `spec`
        if (data['spec']) { // data not null
          SpecBaseVO.validateJSON(data['spec']);
        }

        return true;
    }


}



/**
 * 
 * @member {Array.<module:model/ShipmentRequestBaseVO>} locations
 */
ShipmentDetailVO.prototype['locations'] = undefined;

/**
 * 
 * @member {Number} locations_count
 */
ShipmentDetailVO.prototype['locations_count'] = undefined;

/**
 * 
 * @member {Number} qty_received
 */
ShipmentDetailVO.prototype['qty_received'] = undefined;

/**
 * 
 * @member {Number} qty_requested
 */
ShipmentDetailVO.prototype['qty_requested'] = undefined;

/**
 * 
 * @member {Number} qty_shipped
 */
ShipmentDetailVO.prototype['qty_shipped'] = undefined;

/**
 * 
 * @member {Date} received_date
 */
ShipmentDetailVO.prototype['received_date'] = undefined;

/**
 * 
 * @member {Number} shipment_id
 */
ShipmentDetailVO.prototype['shipment_id'] = undefined;

/**
 * 
 * @member {String} shipment_status
 */
ShipmentDetailVO.prototype['shipment_status'] = undefined;

/**
 * 
 * @member {Date} shipped_date
 */
ShipmentDetailVO.prototype['shipped_date'] = undefined;

/**
 * @member {module:model/SpecBaseVO} spec
 */
ShipmentDetailVO.prototype['spec'] = undefined;






export default ShipmentDetailVO;

