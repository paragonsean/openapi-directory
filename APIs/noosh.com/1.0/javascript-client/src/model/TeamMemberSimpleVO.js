/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TeamMemberSimpleVO model module.
 * @module model/TeamMemberSimpleVO
 * @version 1.0
 */
class TeamMemberSimpleVO {
    /**
     * Constructs a new <code>TeamMemberSimpleVO</code>.
     * Java type: com.noosh.nooshapi.vo.TeamMemberSimpleVO
     * @alias module:model/TeamMemberSimpleVO
     */
    constructor() { 
        
        TeamMemberSimpleVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TeamMemberSimpleVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamMemberSimpleVO} obj Optional instance to populate.
     * @return {module:model/TeamMemberSimpleVO} The populated <code>TeamMemberSimpleVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamMemberSimpleVO();

            if (data.hasOwnProperty('company_name')) {
                obj['company_name'] = ApiClient.convertToType(data['company_name'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('teammember_id')) {
                obj['teammember_id'] = ApiClient.convertToType(data['teammember_id'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('workgroup_name')) {
                obj['workgroup_name'] = ApiClient.convertToType(data['workgroup_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamMemberSimpleVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamMemberSimpleVO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['company_name'] && !(typeof data['company_name'] === 'string' || data['company_name'] instanceof String)) {
            throw new Error("Expected the field `company_name` to be a primitive type in the JSON string but got " + data['company_name']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is a string
        if (data['workgroup_name'] && !(typeof data['workgroup_name'] === 'string' || data['workgroup_name'] instanceof String)) {
            throw new Error("Expected the field `workgroup_name` to be a primitive type in the JSON string but got " + data['workgroup_name']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} company_name
 */
TeamMemberSimpleVO.prototype['company_name'] = undefined;

/**
 * 
 * @member {String} name
 */
TeamMemberSimpleVO.prototype['name'] = undefined;

/**
 * 
 * @member {String} phone
 */
TeamMemberSimpleVO.prototype['phone'] = undefined;

/**
 * 
 * @member {String} role
 */
TeamMemberSimpleVO.prototype['role'] = undefined;

/**
 * 
 * @member {Number} teammember_id
 */
TeamMemberSimpleVO.prototype['teammember_id'] = undefined;

/**
 * 
 * @member {Number} user_id
 */
TeamMemberSimpleVO.prototype['user_id'] = undefined;

/**
 * 
 * @member {String} workgroup_name
 */
TeamMemberSimpleVO.prototype['workgroup_name'] = undefined;






export default TeamMemberSimpleVO;

