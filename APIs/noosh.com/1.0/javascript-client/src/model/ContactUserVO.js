/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContactUserVO model module.
 * @module model/ContactUserVO
 * @version 1.0
 */
class ContactUserVO {
    /**
     * Constructs a new <code>ContactUserVO</code>.
     * Java type: com.noosh.domain.nooshapi.persist.vo.ContactUserVO
     * @alias module:model/ContactUserVO
     * @param roleId {Number} 
     * @param userId {Number} 
     */
    constructor(roleId, userId) { 
        
        ContactUserVO.initialize(this, roleId, userId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, roleId, userId) { 
        obj['role_id'] = roleId;
        obj['user_id'] = userId;
    }

    /**
     * Constructs a <code>ContactUserVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContactUserVO} obj Optional instance to populate.
     * @return {module:model/ContactUserVO} The populated <code>ContactUserVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContactUserVO();

            if (data.hasOwnProperty('role_id')) {
                obj['role_id'] = ApiClient.convertToType(data['role_id'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContactUserVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContactUserVO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContactUserVO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ContactUserVO.RequiredProperties = ["role_id", "user_id"];

/**
 * 
 * @member {Number} role_id
 */
ContactUserVO.prototype['role_id'] = undefined;

/**
 * 
 * @member {Number} user_id
 */
ContactUserVO.prototype['user_id'] = undefined;






export default ContactUserVO;

