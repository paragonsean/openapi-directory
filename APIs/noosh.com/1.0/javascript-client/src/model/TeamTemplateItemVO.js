/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RoleSimpleVO from './RoleSimpleVO';
import UserPersonVO from './UserPersonVO';

/**
 * The TeamTemplateItemVO model module.
 * @module model/TeamTemplateItemVO
 * @version 1.0
 */
class TeamTemplateItemVO {
    /**
     * Constructs a new <code>TeamTemplateItemVO</code>.
     * Java type: com.noosh.nooshapi.vo.TeamTemplateItemVO
     * @alias module:model/TeamTemplateItemVO
     */
    constructor() { 
        
        TeamTemplateItemVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TeamTemplateItemVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamTemplateItemVO} obj Optional instance to populate.
     * @return {module:model/TeamTemplateItemVO} The populated <code>TeamTemplateItemVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamTemplateItemVO();

            if (data.hasOwnProperty('role')) {
                obj['role'] = RoleSimpleVO.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserPersonVO.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamTemplateItemVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamTemplateItemVO</code>.
     */
    static validateJSON(data) {
        // validate the optional field `role`
        if (data['role']) { // data not null
          RoleSimpleVO.validateJSON(data['role']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          UserPersonVO.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {module:model/RoleSimpleVO} role
 */
TeamTemplateItemVO.prototype['role'] = undefined;

/**
 * @member {module:model/UserPersonVO} user
 */
TeamTemplateItemVO.prototype['user'] = undefined;






export default TeamTemplateItemVO;

