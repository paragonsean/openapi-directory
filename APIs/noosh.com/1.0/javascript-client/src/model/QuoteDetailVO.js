/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PropertyPaAndAttVO from './PropertyPaAndAttVO';
import QuoteItemDetailVO from './QuoteItemDetailVO';

/**
 * The QuoteDetailVO model module.
 * @module model/QuoteDetailVO
 * @version 1.0
 */
class QuoteDetailVO {
    /**
     * Constructs a new <code>QuoteDetailVO</code>.
     * Java type: com.noosh.nooshapi.vo.QuoteDetailVO
     * @alias module:model/QuoteDetailVO
     */
    constructor() { 
        
        QuoteDetailVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuoteDetailVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteDetailVO} obj Optional instance to populate.
     * @return {module:model/QuoteDetailVO} The populated <code>QuoteDetailVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteDetailVO();

            if (data.hasOwnProperty('client')) {
                obj['client'] = ApiClient.convertToType(data['client'], 'String');
            }
            if (data.hasOwnProperty('client_user_id')) {
                obj['client_user_id'] = ApiClient.convertToType(data['client_user_id'], 'Number');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('creator_user_id')) {
                obj['creator_user_id'] = ApiClient.convertToType(data['creator_user_id'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], [PropertyPaAndAttVO]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('grand_total')) {
                obj['grand_total'] = ApiClient.convertToType(data['grand_total'], Object);
            }
            if (data.hasOwnProperty('is_show_supplier_information')) {
                obj['is_show_supplier_information'] = ApiClient.convertToType(data['is_show_supplier_information'], 'Boolean');
            }
            if (data.hasOwnProperty('last_update_by_user_id')) {
                obj['last_update_by_user_id'] = ApiClient.convertToType(data['last_update_by_user_id'], 'Number');
            }
            if (data.hasOwnProperty('proposed_order_completion_date')) {
                obj['proposed_order_completion_date'] = ApiClient.convertToType(data['proposed_order_completion_date'], 'Date');
            }
            if (data.hasOwnProperty('quote_expiration_date')) {
                obj['quote_expiration_date'] = ApiClient.convertToType(data['quote_expiration_date'], 'Date');
            }
            if (data.hasOwnProperty('quote_id')) {
                obj['quote_id'] = ApiClient.convertToType(data['quote_id'], 'Number');
            }
            if (data.hasOwnProperty('quote_items')) {
                obj['quote_items'] = ApiClient.convertToType(data['quote_items'], [QuoteItemDetailVO]);
            }
            if (data.hasOwnProperty('quote_items_total')) {
                obj['quote_items_total'] = ApiClient.convertToType(data['quote_items_total'], Object);
            }
            if (data.hasOwnProperty('quote_title')) {
                obj['quote_title'] = ApiClient.convertToType(data['quote_title'], 'String');
            }
            if (data.hasOwnProperty('shipping')) {
                obj['shipping'] = ApiClient.convertToType(data['shipping'], Object);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('submit_date')) {
                obj['submit_date'] = ApiClient.convertToType(data['submit_date'], 'Date');
            }
            if (data.hasOwnProperty('tax')) {
                obj['tax'] = ApiClient.convertToType(data['tax'], Object);
            }
            if (data.hasOwnProperty('transactional_currency')) {
                obj['transactional_currency'] = ApiClient.convertToType(data['transactional_currency'], 'String');
            }
            if (data.hasOwnProperty('transactional_grand_total')) {
                obj['transactional_grand_total'] = ApiClient.convertToType(data['transactional_grand_total'], Object);
            }
            if (data.hasOwnProperty('transactional_quote_items_total')) {
                obj['transactional_quote_items_total'] = ApiClient.convertToType(data['transactional_quote_items_total'], Object);
            }
            if (data.hasOwnProperty('transactional_shipping')) {
                obj['transactional_shipping'] = ApiClient.convertToType(data['transactional_shipping'], Object);
            }
            if (data.hasOwnProperty('transactional_tax')) {
                obj['transactional_tax'] = ApiClient.convertToType(data['transactional_tax'], Object);
            }
            if (data.hasOwnProperty('vat_code')) {
                obj['vat_code'] = ApiClient.convertToType(data['vat_code'], 'String');
            }
            if (data.hasOwnProperty('vat_rate')) {
                obj['vat_rate'] = ApiClient.convertToType(data['vat_rate'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteDetailVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteDetailVO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['client'] && !(typeof data['client'] === 'string' || data['client'] instanceof String)) {
            throw new Error("Expected the field `client` to be a primitive type in the JSON string but got " + data['client']);
        }
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        if (data['custom_fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_fields'])) {
                throw new Error("Expected the field `custom_fields` to be an array in the JSON data but got " + data['custom_fields']);
            }
            // validate the optional field `custom_fields` (array)
            for (const item of data['custom_fields']) {
                PropertyPaAndAttVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['quote_items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['quote_items'])) {
                throw new Error("Expected the field `quote_items` to be an array in the JSON data but got " + data['quote_items']);
            }
            // validate the optional field `quote_items` (array)
            for (const item of data['quote_items']) {
                QuoteItemDetailVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['quote_title'] && !(typeof data['quote_title'] === 'string' || data['quote_title'] instanceof String)) {
            throw new Error("Expected the field `quote_title` to be a primitive type in the JSON string but got " + data['quote_title']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['transactional_currency'] && !(typeof data['transactional_currency'] === 'string' || data['transactional_currency'] instanceof String)) {
            throw new Error("Expected the field `transactional_currency` to be a primitive type in the JSON string but got " + data['transactional_currency']);
        }
        // ensure the json data is a string
        if (data['vat_code'] && !(typeof data['vat_code'] === 'string' || data['vat_code'] instanceof String)) {
            throw new Error("Expected the field `vat_code` to be a primitive type in the JSON string but got " + data['vat_code']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} client
 */
QuoteDetailVO.prototype['client'] = undefined;

/**
 * 
 * @member {Number} client_user_id
 */
QuoteDetailVO.prototype['client_user_id'] = undefined;

/**
 * 
 * @member {String} comments
 */
QuoteDetailVO.prototype['comments'] = undefined;

/**
 * 
 * @member {Number} creator_user_id
 */
QuoteDetailVO.prototype['creator_user_id'] = undefined;

/**
 * 
 * @member {String} currency
 */
QuoteDetailVO.prototype['currency'] = undefined;

/**
 * 
 * @member {Array.<module:model/PropertyPaAndAttVO>} custom_fields
 */
QuoteDetailVO.prototype['custom_fields'] = undefined;

/**
 * 
 * @member {String} description
 */
QuoteDetailVO.prototype['description'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} grand_total
 */
QuoteDetailVO.prototype['grand_total'] = undefined;

/**
 * 
 * @member {Boolean} is_show_supplier_information
 */
QuoteDetailVO.prototype['is_show_supplier_information'] = undefined;

/**
 * 
 * @member {Number} last_update_by_user_id
 */
QuoteDetailVO.prototype['last_update_by_user_id'] = undefined;

/**
 * 
 * @member {Date} proposed_order_completion_date
 */
QuoteDetailVO.prototype['proposed_order_completion_date'] = undefined;

/**
 * 
 * @member {Date} quote_expiration_date
 */
QuoteDetailVO.prototype['quote_expiration_date'] = undefined;

/**
 * 
 * @member {Number} quote_id
 */
QuoteDetailVO.prototype['quote_id'] = undefined;

/**
 * 
 * @member {Array.<module:model/QuoteItemDetailVO>} quote_items
 */
QuoteDetailVO.prototype['quote_items'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} quote_items_total
 */
QuoteDetailVO.prototype['quote_items_total'] = undefined;

/**
 * 
 * @member {String} quote_title
 */
QuoteDetailVO.prototype['quote_title'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} shipping
 */
QuoteDetailVO.prototype['shipping'] = undefined;

/**
 * 
 * @member {String} status
 */
QuoteDetailVO.prototype['status'] = undefined;

/**
 * 
 * @member {Date} submit_date
 */
QuoteDetailVO.prototype['submit_date'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} tax
 */
QuoteDetailVO.prototype['tax'] = undefined;

/**
 * 
 * @member {String} transactional_currency
 */
QuoteDetailVO.prototype['transactional_currency'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_grand_total
 */
QuoteDetailVO.prototype['transactional_grand_total'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_quote_items_total
 */
QuoteDetailVO.prototype['transactional_quote_items_total'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_shipping
 */
QuoteDetailVO.prototype['transactional_shipping'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} transactional_tax
 */
QuoteDetailVO.prototype['transactional_tax'] = undefined;

/**
 * 
 * @member {String} vat_code
 */
QuoteDetailVO.prototype['vat_code'] = undefined;

/**
 * Java type: java.math.BigDecimal
 * @member {Object} vat_rate
 */
QuoteDetailVO.prototype['vat_rate'] = undefined;






export default QuoteDetailVO;

