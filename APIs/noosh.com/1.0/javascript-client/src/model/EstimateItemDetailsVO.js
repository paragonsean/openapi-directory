/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EstimateItemPriceVO from './EstimateItemPriceVO';
import PropertyPaAndAttVO from './PropertyPaAndAttVO';

/**
 * The EstimateItemDetailsVO model module.
 * @module model/EstimateItemDetailsVO
 * @version 1.0
 */
class EstimateItemDetailsVO {
    /**
     * Constructs a new <code>EstimateItemDetailsVO</code>.
     * Java type: com.noosh.nooshapi.vo.EstimateItemDetailsVO
     * @alias module:model/EstimateItemDetailsVO
     */
    constructor() { 
        
        EstimateItemDetailsVO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EstimateItemDetailsVO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EstimateItemDetailsVO} obj Optional instance to populate.
     * @return {module:model/EstimateItemDetailsVO} The populated <code>EstimateItemDetailsVO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EstimateItemDetailsVO();

            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], [PropertyPaAndAttVO]);
            }
            if (data.hasOwnProperty('estimate_item_id')) {
                obj['estimate_item_id'] = ApiClient.convertToType(data['estimate_item_id'], 'Number');
            }
            if (data.hasOwnProperty('option_prices')) {
                obj['option_prices'] = ApiClient.convertToType(data['option_prices'], [EstimateItemPriceVO]);
            }
            if (data.hasOwnProperty('pc_job_id')) {
                obj['pc_job_id'] = ApiClient.convertToType(data['pc_job_id'], 'Number');
            }
            if (data.hasOwnProperty('spec_name')) {
                obj['spec_name'] = ApiClient.convertToType(data['spec_name'], 'String');
            }
            if (data.hasOwnProperty('spec_reference')) {
                obj['spec_reference'] = ApiClient.convertToType(data['spec_reference'], 'String');
            }
            if (data.hasOwnProperty('spec_reference_id')) {
                obj['spec_reference_id'] = ApiClient.convertToType(data['spec_reference_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EstimateItemDetailsVO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EstimateItemDetailsVO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        if (data['custom_fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_fields'])) {
                throw new Error("Expected the field `custom_fields` to be an array in the JSON data but got " + data['custom_fields']);
            }
            // validate the optional field `custom_fields` (array)
            for (const item of data['custom_fields']) {
                PropertyPaAndAttVO.validateJSON(item);
            };
        }
        if (data['option_prices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['option_prices'])) {
                throw new Error("Expected the field `option_prices` to be an array in the JSON data but got " + data['option_prices']);
            }
            // validate the optional field `option_prices` (array)
            for (const item of data['option_prices']) {
                EstimateItemPriceVO.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['spec_name'] && !(typeof data['spec_name'] === 'string' || data['spec_name'] instanceof String)) {
            throw new Error("Expected the field `spec_name` to be a primitive type in the JSON string but got " + data['spec_name']);
        }
        // ensure the json data is a string
        if (data['spec_reference'] && !(typeof data['spec_reference'] === 'string' || data['spec_reference'] instanceof String)) {
            throw new Error("Expected the field `spec_reference` to be a primitive type in the JSON string but got " + data['spec_reference']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} comments
 */
EstimateItemDetailsVO.prototype['comments'] = undefined;

/**
 * 
 * @member {Array.<module:model/PropertyPaAndAttVO>} custom_fields
 */
EstimateItemDetailsVO.prototype['custom_fields'] = undefined;

/**
 * 
 * @member {Number} estimate_item_id
 */
EstimateItemDetailsVO.prototype['estimate_item_id'] = undefined;

/**
 * 
 * @member {Array.<module:model/EstimateItemPriceVO>} option_prices
 */
EstimateItemDetailsVO.prototype['option_prices'] = undefined;

/**
 * 
 * @member {Number} pc_job_id
 */
EstimateItemDetailsVO.prototype['pc_job_id'] = undefined;

/**
 * 
 * @member {String} spec_name
 */
EstimateItemDetailsVO.prototype['spec_name'] = undefined;

/**
 * 
 * @member {String} spec_reference
 */
EstimateItemDetailsVO.prototype['spec_reference'] = undefined;

/**
 * 
 * @member {Number} spec_reference_id
 */
EstimateItemDetailsVO.prototype['spec_reference_id'] = undefined;






export default EstimateItemDetailsVO;

