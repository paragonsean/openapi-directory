/**
 * Noosh API application
 * Full description of Noosh API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NooshApiApplication);
  }
}(this, function(expect, NooshApiApplication) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NooshApiApplication.QuotePriceDetailVO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QuotePriceDetailVO', function() {
    it('should create an instance of QuotePriceDetailVO', function() {
      // uncomment below and update the code to test QuotePriceDetailVO
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be.a(NooshApiApplication.QuotePriceDetailVO);
    });

    it('should have the property breakouts (base name: "breakouts")', function() {
      // uncomment below and update the code to test the property breakouts
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "custom_fields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property fixed (base name: "fixed")', function() {
      // uncomment below and update the code to test the property fixed
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property isChosen (base name: "is_chosen")', function() {
      // uncomment below and update the code to test the property isChosen
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property isIncluded (base name: "is_included")', function() {
      // uncomment below and update the code to test the property isIncluded
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property isQuoted (base name: "is_quoted")', function() {
      // uncomment below and update the code to test the property isQuoted
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property parentPriceId (base name: "parent_price_id")', function() {
      // uncomment below and update the code to test the property parentPriceId
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property priceId (base name: "price_id")', function() {
      // uncomment below and update the code to test the property priceId
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property sellPrice (base name: "sell_price")', function() {
      // uncomment below and update the code to test the property sellPrice
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property shipping (base name: "shipping")', function() {
      // uncomment below and update the code to test the property shipping
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property supplier (base name: "supplier")', function() {
      // uncomment below and update the code to test the property supplier
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property tax (base name: "tax")', function() {
      // uncomment below and update the code to test the property tax
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "total")', function() {
      // uncomment below and update the code to test the property total
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property transactionalCost (base name: "transactional_cost")', function() {
      // uncomment below and update the code to test the property transactionalCost
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property transactionalFixed (base name: "transactional_fixed")', function() {
      // uncomment below and update the code to test the property transactionalFixed
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property transactionalSellPrice (base name: "transactional_sell_price")', function() {
      // uncomment below and update the code to test the property transactionalSellPrice
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property transactionalShipping (base name: "transactional_shipping")', function() {
      // uncomment below and update the code to test the property transactionalShipping
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property transactionalTax (base name: "transactional_tax")', function() {
      // uncomment below and update the code to test the property transactionalTax
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property transactionalTotal (base name: "transactional_total")', function() {
      // uncomment below and update the code to test the property transactionalTotal
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property transactionalVariable (base name: "transactional_variable")', function() {
      // uncomment below and update the code to test the property transactionalVariable
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property variable (base name: "variable")', function() {
      // uncomment below and update the code to test the property variable
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

    it('should have the property variablePercent (base name: "variable_percent")', function() {
      // uncomment below and update the code to test the property variablePercent
      //var instance = new NooshApiApplication.QuotePriceDetailVO();
      //expect(instance).to.be();
    });

  });

}));
