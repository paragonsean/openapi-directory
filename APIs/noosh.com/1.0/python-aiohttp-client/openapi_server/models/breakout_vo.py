# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BreakoutVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, breakout_id: int=None, breakout_name: str=None, breakout_pre_markup: object=None, breakout_price: object=None, transactional_breakout_pre_markup: object=None, transactional_breakout_price: object=None):
        """BreakoutVO - a model defined in OpenAPI

        :param breakout_id: The breakout_id of this BreakoutVO.
        :param breakout_name: The breakout_name of this BreakoutVO.
        :param breakout_pre_markup: The breakout_pre_markup of this BreakoutVO.
        :param breakout_price: The breakout_price of this BreakoutVO.
        :param transactional_breakout_pre_markup: The transactional_breakout_pre_markup of this BreakoutVO.
        :param transactional_breakout_price: The transactional_breakout_price of this BreakoutVO.
        """
        self.openapi_types = {
            'breakout_id': int,
            'breakout_name': str,
            'breakout_pre_markup': object,
            'breakout_price': object,
            'transactional_breakout_pre_markup': object,
            'transactional_breakout_price': object
        }

        self.attribute_map = {
            'breakout_id': 'breakout_id',
            'breakout_name': 'breakout_name',
            'breakout_pre_markup': 'breakout_pre_markup',
            'breakout_price': 'breakout_price',
            'transactional_breakout_pre_markup': 'transactional_breakout_pre_markup',
            'transactional_breakout_price': 'transactional_breakout_price'
        }

        self._breakout_id = breakout_id
        self._breakout_name = breakout_name
        self._breakout_pre_markup = breakout_pre_markup
        self._breakout_price = breakout_price
        self._transactional_breakout_pre_markup = transactional_breakout_pre_markup
        self._transactional_breakout_price = transactional_breakout_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BreakoutVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BreakoutVO of this BreakoutVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def breakout_id(self):
        """Gets the breakout_id of this BreakoutVO.

        

        :return: The breakout_id of this BreakoutVO.
        :rtype: int
        """
        return self._breakout_id

    @breakout_id.setter
    def breakout_id(self, breakout_id):
        """Sets the breakout_id of this BreakoutVO.

        

        :param breakout_id: The breakout_id of this BreakoutVO.
        :type breakout_id: int
        """

        self._breakout_id = breakout_id

    @property
    def breakout_name(self):
        """Gets the breakout_name of this BreakoutVO.

        

        :return: The breakout_name of this BreakoutVO.
        :rtype: str
        """
        return self._breakout_name

    @breakout_name.setter
    def breakout_name(self, breakout_name):
        """Sets the breakout_name of this BreakoutVO.

        

        :param breakout_name: The breakout_name of this BreakoutVO.
        :type breakout_name: str
        """

        self._breakout_name = breakout_name

    @property
    def breakout_pre_markup(self):
        """Gets the breakout_pre_markup of this BreakoutVO.

        Java type: java.math.BigDecimal

        :return: The breakout_pre_markup of this BreakoutVO.
        :rtype: object
        """
        return self._breakout_pre_markup

    @breakout_pre_markup.setter
    def breakout_pre_markup(self, breakout_pre_markup):
        """Sets the breakout_pre_markup of this BreakoutVO.

        Java type: java.math.BigDecimal

        :param breakout_pre_markup: The breakout_pre_markup of this BreakoutVO.
        :type breakout_pre_markup: object
        """

        self._breakout_pre_markup = breakout_pre_markup

    @property
    def breakout_price(self):
        """Gets the breakout_price of this BreakoutVO.

        Java type: java.math.BigDecimal

        :return: The breakout_price of this BreakoutVO.
        :rtype: object
        """
        return self._breakout_price

    @breakout_price.setter
    def breakout_price(self, breakout_price):
        """Sets the breakout_price of this BreakoutVO.

        Java type: java.math.BigDecimal

        :param breakout_price: The breakout_price of this BreakoutVO.
        :type breakout_price: object
        """

        self._breakout_price = breakout_price

    @property
    def transactional_breakout_pre_markup(self):
        """Gets the transactional_breakout_pre_markup of this BreakoutVO.

        Java type: java.math.BigDecimal

        :return: The transactional_breakout_pre_markup of this BreakoutVO.
        :rtype: object
        """
        return self._transactional_breakout_pre_markup

    @transactional_breakout_pre_markup.setter
    def transactional_breakout_pre_markup(self, transactional_breakout_pre_markup):
        """Sets the transactional_breakout_pre_markup of this BreakoutVO.

        Java type: java.math.BigDecimal

        :param transactional_breakout_pre_markup: The transactional_breakout_pre_markup of this BreakoutVO.
        :type transactional_breakout_pre_markup: object
        """

        self._transactional_breakout_pre_markup = transactional_breakout_pre_markup

    @property
    def transactional_breakout_price(self):
        """Gets the transactional_breakout_price of this BreakoutVO.

        Java type: java.math.BigDecimal

        :return: The transactional_breakout_price of this BreakoutVO.
        :rtype: object
        """
        return self._transactional_breakout_price

    @transactional_breakout_price.setter
    def transactional_breakout_price(self, transactional_breakout_price):
        """Sets the transactional_breakout_price of this BreakoutVO.

        Java type: java.math.BigDecimal

        :param transactional_breakout_price: The transactional_breakout_price of this BreakoutVO.
        :type transactional_breakout_price: object
        """

        self._transactional_breakout_price = transactional_breakout_price
