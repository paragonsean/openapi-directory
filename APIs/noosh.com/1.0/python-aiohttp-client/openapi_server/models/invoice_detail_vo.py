# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.invoice_item_detail_vo import InvoiceItemDetailVO
from openapi_server.models.property_pa_and_att_vo import PropertyPaAndAttVO
from openapi_server import util


class InvoiceDetailVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comments: str=None, currency: str=None, custom_fields: List[PropertyPaAndAttVO]=None, grand_total: object=None, invoice_date: date=None, invoice_due_date: date=None, invoice_id: int=None, invoice_number: str=None, invoice_to: str=None, is_final: int=None, is_non_billable: int=None, items: List[InvoiceItemDetailVO]=None, order_reference: str=None, order_title: str=None, payment_method: str=None, prepared_by: str=None, project_number: int=None, reference_number: str=None, shipping: object=None, status: str=None, sub_total: object=None, tax: object=None, transactional_currency: str=None, transactional_grand_total: object=None, transactional_shipping: object=None, transactional_sub_total: object=None, transactional_tax: object=None):
        """InvoiceDetailVO - a model defined in OpenAPI

        :param comments: The comments of this InvoiceDetailVO.
        :param currency: The currency of this InvoiceDetailVO.
        :param custom_fields: The custom_fields of this InvoiceDetailVO.
        :param grand_total: The grand_total of this InvoiceDetailVO.
        :param invoice_date: The invoice_date of this InvoiceDetailVO.
        :param invoice_due_date: The invoice_due_date of this InvoiceDetailVO.
        :param invoice_id: The invoice_id of this InvoiceDetailVO.
        :param invoice_number: The invoice_number of this InvoiceDetailVO.
        :param invoice_to: The invoice_to of this InvoiceDetailVO.
        :param is_final: The is_final of this InvoiceDetailVO.
        :param is_non_billable: The is_non_billable of this InvoiceDetailVO.
        :param items: The items of this InvoiceDetailVO.
        :param order_reference: The order_reference of this InvoiceDetailVO.
        :param order_title: The order_title of this InvoiceDetailVO.
        :param payment_method: The payment_method of this InvoiceDetailVO.
        :param prepared_by: The prepared_by of this InvoiceDetailVO.
        :param project_number: The project_number of this InvoiceDetailVO.
        :param reference_number: The reference_number of this InvoiceDetailVO.
        :param shipping: The shipping of this InvoiceDetailVO.
        :param status: The status of this InvoiceDetailVO.
        :param sub_total: The sub_total of this InvoiceDetailVO.
        :param tax: The tax of this InvoiceDetailVO.
        :param transactional_currency: The transactional_currency of this InvoiceDetailVO.
        :param transactional_grand_total: The transactional_grand_total of this InvoiceDetailVO.
        :param transactional_shipping: The transactional_shipping of this InvoiceDetailVO.
        :param transactional_sub_total: The transactional_sub_total of this InvoiceDetailVO.
        :param transactional_tax: The transactional_tax of this InvoiceDetailVO.
        """
        self.openapi_types = {
            'comments': str,
            'currency': str,
            'custom_fields': List[PropertyPaAndAttVO],
            'grand_total': object,
            'invoice_date': date,
            'invoice_due_date': date,
            'invoice_id': int,
            'invoice_number': str,
            'invoice_to': str,
            'is_final': int,
            'is_non_billable': int,
            'items': List[InvoiceItemDetailVO],
            'order_reference': str,
            'order_title': str,
            'payment_method': str,
            'prepared_by': str,
            'project_number': int,
            'reference_number': str,
            'shipping': object,
            'status': str,
            'sub_total': object,
            'tax': object,
            'transactional_currency': str,
            'transactional_grand_total': object,
            'transactional_shipping': object,
            'transactional_sub_total': object,
            'transactional_tax': object
        }

        self.attribute_map = {
            'comments': 'comments',
            'currency': 'currency',
            'custom_fields': 'custom_fields',
            'grand_total': 'grand_total',
            'invoice_date': 'invoice_date',
            'invoice_due_date': 'invoice_due_date',
            'invoice_id': 'invoice_id',
            'invoice_number': 'invoice_number',
            'invoice_to': 'invoice_to',
            'is_final': 'is_final',
            'is_non_billable': 'is_nonBillable',
            'items': 'items',
            'order_reference': 'order_reference',
            'order_title': 'order_title',
            'payment_method': 'payment_method',
            'prepared_by': 'prepared_by',
            'project_number': 'project_number',
            'reference_number': 'reference_number',
            'shipping': 'shipping',
            'status': 'status',
            'sub_total': 'sub_total',
            'tax': 'tax',
            'transactional_currency': 'transactional_currency',
            'transactional_grand_total': 'transactional_grand_total',
            'transactional_shipping': 'transactional_shipping',
            'transactional_sub_total': 'transactional_sub_total',
            'transactional_tax': 'transactional_tax'
        }

        self._comments = comments
        self._currency = currency
        self._custom_fields = custom_fields
        self._grand_total = grand_total
        self._invoice_date = invoice_date
        self._invoice_due_date = invoice_due_date
        self._invoice_id = invoice_id
        self._invoice_number = invoice_number
        self._invoice_to = invoice_to
        self._is_final = is_final
        self._is_non_billable = is_non_billable
        self._items = items
        self._order_reference = order_reference
        self._order_title = order_title
        self._payment_method = payment_method
        self._prepared_by = prepared_by
        self._project_number = project_number
        self._reference_number = reference_number
        self._shipping = shipping
        self._status = status
        self._sub_total = sub_total
        self._tax = tax
        self._transactional_currency = transactional_currency
        self._transactional_grand_total = transactional_grand_total
        self._transactional_shipping = transactional_shipping
        self._transactional_sub_total = transactional_sub_total
        self._transactional_tax = transactional_tax

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvoiceDetailVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvoiceDetailVO of this InvoiceDetailVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comments(self):
        """Gets the comments of this InvoiceDetailVO.

        

        :return: The comments of this InvoiceDetailVO.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this InvoiceDetailVO.

        

        :param comments: The comments of this InvoiceDetailVO.
        :type comments: str
        """

        self._comments = comments

    @property
    def currency(self):
        """Gets the currency of this InvoiceDetailVO.

        

        :return: The currency of this InvoiceDetailVO.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this InvoiceDetailVO.

        

        :param currency: The currency of this InvoiceDetailVO.
        :type currency: str
        """

        self._currency = currency

    @property
    def custom_fields(self):
        """Gets the custom_fields of this InvoiceDetailVO.

        

        :return: The custom_fields of this InvoiceDetailVO.
        :rtype: List[PropertyPaAndAttVO]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this InvoiceDetailVO.

        

        :param custom_fields: The custom_fields of this InvoiceDetailVO.
        :type custom_fields: List[PropertyPaAndAttVO]
        """

        self._custom_fields = custom_fields

    @property
    def grand_total(self):
        """Gets the grand_total of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :return: The grand_total of this InvoiceDetailVO.
        :rtype: object
        """
        return self._grand_total

    @grand_total.setter
    def grand_total(self, grand_total):
        """Sets the grand_total of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :param grand_total: The grand_total of this InvoiceDetailVO.
        :type grand_total: object
        """

        self._grand_total = grand_total

    @property
    def invoice_date(self):
        """Gets the invoice_date of this InvoiceDetailVO.

        

        :return: The invoice_date of this InvoiceDetailVO.
        :rtype: date
        """
        return self._invoice_date

    @invoice_date.setter
    def invoice_date(self, invoice_date):
        """Sets the invoice_date of this InvoiceDetailVO.

        

        :param invoice_date: The invoice_date of this InvoiceDetailVO.
        :type invoice_date: date
        """

        self._invoice_date = invoice_date

    @property
    def invoice_due_date(self):
        """Gets the invoice_due_date of this InvoiceDetailVO.

        

        :return: The invoice_due_date of this InvoiceDetailVO.
        :rtype: date
        """
        return self._invoice_due_date

    @invoice_due_date.setter
    def invoice_due_date(self, invoice_due_date):
        """Sets the invoice_due_date of this InvoiceDetailVO.

        

        :param invoice_due_date: The invoice_due_date of this InvoiceDetailVO.
        :type invoice_due_date: date
        """

        self._invoice_due_date = invoice_due_date

    @property
    def invoice_id(self):
        """Gets the invoice_id of this InvoiceDetailVO.

        

        :return: The invoice_id of this InvoiceDetailVO.
        :rtype: int
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this InvoiceDetailVO.

        

        :param invoice_id: The invoice_id of this InvoiceDetailVO.
        :type invoice_id: int
        """

        self._invoice_id = invoice_id

    @property
    def invoice_number(self):
        """Gets the invoice_number of this InvoiceDetailVO.

        

        :return: The invoice_number of this InvoiceDetailVO.
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this InvoiceDetailVO.

        

        :param invoice_number: The invoice_number of this InvoiceDetailVO.
        :type invoice_number: str
        """

        self._invoice_number = invoice_number

    @property
    def invoice_to(self):
        """Gets the invoice_to of this InvoiceDetailVO.

        

        :return: The invoice_to of this InvoiceDetailVO.
        :rtype: str
        """
        return self._invoice_to

    @invoice_to.setter
    def invoice_to(self, invoice_to):
        """Sets the invoice_to of this InvoiceDetailVO.

        

        :param invoice_to: The invoice_to of this InvoiceDetailVO.
        :type invoice_to: str
        """

        self._invoice_to = invoice_to

    @property
    def is_final(self):
        """Gets the is_final of this InvoiceDetailVO.

        

        :return: The is_final of this InvoiceDetailVO.
        :rtype: int
        """
        return self._is_final

    @is_final.setter
    def is_final(self, is_final):
        """Sets the is_final of this InvoiceDetailVO.

        

        :param is_final: The is_final of this InvoiceDetailVO.
        :type is_final: int
        """

        self._is_final = is_final

    @property
    def is_non_billable(self):
        """Gets the is_non_billable of this InvoiceDetailVO.

        

        :return: The is_non_billable of this InvoiceDetailVO.
        :rtype: int
        """
        return self._is_non_billable

    @is_non_billable.setter
    def is_non_billable(self, is_non_billable):
        """Sets the is_non_billable of this InvoiceDetailVO.

        

        :param is_non_billable: The is_non_billable of this InvoiceDetailVO.
        :type is_non_billable: int
        """

        self._is_non_billable = is_non_billable

    @property
    def items(self):
        """Gets the items of this InvoiceDetailVO.

        

        :return: The items of this InvoiceDetailVO.
        :rtype: List[InvoiceItemDetailVO]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this InvoiceDetailVO.

        

        :param items: The items of this InvoiceDetailVO.
        :type items: List[InvoiceItemDetailVO]
        """

        self._items = items

    @property
    def order_reference(self):
        """Gets the order_reference of this InvoiceDetailVO.

        

        :return: The order_reference of this InvoiceDetailVO.
        :rtype: str
        """
        return self._order_reference

    @order_reference.setter
    def order_reference(self, order_reference):
        """Sets the order_reference of this InvoiceDetailVO.

        

        :param order_reference: The order_reference of this InvoiceDetailVO.
        :type order_reference: str
        """

        self._order_reference = order_reference

    @property
    def order_title(self):
        """Gets the order_title of this InvoiceDetailVO.

        

        :return: The order_title of this InvoiceDetailVO.
        :rtype: str
        """
        return self._order_title

    @order_title.setter
    def order_title(self, order_title):
        """Sets the order_title of this InvoiceDetailVO.

        

        :param order_title: The order_title of this InvoiceDetailVO.
        :type order_title: str
        """

        self._order_title = order_title

    @property
    def payment_method(self):
        """Gets the payment_method of this InvoiceDetailVO.

        

        :return: The payment_method of this InvoiceDetailVO.
        :rtype: str
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this InvoiceDetailVO.

        

        :param payment_method: The payment_method of this InvoiceDetailVO.
        :type payment_method: str
        """

        self._payment_method = payment_method

    @property
    def prepared_by(self):
        """Gets the prepared_by of this InvoiceDetailVO.

        

        :return: The prepared_by of this InvoiceDetailVO.
        :rtype: str
        """
        return self._prepared_by

    @prepared_by.setter
    def prepared_by(self, prepared_by):
        """Sets the prepared_by of this InvoiceDetailVO.

        

        :param prepared_by: The prepared_by of this InvoiceDetailVO.
        :type prepared_by: str
        """

        self._prepared_by = prepared_by

    @property
    def project_number(self):
        """Gets the project_number of this InvoiceDetailVO.

        

        :return: The project_number of this InvoiceDetailVO.
        :rtype: int
        """
        return self._project_number

    @project_number.setter
    def project_number(self, project_number):
        """Sets the project_number of this InvoiceDetailVO.

        

        :param project_number: The project_number of this InvoiceDetailVO.
        :type project_number: int
        """

        self._project_number = project_number

    @property
    def reference_number(self):
        """Gets the reference_number of this InvoiceDetailVO.

        

        :return: The reference_number of this InvoiceDetailVO.
        :rtype: str
        """
        return self._reference_number

    @reference_number.setter
    def reference_number(self, reference_number):
        """Sets the reference_number of this InvoiceDetailVO.

        

        :param reference_number: The reference_number of this InvoiceDetailVO.
        :type reference_number: str
        """

        self._reference_number = reference_number

    @property
    def shipping(self):
        """Gets the shipping of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :return: The shipping of this InvoiceDetailVO.
        :rtype: object
        """
        return self._shipping

    @shipping.setter
    def shipping(self, shipping):
        """Sets the shipping of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :param shipping: The shipping of this InvoiceDetailVO.
        :type shipping: object
        """

        self._shipping = shipping

    @property
    def status(self):
        """Gets the status of this InvoiceDetailVO.

        

        :return: The status of this InvoiceDetailVO.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InvoiceDetailVO.

        

        :param status: The status of this InvoiceDetailVO.
        :type status: str
        """

        self._status = status

    @property
    def sub_total(self):
        """Gets the sub_total of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :return: The sub_total of this InvoiceDetailVO.
        :rtype: object
        """
        return self._sub_total

    @sub_total.setter
    def sub_total(self, sub_total):
        """Sets the sub_total of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :param sub_total: The sub_total of this InvoiceDetailVO.
        :type sub_total: object
        """

        self._sub_total = sub_total

    @property
    def tax(self):
        """Gets the tax of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :return: The tax of this InvoiceDetailVO.
        :rtype: object
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :param tax: The tax of this InvoiceDetailVO.
        :type tax: object
        """

        self._tax = tax

    @property
    def transactional_currency(self):
        """Gets the transactional_currency of this InvoiceDetailVO.

        

        :return: The transactional_currency of this InvoiceDetailVO.
        :rtype: str
        """
        return self._transactional_currency

    @transactional_currency.setter
    def transactional_currency(self, transactional_currency):
        """Sets the transactional_currency of this InvoiceDetailVO.

        

        :param transactional_currency: The transactional_currency of this InvoiceDetailVO.
        :type transactional_currency: str
        """

        self._transactional_currency = transactional_currency

    @property
    def transactional_grand_total(self):
        """Gets the transactional_grand_total of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :return: The transactional_grand_total of this InvoiceDetailVO.
        :rtype: object
        """
        return self._transactional_grand_total

    @transactional_grand_total.setter
    def transactional_grand_total(self, transactional_grand_total):
        """Sets the transactional_grand_total of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :param transactional_grand_total: The transactional_grand_total of this InvoiceDetailVO.
        :type transactional_grand_total: object
        """

        self._transactional_grand_total = transactional_grand_total

    @property
    def transactional_shipping(self):
        """Gets the transactional_shipping of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :return: The transactional_shipping of this InvoiceDetailVO.
        :rtype: object
        """
        return self._transactional_shipping

    @transactional_shipping.setter
    def transactional_shipping(self, transactional_shipping):
        """Sets the transactional_shipping of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :param transactional_shipping: The transactional_shipping of this InvoiceDetailVO.
        :type transactional_shipping: object
        """

        self._transactional_shipping = transactional_shipping

    @property
    def transactional_sub_total(self):
        """Gets the transactional_sub_total of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :return: The transactional_sub_total of this InvoiceDetailVO.
        :rtype: object
        """
        return self._transactional_sub_total

    @transactional_sub_total.setter
    def transactional_sub_total(self, transactional_sub_total):
        """Sets the transactional_sub_total of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :param transactional_sub_total: The transactional_sub_total of this InvoiceDetailVO.
        :type transactional_sub_total: object
        """

        self._transactional_sub_total = transactional_sub_total

    @property
    def transactional_tax(self):
        """Gets the transactional_tax of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :return: The transactional_tax of this InvoiceDetailVO.
        :rtype: object
        """
        return self._transactional_tax

    @transactional_tax.setter
    def transactional_tax(self, transactional_tax):
        """Sets the transactional_tax of this InvoiceDetailVO.

        Java type: java.math.BigDecimal

        :param transactional_tax: The transactional_tax of this InvoiceDetailVO.
        :type transactional_tax: object
        """

        self._transactional_tax = transactional_tax
