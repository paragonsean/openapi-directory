# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rfe_spec_po import RfeSpecPO
from openapi_server import util


class RfePO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, details: str=None, estimate_due_date: date=None, proposed_order_completion_date: date=None, rfe_number: str=None, rfe_title: str=None, specs: List[RfeSpecPO]=None, supplier_user_ids: List[int]=None):
        """RfePO - a model defined in OpenAPI

        :param description: The description of this RfePO.
        :param details: The details of this RfePO.
        :param estimate_due_date: The estimate_due_date of this RfePO.
        :param proposed_order_completion_date: The proposed_order_completion_date of this RfePO.
        :param rfe_number: The rfe_number of this RfePO.
        :param rfe_title: The rfe_title of this RfePO.
        :param specs: The specs of this RfePO.
        :param supplier_user_ids: The supplier_user_ids of this RfePO.
        """
        self.openapi_types = {
            'description': str,
            'details': str,
            'estimate_due_date': date,
            'proposed_order_completion_date': date,
            'rfe_number': str,
            'rfe_title': str,
            'specs': List[RfeSpecPO],
            'supplier_user_ids': List[int]
        }

        self.attribute_map = {
            'description': 'description',
            'details': 'details',
            'estimate_due_date': 'estimate_due_date',
            'proposed_order_completion_date': 'proposed_order_completion_date',
            'rfe_number': 'rfe_number',
            'rfe_title': 'rfe_title',
            'specs': 'specs',
            'supplier_user_ids': 'supplier_user_ids'
        }

        self._description = description
        self._details = details
        self._estimate_due_date = estimate_due_date
        self._proposed_order_completion_date = proposed_order_completion_date
        self._rfe_number = rfe_number
        self._rfe_title = rfe_title
        self._specs = specs
        self._supplier_user_ids = supplier_user_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RfePO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RfePO of this RfePO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this RfePO.

        

        :return: The description of this RfePO.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RfePO.

        

        :param description: The description of this RfePO.
        :type description: str
        """

        self._description = description

    @property
    def details(self):
        """Gets the details of this RfePO.

        

        :return: The details of this RfePO.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this RfePO.

        

        :param details: The details of this RfePO.
        :type details: str
        """

        self._details = details

    @property
    def estimate_due_date(self):
        """Gets the estimate_due_date of this RfePO.

        

        :return: The estimate_due_date of this RfePO.
        :rtype: date
        """
        return self._estimate_due_date

    @estimate_due_date.setter
    def estimate_due_date(self, estimate_due_date):
        """Sets the estimate_due_date of this RfePO.

        

        :param estimate_due_date: The estimate_due_date of this RfePO.
        :type estimate_due_date: date
        """

        self._estimate_due_date = estimate_due_date

    @property
    def proposed_order_completion_date(self):
        """Gets the proposed_order_completion_date of this RfePO.

        

        :return: The proposed_order_completion_date of this RfePO.
        :rtype: date
        """
        return self._proposed_order_completion_date

    @proposed_order_completion_date.setter
    def proposed_order_completion_date(self, proposed_order_completion_date):
        """Sets the proposed_order_completion_date of this RfePO.

        

        :param proposed_order_completion_date: The proposed_order_completion_date of this RfePO.
        :type proposed_order_completion_date: date
        """

        self._proposed_order_completion_date = proposed_order_completion_date

    @property
    def rfe_number(self):
        """Gets the rfe_number of this RfePO.

        

        :return: The rfe_number of this RfePO.
        :rtype: str
        """
        return self._rfe_number

    @rfe_number.setter
    def rfe_number(self, rfe_number):
        """Sets the rfe_number of this RfePO.

        

        :param rfe_number: The rfe_number of this RfePO.
        :type rfe_number: str
        """

        self._rfe_number = rfe_number

    @property
    def rfe_title(self):
        """Gets the rfe_title of this RfePO.

        

        :return: The rfe_title of this RfePO.
        :rtype: str
        """
        return self._rfe_title

    @rfe_title.setter
    def rfe_title(self, rfe_title):
        """Sets the rfe_title of this RfePO.

        

        :param rfe_title: The rfe_title of this RfePO.
        :type rfe_title: str
        """

        self._rfe_title = rfe_title

    @property
    def specs(self):
        """Gets the specs of this RfePO.

        

        :return: The specs of this RfePO.
        :rtype: List[RfeSpecPO]
        """
        return self._specs

    @specs.setter
    def specs(self, specs):
        """Sets the specs of this RfePO.

        

        :param specs: The specs of this RfePO.
        :type specs: List[RfeSpecPO]
        """

        self._specs = specs

    @property
    def supplier_user_ids(self):
        """Gets the supplier_user_ids of this RfePO.

        

        :return: The supplier_user_ids of this RfePO.
        :rtype: List[int]
        """
        return self._supplier_user_ids

    @supplier_user_ids.setter
    def supplier_user_ids(self, supplier_user_ids):
        """Sets the supplier_user_ids of this RfePO.

        

        :param supplier_user_ids: The supplier_user_ids of this RfePO.
        :type supplier_user_ids: List[int]
        """

        self._supplier_user_ids = supplier_user_ids
