# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quote_base_vo import QuoteBaseVO
from openapi_server.models.rfq_item_base_vo import RfqItemBaseVO
from openapi_server import util


class RfqDetailsVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comments: str=None, description: str=None, proposed_completion_date: date=None, quote_due_date: date=None, quotes: List[QuoteBaseVO]=None, received_date: date=None, recipient_name: str=None, requestor_name: str=None, rfq_id: int=None, rfq_items: List[RfqItemBaseVO]=None, rfq_title: str=None, status: str=None):
        """RfqDetailsVO - a model defined in OpenAPI

        :param comments: The comments of this RfqDetailsVO.
        :param description: The description of this RfqDetailsVO.
        :param proposed_completion_date: The proposed_completion_date of this RfqDetailsVO.
        :param quote_due_date: The quote_due_date of this RfqDetailsVO.
        :param quotes: The quotes of this RfqDetailsVO.
        :param received_date: The received_date of this RfqDetailsVO.
        :param recipient_name: The recipient_name of this RfqDetailsVO.
        :param requestor_name: The requestor_name of this RfqDetailsVO.
        :param rfq_id: The rfq_id of this RfqDetailsVO.
        :param rfq_items: The rfq_items of this RfqDetailsVO.
        :param rfq_title: The rfq_title of this RfqDetailsVO.
        :param status: The status of this RfqDetailsVO.
        """
        self.openapi_types = {
            'comments': str,
            'description': str,
            'proposed_completion_date': date,
            'quote_due_date': date,
            'quotes': List[QuoteBaseVO],
            'received_date': date,
            'recipient_name': str,
            'requestor_name': str,
            'rfq_id': int,
            'rfq_items': List[RfqItemBaseVO],
            'rfq_title': str,
            'status': str
        }

        self.attribute_map = {
            'comments': 'comments',
            'description': 'description',
            'proposed_completion_date': 'proposed_completion_date',
            'quote_due_date': 'quote_due_date',
            'quotes': 'quotes',
            'received_date': 'received_date',
            'recipient_name': 'recipient_name',
            'requestor_name': 'requestor_name',
            'rfq_id': 'rfq_id',
            'rfq_items': 'rfq_items',
            'rfq_title': 'rfq_title',
            'status': 'status'
        }

        self._comments = comments
        self._description = description
        self._proposed_completion_date = proposed_completion_date
        self._quote_due_date = quote_due_date
        self._quotes = quotes
        self._received_date = received_date
        self._recipient_name = recipient_name
        self._requestor_name = requestor_name
        self._rfq_id = rfq_id
        self._rfq_items = rfq_items
        self._rfq_title = rfq_title
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RfqDetailsVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RfqDetailsVO of this RfqDetailsVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comments(self):
        """Gets the comments of this RfqDetailsVO.

        

        :return: The comments of this RfqDetailsVO.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this RfqDetailsVO.

        

        :param comments: The comments of this RfqDetailsVO.
        :type comments: str
        """

        self._comments = comments

    @property
    def description(self):
        """Gets the description of this RfqDetailsVO.

        

        :return: The description of this RfqDetailsVO.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RfqDetailsVO.

        

        :param description: The description of this RfqDetailsVO.
        :type description: str
        """

        self._description = description

    @property
    def proposed_completion_date(self):
        """Gets the proposed_completion_date of this RfqDetailsVO.

        

        :return: The proposed_completion_date of this RfqDetailsVO.
        :rtype: date
        """
        return self._proposed_completion_date

    @proposed_completion_date.setter
    def proposed_completion_date(self, proposed_completion_date):
        """Sets the proposed_completion_date of this RfqDetailsVO.

        

        :param proposed_completion_date: The proposed_completion_date of this RfqDetailsVO.
        :type proposed_completion_date: date
        """

        self._proposed_completion_date = proposed_completion_date

    @property
    def quote_due_date(self):
        """Gets the quote_due_date of this RfqDetailsVO.

        

        :return: The quote_due_date of this RfqDetailsVO.
        :rtype: date
        """
        return self._quote_due_date

    @quote_due_date.setter
    def quote_due_date(self, quote_due_date):
        """Sets the quote_due_date of this RfqDetailsVO.

        

        :param quote_due_date: The quote_due_date of this RfqDetailsVO.
        :type quote_due_date: date
        """

        self._quote_due_date = quote_due_date

    @property
    def quotes(self):
        """Gets the quotes of this RfqDetailsVO.

        

        :return: The quotes of this RfqDetailsVO.
        :rtype: List[QuoteBaseVO]
        """
        return self._quotes

    @quotes.setter
    def quotes(self, quotes):
        """Sets the quotes of this RfqDetailsVO.

        

        :param quotes: The quotes of this RfqDetailsVO.
        :type quotes: List[QuoteBaseVO]
        """

        self._quotes = quotes

    @property
    def received_date(self):
        """Gets the received_date of this RfqDetailsVO.

        

        :return: The received_date of this RfqDetailsVO.
        :rtype: date
        """
        return self._received_date

    @received_date.setter
    def received_date(self, received_date):
        """Sets the received_date of this RfqDetailsVO.

        

        :param received_date: The received_date of this RfqDetailsVO.
        :type received_date: date
        """

        self._received_date = received_date

    @property
    def recipient_name(self):
        """Gets the recipient_name of this RfqDetailsVO.

        

        :return: The recipient_name of this RfqDetailsVO.
        :rtype: str
        """
        return self._recipient_name

    @recipient_name.setter
    def recipient_name(self, recipient_name):
        """Sets the recipient_name of this RfqDetailsVO.

        

        :param recipient_name: The recipient_name of this RfqDetailsVO.
        :type recipient_name: str
        """

        self._recipient_name = recipient_name

    @property
    def requestor_name(self):
        """Gets the requestor_name of this RfqDetailsVO.

        

        :return: The requestor_name of this RfqDetailsVO.
        :rtype: str
        """
        return self._requestor_name

    @requestor_name.setter
    def requestor_name(self, requestor_name):
        """Sets the requestor_name of this RfqDetailsVO.

        

        :param requestor_name: The requestor_name of this RfqDetailsVO.
        :type requestor_name: str
        """

        self._requestor_name = requestor_name

    @property
    def rfq_id(self):
        """Gets the rfq_id of this RfqDetailsVO.

        

        :return: The rfq_id of this RfqDetailsVO.
        :rtype: int
        """
        return self._rfq_id

    @rfq_id.setter
    def rfq_id(self, rfq_id):
        """Sets the rfq_id of this RfqDetailsVO.

        

        :param rfq_id: The rfq_id of this RfqDetailsVO.
        :type rfq_id: int
        """

        self._rfq_id = rfq_id

    @property
    def rfq_items(self):
        """Gets the rfq_items of this RfqDetailsVO.

        

        :return: The rfq_items of this RfqDetailsVO.
        :rtype: List[RfqItemBaseVO]
        """
        return self._rfq_items

    @rfq_items.setter
    def rfq_items(self, rfq_items):
        """Sets the rfq_items of this RfqDetailsVO.

        

        :param rfq_items: The rfq_items of this RfqDetailsVO.
        :type rfq_items: List[RfqItemBaseVO]
        """

        self._rfq_items = rfq_items

    @property
    def rfq_title(self):
        """Gets the rfq_title of this RfqDetailsVO.

        

        :return: The rfq_title of this RfqDetailsVO.
        :rtype: str
        """
        return self._rfq_title

    @rfq_title.setter
    def rfq_title(self, rfq_title):
        """Sets the rfq_title of this RfqDetailsVO.

        

        :param rfq_title: The rfq_title of this RfqDetailsVO.
        :type rfq_title: str
        """

        self._rfq_title = rfq_title

    @property
    def status(self):
        """Gets the status of this RfqDetailsVO.

        

        :return: The status of this RfqDetailsVO.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RfqDetailsVO.

        

        :param status: The status of this RfqDetailsVO.
        :type status: str
        """

        self._status = status
