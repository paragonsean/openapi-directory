# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TagVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_spec: bool=None, tag_id: int=None, tag_name: str=None):
        """TagVO - a model defined in OpenAPI

        :param is_spec: The is_spec of this TagVO.
        :param tag_id: The tag_id of this TagVO.
        :param tag_name: The tag_name of this TagVO.
        """
        self.openapi_types = {
            'is_spec': bool,
            'tag_id': int,
            'tag_name': str
        }

        self.attribute_map = {
            'is_spec': 'isSpec',
            'tag_id': 'tagId',
            'tag_name': 'tagName'
        }

        self._is_spec = is_spec
        self._tag_id = tag_id
        self._tag_name = tag_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TagVO of this TagVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_spec(self):
        """Gets the is_spec of this TagVO.

        

        :return: The is_spec of this TagVO.
        :rtype: bool
        """
        return self._is_spec

    @is_spec.setter
    def is_spec(self, is_spec):
        """Sets the is_spec of this TagVO.

        

        :param is_spec: The is_spec of this TagVO.
        :type is_spec: bool
        """

        self._is_spec = is_spec

    @property
    def tag_id(self):
        """Gets the tag_id of this TagVO.

        

        :return: The tag_id of this TagVO.
        :rtype: int
        """
        return self._tag_id

    @tag_id.setter
    def tag_id(self, tag_id):
        """Sets the tag_id of this TagVO.

        

        :param tag_id: The tag_id of this TagVO.
        :type tag_id: int
        """

        self._tag_id = tag_id

    @property
    def tag_name(self):
        """Gets the tag_name of this TagVO.

        

        :return: The tag_name of this TagVO.
        :rtype: str
        """
        return self._tag_name

    @tag_name.setter
    def tag_name(self, tag_name):
        """Sets the tag_name of this TagVO.

        

        :param tag_name: The tag_name of this TagVO.
        :type tag_name: str
        """

        self._tag_name = tag_name
