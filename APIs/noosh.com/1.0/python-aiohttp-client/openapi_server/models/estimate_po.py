# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.estimate_item_po import EstimateItemPO
from openapi_server import util


class EstimatePO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comments: str=None, description: str=None, estimate_items: List[EstimateItemPO]=None, estimate_title: str=None, expiration_date: date=None, owner_reference: str=None, rfe_id: int=None):
        """EstimatePO - a model defined in OpenAPI

        :param comments: The comments of this EstimatePO.
        :param description: The description of this EstimatePO.
        :param estimate_items: The estimate_items of this EstimatePO.
        :param estimate_title: The estimate_title of this EstimatePO.
        :param expiration_date: The expiration_date of this EstimatePO.
        :param owner_reference: The owner_reference of this EstimatePO.
        :param rfe_id: The rfe_id of this EstimatePO.
        """
        self.openapi_types = {
            'comments': str,
            'description': str,
            'estimate_items': List[EstimateItemPO],
            'estimate_title': str,
            'expiration_date': date,
            'owner_reference': str,
            'rfe_id': int
        }

        self.attribute_map = {
            'comments': 'comments',
            'description': 'description',
            'estimate_items': 'estimate_items',
            'estimate_title': 'estimate_title',
            'expiration_date': 'expiration_date',
            'owner_reference': 'owner_reference',
            'rfe_id': 'rfe_id'
        }

        self._comments = comments
        self._description = description
        self._estimate_items = estimate_items
        self._estimate_title = estimate_title
        self._expiration_date = expiration_date
        self._owner_reference = owner_reference
        self._rfe_id = rfe_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EstimatePO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EstimatePO of this EstimatePO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comments(self):
        """Gets the comments of this EstimatePO.

        

        :return: The comments of this EstimatePO.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this EstimatePO.

        

        :param comments: The comments of this EstimatePO.
        :type comments: str
        """

        self._comments = comments

    @property
    def description(self):
        """Gets the description of this EstimatePO.

        

        :return: The description of this EstimatePO.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EstimatePO.

        

        :param description: The description of this EstimatePO.
        :type description: str
        """

        self._description = description

    @property
    def estimate_items(self):
        """Gets the estimate_items of this EstimatePO.

        

        :return: The estimate_items of this EstimatePO.
        :rtype: List[EstimateItemPO]
        """
        return self._estimate_items

    @estimate_items.setter
    def estimate_items(self, estimate_items):
        """Sets the estimate_items of this EstimatePO.

        

        :param estimate_items: The estimate_items of this EstimatePO.
        :type estimate_items: List[EstimateItemPO]
        """

        self._estimate_items = estimate_items

    @property
    def estimate_title(self):
        """Gets the estimate_title of this EstimatePO.

        

        :return: The estimate_title of this EstimatePO.
        :rtype: str
        """
        return self._estimate_title

    @estimate_title.setter
    def estimate_title(self, estimate_title):
        """Sets the estimate_title of this EstimatePO.

        

        :param estimate_title: The estimate_title of this EstimatePO.
        :type estimate_title: str
        """

        self._estimate_title = estimate_title

    @property
    def expiration_date(self):
        """Gets the expiration_date of this EstimatePO.

        

        :return: The expiration_date of this EstimatePO.
        :rtype: date
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this EstimatePO.

        

        :param expiration_date: The expiration_date of this EstimatePO.
        :type expiration_date: date
        """

        self._expiration_date = expiration_date

    @property
    def owner_reference(self):
        """Gets the owner_reference of this EstimatePO.

        

        :return: The owner_reference of this EstimatePO.
        :rtype: str
        """
        return self._owner_reference

    @owner_reference.setter
    def owner_reference(self, owner_reference):
        """Sets the owner_reference of this EstimatePO.

        

        :param owner_reference: The owner_reference of this EstimatePO.
        :type owner_reference: str
        """

        self._owner_reference = owner_reference

    @property
    def rfe_id(self):
        """Gets the rfe_id of this EstimatePO.

        

        :return: The rfe_id of this EstimatePO.
        :rtype: int
        """
        return self._rfe_id

    @rfe_id.setter
    def rfe_id(self, rfe_id):
        """Sets the rfe_id of this EstimatePO.

        

        :param rfe_id: The rfe_id of this EstimatePO.
        :type rfe_id: int
        """

        self._rfe_id = rfe_id
