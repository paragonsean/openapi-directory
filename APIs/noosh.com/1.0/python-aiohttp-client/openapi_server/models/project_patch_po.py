# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_field_persist_vo import CustomFieldPersistVO
from openapi_server import util


class ProjectPatchPO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_user_id: int=None, client_workgroup_id: int=None, comments: str=None, completion_date: date=None, custom_fields: List[CustomFieldPersistVO]=None, deactivation_reason_id: int=None, is_active: bool=None, is_hot: bool=None, project_category_id: int=None, project_description: str=None, project_name: str=None, project_number: str=None, project_status_id: int=None):
        """ProjectPatchPO - a model defined in OpenAPI

        :param client_user_id: The client_user_id of this ProjectPatchPO.
        :param client_workgroup_id: The client_workgroup_id of this ProjectPatchPO.
        :param comments: The comments of this ProjectPatchPO.
        :param completion_date: The completion_date of this ProjectPatchPO.
        :param custom_fields: The custom_fields of this ProjectPatchPO.
        :param deactivation_reason_id: The deactivation_reason_id of this ProjectPatchPO.
        :param is_active: The is_active of this ProjectPatchPO.
        :param is_hot: The is_hot of this ProjectPatchPO.
        :param project_category_id: The project_category_id of this ProjectPatchPO.
        :param project_description: The project_description of this ProjectPatchPO.
        :param project_name: The project_name of this ProjectPatchPO.
        :param project_number: The project_number of this ProjectPatchPO.
        :param project_status_id: The project_status_id of this ProjectPatchPO.
        """
        self.openapi_types = {
            'client_user_id': int,
            'client_workgroup_id': int,
            'comments': str,
            'completion_date': date,
            'custom_fields': List[CustomFieldPersistVO],
            'deactivation_reason_id': int,
            'is_active': bool,
            'is_hot': bool,
            'project_category_id': int,
            'project_description': str,
            'project_name': str,
            'project_number': str,
            'project_status_id': int
        }

        self.attribute_map = {
            'client_user_id': 'client_user_id',
            'client_workgroup_id': 'client_workgroup_id',
            'comments': 'comments',
            'completion_date': 'completion_date',
            'custom_fields': 'custom_fields',
            'deactivation_reason_id': 'deactivation_reason_id',
            'is_active': 'is_active',
            'is_hot': 'is_hot',
            'project_category_id': 'project_category_id',
            'project_description': 'project_description',
            'project_name': 'project_name',
            'project_number': 'project_number',
            'project_status_id': 'project_status_id'
        }

        self._client_user_id = client_user_id
        self._client_workgroup_id = client_workgroup_id
        self._comments = comments
        self._completion_date = completion_date
        self._custom_fields = custom_fields
        self._deactivation_reason_id = deactivation_reason_id
        self._is_active = is_active
        self._is_hot = is_hot
        self._project_category_id = project_category_id
        self._project_description = project_description
        self._project_name = project_name
        self._project_number = project_number
        self._project_status_id = project_status_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectPatchPO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectPatchPO of this ProjectPatchPO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_user_id(self):
        """Gets the client_user_id of this ProjectPatchPO.

        

        :return: The client_user_id of this ProjectPatchPO.
        :rtype: int
        """
        return self._client_user_id

    @client_user_id.setter
    def client_user_id(self, client_user_id):
        """Sets the client_user_id of this ProjectPatchPO.

        

        :param client_user_id: The client_user_id of this ProjectPatchPO.
        :type client_user_id: int
        """

        self._client_user_id = client_user_id

    @property
    def client_workgroup_id(self):
        """Gets the client_workgroup_id of this ProjectPatchPO.

        

        :return: The client_workgroup_id of this ProjectPatchPO.
        :rtype: int
        """
        return self._client_workgroup_id

    @client_workgroup_id.setter
    def client_workgroup_id(self, client_workgroup_id):
        """Sets the client_workgroup_id of this ProjectPatchPO.

        

        :param client_workgroup_id: The client_workgroup_id of this ProjectPatchPO.
        :type client_workgroup_id: int
        """

        self._client_workgroup_id = client_workgroup_id

    @property
    def comments(self):
        """Gets the comments of this ProjectPatchPO.

        

        :return: The comments of this ProjectPatchPO.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this ProjectPatchPO.

        

        :param comments: The comments of this ProjectPatchPO.
        :type comments: str
        """

        self._comments = comments

    @property
    def completion_date(self):
        """Gets the completion_date of this ProjectPatchPO.

        

        :return: The completion_date of this ProjectPatchPO.
        :rtype: date
        """
        return self._completion_date

    @completion_date.setter
    def completion_date(self, completion_date):
        """Sets the completion_date of this ProjectPatchPO.

        

        :param completion_date: The completion_date of this ProjectPatchPO.
        :type completion_date: date
        """

        self._completion_date = completion_date

    @property
    def custom_fields(self):
        """Gets the custom_fields of this ProjectPatchPO.

        

        :return: The custom_fields of this ProjectPatchPO.
        :rtype: List[CustomFieldPersistVO]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this ProjectPatchPO.

        

        :param custom_fields: The custom_fields of this ProjectPatchPO.
        :type custom_fields: List[CustomFieldPersistVO]
        """

        self._custom_fields = custom_fields

    @property
    def deactivation_reason_id(self):
        """Gets the deactivation_reason_id of this ProjectPatchPO.

        

        :return: The deactivation_reason_id of this ProjectPatchPO.
        :rtype: int
        """
        return self._deactivation_reason_id

    @deactivation_reason_id.setter
    def deactivation_reason_id(self, deactivation_reason_id):
        """Sets the deactivation_reason_id of this ProjectPatchPO.

        

        :param deactivation_reason_id: The deactivation_reason_id of this ProjectPatchPO.
        :type deactivation_reason_id: int
        """

        self._deactivation_reason_id = deactivation_reason_id

    @property
    def is_active(self):
        """Gets the is_active of this ProjectPatchPO.

        

        :return: The is_active of this ProjectPatchPO.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this ProjectPatchPO.

        

        :param is_active: The is_active of this ProjectPatchPO.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def is_hot(self):
        """Gets the is_hot of this ProjectPatchPO.

        

        :return: The is_hot of this ProjectPatchPO.
        :rtype: bool
        """
        return self._is_hot

    @is_hot.setter
    def is_hot(self, is_hot):
        """Sets the is_hot of this ProjectPatchPO.

        

        :param is_hot: The is_hot of this ProjectPatchPO.
        :type is_hot: bool
        """

        self._is_hot = is_hot

    @property
    def project_category_id(self):
        """Gets the project_category_id of this ProjectPatchPO.

        

        :return: The project_category_id of this ProjectPatchPO.
        :rtype: int
        """
        return self._project_category_id

    @project_category_id.setter
    def project_category_id(self, project_category_id):
        """Sets the project_category_id of this ProjectPatchPO.

        

        :param project_category_id: The project_category_id of this ProjectPatchPO.
        :type project_category_id: int
        """

        self._project_category_id = project_category_id

    @property
    def project_description(self):
        """Gets the project_description of this ProjectPatchPO.

        

        :return: The project_description of this ProjectPatchPO.
        :rtype: str
        """
        return self._project_description

    @project_description.setter
    def project_description(self, project_description):
        """Sets the project_description of this ProjectPatchPO.

        

        :param project_description: The project_description of this ProjectPatchPO.
        :type project_description: str
        """

        self._project_description = project_description

    @property
    def project_name(self):
        """Gets the project_name of this ProjectPatchPO.

        

        :return: The project_name of this ProjectPatchPO.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this ProjectPatchPO.

        

        :param project_name: The project_name of this ProjectPatchPO.
        :type project_name: str
        """

        self._project_name = project_name

    @property
    def project_number(self):
        """Gets the project_number of this ProjectPatchPO.

        

        :return: The project_number of this ProjectPatchPO.
        :rtype: str
        """
        return self._project_number

    @project_number.setter
    def project_number(self, project_number):
        """Sets the project_number of this ProjectPatchPO.

        

        :param project_number: The project_number of this ProjectPatchPO.
        :type project_number: str
        """

        self._project_number = project_number

    @property
    def project_status_id(self):
        """Gets the project_status_id of this ProjectPatchPO.

        

        :return: The project_status_id of this ProjectPatchPO.
        :rtype: int
        """
        return self._project_status_id

    @project_status_id.setter
    def project_status_id(self, project_status_id):
        """Sets the project_status_id of this ProjectPatchPO.

        

        :param project_status_id: The project_status_id of this ProjectPatchPO.
        :type project_status_id: int
        """

        self._project_status_id = project_status_id
