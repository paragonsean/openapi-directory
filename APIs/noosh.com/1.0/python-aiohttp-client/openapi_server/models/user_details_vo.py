# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserDetailsVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: object=None, company_name: str=None, email: str=None, fax_number: str=None, first_name: str=None, last_name: str=None, locale: str=None, middle_name: str=None, organization: str=None, phone_number: str=None, time_zone: str=None, title: str=None, user_id: int=None):
        """UserDetailsVO - a model defined in OpenAPI

        :param address: The address of this UserDetailsVO.
        :param company_name: The company_name of this UserDetailsVO.
        :param email: The email of this UserDetailsVO.
        :param fax_number: The fax_number of this UserDetailsVO.
        :param first_name: The first_name of this UserDetailsVO.
        :param last_name: The last_name of this UserDetailsVO.
        :param locale: The locale of this UserDetailsVO.
        :param middle_name: The middle_name of this UserDetailsVO.
        :param organization: The organization of this UserDetailsVO.
        :param phone_number: The phone_number of this UserDetailsVO.
        :param time_zone: The time_zone of this UserDetailsVO.
        :param title: The title of this UserDetailsVO.
        :param user_id: The user_id of this UserDetailsVO.
        """
        self.openapi_types = {
            'address': object,
            'company_name': str,
            'email': str,
            'fax_number': str,
            'first_name': str,
            'last_name': str,
            'locale': str,
            'middle_name': str,
            'organization': str,
            'phone_number': str,
            'time_zone': str,
            'title': str,
            'user_id': int
        }

        self.attribute_map = {
            'address': 'address',
            'company_name': 'company_name',
            'email': 'email',
            'fax_number': 'fax_number',
            'first_name': 'first_name',
            'last_name': 'last_name',
            'locale': 'locale',
            'middle_name': 'middle_name',
            'organization': 'organization',
            'phone_number': 'phone_number',
            'time_zone': 'time_zone',
            'title': 'title',
            'user_id': 'user_id'
        }

        self._address = address
        self._company_name = company_name
        self._email = email
        self._fax_number = fax_number
        self._first_name = first_name
        self._last_name = last_name
        self._locale = locale
        self._middle_name = middle_name
        self._organization = organization
        self._phone_number = phone_number
        self._time_zone = time_zone
        self._title = title
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserDetailsVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserDetailsVO of this UserDetailsVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this UserDetailsVO.

        Java type: java.util.Map

        :return: The address of this UserDetailsVO.
        :rtype: object
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this UserDetailsVO.

        Java type: java.util.Map

        :param address: The address of this UserDetailsVO.
        :type address: object
        """

        self._address = address

    @property
    def company_name(self):
        """Gets the company_name of this UserDetailsVO.

        

        :return: The company_name of this UserDetailsVO.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this UserDetailsVO.

        

        :param company_name: The company_name of this UserDetailsVO.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def email(self):
        """Gets the email of this UserDetailsVO.

        

        :return: The email of this UserDetailsVO.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UserDetailsVO.

        

        :param email: The email of this UserDetailsVO.
        :type email: str
        """

        self._email = email

    @property
    def fax_number(self):
        """Gets the fax_number of this UserDetailsVO.

        

        :return: The fax_number of this UserDetailsVO.
        :rtype: str
        """
        return self._fax_number

    @fax_number.setter
    def fax_number(self, fax_number):
        """Sets the fax_number of this UserDetailsVO.

        

        :param fax_number: The fax_number of this UserDetailsVO.
        :type fax_number: str
        """

        self._fax_number = fax_number

    @property
    def first_name(self):
        """Gets the first_name of this UserDetailsVO.

        

        :return: The first_name of this UserDetailsVO.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this UserDetailsVO.

        

        :param first_name: The first_name of this UserDetailsVO.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this UserDetailsVO.

        

        :return: The last_name of this UserDetailsVO.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this UserDetailsVO.

        

        :param last_name: The last_name of this UserDetailsVO.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def locale(self):
        """Gets the locale of this UserDetailsVO.

        

        :return: The locale of this UserDetailsVO.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this UserDetailsVO.

        

        :param locale: The locale of this UserDetailsVO.
        :type locale: str
        """

        self._locale = locale

    @property
    def middle_name(self):
        """Gets the middle_name of this UserDetailsVO.

        

        :return: The middle_name of this UserDetailsVO.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this UserDetailsVO.

        

        :param middle_name: The middle_name of this UserDetailsVO.
        :type middle_name: str
        """

        self._middle_name = middle_name

    @property
    def organization(self):
        """Gets the organization of this UserDetailsVO.

        

        :return: The organization of this UserDetailsVO.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this UserDetailsVO.

        

        :param organization: The organization of this UserDetailsVO.
        :type organization: str
        """

        self._organization = organization

    @property
    def phone_number(self):
        """Gets the phone_number of this UserDetailsVO.

        

        :return: The phone_number of this UserDetailsVO.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this UserDetailsVO.

        

        :param phone_number: The phone_number of this UserDetailsVO.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def time_zone(self):
        """Gets the time_zone of this UserDetailsVO.

        

        :return: The time_zone of this UserDetailsVO.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this UserDetailsVO.

        

        :param time_zone: The time_zone of this UserDetailsVO.
        :type time_zone: str
        """

        self._time_zone = time_zone

    @property
    def title(self):
        """Gets the title of this UserDetailsVO.

        

        :return: The title of this UserDetailsVO.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this UserDetailsVO.

        

        :param title: The title of this UserDetailsVO.
        :type title: str
        """

        self._title = title

    @property
    def user_id(self):
        """Gets the user_id of this UserDetailsVO.

        

        :return: The user_id of this UserDetailsVO.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this UserDetailsVO.

        

        :param user_id: The user_id of this UserDetailsVO.
        :type user_id: int
        """

        self._user_id = user_id
