# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rfq_base_vo import RfqBaseVO
from openapi_server import util


class QuoteSimpleVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: str=None, grand_total: object=None, quote_id: int=None, quote_title: str=None, rfq: RfqBaseVO=None, status: str=None, submit_date: date=None, transactional_currency: str=None, transactional_grand_total: object=None):
        """QuoteSimpleVO - a model defined in OpenAPI

        :param currency: The currency of this QuoteSimpleVO.
        :param grand_total: The grand_total of this QuoteSimpleVO.
        :param quote_id: The quote_id of this QuoteSimpleVO.
        :param quote_title: The quote_title of this QuoteSimpleVO.
        :param rfq: The rfq of this QuoteSimpleVO.
        :param status: The status of this QuoteSimpleVO.
        :param submit_date: The submit_date of this QuoteSimpleVO.
        :param transactional_currency: The transactional_currency of this QuoteSimpleVO.
        :param transactional_grand_total: The transactional_grand_total of this QuoteSimpleVO.
        """
        self.openapi_types = {
            'currency': str,
            'grand_total': object,
            'quote_id': int,
            'quote_title': str,
            'rfq': RfqBaseVO,
            'status': str,
            'submit_date': date,
            'transactional_currency': str,
            'transactional_grand_total': object
        }

        self.attribute_map = {
            'currency': 'currency',
            'grand_total': 'grand_total',
            'quote_id': 'quote_id',
            'quote_title': 'quote_title',
            'rfq': 'rfq',
            'status': 'status',
            'submit_date': 'submit_date',
            'transactional_currency': 'transactional_currency',
            'transactional_grand_total': 'transactional_grand_total'
        }

        self._currency = currency
        self._grand_total = grand_total
        self._quote_id = quote_id
        self._quote_title = quote_title
        self._rfq = rfq
        self._status = status
        self._submit_date = submit_date
        self._transactional_currency = transactional_currency
        self._transactional_grand_total = transactional_grand_total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteSimpleVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuoteSimpleVO of this QuoteSimpleVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this QuoteSimpleVO.

        

        :return: The currency of this QuoteSimpleVO.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this QuoteSimpleVO.

        

        :param currency: The currency of this QuoteSimpleVO.
        :type currency: str
        """

        self._currency = currency

    @property
    def grand_total(self):
        """Gets the grand_total of this QuoteSimpleVO.

        Java type: java.math.BigDecimal

        :return: The grand_total of this QuoteSimpleVO.
        :rtype: object
        """
        return self._grand_total

    @grand_total.setter
    def grand_total(self, grand_total):
        """Sets the grand_total of this QuoteSimpleVO.

        Java type: java.math.BigDecimal

        :param grand_total: The grand_total of this QuoteSimpleVO.
        :type grand_total: object
        """

        self._grand_total = grand_total

    @property
    def quote_id(self):
        """Gets the quote_id of this QuoteSimpleVO.

        

        :return: The quote_id of this QuoteSimpleVO.
        :rtype: int
        """
        return self._quote_id

    @quote_id.setter
    def quote_id(self, quote_id):
        """Sets the quote_id of this QuoteSimpleVO.

        

        :param quote_id: The quote_id of this QuoteSimpleVO.
        :type quote_id: int
        """

        self._quote_id = quote_id

    @property
    def quote_title(self):
        """Gets the quote_title of this QuoteSimpleVO.

        

        :return: The quote_title of this QuoteSimpleVO.
        :rtype: str
        """
        return self._quote_title

    @quote_title.setter
    def quote_title(self, quote_title):
        """Sets the quote_title of this QuoteSimpleVO.

        

        :param quote_title: The quote_title of this QuoteSimpleVO.
        :type quote_title: str
        """

        self._quote_title = quote_title

    @property
    def rfq(self):
        """Gets the rfq of this QuoteSimpleVO.


        :return: The rfq of this QuoteSimpleVO.
        :rtype: RfqBaseVO
        """
        return self._rfq

    @rfq.setter
    def rfq(self, rfq):
        """Sets the rfq of this QuoteSimpleVO.


        :param rfq: The rfq of this QuoteSimpleVO.
        :type rfq: RfqBaseVO
        """

        self._rfq = rfq

    @property
    def status(self):
        """Gets the status of this QuoteSimpleVO.

        

        :return: The status of this QuoteSimpleVO.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this QuoteSimpleVO.

        

        :param status: The status of this QuoteSimpleVO.
        :type status: str
        """

        self._status = status

    @property
    def submit_date(self):
        """Gets the submit_date of this QuoteSimpleVO.

        

        :return: The submit_date of this QuoteSimpleVO.
        :rtype: date
        """
        return self._submit_date

    @submit_date.setter
    def submit_date(self, submit_date):
        """Sets the submit_date of this QuoteSimpleVO.

        

        :param submit_date: The submit_date of this QuoteSimpleVO.
        :type submit_date: date
        """

        self._submit_date = submit_date

    @property
    def transactional_currency(self):
        """Gets the transactional_currency of this QuoteSimpleVO.

        

        :return: The transactional_currency of this QuoteSimpleVO.
        :rtype: str
        """
        return self._transactional_currency

    @transactional_currency.setter
    def transactional_currency(self, transactional_currency):
        """Sets the transactional_currency of this QuoteSimpleVO.

        

        :param transactional_currency: The transactional_currency of this QuoteSimpleVO.
        :type transactional_currency: str
        """

        self._transactional_currency = transactional_currency

    @property
    def transactional_grand_total(self):
        """Gets the transactional_grand_total of this QuoteSimpleVO.

        Java type: java.math.BigDecimal

        :return: The transactional_grand_total of this QuoteSimpleVO.
        :rtype: object
        """
        return self._transactional_grand_total

    @transactional_grand_total.setter
    def transactional_grand_total(self, transactional_grand_total):
        """Sets the transactional_grand_total of this QuoteSimpleVO.

        Java type: java.math.BigDecimal

        :param transactional_grand_total: The transactional_grand_total of this QuoteSimpleVO.
        :type transactional_grand_total: object
        """

        self._transactional_grand_total = transactional_grand_total
