# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RfqBaseVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, received_date: date=None, rfq_id: int=None, rfq_title: str=None, status: str=None):
        """RfqBaseVO - a model defined in OpenAPI

        :param received_date: The received_date of this RfqBaseVO.
        :param rfq_id: The rfq_id of this RfqBaseVO.
        :param rfq_title: The rfq_title of this RfqBaseVO.
        :param status: The status of this RfqBaseVO.
        """
        self.openapi_types = {
            'received_date': date,
            'rfq_id': int,
            'rfq_title': str,
            'status': str
        }

        self.attribute_map = {
            'received_date': 'received_date',
            'rfq_id': 'rfq_id',
            'rfq_title': 'rfq_title',
            'status': 'status'
        }

        self._received_date = received_date
        self._rfq_id = rfq_id
        self._rfq_title = rfq_title
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RfqBaseVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RfqBaseVO of this RfqBaseVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def received_date(self):
        """Gets the received_date of this RfqBaseVO.

        

        :return: The received_date of this RfqBaseVO.
        :rtype: date
        """
        return self._received_date

    @received_date.setter
    def received_date(self, received_date):
        """Sets the received_date of this RfqBaseVO.

        

        :param received_date: The received_date of this RfqBaseVO.
        :type received_date: date
        """

        self._received_date = received_date

    @property
    def rfq_id(self):
        """Gets the rfq_id of this RfqBaseVO.

        

        :return: The rfq_id of this RfqBaseVO.
        :rtype: int
        """
        return self._rfq_id

    @rfq_id.setter
    def rfq_id(self, rfq_id):
        """Sets the rfq_id of this RfqBaseVO.

        

        :param rfq_id: The rfq_id of this RfqBaseVO.
        :type rfq_id: int
        """

        self._rfq_id = rfq_id

    @property
    def rfq_title(self):
        """Gets the rfq_title of this RfqBaseVO.

        

        :return: The rfq_title of this RfqBaseVO.
        :rtype: str
        """
        return self._rfq_title

    @rfq_title.setter
    def rfq_title(self, rfq_title):
        """Sets the rfq_title of this RfqBaseVO.

        

        :param rfq_title: The rfq_title of this RfqBaseVO.
        :type rfq_title: str
        """

        self._rfq_title = rfq_title

    @property
    def status(self):
        """Gets the status of this RfqBaseVO.

        

        :return: The status of this RfqBaseVO.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RfqBaseVO.

        

        :param status: The status of this RfqBaseVO.
        :type status: str
        """

        self._status = status
