# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.person_vo import PersonVO
from openapi_server import util


class ProjectParentVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_account: str=None, client_user: str=None, client_user_id: int=None, client_workgroup_id: int=None, comments: str=None, created_by: PersonVO=None, project_create_date: date=None, project_description: str=None, project_id: int=None, project_name: str=None, project_number: str=None):
        """ProjectParentVO - a model defined in OpenAPI

        :param client_account: The client_account of this ProjectParentVO.
        :param client_user: The client_user of this ProjectParentVO.
        :param client_user_id: The client_user_id of this ProjectParentVO.
        :param client_workgroup_id: The client_workgroup_id of this ProjectParentVO.
        :param comments: The comments of this ProjectParentVO.
        :param created_by: The created_by of this ProjectParentVO.
        :param project_create_date: The project_create_date of this ProjectParentVO.
        :param project_description: The project_description of this ProjectParentVO.
        :param project_id: The project_id of this ProjectParentVO.
        :param project_name: The project_name of this ProjectParentVO.
        :param project_number: The project_number of this ProjectParentVO.
        """
        self.openapi_types = {
            'client_account': str,
            'client_user': str,
            'client_user_id': int,
            'client_workgroup_id': int,
            'comments': str,
            'created_by': PersonVO,
            'project_create_date': date,
            'project_description': str,
            'project_id': int,
            'project_name': str,
            'project_number': str
        }

        self.attribute_map = {
            'client_account': 'client_account',
            'client_user': 'client_user',
            'client_user_id': 'client_user_id',
            'client_workgroup_id': 'client_workgroup_id',
            'comments': 'comments',
            'created_by': 'created_by',
            'project_create_date': 'project_create_date',
            'project_description': 'project_description',
            'project_id': 'project_id',
            'project_name': 'project_name',
            'project_number': 'project_number'
        }

        self._client_account = client_account
        self._client_user = client_user
        self._client_user_id = client_user_id
        self._client_workgroup_id = client_workgroup_id
        self._comments = comments
        self._created_by = created_by
        self._project_create_date = project_create_date
        self._project_description = project_description
        self._project_id = project_id
        self._project_name = project_name
        self._project_number = project_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectParentVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectParentVO of this ProjectParentVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_account(self):
        """Gets the client_account of this ProjectParentVO.

        

        :return: The client_account of this ProjectParentVO.
        :rtype: str
        """
        return self._client_account

    @client_account.setter
    def client_account(self, client_account):
        """Sets the client_account of this ProjectParentVO.

        

        :param client_account: The client_account of this ProjectParentVO.
        :type client_account: str
        """

        self._client_account = client_account

    @property
    def client_user(self):
        """Gets the client_user of this ProjectParentVO.

        

        :return: The client_user of this ProjectParentVO.
        :rtype: str
        """
        return self._client_user

    @client_user.setter
    def client_user(self, client_user):
        """Sets the client_user of this ProjectParentVO.

        

        :param client_user: The client_user of this ProjectParentVO.
        :type client_user: str
        """

        self._client_user = client_user

    @property
    def client_user_id(self):
        """Gets the client_user_id of this ProjectParentVO.

        

        :return: The client_user_id of this ProjectParentVO.
        :rtype: int
        """
        return self._client_user_id

    @client_user_id.setter
    def client_user_id(self, client_user_id):
        """Sets the client_user_id of this ProjectParentVO.

        

        :param client_user_id: The client_user_id of this ProjectParentVO.
        :type client_user_id: int
        """

        self._client_user_id = client_user_id

    @property
    def client_workgroup_id(self):
        """Gets the client_workgroup_id of this ProjectParentVO.

        

        :return: The client_workgroup_id of this ProjectParentVO.
        :rtype: int
        """
        return self._client_workgroup_id

    @client_workgroup_id.setter
    def client_workgroup_id(self, client_workgroup_id):
        """Sets the client_workgroup_id of this ProjectParentVO.

        

        :param client_workgroup_id: The client_workgroup_id of this ProjectParentVO.
        :type client_workgroup_id: int
        """

        self._client_workgroup_id = client_workgroup_id

    @property
    def comments(self):
        """Gets the comments of this ProjectParentVO.

        

        :return: The comments of this ProjectParentVO.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this ProjectParentVO.

        

        :param comments: The comments of this ProjectParentVO.
        :type comments: str
        """

        self._comments = comments

    @property
    def created_by(self):
        """Gets the created_by of this ProjectParentVO.


        :return: The created_by of this ProjectParentVO.
        :rtype: PersonVO
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ProjectParentVO.


        :param created_by: The created_by of this ProjectParentVO.
        :type created_by: PersonVO
        """

        self._created_by = created_by

    @property
    def project_create_date(self):
        """Gets the project_create_date of this ProjectParentVO.

        

        :return: The project_create_date of this ProjectParentVO.
        :rtype: date
        """
        return self._project_create_date

    @project_create_date.setter
    def project_create_date(self, project_create_date):
        """Sets the project_create_date of this ProjectParentVO.

        

        :param project_create_date: The project_create_date of this ProjectParentVO.
        :type project_create_date: date
        """

        self._project_create_date = project_create_date

    @property
    def project_description(self):
        """Gets the project_description of this ProjectParentVO.

        

        :return: The project_description of this ProjectParentVO.
        :rtype: str
        """
        return self._project_description

    @project_description.setter
    def project_description(self, project_description):
        """Sets the project_description of this ProjectParentVO.

        

        :param project_description: The project_description of this ProjectParentVO.
        :type project_description: str
        """

        self._project_description = project_description

    @property
    def project_id(self):
        """Gets the project_id of this ProjectParentVO.

        

        :return: The project_id of this ProjectParentVO.
        :rtype: int
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this ProjectParentVO.

        

        :param project_id: The project_id of this ProjectParentVO.
        :type project_id: int
        """

        self._project_id = project_id

    @property
    def project_name(self):
        """Gets the project_name of this ProjectParentVO.

        

        :return: The project_name of this ProjectParentVO.
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this ProjectParentVO.

        

        :param project_name: The project_name of this ProjectParentVO.
        :type project_name: str
        """

        self._project_name = project_name

    @property
    def project_number(self):
        """Gets the project_number of this ProjectParentVO.

        

        :return: The project_number of this ProjectParentVO.
        :rtype: str
        """
        return self._project_number

    @project_number.setter
    def project_number(self, project_number):
        """Sets the project_number of this ProjectParentVO.

        

        :param project_number: The project_number of this ProjectParentVO.
        :type project_number: str
        """

        self._project_number = project_number
