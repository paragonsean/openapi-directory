# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag_vo import TagVO
from openapi_server import util


class FileVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, download_link: str=None, file_id: int=None, file_name: str=None, file_size: object=None, file_type: str=None, is_remote: bool=None, modified_date: str=None, tag_list: List[TagVO]=None, upload_date: str=None, uploaded_by: str=None):
        """FileVO - a model defined in OpenAPI

        :param description: The description of this FileVO.
        :param download_link: The download_link of this FileVO.
        :param file_id: The file_id of this FileVO.
        :param file_name: The file_name of this FileVO.
        :param file_size: The file_size of this FileVO.
        :param file_type: The file_type of this FileVO.
        :param is_remote: The is_remote of this FileVO.
        :param modified_date: The modified_date of this FileVO.
        :param tag_list: The tag_list of this FileVO.
        :param upload_date: The upload_date of this FileVO.
        :param uploaded_by: The uploaded_by of this FileVO.
        """
        self.openapi_types = {
            'description': str,
            'download_link': str,
            'file_id': int,
            'file_name': str,
            'file_size': object,
            'file_type': str,
            'is_remote': bool,
            'modified_date': str,
            'tag_list': List[TagVO],
            'upload_date': str,
            'uploaded_by': str
        }

        self.attribute_map = {
            'description': 'description',
            'download_link': 'download_link',
            'file_id': 'file_id',
            'file_name': 'file_name',
            'file_size': 'file_size',
            'file_type': 'file_type',
            'is_remote': 'is_remote',
            'modified_date': 'modified_date',
            'tag_list': 'tagList',
            'upload_date': 'upload_date',
            'uploaded_by': 'uploaded_by'
        }

        self._description = description
        self._download_link = download_link
        self._file_id = file_id
        self._file_name = file_name
        self._file_size = file_size
        self._file_type = file_type
        self._is_remote = is_remote
        self._modified_date = modified_date
        self._tag_list = tag_list
        self._upload_date = upload_date
        self._uploaded_by = uploaded_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileVO of this FileVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this FileVO.

        

        :return: The description of this FileVO.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this FileVO.

        

        :param description: The description of this FileVO.
        :type description: str
        """

        self._description = description

    @property
    def download_link(self):
        """Gets the download_link of this FileVO.

        

        :return: The download_link of this FileVO.
        :rtype: str
        """
        return self._download_link

    @download_link.setter
    def download_link(self, download_link):
        """Sets the download_link of this FileVO.

        

        :param download_link: The download_link of this FileVO.
        :type download_link: str
        """

        self._download_link = download_link

    @property
    def file_id(self):
        """Gets the file_id of this FileVO.

        

        :return: The file_id of this FileVO.
        :rtype: int
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this FileVO.

        

        :param file_id: The file_id of this FileVO.
        :type file_id: int
        """

        self._file_id = file_id

    @property
    def file_name(self):
        """Gets the file_name of this FileVO.

        

        :return: The file_name of this FileVO.
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this FileVO.

        

        :param file_name: The file_name of this FileVO.
        :type file_name: str
        """

        self._file_name = file_name

    @property
    def file_size(self):
        """Gets the file_size of this FileVO.

        Java type: java.math.BigDecimal

        :return: The file_size of this FileVO.
        :rtype: object
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this FileVO.

        Java type: java.math.BigDecimal

        :param file_size: The file_size of this FileVO.
        :type file_size: object
        """

        self._file_size = file_size

    @property
    def file_type(self):
        """Gets the file_type of this FileVO.

        

        :return: The file_type of this FileVO.
        :rtype: str
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type):
        """Sets the file_type of this FileVO.

        

        :param file_type: The file_type of this FileVO.
        :type file_type: str
        """

        self._file_type = file_type

    @property
    def is_remote(self):
        """Gets the is_remote of this FileVO.

        

        :return: The is_remote of this FileVO.
        :rtype: bool
        """
        return self._is_remote

    @is_remote.setter
    def is_remote(self, is_remote):
        """Sets the is_remote of this FileVO.

        

        :param is_remote: The is_remote of this FileVO.
        :type is_remote: bool
        """

        self._is_remote = is_remote

    @property
    def modified_date(self):
        """Gets the modified_date of this FileVO.

        

        :return: The modified_date of this FileVO.
        :rtype: str
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this FileVO.

        

        :param modified_date: The modified_date of this FileVO.
        :type modified_date: str
        """

        self._modified_date = modified_date

    @property
    def tag_list(self):
        """Gets the tag_list of this FileVO.

        

        :return: The tag_list of this FileVO.
        :rtype: List[TagVO]
        """
        return self._tag_list

    @tag_list.setter
    def tag_list(self, tag_list):
        """Sets the tag_list of this FileVO.

        

        :param tag_list: The tag_list of this FileVO.
        :type tag_list: List[TagVO]
        """

        self._tag_list = tag_list

    @property
    def upload_date(self):
        """Gets the upload_date of this FileVO.

        

        :return: The upload_date of this FileVO.
        :rtype: str
        """
        return self._upload_date

    @upload_date.setter
    def upload_date(self, upload_date):
        """Sets the upload_date of this FileVO.

        

        :param upload_date: The upload_date of this FileVO.
        :type upload_date: str
        """

        self._upload_date = upload_date

    @property
    def uploaded_by(self):
        """Gets the uploaded_by of this FileVO.

        

        :return: The uploaded_by of this FileVO.
        :rtype: str
        """
        return self._uploaded_by

    @uploaded_by.setter
    def uploaded_by(self, uploaded_by):
        """Sets the uploaded_by of this FileVO.

        

        :param uploaded_by: The uploaded_by of this FileVO.
        :type uploaded_by: str
        """

        self._uploaded_by = uploaded_by
