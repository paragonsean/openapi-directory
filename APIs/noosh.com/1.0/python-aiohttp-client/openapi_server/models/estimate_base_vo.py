# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.project_base_vo import ProjectBaseVO
from openapi_server.models.rfe_base_vo import RfeBaseVO
from openapi_server.models.workgroup_base_vo import WorkgroupBaseVO
from openapi_server import util


class EstimateBaseVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_date: date=None, currency: str=None, estimate_id: int=None, estimate_title: str=None, expiration_date: date=None, project: ProjectBaseVO=None, rfe: RfeBaseVO=None, status: str=None, submit_date: date=None, supplier_workgroup: WorkgroupBaseVO=None, transactional_currency: str=None):
        """EstimateBaseVO - a model defined in OpenAPI

        :param create_date: The create_date of this EstimateBaseVO.
        :param currency: The currency of this EstimateBaseVO.
        :param estimate_id: The estimate_id of this EstimateBaseVO.
        :param estimate_title: The estimate_title of this EstimateBaseVO.
        :param expiration_date: The expiration_date of this EstimateBaseVO.
        :param project: The project of this EstimateBaseVO.
        :param rfe: The rfe of this EstimateBaseVO.
        :param status: The status of this EstimateBaseVO.
        :param submit_date: The submit_date of this EstimateBaseVO.
        :param supplier_workgroup: The supplier_workgroup of this EstimateBaseVO.
        :param transactional_currency: The transactional_currency of this EstimateBaseVO.
        """
        self.openapi_types = {
            'create_date': date,
            'currency': str,
            'estimate_id': int,
            'estimate_title': str,
            'expiration_date': date,
            'project': ProjectBaseVO,
            'rfe': RfeBaseVO,
            'status': str,
            'submit_date': date,
            'supplier_workgroup': WorkgroupBaseVO,
            'transactional_currency': str
        }

        self.attribute_map = {
            'create_date': 'create_date',
            'currency': 'currency',
            'estimate_id': 'estimate_id',
            'estimate_title': 'estimate_title',
            'expiration_date': 'expiration_date',
            'project': 'project',
            'rfe': 'rfe',
            'status': 'status',
            'submit_date': 'submit_date',
            'supplier_workgroup': 'supplier_workgroup',
            'transactional_currency': 'transactional_currency'
        }

        self._create_date = create_date
        self._currency = currency
        self._estimate_id = estimate_id
        self._estimate_title = estimate_title
        self._expiration_date = expiration_date
        self._project = project
        self._rfe = rfe
        self._status = status
        self._submit_date = submit_date
        self._supplier_workgroup = supplier_workgroup
        self._transactional_currency = transactional_currency

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EstimateBaseVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EstimateBaseVO of this EstimateBaseVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_date(self):
        """Gets the create_date of this EstimateBaseVO.

        

        :return: The create_date of this EstimateBaseVO.
        :rtype: date
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this EstimateBaseVO.

        

        :param create_date: The create_date of this EstimateBaseVO.
        :type create_date: date
        """

        self._create_date = create_date

    @property
    def currency(self):
        """Gets the currency of this EstimateBaseVO.

        

        :return: The currency of this EstimateBaseVO.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this EstimateBaseVO.

        

        :param currency: The currency of this EstimateBaseVO.
        :type currency: str
        """

        self._currency = currency

    @property
    def estimate_id(self):
        """Gets the estimate_id of this EstimateBaseVO.

        

        :return: The estimate_id of this EstimateBaseVO.
        :rtype: int
        """
        return self._estimate_id

    @estimate_id.setter
    def estimate_id(self, estimate_id):
        """Sets the estimate_id of this EstimateBaseVO.

        

        :param estimate_id: The estimate_id of this EstimateBaseVO.
        :type estimate_id: int
        """

        self._estimate_id = estimate_id

    @property
    def estimate_title(self):
        """Gets the estimate_title of this EstimateBaseVO.

        

        :return: The estimate_title of this EstimateBaseVO.
        :rtype: str
        """
        return self._estimate_title

    @estimate_title.setter
    def estimate_title(self, estimate_title):
        """Sets the estimate_title of this EstimateBaseVO.

        

        :param estimate_title: The estimate_title of this EstimateBaseVO.
        :type estimate_title: str
        """

        self._estimate_title = estimate_title

    @property
    def expiration_date(self):
        """Gets the expiration_date of this EstimateBaseVO.

        

        :return: The expiration_date of this EstimateBaseVO.
        :rtype: date
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this EstimateBaseVO.

        

        :param expiration_date: The expiration_date of this EstimateBaseVO.
        :type expiration_date: date
        """

        self._expiration_date = expiration_date

    @property
    def project(self):
        """Gets the project of this EstimateBaseVO.


        :return: The project of this EstimateBaseVO.
        :rtype: ProjectBaseVO
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this EstimateBaseVO.


        :param project: The project of this EstimateBaseVO.
        :type project: ProjectBaseVO
        """

        self._project = project

    @property
    def rfe(self):
        """Gets the rfe of this EstimateBaseVO.


        :return: The rfe of this EstimateBaseVO.
        :rtype: RfeBaseVO
        """
        return self._rfe

    @rfe.setter
    def rfe(self, rfe):
        """Sets the rfe of this EstimateBaseVO.


        :param rfe: The rfe of this EstimateBaseVO.
        :type rfe: RfeBaseVO
        """

        self._rfe = rfe

    @property
    def status(self):
        """Gets the status of this EstimateBaseVO.

        

        :return: The status of this EstimateBaseVO.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this EstimateBaseVO.

        

        :param status: The status of this EstimateBaseVO.
        :type status: str
        """

        self._status = status

    @property
    def submit_date(self):
        """Gets the submit_date of this EstimateBaseVO.

        

        :return: The submit_date of this EstimateBaseVO.
        :rtype: date
        """
        return self._submit_date

    @submit_date.setter
    def submit_date(self, submit_date):
        """Sets the submit_date of this EstimateBaseVO.

        

        :param submit_date: The submit_date of this EstimateBaseVO.
        :type submit_date: date
        """

        self._submit_date = submit_date

    @property
    def supplier_workgroup(self):
        """Gets the supplier_workgroup of this EstimateBaseVO.


        :return: The supplier_workgroup of this EstimateBaseVO.
        :rtype: WorkgroupBaseVO
        """
        return self._supplier_workgroup

    @supplier_workgroup.setter
    def supplier_workgroup(self, supplier_workgroup):
        """Sets the supplier_workgroup of this EstimateBaseVO.


        :param supplier_workgroup: The supplier_workgroup of this EstimateBaseVO.
        :type supplier_workgroup: WorkgroupBaseVO
        """

        self._supplier_workgroup = supplier_workgroup

    @property
    def transactional_currency(self):
        """Gets the transactional_currency of this EstimateBaseVO.

        

        :return: The transactional_currency of this EstimateBaseVO.
        :rtype: str
        """
        return self._transactional_currency

    @transactional_currency.setter
    def transactional_currency(self, transactional_currency):
        """Sets the transactional_currency of this EstimateBaseVO.

        

        :param transactional_currency: The transactional_currency of this EstimateBaseVO.
        :type transactional_currency: str
        """

        self._transactional_currency = transactional_currency
