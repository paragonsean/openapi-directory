# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserFieldsSimpleVO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_required: bool=None, label: str=None, ordinal_number: int=None, param_name: str=None, type: str=None, user_field_id: int=None):
        """UserFieldsSimpleVO - a model defined in OpenAPI

        :param is_required: The is_required of this UserFieldsSimpleVO.
        :param label: The label of this UserFieldsSimpleVO.
        :param ordinal_number: The ordinal_number of this UserFieldsSimpleVO.
        :param param_name: The param_name of this UserFieldsSimpleVO.
        :param type: The type of this UserFieldsSimpleVO.
        :param user_field_id: The user_field_id of this UserFieldsSimpleVO.
        """
        self.openapi_types = {
            'is_required': bool,
            'label': str,
            'ordinal_number': int,
            'param_name': str,
            'type': str,
            'user_field_id': int
        }

        self.attribute_map = {
            'is_required': 'is_required',
            'label': 'label',
            'ordinal_number': 'ordinal_number',
            'param_name': 'param_name',
            'type': 'type',
            'user_field_id': 'user_field_id'
        }

        self._is_required = is_required
        self._label = label
        self._ordinal_number = ordinal_number
        self._param_name = param_name
        self._type = type
        self._user_field_id = user_field_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserFieldsSimpleVO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserFieldsSimpleVO of this UserFieldsSimpleVO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_required(self):
        """Gets the is_required of this UserFieldsSimpleVO.

        

        :return: The is_required of this UserFieldsSimpleVO.
        :rtype: bool
        """
        return self._is_required

    @is_required.setter
    def is_required(self, is_required):
        """Sets the is_required of this UserFieldsSimpleVO.

        

        :param is_required: The is_required of this UserFieldsSimpleVO.
        :type is_required: bool
        """

        self._is_required = is_required

    @property
    def label(self):
        """Gets the label of this UserFieldsSimpleVO.

        

        :return: The label of this UserFieldsSimpleVO.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this UserFieldsSimpleVO.

        

        :param label: The label of this UserFieldsSimpleVO.
        :type label: str
        """

        self._label = label

    @property
    def ordinal_number(self):
        """Gets the ordinal_number of this UserFieldsSimpleVO.

        

        :return: The ordinal_number of this UserFieldsSimpleVO.
        :rtype: int
        """
        return self._ordinal_number

    @ordinal_number.setter
    def ordinal_number(self, ordinal_number):
        """Sets the ordinal_number of this UserFieldsSimpleVO.

        

        :param ordinal_number: The ordinal_number of this UserFieldsSimpleVO.
        :type ordinal_number: int
        """

        self._ordinal_number = ordinal_number

    @property
    def param_name(self):
        """Gets the param_name of this UserFieldsSimpleVO.

        

        :return: The param_name of this UserFieldsSimpleVO.
        :rtype: str
        """
        return self._param_name

    @param_name.setter
    def param_name(self, param_name):
        """Sets the param_name of this UserFieldsSimpleVO.

        

        :param param_name: The param_name of this UserFieldsSimpleVO.
        :type param_name: str
        """

        self._param_name = param_name

    @property
    def type(self):
        """Gets the type of this UserFieldsSimpleVO.

        

        :return: The type of this UserFieldsSimpleVO.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UserFieldsSimpleVO.

        

        :param type: The type of this UserFieldsSimpleVO.
        :type type: str
        """

        self._type = type

    @property
    def user_field_id(self):
        """Gets the user_field_id of this UserFieldsSimpleVO.

        

        :return: The user_field_id of this UserFieldsSimpleVO.
        :rtype: int
        """
        return self._user_field_id

    @user_field_id.setter
    def user_field_id(self, user_field_id):
        """Sets the user_field_id of this UserFieldsSimpleVO.

        

        :param user_field_id: The user_field_id of this UserFieldsSimpleVO.
        :type user_field_id: int
        """

        self._user_field_id = user_field_id
