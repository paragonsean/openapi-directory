/**
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfile_statistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfile_statistics::OAIProfile_statistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfile_statistics::OAIProfile_statistics() {
    this->initializeModel();
}

OAIProfile_statistics::~OAIProfile_statistics() {}

void OAIProfile_statistics::initializeModel() {

    m_followers_isSet = false;
    m_followers_isValid = false;
}

void OAIProfile_statistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfile_statistics::fromJsonObject(QJsonObject json) {

    m_followers_isValid = ::OpenAPI::fromJsonValue(m_followers, json[QString("followers")]);
    m_followers_isSet = !json[QString("followers")].isNull() && m_followers_isValid;
}

QString OAIProfile_statistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfile_statistics::asJsonObject() const {
    QJsonObject obj;
    if (m_followers_isSet) {
        obj.insert(QString("followers"), ::OpenAPI::toJsonValue(m_followers));
    }
    return obj;
}

double OAIProfile_statistics::getFollowers() const {
    return m_followers;
}
void OAIProfile_statistics::setFollowers(const double &followers) {
    m_followers = followers;
    m_followers_isSet = true;
}

bool OAIProfile_statistics::is_followers_Set() const{
    return m_followers_isSet;
}

bool OAIProfile_statistics::is_followers_Valid() const{
    return m_followers_isValid;
}

bool OAIProfile_statistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_followers_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfile_statistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
