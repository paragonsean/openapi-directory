/**
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfiles_inner_schedules_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfiles_inner_schedules_inner::OAIProfiles_inner_schedules_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfiles_inner_schedules_inner::OAIProfiles_inner_schedules_inner() {
    this->initializeModel();
}

OAIProfiles_inner_schedules_inner::~OAIProfiles_inner_schedules_inner() {}

void OAIProfiles_inner_schedules_inner::initializeModel() {

    m_days_isSet = false;
    m_days_isValid = false;

    m_times_isSet = false;
    m_times_isValid = false;
}

void OAIProfiles_inner_schedules_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfiles_inner_schedules_inner::fromJsonObject(QJsonObject json) {

    m_days_isValid = ::OpenAPI::fromJsonValue(m_days, json[QString("days")]);
    m_days_isSet = !json[QString("days")].isNull() && m_days_isValid;

    m_times_isValid = ::OpenAPI::fromJsonValue(m_times, json[QString("times")]);
    m_times_isSet = !json[QString("times")].isNull() && m_times_isValid;
}

QString OAIProfiles_inner_schedules_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfiles_inner_schedules_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_days.size() > 0) {
        obj.insert(QString("days"), ::OpenAPI::toJsonValue(m_days));
    }
    if (m_times.size() > 0) {
        obj.insert(QString("times"), ::OpenAPI::toJsonValue(m_times));
    }
    return obj;
}

QList<QString> OAIProfiles_inner_schedules_inner::getDays() const {
    return m_days;
}
void OAIProfiles_inner_schedules_inner::setDays(const QList<QString> &days) {
    m_days = days;
    m_days_isSet = true;
}

bool OAIProfiles_inner_schedules_inner::is_days_Set() const{
    return m_days_isSet;
}

bool OAIProfiles_inner_schedules_inner::is_days_Valid() const{
    return m_days_isValid;
}

QList<OAIObject> OAIProfiles_inner_schedules_inner::getTimes() const {
    return m_times;
}
void OAIProfiles_inner_schedules_inner::setTimes(const QList<OAIObject> &times) {
    m_times = times;
    m_times_isSet = true;
}

bool OAIProfiles_inner_schedules_inner::is_times_Set() const{
    return m_times_isSet;
}

bool OAIProfiles_inner_schedules_inner::is_times_Valid() const{
    return m_times_isValid;
}

bool OAIProfiles_inner_schedules_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_days.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_times.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfiles_inner_schedules_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
