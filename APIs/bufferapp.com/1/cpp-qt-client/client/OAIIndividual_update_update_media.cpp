/**
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIndividual_update_update_media.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIndividual_update_update_media::OAIIndividual_update_update_media(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIndividual_update_update_media::OAIIndividual_update_update_media() {
    this->initializeModel();
}

OAIIndividual_update_update_media::~OAIIndividual_update_update_media() {}

void OAIIndividual_update_update_media::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIIndividual_update_update_media::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIndividual_update_update_media::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIIndividual_update_update_media::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIndividual_update_update_media::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIIndividual_update_update_media::getDescription() const {
    return m_description;
}
void OAIIndividual_update_update_media::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIIndividual_update_update_media::is_description_Set() const{
    return m_description_isSet;
}

bool OAIIndividual_update_update_media::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIIndividual_update_update_media::getLink() const {
    return m_link;
}
void OAIIndividual_update_update_media::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIIndividual_update_update_media::is_link_Set() const{
    return m_link_isSet;
}

bool OAIIndividual_update_update_media::is_link_Valid() const{
    return m_link_isValid;
}

QString OAIIndividual_update_update_media::getTitle() const {
    return m_title;
}
void OAIIndividual_update_update_media::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIIndividual_update_update_media::is_title_Set() const{
    return m_title_isSet;
}

bool OAIIndividual_update_update_media::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIIndividual_update_update_media::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIndividual_update_update_media::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
