/**
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInteractions_interactions_inner_user.h
 *
 * 
 */

#ifndef OAIInteractions_interactions_inner_user_H
#define OAIInteractions_interactions_inner_user_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInteractions_interactions_inner_user : public OAIObject {
public:
    OAIInteractions_interactions_inner_user();
    OAIInteractions_interactions_inner_user(QString json);
    ~OAIInteractions_interactions_inner_user() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatar() const;
    void setAvatar(const QString &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    QString getAvatarHttps() const;
    void setAvatarHttps(const QString &avatar_https);
    bool is_avatar_https_Set() const;
    bool is_avatar_https_Valid() const;

    double getFollowers() const;
    void setFollowers(const double &followers);
    bool is_followers_Set() const;
    bool is_followers_Valid() const;

    QString getTwitterId() const;
    void setTwitterId(const QString &twitter_id);
    bool is_twitter_id_Set() const;
    bool is_twitter_id_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    QString m_avatar_https;
    bool m_avatar_https_isSet;
    bool m_avatar_https_isValid;

    double m_followers;
    bool m_followers_isSet;
    bool m_followers_isValid;

    QString m_twitter_id;
    bool m_twitter_id_isSet;
    bool m_twitter_id_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInteractions_interactions_inner_user)

#endif // OAIInteractions_interactions_inner_user_H
