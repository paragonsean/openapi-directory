/**
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShares.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShares::OAIShares(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShares::OAIShares() {
    this->initializeModel();
}

OAIShares::~OAIShares() {}

void OAIShares::initializeModel() {

    m_shares_isSet = false;
    m_shares_isValid = false;
}

void OAIShares::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShares::fromJsonObject(QJsonObject json) {

    m_shares_isValid = ::OpenAPI::fromJsonValue(m_shares, json[QString("shares")]);
    m_shares_isSet = !json[QString("shares")].isNull() && m_shares_isValid;
}

QString OAIShares::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShares::asJsonObject() const {
    QJsonObject obj;
    if (m_shares_isSet) {
        obj.insert(QString("shares"), ::OpenAPI::toJsonValue(m_shares));
    }
    return obj;
}

double OAIShares::getShares() const {
    return m_shares;
}
void OAIShares::setShares(const double &shares) {
    m_shares = shares;
    m_shares_isSet = true;
}

bool OAIShares::is_shares_Set() const{
    return m_shares_isSet;
}

bool OAIShares::is_shares_Valid() const{
    return m_shares_isValid;
}

bool OAIShares::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_shares_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShares::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
