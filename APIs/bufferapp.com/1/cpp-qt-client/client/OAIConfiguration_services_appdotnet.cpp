/**
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfiguration_services_appdotnet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfiguration_services_appdotnet::OAIConfiguration_services_appdotnet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfiguration_services_appdotnet::OAIConfiguration_services_appdotnet() {
    this->initializeModel();
}

OAIConfiguration_services_appdotnet::~OAIConfiguration_services_appdotnet() {}

void OAIConfiguration_services_appdotnet::initializeModel() {

    m_types_isSet = false;
    m_types_isValid = false;

    m_urls_isSet = false;
    m_urls_isValid = false;
}

void OAIConfiguration_services_appdotnet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfiguration_services_appdotnet::fromJsonObject(QJsonObject json) {

    m_types_isValid = ::OpenAPI::fromJsonValue(m_types, json[QString("types")]);
    m_types_isSet = !json[QString("types")].isNull() && m_types_isValid;

    m_urls_isValid = ::OpenAPI::fromJsonValue(m_urls, json[QString("urls")]);
    m_urls_isSet = !json[QString("urls")].isNull() && m_urls_isValid;
}

QString OAIConfiguration_services_appdotnet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfiguration_services_appdotnet::asJsonObject() const {
    QJsonObject obj;
    if (m_types.isSet()) {
        obj.insert(QString("types"), ::OpenAPI::toJsonValue(m_types));
    }
    if (m_urls.isSet()) {
        obj.insert(QString("urls"), ::OpenAPI::toJsonValue(m_urls));
    }
    return obj;
}

OAIConfiguration_services_appdotnet_types OAIConfiguration_services_appdotnet::getTypes() const {
    return m_types;
}
void OAIConfiguration_services_appdotnet::setTypes(const OAIConfiguration_services_appdotnet_types &types) {
    m_types = types;
    m_types_isSet = true;
}

bool OAIConfiguration_services_appdotnet::is_types_Set() const{
    return m_types_isSet;
}

bool OAIConfiguration_services_appdotnet::is_types_Valid() const{
    return m_types_isValid;
}

OAIConfiguration_services_appdotnet_urls OAIConfiguration_services_appdotnet::getUrls() const {
    return m_urls;
}
void OAIConfiguration_services_appdotnet::setUrls(const OAIConfiguration_services_appdotnet_urls &urls) {
    m_urls = urls;
    m_urls_isSet = true;
}

bool OAIConfiguration_services_appdotnet::is_urls_Set() const{
    return m_urls_isSet;
}

bool OAIConfiguration_services_appdotnet::is_urls_Valid() const{
    return m_urls_isValid;
}

bool OAIConfiguration_services_appdotnet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_types.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_urls.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfiguration_services_appdotnet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
