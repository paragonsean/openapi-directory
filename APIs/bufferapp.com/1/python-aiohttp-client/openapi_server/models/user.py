# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, activity_at: float=None, created_at: float=None, id: str=None, plan: str=None, referral_link: str=None, referral_token: str=None, secret_email: str=None, timezone: str=None):
        """User - a model defined in OpenAPI

        :param id: The id of this User.
        :param activity_at: The activity_at of this User.
        :param created_at: The created_at of this User.
        :param id: The id of this User.
        :param plan: The plan of this User.
        :param referral_link: The referral_link of this User.
        :param referral_token: The referral_token of this User.
        :param secret_email: The secret_email of this User.
        :param timezone: The timezone of this User.
        """
        self.openapi_types = {
            'id': str,
            'activity_at': float,
            'created_at': float,
            'id': str,
            'plan': str,
            'referral_link': str,
            'referral_token': str,
            'secret_email': str,
            'timezone': str
        }

        self.attribute_map = {
            'id': '_id',
            'activity_at': 'activity_at',
            'created_at': 'created_at',
            'id': 'id',
            'plan': 'plan',
            'referral_link': 'referral_link',
            'referral_token': 'referral_token',
            'secret_email': 'secret_email',
            'timezone': 'timezone'
        }

        self._id = id
        self._activity_at = activity_at
        self._created_at = created_at
        self._id = id
        self._plan = plan
        self._referral_link = referral_link
        self._referral_token = referral_token
        self._secret_email = secret_email
        self._timezone = timezone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The user of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: str
        """

        self._id = id

    @property
    def activity_at(self):
        """Gets the activity_at of this User.


        :return: The activity_at of this User.
        :rtype: float
        """
        return self._activity_at

    @activity_at.setter
    def activity_at(self, activity_at):
        """Sets the activity_at of this User.


        :param activity_at: The activity_at of this User.
        :type activity_at: float
        """

        self._activity_at = activity_at

    @property
    def created_at(self):
        """Gets the created_at of this User.


        :return: The created_at of this User.
        :rtype: float
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this User.


        :param created_at: The created_at of this User.
        :type created_at: float
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: str
        """

        self._id = id

    @property
    def plan(self):
        """Gets the plan of this User.


        :return: The plan of this User.
        :rtype: str
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this User.


        :param plan: The plan of this User.
        :type plan: str
        """

        self._plan = plan

    @property
    def referral_link(self):
        """Gets the referral_link of this User.


        :return: The referral_link of this User.
        :rtype: str
        """
        return self._referral_link

    @referral_link.setter
    def referral_link(self, referral_link):
        """Sets the referral_link of this User.


        :param referral_link: The referral_link of this User.
        :type referral_link: str
        """

        self._referral_link = referral_link

    @property
    def referral_token(self):
        """Gets the referral_token of this User.


        :return: The referral_token of this User.
        :rtype: str
        """
        return self._referral_token

    @referral_token.setter
    def referral_token(self, referral_token):
        """Sets the referral_token of this User.


        :param referral_token: The referral_token of this User.
        :type referral_token: str
        """

        self._referral_token = referral_token

    @property
    def secret_email(self):
        """Gets the secret_email of this User.


        :return: The secret_email of this User.
        :rtype: str
        """
        return self._secret_email

    @secret_email.setter
    def secret_email(self, secret_email):
        """Sets the secret_email of this User.


        :param secret_email: The secret_email of this User.
        :type secret_email: str
        """

        self._secret_email = secret_email

    @property
    def timezone(self):
        """Gets the timezone of this User.


        :return: The timezone of this User.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this User.


        :param timezone: The timezone of this User.
        :type timezone: str
        """

        self._timezone = timezone
