# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProfilesInnerCounts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, daily_suggestions: float=None, drafts: float=None, pending: float=None, sent: float=None):
        """ProfilesInnerCounts - a model defined in OpenAPI

        :param daily_suggestions: The daily_suggestions of this ProfilesInnerCounts.
        :param drafts: The drafts of this ProfilesInnerCounts.
        :param pending: The pending of this ProfilesInnerCounts.
        :param sent: The sent of this ProfilesInnerCounts.
        """
        self.openapi_types = {
            'daily_suggestions': float,
            'drafts': float,
            'pending': float,
            'sent': float
        }

        self.attribute_map = {
            'daily_suggestions': 'daily_suggestions',
            'drafts': 'drafts',
            'pending': 'pending',
            'sent': 'sent'
        }

        self._daily_suggestions = daily_suggestions
        self._drafts = drafts
        self._pending = pending
        self._sent = sent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfilesInnerCounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The profiles_inner_counts of this ProfilesInnerCounts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def daily_suggestions(self):
        """Gets the daily_suggestions of this ProfilesInnerCounts.


        :return: The daily_suggestions of this ProfilesInnerCounts.
        :rtype: float
        """
        return self._daily_suggestions

    @daily_suggestions.setter
    def daily_suggestions(self, daily_suggestions):
        """Sets the daily_suggestions of this ProfilesInnerCounts.


        :param daily_suggestions: The daily_suggestions of this ProfilesInnerCounts.
        :type daily_suggestions: float
        """

        self._daily_suggestions = daily_suggestions

    @property
    def drafts(self):
        """Gets the drafts of this ProfilesInnerCounts.


        :return: The drafts of this ProfilesInnerCounts.
        :rtype: float
        """
        return self._drafts

    @drafts.setter
    def drafts(self, drafts):
        """Sets the drafts of this ProfilesInnerCounts.


        :param drafts: The drafts of this ProfilesInnerCounts.
        :type drafts: float
        """

        self._drafts = drafts

    @property
    def pending(self):
        """Gets the pending of this ProfilesInnerCounts.


        :return: The pending of this ProfilesInnerCounts.
        :rtype: float
        """
        return self._pending

    @pending.setter
    def pending(self, pending):
        """Sets the pending of this ProfilesInnerCounts.


        :param pending: The pending of this ProfilesInnerCounts.
        :type pending: float
        """

        self._pending = pending

    @property
    def sent(self):
        """Gets the sent of this ProfilesInnerCounts.


        :return: The sent of this ProfilesInnerCounts.
        :rtype: float
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this ProfilesInnerCounts.


        :param sent: The sent of this ProfilesInnerCounts.
        :type sent: float
        """

        self._sent = sent
