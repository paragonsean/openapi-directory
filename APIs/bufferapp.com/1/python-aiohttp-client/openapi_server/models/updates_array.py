# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reorder_updates_inner import ReorderUpdatesInner
from openapi_server import util


class UpdatesArray(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total: float=None, updates: List[ReorderUpdatesInner]=None):
        """UpdatesArray - a model defined in OpenAPI

        :param total: The total of this UpdatesArray.
        :param updates: The updates of this UpdatesArray.
        """
        self.openapi_types = {
            'total': float,
            'updates': List[ReorderUpdatesInner]
        }

        self.attribute_map = {
            'total': 'total',
            'updates': 'updates'
        }

        self._total = total
        self._updates = updates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatesArray':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updates-array of this UpdatesArray.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self):
        """Gets the total of this UpdatesArray.


        :return: The total of this UpdatesArray.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this UpdatesArray.


        :param total: The total of this UpdatesArray.
        :type total: float
        """

        self._total = total

    @property
    def updates(self):
        """Gets the updates of this UpdatesArray.


        :return: The updates of this UpdatesArray.
        :rtype: List[ReorderUpdatesInner]
        """
        return self._updates

    @updates.setter
    def updates(self, updates):
        """Sets the updates of this UpdatesArray.


        :param updates: The updates of this UpdatesArray.
        :type updates: List[ReorderUpdatesInner]
        """

        self._updates = updates
