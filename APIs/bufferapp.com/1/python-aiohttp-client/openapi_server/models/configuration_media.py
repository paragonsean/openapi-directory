# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigurationMedia(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, picture_filetypes: List[str]=None, picture_size_max: float=None, picture_size_min: float=None):
        """ConfigurationMedia - a model defined in OpenAPI

        :param picture_filetypes: The picture_filetypes of this ConfigurationMedia.
        :param picture_size_max: The picture_size_max of this ConfigurationMedia.
        :param picture_size_min: The picture_size_min of this ConfigurationMedia.
        """
        self.openapi_types = {
            'picture_filetypes': List[str],
            'picture_size_max': float,
            'picture_size_min': float
        }

        self.attribute_map = {
            'picture_filetypes': 'picture_filetypes',
            'picture_size_max': 'picture_size_max',
            'picture_size_min': 'picture_size_min'
        }

        self._picture_filetypes = picture_filetypes
        self._picture_size_max = picture_size_max
        self._picture_size_min = picture_size_min

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationMedia':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The configuration_media of this ConfigurationMedia.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def picture_filetypes(self):
        """Gets the picture_filetypes of this ConfigurationMedia.


        :return: The picture_filetypes of this ConfigurationMedia.
        :rtype: List[str]
        """
        return self._picture_filetypes

    @picture_filetypes.setter
    def picture_filetypes(self, picture_filetypes):
        """Sets the picture_filetypes of this ConfigurationMedia.


        :param picture_filetypes: The picture_filetypes of this ConfigurationMedia.
        :type picture_filetypes: List[str]
        """

        self._picture_filetypes = picture_filetypes

    @property
    def picture_size_max(self):
        """Gets the picture_size_max of this ConfigurationMedia.


        :return: The picture_size_max of this ConfigurationMedia.
        :rtype: float
        """
        return self._picture_size_max

    @picture_size_max.setter
    def picture_size_max(self, picture_size_max):
        """Sets the picture_size_max of this ConfigurationMedia.


        :param picture_size_max: The picture_size_max of this ConfigurationMedia.
        :type picture_size_max: float
        """

        self._picture_size_max = picture_size_max

    @property
    def picture_size_min(self):
        """Gets the picture_size_min of this ConfigurationMedia.


        :return: The picture_size_min of this ConfigurationMedia.
        :rtype: float
        """
        return self._picture_size_min

    @picture_size_min.setter
    def picture_size_min(self, picture_size_min):
        """Sets the picture_size_min of this ConfigurationMedia.


        :param picture_size_min: The picture_size_min of this ConfigurationMedia.
        :type picture_size_min: float
        """

        self._picture_size_min = picture_size_min
