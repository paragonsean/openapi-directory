# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.individual_update_update_media import IndividualUpdateUpdateMedia
from openapi_server import util


class NewUpdateUpdatesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: float=None, day: str=None, due_at: float=None, due_time: str=None, id: str=None, media: IndividualUpdateUpdateMedia=None, profile_id: str=None, profile_service: str=None, status: str=None, text: str=None, text_formatted: str=None, user_id: str=None, via: str=None):
        """NewUpdateUpdatesInner - a model defined in OpenAPI

        :param created_at: The created_at of this NewUpdateUpdatesInner.
        :param day: The day of this NewUpdateUpdatesInner.
        :param due_at: The due_at of this NewUpdateUpdatesInner.
        :param due_time: The due_time of this NewUpdateUpdatesInner.
        :param id: The id of this NewUpdateUpdatesInner.
        :param media: The media of this NewUpdateUpdatesInner.
        :param profile_id: The profile_id of this NewUpdateUpdatesInner.
        :param profile_service: The profile_service of this NewUpdateUpdatesInner.
        :param status: The status of this NewUpdateUpdatesInner.
        :param text: The text of this NewUpdateUpdatesInner.
        :param text_formatted: The text_formatted of this NewUpdateUpdatesInner.
        :param user_id: The user_id of this NewUpdateUpdatesInner.
        :param via: The via of this NewUpdateUpdatesInner.
        """
        self.openapi_types = {
            'created_at': float,
            'day': str,
            'due_at': float,
            'due_time': str,
            'id': str,
            'media': IndividualUpdateUpdateMedia,
            'profile_id': str,
            'profile_service': str,
            'status': str,
            'text': str,
            'text_formatted': str,
            'user_id': str,
            'via': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'day': 'day',
            'due_at': 'due_at',
            'due_time': 'due_time',
            'id': 'id',
            'media': 'media',
            'profile_id': 'profile_id',
            'profile_service': 'profile_service',
            'status': 'status',
            'text': 'text',
            'text_formatted': 'text_formatted',
            'user_id': 'user_id',
            'via': 'via'
        }

        self._created_at = created_at
        self._day = day
        self._due_at = due_at
        self._due_time = due_time
        self._id = id
        self._media = media
        self._profile_id = profile_id
        self._profile_service = profile_service
        self._status = status
        self._text = text
        self._text_formatted = text_formatted
        self._user_id = user_id
        self._via = via

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewUpdateUpdatesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The newUpdate_updates_inner of this NewUpdateUpdatesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this NewUpdateUpdatesInner.


        :return: The created_at of this NewUpdateUpdatesInner.
        :rtype: float
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this NewUpdateUpdatesInner.


        :param created_at: The created_at of this NewUpdateUpdatesInner.
        :type created_at: float
        """

        self._created_at = created_at

    @property
    def day(self):
        """Gets the day of this NewUpdateUpdatesInner.


        :return: The day of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this NewUpdateUpdatesInner.


        :param day: The day of this NewUpdateUpdatesInner.
        :type day: str
        """

        self._day = day

    @property
    def due_at(self):
        """Gets the due_at of this NewUpdateUpdatesInner.


        :return: The due_at of this NewUpdateUpdatesInner.
        :rtype: float
        """
        return self._due_at

    @due_at.setter
    def due_at(self, due_at):
        """Sets the due_at of this NewUpdateUpdatesInner.


        :param due_at: The due_at of this NewUpdateUpdatesInner.
        :type due_at: float
        """

        self._due_at = due_at

    @property
    def due_time(self):
        """Gets the due_time of this NewUpdateUpdatesInner.


        :return: The due_time of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._due_time

    @due_time.setter
    def due_time(self, due_time):
        """Sets the due_time of this NewUpdateUpdatesInner.


        :param due_time: The due_time of this NewUpdateUpdatesInner.
        :type due_time: str
        """

        self._due_time = due_time

    @property
    def id(self):
        """Gets the id of this NewUpdateUpdatesInner.


        :return: The id of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NewUpdateUpdatesInner.


        :param id: The id of this NewUpdateUpdatesInner.
        :type id: str
        """

        self._id = id

    @property
    def media(self):
        """Gets the media of this NewUpdateUpdatesInner.


        :return: The media of this NewUpdateUpdatesInner.
        :rtype: IndividualUpdateUpdateMedia
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this NewUpdateUpdatesInner.


        :param media: The media of this NewUpdateUpdatesInner.
        :type media: IndividualUpdateUpdateMedia
        """

        self._media = media

    @property
    def profile_id(self):
        """Gets the profile_id of this NewUpdateUpdatesInner.


        :return: The profile_id of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._profile_id

    @profile_id.setter
    def profile_id(self, profile_id):
        """Sets the profile_id of this NewUpdateUpdatesInner.


        :param profile_id: The profile_id of this NewUpdateUpdatesInner.
        :type profile_id: str
        """

        self._profile_id = profile_id

    @property
    def profile_service(self):
        """Gets the profile_service of this NewUpdateUpdatesInner.


        :return: The profile_service of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._profile_service

    @profile_service.setter
    def profile_service(self, profile_service):
        """Sets the profile_service of this NewUpdateUpdatesInner.


        :param profile_service: The profile_service of this NewUpdateUpdatesInner.
        :type profile_service: str
        """

        self._profile_service = profile_service

    @property
    def status(self):
        """Gets the status of this NewUpdateUpdatesInner.


        :return: The status of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this NewUpdateUpdatesInner.


        :param status: The status of this NewUpdateUpdatesInner.
        :type status: str
        """

        self._status = status

    @property
    def text(self):
        """Gets the text of this NewUpdateUpdatesInner.


        :return: The text of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this NewUpdateUpdatesInner.


        :param text: The text of this NewUpdateUpdatesInner.
        :type text: str
        """

        self._text = text

    @property
    def text_formatted(self):
        """Gets the text_formatted of this NewUpdateUpdatesInner.


        :return: The text_formatted of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._text_formatted

    @text_formatted.setter
    def text_formatted(self, text_formatted):
        """Sets the text_formatted of this NewUpdateUpdatesInner.


        :param text_formatted: The text_formatted of this NewUpdateUpdatesInner.
        :type text_formatted: str
        """

        self._text_formatted = text_formatted

    @property
    def user_id(self):
        """Gets the user_id of this NewUpdateUpdatesInner.


        :return: The user_id of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this NewUpdateUpdatesInner.


        :param user_id: The user_id of this NewUpdateUpdatesInner.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def via(self):
        """Gets the via of this NewUpdateUpdatesInner.


        :return: The via of this NewUpdateUpdatesInner.
        :rtype: str
        """
        return self._via

    @via.setter
    def via(self, via):
        """Sets the via of this NewUpdateUpdatesInner.


        :param via: The via of this NewUpdateUpdatesInner.
        :type via: str
        """

        self._via = via
