# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_services_appdotnet_types_profile_icons import ConfigurationServicesAppdotnetTypesProfileIcons
from openapi_server import util


class ConfigurationServicesAppdotnetTypesProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, character_limit: float=None, icons: ConfigurationServicesAppdotnetTypesProfileIcons=None, link_attachments: bool=None, name: str=None, schedule_limit: float=None, supported_interactions: List[object]=None):
        """ConfigurationServicesAppdotnetTypesProfile - a model defined in OpenAPI

        :param character_limit: The character_limit of this ConfigurationServicesAppdotnetTypesProfile.
        :param icons: The icons of this ConfigurationServicesAppdotnetTypesProfile.
        :param link_attachments: The link_attachments of this ConfigurationServicesAppdotnetTypesProfile.
        :param name: The name of this ConfigurationServicesAppdotnetTypesProfile.
        :param schedule_limit: The schedule_limit of this ConfigurationServicesAppdotnetTypesProfile.
        :param supported_interactions: The supported_interactions of this ConfigurationServicesAppdotnetTypesProfile.
        """
        self.openapi_types = {
            'character_limit': float,
            'icons': ConfigurationServicesAppdotnetTypesProfileIcons,
            'link_attachments': bool,
            'name': str,
            'schedule_limit': float,
            'supported_interactions': List[object]
        }

        self.attribute_map = {
            'character_limit': 'character_limit',
            'icons': 'icons',
            'link_attachments': 'link_attachments',
            'name': 'name',
            'schedule_limit': 'schedule_limit',
            'supported_interactions': 'supported_interactions'
        }

        self._character_limit = character_limit
        self._icons = icons
        self._link_attachments = link_attachments
        self._name = name
        self._schedule_limit = schedule_limit
        self._supported_interactions = supported_interactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationServicesAppdotnetTypesProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The configuration_services_appdotnet_types_profile of this ConfigurationServicesAppdotnetTypesProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def character_limit(self):
        """Gets the character_limit of this ConfigurationServicesAppdotnetTypesProfile.


        :return: The character_limit of this ConfigurationServicesAppdotnetTypesProfile.
        :rtype: float
        """
        return self._character_limit

    @character_limit.setter
    def character_limit(self, character_limit):
        """Sets the character_limit of this ConfigurationServicesAppdotnetTypesProfile.


        :param character_limit: The character_limit of this ConfigurationServicesAppdotnetTypesProfile.
        :type character_limit: float
        """

        self._character_limit = character_limit

    @property
    def icons(self):
        """Gets the icons of this ConfigurationServicesAppdotnetTypesProfile.


        :return: The icons of this ConfigurationServicesAppdotnetTypesProfile.
        :rtype: ConfigurationServicesAppdotnetTypesProfileIcons
        """
        return self._icons

    @icons.setter
    def icons(self, icons):
        """Sets the icons of this ConfigurationServicesAppdotnetTypesProfile.


        :param icons: The icons of this ConfigurationServicesAppdotnetTypesProfile.
        :type icons: ConfigurationServicesAppdotnetTypesProfileIcons
        """

        self._icons = icons

    @property
    def link_attachments(self):
        """Gets the link_attachments of this ConfigurationServicesAppdotnetTypesProfile.


        :return: The link_attachments of this ConfigurationServicesAppdotnetTypesProfile.
        :rtype: bool
        """
        return self._link_attachments

    @link_attachments.setter
    def link_attachments(self, link_attachments):
        """Sets the link_attachments of this ConfigurationServicesAppdotnetTypesProfile.


        :param link_attachments: The link_attachments of this ConfigurationServicesAppdotnetTypesProfile.
        :type link_attachments: bool
        """

        self._link_attachments = link_attachments

    @property
    def name(self):
        """Gets the name of this ConfigurationServicesAppdotnetTypesProfile.


        :return: The name of this ConfigurationServicesAppdotnetTypesProfile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ConfigurationServicesAppdotnetTypesProfile.


        :param name: The name of this ConfigurationServicesAppdotnetTypesProfile.
        :type name: str
        """

        self._name = name

    @property
    def schedule_limit(self):
        """Gets the schedule_limit of this ConfigurationServicesAppdotnetTypesProfile.


        :return: The schedule_limit of this ConfigurationServicesAppdotnetTypesProfile.
        :rtype: float
        """
        return self._schedule_limit

    @schedule_limit.setter
    def schedule_limit(self, schedule_limit):
        """Sets the schedule_limit of this ConfigurationServicesAppdotnetTypesProfile.


        :param schedule_limit: The schedule_limit of this ConfigurationServicesAppdotnetTypesProfile.
        :type schedule_limit: float
        """

        self._schedule_limit = schedule_limit

    @property
    def supported_interactions(self):
        """Gets the supported_interactions of this ConfigurationServicesAppdotnetTypesProfile.


        :return: The supported_interactions of this ConfigurationServicesAppdotnetTypesProfile.
        :rtype: List[object]
        """
        return self._supported_interactions

    @supported_interactions.setter
    def supported_interactions(self, supported_interactions):
        """Sets the supported_interactions of this ConfigurationServicesAppdotnetTypesProfile.


        :param supported_interactions: The supported_interactions of this ConfigurationServicesAppdotnetTypesProfile.
        :type supported_interactions: List[object]
        """

        self._supported_interactions = supported_interactions
