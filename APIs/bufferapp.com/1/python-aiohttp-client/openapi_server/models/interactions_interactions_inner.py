# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.interactions_interactions_inner_user import InteractionsInteractionsInnerUser
from openapi_server import util


class InteractionsInteractionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, created_at: float=None, event: str=None, id: str=None, interaction_id: str=None, user: InteractionsInteractionsInnerUser=None):
        """InteractionsInteractionsInner - a model defined in OpenAPI

        :param id: The id of this InteractionsInteractionsInner.
        :param created_at: The created_at of this InteractionsInteractionsInner.
        :param event: The event of this InteractionsInteractionsInner.
        :param id: The id of this InteractionsInteractionsInner.
        :param interaction_id: The interaction_id of this InteractionsInteractionsInner.
        :param user: The user of this InteractionsInteractionsInner.
        """
        self.openapi_types = {
            'id': str,
            'created_at': float,
            'event': str,
            'id': str,
            'interaction_id': str,
            'user': InteractionsInteractionsInnerUser
        }

        self.attribute_map = {
            'id': '_id',
            'created_at': 'created_at',
            'event': 'event',
            'id': 'id',
            'interaction_id': 'interaction_id',
            'user': 'user'
        }

        self._id = id
        self._created_at = created_at
        self._event = event
        self._id = id
        self._interaction_id = interaction_id
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InteractionsInteractionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The interactions_interactions_inner of this InteractionsInteractionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this InteractionsInteractionsInner.


        :return: The id of this InteractionsInteractionsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InteractionsInteractionsInner.


        :param id: The id of this InteractionsInteractionsInner.
        :type id: str
        """

        self._id = id

    @property
    def created_at(self):
        """Gets the created_at of this InteractionsInteractionsInner.


        :return: The created_at of this InteractionsInteractionsInner.
        :rtype: float
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InteractionsInteractionsInner.


        :param created_at: The created_at of this InteractionsInteractionsInner.
        :type created_at: float
        """

        self._created_at = created_at

    @property
    def event(self):
        """Gets the event of this InteractionsInteractionsInner.


        :return: The event of this InteractionsInteractionsInner.
        :rtype: str
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this InteractionsInteractionsInner.


        :param event: The event of this InteractionsInteractionsInner.
        :type event: str
        """

        self._event = event

    @property
    def id(self):
        """Gets the id of this InteractionsInteractionsInner.


        :return: The id of this InteractionsInteractionsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InteractionsInteractionsInner.


        :param id: The id of this InteractionsInteractionsInner.
        :type id: str
        """

        self._id = id

    @property
    def interaction_id(self):
        """Gets the interaction_id of this InteractionsInteractionsInner.


        :return: The interaction_id of this InteractionsInteractionsInner.
        :rtype: str
        """
        return self._interaction_id

    @interaction_id.setter
    def interaction_id(self, interaction_id):
        """Sets the interaction_id of this InteractionsInteractionsInner.


        :param interaction_id: The interaction_id of this InteractionsInteractionsInner.
        :type interaction_id: str
        """

        self._interaction_id = interaction_id

    @property
    def user(self):
        """Gets the user of this InteractionsInteractionsInner.


        :return: The user of this InteractionsInteractionsInner.
        :rtype: InteractionsInteractionsInnerUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this InteractionsInteractionsInner.


        :param user: The user of this InteractionsInteractionsInner.
        :type user: InteractionsInteractionsInnerUser
        """

        self._user = user
