# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.profile_schedules_inner import ProfileSchedulesInner
from openapi_server.models.profile_statistics import ProfileStatistics
from openapi_server import util


class Profile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar: str=None, created_at: float=None, default: bool=None, formatted_username: str=None, id: str=None, schedules: List[ProfileSchedulesInner]=None, service: str=None, service_id: str=None, service_username: str=None, statistics: ProfileStatistics=None, team_members: List[str]=None, timezone: str=None, user_id: str=None):
        """Profile - a model defined in OpenAPI

        :param avatar: The avatar of this Profile.
        :param created_at: The created_at of this Profile.
        :param default: The default of this Profile.
        :param formatted_username: The formatted_username of this Profile.
        :param id: The id of this Profile.
        :param schedules: The schedules of this Profile.
        :param service: The service of this Profile.
        :param service_id: The service_id of this Profile.
        :param service_username: The service_username of this Profile.
        :param statistics: The statistics of this Profile.
        :param team_members: The team_members of this Profile.
        :param timezone: The timezone of this Profile.
        :param user_id: The user_id of this Profile.
        """
        self.openapi_types = {
            'avatar': str,
            'created_at': float,
            'default': bool,
            'formatted_username': str,
            'id': str,
            'schedules': List[ProfileSchedulesInner],
            'service': str,
            'service_id': str,
            'service_username': str,
            'statistics': ProfileStatistics,
            'team_members': List[str],
            'timezone': str,
            'user_id': str
        }

        self.attribute_map = {
            'avatar': 'avatar',
            'created_at': 'created_at',
            'default': 'default',
            'formatted_username': 'formatted_username',
            'id': 'id',
            'schedules': 'schedules',
            'service': 'service',
            'service_id': 'service_id',
            'service_username': 'service_username',
            'statistics': 'statistics',
            'team_members': 'team_members',
            'timezone': 'timezone',
            'user_id': 'user_id'
        }

        self._avatar = avatar
        self._created_at = created_at
        self._default = default
        self._formatted_username = formatted_username
        self._id = id
        self._schedules = schedules
        self._service = service
        self._service_id = service_id
        self._service_username = service_username
        self._statistics = statistics
        self._team_members = team_members
        self._timezone = timezone
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Profile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The profile of this Profile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar(self):
        """Gets the avatar of this Profile.


        :return: The avatar of this Profile.
        :rtype: str
        """
        return self._avatar

    @avatar.setter
    def avatar(self, avatar):
        """Sets the avatar of this Profile.


        :param avatar: The avatar of this Profile.
        :type avatar: str
        """

        self._avatar = avatar

    @property
    def created_at(self):
        """Gets the created_at of this Profile.


        :return: The created_at of this Profile.
        :rtype: float
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Profile.


        :param created_at: The created_at of this Profile.
        :type created_at: float
        """

        self._created_at = created_at

    @property
    def default(self):
        """Gets the default of this Profile.


        :return: The default of this Profile.
        :rtype: bool
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this Profile.


        :param default: The default of this Profile.
        :type default: bool
        """

        self._default = default

    @property
    def formatted_username(self):
        """Gets the formatted_username of this Profile.


        :return: The formatted_username of this Profile.
        :rtype: str
        """
        return self._formatted_username

    @formatted_username.setter
    def formatted_username(self, formatted_username):
        """Sets the formatted_username of this Profile.


        :param formatted_username: The formatted_username of this Profile.
        :type formatted_username: str
        """

        self._formatted_username = formatted_username

    @property
    def id(self):
        """Gets the id of this Profile.


        :return: The id of this Profile.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Profile.


        :param id: The id of this Profile.
        :type id: str
        """

        self._id = id

    @property
    def schedules(self):
        """Gets the schedules of this Profile.


        :return: The schedules of this Profile.
        :rtype: List[ProfileSchedulesInner]
        """
        return self._schedules

    @schedules.setter
    def schedules(self, schedules):
        """Sets the schedules of this Profile.


        :param schedules: The schedules of this Profile.
        :type schedules: List[ProfileSchedulesInner]
        """

        self._schedules = schedules

    @property
    def service(self):
        """Gets the service of this Profile.


        :return: The service of this Profile.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this Profile.


        :param service: The service of this Profile.
        :type service: str
        """

        self._service = service

    @property
    def service_id(self):
        """Gets the service_id of this Profile.


        :return: The service_id of this Profile.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this Profile.


        :param service_id: The service_id of this Profile.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def service_username(self):
        """Gets the service_username of this Profile.


        :return: The service_username of this Profile.
        :rtype: str
        """
        return self._service_username

    @service_username.setter
    def service_username(self, service_username):
        """Sets the service_username of this Profile.


        :param service_username: The service_username of this Profile.
        :type service_username: str
        """

        self._service_username = service_username

    @property
    def statistics(self):
        """Gets the statistics of this Profile.


        :return: The statistics of this Profile.
        :rtype: ProfileStatistics
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics):
        """Sets the statistics of this Profile.


        :param statistics: The statistics of this Profile.
        :type statistics: ProfileStatistics
        """

        self._statistics = statistics

    @property
    def team_members(self):
        """Gets the team_members of this Profile.


        :return: The team_members of this Profile.
        :rtype: List[str]
        """
        return self._team_members

    @team_members.setter
    def team_members(self, team_members):
        """Sets the team_members of this Profile.


        :param team_members: The team_members of this Profile.
        :type team_members: List[str]
        """

        self._team_members = team_members

    @property
    def timezone(self):
        """Gets the timezone of this Profile.


        :return: The timezone of this Profile.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this Profile.


        :param timezone: The timezone of this Profile.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def user_id(self):
        """Gets the user_id of this Profile.


        :return: The user_id of this Profile.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Profile.


        :param user_id: The user_id of this Profile.
        :type user_id: str
        """

        self._user_id = user_id
