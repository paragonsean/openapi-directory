/*
 * Bufferapp
 * Social media management for marketers and agencies
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:44.110075-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateStatistics {
  public static final String SERIALIZED_NAME_CLICKS = "clicks";
  @SerializedName(SERIALIZED_NAME_CLICKS)
  private BigDecimal clicks;

  public static final String SERIALIZED_NAME_FAVORITES = "favorites";
  @SerializedName(SERIALIZED_NAME_FAVORITES)
  private BigDecimal favorites;

  public static final String SERIALIZED_NAME_MENTIONS = "mentions";
  @SerializedName(SERIALIZED_NAME_MENTIONS)
  private BigDecimal mentions;

  public static final String SERIALIZED_NAME_REACH = "reach";
  @SerializedName(SERIALIZED_NAME_REACH)
  private BigDecimal reach;

  public static final String SERIALIZED_NAME_RETWEETS = "retweets";
  @SerializedName(SERIALIZED_NAME_RETWEETS)
  private BigDecimal retweets;

  public UpdateStatistics() {
  }

  public UpdateStatistics clicks(BigDecimal clicks) {
    this.clicks = clicks;
    return this;
  }

  /**
   * Get clicks
   * @return clicks
   */
  @javax.annotation.Nullable
  public BigDecimal getClicks() {
    return clicks;
  }

  public void setClicks(BigDecimal clicks) {
    this.clicks = clicks;
  }


  public UpdateStatistics favorites(BigDecimal favorites) {
    this.favorites = favorites;
    return this;
  }

  /**
   * Get favorites
   * @return favorites
   */
  @javax.annotation.Nullable
  public BigDecimal getFavorites() {
    return favorites;
  }

  public void setFavorites(BigDecimal favorites) {
    this.favorites = favorites;
  }


  public UpdateStatistics mentions(BigDecimal mentions) {
    this.mentions = mentions;
    return this;
  }

  /**
   * Get mentions
   * @return mentions
   */
  @javax.annotation.Nullable
  public BigDecimal getMentions() {
    return mentions;
  }

  public void setMentions(BigDecimal mentions) {
    this.mentions = mentions;
  }


  public UpdateStatistics reach(BigDecimal reach) {
    this.reach = reach;
    return this;
  }

  /**
   * Get reach
   * @return reach
   */
  @javax.annotation.Nullable
  public BigDecimal getReach() {
    return reach;
  }

  public void setReach(BigDecimal reach) {
    this.reach = reach;
  }


  public UpdateStatistics retweets(BigDecimal retweets) {
    this.retweets = retweets;
    return this;
  }

  /**
   * Get retweets
   * @return retweets
   */
  @javax.annotation.Nullable
  public BigDecimal getRetweets() {
    return retweets;
  }

  public void setRetweets(BigDecimal retweets) {
    this.retweets = retweets;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateStatistics updateStatistics = (UpdateStatistics) o;
    return Objects.equals(this.clicks, updateStatistics.clicks) &&
        Objects.equals(this.favorites, updateStatistics.favorites) &&
        Objects.equals(this.mentions, updateStatistics.mentions) &&
        Objects.equals(this.reach, updateStatistics.reach) &&
        Objects.equals(this.retweets, updateStatistics.retweets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clicks, favorites, mentions, reach, retweets);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateStatistics {\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    favorites: ").append(toIndentedString(favorites)).append("\n");
    sb.append("    mentions: ").append(toIndentedString(mentions)).append("\n");
    sb.append("    reach: ").append(toIndentedString(reach)).append("\n");
    sb.append("    retweets: ").append(toIndentedString(retweets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clicks");
    openapiFields.add("favorites");
    openapiFields.add("mentions");
    openapiFields.add("reach");
    openapiFields.add("retweets");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateStatistics is not found in the empty JSON string", UpdateStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateStatistics>() {
           @Override
           public void write(JsonWriter out, UpdateStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateStatistics
   * @throws IOException if the JSON string is invalid with respect to UpdateStatistics
   */
  public static UpdateStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateStatistics.class);
  }

  /**
   * Convert an instance of UpdateStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

